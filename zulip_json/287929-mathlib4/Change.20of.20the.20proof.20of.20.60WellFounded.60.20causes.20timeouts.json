[
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/5581\">#5581</a></p>\n<p>Diffs: <a href=\"https://github.com/leanprover-community/mathlib4/compare/FR_ordinal_golf_timeout...FR_ordinal_golf\">https://github.com/leanprover-community/mathlib4/compare/FR_ordinal_golf_timeout...FR_ordinal_golf</a></p>",
        "id": 376670923,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1689774125
    },
    {
        "content": "<p>Also it seems like there wouldn't be any problem if it was proven by <code>sorry</code>.</p>",
        "id": 376672827,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1689774516
    },
    {
        "content": "<p>This is fallout from <a href=\"https://github.com/leanprover/lean4/commit/9df2f6b0c9686542b05c0ed2fc59916ef6c60f93\">https://github.com/leanprover/lean4/commit/9df2f6b0c9686542b05c0ed2fc59916ef6c60f93</a>, where apparently we've started to reduce theorems again.</p>",
        "id": 376802649,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1689805528
    },
    {
        "content": "<p>You can fix this by preventing reduction in the straightforward way:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">lt_wf</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">WellFounded</span> <span class=\"n\">Ordinal</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">True</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">True</span> <span class=\"bp\">∨</span> <span class=\"n\">True</span><span class=\"o\">)</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"bp\">&lt;|</span>\n  <span class=\"n\">wellFounded_iff_wellFounded_subrel.mpr</span> <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"n\">induction_on</span> <span class=\"k\">fun</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">wo</span><span class=\"o\">⟩</span> <span class=\"bp\">↦</span>\n    <span class=\"n\">RelHomClass.wellFounded</span> <span class=\"o\">(</span><span class=\"n\">typein.principalSeg</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">subrelIso</span> <span class=\"n\">wo.wf</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 376802747,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1689805565
    }
]