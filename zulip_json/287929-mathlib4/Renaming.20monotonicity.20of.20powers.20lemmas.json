[
    {
        "content": "<p>This is an announcement that <a href=\"https://github.com/leanprover-community/mathlib4/pull/9095\">#9095</a> landed. This is a rather disruptive PR since it renamed 58 lemmas that are among the most used in mathlib. If you have a project depending on mathlib, you should check how the lemmas were renamed to adapt.</p>",
        "id": 408559345,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702888026
    },
    {
        "content": "<p>The lemmas in question are all about monotonicity of <code>(a ^ ·)</code> and <code>(· ^ n)</code>. The full list of renames by file is</p>\n<h3><code>Algebra.GroupPower.Order</code></h3>\n<ul>\n<li><code>pow_mono</code> → <code>pow_right_mono</code></li>\n<li><code>pow_le_pow</code> → <code>pow_le_pow_right</code></li>\n<li><code>pow_le_pow_of_le_left</code> → <code>pow_le_pow_left</code></li>\n<li><code>pow_lt_pow_of_lt_left</code> → <code>pow_lt_pow_left</code></li>\n<li><code>strictMonoOn_pow</code> → <code>pow_left_strictMonoOn</code></li>\n<li><code>pow_strictMono_right</code> → <code>pow_right_strictMono</code></li>\n<li><code>pow_lt_pow</code> → <code>pow_lt_pow_right</code></li>\n<li><code>pow_lt_pow_iff</code> → <code>pow_lt_pow_iff_right</code></li>\n<li><code>pow_le_pow_iff</code> → <code>pow_le_pow_iff_right</code></li>\n<li><code>self_lt_pow</code> → <code>lt_self_pow</code></li>\n<li><code>strictAnti_pow</code> → <code>pow_right_strictAnti</code></li>\n<li><code>pow_lt_pow_iff_of_lt_one</code> → <code>pow_lt_pow_iff_right_of_lt_one</code></li>\n<li><code>pow_lt_pow_of_lt_one</code> → <code>pow_lt_pow_right_of_lt_one</code></li>\n<li><code>lt_of_pow_lt_pow</code> → <code>lt_of_pow_lt_pow_left</code></li>\n<li><code>le_of_pow_le_pow</code> → <code>le_of_pow_le_pow_left</code></li>\n<li><code>pow_lt_pow₀</code> → <code>pow_lt_pow_right₀</code></li>\n</ul>\n<h3><code>Algebra.GroupPower.CovariantClass</code></h3>\n<ul>\n<li><code>pow_le_pow_of_le_left'</code> → <code>pow_le_pow_left'</code></li>\n<li><code>nsmul_le_nsmul_of_le_right</code> → <code>nsmul_le_nsmul_right</code></li>\n<li><code>pow_lt_pow'</code> → <code>pow_lt_pow_right'</code></li>\n<li><code>nsmul_lt_nsmul</code> → <code>nsmul_lt_nsmul_left</code></li>\n<li><code>pow_strictMono_left</code> → <code>pow_right_strictMono'</code></li>\n<li><code>nsmul_strictMono_right</code> → <code>nsmul_left_strictMono</code></li>\n<li><code>StrictMono.pow_right'</code> → <code>StrictMono.pow_const</code></li>\n<li><code>StrictMono.nsmul_left</code> → <code>StrictMono.const_nsmul</code></li>\n<li><code>pow_strictMono_right'</code> → <code>pow_left_strictMono</code></li>\n<li><code>nsmul_strictMono_left</code> → <code>nsmul_right_strictMono</code></li>\n<li><code>Monotone.pow_right</code> → <code>Monotone.pow_const</code></li>\n<li><code>Monotone.nsmul_left</code> → <code>Monotone.const_nsmul</code></li>\n<li><code>lt_of_pow_lt_pow'</code> → <code>lt_of_pow_lt_pow_left'</code></li>\n<li><code>lt_of_nsmul_lt_nsmul</code> → <code>lt_of_nsmul_lt_nsmul_right</code></li>\n<li><code>pow_le_pow'</code> → <code>pow_le_pow_right'</code></li>\n<li><code>nsmul_le_nsmul</code> → <code>nsmul_le_nsmul_left</code></li>\n<li><code>pow_le_pow_of_le_one'</code> → <code>pow_le_pow_right_of_le_one'</code></li>\n<li><code>nsmul_le_nsmul_of_nonpos</code> → <code>nsmul_le_nsmul_left_of_nonpos</code></li>\n<li><code>le_of_pow_le_pow'</code> → <code>le_of_pow_le_pow_left'</code></li>\n<li><code>le_of_nsmul_le_nsmul'</code> → <code>le_of_nsmul_le_nsmul_right'</code></li>\n<li><code>pow_le_pow_iff'</code> → <code>pow_le_pow_iff_right'</code></li>\n<li><code>nsmul_le_nsmul_iff</code> → <code>nsmul_le_nsmul_iff_left</code></li>\n<li><code>pow_lt_pow_iff'</code> → <code>pow_lt_pow_iff_right'</code></li>\n<li><code>nsmul_lt_nsmul_iff</code> → <code>nsmul_lt_nsmul_iff_left</code></li>\n</ul>\n<h3><code>Data.Nat.Pow</code></h3>\n<ul>\n<li><code>Nat.pow_lt_pow_of_lt_left</code> → <code>Nat.pow_lt_pow_left</code></li>\n<li><code>Nat.pow_le_iff_le_left</code> → <code>Nat.pow_le_pow_iff_left</code></li>\n<li><code>Nat.pow_lt_iff_lt_left</code> → <code>Nat.pow_lt_pow_iff_left</code></li>\n</ul>",
        "id": 408559468,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702888083
    },
    {
        "content": "<p>On top of that, the following lemmas were removed:</p>\n<ul>\n<li><code>self_le_pow</code> was a duplicate of <code>le_self_pow</code>.</li>\n<li><code>Nat.pow_lt_pow_of_lt_right</code> is defeq to <code>pow_lt_pow_right</code>.</li>\n<li><code>Nat.pow_right_strictMono</code> is defeq to <code>pow_right_strictMono</code>.</li>\n<li><code>Nat.pow_le_iff_le_right</code> is defeq to <code>pow_le_pow_iff_right</code>.</li>\n<li><code>Nat.pow_lt_iff_lt_right</code> is defeq to <code>pow_lt_pow_iff_right</code>.</li>\n</ul>",
        "id": 408559569,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702888111
    },
    {
        "content": "<p>And finally:</p>\n<ul>\n<li>Some lemma assumptions have been turned from <code>0 &lt; n</code> or <code>1 ≤ n</code> to <code>n ≠ 0</code>.</li>\n<li>A few <code>Nat</code> lemmas have been <code>protected</code>.</li>\n</ul>",
        "id": 408559616,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702888131
    },
    {
        "content": "<p>There are other changes that are non-breaking that you can look up in <a href=\"https://github.com/leanprover-community/mathlib4/pull/9095\">#9095</a> if you're interested.</p>",
        "id": 408559739,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702888178
    },
    {
        "content": "<p>I should remind you that the information of what lemma has been changed in what PR is available in the <a href=\"https://mathlib-changelog.org/\">#changelog</a>. The changelog does not however contain lists of renames.</p>",
        "id": 408560097,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702888319
    },
    {
        "content": "<p>Thanks for clearly documenting the changes!</p>",
        "id": 408560659,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1702888549
    }
]