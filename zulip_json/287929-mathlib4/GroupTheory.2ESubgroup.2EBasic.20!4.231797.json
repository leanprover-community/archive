[
    {
        "content": "<p>This PR is at the top of <a href=\"https://leanprover-community.github.io/mathlib-port-status/old\">#port-status</a>. It now has only 4 errors left.</p>",
        "id": 323520400,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674661811
    },
    {
        "content": "<p>But I don't know how to fix those four.</p>",
        "id": 323520425,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674661819
    },
    {
        "content": "<p>I'm taking a look</p>",
        "id": 323521999,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674662225
    },
    {
        "content": "<p>The first error is because for some reason <code>⨅ (N : Subgroup G) (_ : Normal N) (_ : s ⊆ N), N</code> doesn't work, but <code>⨅ (N : Subgroup G) (_hN : Normal N) (_hs : s ⊆ N), N</code> does (i.e. you cannot use underscores). For the experts, the error is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elaboration</span> <span class=\"n\">function</span> <span class=\"n\">for</span> <span class=\"bp\">'</span><span class=\"n\">Lean.Parser.Command.</span><span class=\"bp\">«</span><span class=\"n\">termExpand_binders</span><span class=\"bp\">%</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"bp\">=&gt;</span><span class=\"n\">_</span><span class=\"o\">)</span><span class=\"n\">_</span><span class=\"o\">,</span><span class=\"n\">_</span><span class=\"bp\">»'</span> <span class=\"n\">has</span> <span class=\"n\">not</span> <span class=\"n\">been</span> <span class=\"n\">implemented</span>\n  <span class=\"n\">expand_binders</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"bp\">✝</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">inf</span><span class=\"bp\">ᵢ✝</span> <span class=\"n\">f</span><span class=\"bp\">✝</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">Normal</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">_hs</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">N</span><span class=\"o\">),</span> <span class=\"n\">N</span>\n</code></pre></div>",
        "id": 323522743,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674662402
    },
    {
        "content": "<p>The other errors were the same as this one. The file is now error-free.</p>",
        "id": 323523780,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674662639
    },
    {
        "content": "<p>There's still a bunch of linter errors. Shall I go through them?</p>",
        "id": 323524016,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674662690
    },
    {
        "content": "<p>Yes please!</p>",
        "id": 323524585,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674662819
    },
    {
        "content": "<p>I'm on my way back home. I won't touch the file for an hour</p>",
        "id": 323524716,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674662847
    },
    {
        "content": "<p>Thanks for fixing those errors. I found them quite mysterious.</p>",
        "id": 323524783,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674662862
    },
    {
        "content": "<p>Should this be reported as a lean4 issue?</p>",
        "id": 323527669,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1674663607
    },
    {
        "content": "<p>Not sure, let's wait for one of the experts to join in. It might be an issue with <code>notation3</code> or something similar.</p>",
        "id": 323530939,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674664401
    },
    {
        "content": "<p>Would be nice to have another review here - it seems like it would unblock quite a few files</p>",
        "id": 323672571,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674725960
    }
]