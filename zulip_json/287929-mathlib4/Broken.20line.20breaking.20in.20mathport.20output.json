[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib3port/commit/6797a637bad89c884a1ea52371e5256b851945f5\">https://github.com/leanprover-community/mathlib3port/commit/6797a637bad89c884a1ea52371e5256b851945f5</a> improved output in a lot of places, but it also started using syntax like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[ext]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">cokernel_π_imageSubobject_ext</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">ModuleCat.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">L</span> <span class=\"bp\">⟶</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">HasImage</span> <span class=\"n\">f</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">imageSubobject</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ModuleCat.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">⟶</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">HasCokernel</span> <span class=\"n\">g</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">N</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">L</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">factorThruImageSubobject</span> <span class=\"n\">f</span> <span class=\"n\">l</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">cokernel.π</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">cokernel.π</span> <span class=\"n\">g</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">subst</span> <span class=\"n\">w</span><span class=\"bp\">;</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>\n<p>which doesn't work. Not sure what caused this or who should look at it</p>",
        "id": 362389507,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1685523538
    }
]