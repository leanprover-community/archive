[
    {
        "content": "<p>LinearAlgebra.Determinant <a href=\"https://github.com/leanprover-community/mathlib4/pull/3694\">!4#3694</a> is experiencing a strange interaction between the <code>simpNF</code> linter and <code>etaExperiment</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"> The `simpNF` linter reports:</span>\n<span class=\"cm\">SOME SIMP LEMMAS ARE NOT IN SIMP-NORMAL FORM.</span>\n<span class=\"cm\">see note [simp-normal form] for tips how to debug this.</span>\n<span class=\"cm\">https://leanprover-community.github.io/mathlib_docs/notes.html#simp-normal%20form -/</span>\n<span class=\"c1\">-- Mathlib.LinearAlgebra.Determinant</span>\n<span class=\"k\">#check</span> <span class=\"n\">LinearEquiv.det_symm.</span><span class=\"o\">{</span><span class=\"n\">u_2</span><span class=\"o\">,</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"c\">/-</span><span class=\"cm\"> LINTER FAILED:</span>\n<span class=\"cm\">simplify fails on left-hand side:</span>\n<span class=\"cm\">application type mismatch</span>\n<span class=\"cm\">  @LinearEquiv R R Ring.toSemiring Ring.toSemiring (RingHom.id R)</span>\n<span class=\"cm\">argument</span>\n<span class=\"cm\">  RingHom.id R</span>\n<span class=\"cm\">has type</span>\n<span class=\"cm\">  @RingHom R R NonAssocRing.toNonAssocSemiring NonAssocRing.toNonAssocSemiring : Type u_1</span>\n<span class=\"cm\">but is expected to have type</span>\n<span class=\"cm\">  @RingHom R R Semiring.toNonAssocSemiring Semiring.toNonAssocSemiring : Type u_1 -/</span>\n</code></pre></div>\n<p>Does anyone have an idea what we should be doing here? Do we need to turn on <code>etaExperiment</code> during linting?!</p>",
        "id": 354774557,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682904144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/LinearAlgebra.2EDeterminant.20!4.233694/near/354774557\">said</a>:<br>\nDo we need to turn on <code>etaExperiment</code> during linting<del>?!</del></p>\n<p>Yes, there should be a way to tell the linter that eta should be used for a particular simp lemma</p>",
        "id": 354788824,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1682915204
    },
    {
        "content": "<p>Is the linter re-elaborating the syntax somehow? The error message is very strange.</p>",
        "id": 354812091,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682928030
    },
    {
        "content": "<p>Okay, we've ended up merged this with a <code>@[nolint]</code> to dodge this issue. :-(</p>",
        "id": 355096563,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683021999
    },
    {
        "content": "<p>I am both surprised and concerned that you didn't investigate this further, even if you deem <code>nolint simpNF</code> good enough for now</p>",
        "id": 355287726,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683072801
    },
    {
        "content": "<p>The idea in \"good enough for now\" is that it removes the urgency to investigate the issue!</p>",
        "id": 355287827,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683072855
    },
    {
        "content": "<p>No, it's not re-elaborating anything. It's <code>simp</code> itself (run by the linter, with etaExperiment turned off) that is constructing a term that doesn't typecheck without etaExperiment.</p>",
        "id": 355290592,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683074399
    },
    {
        "content": "<p>I'm not really sure what more there is to investigate here.</p>",
        "id": 355290710,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683074445
    },
    {
        "content": "<p>There are many more failures of this kind at <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/4864919793/jobs/8674551592?pr=3651\">https://github.com/leanprover-community/mathlib4/actions/runs/4864919793/jobs/8674551592?pr=3651</a></p>",
        "id": 355291908,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683075103
    },
    {
        "content": "<p>Which is why I said, it would be desirable to have a simp option to use etaExperiment when type-checking the constructed term</p>",
        "id": 355293462,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683076069
    }
]