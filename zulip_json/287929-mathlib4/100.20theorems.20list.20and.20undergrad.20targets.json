[
    {
        "content": "<p>Shortly these will be in mathlib master; but right now, <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/blob/86c1d90e3cbe1b5a2cfcc78b5e2e41886c4b83ab/make_site.py#L285\">the website</a> expects these files to be duplicated to the mathlib docs (presumably as an attempt to keep things in sync).</p>\n<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>, can you setup CI to host the files there? In the long run it might be better for doc-gen4 to natively consume those files and generate special pages, but that's fine to punt for another time.</p>",
        "id": 377357654,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689956665
    },
    {
        "content": "<p>Just to make sure you want me to put the yaml file at mathlib4_docs/... ?</p>",
        "id": 377361423,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1689957419
    },
    {
        "content": "<p>Yes, if you agree that that's reasonable</p>",
        "id": 377362040,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689957524
    },
    {
        "content": "<p>Sure, which PR is going to add the yaml to mathlib4? The change should be pretty easy you basically want to just copy it in here: <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/scripts/deploy_docs.sh#L42\">https://github.com/leanprover-community/mathlib4/blob/master/scripts/deploy_docs.sh#L42</a></p>",
        "id": 377362727,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1689957682
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6026\">#6026</a>: the file is already in <a href=\"https://github.com/leanprover-community/mathlib4/tree/staging\">branch#staging</a></p>",
        "id": 377363397,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689957837
    },
    {
        "content": "<p>AH excellent, I'll prepare a PR</p>",
        "id": 377363698,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1689957903
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6043\">https://github.com/leanprover-community/mathlib4/pull/6043</a> this should do the trick</p>",
        "id": 377364837,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1689958163
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 377365057,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689958209
    },
    {
        "content": "<p>It looks like we also need a Lean4 version of <a href=\"https://leanprover-community.github.io/mathlib_docs/export_db.json.gz\">https://leanprover-community.github.io/mathlib_docs/export_db.json.gz</a> to get <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/338\">https://github.com/leanprover-community/leanprover-community.github.io/pull/338</a> passing</p>",
        "id": 378374094,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690272372
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>, it looks like the file in question is actually generated <a href=\"https://github.com/leanprover-community/doc-gen/blob/097cc0926bb86982318cabde7e7cc7d5a4c3a9e4/print_docs.py#L764-L789\">by python code</a> in doc-gen; did doc-gen4 port this code at all?</p>",
        "id": 382344199,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691323411
    },
    {
        "content": "<p>No it didn't exactly seem necessary at the time since I was working under the assumption that it is only required to generate  the docs with the python jinja2 stuff which was fully replaced right.</p>",
        "id": 382344480,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691323485
    },
    {
        "content": "<p>It's used by python code on the main website</p>",
        "id": 382345232,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691323662
    },
    {
        "content": "<p>I see. You can get a similar style json file here: <a href=\"https://leanprover-community.github.io/mathlib4_docs//declarations/declaration-data.bmp\">https://leanprover-community.github.io/mathlib4_docs//declarations/declaration-data.bmp</a> (it is BMP because somewhere in the old doc-gen it said that makes github do  compression  while json does not)  is that enough info for your script or do we need additional fields from the old one?</p>\n<div class=\"message_inline_image\"><a href=\"https://leanprover-community.github.io/mathlib4_docs//declarations/declaration-data.bmp\"><img src=\"https://uploads.zulipusercontent.net/e21cdcae6a3bcc99b194bd0ddff33309ac83acc3/68747470733a2f2f6c65616e70726f7665722d636f6d6d756e6974792e6769746875622e696f2f6d6174686c6962345f646f63732f2f6465636c61726174696f6e732f6465636c61726174696f6e2d646174612e626d70\"></a></div>",
        "id": 382345809,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691323820
    },
    {
        "content": "<p>The <code>decl_header_html</code> field is particularly important as it means the website doesn't have to render things itself</p>",
        "id": 382346086,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691323919
    },
    {
        "content": "<p>(I'm aware of the BMP hack, I introduced it!)</p>",
        "id": 382346207,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691323945
    },
    {
        "content": "<p>Okay decl_header_html is something I would definitely not want to be in this file because it get loaded and parsed by all  doc-gen4 pages so  I  guess I'll need to build a second json file?</p>",
        "id": 382346758,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691324111
    },
    {
        "content": "<p>Hm, I'll just check first if it is doable in one file without significant regressions, I'll be back!</p>",
        "id": 382352057,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691325524
    },
    {
        "content": "<p>Okay I implemented the feature now and it blew up declaration-data.bmp from 7.5M to 28M on std4 alone /o\\</p>",
        "id": 382359573,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691327582
    },
    {
        "content": "<p>I think a separate file makes a lot of sense</p>",
        "id": 382359941,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691327721
    },
    {
        "content": "<p>This file is going to be loaded once per day when the site rebuilds, not every few minutes by every user</p>",
        "id": 382359996,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691327742
    },
    {
        "content": "<p>Okay I'll just put one next to declaration-data.bmp then</p>",
        "id": 382360095,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691327765
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 382360164,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691327781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> okay I pushed a change that adds two things:</p>\n<ol>\n<li>You can now also get line info from the ordinary declaration-data.bmp (although the format is not fully compatible with the original python one but I have faith you will be able to deal with that  :P)</li>\n<li>You get a second file next to declaration-data.bmp called header-data.bmp that contains a key value map from decl name to the header HTML</li>\n</ol>\n<p>I wanted to trigger a build for mathlib4 but I'm seeing right now that something is failing there so I'll investigate that one first. If you want to experiment in the meantime, building docs for std4 is very quick and will get you same format files.</p>",
        "id": 382365339,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691329200
    },
    {
        "content": "<p>Okay regarding the doc-gen failure <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> I saw that you have replaced the human readable names in lake-packages with hash values now? There is a minimal issue with this in mathlib4's CI namely that we have this line in a script: <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/scripts/deploy_docs.sh#L30-L32\">https://github.com/leanprover-community/mathlib4/blob/master/scripts/deploy_docs.sh#L30-L32</a> that tries to obtain the git hash of doc-gen4 that was checked out. Is there a  nice way to get the path? Or do you recommend we instead try to parse the lockfile with something like jq in this script?</p>",
        "id": 382374693,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691331959
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> This is a bug I accidentally introduced while testing another change (I forgot to revert some code) that I fixed after the 08-03 nightly. I mention this bug in the bump PR which introduced the bug, but it seems as though mathlib has not bumped Lean again yet.</p>",
        "id": 382376197,
        "sender_full_name": "Mac Malone",
        "timestamp": 1691332386
    },
    {
        "content": "<p>Ah so I can just sit it out^^ Excellent</p>",
        "id": 382376253,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691332404
    },
    {
        "content": "<p>Okay we sat this out, slight issue now</p>",
        "id": 383061339,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691523528
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">File</span> <span class=\"n\">docs</span><span class=\"bp\">/</span><span class=\"n\">declarations</span><span class=\"bp\">/</span><span class=\"n\">declaration</span><span class=\"bp\">-</span><span class=\"n\">data.bmp</span> <span class=\"n\">is</span> <span class=\"mi\">75</span><span class=\"bp\">.</span><span class=\"mi\">10</span> <span class=\"n\">MB</span><span class=\"bp\">;</span> <span class=\"n\">this</span> <span class=\"n\">is</span> <span class=\"n\">larger</span> <span class=\"n\">than</span> <span class=\"n\">GitHub's</span> <span class=\"n\">recommended</span> <span class=\"n\">maximum</span> <span class=\"n\">file</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"mi\">50</span><span class=\"bp\">.</span><span class=\"mi\">00</span> <span class=\"n\">MB</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Trace</span><span class=\"o\">:</span> <span class=\"mi\">11</span><span class=\"n\">d69bbd352a395b679a8a8dc9c4ddb245f9df34cc6fd56eb0e2995a7594245f</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">See</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">gh.io</span><span class=\"bp\">/</span><span class=\"n\">lfs</span> <span class=\"n\">for</span> <span class=\"n\">more</span> <span class=\"n\">information.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">File</span> <span class=\"n\">docs</span><span class=\"bp\">/</span><span class=\"n\">declarations</span><span class=\"bp\">/</span><span class=\"n\">header</span><span class=\"bp\">-</span><span class=\"n\">data.bmp</span> <span class=\"n\">is</span> <span class=\"mi\">379</span><span class=\"bp\">.</span><span class=\"mi\">73</span> <span class=\"n\">MB</span><span class=\"bp\">;</span> <span class=\"n\">this</span> <span class=\"n\">exceeds</span> <span class=\"n\">GitHub's</span> <span class=\"n\">file</span> <span class=\"n\">size</span> <span class=\"n\">limit</span> <span class=\"n\">of</span> <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">00</span> <span class=\"n\">MB</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">GH001</span><span class=\"o\">:</span> <span class=\"n\">Large</span> <span class=\"n\">files</span> <span class=\"n\">detected.</span> <span class=\"n\">You</span> <span class=\"n\">may</span> <span class=\"n\">want</span> <span class=\"n\">to</span> <span class=\"n\">try</span> <span class=\"n\">Git</span> <span class=\"n\">Large</span> <span class=\"n\">File</span> <span class=\"n\">Storage</span> <span class=\"bp\">-</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">git</span><span class=\"bp\">-</span><span class=\"n\">lfs.github.com.</span>\n<span class=\"n\">To</span> <span class=\"n\">github.com</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4_docs.git</span>\n <span class=\"bp\">!</span> <span class=\"o\">[</span><span class=\"n\">remote</span> <span class=\"n\">rejected</span><span class=\"o\">]</span> <span class=\"n\">HEAD</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">master</span> <span class=\"o\">(</span><span class=\"n\">pre</span><span class=\"bp\">-</span><span class=\"n\">receive</span> <span class=\"n\">hook</span> <span class=\"n\">declined</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">push</span> <span class=\"n\">some</span> <span class=\"n\">refs</span> <span class=\"n\">to</span> <span class=\"bp\">'</span><span class=\"n\">github.com</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4_docs.git'</span>\n</code></pre></div>",
        "id": 383061378,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691523541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> so pre-rendering all decl headers is <em>kinda</em> big as it turns out :D</p>",
        "id": 383061455,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691523565
    },
    {
        "content": "<p>Ah, we solved this already for some other leanprover-community repos (such as the Lean 3 web editor)</p>",
        "id": 383066277,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691524917
    },
    {
        "content": "<p>The trick is to deploy the build straight to github pages, not commit it to a repo and deploy from there</p>",
        "id": 383066380,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691524935
    },
    {
        "content": "<p>I see, if this is already a solved thing can you port the fix to the deploy_docs script then?</p>",
        "id": 383067100,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691525141
    },
    {
        "content": "<p>We didn't ever do it for mathlib_docs, so it's not quite as simple as a direct port</p>",
        "id": 383067457,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525233
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib-port-status/blob/main/.github/workflows/pages.yml#L72-L78\">Here are the relevant lines</a> of <a href=\"https://leanprover-community.github.io/mathlib-port-status\">#port-dashboard</a></p>",
        "id": 383067604,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525272
    },
    {
        "content": "<p>The only real difficulty is that I don't know if you're allowed to have an action in one repo push to pages in another</p>",
        "id": 383067712,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525296
    },
    {
        "content": "<p><a href=\"https://github.com/actions/deploy-pages\">https://github.com/actions/deploy-pages</a> has a bit more info</p>",
        "id": 383067944,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525370
    },
    {
        "content": "<p>Where does the action which deploys the docs currently run?</p>",
        "id": 383068272,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525460
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4_docs/actions\">https://github.com/leanprover-community/mathlib4_docs/actions</a></p>",
        "id": 383068489,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691525519
    },
    {
        "content": "<p>Oh, perfect</p>",
        "id": 383068620,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525552
    },
    {
        "content": "<p>Then it's easy</p>",
        "id": 383068629,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525555
    },
    {
        "content": "<p>Wait, I asked the wrong question.. Where does the action that <em>pushes to that repo</em> currently run?</p>",
        "id": 383068807,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525613
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/blob/master/.github/workflows/mathlib4docs.yml#L39\">https://github.com/leanprover-community/mathlib4/blob/master/.github/workflows/mathlib4docs.yml#L39</a></p>",
        "id": 383069007,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691525665
    },
    {
        "content": "<p>So the easy solution is to move the docs to <code>leanprover-community.github.io/mathlib4</code> or <code>leanprover-community.github.io/mathlib4/docs</code></p>",
        "id": 383069636,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691525841
    },
    {
        "content": "<p>Sure that's possible, we should keep in mind to change docs# things if we do that</p>",
        "id": 383071773,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691526419
    },
    {
        "content": "<p>The alternative would be to have <code>mathlib4</code> trigger a build in <code>mathlib4_docs</code>, and then actually do the doc-gen build there</p>",
        "id": 383072440,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691526587
    },
    {
        "content": "<p>If you want to do that you'll have to get whoever is in charge of the chonky runners to let them run the builds on mathlib4_docs as well</p>",
        "id": 383072623,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691526622
    },
    {
        "content": "<p>Oh, is that why the build is in the mathlib4 repo?</p>",
        "id": 383072738,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691526656
    },
    {
        "content": "<p>I think I have the power to do that</p>",
        "id": 383072867,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691526699
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4_docs/tree/main\">https://github.com/leanprover-community/mathlib4_docs/tree/main</a> is my attempt</p>",
        "id": 383106806,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691540973
    },
    {
        "content": "<p>What's currently missing is the logic we had before to avoid wasting CI cycles rebuilding if nothing has changed</p>",
        "id": 383107143,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691541087
    },
    {
        "content": "<p>(the docs will be down until <a href=\"https://github.com/leanprover-community/mathlib4_docs/actions/runs/5803909282\">https://github.com/leanprover-community/mathlib4_docs/actions/runs/5803909282</a> completes)</p>",
        "id": 383120792,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691545942
    },
    {
        "content": "<p>It worked!</p>",
        "id": 383171244,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691565393
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6464\">#6464</a> disables the old build, to save 2.5hrs of now pointless CI time a day</p>",
        "id": 383187638,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691569359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/100.20theorems.20list.20and.20undergrad.20targets/near/383107143\">said</a>:</p>\n<blockquote>\n<p>What's currently missing is the logic we had before to avoid wasting CI cycles rebuilding if nothing has changed</p>\n</blockquote>\n<p>This logic seemed to fire a few times a week, so doesn't matter at all</p>",
        "id": 383187742,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691569383
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/338\">https://github.com/leanprover-community/leanprover-community.github.io/pull/338</a> should now be ready to go</p>",
        "id": 383243824,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691580610
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>, this is <a href=\"https://leanprover-community.github.io/100.html\">*almost* working</a>! Unfortunately, the header html (and <code>docLink</code> and <code>srcLink</code> fields, though these are easier to fix) contain only relative paths.</p>",
        "id": 383421709,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691616769
    },
    {
        "content": "<p>The relative links are actually on purpose so you can just shift the page around wherever without changing how the generated HTML is prefixed all the time through e.g. an argument so they work e.g. on your local file system (also after you move them around directories) etc. This is also how tools like rustdoc implement it so I would prefer to keep it that way.</p>\n<p>Could we maybe introduce a post processing step that takes the HTML headers and adds the proper prefix? It's just 100 theorems so that should be cheap right?</p>",
        "id": 383423429,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691617646
    },
    {
        "content": "<p>I guess another possibly more sensible option than generating a 300Mb database file to display only 100 theorems would be to have the website build invoke a small part of doc-gen for rendering those theorems with the desired base URL</p>",
        "id": 383423902,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691617832
    },
    {
        "content": "<p>But yes, a quick hack would be to run an HTML parser in the main website builder to swap out the hyperlinks.</p>",
        "id": 383424165,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691617948
    },
    {
        "content": "<p>actually</p>",
        "id": 383424397,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691618101
    },
    {
        "content": "<p>Hm no, I was thinking if there are some iframe magics possible that would do this automatically but I dont think so?</p>",
        "id": 383424450,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691618130
    }
]