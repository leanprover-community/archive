[
    {
        "content": "<p>Ooo, there are a <em>lot</em> of <code>nat_cast</code>s which should be <code>natCast</code>s spread around mathlib4. <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span> (A fair number of <code>int_cast</code>s, and some <code>rat_cast</code>s.)</p>",
        "id": 342519952,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679048806
    },
    {
        "content": "<p>In lemma names shouldn't they be <code>nat_cast</code>?</p>",
        "id": 342520923,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679049046
    },
    {
        "content": "<p>This is confusing because we have both <code>natCast</code> and <code>Nat.cast</code>; but the latter is the canonical spelling</p>",
        "id": 342521137,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679049101
    },
    {
        "content": "<p>Hmm, I guess the question is: how does <code>.</code> factor into a lemma name? Should the two things either side be viewed as part of the same whole being referenced, and therefore the whole thing is a single unit in lowerCamelCase? Or should they be viewed as separate identifiers?</p>",
        "id": 342521609,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679049226
    },
    {
        "content": "<p>I think this belongs in the naming thread now</p>",
        "id": 342523336,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679049717
    },
    {
        "content": "<p>5 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/Complex.2EBasic\">#mathlib4 &gt; Complex.Basic</a> by <span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span>.</p>",
        "id": 342523859,
        "sender_full_name": "Notification Bot",
        "timestamp": 1679049839
    },
    {
        "content": "<p>As a data point, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=map_multiset_sum#doc\">docs4#map_multiset_sum</a></p>",
        "id": 342524084,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679049897
    },
    {
        "content": "<p>Hmm, good data point. If we're considering making a conscious choice, though, we might ask: would what that lemma name referred to be epsilon clearer if it were <code>map_multisetSum</code>?</p>",
        "id": 342525010,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679050126
    },
    {
        "content": "<p>I think it's confusing for a lowercase name (<code>sum</code>) to become uppercase when included in a lemma name when usually the rule is the reverse</p>",
        "id": 342525349,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679050214
    },
    {
        "content": "<p>But I agree it's not clear a conscious choice was made</p>",
        "id": 342525475,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679050251
    },
    {
        "content": "<p>True, it might be less clear than otherwise!</p>\n<p>Pros to lowerCamelCasing so far: keeps it as a distinctive unit, <code>_</code>-separation is a bit more ambiguous in terms of what each \"chunk\" of the name is.</p>\n<p>Cons: a lowercase name is now uppercase, so you now might not even recognize the chunk in the first place! And there's still ambiguity about where the <code>.</code> should be.</p>",
        "id": 342526539,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679050550
    },
    {
        "content": "<p>Maybe I'm just suggesting this because I'm insanely sleep deprived right now, but:</p>\n<p>it would be unambiguous to use <code>'</code> as an intraname translation for <code>.</code> in lemmas. E.g. <code>map_multiset'sum</code>.</p>",
        "id": 342526873,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679050650
    },
    {
        "content": "<p><code>'</code> is generally only used at the end of names, and dots are generally only in the middle, meaning that iff <code>'</code> was part of the original thing the lemma was about, it would be at an underscore boundary and thus distinguishable from a <code>'</code> which used to be a <code>.</code>.</p>",
        "id": 342527308,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679050745
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/naming.20conventions/near/342524084\">said</a>:</p>\n<blockquote>\n<p>As a data point, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=map_multiset_sum#doc\">docs4#map_multiset_sum</a></p>\n</blockquote>\n<p>Personally, I like the name <code>Multiset.map_sum</code> better, especially since there is an explicit <code>Multiset</code> argument.</p>",
        "id": 342530253,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1679051417
    },
    {
        "content": "<p>But if we stick we the current name, I probably prefer <code>map_multisetSum</code>, since <code>Multiset.sum</code> is a single operation.</p>",
        "id": 342530706,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1679051562
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/naming.20conventions/near/342530253\">said</a>:</p>\n<blockquote>\n<p>Personally, I like the name <code>Multiset.map_sum</code> better, especially since there is an explicit <code>Multiset</code> argument.</p>\n</blockquote>\n<p>I don't think <code>Multiset.map_sum</code> is great here because it sounds like <code>map</code> refers to <code>Multiset.map</code>, and all the other <code>map_*</code> lemmas are in either the root or morphism namespaces</p>",
        "id": 342539218,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679053930
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/287929-mathlib4/topic/naming.20conventions/near/342526873\">said</a>:</p>\n<blockquote>\n<p>Maybe I'm just suggesting this because I'm insanely sleep deprived right now, but:</p>\n<p>it would be unambiguous to use <code>'</code> as an intraname translation for <code>.</code> in lemmas. E.g. <code>map_multiset'sum</code>.</p>\n</blockquote>\n<p>If we want to go down that route, <code>map_«Multiset.sum»</code> seems less bad...</p>",
        "id": 342539837,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679054108
    },
    {
        "content": "<p>Oh, that's not legal any more in Lean4; <code>map_«Multiset.sum»</code> is now parsed as <code>map_ «Multiset.sum»</code> instead of <code>«map_Multiset.sum»</code></p>",
        "id": 342540168,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679054201
    },
    {
        "content": "<p>This is really a mess; we have 336 matches for <code>_(nat|int|rat)Cast</code> and 404 matches for <code>_(nat|int|rat)_cast</code> (on some random branch I'm on)</p>",
        "id": 342546068,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679055852
    },
    {
        "content": "<p>(<code>multisetSum</code> has 0 matches to <code>multiset_sum</code>s 161)</p>",
        "id": 342546160,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679055890
    },
    {
        "content": "<p><code>theorem.*_(nat|int|rat)_cast</code> has 85 matches, <code>theorem.*_(nat|int|rat)Cast</code> has 91</p>",
        "id": 342546255,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679055920
    },
    {
        "content": "<p>We actually <em>did</em> talk about this at some point and I think the <code>_</code> separator was determined. I believe the conversation was even about <code>Nat.cast</code> specifically.</p>",
        "id": 342555116,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679058292
    },
    {
        "content": "<p>There's a single message here:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Naming.20clarification/near/316375694\">said</a>:</p>\n<blockquote>\n<p>I've been using <code>natCast</code> if the Lean 3 name was <code>nat_cast</code> and keep it as <code>cast</code> otherwise.</p>\n</blockquote>",
        "id": 342555976,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679058506
    },
    {
        "content": "<p>I just found that too. I guess I fabricated that memory?</p>",
        "id": 342556050,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679058533
    },
    {
        "content": "<p>Sorry</p>",
        "id": 342556095,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679058542
    },
    {
        "content": "<p>A similar data point is the lemmas about <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Int.ceil#doc\">docs4#Int.ceil</a> etc, such as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Nat.cast_ceil_eq_int_ceil\">docs#Nat.cast_ceil_eq_int_ceil</a></p>",
        "id": 342556420,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679058613
    },
    {
        "content": "<p>These data points are mostly an indication of what mathport is automatically generating as lemma names (i.e. what it was in Lean 3), not necessarily what we want.</p>",
        "id": 342559449,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1679059208
    },
    {
        "content": "<p>Sure; though having an example of lemmas that would be renamed helps us decide which convention to choose</p>",
        "id": 342567539,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679061078
    },
    {
        "content": "<p>Just as one final avenue: are there any other potential solutions of the form \"translate the dot explicitly\"? This would eliminate all ambiguity and make lemmas easy to find and recognize as the one you're looking for (once you know about it), but might be more verbose/less pretty. So it might come down to what our naming convention prioritizes.</p>\n<p><code>'</code> is the only one I could think of which is 1) easy to type/ASCII 2) brief 3) admissible in an identifier, but it does look weird as  of now. <code>frobenius_nat'cast (n : ℕ)</code>. <code>map_multiset'sum</code>. hmm.</p>\n<p>Another option in this vein is translating the dot to a word, like <code>_foo_</code>, but I'm not sure what word we'd use.</p>\n<p><code>__</code> is technically a possibility, but makes the two parts of the name look <em>less</em> associated with each other, so imo that's not great.</p>\n<p>Any other \"unambiguous translation\" possibilities anyone can think of (or other ideas/comments) before we make a poll?</p>",
        "id": 342845220,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679178021
    },
    {
        "content": "<p>29 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/naming.20conventions\">#mathlib4 &gt; naming conventions</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 346323377,
        "sender_full_name": "Notification Bot",
        "timestamp": 1680427569
    },
    {
        "content": "<p>/poll What should lemma about <code>Foo.bar (Nat.cast x)</code> be called?</p>\n<ul>\n<li><code>Foo.bar_nat_cast</code></li>\n<li><code>Foo.bar_natCast</code></li>\n<li><code>fooBar_natCast</code></li>\n<li><code>foo_bar_nat_cast</code></li>\n</ul>",
        "id": 346323728,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680427729
    },
    {
        "content": "<p>/poll What should lemma about <code>Nat.cast (Bar.baz x)</code> be called?</p>\n<ul>\n<li><code>Nat.cast_bar_baz</code></li>\n<li><code>Nat.cast_barBaz</code></li>\n<li><code>natCast_barBaz</code></li>\n<li><code>nat_cast_bar_baz</code></li>\n</ul>",
        "id": 346323810,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680427775
    },
    {
        "content": "<p>(if adding a new option, please add it to both polls in a way that is consistent, even if you don't vote for both)</p>",
        "id": 346323967,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680427819
    },
    {
        "content": "<p>To some extent the question boils down to whether <code>.</code>s in namespaced names collapse into <code>_</code>s or single tokens</p>",
        "id": 346324106,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680427884
    },
    {
        "content": "<p>Declaring <code>natCast</code>/<code>intCast</code>/<code>ratCast</code> as exceptions to the rules is probably also not unreasonable</p>",
        "id": 346324306,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680427953
    },
    {
        "content": "<p>What are the Lean 3 names of these hypothetical lemmas?</p>",
        "id": 346344589,
        "sender_full_name": "Reid Barton",
        "timestamp": 1680435858
    },
    {
        "content": "<p>Usually <code>foo.bar_nat_cast</code> and <code>nat.cast_bar_baz</code></p>",
        "id": 346352398,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680438849
    },
    {
        "content": "<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span>, to get some more opinions on <a href=\"#narrow/stream/287929-mathlib4/topic/naming.20conventions.3A.20natCast.20vs.20nat_cast/near/346323728\">the poll</a>. I forgot to bring this up in the porting meeting.</p>",
        "id": 346699159,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680565549
    },
    {
        "content": "<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span>, since as far as I can tell this isn't covered yet by <a href=\"https://leanprover-community.github.io/contribute/naming.html\">#naming</a></p>",
        "id": 390920779,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694695103
    }
]