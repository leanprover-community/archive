[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3287\">!4#3287</a> can somebody help fix the last error here?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">adjMatrix_vecMul_apply</span> <span class=\"o\">[</span><span class=\"n\">NonAssocSemiring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">vec</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">((</span><span class=\"n\">G.adjMatrix</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">vecMul</span> <span class=\"n\">vec</span><span class=\"o\">)</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">u</span> <span class=\"k\">in</span> <span class=\"n\">G.neighborFinset</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">vec</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">dotProduct_adjMatrix</span><span class=\"o\">,</span> <span class=\"n\">vecMul</span><span class=\"o\">]</span>\n  <span class=\"n\">refine'</span> <span class=\"n\">congr</span> <span class=\"n\">rfl</span> <span class=\"n\">_</span><span class=\"bp\">;</span> <span class=\"n\">ext</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">transpose_apply</span> <span class=\"o\">(</span><span class=\"n\">adjMatrix</span> <span class=\"n\">α</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">transpose_adjMatrix</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 347128498,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680698217
    },
    {
        "content": "<p>Apparently the proof starts to diverge from mathlib3 at <code>rv [vecMul]</code>, when it for some reason generates a <code>let</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"n\">j</span> <span class=\"o\">:=</span> <span class=\"n\">v</span><span class=\"bp\">;</span>\n  <span class=\"n\">vec</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">adjMatrix</span> <span class=\"n\">α</span> <span class=\"n\">G</span> <span class=\"n\">i</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">u</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">vec</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">adjMatrix</span> <span class=\"n\">α</span> <span class=\"n\">G</span> <span class=\"n\">v</span>\n</code></pre></div>",
        "id": 347152375,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680702741
    },
    {
        "content": "<p>The subsequent <code>refine' congr rfl _</code> turns this into a veritable mess. How can I subsume the <code>let</code>?</p>",
        "id": 347152526,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680702772
    },
    {
        "content": "<p>try <code>rw</code> → <code>simp only</code>?</p>",
        "id": 347152790,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680702831
    },
    {
        "content": "<p>Right, that worked, thanks</p>",
        "id": 347154731,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680703210
    }
]