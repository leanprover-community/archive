[
    {
        "content": "<p>I'm currently rewriting / updating the style guide for the website. The <code>calc</code> syntax has changed slightly, and I'm wondering about what we consider the mathlib-preferred style for <code>calc</code> proofs. Of course, we probably want to allow some flexibility as with Lean 3, and <code>calc</code> mandates some style in order to parse properly, but the questions remains, \"what is(are) the preferred style(s)?\"</p>\n<p>Some questions to consider:</p>\n<ol>\n<li>Does <code>calc</code> itself go on (a) it's own line, (b) the end of the previous line (as with <code>by</code>), or (c) with the first LHS?</li>\n<li>do we try to line up the relations (e.g., <code>=</code>)? what about the justifications <code>:=</code>?</li>\n<li>how are <code>_</code> justified? (left, right)</li>\n<li>does the first LHS/RHS pair go on one line, or separate lines?</li>\n</ol>\n<p>If I were going to suggest a style myself it would be (1. (b), 2. yes, no, 3. left, 4. separate), with the option to override any of these in situations where the expressions involved and/or justifications are short. This would lead to <code>calc</code> style that looks like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>\n  <span class=\"n\">some_big_long_term_here</span>\n    <span class=\"bp\">=</span> <span class=\"n\">the_second_term</span> <span class=\"o\">:=</span> <span class=\"n\">first_eq_second</span>\n  <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">the_third_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">some</span>\n    <span class=\"n\">sequence</span>\n    <span class=\"n\">of</span>\n    <span class=\"n\">tactics</span>\n  <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">the_fourth_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>and since these are small, this might be rewritten as:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">some_big_long_term_here</span> <span class=\"bp\">=</span> <span class=\"n\">the_second_term</span> <span class=\"o\">:=</span> <span class=\"n\">first_eq_second</span>\n    <span class=\"n\">_</span>                       <span class=\"bp\">≤</span> <span class=\"n\">the_third_term</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">some</span><span class=\"bp\">;</span> <span class=\"n\">sequence</span><span class=\"bp\">;</span> <span class=\"n\">of</span><span class=\"bp\">;</span> <span class=\"n\">tactics</span>\n    <span class=\"n\">_</span>                       <span class=\"bp\">≤</span> <span class=\"n\">the_fourth_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 385765159,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1692312974
    },
    {
        "content": "<p>Is this second block supposed to be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>\n  <span class=\"n\">some_big_long_term_here</span> <span class=\"bp\">=</span> <span class=\"n\">the_second_term</span> <span class=\"o\">:=</span> <span class=\"n\">first_eq_second</span>\n  <span class=\"n\">_</span>                       <span class=\"bp\">≤</span> <span class=\"n\">the_third_term</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">some</span><span class=\"bp\">;</span> <span class=\"n\">sequence</span><span class=\"bp\">;</span> <span class=\"n\">of</span><span class=\"bp\">;</span> <span class=\"n\">tactics</span>\n  <span class=\"n\">_</span>                       <span class=\"bp\">≤</span> <span class=\"n\">the_fourth_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 385765402,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1692313155
    },
    {
        "content": "<p>well, I was just showing that it has the option to be different when everything is short and sweet (under my suggestion), so no, the <code>calc</code> placement was intentional.</p>",
        "id": 385765544,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1692313235
    },
    {
        "content": "<p>Ah okay, I thought you only wanted flexibility on 2 3 4</p>",
        "id": 385765616,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1692313287
    },
    {
        "content": "<p>Otherwise I think I agree with you.</p>",
        "id": 385765812,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1692313358
    },
    {
        "content": "<p>I would say that making 1(b) a harder rule than the other ones would seem logical because of the parallel with <code>by</code>, but I don't have a strong opinion about it</p>",
        "id": 385765966,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1692313447
    },
    {
        "content": "<p>You mean 1(b)?</p>",
        "id": 385765999,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1692313473
    },
    {
        "content": "<p>Yes</p>",
        "id": 385766016,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1692313490
    },
    {
        "content": "<p>I'll throw in another possible style:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>\n  <span class=\"n\">some_big_long_term_here</span> <span class=\"bp\">=</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">first_eq_second</span>\n  <span class=\"n\">the_second_term</span>         <span class=\"bp\">≤</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">some</span><span class=\"bp\">;</span> <span class=\"n\">sequence</span><span class=\"bp\">;</span> <span class=\"n\">of</span><span class=\"bp\">;</span> <span class=\"n\">tactics</span>\n  <span class=\"n\">the_third_term</span>          <span class=\"bp\">≤</span> <span class=\"n\">the_fourth_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>(mainly as a joke!)</p>",
        "id": 385832584,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692339324
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>\n      <span class=\"n\">some_big_long_term_here</span> <span class=\"c1\">-- 1)</span>\n    <span class=\"bp\">=</span> <span class=\"n\">the_second_term</span> <span class=\"o\">:=</span> <span class=\"n\">first_eq_second</span>\n  <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">the_third_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">some</span> <span class=\"c1\">-- 2)</span>\n      <span class=\"n\">sequence</span>\n      <span class=\"n\">of</span>\n      <span class=\"n\">tactics</span>\n  <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">the_fourth_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>two more (independent) options of alignment. Not even sure its legal to indent the first line though, so maybe not<span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 385835328,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1692340378
    },
    {
        "content": "<p>It's allowed. Also allowed:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span> <span class=\"n\">some_big_long_term_here</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">the_second_term</span> <span class=\"o\">:=</span> <span class=\"n\">first_eq_second</span>\n  <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">the_third_term</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">some</span><span class=\"bp\">;</span> <span class=\"n\">sequence</span><span class=\"bp\">;</span> <span class=\"n\">of</span><span class=\"bp\">;</span> <span class=\"n\">tactics</span>\n  <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">the_fourth_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 385842056,
        "sender_full_name": "Richard Copley",
        "timestamp": 1692343172
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385895\">Jon Eugster</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib-preferred.20calc.20style/near/385835328\">said</a>:</p>\n<blockquote>\n<p>two more (independent) options of alignment. Not even sure its legal to indent the first line though, so maybe not<span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n</blockquote>\n<p>I like 1) (as it makes the first line consistent with remaining lines) but not 2) (as it makes it harder visually separate the statement and proof</p>",
        "id": 385843314,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692343751
    },
    {
        "content": "<p>(1) is not recommended, because it has a confusing behavior if you have a sequence of tactics in the proof (I'm not sure if it was deliberate but using <code>first_eq_second</code> instead of <code>by some sequence of tactics</code> on the first line is hiding some issues here)</p>",
        "id": 385974332,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692386347
    },
    {
        "content": "<p>if you want to get all the terms lined up, you want</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>\n      <span class=\"n\">some_big_long_term_here</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">the_second_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">tactic</span>\n    <span class=\"n\">sequence</span>\n  <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">the_third_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">some</span>\n    <span class=\"n\">sequence</span>\n    <span class=\"n\">of</span>\n    <span class=\"n\">tactics</span>\n  <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">the_fourth_term</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 385974746,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692386503
    }
]