[
    {
        "content": "<p>This has an odd error where apparently lean can't find the <code>Pow ℕ+ ℕ</code> instance. Would be great if someone could take a look</p>",
        "id": 325092943,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1675240228
    },
    {
        "content": "<p>I definitely have seen Pow errors like this before, and the common solution seems to be replacing <code>a^b</code> with <code>Pow.pow a b</code>, but that is not ideal indeed. An example with a useful porting note is in Data.PNat.Basic:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Porting note:</span>\n<span class=\"c1\">-- mathlib3 statement was</span>\n<span class=\"c1\">-- `((m ^ n : ℕ+) : ℕ) = (m : ℕ) ^ n`</span>\n<span class=\"c1\">-- where the left `^ : ℕ+ → ℕ → ℕ+` was `monoid.has_pow`.</span>\n<span class=\"c1\">-- Atm writing `m ^ n` means automatically `(↑m) ^ n`.</span>\n<span class=\"kd\">@[simp, norm_cast]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">pow_coe</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">Pow.pow</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n  <span class=\"n\">rfl</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span> <span class=\"n\">pnat.pow_coe</span> <span class=\"n\">PNat.pow_coe</span>\n</code></pre></div>\n<p>How do we get <code>^</code> to behave more naturally?</p>",
        "id": 325942056,
        "sender_full_name": "Lukas Miaskiwskyi",
        "timestamp": 1675595691
    },
    {
        "content": "<p>Is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=instHPow#doc\">docs4#instHPow</a> a thing?</p>",
        "id": 326011527,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675630957
    },
    {
        "content": "<p>Oh, it's already a default instance</p>",
        "id": 326011573,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675631009
    }
]