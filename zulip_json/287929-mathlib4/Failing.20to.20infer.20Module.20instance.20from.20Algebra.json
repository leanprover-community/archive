[
    {
        "content": "<p>Is it a known error that you can't get a <code>Module</code> instance if <code>A</code> is a <code>Ring</code> rather than a <code>Semiring</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Algebra.Basic</span>\n\n<span class=\"kn\">section</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">k</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Algebra</span> <span class=\"n\">k</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">inferInstance</span> <span class=\"o\">:</span> <span class=\"n\">Semiring</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"c1\">-- OK</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">inferInstance</span> <span class=\"o\">:</span> <span class=\"n\">Module</span> <span class=\"n\">k</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"c1\">-- fails</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kn\">section</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">k</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Semiring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Algebra</span> <span class=\"n\">k</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">inferInstance</span> <span class=\"o\">:</span> <span class=\"n\">Semiring</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"c1\">-- OK</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">inferInstance</span> <span class=\"o\">:</span> <span class=\"n\">Module</span> <span class=\"n\">k</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"c1\">-- OK</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 345494633,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1680116938
    },
    {
        "content": "<p>I would expect <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Algebra.toModule#doc\">docs4#Algebra.toModule</a> to apply in both cases.</p>",
        "id": 345494730,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1680116974
    },
    {
        "content": "<p>Fixed by <code>etaExperiment</code></p>",
        "id": 345495520,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1680117225
    },
    {
        "content": "<p>So I guess that answer is yes</p>",
        "id": 345495739,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1680117277
    },
    {
        "content": "<p>yes, this  was one of the early examples in <a href=\"https://github.com/leanprover/lean4/pull/2074\">lean4#2074</a> (see the second post)</p>",
        "id": 345505237,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1680120373
    },
    {
        "content": "<p>What's the status of this bug? I think <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> and I may have encountered it again just now. See <a href=\"https://github.com/leanprover-community/mathlib4/pull/3211\">mathlib4#3211</a>. It's a case where we have a field but Lean can't seem to infer that it's a ring.</p>",
        "id": 346060813,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1680298549
    },
    {
        "content": "<p>What's the error message you get?</p>",
        "id": 346061178,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680298724
    },
    {
        "content": "<p>Either way, <a href=\"https://github.com/leanprover/lean4/pull/2074\">lean4#2074</a> is alive and well, and I don't think any imminent fix is incoming</p>",
        "id": 346061221,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680298742
    },
    {
        "content": "<p>There's a workaround for mathlib4 that's in the works (<a href=\"https://github.com/leanprover-community/mathlib4/pull/3171\">!4#3171</a>), but it's not ready yet</p>",
        "id": 346061247,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680298755
    },
    {
        "content": "<p>Oh, I assume you mean <a href=\"https://github.com/leanprover-community/mathlib4/pull/3211/commits/4fcf2cf05230a3ac54c1d49767350cf7306f7a7c#diff-ff2b7cd32be7b1a830e734e4b5d19551cbe4a7dfd7fae9a6194215b2d5755f30R108-R111\">these lines</a></p>",
        "id": 346061408,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680298838
    },
    {
        "content": "<p>You can use <code>set_option synthInstance.etaExperiment true in ...</code> to test whether the problem is <a href=\"https://github.com/leanprover/lean4/pull/2074\">lean4#2074</a>. If it works with that setting and not without, then it's <a href=\"https://github.com/leanprover/lean4/pull/2074\">lean4#2074</a>.</p>",
        "id": 346061471,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680298874
    },
    {
        "content": "<p>Yup, I just tried it.  That's the issue. (cc <span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span>)</p>",
        "id": 346065759,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1680300863
    },
    {
        "content": "<p>So is the current advice to turn that option on in declarations which need it?</p>",
        "id": 346065839,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1680300902
    },
    {
        "content": "<p>I pushed the change assuming so.</p>",
        "id": 346066881,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1680301375
    }
]