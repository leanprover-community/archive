[
    {
        "content": "<p>I've noticed that the docstrings for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.card_erase_of_mem#doc\">docs#Finset.card_erase_of_mem</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.cast_card_erase_of_mem#doc\">docs#Finset.cast_card_erase_of_mem</a> give an error message \"You can't use 'macro parameter character #' in math mode\" in the html docs. I assume the <code>\\#</code>s there need another escaping <code>\\</code>. Would it be OK to add this fix to the somewhat unrelated <a href=\"https://github.com/leanprover-community/mathlib4/pull/8252\">#8252</a>, or is this rather not done?</p>",
        "id": 401021551,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1699477009
    },
    {
        "content": "<p>I vote ok. In principle it is nice to keep PRs with only related changes, but this is simply too much energy waste in such trivial cases.</p>",
        "id": 401021747,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699477087
    },
    {
        "content": "<p>I don't think we should be changing the comments here; this looks like a bug in our markdown renderer (<a href=\"https://github.com/xubaiw/CMark.lean\">https://github.com/xubaiw/CMark.lean</a>)</p>",
        "id": 401023945,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699477927
    },
    {
        "content": "<p>(or at least, a missing feature; it presumably doesn't have any Math support, so we've just tried to glue support on top in another layer)</p>",
        "id": 401024328,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699478099
    },
    {
        "content": "<p>The <a href=\"https://observablehq.com/@bryangingechen/github-lean-doc-preview\">lean doc preview</a> shows it correctly (and gives an error with a double backslash). So it's hard to test any changes. (I did notice that when github renders md files containing LaTeX, some symbols need an additional backslash to be rendered correctly, but I don't know if this is related.)</p>",
        "id": 401024783,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1699478305
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/LaTeX.20problem.20in.20docstring/near/401023945\">said</a>:</p>\n<blockquote>\n<p>I don't think we should be changing the comments here; this looks like a bug in our markdown renderer (<a href=\"https://github.com/xubaiw/CMark.lean\">https://github.com/xubaiw/CMark.lean</a>)</p>\n</blockquote>\n<p>So I'll undo the attempted fix, and we wait until this is solved in The Right Way <span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span> ?</p>",
        "id": 401024899,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1699478366
    },
    {
        "content": "<p>If nothing else I think we shouldn't be putting hacks in unrelated PRs</p>",
        "id": 401025050,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699478425
    },
    {
        "content": "<p>A few years back I spent some time getting LaTeX working properly with markdown in doc-gen3 (and the Lean doc preview), and what I ended up doing there was just to adapt code from StackExchange's LaTex + markdown handling. As Eric says, it looks like this hasn't made it to doc-gen4 (yet?).</p>\n<p>I unfortunately don't have time at the moment to dig into how doc-gen4 / CMark.lean does things, but for anyone who wants to try fixing LaTeX in markdown in doc-gen4, the following might be useful. First, <a href=\"https://observablehq.com/@bryangingechen/mathjax-editing-js\">this notebook</a> gives a very brief explanation of the basic strategy I used, and also includes some JS code used in the Lean doc preview. Second, <a href=\"https://github.com/leanprover-community/doc-gen/blob/master/mistletoe_renderer.py#L47\">here's our (less-well-documented) Markdown handling code in doc-gen3</a> as well as <a href=\"https://github.com/leanprover-community/doc-gen/blob/master/mathjax_editing.py\">my Python port of StackExchange's code</a></p>\n<p>Of course anyone should feel free to ping me / PM me with any questions.</p>",
        "id": 401029097,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1699480300
    },
    {
        "content": "<p>I think the difficulty here is that we're using the reference implementation of commonmark written in C, and commonmark <a href=\"https://github.com/commonmark/commonmark-spec/pull/745\">isn't showing any signs</a> of agreeing how to represent math</p>",
        "id": 401029632,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699480549
    },
    {
        "content": "<p>With the caveat that I haven't looked at doc-gen4's code at all, I think the basic strategy of stripping out chunks of math, sending everything else to CMark.lean to generate HTML, and then putting the math back should hopefully work there too.</p>\n<p>Regarding conventions on how to represent math in Markdown, with doc-gen3, I decided to just go with <a href=\"https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\">StackExchange's conventions</a> since it was what we were already writing in docstrings. If commonmark decides on something else down the line, then I guess things will get even messier...</p>",
        "id": 401031471,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1699481263
    },
    {
        "content": "<p>I would imagine it's probably easier to fork cmark and duplicate <a href=\"https://github.com/xubaiw/CMark.lean/blob/0077cbbaa92abf855fc1c0413e158ffd8195ec77/cmark/inlines.c#L1319-L1320\">these code-parsing lines</a> for LaTeX</p>",
        "id": 401032487,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699481798
    },
    {
        "content": "<p>Then we have to fork / push to CMark.lean, since that contains copies of the files in cmark</p>",
        "id": 401032542,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699481825
    },
    {
        "content": "<p>Note earlier discussion about this: <a href=\"#narrow/stream/287929-mathlib4/topic/Docs.20.22.23.22.20in.20math.20mode.20errors\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Docs.20.22.23.22.20in.20math.20mode.20errors</a></p>",
        "id": 403051473,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1700427240
    }
]