[
    {
        "content": "<p>Is this a bug in <code>fin_cases</code> or I am missing something?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">&lt;</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∈</span> <span class=\"n\">Finset.Ioo</span> <span class=\"mi\">2</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">Finset.mem_Ioo</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">⟨</span><span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">h5</span><span class=\"o\">⟩</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">hp</span> <span class=\"c1\">-- Hypothesis must be of type `x ∈ (A : List α)`, `x ∈ (A : Finset α)`, or `x ∈ (A : Multiset α)`</span>\n</code></pre></div>\n<p>If I give <code>hp : p ∈ Finset.Ioo 2 5</code> as an explicit assumption than <code>fin_cases</code> works as expected.</p>",
        "id": 377376810,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1689960595
    },
    {
        "content": "<p>In the code it looks like a missing <code>instantiateMVars</code>. I'll check if that's right.</p>",
        "id": 377379133,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689961044
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 377381207,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1689961529
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> <a href=\"https://github.com/leanprover-community/mathlib4/pull/6046\">#6046</a></p>",
        "id": 377387018,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689962706
    },
    {
        "content": "<p>(I am not going to review it since my knowledge in meta code is essentially zero)</p>",
        "id": 377390398,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1689963368
    },
    {
        "content": "<p>But you've done your job -- you found and minimised the issue :-)</p>",
        "id": 377395773,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689964666
    }
]