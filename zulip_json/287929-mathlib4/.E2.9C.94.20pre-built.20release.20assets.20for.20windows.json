[
    {
        "content": "<p>I am having a hard time getting mathlib4 @v4.0.0 to work on windows. It takes a really long time build mathlib on my windows machine. Are there any plans to provide pre-build release assets for windows (atleast for the v4.0.0 stable milestone) and provide them on <a href=\"https://github.com/leanprover-community/mathlib4/releases\">https://github.com/leanprover-community/mathlib4/releases</a> the way (for example) <a href=\"https://github.com/EdAyers/ProofWidgets4/releases\">ProofWidgets4</a> does?</p>",
        "id": 391896481,
        "sender_full_name": "Somo S.",
        "timestamp": 1695124698
    },
    {
        "content": "<p>The mechanism for Mathlib is that you run <code>lake exe cache get</code> before building. Are you doing this?</p>",
        "id": 391898329,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695125328
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> is working on getting us to the point where this isn't necessary (i.e. <code>lake build</code>, or merely opening an editor, runs something equivalent to <code>lake exe cache get</code> in the background).</p>",
        "id": 391898467,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695125377
    },
    {
        "content": "<p>It should be possible to provide release assets the same way that ProofWidgets does, but so many of the users of Mathlib regularly use <code>master</code>, that even if we set up that mechanism we would still need the <code>lake exe cache get</code> mechanism, and we would prefer to avoid duplication.</p>",
        "id": 391898855,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695125501
    },
    {
        "content": "<p>It is unfortunate that <code>lake exe cache get</code> is necessary still, but we're working on it!</p>",
        "id": 391898893,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695125519
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pre-built.20release.20assets.20for.20windows/near/391898329\">said</a>:</p>\n<blockquote>\n<p>The mechanism for Mathlib is that you run <code>lake exe cache get</code> before building. Are you doing this?</p>\n</blockquote>\n<p>I had tried this and got failure, is why I resorted to building from scratch (I am at [6668/7441] progress so far).</p>\n<p>But I will try <code>lake exe cache get</code> again on another machine</p>",
        "id": 391898983,
        "sender_full_name": "Somo S.",
        "timestamp": 1695125541
    },
    {
        "content": "<blockquote>\n<p>It should be possible to provide release assets the same way that ProofWidgets does, but so many of the users of Mathlib regularly use <code>master</code>, that even if we set up that mechanism we would still need the <code>lake exe cache get</code> mechanism, and we would prefer to avoid duplication.</p>\n</blockquote>\n<p>that is why I am wondering if it could be done for just the latest stable supported version. In this case it would be only once since v4.0.0 is the only stable.</p>",
        "id": 391899624,
        "sender_full_name": "Somo S.",
        "timestamp": 1695125756
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> where does <code>lake exe cache get</code> download the assets from or how does it work to reduce my build time in general?</p>",
        "id": 391899957,
        "sender_full_name": "Somo S.",
        "timestamp": 1695125851
    },
    {
        "content": "<p>There is an (I believe azure hosted) file server that holds a .olean cache which gets downloaded</p>",
        "id": 391902393,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1695126785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"582386\">@Somo S.</span>, can I ask which setup instruction you followed for Mathlib? We want to make sure the instruction to run <code>lake exe cache get</code> is sufficiently prominent for all the usual routes in.</p>",
        "id": 391904984,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695127720
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>, I followed <a href=\"https://leanprover-community.github.io/install/project.html#creating-a-lean-project\">https://leanprover-community.github.io/install/project.html#creating-a-lean-project</a> ...<br>\nbut perhaps I was hastey let me try again.</p>",
        "id": 391914484,
        "sender_full_name": "Somo S.",
        "timestamp": 1695130658
    },
    {
        "content": "<p>So far I run the following..</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">&gt;</span><span class=\"n\">elan</span> <span class=\"n\">update</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">syncing</span> <span class=\"n\">channel</span> <span class=\"n\">updates</span> <span class=\"n\">for</span> <span class=\"bp\">'</span><span class=\"n\">stable'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">latest</span> <span class=\"n\">update</span> <span class=\"n\">on</span> <span class=\"n\">stable</span><span class=\"o\">,</span> <span class=\"n\">lean</span> <span class=\"n\">version</span> <span class=\"n\">v4.0.0</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">checking</span> <span class=\"n\">for</span> <span class=\"n\">self</span><span class=\"bp\">-</span><span class=\"n\">updates</span>\n\n  <span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span> <span class=\"n\">unchanged</span> <span class=\"bp\">-</span> <span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"n\">ec941735c80d</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n\n\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">&gt;</span><span class=\"n\">elan</span> <span class=\"n\">toolchain</span> <span class=\"n\">list</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span> <span class=\"o\">(</span><span class=\"n\">default</span><span class=\"o\">)</span>\n\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">&gt;</span><span class=\"n\">elan</span> <span class=\"n\">default</span> <span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">using</span> <span class=\"n\">existing</span> <span class=\"n\">install</span> <span class=\"n\">for</span> <span class=\"bp\">'</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">default</span> <span class=\"n\">toolchain</span> <span class=\"n\">set</span> <span class=\"n\">to</span> <span class=\"bp\">'</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable'</span>\n\n  <span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span> <span class=\"n\">unchanged</span> <span class=\"bp\">-</span> <span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"n\">ec941735c80d</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n\n\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">&gt;</span><span class=\"n\">lake</span> <span class=\"bp\">+</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span> <span class=\"n\">new</span> <span class=\"n\">my_mathstuff</span> <span class=\"n\">math</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Downloading</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span>\n\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">&gt;</span><span class=\"n\">cd</span> <span class=\"n\">my_mathstuff</span>\n\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">\\</span><span class=\"n\">my_mathstuff</span><span class=\"bp\">&gt;</span><span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">downloading</span> <span class=\"n\">component</span> <span class=\"bp\">'</span><span class=\"n\">lean'</span>\n<span class=\"mi\">180</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">MiB</span> <span class=\"bp\">/</span> <span class=\"mi\">180</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">MiB</span> <span class=\"o\">(</span><span class=\"mi\">100</span> <span class=\"bp\">%</span><span class=\"o\">)</span>   <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span> <span class=\"n\">MiB</span><span class=\"bp\">/</span><span class=\"n\">s</span> <span class=\"n\">ETA</span><span class=\"o\">:</span>   <span class=\"mi\">0</span> <span class=\"n\">s</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">installing</span> <span class=\"n\">component</span> <span class=\"bp\">'</span><span class=\"n\">lean'</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4.git</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">EdAyers</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">mhuisi</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli.git</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Cli</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">gebner</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">JLimperg</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span>\n\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">\\</span><span class=\"n\">my_mathstuff</span><span class=\"bp\">&gt;</span><span class=\"n\">elan</span> <span class=\"n\">toolchain</span> <span class=\"n\">list</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span> <span class=\"o\">(</span><span class=\"n\">default</span><span class=\"o\">)</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.1.0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span>\n\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">\\</span><span class=\"n\">my_mathstuff</span><span class=\"bp\">&gt;</span><span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Fetching</span> <span class=\"n\">proofwidgets</span> <span class=\"n\">cloud</span> <span class=\"n\">release</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache.exe</span>\n<span class=\"n\">leantar</span> <span class=\"n\">is</span> <span class=\"n\">too</span> <span class=\"n\">old</span><span class=\"bp\">;</span> <span class=\"n\">downloading</span> <span class=\"n\">more</span> <span class=\"n\">recent</span> <span class=\"n\">version</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">3775</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">3775</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">3775</span><span class=\"bp\">/</span><span class=\"mi\">3775</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3775</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">17947</span> <span class=\"n\">ms</span>\n\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\</span><span class=\"n\">Downloads</span><span class=\"bp\">\\</span><span class=\"n\">__delete</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">\\</span><span class=\"n\">my_mathstuff</span><span class=\"bp\">&gt;</span>\n</code></pre></div>",
        "id": 391914785,
        "sender_full_name": "Somo S.",
        "timestamp": 1695130742
    },
    {
        "content": "<p>then I have added the following to <code>MyMathstuff.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">import</span> <span class=\"n\">Std</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Real</span>\n<span class=\"k\">#check</span> <span class=\"n\">Rat</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">hello</span> <span class=\"o\">:=</span> <span class=\"s2\">\"world\"</span>\n</code></pre></div>\n<p>It began building (I see this within the vscode editor tooltips) which didn't make sense to me because it should have already downloaded pre-build cache of everything?</p>",
        "id": 391915528,
        "sender_full_name": "Somo S.",
        "timestamp": 1695130955
    },
    {
        "content": "<p>When you open the file in VSCode, are you opening just the file, or opening <code>my_mathstuff</code> (explicitly using <code>Open Folder</code>)?</p>",
        "id": 391916164,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131151
    },
    {
        "content": "<p>VSCode sometimes needs a reload after downloading cache in my experience.</p>",
        "id": 391916277,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1695131177
    },
    {
        "content": "<p>The latter is correct, but I don't really see how that could explain it.</p>",
        "id": 391916311,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131191
    },
    {
        "content": "<p>Oh --- did you open the file in VSCode <em>before</em> running <code>lake update</code>?</p>",
        "id": 391916419,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131221
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I get the following build error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable\\bin\\lake.exe print-paths Init Mathlib Std` failed:</span>\n\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">7</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Classes.BEq</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">33</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Delaborator</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">37</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Classes.Dvd</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">37</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Util.LibraryNote</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">37</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Command</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">37</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Unreachable</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">40</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.TagAttribute</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">40</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.ByCases</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">40</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Position</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">40</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Parser</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">40</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Util.TermUnsafe</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">40</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.OpenPrivate</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">40</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">76</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Name</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">79</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Tactic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">566</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.SeqFocus</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.NameMapAttribute</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.List.Init.Lemmas</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Ord</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.LCtx</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Util.ExtendedBinder</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">13</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Expr</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">76</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Clear</span><span class=\"bp\">!</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">76</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Constructor</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">76</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Clear_</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">78</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.AssertExists</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">78</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.CasesM</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">79</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Classical</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">80</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Spread</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">81</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Substs</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">82</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Coe</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">83</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.SimpRw</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Cli</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable\\bin\\lean.exe -Dpp.unicode.fun=true -Dpp.proofs.withType=false -DautoImplicit=false -DrelaxedAutoImplicit=false .\\lake-packages\\mathlib\\.\\.\\Mathlib\\Tactic\\NthRewrite.lean -R .\\lake-packages\\mathlib\\.\\. -o .\\lake-packages\\mathlib\\build\\lib\\Mathlib\\Tactic\\NthRewrite.olean -i .\\lake-packages\\mathlib\\build\\lib\\Mathlib\\Tactic\\NthRewrite.ilean -c .\\lake-packages\\mathlib\\build\\ir\\Mathlib\\Tactic\\NthRewrite.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">NthRewrite.lean</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"mi\">26</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">occs'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lean.Meta.Rewrite.Config'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable\\bin\\lean.exe` exited with code 1</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">83</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.LeftRight</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">84</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Mathport.Attributes</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">85</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Linter</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">86</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Message</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">87</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.EnvExtension</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">88</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.MemoFix</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">89</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.KVMap</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">90</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.Array.Defs</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">91</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Nat.Notation</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">92</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Mathport.Rename</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">213</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.CategoryTheory.ConcreteCategory.Bundled</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">216</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.Panel.SelectionPanel</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">218</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Lint</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">218</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.Nondet.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">221</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.CoreM</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">221</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.FBinop</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">223</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.GCongr.ForwardAttr</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">223</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Logic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">231</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Qq.Delab</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">233</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Init.Lemmas</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">233</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Attr.Core</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">233</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Sum.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">233</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Use</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">233</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.PairingHeap</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">233</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Classes.LawfulMonad</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">233</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.Basic</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Cli</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable\\bin\\lean.exe -Dpp.unicode.fun=true -Dpp.proofs.withType=false -DautoImplicit=false -DrelaxedAutoImplicit=false .\\lake-packages\\mathlib\\.\\.\\Mathlib\\Lean\\CoreM.lean -R .\\lake-packages\\mathlib\\.\\. -o .\\lake-packages\\mathlib\\build\\lib\\Mathlib\\Lean\\CoreM.olean -i .\\lake-packages\\mathlib\\build\\lib\\Mathlib\\Lean\\CoreM.ilean -c .\\lake-packages\\mathlib\\build\\ir\\Mathlib\\Lean\\CoreM.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Lean</span><span class=\"bp\">\\</span><span class=\"n\">CoreM.lean</span><span class=\"o\">:</span><span class=\"mi\">25</span><span class=\"o\">:</span><span class=\"mi\">25</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">Lean.withImportModules</span> <span class=\"o\">(</span><span class=\"n\">Array.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">â¦</span> <span class=\"o\">{</span> <span class=\"n\">module</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">runtimeOnly</span> <span class=\"o\">:=</span> <span class=\"n\">false</span> <span class=\"o\">})</span> <span class=\"n\">modules</span><span class=\"o\">)</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">Array.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">â¦</span> <span class=\"o\">{</span> <span class=\"n\">module</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">runtimeOnly</span> <span class=\"o\">:=</span> <span class=\"n\">false</span> <span class=\"o\">})</span> <span class=\"n\">modules</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">Array</span> <span class=\"n\">Import</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">List</span> <span class=\"n\">Import</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable\\bin\\lean.exe` exited with code 1</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">234</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.SProd</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">236</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Qq.MetaM</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">237</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Qq.AssertInstancesCommute</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">237</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Qq.Match</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">243</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Fin.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">243</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Lemmas</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">243</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Option.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">243</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Init.Lemmas</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">244</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.MLList.BestFirst</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">244</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.WF</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">245</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Option.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">246</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.List.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">249</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Merge</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">249</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.BinomialHeap.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">249</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Gcd</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">249</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Int.Lemmas</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">251</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Qq</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">252</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.Qq</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">254</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Int.Lemmas</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">254</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Data.Int.DivMod</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">256</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Aesop.Util.UnorderedArraySet</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">852</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.GroupTheory.Submonoid.ZeroDivisors</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">852</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.GroupTheory.Subsemigroup.Center</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">852</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.GroupTheory.Submonoid.Operations</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">856</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.GroupTheory.Subsemigroup.Centralizer</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">857</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.GroupTheory.Submonoid.Center</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">857</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.GroupTheory.Congruence</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">859</span><span class=\"bp\">/</span><span class=\"mi\">3773</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.GroupTheory.Submonoid.Centralizer</span>\n</code></pre></div>",
        "id": 391916522,
        "sender_full_name": "Somo S.",
        "timestamp": 1695131258
    },
    {
        "content": "<p>Okay, that error suggests that your <code>lean-toolchain</code> does not match the <code>lean-toolchain</code> from mathlib.</p>",
        "id": 391916853,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131348
    },
    {
        "content": "<p>What is in your <code>lean-toolchain</code> file?</p>",
        "id": 391916877,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131354
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pre-built.20release.20assets.20for.20windows/near/391916419\">said</a>:</p>\n<blockquote>\n<p>Oh --- did you open the file in VSCode <em>before</em> running <code>lake update</code>?</p>\n</blockquote>\n<p>Am I supposed to run  <code>lake update</code>  both before and after <code>lake exe cache get</code>? <br>\n..  I only run lake update before the the cache command (as per the website instructions.<br>\nI openned vscode after a successful cache get</p>",
        "id": 391917356,
        "sender_full_name": "Somo S.",
        "timestamp": 1695131496
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"582386\">@Somo S.</span>, I just followed exactly the steps you reported, and I can't reproduce. Everything works fine for me. :-(</p>",
        "id": 391917429,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131515
    },
    {
        "content": "<p>The fact that you are seeing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable\\bin\\lake.exe print-paths Init Mathlib Std` failed:</span>\n</code></pre></div>\n<p>is a sure sign something is messed up.</p>",
        "id": 391917591,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131553
    },
    {
        "content": "<p>That toolchain is <em>not</em> the toolchain that should be in your <code>lean-toolchain</code> according to what you have described.</p>",
        "id": 391917655,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131571
    },
    {
        "content": "<p>Can you tell me what is in your <code>lean-toolchain</code> file?</p>",
        "id": 391917709,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131585
    },
    {
        "content": "<p>(You only need to run <code>lake update</code> once, before <code>lake exe cache get</code>.)</p>",
        "id": 391917785,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131614
    },
    {
        "content": "<p>okay could it be because in my vscode settings.json I have (globally) set</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"lean4.toolchainPath\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"C:\\\\Users\\\\makombo\\\\.elan\\\\toolchains\\\\leanprover--lean4---stable\"</span><span class=\"p\">,</span>\n</code></pre></div>",
        "id": 391917793,
        "sender_full_name": "Somo S.",
        "timestamp": 1695131617
    },
    {
        "content": "<p>That is</p>",
        "id": 391917816,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131627
    },
    {
        "content": "<p><span aria-label=\"woman facepalming\" class=\"emoji emoji-1f926-200d-2640\" role=\"img\" title=\"woman facepalming\">:woman_facepalming:</span> That would explain it...</p>",
        "id": 391917851,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131637
    },
    {
        "content": "<p>Why did you do that?</p>",
        "id": 391917911,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131648
    },
    {
        "content": "<p>That forces every Lean project to use the stable release, even if it is configured to use a different release.</p>",
        "id": 391917978,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131667
    },
    {
        "content": "<p>Unsurprisingly, that will break things!</p>",
        "id": 391918004,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131676
    },
    {
        "content": "<p>If there are some instructions somewhere that suggest doing that, please let us know, so we can eradicate them.</p>",
        "id": 391918096,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131709
    },
    {
        "content": "<p>yeah I can't remember what exactly but in a prior release (before stable) I had had to do that to get everything to work</p>",
        "id": 391918203,
        "sender_full_name": "Somo S.",
        "timestamp": 1695131749
    },
    {
        "content": "<p>i presummed that \"stable\" is forwards compatible in some way</p>",
        "id": 391918345,
        "sender_full_name": "Somo S.",
        "timestamp": 1695131784
    },
    {
        "content": "<p>cc: <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span>, I think this is a nice example of something the VS Code extension could be testing for:</p>\n<p>If it detects that <code>lean4.toolchainPath</code> is set in the VS Code settings, and not equal to the local <code>lean-toolchain</code> file, then complain loudly to the user.</p>\n<p>Possibly we could even remove this setting from VSCode to prevent users borking their installs with it?</p>",
        "id": 391918421,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695131810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pre-built.20release.20assets.20for.20windows/near/391917911\">said</a>:</p>\n<blockquote>\n<p>Why did you do that?</p>\n</blockquote>\n<p>the thing is I would prefer to use lean stable v4.0.0 for my codebase as opposed to a later v4.x.y-rc if the later is not yet \"stable\".. is there a way to do that?</p>",
        "id": 391919026,
        "sender_full_name": "Somo S.",
        "timestamp": 1695131992
    },
    {
        "content": "<p>Yes. You will need to change your <code>lakefile.lean</code> so that rather than pointing at <code>master</code> for Mathlib, you point at a a particular commit or tag.</p>",
        "id": 391919204,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695132038
    },
    {
        "content": "<p>e.g. you might use the <code>v4.0.0</code> tag, which is compatible with the <code>v4.0.0</code> toolchain.</p>",
        "id": 391919246,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695132056
    },
    {
        "content": "<p>Of course this means that <code>lake update</code> will not give you the latest additions to Mathlib!</p>",
        "id": 391919340,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695132086
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pre-built.20release.20assets.20for.20windows/near/391919340\">said</a>:</p>\n<blockquote>\n<p>Of course this means that <code>lake update</code> will not give you the latest additions to Mathlib!</p>\n</blockquote>\n<p>I dont mind this at the moment. I just need confidence that the lean version I am using has bugs as is possible (I had been getting some weird behaviour in another project and I want to check to see if it's just my fault or its bug)</p>",
        "id": 391919798,
        "sender_full_name": "Somo S.",
        "timestamp": 1695132218
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pre-built.20release.20assets.20for.20windows/near/391918421\">said</a>:</p>\n<blockquote>\n<p>cc: <span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span>, I think this is a nice example of something the VS Code extension could be testing for:</p>\n<p>If it detects that <code>lean4.toolchainPath</code> is set in the VS Code settings, and not equal to the local <code>lean-toolchain</code> file, then complain loudly to the user.</p>\n<p>Possibly we could even remove this setting from VSCode to prevent users borking their installs with it?</p>\n</blockquote>\n<p>I tend to agree, but I'm not sure if there are any other use cases for it or if nobody uses it for anything. </p>\n<p>vscode-lean had the <code>executablePath</code> setting and vscode-lean4 inherited it. At some point down the line the warning that you should only touch this setting if you know what you are doing was removed and the setting was renamed to <code>toolchainPath</code>. I wonder why.</p>",
        "id": 391920364,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1695132376
    },
    {
        "content": "<p>(That was done in <a href=\"https://github.com/leanprover/vscode-lean4/pull/118\">https://github.com/leanprover/vscode-lean4/pull/118</a>)</p>",
        "id": 391920965,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1695132558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"582386\">Somo S.</span> has marked this topic as resolved.</p>",
        "id": 391923354,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695133291
    },
    {
        "content": "<p>thanks for the help everyone. lgtm</p>",
        "id": 391923494,
        "sender_full_name": "Somo S.",
        "timestamp": 1695133339
    },
    {
        "content": "<p>I don't think we can eradicate <code>lean4.toolchainPath</code>, there are legitimate debugging uses for it. But maybe it should be more prominently described in the docs that this is almost certainly not a good idea to set unless you know what you are doing</p>",
        "id": 391953568,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695141678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Note that if you are a power user debugging the extension, putting <code>lean/bin</code> in your PATH instead seems like a reasonable ask</p>",
        "id": 391954458,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695142039
    },
    {
        "content": "<p>it's more difficult to control the <code>PATH</code> that vscode sees though, especially if you are setting it independently of the console</p>",
        "id": 391955131,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695142276
    },
    {
        "content": "<p>besides, that means you have to go without <code>elan</code> which is :(</p>",
        "id": 391955186,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695142294
    },
    {
        "content": "<p>The Lean 3 extension had a <a href=\"https://github.com/leanprover/vscode-lean/blob/1589ca3a65e394b3789409707febbd2d166c9344/package.json#L25\">big warning</a> that got <a href=\"https://github.com/leanprover/vscode-lean4/blob/master/vscode-lean4/package.json#L28\">lost in translation</a>.</p>",
        "id": 391956333,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1695142698
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20pre-built.20release.20assets.20for.20windows/near/391955186\">said</a>:</p>\n<blockquote>\n<p>besides, that means you have to go without <code>elan</code> which is :(</p>\n</blockquote>\n<p>I'm not sure I follow, I assumed the setting would only be interesting to people <em>without</em> elan (as the extension knows how to find elan in its default install location even if it's not in PATH)</p>",
        "id": 391957410,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695143084
    },
    {
        "content": "<p>you might be doing the equivalent of <code>elan override</code> but just for vscode</p>",
        "id": 391958093,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695143355
    },
    {
        "content": "<p>my lean4-test project contains a settings.json with</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"w\">  </span><span class=\"c1\">// \"lean4.toolchainPath\": \"/home/mario/Documents/lean/lean4/build/release/stage1\"</span>\n</code></pre></div>\n<p>which indicates that I have indeed used this trick in testing</p>",
        "id": 391958372,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695143458
    },
    {
        "content": "<p>My preference would be to just use <code>elan override</code> (or <code>lean-toolchain.local</code> in the future, perhaps) for that as I would <em>definitely</em> forget to reset the option for other projects</p>",
        "id": 391958537,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695143526
    },
    {
        "content": "<p>Even if we leave the option in VSCode for power users, there should be an un-ignorable persistent warning that you are (perhaps intentionally) borking your setup. Power users would cope, presumably!</p>",
        "id": 392016864,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695170061
    },
    {
        "content": "<p>I was thinking maybe we could add a line to the status bar on the bottom left</p>",
        "id": 392018430,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695170845
    },
    {
        "content": "<p>lean 3 used to have a drop down there for what kind of checking to do as well as general status info</p>",
        "id": 392018503,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695170883
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20pre-built.20release.20assets.20for.20windows/near/391958537\">said</a>:</p>\n<blockquote>\n<p>My preference would be to just use <code>elan override</code> (or <code>lean-toolchain.local</code> in the future, perhaps) for that as I would <em>definitely</em> forget to reset the option for other projects</p>\n</blockquote>\n<p>Note that I was using it in the <em>project specific</em> vscode settings. Setting it globally sounds like almost always the wrong tool</p>",
        "id": 392018681,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695170963
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/vscode-lean4/issues/326\">https://github.com/leanprover/vscode-lean4/issues/326</a> tracks the suggestion that the extension warns about this condition.</p>",
        "id": 392030946,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695177311
    }
]