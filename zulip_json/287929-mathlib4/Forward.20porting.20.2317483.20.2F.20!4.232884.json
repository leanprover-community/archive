[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Forward.20porting.20.2317483/near/341335808\">said</a>:</p>\n<blockquote>\n<p>Here's a rough outline of how I'd recommend you proceed</p>\n<ul>\n<li>Wait for the mathlib3 PR to be merged. I've pinged <span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> privately to check they're happy with it. I think this should be easy enough to forward port to justify merging it, but want to double check everything before creating forward-porting work</li>\n<li>Wait for mathport to regenerate against your new output. That happens every 24 hours I think.</li>\n<li>Use the mathport output to update <code>src/Algebra/Group/Basic.lean</code>.  This is a somewhat manual process unfortunately.</li>\n<li>Fix all the downstream proofs again using the mathlib3 PR as a guide. You can avoid actually installing Lean 4 on your local machine by using <a href=\"https://gitpod.io/#https://github.com/leanprover-community/mathlib4\">https://gitpod.io/#https://github.com/leanprover-community/mathlib4</a>. Make sure to update the header SHAs in all the files you fix.</li>\n</ul>\n</blockquote>\n<p>OK; I'm now at it.<br>\nJust to make sure I do this right: The \"header SHA\" refers to the last commit of <a href=\"https://github.com/leanprover-community/mathlib/pull/17483\">#17483</a> (the one that says \"bors pushed a commit...\", i.e., 2196ab363eb097c008d4497125e0dde23fb36db2)? So this is what I should add in all modified files?</p>",
        "id": 341888513,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678822797
    },
    {
        "content": "<p>Take a look at <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/algebra/group/basic\">port-status#algebra/group/basic</a></p>",
        "id": 341890998,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678823602
    },
    {
        "content": "<p>The top-most under \"Changes in Mathlib3\"? (It is the same.)</p>",
        "id": 341891160,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678823650
    },
    {
        "content": "<p>As a more general rule, whichever entry you actually intend to forward-port.</p>",
        "id": 341891244,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678823677
    },
    {
        "content": "<p>What is the meaning of \"entry\" here?</p>",
        "id": 341891427,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678823743
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Forward.20porting.20.2317483/near/341890998\">said</a>:</p>\n<blockquote>\n<p>Take a look at <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/algebra/group/basic\">port-status#algebra/group/basic</a></p>\n</blockquote>\n<p>Unfortunately this doesn't link to the mathport file just yet</p>",
        "id": 341891470,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678823757
    },
    {
        "content": "<p>Sorry, I mean \"commit above the sync marker in the left mathlib3 column\"</p>",
        "id": 341891620,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678823802
    },
    {
        "content": "<p>You should check that none of your files have pending forward-ports already</p>",
        "id": 341891734,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678823833
    },
    {
        "content": "<p>You can do that on the out-of-sync page on <a href=\"https://leanprover-community.github.io/mathlib-port-status\">#port-dashboard</a> by searching for your PR number. If any other PRs appear on the files that match, those should be forward-ported first</p>",
        "id": 341891978,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678823901
    },
    {
        "content": "<p>By entering \"<a href=\"https://github.com/leanprover-community/mathlib/pull/2884\">#2884</a>\" in the search box?</p>",
        "id": 341892551,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678824060
    },
    {
        "content": "<p>I've just stumbled over the following. Currently, <code>Algebra.Order.Group.Abs</code> has (line 90-)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">eq_or_eq_neg_of_abs_eq</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">∨</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">eq_comm</span><span class=\"o\">,</span> <span class=\"n\">eq_neg_iff_eq_neg</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">abs_choice</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>Looking at the mathport output, this should be changed by replacing <code>eq_neg_iff_eq_neg</code> with <code>neg_eq_iff_eq_neg</code>.<br>\nHowever, when I do this, I get the error message</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">h</span><span class=\"bp\">✝</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">abs</span> <span class=\"n\">a</span> <span class=\"bp\">∨</span> <span class=\"n\">abs</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">abs</span> <span class=\"n\">a</span> <span class=\"bp\">∨</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">abs</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n</code></pre></div>\n<p>On the other hand,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">eq_comm</span><span class=\"o\">,</span> <span class=\"n\">eq_comm</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"bp\">-</span><span class=\"n\">_</span><span class=\"o\">),</span> <span class=\"n\">neg_eq_iff_eq_neg</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">abs_choice</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>works fine. It looks like <code>simpa</code> did not apply <code>eq_comm</code> in the same way as in mathlib3.</p>\n<ul>\n<li>Is this known?</li>\n<li>Is it OK to replace <code>simpa</code> with <code>rw ..., exact</code>?</li>\n</ul>",
        "id": 341893836,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678824419
    },
    {
        "content": "<p>There is a similar problem in the next theorem, but without <code>eq_comm</code>, again <code>simpa</code> not simplifying in the same way as in mathlib3.</p>",
        "id": 341894880,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678824803
    },
    {
        "content": "<p>Can you push what you have so far, so that I can take a look?</p>",
        "id": 341910234,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678830051
    },
    {
        "content": "<p>I did. (I left the output from mathport in comments.)</p>",
        "id": 341910620,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678830226
    },
    {
        "content": "<p>I have made the changes to the files that are already ported (but see the questions related to <code>Algebra.Order.Group.Abs</code>).<br>\nBuilding mathlib4 has just succeeded.</p>",
        "id": 341910777,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678830288
    },
    {
        "content": "<p>The mathlib3 PR touches three files that have open porting PRs (<code>algebra.order.to_interval</code>, <code>data.num.lemmas</code> and <code>set_theory.game.pgame</code>). What, if anything, should I do about these?</p>",
        "id": 341910932,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678830361
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Forward.20porting.20.2317483/near/341892551\">said</a>:</p>\n<blockquote>\n<p>By entering \"<a href=\"https://github.com/leanprover-community/mathlib/pull/2884\">#2884</a>\" in the search box?</p>\n</blockquote>\n<p>No, the mathlib3 PR. Sorry, I didn't notice that you made <a href=\"https://github.com/leanprover-community/mathlib4/pull/2884\">!4#2884</a></p>",
        "id": 341913090,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678831250
    },
    {
        "content": "<p>I checked the \"mathlib porting status\" of all the files I touched, and there were no other mathlib3 commits than <a href=\"https://github.com/leanprover-community/mathlib/pull/17483\">#17483</a> since the last sync.</p>",
        "id": 341913399,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678831376
    },
    {
        "content": "<p>OK, there is one more file with an open porting PR, <code>ring_theory.valuation.basic</code>.<br>\nThere is also one file, <code>data.real.ereal</code>, which needed no change. I assume I should still update the SHA there?</p>",
        "id": 341913801,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678831568
    },
    {
        "content": "<p>The open PR, <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/ring_theory/valuation/basic\">port-status#ring_theory/valuation/basic</a>, will find that they no longer build against master, so hopefully things will sort themselves out</p>",
        "id": 342116087,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678899523
    },
    {
        "content": "<p>To be helpful, you could put a review comment on the right line of the PR drawing attention to the change that needs forward-porting</p>",
        "id": 342116185,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678899551
    },
    {
        "content": "<p>OK; I did that now.</p>",
        "id": 342127081,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678902375
    }
]