[
    {
        "content": "<p>I'm doing some more minimization, and ... I am a bit grumpy about some of the files in mathlib. It is not reasonable to have the definition of <code>MetricSpace</code> be on line 2800 of the file called <code>MetricSpace/Basic.lean</code> Everything before it should <em>be in another file</em>.</p>\n<p>Please, all reviewers, let's start rejecting changes to files that are over 1000 lines long until they are split, or insist that when adding generalizations, files are split appropriately.</p>\n<p>Similarly I suspect the world \"archimedean\" just should never appear in <code>Mathlib.Analysis.Normed.Group.Seminorm</code>; why is this not in its own file?</p>",
        "id": 357722734,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683851973
    },
    {
        "content": "<p>Should we add something to the style linter?</p>",
        "id": 357723786,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1683852435
    },
    {
        "content": "<p>Huh, I guess we could add exceptions for the existing files, I hadn't thought of that.</p>",
        "id": 357724684,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683852820
    },
    {
        "content": "<p>I don't disagree (at all), but do we want to do much of the splitting work during the port?</p>",
        "id": 357757223,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1683869047
    },
    {
        "content": "<p>There's a file pretty close to the top of the unported queue with over 3000 lines... We should probably split it in 4 pieces asap.</p>",
        "id": 357758187,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1683869518
    },
    {
        "content": "<p>I'll attempt to split <code>analysis.calculus.fderiv</code></p>",
        "id": 357762414,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1683871205
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/18995\">#18995</a></p>",
        "id": 357788825,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1683879302
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Let's.20not.20have.20big.20files.3F/near/357722734\">said</a>:</p>\n<blockquote>\n<p>Please, all reviewers, let's start rejecting changes to files that are over 1000 lines long until they are split, or insist that when adding generalizations, files are split appropriately.</p>\n</blockquote>\n<p>Splitting files is not an easy task. I don't want to put the charge of splitting a file on a random contributor (or on a hurried contributor: I am still unhappy with some of the splits you made back in November for the sake of the port). I also don't want to set a hard limit because often the way a file should be split only becomes evident once it has a lot more material.</p>",
        "id": 357792364,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1683880205
    },
    {
        "content": "<p>However having online a list of big files to tackle makes sense. Then someone competent in the relevant area can do the split calmly and pertinently.</p>",
        "id": 357792640,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1683880273
    },
    {
        "content": "<p><code>ring_theory.polynomial.cyclotmic.basic</code> should be quite easy to split (it's a little over 1000 lines), for examples results about the roots can go to a separate files, and similar for characteristic <code>p</code> results. I can do it next week.</p>",
        "id": 357876890,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1683899339
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/19004\">#19004</a> splits up <code>analysis.special_functions.gamma</code> (1500 lines) into 3 chunks. It'll be a long while before the port reaches this one, but I had some changes I wanted to PR to it anyway, so I thought I'd do a split at the same time.</p>",
        "id": 357962976,
        "sender_full_name": "David Loeffler",
        "timestamp": 1683917500
    },
    {
        "content": "<p>I think I'd recommend against doing the split and the new code in the same PR</p>",
        "id": 357964452,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1683917962
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Let's.20not.20have.20big.20files.3F/near/357964452\">said</a>:</p>\n<blockquote>\n<p>I think I'd recommend against doing the split and the new code in the same PR</p>\n</blockquote>\n<p>Fair point: I've backed out the content changes and they can go into a separate PR once <a href=\"https://github.com/leanprover-community/mathlib/pull/19004\">#19004</a> is merged.</p>",
        "id": 357970272,
        "sender_full_name": "David Loeffler",
        "timestamp": 1683919646
    },
    {
        "content": "<p>I am working on splitting up <code>analysis.special_functions.pow</code>. It divides up quite neatly into 3 sections for power operations on complex, real, and nnreal; but it is imported in a large number of other files so it is painful to work out which other files need to import which chunk.</p>",
        "id": 358013092,
        "sender_full_name": "David Loeffler",
        "timestamp": 1683938078
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481963\">David Loeffler</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Let's.20not.20have.20big.20files.3F/near/358013092\">said</a>:</p>\n<blockquote>\n<p>I am working on splitting up <code>analysis.special_functions.pow</code>.</p>\n</blockquote>\n<p>PR ready for review at <a href=\"https://github.com/leanprover-community/mathlib/pull/19006\">#19006</a></p>",
        "id": 358277646,
        "sender_full_name": "David Loeffler",
        "timestamp": 1684078149
    }
]