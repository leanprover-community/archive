[
    {
        "content": "<p><a href=\"https://github.com/leanprover/std4/pull/131\">std4#131</a> implements a framework for doing hole commands similar to mathlib3, except that it doesn't have the <code>{! !}</code> variant, it just uses plain holes. In particular, it implements autocompletion for <code>{ a := _, b := _ }</code> and <code>fun | .a =&gt; _ | .b =&gt; _</code>.</p>\n<p>For example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Monad</span> <span class=\"n\">Id</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n  <span class=\"n\">map</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n  <span class=\"n\">mapConst</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n  <span class=\"n\">pure</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n  <span class=\"n\">seq</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n  <span class=\"n\">seqLeft</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n  <span class=\"n\">seqRight</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n  <span class=\"n\">bind</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">Expr</span> <span class=\"bp\">â†’</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">bvar</span> <span class=\"n\">deBruijnIndex</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">fvar</span> <span class=\"n\">fvarId</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">mvar</span> <span class=\"n\">mvarId</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">sort</span> <span class=\"n\">u</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">const</span> <span class=\"n\">declName</span> <span class=\"n\">us</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">lam</span> <span class=\"n\">binderName</span> <span class=\"n\">binderType</span> <span class=\"n\">body</span> <span class=\"n\">binderInfo</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">forallE</span> <span class=\"n\">binderName</span> <span class=\"n\">binderType</span> <span class=\"n\">body</span> <span class=\"n\">binderInfo</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">letE</span> <span class=\"n\">declName</span> <span class=\"n\">type</span> <span class=\"n\">value</span> <span class=\"n\">body</span> <span class=\"n\">nonDep</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">lit</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">mdata</span> <span class=\"n\">data</span> <span class=\"n\">expr</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">proj</span> <span class=\"n\">typeName</span> <span class=\"n\">idx</span> <span class=\"n\">struct</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 356628735,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1683534388
    }
]