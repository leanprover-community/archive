[
    {
        "content": "<p>In the mathlib PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/7686\">#7686</a> for testing a lean PR, <code>get cache</code> seems to have entered an infinite loop:</p>\n<div class=\"codehilite\" data-code-language=\"null\"><pre><span></span><code>Warning: lake-packages/std/Std/Tactic/Relation/Rfl.lean not found. Skipping all files that depend on it\nWarning: lake-packages/std/Std/Tactic/Relation/Symm.lean not found. Skipping all files that depend on it\nWarning: lake-packages/std/Std/Tactic/Relation/Rfl.lean not found. Skipping all files that depend on it\nWarning: lake-packages/std/Std/Tactic/Relation/Symm.lean not found. Skipping all files that depend on it\nWarning: lake-packages/std/Std/Tactic/Relation/Rfl.lean not found. Skipping all files that depend on it\nWarning: lake-packages/std/Std/Tactic/Relation/Symm.lean not found. Skipping all files that depend on it\nWarning: lake-packages/std/Std/Tactic/Relation/Rfl.lean not found. Skipping all files that depend on it\n...\n</code></pre></div>\n<p>Last night it ran for 6+ hours; I re-ran it again today and the same thing happened. I'll try pushing another commit just to jostle it, but I just wanted to report that this was possible.</p>",
        "id": 398158750,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698096564
    },
    {
        "content": "<p>Do you possibly have circular imports?</p>",
        "id": 398159509,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698096974
    },
    {
        "content": "<p>cache doesn't have any import cycle detection so this seems like the most likely way to get it to loop</p>",
        "id": 398159562,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698097021
    },
    {
        "content": "<p>It's possibleâ€”I don't really know what's on this branch, since it's mostly <code>nightly-testing</code> and other PR testing branches.</p>",
        "id": 398159766,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698097164
    },
    {
        "content": "<p>Weirdly (to me), <code>lake update</code> seems to have fixed it :)</p>",
        "id": 398160121,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698097385
    },
    {
        "content": "<p>fixed in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7876\">#7876</a></p>",
        "id": 398160449,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698097593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span> Could you try merging <a href=\"https://github.com/leanprover-community/mathlib4/pull/7876\">#7876</a> into your branch and see if it fixes the issue here? I know that this fixes <em>a</em> bug but I don't know if it fixes the one reported here.</p>",
        "id": 398174931,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698107146
    },
    {
        "content": "<p>I'll undo my lake update commit and try. :)</p>",
        "id": 398177276,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698108626
    },
    {
        "content": "<p>Unfortunately, since then, I've rebased too much and I just can't get it into the failing state again (so that I can test the fix). But for what it's worth, <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6610437853/job/17977482838\">here</a> is one of the looping builds. The issue is that I've tried to fix the std4 branch that this depends on in the meantime, and I'm not sure exactly how. If there's some way to extract the std commit this depends on from the log files, though, maybe I can recreate it...</p>",
        "id": 398183348,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698112463
    },
    {
        "content": "<p>The commit there is <a href=\"https://github.com/leanprover-community/mathlib4/tree/835c1b33b13c640a22a1b3e68bb2ec99d7b4616f\">https://github.com/leanprover-community/mathlib4/tree/835c1b33b13c640a22a1b3e68bb2ec99d7b4616f</a>, which contains <a href=\"https://github.com/thorimur/std4/tree/4298098844094010117d0db4ca3f38d86bacfb28\">https://github.com/thorimur/std4/tree/4298098844094010117d0db4ca3f38d86bacfb28</a> in the <code>lake-manifest.json</code></p>",
        "id": 398184849,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698113280
    },
    {
        "content": "<p>Ah great, thanks. I <code>reset --hard</code> to those commits; let's see what happens.</p>",
        "id": 398185630,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698113686
    },
    {
        "content": "<p>Alright, we've got an infinite loop! <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6621490372/job/17985530448\">workflow</a></p>",
        "id": 398185884,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698113781
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/508XRceeyglTl8GGbDGN5nHH/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/508XRceeyglTl8GGbDGN5nHH/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/508XRceeyglTl8GGbDGN5nHH/image.png\"></a></div>",
        "id": 398185905,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698113788
    },
    {
        "content": "<p>Now I'll merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/7876\">#7876</a>.</p>",
        "id": 398185936,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698113800
    },
    {
        "content": "<p>Great, it made it past the crucial stage! <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6621525084/job/17985622832?pr=7686\">workflow</a></p>",
        "id": 398186571,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698114046
    }
]