[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.SlimCheck</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Testing.SlimCheck.Gen</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Testing.SlimCheck.Sampleable</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Testing.SlimCheck.Testable</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">n</span>\n  <span class=\"n\">slim_check</span> <span class=\"c1\">-- unknown free variable '_uniq.7'</span>\n</code></pre></div>",
        "id": 374439988,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1689113363
    },
    {
        "content": "<p>Nope, it was the other one, <code>withMainContext</code></p>",
        "id": 374440901,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1689113775
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/5823\">#5823</a></p>",
        "id": 374441306,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1689113950
    }
]