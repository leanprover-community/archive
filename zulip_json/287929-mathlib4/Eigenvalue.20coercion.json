[
    {
        "content": "<p>As with other subtype synonyms in Lean 4, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Module.End.Eigenvalues#doc\">docs4#Module.End.Eigenvalues</a> no longer automatically inherits the <code>Subtype.val</code> coercion from <code>Eigenvalues f</code> to <code>R</code>. This came up while porting <code>analysis.inner_product_space.spectrum</code>. Should I define <code>Eigenvalues.val</code> and set it up as a coercion?</p>",
        "id": 366251340,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686762370
    },
    {
        "content": "<p>Should it be reducible?</p>",
        "id": 366269396,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686766748
    },
    {
        "content": "<p>I don't see much point in declaring \"an eigenvalues is a element that is an eigenvalue\" an implementation detail</p>",
        "id": 366269771,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686766837
    },
    {
        "content": "<p>Probably, Lean also wasn't able to infer <code>DecidableEq (Eigenvalues f)</code> from <code>DecidableEq R</code>.</p>",
        "id": 366271995,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686767381
    },
    {
        "content": "<p>Oh, hah, I just found a porting note about the coercion. I think whoever ported that file didn't know about <code>CoeOut</code>, which is the appropriate class here.</p>",
        "id": 366272568,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686767515
    },
    {
        "content": "<p>I'm just going to add the necessary instances, but maybe we can make it reducible later if we run into more trouble.</p>",
        "id": 366272986,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686767601
    },
    {
        "content": "<p>We could try a backport, given it's only one line! I would guess it makes less work overall not more</p>",
        "id": 366290166,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686772284
    },
    {
        "content": "<p>Note we already made a similar change for module.dual when porting, so there's precedent for changing reducibility to help with porting</p>",
        "id": 366290270,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686772317
    },
    {
        "content": "<p>I've ported several files down the chain and the only extra thing I've needed thus far is the <code>DecidableEq</code> instance, and I'm almost to the leaf files. I'm okay with making it reducible, but let's either not bother with a backport, or not make reducible until after the port.</p>",
        "id": 366294191,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686773534
    }
]