[
    {
        "content": "<p>I think it'd be nice to have a CI that checks whether our <code>set_option hearbeats ... in</code> are actually accurate and not just randomly massively drop: as far as I understand, some of the cause of these is still undiagnosed, and seeing PRs such as <a href=\"https://github.com/leanprover-community/mathlib4/pull/6564\">#6564</a> that are just getting rid of some without knowing what changed (i.e.: what bugs to report/fix or how to change to the correct design pattern in the rest of the library) is not good</p>",
        "id": 384572270,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691955469
    },
    {
        "content": "<p>Loads has happened recently. I like to try and remove heartbeat bumps from files which my students are using because it makes their lives easier but I don't methodically go through mathlib deleting the heartbeat bumps I've accidently removed once I've found the fix which works for the file in question. The answer is just \"things got better for lots of unrelated reasons recently\"</p>",
        "id": 384573245,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691955870
    },
    {
        "content": "<p>But I agree that having some way of checking whether they can be removed is a good idea</p>",
        "id": 384573351,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691955930
    },
    {
        "content": "<p>The one thing I <em>don't</em> like is changing stuff from <code>heartbearts = 800000</code> to <code>heartbeats = 635368 -- this is the right number</code> because this will just break the moment someone makes an unrelated PR and the number goes up by 5. I always put a power of two times default heartbeats when I'm raising them, and always divide by 2 when lowering them</p>",
        "id": 384573566,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691956038
    },
    {
        "content": "<p>FWIW: recent unrelated changes which decreased heartbeats: reprioritising (lowering) instances at the root of the algebra hierarchy, universe changes, <code>with</code> removal...</p>",
        "id": 384574184,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691956290
    },
    {
        "content": "<p>I don't think it even needs to be a CI option, the overhead for timing should be low enough we can just do it always</p>",
        "id": 384574407,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691956361
    },
    {
        "content": "<p><code>limit_heartbeats in</code></p>",
        "id": 384574452,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691956377
    },
    {
        "content": "<p>this would be a lovely linter, but the heartbeat timing would have to happen in core, since the linter comes too late to be able to instrument the command to time it</p>",
        "id": 384575530,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691956797
    },
    {
        "content": "<p>We also don't have any code for the synthInstance heartbeats, right?</p>",
        "id": 384578297,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691957856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> We can teach <code>count_heartbeats</code> to output <code>limit_heartbeats NNN in</code> that does the same as <code>count_heartbeats</code>, then reports if the number is now below the default value / much lower than the argument.</p>",
        "id": 384580737,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1691958925
    },
    {
        "content": "<p>And replace all <code>set_option maxHeartbeats</code> with <code>limit_heartbeats</code></p>",
        "id": 384580844,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1691958967
    }
]