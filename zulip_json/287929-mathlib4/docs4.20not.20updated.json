[
    {
        "content": "<p>It seems like docs4 hasn't updated in 2 weeks (cf. <a href=\"https://github.com/leanprover-community/mathlib4_docs/actions\">https://github.com/leanprover-community/mathlib4_docs/actions</a>). Is there a reason? It would be nice for it to be up-to-date.</p>",
        "id": 340498115,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678326882
    },
    {
        "content": "<p>I'll guess that it's this:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Docs.20not.20updated/near/317625170\">said</a>:</p>\n<blockquote>\n<p>Shouldn't the build be using compatible versions of std4 and mathlib4?</p>\n</blockquote>\n<blockquote>\n<p>building std4:master against mathlib4:master is likely to be frequently broken</p>\n</blockquote>\n<p>docs4 only builds on Thursdays in months containing \"r\" ... er, I mean, on days when mathlib is compatible with the latest version of Std.</p>",
        "id": 340498611,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678327322
    },
    {
        "content": "<p>So we need to bump to the latest std4 in mathlib?</p>",
        "id": 340499159,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678327844
    },
    {
        "content": "<p>Yes ... I don't know if it needs the latest Lean nightly, too.</p>",
        "id": 340499193,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678327871
    },
    {
        "content": "<p>Oh, Gabriel is working on it anyway: <a href=\"https://github.com/leanprover-community/mathlib4/pull/2709\">!4#2709</a></p>",
        "id": 340499276,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678327942
    },
    {
        "content": "<p>And it's green.</p>",
        "id": 340500814,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1678329175
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 340501665,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678329838
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/docs4.20not.20updated/near/340499193\">said</a>:</p>\n<blockquote>\n<p>Yes ... I don't know if it needs the latest Lean nightly, too.</p>\n</blockquote>\n<p>Generally speaking I try to keep the nightly in sync with mathlib4...the mathlib4 vs std4 master thingy is an unfortunate side effect caused by the lake update I run on mathlib to pull in the latest doc gen</p>",
        "id": 340528322,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678346084
    },
    {
        "content": "<p>I'd love for us not to have this problem.  I really miss the mathlib3 docs which updated every couple of hours, even if every maintainer was on holiday for a month.</p>\n<p>Why do we need the latest doc-gen4?  Can we set it up so that the docs are generated from whatever version of doc-gen is currently in the mathlib manifest?  And then just do PRs to mathlib when we want to update the doc-gen version?</p>",
        "id": 340664519,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678381789
    },
    {
        "content": "<p>In mathlib3 we always build against the latest doc-gen</p>",
        "id": 340670099,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678383141
    },
    {
        "content": "<p>But also, we generate a project file with the exact versions of everything in CI, rather than using whatever is committed</p>",
        "id": 340670157,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678383158
    },
    {
        "content": "<p>If we don't require the latest version of doc-gen, the worst that can happen is that the docs build with an old version of doc-gen.  If we do require the latest version of doc-gen, the worst that can happen (and it indeed happens frequently) is that the docs don't build at all!</p>",
        "id": 340675657,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678384519
    },
    {
        "content": "<p>Right let me lay out the issue fully:</p>\n<ol>\n<li>\n<p>Why do you have to use the latest doc-gen4? You don't actually have to do that, however you want to. This is because doc-gen4 uses Lean compiler internals to figure things out. If a compiler API changed behavior in the lean nightly that mathlib is using compared to the version that your pinned version of doc-gen4 that you are using it can (and has in the past) blown up. I would expect this to change once the compiler finally stabilizes <span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span> So no the worst is not that your docs build with maybe not the latest feature set, the worst is actually that it might just not work at all as well :(</p>\n</li>\n<li>\n<p>Why is what is happening right now actually an issue? The issue is not that I pull doc-gen4 to the latest version, in fact I try to always keep doc-gen4 latest compatible to mathlib4 latest. The issue is mostly the <em>way</em> I do it. Basically the CI will substitute the https source for doc-gen4 with a hard file path to the current doc-gen4 checkout and run <code>lake update</code> to make sure it is using the latest version (and also the latest versioon of the dependencies). However as a side effect all dependencies of mathlib4 get updated as well. This is not something that <em>has</em> to happen. Technically speaking lake could support only updating one dependency and all its transitive deps instead of all project dependencies, it just doesn't (yet).</p>\n</li>\n</ol>",
        "id": 340684669,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678387112
    },
    {
        "content": "<p>Why do you need to substitute the doc-gen4 source <em>and</em> run <code>lake update</code>?</p>",
        "id": 340686012,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1678387491
    },
    {
        "content": "<p>Because lake just uses the pinned commit in lake-manifest.json otherwise</p>",
        "id": 340686091,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678387511
    },
    {
        "content": "<p>I could of course start hacking on lake-manifest.json direclty but that would also mean figuring out doc-gen's dependency chain and updating those in the manifest accordingly if I did an update...which feels like something lake should do?</p>",
        "id": 340686223,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678387548
    },
    {
        "content": "<p>Ok, I wasn't sure on what level you do the substitution. But in the end, updating doc-gen4 sounds like something that should be up to the mathlib4 maintainers and recorded in the manifest like any other dependency. Mathlib4 itself is, perhaps just as much, a consumer of compiler internals as well.</p>",
        "id": 340687589,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1678387968
    },
    {
        "content": "<p>Ah fair enough I was only thinking about it as a library but of course it has tactics as well.</p>\n<p>In that case I'll update the doc-gen4 CI as follows:</p>\n<ul>\n<li>it will periodically (8 hour periods right now, one build is almost at 3h by now) build mathlib4 docs with the doc-gen4 that is in mathlib4 right now</li>\n<li>it will use std4 with the same approach as right now for its own test instead instead since std4 does indeed not have dependencies</li>\n</ul>",
        "id": 340689077,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678388414
    },
    {
        "content": "<p>Two things:</p>\n<ol>\n<li>Why is the build so much longer than for mathlib 3? (Curious)</li>\n<li>Would you mind adding the commit it's building against to the index page?</li>\n</ol>",
        "id": 340693605,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678389730
    },
    {
        "content": "<p>Okay I've found another issue while doing this. the manifest.json of mathlib4 does not contain doc-gen4. most likely because you ran <code>lake update</code> without <code>-Kdoc=on</code> so if you want lake to run the doc-gen4 facet against mathlib4 you <em>have</em> to run <code>lake -Kdoc=on</code> right now to even get lake to recognize it as a depnedency. However if doc-gen4 was in the manifest it would be downloaded by every mathlib4 user even if 99.9% don't need it. How do you want to deal with this? Its either add it to your manifest.json and have people download useless data or what you have right now /o\\</p>",
        "id": 340693853,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678389826
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/287929-mathlib4/topic/docs4.20not.20updated/near/340693605\">said</a>:</p>\n<blockquote>\n<p>Two things:</p>\n<ol>\n<li>Why is the build so much longer than for mathlib 3? (Curious)</li>\n<li>Would you mind adding the commit it's building against to the index page?</li>\n</ol>\n</blockquote>\n<ol>\n<li>Because doc-gen4 uses LeanInk to render the source code of the page in an interactive/explorable way, this takes up a large time of the build time. If i was to disable this it would go down drastically.</li>\n<li>Which commit? doc-gens? Or the one of the repo it is working in?</li>\n</ol>",
        "id": 340694183,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678389938
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/287929-mathlib4/topic/docs4.20not.20updated/near/340693853\">said</a>:</p>\n<blockquote>\n<p>Okay I've found another issue while doing this. the manifest.json of mathlib4 does not contain doc-gen4. most likely because you ran <code>lake update</code> without <code>-Kdoc=on</code> so if you want lake to run the doc-gen4 facet against mathlib4 you <em>have</em> to run <code>lake -Kdoc=on</code> right now to even get lake to recognize it as a depnedency. However if doc-gen4 was in the manifest it would be downloaded by every mathlib4 user even if 99.9% don't need it. How do you want to deal with this? Its either add it to your manifest.json and have people download useless data or what you have right now /o\\</p>\n</blockquote>\n<p>Oh and...this issue would also be resolved if lake update supported the \"only one dep and its transitives\" feature^^</p>",
        "id": 340694466,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678390016
    },
    {
        "content": "<ol start=\"2\">\n<li>Maybe both? We have mathlib, Lean, and doc-gen here: <a href=\"https://leanprover-community.github.io/mathlib_docs/index.html\">https://leanprover-community.github.io/mathlib_docs/index.html</a></li>\n</ol>",
        "id": 340701625,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678392173
    },
    {
        "content": "<p>Okay...I'm not 100% certain how to obtain the commit of doc-gen4 yet but i'll figure it out <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 340701777,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678392222
    },
    {
        "content": "<p>I'm okay with just mathlib for now, that's what I was originally thinking.</p>",
        "id": 340702073,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678392309
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/xsDdOcuzNCLCHLJZE656h-0p/image.png\">image.png</a>  you'll have it once the build works again then!</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/xsDdOcuzNCLCHLJZE656h-0p/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/xsDdOcuzNCLCHLJZE656h-0p/image.png\"></a></div>",
        "id": 340709114,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678394832
    },
    {
        "content": "<p>Including the commit of doc-gen4 is probably more useful for you when debugging than it is for mathlib users</p>",
        "id": 340709956,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678395134
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/287929-mathlib4/topic/docs4.20not.20updated/near/340693853\">said</a>:</p>\n<blockquote>\n<p>Okay I've found another issue while doing this. the manifest.json of mathlib4 does not contain doc-gen4. most likely because you ran <code>lake update</code> without <code>-Kdoc=on</code> so if you want lake to run the doc-gen4 facet against mathlib4 you <em>have</em> to run <code>lake -Kdoc=on</code> right now to even get lake to recognize it as a depnedency. However if doc-gen4 was in the manifest it would be downloaded by every mathlib4 user even if 99.9% don't need it. How do you want to deal with this? Its either add it to your manifest.json and have people download useless data or what you have right now /o\\</p>\n</blockquote>\n<p>Would it work to just always build mathlib4:master with doc-gen:master? As mentioned earlier this is what we do in lean 3. Obviously this can still blow up but it should be less often since doc-gen changes less frequently than mathlib/std4</p>",
        "id": 340735961,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678405762
    },
    {
        "content": "<p>That's what is currently happening, as outlined above this can work in principle and is merely broken because of the behavior of lake update</p>",
        "id": 340775723,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678430807
    },
    {
        "content": "<p>Do we have a Lake issue for that yet?</p>",
        "id": 340793862,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1678437968
    },
    {
        "content": "<p>Yes its <a href=\"https://github.com/leanprover-community/mathlib/pull/148\">#148</a> from January</p>",
        "id": 340800716,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678439842
    },
    {
        "content": "<p>as far as I remember, the reason we removed doc-gen4 from mathlib's lakefile is because it was forming a circular dependency between doc-gen4 (which relies on mathlib for its test CI) and mathlib (which relied on doc-gen4 as a lake package), which was making it very difficult to update doc-gen4. is my memory right there?</p>",
        "id": 341217802,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678593670
    },
    {
        "content": "<p>doc-gen4 is a dependency of mathlib4 it does just not show up in the manifest due to the way it is getting upgraded.</p>\n<p>And I also do not rely on it as a dependency , the CI will checkout mathlib4 and update its manifest in such a way that it shows up again and just use the docs facet directly.</p>",
        "id": 341236896,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678608308
    },
    {
        "content": "<p>So your memory is doubly wrong :P it is still a dependency you can pull in and the thing you describe is not an issue</p>",
        "id": 341236973,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678608351
    },
    {
        "content": "<p>Workaround proposal: have the CI make a new, mostly empty lake project with dependency on mathlib4 and doc-gen4. Then <code>lake update</code> will not update all of mathlib's dependencies :P</p>",
        "id": 341238579,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678609217
    },
    {
        "content": "<p>I guess the other workaround would be to inject the necessary doc-gen4 entry in the lake manifest. But that's more annoying/fragile</p>",
        "id": 341238796,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678609328
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> <a href=\"#narrow/stream/287929-mathlib4/topic/docs4.20not.20updated/near/341238579\">said</a>:</p>\n<blockquote>\n<p>Workaround proposal: have the CI make a new, mostly empty lake project with dependency on mathlib4 and doc-gen4. Then <code>lake update</code> will not update all of mathlib's dependencies :P</p>\n</blockquote>\n<p>Hah, that would probably work out quite nicely indeed...the only issue with this would be that of course the feature that <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> asked for regarding the commit would break. This is because doc-gen4 is obviously not looking for some dependency named mathlib4 while generating the docs side (after all it is supposed to be general purpose) but instead takes the commit of the repository it is in right now. But if people are fine with not having the commit of matlhib4 on the main page until the lake thing is fixed I can try it like that and hopefullly not stumble upon something that breaks its again while implementing.</p>",
        "id": 341259466,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1678619534
    },
    {
        "content": "<p>I was thinking this could be just for the testing CI</p>",
        "id": 341310669,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678640908
    },
    {
        "content": "<p>but I see now that the issue persists for the actual mathlib docs too...</p>",
        "id": 341311022,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678641075
    },
    {
        "content": "<p>It feels like <a href=\"https://github.com/leanprover/lake/issues/148\">https://github.com/leanprover/lake/issues/148</a> should not be too hard to fix. I can try to put a PR together this week</p>",
        "id": 341311077,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678641112
    },
    {
        "content": "<p>(@ zulip maintainers, why does <code>lake#148</code> link to <code>leanprover-community/lake</code> instead of <code>leanprover/lake</code>? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span>)</p>",
        "id": 341311234,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678641209
    },
    {
        "content": "<p>(Because no one added a special rule for <code>lake</code> like we did for <code>lean4</code>, so it's falling back on the default. Ask in <a class=\"stream-topic\" data-stream-id=\"236604\" href=\"/#narrow/stream/236604-Zulip-meta/topic/Linkifiers\">#Zulip meta &gt; Linkifiers</a> or a similar thread to get it fixed)</p>",
        "id": 341311465,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678641327
    },
    {
        "content": "<p>How often are the docs supposed to be updated nowadays?  Currently they seem to be on a four-day-old commit.</p>",
        "id": 363388611,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1685830479
    },
    {
        "content": "<p>It should be on an 8 hour basis but it appears the CI has been  failing with some funky panic for the past few tries. However since we moved the build to mathlib4 I don't get emails when that happens anymore so someone has to tell me. I'll bump doc-gen and see if that helps</p>",
        "id": 363401822,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1685839533
    },
    {
        "content": "<p>That did not help...</p>",
        "id": 363473891,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1685877187
    },
    {
        "content": "<p>Okay so we seem to be getting a ginormous panic that starts with:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Inking</span><span class=\"o\">:</span> <span class=\"n\">Mathlib.Tactic.Ring.Basic</span>\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">PANIC</span> <span class=\"n\">at</span> <span class=\"n\">Lean.MetavarContext.getLevelDepth</span> <span class=\"n\">Lean.MetavarContext</span><span class=\"o\">:</span><span class=\"mi\">839</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">metavariable</span>\n<span class=\"n\">backtrace</span><span class=\"o\">:</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">lean_panic_fn</span><span class=\"bp\">+</span><span class=\"mi\">0x9e</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc5f1280e</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_Lean_Meta_SynthInstance_MkTableKey_normLevel</span><span class=\"bp\">+</span><span class=\"mi\">0x3b0</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc37455a0</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_List_mapM_loop___at_Lean_Meta_SynthInstance_MkTableKey_normExpr___spec__2</span><span class=\"bp\">+</span><span class=\"mi\">0x15d</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc374677d</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_Lean_Meta_SynthInstance_MkTableKey_normExpr</span><span class=\"bp\">+</span><span class=\"mi\">0x104</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc37469c4</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_Lean_Meta_SynthInstance_MkTableKey_normExpr</span><span class=\"bp\">+</span><span class=\"mi\">0x3fa</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc3746cba</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_Lean_Meta_SynthInstance_mkTableKey___at_Lean_Meta_SynthInstance_main___spec__1</span><span class=\"bp\">+</span><span class=\"mi\">0xdc</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc378168c</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_Lean_Meta_SynthInstance_main___lambda__1</span><span class=\"bp\">+</span><span class=\"mi\">0xd9</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc3781f79</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">lean_apply_3</span><span class=\"bp\">+</span><span class=\"mi\">0x3d4</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc5f1e864</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_Lean_Core_withCurrHeartbeats___at_Lean_Meta_SynthInstance_main___spec__3</span><span class=\"bp\">+</span><span class=\"mi\">0x29</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc3781d49</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">lean_apply_5</span><span class=\"bp\">+</span><span class=\"mi\">0x3a0</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc5f20300</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l___private_Lean_Meta_Basic_0__Lean_Meta_withNewMCtxDepthImp___rarg</span><span class=\"bp\">+</span><span class=\"mi\">0x461</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc3dfe721</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_Lean_Meta_withNewMCtxDepth___at___private_Lean_Meta_WHNF_0__Lean_Meta_toCtorWhenK___spec__1___rarg</span><span class=\"bp\">+</span><span class=\"mi\">0x20</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc3695130</span><span class=\"o\">]</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"o\">(</span><span class=\"n\">l_Lean_Meta_synthInstance_x3f___lambda__6</span><span class=\"bp\">+</span><span class=\"mi\">0x1474</span><span class=\"o\">)[</span><span class=\"mi\">0x558bc37919c4</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>....anyone has an idea on what we could do to debug here?</p>",
        "id": 363474922,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1685877548
    },
    {
        "content": "<p>I got as far as seeing that it's something that <code>_resolveTacticList</code> calls while processing (I think) <code>Mathlib.Tactic.Ring.Basic</code>.</p>\n<p><a href=\"https://github.com/leanprover/LeanInk/blob/9efd7db62dcc6cf312fd4f82df0c556acfb30002/LeanInk/Analysis/InfoTreeTraversal.lean#L342\">This line</a> seems suspicious since future lines don't always use <code>ctx?</code> rather than <code>ctx</code>. Getting this context right is needed to get the correct metavariable context, which is consistent with an \"unknown metavariable\" error</p>",
        "id": 363520785,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1685892536
    },
    {
        "content": "<p>Maybe <code>let some ctx := info.updateContext? ctx | return aux</code> instead? (while making sure to change the <code>ctx?</code> on the following line to <code>ctx</code>)</p>",
        "id": 363521146,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1685892651
    },
    {
        "content": "<p>I can confirm that generating the docs for <code>Mathlib.Tactic.Ring.Basic</code> panics, but this <code>let some ctx := ...</code> doesn't fix it. (Also, replacing the body of <code>_resolveTacticList</code> with <code>return aux</code> prevents the panic, so that localizes it a little.)</p>",
        "id": 363535639,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1685897732
    },
    {
        "content": "<p>Maybe if someone has time to try to minimize this, what I've found so far is it seems that there's some <code>have</code> expression in <code>Mathlib.Tactic.Ring.Basic</code> whose binding value contains a metavariable at some point, and the panic occurs when pretty printing the binding value. (There's a <code>delabLetFun</code> delaborator in the panic trace)</p>",
        "id": 363540224,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1685899339
    },
    {
        "content": "<p>I'm testing out the following patch:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"k\">match</span> <span class=\"n\">info.updateContext</span><span class=\"bp\">?</span> <span class=\"n\">ctx</span><span class=\"bp\">?</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">ctx</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"k\">let</span> <span class=\"n\">resolvedChildrenLeafs</span> <span class=\"bp\">←</span> <span class=\"n\">children.toList.mapM</span> <span class=\"o\">(</span><span class=\"n\">_resolveTacticList</span> <span class=\"n\">ctx</span> <span class=\"n\">aux</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>but I've never run leanink before so I'm not sure what to expect</p>",
        "id": 363540807,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685899544
    },
    {
        "content": "<p>I get a crash without an error report</p>",
        "id": 363541275,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685899686
    },
    {
        "content": "<p>I'm not getting any successful runs</p>",
        "id": 363541731,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685899831
    },
    {
        "content": "<p>Great news we have two issues now!</p>\n<ol>\n<li>The runner seems to be running out of disk space?! I am guessing this is because it isn't cleaning up after itself properly? Either way this is no bueno</li>\n<li>I have still not been able to figure out what the heck is going on with the original issue /o\\</li>\n</ol>",
        "id": 364963986,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686342797
    },
    {
        "content": "<p>Do we know if this is a LeanInk problem? If so, disabling LeanInk to have docs that build would be worth it IMHO.</p>",
        "id": 365937026,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686675948
    },
    {
        "content": "<p>The stack trace seems to indicate it is at least related. I'll try that once I'm home.</p>",
        "id": 365939813,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686676596
    },
    {
        "content": "<p>Wait what</p>",
        "id": 365955095,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686680247
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/KjNbCuhQr1fD2sauwGrb3QOW/image.png\">image.png</a><br>\nit just...passed?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/KjNbCuhQr1fD2sauwGrb3QOW/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/KjNbCuhQr1fD2sauwGrb3QOW/image.png\"></a></div>",
        "id": 365955144,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686680268
    },
    {
        "content": "<p>I hadn't touched a thing when this started running</p>",
        "id": 365955250,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686680289
    },
    {
        "content": "<p>I...guess I'll just revert the disabling change and we see if it remains stable? But this is very strange.</p>",
        "id": 365955412,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686680343
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/xjl4uRvhwKraqOmv5tIHtuDK/image.png\">image.png</a><br>\nwell I guess it is working stable again! You are welcome :P</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/xjl4uRvhwKraqOmv5tIHtuDK/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/xjl4uRvhwKraqOmv5tIHtuDK/image.png\"></a></div>",
        "id": 366111981,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686735442
    },
    {
        "content": "<p>Recently, building docs always fails in <code>RingTheory.ClassGroup</code>. What's the problem in this file?</p>",
        "id": 369120711,
        "sender_full_name": "Pol'tta / Miyahara Kō",
        "timestamp": 1687598330
    },
    {
        "content": "<p>No its failing at Mathlib.Tactic.Ring.Basic as far as I can see. This was what was happening above as well, it is related to some bug in LeanInk most likely but nobody seems too be able to figure out precisely what is going wrong and on  top of that for some reason it does not always happen either as the succesful builds in between show...</p>",
        "id": 369171376,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1687609983
    },
    {
        "content": "<p>There is still the option to just disable LeanInk floating around if it keeps failing though</p>",
        "id": 369171743,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1687610087
    },
    {
        "content": "<p>I disabled LeanInk for now...this has the positive side effect of doc-gen build times again reducing from 2h and a little bit to a mere 50 min!</p>",
        "id": 369423102,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1687702393
    }
]