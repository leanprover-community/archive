[
    {
        "content": "<p>For <code>s : Fin n -&gt; Nat</code>, we have the type <code>(i : Fin n) -&gt; Fin (s i)</code> which is equivalent to <code>Fin (Finset.prod Finset.univ s)</code>. I specifically want the equivalence given by<br>\n<code>fun x =&gt; (((x 0 * s 1 + x 1) * s 2 + x 2) ... ) * s (n-1) + x (n-1)</code><br>\nIs this implemented anywhere in mathlib?</p>",
        "id": 371447572,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1688210642
    },
    {
        "content": "<p>(I'm using Lean4, but does this belong in <a class=\"stream\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F\">#Is there code for X?</a> now? Please move it there, if so)</p>",
        "id": 371447998,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1688210726
    },
    {
        "content": "<p>I should note that <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/FinEnum.html#FinEnum.pi.finEnum\">an equivalence</a> already exists in mathlib, but it is implemented as a search through a list of all enumerated values of the pi type. which is incredibly inefficient for practical programming.</p>",
        "id": 371449434,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1688211015
    },
    {
        "content": "<p>Eric and I added this equivalence recently.</p>",
        "id": 371465468,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1688214494
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/?pattern=fin_pi_fin_equiv#doc\">docs#fin_pi_fin_equiv</a></p>",
        "id": 371465675,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1688214555
    },
    {
        "content": "<p>Note I'm not sure whether this gives the exact equivalence you want. You might have to compose with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.rev\">docs#fin.rev</a></p>",
        "id": 371466263,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1688214673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> The linkifier switched to Lean 4 some time ago. So, it's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=finPiFinEquiv#doc\">docs#finPiFinEquiv</a></p>",
        "id": 371478826,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1688217180
    },
    {
        "content": "<p>My link works though <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 371479001,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1688217216
    },
    {
        "content": "<p>The first one gives 404 to me, the second one works.</p>",
        "id": 371479086,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1688217241
    },
    {
        "content": "<p>Weird</p>",
        "id": 371479329,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1688217288
    },
    {
        "content": "<p>No, the links use different URLs</p>",
        "id": 371479571,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1688217350
    },
    {
        "content": "<p>No, it's weird that Yael's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=fin.rev#doc\">docs#fin.rev</a> works for some people (it's working for me on mobile and linking to lean 3 docs, but my version doesn't seem to be working)</p>",
        "id": 371518147,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1688226217
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>'s messages use markdown links instead of the linkifier.</p>",
        "id": 371519689,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1688226627
    },
    {
        "content": "<p>Manually editing links to look like linkifiers seems unnecessarily confusing (it has confused me in the past week too)</p>",
        "id": 371540454,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1688232459
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/product.20of.20fins/near/371466263\">said</a>:</p>\n<blockquote>\n<p>Note I'm not sure whether this gives the exact equivalence you want. You might have to compose with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.rev\">docs#fin.rev</a></p>\n</blockquote>\n<p>Thanks!!</p>",
        "id": 371548870,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1688235274
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> has marked this topic as resolved.</p>",
        "id": 371553762,
        "sender_full_name": "Notification Bot",
        "timestamp": 1688237122
    }
]