[
    {
        "content": "<p>While trying to find a home for</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Int.mul_ediv_le</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>I noticed that relevant lemmas in <code>Std.Data.Int.DivMod</code> use <code>ediv</code> and <code>emod</code> in their names (e.g., <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Int.ediv_add_emod#doc\">docs#Int.ediv_add_emod</a>, which is used in the proof), whereas in Mathlib, we have, e.g., <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Int.eq_of_mod_eq_of_natAbs_sub_lt_natAbs#doc\">docs#Int.eq_of_mod_eq_of_natAbs_sub_lt_natAbs</a> (in <code>Mathlib.Data.Int.Div</code>).</p>\n<p>What is the naming convention here? Should the lemma above be <code>Int.mul_div_le</code> instead?</p>",
        "id": 389025404,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1693845261
    },
    {
        "content": "<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span> It would be nice to get some reaction to this question. Is there a convention? Are there opionions?</p>",
        "id": 389627869,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1694084108
    },
    {
        "content": "<p>Use <code>div</code> and <code>mod</code>. <code>ediv</code> and <code>emod</code> are only used in Core and Std lemma names.</p>",
        "id": 389628248,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694084228
    },
    {
        "content": "<p>mathlib overrides the definition of <code>div</code> and <code>mod</code> to be <code>ediv</code> and <code>emod</code> instead of <code>quot</code> and <code>rem</code>.</p>",
        "id": 389628593,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694084325
    },
    {
        "content": "<p>OK, thanks!<br>\nIt is a bit unfortunate that there is some inconsistency here between Core/Std and Mathlib, but I guess it can't really be helped.</p>",
        "id": 389631889,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1694085199
    },
    {
        "content": "<p>We're not changing the mathlib definition because this is the mathematically sensible one. So the only way out is if core Lean changed its mind, which it probably won't either.</p>",
        "id": 389634295,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694085928
    },
    {
        "content": "<p>From memory long ago core agreed to change, but it is not high priority to actually do so. I think everyone agrees the Mathlib conventions are the <del>correct</del> optimal ones.</p>",
        "id": 389642074,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694088365
    }
]