[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> pointed out that we should make tests run with the standard options from the <code>lakefile.lean</code>, to avoid hacks like <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/test/Recall.lean#L8\">this</a> and <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/test/Explode.lean#L27\">this</a>.</p>\n<p>Thus we will need to run the tests from the <code>lakefile</code>. Does anyone know an example of doing this? What is the best practice here?</p>\n<p>My simple proposal would be to arrange the tests as another <code>lean_lib</code>, much like <code>Archive</code> and <code>Counterxamples</code>.</p>",
        "id": 368067100,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687300765
    },
    {
        "content": "<p>This will make <code>test.*</code> available for <code>import</code> to any package that depends on <code>mathlib4</code>.</p>",
        "id": 368080067,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687307943
    },
    {
        "content": "<p>It would be nice to have a flag for \"unreleased\" <code>lean_lib</code>s in <code>lakefile</code>s.</p>",
        "id": 368080307,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687308060
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span>, do you have advice on how we should set this up?</p>",
        "id": 368082605,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687309126
    },
    {
        "content": "<p>(Either the general question of a <code>lakefile.lean</code> driven test suite, or how to mark <code>lean_lib</code>s as \"unreleased\" / \"private\" / etc.)</p>",
        "id": 368082695,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687309183
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Running.20tests.20with.20options/near/368080307\">said</a>:</p>\n<blockquote>\n<p>It would be nice to have a flag for \"unreleased\" <code>lean_lib</code>s in <code>lakefile</code>s.</p>\n</blockquote>\n<p>I was actually working on this, but I realized this is unfortunately infeasible with the current setup. If a module exists in the build directory and that build directory is in the Lean path, than Lean will pick it up. Thus, If two packages have a module <code>test/basic.lean</code> they will clash due to Leans module resolution rules. And there is not a way for Lake to intervene here  do to this all being Lean-side (i.e., and <code>import Test.Basic</code> will  run into this problem when Lean runs the containing file)</p>\n<p>One solution would be to hoist all build files into the workspace root's build directory and selective choose which to hoist, but this could cause problem for things like <code>cache</code>.</p>",
        "id": 368084008,
        "sender_full_name": "Mac Malone",
        "timestamp": 1687309765
    },
    {
        "content": "<p>As an alternative for tests, one could make a <code>script</code> to run them to and execute <code>lean</code> with the package's <code>moreLeanArgs</code> / <code>moreServerArgs</code>.</p>",
        "id": 368084268,
        "sender_full_name": "Mac Malone",
        "timestamp": 1687309880
    },
    {
        "content": "<p>Also, if anyone has any ideas how to make this easier (or how else to overcome <code>LEAN_PATH</code> resolution), I would be happy to here them.</p>",
        "id": 368084675,
        "sender_full_name": "Mac Malone",
        "timestamp": 1687310075
    },
    {
        "content": "<p>Can't <code>lake</code> ignore some <code>lean_lib</code>s (and don't tell Lean about them) unless it is running with, say, <code>--enable-tests</code>?</p>",
        "id": 368087912,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687311607
    },
    {
        "content": "<p>So that these modules will not be in <code>lake-packages/*/build/lib</code> for a reverse dependency?</p>",
        "id": 368087960,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687311643
    },
    {
        "content": "<p>So under this suggestion, the source files for the mathlib tests would appear in a downstream project's <code>lake-packages</code>, but they would not be built or added to the LEAN_PATH.</p>",
        "id": 368088712,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687312064
    }
]