[
    {
        "content": "<p>I just noticed this whilst in the process of rewriting NNG4 advanced addition world:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Cases</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">induction</span> <span class=\"n\">t</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n  <span class=\"c\">/-</span>\n<span class=\"cm\">  a b : ℕ</span>\n<span class=\"cm\">  h : a + Nat.zero = b + Nat.zero</span>\n<span class=\"cm\">  ⊢ a = b</span>\n<span class=\"cm\">  -/</span>\n  <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">n</span> <span class=\"n\">ih</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">induction'</span> <span class=\"n\">t</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hd</span>\n  <span class=\"bp\">·</span> <span class=\"gr\">sorry</span>\n  <span class=\"c\">/-</span>\n<span class=\"cm\">  a b t : ℕ</span>\n<span class=\"cm\">  h✝ : a + t = b + t -- eh???</span>\n<span class=\"cm\">  h : a + Nat.zero = b + Nat.zero</span>\n<span class=\"cm\">  ⊢ a = b</span>\n<span class=\"cm\">  -/</span>\n  <span class=\"bp\">·</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The standard <code>induction</code> tactic tidies up after itself, but its variant <code>induction'</code> is leaving around a useless <code>t</code> and an inaccessible <code>h✝</code> which mathematically shouldn't really be there anyway (you can't prove false but that's only because you don't know anything about t so it might be 0, giving you what you have already). In NNG4 the game infrastructure doesn't support all this 2d ASCII diagram <code>=&gt;</code> stuff, so our <code>induction</code> is like NNG3, it's Lean 4 <code>induction'</code>. Hence I'm getting all this junk too in NNG. There is also the same extra junk in the successor case. </p>\n<p>In NNG3 I  modified <code>induction</code> (with help from Rob) so that it changed all Nat.zeros to 0 after an induction call. Would it be hard to modify <code>induction'</code> so that it stopped leaving all this junk around? It's never useful (at least for nat) and it will cause confusion to users.</p>",
        "id": 394932194,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696463296
    }
]