[
    {
        "content": "<p>I am waiting for the <code>nightly-testing-2023-11-24</code> branch to be created, so that I can test some lean PRs against it. The lean nightly release has happened, and mathlib <code>nightly</code> is on 2023-11-24. But the branch <code>nightly-testing-2023-11-24</code> is not created.</p>\n<p>I think what’s happening is that the <code>.github/workflows/nightly_detect_failure.yml</code> workflow, which will push to the branch (and thus create it), only runs after CI completes on the <code>nightly-testing</code> branch. But whenever something is pushed to <code>master</code>, that gets merged into <code>nightly-testing</code>, and that cancels the running CI, as <a href=\"https://github.com/leanprover-community/mathlib4/commits/nightly-testing\">one can see here</a>. So the daily branch is only created when there wasn’t activity on <code>master</code> in a while. Does that sound right?</p>\n<p>Not sure what solution to offer. Pinging poor <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> about this…</p>",
        "id": 403951862,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1700826318
    },
    {
        "content": "<p>Yes, that's a correct description of what is happening.</p>",
        "id": 404032386,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700870308
    },
    {
        "content": "<p>A few workarounds / solutions.</p>\n<ol>\n<li>Check ahead of time which <code>nightly-testing-YYYY-MM-DD</code> branches exist already, and based your Lean PRs off a corresponding nightly, rather than the latest one.</li>\n<li>We can automate that so that there's a tracking branch at <code>leanprover/lean4</code> for the latest Mathlib-tested nightly.</li>\n<li>We add automation so that at Mathlib we only merge <code>master</code> into <code>nightly-testing</code> either every X hours, or explicitly once the previous CI is done.</li>\n<li>We create a <code>staging-nightly-testing-YYYY-MM-DD</code> which has <code>nightly-testing</code> merged into it either every X hours, or when CI is done.</li>\n</ol>",
        "id": 404033081,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700870737
    },
    {
        "content": "<p>I think 3 is the best immediate solution, perhaps with X=2 or 3.</p>",
        "id": 404033274,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700870856
    },
    {
        "content": "<p>Option 2 can also be implemented independently. Perhaps at Lean we can have <code>nightly</code> tracking the latest nightly release and <code>nightly-tested</code> fire the latest nightly release on which Mathlib's nightly-testing branch has succeeded?</p>\n<p>Happy to have a name suggestion there.</p>",
        "id": 404033428,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700870981
    },
    {
        "content": "<p>Do even need to update nightly-testing more than once per day? If the purpose is to test lean, it doesn't matter a lot of you have a few more mathlib commits in or not, does it? <br>\n(So option 2, but “daily”)</p>\n<p><code>nightly-with-mathlib</code> might be a descriptive name?</p>",
        "id": 404072123,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1700897939
    },
    {
        "content": "<p>There is some value in more frequent updates, to make it easier to work out which Mathlib commit may have caused a problem. But it's not a lot of value.</p>",
        "id": 404087798,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700905194
    },
    {
        "content": "<p>Yeah, I guess it depends on how often that is, and how annoying to have to <code>git bisect</code> manually if it does break.</p>",
        "id": 404088441,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1700905480
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8627\">#8627</a> (only bump <code>nightly-testing</code> every 3 hours)</p>",
        "id": 404196869,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700972160
    },
    {
        "content": "<p>And <a href=\"https://github.com/leanprover-community/mathlib4/pull/8628\">#8628</a> for the <code>nightly-with-mathlib</code> branch on the Lean repository.</p>",
        "id": 404198583,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700973762
    }
]