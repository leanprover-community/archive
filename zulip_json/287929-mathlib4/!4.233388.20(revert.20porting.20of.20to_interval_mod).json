[
    {
        "content": "<p>Are we any closer to a decision on what should happen about PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/3388\">!4#3388</a>? It's blocking porting of <code>topology.instances.add_circle</code>, which is otherwise ready to port, and is a dependency many other files.</p>\n<p>(As a recap: the issue was whether or not <code>to_interval_mod</code> should be un-ported, and porting of it and its dependents held up, pending completion of mathlib3 PR <a href=\"https://github.com/leanprover-community/mathlib/pull/17743\">#17743</a>.)</p>",
        "id": 354100812,
        "sender_full_name": "David Loeffler",
        "timestamp": 1682727289
    },
    {
        "content": "<p>Wow, the sorries are still there...</p>",
        "id": 354103214,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1682727744
    },
    {
        "content": "<p>David, do you have a specific target in mind (beyond add_circle) that depends on this file? If so, the dependency graph might be instructive regarding whether this is a small or large blocker</p>",
        "id": 354108391,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682728726
    },
    {
        "content": "<p>(for instance if <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/topology/instances/add_circle\">port-status#topology/instances/add_circle</a> can be ported tomorrow but the next file in the chain you care about is 20 dependencies away from a different root, then the urgency is illusory; but if the longest chain of unported files leads to add_circle then your concern is very poignant)</p>",
        "id": 354109039,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682728857
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.233388.20.28revert.20porting.20of.20to_interval_mod.29/near/354103214\">said</a>:</p>\n<blockquote>\n<p>Wow, the sorries are still there...</p>\n</blockquote>\n<p>The fact that an intuitively obvious statement is so difficult to prove has made Yaël and I consider some larger refactors to the contents of that file; the intent was to try to get those refactors in before the tide ends up half way through them.</p>",
        "id": 354110105,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682729062
    },
    {
        "content": "<blockquote>\n<p>Eric Wieser: David, do you have a specific target in mind (beyond add_circle) that depends on this file? If so, the dependency graph might be instructive regarding whether this is a small or large blocker [...] (for instance if <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/topology/instances/add_circle\">port-status#topology/instances/add_circle</a> can be ported tomorrow but the next file in the chain you care about is 20 dependencies away from a different root, then the urgency is illusory)</p>\n</blockquote>\n<p>It's a prerequisite for <code>analysis.complex.arg</code> for instance (which is, in turn, a prereq for Quadratic Reciprocity, which has been one of the chosen targets in the porting-status updates since the beginning of the port). </p>\n<p>Consulting the dependency graph (<a href=\"https://leanprover-community.github.io/mathlib-port-status/file/analysis/complex/arg\">https://leanprover-community.github.io/mathlib-port-status/file/analysis/complex/arg</a>) suggests that the other dependencies for <code>analysis.complex.arg</code> are falling into place quite rapidly, and <code>add_circle</code> will soon be the main blocker here.</p>",
        "id": 354111852,
        "sender_full_name": "David Loeffler",
        "timestamp": 1682729407
    },
    {
        "content": "<p>How about we set a deadline of (next) Friday for me to salvage what I can from the mathlib3 PR, and re-evaluate before then if the graph above becomes more lopsided?</p>",
        "id": 354113085,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682729652
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib-port-status/file/number_theory/legendre_symbol/quadratic_reciprocity#graph\">port-status#number_theory/legendre_symbol/quadratic_reciprocity#graph</a> is I assume the other relevant graph</p>\n<p>Here, it looks like we don't start to break into blocked-by-to_interval_mod territory until we're through a fair number of painful algebra files</p>",
        "id": 354113566,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682729752
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.233388.20.28revert.20porting.20of.20to_interval_mod.29/near/354110105\">said</a>:</p>\n<blockquote>\n<p>The fact that an intuitively obvious statement is so difficult to prove has made Yaël and I consider some larger refactors to the contents of that file; the intent was to try to get those refactors in before the tide ends up half way through them.</p>\n</blockquote>\n<p>Eric, I wonder if you have considered the optics of this situation. Plenty of people in this community have (sorry-free and finished) contributions to mathlib which they'd like to get merged, and are having to put up with either long delays, or tedious forward-porting, or both, because the importance of the mathlib4 port overrides that of their personal pet projects. </p>\n<p>As a maintainer, shouldn't you be leading by example, rather than assuming that your personal project is exempt from the rules that apply to other contributors?</p>",
        "id": 354114146,
        "sender_full_name": "David Loeffler",
        "timestamp": 1682729857
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.233388.20.28revert.20porting.20of.20to_interval_mod.29/near/354113566\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib-port-status/file/number_theory/legendre_symbol/quadratic_reciprocity#graph\">port-status#number_theory/legendre_symbol/quadratic_reciprocity#graph</a> is I assume the other relevant graph</p>\n<p>Here, it looks like we don't start to break into blocked-by-to_interval_mod territory until we're through a fair number of painful algebra files</p>\n</blockquote>\n<p>I think <code>analysis.special_functions.pow</code> is also relevant; it is a dependency for a huge amount of stuff all across mathlib. See <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/analysis/special_functions/pow#graph\">https://leanprover-community.github.io/mathlib-port-status/file/analysis/special_functions/pow#graph</a></p>",
        "id": 354117278,
        "sender_full_name": "David Loeffler",
        "timestamp": 1682730475
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.233388.20.28revert.20porting.20of.20to_interval_mod.29/near/354110105\">said</a>:</p>\n<blockquote>\n<p>Plenty of people in this community have (sorry-free and finished) contributions to mathlib which they'd like to get merged, and are having to put up with either long delays, or tedious forward-porting, or both, because the importance of the mathlib4 port overrides that of their personal pet projects. </p>\n</blockquote>\n<p>I would strongly encourage any contributor with a project about to be swallowed by the tide to post in <a class=\"stream\" data-stream-id=\"144837\" href=\"/#narrow/stream/144837-PR-reviews\">#PR reviews</a> noting their situation, and to (carefully) add an entry to <a href=\"https://github.com/leanprover-community/mathlib4/wiki/port-comments\">#port-comments</a> to avoid the message being missed. A mathlib 3 PR merged before the port reaches it is a win for everyone; mathlib gets more powerful, the contributor doesn't have to forward-port, and the reviewers don't have to review a forward-port.</p>",
        "id": 354117838,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682730589
    },
    {
        "content": "<p>I am in a bad timezones to continue this discussion today, apologies</p>",
        "id": 354118677,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682730746
    },
    {
        "content": "<p>I'm not sure this should wait till Friday. The porting comment has been in place for a pretty long time. The porting comments are meant to be pretty transient I would think. They shouldn't hold things up for weeks on a row. And by now <code>topology.instances.add_circle</code> has been hovering at the top of \"Unported files with all their dependencies ported\" for a really long time. In one or two days, it will be at the top of \"Unported files, period\". There's only a handful of files above it that have a few unported dependencies.</p>",
        "id": 355035214,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1683007190
    },
    {
        "content": "<p>I had an update from Eric earlier today on this --- it seems like things are about to start moving again.</p>",
        "id": 355037048,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683007634
    },
    {
        "content": "<p>Note that if the titular PR were abandoned today, it would unblock exactly one file in the graphs above before we end up blocked again by <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/analysis/normed/group/quotient\">port-status#analysis/normed/group/quotient</a> which has been waiting two weeks for help.</p>",
        "id": 355061864,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683014204
    },
    {
        "content": "<p>And indeed <a href=\"https://github.com/leanprover-community/mathlib/pull/17743\">#17743</a> is now sorry-free, so expect our project to reach mathlib very soon.</p>",
        "id": 355065506,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1683015037
    },
    {
        "content": "<p>I think to maximize the speed at which we can do so it would be best to merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/3388\">!4#3388</a> today; doing so will give us a clean mathport slate tomorrow, rather than having to deal with a nightmare of alignment warnings</p>",
        "id": 355067578,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683015452
    },
    {
        "content": "<p>Okay, shall I merge now?</p>",
        "id": 355093088,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683021216
    },
    {
        "content": "<p>Please!</p>",
        "id": 355094803,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683021613
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> , <a href=\"https://github.com/leanprover-community/mathlib4/pull/3388\">!4#3388</a> has hit master now.</p>",
        "id": 355121738,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683027527
    },
    {
        "content": "<p>Great! <a href=\"https://github.com/leanprover-community/mathlib/pull/18912\">#18912</a> is waiting for a final naming bikeshed, then we should be ready to finalize <a href=\"https://github.com/leanprover-community/mathlib/pull/17743\">#17743</a></p>",
        "id": 355124983,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683028315
    },
    {
        "content": "<p>Let's not wait on a name, I'd like to get this out of the way. :-) Change it to <code>add_comm_group.modeq</code> and call it done?</p>",
        "id": 355127866,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683028954
    },
    {
        "content": "<p>I'm working on improving the API right now, btw.</p>",
        "id": 355134488,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1683030440
    },
    {
        "content": "<p>(in case it's not clear, I made the change Scott suggested)</p>",
        "id": 355257806,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683059027
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.233388.20.28revert.20porting.20of.20to_interval_mod.29/near/354113085\">said</a>:</p>\n<blockquote>\n<p>How about we set a deadline of (next) Friday for me to salvage what I can from the mathlib3 PR, and re-evaluate before then if the graph above becomes more lopsided?</p>\n</blockquote>\n<p>Just to give an update on this, since it's Friday:</p>\n<ul>\n<li>We're not really any closer to any of <span class=\"user-mention\" data-user-id=\"481963\">@David Loeffler</span>'s targets (<a href=\"https://leanprover-community.github.io/mathlib-port-status/file/analysis%2Fspecial_functions%2Fpow%23graph\">port-status#analysis/special_functions/pow#graph</a>, <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/number_theory%2Flegendre_symbol%2Fquadratic_reciprocity%23graph\">port-status#number_theory/legendre_symbol/quadratic_reciprocity#graph</a>); anything nontrivial related to the additive circle seems blocked by <a href=\"https://github.com/leanprover-community/mathlib4/pull/3457\">!4#3457</a> (<a href=\"https://leanprover-community.github.io/mathlib-port-status/file/analysis%2Fnormed%2Fgroup%2Fquotient\">port-status#analysis/normed/group/quotient</a>), which has been marked help-wanted for quite some time.</li>\n<li>The original PR, <a href=\"https://github.com/leanprover-community/mathlib/pull/17743\">#17743</a>, is sorry-free and passes CI</li>\n<li><del>There is one new mandatory dependent PR, <a href=\"https://github.com/leanprover-community/mathlib/pull/18942\">#18942</a></del> <img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\"></li>\n<li><del>#18941 is an extra refactor that doesn't need to be in before <a href=\"https://github.com/leanprover-community/mathlib/pull/17743\">#17743</a>, but would be nice to have. Yael and I are still working out some disagreements over this.</del></li>\n</ul>",
        "id": 356012902,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683283236
    },
    {
        "content": "<p>If you give me mathlib4 commit access (collares on GitHub) I can add the shameful <code>maxHeartbeats</code> bumps to <a href=\"https://github.com/leanprover-community/mathlib4/pull/3457\">!4#3457</a> myself :)</p>",
        "id": 356029330,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1683287053
    },
    {
        "content": "<p>I've granted you access, though I think we should also consider backporting the other changes in that PR</p>",
        "id": 356033704,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683288122
    },
    {
        "content": "<p>12 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/maxHeartbeats\">#mathlib4 &gt; maxHeartbeats</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 356239997,
        "sender_full_name": "Notification Bot",
        "timestamp": 1683361976
    },
    {
        "content": "<p>A final update:</p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/mathlib/pull/17743\">#17743</a> is ready for a final round of review</li>\n<li><a href=\"https://leanprover-community.github.io/mathlib-port-status/file/algebra%2Fmodeq\">port-status#algebra/modeq</a> will be ready for porting tomorrow (it's a new dependency)</li>\n<li>Thanks presumably to some import pruning,  the critical path to <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/analysis/special_functions/pow#graph\">https://leanprover-community.github.io/mathlib-port-status/file/analysis/special_functions/pow#graph</a> is now tied between <code>algebra.modeq</code> and <code>is_R_or_C</code>; so it seems the timing was just about right.</li>\n</ul>",
        "id": 357369754,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683741993
    },
    {
        "content": "<p>Okay, I hit merge on <a href=\"https://github.com/leanprover-community/mathlib/pull/17743\">#17743</a>. Let's get this done. :-)</p>",
        "id": 357407123,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683753943
    },
    {
        "content": "<p>Thanks again <span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> for tieing off all the sorries so that we could finish this off!</p>",
        "id": 357407898,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683754295
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3952\">!4#3952</a> is the re-port and is now ready for review</p>",
        "id": 358032751,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683951206
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"481963\">@David Loeffler</span>, as of earlier today you're now completely unblocked on porting <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/topology%2Finstances%2Fadd_circle\">port-status#topology/instances/add_circle</a> :)</p>",
        "id": 358149327,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684001188
    }
]