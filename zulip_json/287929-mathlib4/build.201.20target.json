[
    {
        "content": "<p><code>lake build</code> builds the universe. On old hardware this takes a lot of time. If I am only interested in <code>Mathlib/X/Y/Z.lean</code>, how can I compile just that file and any deps that are out of date?</p>",
        "id": 327567153,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676299777
    },
    {
        "content": "<p>I think <code>lake build Mathlib.Data.PNat.Basic</code></p>",
        "id": 327568169,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1676300000
    },
    {
        "content": "<p>From <code>README.md</code> of <code>mathlib4</code>:</p>\n<blockquote>\n<ul>\n<li>You can use <code>lake build +Mathlib.Import.Path</code> to build a particular file, e.g. <code>lake build +Mathlib.Algebra.Group.Defs</code>.</li>\n</ul>\n</blockquote>",
        "id": 327574884,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1676301592
    },
    {
        "content": "<p>Aah, thanks!</p>",
        "id": 327575597,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676301778
    },
    {
        "content": "<p>I believe <code>lake build Mathlib.Import.Path</code> (without <code>+</code>) does roughly the same, except that it doesn't build the <code>.ilean</code> output file, which contains information related to jump-to-definition (within a single file) and the type-information pop-ups when mousing over something. So including the <code>+</code> is a little better.</p>",
        "id": 327584182,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1676303834
    },
    {
        "content": "<p>Is there a reason for this distinction to exist?</p>",
        "id": 327586344,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676304333
    },
    {
        "content": "<p>Why would I ever not want to build the <code>.ilean</code> file?</p>",
        "id": 327588256,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676304803
    }
]