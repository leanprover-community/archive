[
    {
        "content": "<p>I was trying to help porting <a href=\"https://github.com/leanprover-community/mathlib4/pull/4929\">!4#4929</a> <br>\nLean can't find an instance it should find, and doing explicitly as typed in by <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> ,  I get wrong universes (around line 1380) : <code>(max (max (max (max uE' uF) uG) uP) uE)</code> instead of <code>max (max (max uF uG uP) uE' uG uP) uE</code></p>",
        "id": 365396731,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686519840
    },
    {
        "content": "<p>(Anyway, I don't have the right to push the small successful modification I could make)</p>",
        "id": 365396800,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686519874
    },
    {
        "content": "<p>I doubt that has any effect</p>",
        "id": 365396809,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686519876
    },
    {
        "content": "<p>it might not be normalized but it should not affect defeq queries etc</p>",
        "id": 365396845,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686519909
    },
    {
        "content": "<p>You're right, there is a subtle difference that may explain why Lean4 isn't happy, I didn't read the error message carefully enough‚Ä¶</p>\n<p>The  full error message is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">hasOpNorm</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">Norm</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ContinuousLinearMap</span> <span class=\"bp\">ùïú</span> <span class=\"bp\">ùïú</span> <span class=\"n\">DivisionSemiring.toSemiring</span> <span class=\"n\">DivisionSemiring.toSemiring</span> <span class=\"o\">(</span><span class=\"n\">RingHom.id</span> <span class=\"bp\">ùïú</span><span class=\"o\">)</span> <span class=\"n\">E</span>\n      <span class=\"n\">UniformSpace.toTopologicalSpace</span> <span class=\"n\">AddCommGroup.toAddCommMonoid</span> <span class=\"o\">((</span><span class=\"n\">P</span> <span class=\"bp\">√ó</span> <span class=\"n\">G</span> <span class=\"bp\">‚Üí</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"n\">E'</span><span class=\"o\">)</span> <span class=\"bp\">‚Üí</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"n\">P</span> <span class=\"bp\">√ó</span> <span class=\"n\">G</span> <span class=\"bp\">‚Üí</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"n\">F</span><span class=\"o\">)</span>\n      <span class=\"n\">UniformSpace.toTopologicalSpace</span> <span class=\"n\">AddCommGroup.toAddCommMonoid</span> <span class=\"n\">NormedSpace.toModule</span>\n      <span class=\"n\">NormedSpace.toModule</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">uE'</span> <span class=\"n\">uF</span><span class=\"o\">)</span> <span class=\"n\">uG</span><span class=\"o\">)</span> <span class=\"n\">uP</span><span class=\"o\">)</span> <span class=\"n\">uE</span><span class=\"o\">)</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">Norm</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ContinuousLinearMap</span> <span class=\"bp\">ùïú</span> <span class=\"bp\">ùïú</span> <span class=\"n\">DivisionSemiring.toSemiring</span> <span class=\"n\">DivisionSemiring.toSemiring</span> <span class=\"o\">(</span><span class=\"n\">RingHom.id</span> <span class=\"bp\">ùïú</span><span class=\"o\">)</span> <span class=\"n\">E</span>\n      <span class=\"n\">UniformSpace.toTopologicalSpace</span> <span class=\"n\">AddCommGroup.toAddCommMonoid</span> <span class=\"o\">((</span><span class=\"n\">P</span> <span class=\"bp\">√ó</span> <span class=\"n\">G</span> <span class=\"bp\">‚Üí</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"n\">E'</span><span class=\"o\">)</span> <span class=\"bp\">‚Üí</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"n\">P</span> <span class=\"bp\">√ó</span> <span class=\"n\">G</span> <span class=\"bp\">‚Üí</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"n\">F</span><span class=\"o\">)</span>\n      <span class=\"n\">topologicalSpace</span> <span class=\"n\">addCommMonoid</span> <span class=\"n\">NormedSpace.toModule</span> <span class=\"n\">module</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">uF</span> <span class=\"n\">uG</span> <span class=\"n\">uP</span><span class=\"o\">)</span> <span class=\"n\">uE'</span> <span class=\"n\">uG</span> <span class=\"n\">uP</span><span class=\"o\">)</span> <span class=\"n\">uE</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>(Starting with <code>Norm</code>, the first three lines starting  are identical, but there is a difference in the last one.)</p>",
        "id": 365397229,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686520232
    },
    {
        "content": "<p>I assume <code>module</code> is a local variable?</p>",
        "id": 365397322,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686520304
    },
    {
        "content": "<p>you should look at the <code>isDefEq</code> trace, there is a lot of irrelevant difference here and implicit arguments</p>",
        "id": 365397414,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686520346
    },
    {
        "content": "<p>Does <code>topologicalSpace</code> (a human-made instance, presumably, in the second half of the error) definitely match up with what it's supposed to match up with in the first half of the error?</p>",
        "id": 365398699,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686521201
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Wrong.20universes/near/365396800\">said</a>:</p>\n<blockquote>\n<p>(Anyway, I don't have the right to push the small successful modification I could make)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span>, what is your github username?</p>",
        "id": 365402928,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686523783
    },
    {
        "content": "<p>I can't see where <code>module</code> comes from in the PR; have you already made changes? If you introduced it, check if you need to use <code>letI</code></p>",
        "id": 365402935,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1686523786
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>, it's <code>AntoineChambert-Loir</code>.</p>",
        "id": 365403087,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1686523859
    },
    {
        "content": "<p>Invite to mathlib4 sent!</p>",
        "id": 365403151,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686523900
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Did you fix one of the proofs? If yes, which one?</p>",
        "id": 365404622,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686524889
    },
    {
        "content": "<p>Generally, it's better to work on PRs that have <code>help-wanted</code> label.</p>",
        "id": 365404639,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686524908
    },
    {
        "content": "<p>I'm trying to fix <code>HasCompactSupport.hasFDerivAt_convolution_right</code> right now.</p>",
        "id": 365404662,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686524939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Wrong.20universes/near/365402928\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Wrong.20universes/near/365396800\">said</a>:</p>\n<blockquote>\n<p>(Anyway, I don't have the right to push the small successful modification I could make)</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span>, what is your github username?</p>\n</blockquote>\n<p>AntoineChambert-Loir</p>",
        "id": 365440831,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686546764
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Wrong.20universes/near/365404622\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> Did you fix one of the proofs? If yes, which one?</p>\n</blockquote>\n<p><code>HasCompactSupport.hasFDerivAt_convolution_right</code></p>",
        "id": 365441440,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686546974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Push the fix, please.</p>",
        "id": 365453951,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686551542
    },
    {
        "content": "<p>I see that you've already pushed.</p>",
        "id": 365454089,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686551609
    },
    {
        "content": "<p>I think I just did! I'll check as soon as i I can switch my computer on!</p>\n<p>‚Å£--<br>\nUniversit√© Paris Cit√© <br>\nInstitut de math√©matiques de Jussieu Paris Rive Gauche<br>\nB√¢timent Sophie Germain, 8 place Aur√©lie Nemours, 75205 Paris cedex 13</p>\n<p>Envoy√© depuis mon t√©l√©phone portable, pardonnez mon √©ventuelle bri√®vet√©‚Äã</p>\n<p>‚Å£--<br>\nUniversit√© Paris Cit√© <br>\nInstitut de math√©matiques de Jussieu Paris Rive Gauche<br>\nB√¢timent Sophie Germain, 8 place Aur√©lie Nemours, 75205 Paris cedex 13</p>\n<p>Envoy√© depuis mon t√©l√©phone portable, pardonnez mon √©ventuelle bri√®vet√©‚Äã</p>",
        "id": 365456195,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686552300
    },
    {
        "content": "<p>Indeed, I wrote before looking at <code>github</code>.</p>",
        "id": 365553406,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686574645
    }
]