[
    {
        "content": "<p>On window 10, I cannot successfully build even the simplest lean_exe project when it depends on mathlib4. <br>\nI get \"unspecified system_category error (error code: 87)\"</p>\n<blockquote>\n<p><strong>TLDR</strong>: Clone <a href=\"https://github.com/somombo/try_math_exec\">this repo</a> and run <code>lake build</code> on windows 10. </p>\n</blockquote>\n<p>To reproduce my issue here are the details.</p>\n<p>Project has three simple files:</p>\n<p><a href=\"https://github.com/somombo/try_math_exec/blob/v4.0.0/lean-toolchain\">lean-toolchain</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.0.0</span>\n</code></pre></div>\n<p><a href=\"https://github.com/somombo/try_math_exec/blob/v4.0.0/lakefile.lean\">lakefile.lean</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">«</span><span class=\"n\">try_math_exec</span><span class=\"bp\">»</span> <span class=\"o\">{}</span>\n\n<span class=\"c1\">-- mathlib v4.0.0 is at commit d56176f.</span>\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span><span class=\"bp\">@</span><span class=\"s2\">\"d56176f12b78a0cf8454d9c2a6e9e8d4954dc58a\"</span>\n\n<span class=\"kd\">@[default_target]</span>\n<span class=\"n\">lean_exe</span> <span class=\"bp\">«</span><span class=\"n\">try_math_exec</span><span class=\"bp\">»</span> <span class=\"o\">{}</span>\n</code></pre></div>\n<p><a href=\"https://github.com/somombo/try_math_exec/blob/v4.0.0/try_math_exec.lean\">try_math_exec.lean</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Real</span>\n<span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"n\">IO.println</span> <span class=\"s2\">\"Hello World\"</span>\n</code></pre></div>\n<p>I then run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"w\"> </span>lake<span class=\"w\"> </span>update<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>lake<span class=\"w\"> </span>build\n</code></pre></div>\n<p>Expecting a successful build  and executable output at <code>./build/bin/try_math_exec.exe</code> which when run should just output \"Hello World\".</p>\n<p>However, I have instead been getting the following error output:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">...</span>\n<span class=\"o\">[</span><span class=\"mi\">1267</span><span class=\"bp\">/</span><span class=\"mi\">1289</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Algebra.Order.Floor</span>\n<span class=\"o\">[</span><span class=\"mi\">1268</span><span class=\"bp\">/</span><span class=\"mi\">1289</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Data.Rat.Floor</span>\n<span class=\"o\">[</span><span class=\"mi\">1269</span><span class=\"bp\">/</span><span class=\"mi\">1289</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Algebra.Order.Archimedean</span>\n<span class=\"o\">[</span><span class=\"mi\">1271</span><span class=\"bp\">/</span><span class=\"mi\">1289</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">1272</span><span class=\"bp\">/</span><span class=\"mi\">1289</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">try_math_exec</span>\n<span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"n\">Real</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"o\">[</span><span class=\"mi\">1283</span><span class=\"bp\">/</span><span class=\"mi\">1289</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">try_math_exec</span>\n<span class=\"o\">[</span><span class=\"mi\">1289</span><span class=\"bp\">/</span><span class=\"mi\">1289</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">try_math_exec.exe</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">execute</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.0.0\\bin\\leanc.exe`: unspecified system_category error (error code: 87)</span>\n</code></pre></div>\n<p>I have tried this for both <a href=\"https://github.com/somombo/try_math_exec/tree/v4.0.0\">v4.0.0</a> and <a href=\"https://github.com/somombo/try_math_exec/tree/v4.1.0-rc1\">v4.1.0-rc</a>..</p>\n<p>It's all consistently working fine in ubuntu (wsl)  ... builds and runs hello-world succesfully.</p>\n<p>Is this  an already known issue or perhaps I am doing something wrong?</p>\n<blockquote>\n<p>may be related to earlier report  <a href=\"#narrow/stream/113489-new-members/topic/unspecified.20system_category.20errors\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/unspecified.20system_category.20errors</a></p>\n</blockquote>\n<p>/cc <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span></p>",
        "id": 392030954,
        "sender_full_name": "Somo S.",
        "timestamp": 1695177318
    },
    {
        "content": "<p>Could you minimize the imports? Does this happen if you only <code>import Std</code> (keeping the <code>require mathlib</code> as is)?</p>",
        "id": 392031423,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695177576
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>   do you mean if I import Std but <code>require</code> mathlib in lakefile (as before).. or do you mean I should change the lakefile requirement to Std itself?</p>",
        "id": 392031770,
        "sender_full_name": "Somo S.",
        "timestamp": 1695177763
    },
    {
        "content": "<p>the former</p>",
        "id": 392031788,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695177778
    },
    {
        "content": "<p>(Minor datapoint: this repo works fine on macos.)</p>",
        "id": 392032398,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695178119
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392031423\">said</a>:</p>\n<blockquote>\n<p>Could you minimize the imports? Does this happen if you only <code>import Std</code> (keeping the <code>require mathlib</code> as is)?</p>\n</blockquote>\n<p>changed the relevant lines of try_math_exec.lean to :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.Rat.Basic</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Rat</span>\n</code></pre></div>\n<p>And this works fine.</p>",
        "id": 392033059,
        "sender_full_name": "Somo S.",
        "timestamp": 1695178529
    },
    {
        "content": "<p>okay, so now the challenge is to find out which of your 1289 imports are causing the problem</p>",
        "id": 392033103,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695178561
    },
    {
        "content": "<p>I'm guessing you can get rid of the <code>#check</code> line</p>",
        "id": 392033181,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695178595
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392033181\">said</a>:</p>\n<blockquote>\n<p>I'm guessing you can get rid of the <code>#check</code> line</p>\n</blockquote>\n<p>yes.. turns out this is the case.</p>",
        "id": 392033396,
        "sender_full_name": "Somo S.",
        "timestamp": 1695178737
    },
    {
        "content": "<p>when I merely change the import to <code>import Mathlib.Data.Nat.Basic</code><br>\nI get different error :</p>\n<p><code>ld.lld: error: too many exported symbols (got 70485, max 65535)\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nerror: external command \"c:\\Users\\makombo\\.elan\\toolchains\\leanprover--lean4---v4.0.0\\bin\\leanc.exe\"</code></p>\n<p>Here is truncated log</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"mi\">392</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Data.Prod.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">393</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Algebra.Group.Defs</span>\n<span class=\"o\">[</span><span class=\"mi\">397</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Data.Nat.Cast.Defs</span>\n<span class=\"o\">[</span><span class=\"mi\">397</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Algebra.GroupWithZero.Defs</span>\n<span class=\"o\">[</span><span class=\"mi\">399</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Data.Int.Cast.Defs</span>\n<span class=\"o\">[</span><span class=\"mi\">401</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Order.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">404</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Algebra.Ring.Defs</span>\n<span class=\"o\">[</span><span class=\"mi\">405</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Data.Nat.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">406</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">try_math_exec</span>\n<span class=\"o\">[</span><span class=\"mi\">419</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">try_math_exec</span>\n<span class=\"o\">[</span><span class=\"mi\">423</span><span class=\"bp\">/</span><span class=\"mi\">423</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">try_math_exec.exe</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.0.0\\bin\\leanc.exe -o .\\build\\bin\\try_math_exec.exe .\\build\\ir\\try_math_exec.o .\\lake-packages\\std\\build\\ir\\Std\\Lean\\Command.o .\\lake-packages\\std\\build\\ir\\Std\\Tactic\\Unreachable.o .\\lake-packages\\std\\build\\ir\\Std\\Linter\\UnreachableTactic.o .\\lake-packages\\std\\build\\ir\\Std\\Lean\\TagAttribute.o .\\lake-</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Lean</span><span class=\"bp\">\\</span><span class=\"n\">Meta</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Lean</span><span class=\"bp\">\\</span><span class=\"n\">Tactic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Lean</span><span class=\"bp\">\\</span><span class=\"n\">NameMapAttribute.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Lint</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">List</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Lemmas.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Array</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Ord.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Array</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Lint</span><span class=\"bp\">\\</span><span class=\"n\">Misc.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Logic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Nat</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Lemmas.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Classes</span><span class=\"bp\">\\</span><span class=\"n\">Dvd.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Lean</span><span class=\"bp\">\\</span><span class=\"n\">Meta</span><span class=\"bp\">\\</span><span class=\"n\">DiscrTree.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Ext</span><span class=\"bp\">\\</span><span class=\"n\">Attr.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Util</span><span class=\"bp\">\\</span><span class=\"n\">LibraryNote.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Lint</span><span class=\"bp\">\\</span><span class=\"n\">Simp.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Lint</span><span class=\"bp\">\\</span><span class=\"n\">TypeClass.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Lint</span><span class=\"bp\">\\</span><span class=\"n\">Frontend.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Lint.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Control</span><span class=\"bp\">\\</span><span class=\"n\">ForInStep</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Control</span><span class=\"bp\">\\</span><span class=\"n\">ForInStep</span><span class=\"bp\">\\</span><span class=\"n\">Lemmas.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Option</span><span class=\"bp\">\\</span><span class=\"n\">Lemmas.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Classes</span><span class=\"bp\">\\</span><span class=\"n\">BEq.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Ext.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Lean</span><span class=\"bp\">\\</span><span class=\"n\">Meta</span><span class=\"bp\">\\</span><span class=\"n\">LCtx.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Simpa.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">List</span><span class=\"bp\">\\</span><span class=\"n\">Lemmas.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">List</span><span class=\"bp\">\\</span><span class=\"n\">Count.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Lean</span><span class=\"bp\">\\</span><span class=\"n\">Meta.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">String</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">RunCmd.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Lean</span><span class=\"bp\">\\</span><span class=\"n\">Linter.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Simps</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">ToAdditive.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">ZeroOne.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Util</span><span class=\"bp\">\\</span><span class=\"n\">CompileInductive.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Nat</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Nat</span><span class=\"bp\">\\</span><span class=\"n\">Div.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">WF.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Classes</span><span class=\"bp\">\\</span><span class=\"n\">Cast.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Classes</span><span class=\"bp\">\\</span><span class=\"n\">Order.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Nat</span><span class=\"bp\">\\</span><span class=\"n\">Gcd.o</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">CodeAction</span><span class=\"bp\">\\</span><span class=\"n\">Misc.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">CodeAction.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">CodeAction</span><span class=\"bp\">\\</span><span class=\"n\">Deprecated.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Control</span><span class=\"bp\">\\</span><span class=\"n\">ForInStep.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">AssocList.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">BinomialHeap</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">BinomialHeap</span><span class=\"bp\">\\</span><span class=\"n\">Lemmas.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">BinomialHeap.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">DList.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Fin</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Fin</span><span class=\"bp\">\\</span><span class=\"n\">Lemmas.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">HashMap</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">HashMap</span><span class=\"bp\">\\</span><span class=\"n\">WF.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">HashMap.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Order</span><span class=\"bp\">\\</span><span class=\"n\">LinearOrder.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Cases.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Nat</span><span class=\"bp\">\\</span><span class=\"n\">Lemmas.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Core.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">LabelAttr.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Attr</span><span class=\"bp\">\\</span><span class=\"n\">Register.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Init</span><span class=\"bp\">\\</span><span class=\"n\">Function.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">LeftRight.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Algebra</span><span class=\"bp\">\\</span><span class=\"n\">Group</span><span class=\"bp\">\\</span><span class=\"n\">Defs.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Logic</span><span class=\"bp\">\\</span><span class=\"n\">Nontrivial</span><span class=\"bp\">\\</span><span class=\"n\">Defs.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Algebra</span><span class=\"bp\">\\</span><span class=\"n\">GroupWithZero</span><span class=\"bp\">\\</span><span class=\"n\">Defs.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Nat</span><span class=\"bp\">\\</span><span class=\"n\">Cast</span><span class=\"bp\">\\</span><span class=\"n\">Defs.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Int</span><span class=\"bp\">\\</span><span class=\"n\">Cast</span><span class=\"bp\">\\</span><span class=\"n\">Defs.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Util</span><span class=\"bp\">\\</span><span class=\"n\">AssertExists.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Algebra</span><span class=\"bp\">\\</span><span class=\"n\">Ring</span><span class=\"bp\">\\</span><span class=\"n\">Defs.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Conv.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">PushNeg.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Use.o</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">ir</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Data</span><span class=\"bp\">\\</span><span class=\"n\">Nat</span><span class=\"bp\">\\</span><span class=\"n\">Basic.o</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">ld.lld</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">too</span> <span class=\"n\">many</span> <span class=\"n\">exported</span> <span class=\"n\">symbols</span> <span class=\"o\">(</span><span class=\"n\">got</span> <span class=\"mi\">70485</span><span class=\"o\">,</span> <span class=\"n\">max</span> <span class=\"mi\">65535</span><span class=\"o\">)</span>\n<span class=\"n\">clang</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">linker</span> <span class=\"n\">command</span> <span class=\"n\">failed</span> <span class=\"k\">with</span> <span class=\"n\">exit</span> <span class=\"n\">code</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"n\">to</span> <span class=\"n\">see</span> <span class=\"n\">invocation</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">makombo</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.0.0\\bin\\leanc.exe` exited with code 1</span>\n</code></pre></div>",
        "id": 392034776,
        "sender_full_name": "Somo S.",
        "timestamp": 1695179521
    },
    {
        "content": "<p>This is <a href=\"https://github.com/leanprover/lean4/issues/2346\">https://github.com/leanprover/lean4/issues/2346</a></p>",
        "id": 392035686,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695180108
    },
    {
        "content": "<p>I would guess this is the underlying cause of your original error.</p>",
        "id": 392037162,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695181065
    },
    {
        "content": "<p>Unfortunately we don't have a fix for this issue as yet. :-(</p>",
        "id": 392037182,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695181078
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392037182\">said</a>:</p>\n<blockquote>\n<p>Unfortunately we don't have a fix for this issue as yet. :-(</p>\n</blockquote>\n<p>thanks for the feedback</p>",
        "id": 392069330,
        "sender_full_name": "Somo S.",
        "timestamp": 1695199299
    },
    {
        "content": "<p>Can I ask for an <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a>? While we do want to work out what is going wrong here, actually compiling (i.e. to an executable) all of mathlib, rather than just building it (i.e. to oleans) seems of dubious usefulness.</p>",
        "id": 392069517,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695199371
    },
    {
        "content": "<p>I think it's not an unreasonable ask to be able to compile an exe <em>in the presence of</em> mathlib</p>",
        "id": 392069805,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695199495
    },
    {
        "content": "<p>for example mathport is such an exe</p>",
        "id": 392069828,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695199508
    },
    {
        "content": "<p>Sure. But mathport is a bit of an unusual beast. I definitely agree this needs fixing, I was just curious if it was obstructing something.</p>",
        "id": 392070812,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695199899
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392070812\">said</a>:</p>\n<blockquote>\n<p>Sure. But mathport is a bit of an unusual beast. I definitely agree this needs fixing, I was just curious if it was obstructing something.</p>\n</blockquote>\n<p>No you are not obscuring something at right this moment.. Perhaps in the future ... As I have been learning lean I have been setting up my projects this way as a litmus just to have confidence that I set everything up correctly. I just had imagined building some software that I would write and prove correct in lean, but whose proofs would require the use of some concept or another  that's already been proven in mathlib. For example I saw that mathlib has proofs for quicksort and mergesort. So imagining one of those sorting algorithms being a part of some larger software certification project.</p>",
        "id": 392072701,
        "sender_full_name": "Somo S.",
        "timestamp": 1695200548
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392070812\">said</a>:</p>\n<blockquote>\n<p>Sure. But mathport is a bit of an unusual beast. I definitely agree this needs fixing, I was just curious if it was obstructing something.</p>\n</blockquote>\n<p>Well it does imply that mathlib is <em>incompatible</em> with writing programs, which I don't think we are intending to be the case!</p>",
        "id": 392073413,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695200795
    },
    {
        "content": "<p>It's great that std exists now, but there are still many programs that use things from mathlib and I don't think we should have to make a choice between proving correctness of the program and being able to compile it</p>",
        "id": 392073703,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695200897
    },
    {
        "content": "<p>Plus, I think mathport does count as a current project being affected - it implies that you can't build and use mathport on windows, which is news to me</p>",
        "id": 392073951,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695200995
    },
    {
        "content": "<p>Hmm... I remember someone trying this at Banff, but I don't think they even got as far as running into <a href=\"https://github.com/leanprover/lean4/pull/2346\">lean4#2346</a>.</p>",
        "id": 392074159,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695201047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392073413\">said</a>:</p>\n<blockquote>\n<p>Well it does imply that mathlib is <em>incompatible</em> with writing programs, which I don't think we are intending to be the case!</p>\n</blockquote>\n<p>more generally, it implies whatever it is that caused mathlib to have that problem _is_ incompatible with writing programs... what i mean here is if some other library author creates some library in the future (even if it doesnt depend on mathlib) it its possible their lean_exe users who depend on that library might run into these errors if that library is written in such a way that it shares the same/similar underlying thing  (architecture?,bug? ..) that's causing this mathlib</p>",
        "id": 392075069,
        "sender_full_name": "Somo S.",
        "timestamp": 1695201377
    },
    {
        "content": "<p>the thing that causes the error in <a href=\"https://github.com/leanprover/lean4/pull/2346\">lean4#2346</a> is too many exported symbols, as the error message implies</p>",
        "id": 392075150,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695201422
    },
    {
        "content": "<p>I think this just means number of <code>def</code> definitions, give or take</p>",
        "id": 392075229,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695201453
    },
    {
        "content": "<p>and 65536 is not that many defs</p>",
        "id": 392075250,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695201462
    },
    {
        "content": "<p>I think mathlib has somewhere in the range of 500000 defs (EDIT: 528262)</p>",
        "id": 392075363,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695201487
    },
    {
        "content": "<p>yeah so its possible for some other library author to have that issue in their library in the future, if they don't already have it (even if they dont depend on mathlib at all).. so an ideal solution to this solves it for them as well</p>",
        "id": 392075890,
        "sender_full_name": "Somo S.",
        "timestamp": 1695201696
    },
    {
        "content": "<p>the good news is that you have to be at mathlib scale before this becomes a big issue</p>",
        "id": 392076182,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695201803
    },
    {
        "content": "<p>well, even <code>import Std</code> apparently has 163820 defs</p>",
        "id": 392076282,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695201835
    },
    {
        "content": "<p>it's possible that this isn't an exact match for things that become exported symbols at link time</p>",
        "id": 392076427,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695201874
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392075250\">said</a>:</p>\n<blockquote>\n<p>and 65536 is not that many defs</p>\n</blockquote>\n<p>isnt this the maximum size of a 32 bit int? i am naive on this topic but is it not possible to increase this to an int64 somewhere..</p>",
        "id": 392076683,
        "sender_full_name": "Somo S.",
        "timestamp": 1695201967
    },
    {
        "content": "<p>it's the maximum size of a 16 bit int</p>",
        "id": 392077023,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695202092
    },
    {
        "content": "<p>but this is a linker limitation, I don't think we can do anything about it (unless someone gets lucky and finds a \"it's not 1980 anymore\" flag somewhere in the linker)</p>",
        "id": 392077185,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695202158
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392076282\">said</a>:</p>\n<blockquote>\n<p>well, even <code>import Std</code> apparently has 163820 defs</p>\n</blockquote>\n<p>I can confirm that <code>import Std</code> is producing the same \"too many exported symbols\" error</p>",
        "id": 392078184,
        "sender_full_name": "Somo S.",
        "timestamp": 1695202515
    },
    {
        "content": "<p>and <code>import Lean</code> has 145543 defs... I don't understand how anything works</p>",
        "id": 392078629,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695202667
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392078629\">said</a>:</p>\n<blockquote>\n<p>I don't understand how anything works</p>\n</blockquote>\n<p><a href=\"https://github.com/search?q=repo%3Aleanprover%2Flean4+export+symbols+windows&amp;type=pullrequests\">https://github.com/search?q=repo%3Aleanprover%2Flean4+export+symbols+windows&amp;type=pullrequests</a></p>",
        "id": 392097032,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695209346
    },
    {
        "content": "<p>Note that this is also a regular issue for LLVM itself</p>",
        "id": 392097560,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695209546
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392077023\">said</a>:</p>\n<blockquote>\n<p>it's the maximum size of a 16 bit int</p>\n</blockquote>\n<p>Looks like clang v11.1.0 was the last version that did not <a href=\"https://github.com/llvm/llvm-project/commit/a54919e0c11542f6716043003e403f1910f32528\">include this max check</a></p>\n<p>I have naively tried to run the raw clang command using clang v11.0.0 and and it still failed (i didn't expect it would work anyway).</p>",
        "id": 392097566,
        "sender_full_name": "Somo S.",
        "timestamp": 1695209549
    },
    {
        "content": "<p>This is a Windows limitation, not LLVM's</p>",
        "id": 392097966,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695209715
    },
    {
        "content": "<p>Why do these symbols need to be exported anyway?</p>",
        "id": 392098006,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695209731
    },
    {
        "content": "<p>Can't you just tell the C compiler \"don't export anything at all\"?</p>",
        "id": 392098042,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695209749
    },
    {
        "content": "<p>(this is \"export\" in the shared library sense, right?)</p>",
        "id": 392098179,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695209787
    },
    {
        "content": "<p>You can, but then you can't turn it into a DLL. So we would have to recompile the .c files depending on what our ultimate linking target is, which at least so far is not a control flow that exists. And then you still end up with exported symbols from core, which at some point might not fit into a single binary either (but also just don't <code>import Lean</code>)</p>",
        "id": 392098504,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695209904
    },
    {
        "content": "<p>i had tested <code>import Lean</code> and it worked fine.. I'll check again</p>",
        "id": 392099494,
        "sender_full_name": "Somo S.",
        "timestamp": 1695210289
    },
    {
        "content": "<p>Note the \"at some point\"</p>",
        "id": 392099639,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695210350
    },
    {
        "content": "<p>gotchya</p>",
        "id": 392099756,
        "sender_full_name": "Somo S.",
        "timestamp": 1695210387
    },
    {
        "content": "<p>If someone could open an lld issue in the LLVM repo about this, that would be great. It feels like there should be some way to unexport all symbols when linking an executable, as we usually don't care about exports there.</p>",
        "id": 392100017,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695210487
    },
    {
        "content": "<p>i would, but I don't know much about llvm and all this</p>\n<p>/cc <span class=\"user-mention\" data-user-id=\"242206\">@Luis O'Shea</span></p>",
        "id": 392100789,
        "sender_full_name": "Somo S.",
        "timestamp": 1695210802
    },
    {
        "content": "<p>Isn't this the role of a linker script, as described <a href=\"https://stackoverflow.com/a/452955/102441\">here</a>?</p>",
        "id": 392101259,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695210971
    },
    {
        "content": "<p>Maybe!</p>",
        "id": 392102131,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695211286
    },
    {
        "content": "<p>by the way, is it possible to cross compile from linux (say wsl) to windows by passing some flags to <code>lake build</code> or perhaps by reconfiguring one's lakefile?</p>",
        "id": 392438004,
        "sender_full_name": "Somo S.",
        "timestamp": 1695356864
    },
    {
        "content": "<p>Not out of the box. It is technically feasible (we already cross-compile Lean to ARM in CI) but at the very least you will need headers and libraries from the Lean Windows release as well. We can't bundle Lean with big libraries for all platforms.</p>",
        "id": 392457060,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695367853
    },
    {
        "content": "<p>I just got the same error.</p>",
        "id": 403984440,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1700838759
    },
    {
        "content": "<p>This is/was a problem for GHC on Windows too. Maybe this page has some useful information:<br>\n<a href=\"https://gitlab.haskell.org/ghc/ghc/-/wikis/windows-dynamic-linking\">https://gitlab.haskell.org/ghc/ghc/-/wikis/windows-dynamic-linking</a><br>\nI see something about <code>--retain-symbols-file</code> that sounds promising. (Does a Lean executable typically need <em>any</em> exported symbols besides <code>_start</code> or whatever it's called? e.g. does the RTS try to <code>dlsym()</code> anything?)</p>",
        "id": 404140934,
        "sender_full_name": "Reid Barton",
        "timestamp": 1700938503
    },
    {
        "content": "<p>(I don't really know anything about Windows but I assume that for now the issue is not that we really want to support shared libraries on Windows, but just that executables are being built in some way that retains the whole symbol table.)</p>",
        "id": 404141527,
        "sender_full_name": "Reid Barton",
        "timestamp": 1700938729
    },
    {
        "content": "<p>To clarify, what was an issue for GHC on Windows was AFAIK just supporting shared Haskell libraries. I'm not aware of any issue if you just wanted to create an ordinary executable (that was statically linked against all Haskell dependencies).</p>",
        "id": 404141930,
        "sender_full_name": "Reid Barton",
        "timestamp": 1700938868
    },
    {
        "content": "<p>Is the issue maybe that even on Windows, Lean is hoping to use dynamic libraries and that's why all the symbols are marked for export?</p>",
        "id": 404144488,
        "sender_full_name": "Reid Barton",
        "timestamp": 1700939939
    },
    {
        "content": "<p>Does Lean use dynamic loading for running tactics or for server mode or something?</p>",
        "id": 404149827,
        "sender_full_name": "Reid Barton",
        "timestamp": 1700942189
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/404140934\">said</a>:</p>\n<blockquote>\n<p>(Does a Lean executable typically need <em>any</em> exported symbols besides <code>_start</code> or whatever it's called? e.g. does the RTS try to <code>dlsym()</code> anything?)</p>\n</blockquote>\n<p>I think this is what <code>supportInterpreter</code> is about, since the interpreter uses <code>dlsym</code> or something like it to load compiled definitions</p>",
        "id": 404205288,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1700979640
    },
    {
        "content": "<p>Is it still the case that you can't both write programs and depend on mathlib? For instance, if I'm doing Project Euler and want to write code to count primes, is it currently not possible to prove the correctness of that program without rewriting elementary number theory from scratch?</p>",
        "id": 405914969,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1701725529
    },
    {
        "content": "<p>Yes, this is still the case (on Windows). :-(</p>",
        "id": 407107322,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1702242006
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/error.20building.20windows.20exe.20.20proj/near/392101259\">said</a>:</p>\n<blockquote>\n<p>Isn't this the role of a linker script, as described <a href=\"https://stackoverflow.com/a/452955/102441\">here</a>?</p>\n</blockquote>\n<p>It seems passing the version script option via lake (via <code>moreLinkArgs</code> in the package block) is feasible for a user. It could be the workaround for now.</p>",
        "id": 407123271,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702255167
    }
]