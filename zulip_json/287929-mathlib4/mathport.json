[
    {
        "content": "<p>Hi, did something happen to mathport? The last commit that went through is <a href=\"https://github.com/leanprover-community/mathlib/pull/19062\">#19062</a></p>",
        "id": 361656684,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685228545
    },
    {
        "content": "<p>Indeed, <a href=\"https://github.com/leanprover-community/mathport/actions/runs/5100946585\">https://github.com/leanprover-community/mathport/actions/runs/5100946585</a> says that \"process completed with exit code 1\".</p>",
        "id": 361657006,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685228781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Is it possible that your changes from 2 days ago broke it?</p>",
        "id": 361657158,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685228900
    },
    {
        "content": "<p>This is a curious error:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>remote: error: File Mathbin/Topology/Sheaves/SheafCondition/PairwiseIntersections.lean\nis 278.63 MB; this exceeds GitHub's file size limit of 100.00 MB\n</code></pre></div>",
        "id": 361657224,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1685228959
    },
    {
        "content": "<p>Where did you find the error?</p>",
        "id": 361657250,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685228983
    },
    {
        "content": "<p>And how did we get such a huge file?</p>",
        "id": 361657276,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229002
    },
    {
        "content": "<p>I clicked \"Mathport\" on that link, clicked \"update port repos (master)\" then scrolled down</p>",
        "id": 361657378,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1685229047
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathport/actions/runs/5091663507/jobs/9151993679\">https://github.com/leanprover-community/mathport/actions/runs/5091663507/jobs/9151993679</a></p>",
        "id": 361657642,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229183
    },
    {
        "content": "<p>The first failure <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> no space left on device</p>",
        "id": 361657661,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229200
    },
    {
        "content": "<p>I think we need to stop outputting the warning messages in the lean files themselves</p>",
        "id": 361657794,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685229271
    },
    {
        "content": "<p>Or at least, truncate each one to 100kb</p>",
        "id": 361657800,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685229279
    },
    {
        "content": "<p>Who can run it locally and see what happens? AFAIR, it needs more RAM than I have.</p>",
        "id": 361657807,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229286
    },
    {
        "content": "<p>I'm OK with truncating each one to 1kb.</p>",
        "id": 361657846,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229319
    },
    {
        "content": "<p>I'd be ok with truncating each one to 0b; I don't think anyone is using them at all...</p>",
        "id": 361657970,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685229389
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathport/near/361657224\">said</a>:</p>\n<blockquote>\n<p>This is a curious error:</p>\n<p><div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>remote: error: File Mathbin/Topology/Sheaves/SheafCondition/PairwiseIntersections.lean\nis 278.63 MB; this exceeds GitHub's file size limit of 100.00 MB\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>I wonder if reverting <a href=\"https://github.com/leanprover-community/mathlib4/pull/4384\">!4#4384</a> fixes the problem</p>",
        "id": 361658041,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685229466
    },
    {
        "content": "<p>No, the problem started before that</p>",
        "id": 361658135,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229507
    },
    {
        "content": "<p>I linked to the first failure above.</p>",
        "id": 361658161,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229534
    },
    {
        "content": "<p>BTW, did <code>mathport</code> change <code>align</code> logic some time ago? 9cb92e8c581bb6d7a1f3c106109eeaeb56437f8a changes some <code>Preorder.toLE</code> in warnings to <code>Preorder.toHasLE</code>.</p>",
        "id": 361658339,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229648
    },
    {
        "content": "<p>It's May 16</p>",
        "id": 361658361,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229666
    },
    {
        "content": "<p>No, it's <a href=\"https://github.com/leanprover-community/mathlib4/pull/4000\">!4#4000</a> removed some <code>#align</code>s</p>",
        "id": 361658532,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathport/near/361657661\">said</a>:</p>\n<blockquote>\n<p>The first failure <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> no space left on device</p>\n</blockquote>\n<p>This sounds like we just need to delete some junk from our CI machines</p>",
        "id": 361658533,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685229825
    },
    {
        "content": "<p>You can go through all actions at <a href=\"https://github.com/leanprover-community/mathport/actions\">https://github.com/leanprover-community/mathport/actions</a></p>",
        "id": 361658625,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229884
    },
    {
        "content": "<p>I'm going to add some <code>#align</code>s back</p>",
        "id": 361658680,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685229950
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4427\">!4#4427</a></p>",
        "id": 361659438,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685230522
    },
    {
        "content": "<p>Thankfully it looks like the predata step is still running fine, so one we fix this we'll get a new mathport output in 2 hours rather than at the end of the day</p>",
        "id": 361663756,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685234265
    },
    {
        "content": "<p>just pushed a fix</p>",
        "id": 361663763,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685234275
    },
    {
        "content": "<p>Foo! Mathport have finished running now!</p>",
        "id": 361674735,
        "sender_full_name": "Pol'tta / Miyahara K≈ç",
        "timestamp": 1685244067
    },
    {
        "content": "<p>I'm curious how much mathlib3port decreased in size</p>",
        "id": 361675576,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685244963
    },
    {
        "content": "<p>764.4MB -&gt; 236.6MB</p>",
        "id": 361675767,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685245135
    },
    {
        "content": "<p>and exactly the same line count, which is fun</p>",
        "id": 361675803,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685245199
    },
    {
        "content": "<p>the savings isn't as much as I was hoping, it seems that a 10k limit per message is still enough to cause a lot of text since in many files almost every declaration is marked as dubious</p>",
        "id": 361678912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685248087
    },
    {
        "content": "<p>I pushed another fix to just turn off the dubious message entirely, since I think it is too late to change our processes to keep these messages under control</p>",
        "id": 361678954,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685248131
    },
    {
        "content": "<p>without the dubious translation messages, it has decreased again from 236.5MB to 104.2MB</p>",
        "id": 361706272,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685263893
    },
    {
        "content": "<p>On the assumption they don't block the port, is the intent then to write off any truly dubious (i.e. incorrect) translations as the cost of porting, and hope that either the changes are cosmetic, or in the case of dropped Sort/Type generalizations something that a mathlib4 user will eventually PR again anyway? Or is there still some vague hope of using mathport to ask \"did we port everything correctly\"?</p>",
        "id": 361708122,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685264528
    },
    {
        "content": "<p>I think the main blocker for mathport dubious translation messages at this stage are all the unaligned instances</p>",
        "id": 361710568,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685265480
    },
    {
        "content": "<p>although if we had <code>#align</code>s for all of the autogenerated instance names I'm sure we'd be back to 700MB in no time</p>",
        "id": 361710957,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685265606
    },
    {
        "content": "<p>I thought the main blocker was universe arguments being in the wrong order everywhere?</p>",
        "id": 361711332,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685265773
    },
    {
        "content": "<p>TBH it's hard to tell from the error messages</p>",
        "id": 361711701,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685265887
    },
    {
        "content": "<p>that was certainly a problem, no idea if it's the main one</p>",
        "id": 361711757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685265910
    },
    {
        "content": "<p>it all feels pretty hopeless at this point to get defeq somehow</p>",
        "id": 361711804,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685265935
    },
    {
        "content": "<p>I would be okay with just not trying to use mathport to check our work and just rely on the internal coherence of the library</p>",
        "id": 361711961,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685265990
    },
    {
        "content": "<p>Perhaps just checking everything in mathlib3 is aligned is good enough, without checking if the alignment is perfect</p>",
        "id": 361714627,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685266913
    },
    {
        "content": "<p>After all, the trust in the mathlib3 library also comes mostly from cohesion -- just like in informal mathematics!  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 361719871,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685268805
    },
    {
        "content": "<p>I think that <code>open_locale</code> should be translated as <code>open scoped</code>, not <code>open</code></p>",
        "id": 361788284,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685292341
    },
    {
        "content": "<p>E.g., in <a href=\"https://github.com/leanprover-community/mathlib4/pull/4453\">!4#4453</a>, <code>open</code>ing <code>NNReal</code> was a bad idea.</p>",
        "id": 361788483,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685292408
    },
    {
        "content": "<p>The builds still seem to be failing, <a href=\"https://github.com/leanprover-community/mathport/actions/runs/5109812115/jobs/9185004873\">see this log</a></p>",
        "id": 361962913,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369568
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">port</span> <span class=\"n\">Mathbin</span><span class=\"o\">:</span><span class=\"n\">MeasureTheory.Function.Jacobian</span> <span class=\"k\">with</span> <span class=\"n\">imports</span> <span class=\"o\">[</span><span class=\"n\">Leanbin.Init.Default</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.Analysis.Calculus.Inverse</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.MeasureTheory.Covering.BesicovitchVectorSpace</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.MeasureTheory.Measure.Lebesgue.EqHaar</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.Analysis.NormedSpace.Pointwise</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.MeasureTheory.Constructions.Polish</span><span class=\"o\">]:</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathbin.Topology.MetricSpace.Polish</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">environment</span> <span class=\"n\">already</span> <span class=\"n\">contains</span> <span class=\"bp\">'</span><span class=\"n\">_proof_3'</span> <span class=\"k\">from</span> <span class=\"n\">Mathbin.Analysis.InnerProductSpace.PiL2</span>\n</code></pre></div>",
        "id": 361963088,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369610
    },
    {
        "content": "<p>that error looks to be unrelated to the archive/ stuff</p>",
        "id": 361963257,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685369647
    },
    {
        "content": "<p>Yes; I was not intending to make a connection there</p>",
        "id": 361963392,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369681
    },
    {
        "content": "<p>I guess it's also unrelated to the \"100k of error message is too much error message\" stuff</p>",
        "id": 361963447,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369699
    },
    {
        "content": "<p>is <code>MeasureTheory.Function.Jacobian</code> a new file?</p>",
        "id": 361963547,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685369720
    },
    {
        "content": "<p>My guess is that this was broken by us porting <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/analysis/inner_product_space/pi_L2\">port-status#analysis/inner_product_space/pi_L2</a></p>",
        "id": 361963696,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369755
    },
    {
        "content": "<p>I don't see <code>MeasureTheory.Function.Jacobian</code> in the last successful run</p>",
        "id": 361963950,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685369808
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib-port-status/file/measure_theory/function/jacobian\">port-status#measure_theory/function/jacobian</a></p>",
        "id": 361964066,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369834
    },
    {
        "content": "<p>It is one of the targets of the port progress, I think.</p>",
        "id": 361964168,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685369860
    },
    {
        "content": "<p>The file has existed for ages</p>",
        "id": 361964191,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369867
    },
    {
        "content": "<p>I mean new to mathlib4 since the last mathport run</p>",
        "id": 361964468,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685369929
    },
    {
        "content": "<p>The file shouldn't be in mathlib4 yet</p>",
        "id": 361964552,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369948
    },
    {
        "content": "<p>What's new to mathlib4 is PiL2</p>",
        "id": 361964591,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685369959
    },
    {
        "content": "<p>yeah, most likely changes in either <code>Topology.MetricSpace.Polish</code> or <code>Analysis.InnerProductSpace.PiL2</code> are to blame</p>",
        "id": 361964706,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685369988
    },
    {
        "content": "<p>compared to the autogenerated versions of these files</p>",
        "id": 361964937,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685370028
    },
    {
        "content": "<p><code>mathport</code> doesn't work again</p>",
        "id": 362447340,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685537426
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathport/actions\">https://github.com/leanprover-community/mathport/actions</a></p>",
        "id": 362447358,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685537432
    },
    {
        "content": "<p>Some <code>update</code>s failed, then many jobs are \"Queued\"</p>",
        "id": 362447434,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685537457
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/PvXYDgPsM3m5iOxbKVOPWX90/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/PvXYDgPsM3m5iOxbKVOPWX90/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/PvXYDgPsM3m5iOxbKVOPWX90/image.png\"></a></div>",
        "id": 362448206,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685537633
    },
    {
        "content": "<p>What happened to 4 and 5?</p>",
        "id": 362454415,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685539007
    },
    {
        "content": "<p>I think they might be owned by <code>leanprover</code> rather than <code>leanprover-community</code></p>",
        "id": 362458517,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685539927
    },
    {
        "content": "<p>Eric's screenshot was from <a href=\"https://github.com/leanprover-community/mathlib4/settings/actions/runners\">https://github.com/leanprover-community/mathlib4/settings/actions/runners</a>. Everything looks healthier now!</p>",
        "id": 362610552,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685585205
    },
    {
        "content": "<p>As far as I can tell we haven't actually been running mathlib4 CI on the Hoskinson machines at all yet. <a href=\"https://github.com/leanprover-community/mathlib4/pull/4539\">!4#4539</a> turns this on.</p>",
        "id": 362611870,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685586227
    },
    {
        "content": "<p>Now we can see that <code>mathport</code> actually fails</p>",
        "id": 362611956,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685586275
    },
    {
        "content": "<p>On <code>MeasureTheory.Function.Jacobian</code></p>",
        "id": 362611967,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685586292
    },
    {
        "content": "<p>yeah, that's the same failure that was reported before</p>",
        "id": 362611996,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685586313
    },
    {
        "content": "<p>I ran mathport locally to diagnose, but I'm still at the stage \"well, I guess <code>_proof_3</code> is in both of those oleans\" until I can figure out how to load the oleans or the tleans to find out who put it there</p>",
        "id": 362612087,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685586373
    },
    {
        "content": "<p>Aha: <code>[translateName] orthonormal_basis.has_coe_to_fun._proof_3 -&gt; _proof_3</code></p>",
        "id": 362614315,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685587758
    },
    {
        "content": "<p>my guess is that <code>orthonormal_basis.has_coe_to_fun</code> has been <code>#noalign</code>ed, which is stored as an alignment to <code>.anonymous</code>, and so its <code>_proof_3</code> subproof was translated to just plain <code>_proof_3</code></p>",
        "id": 362614423,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685587814
    },
    {
        "content": "<p>(because spoilers, mathport doesn't actually do anything about <code>#noalign</code>)</p>",
        "id": 362614460,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685587836
    },
    {
        "content": "<p>pushed a fix</p>",
        "id": 362616343,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685589087
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Archive.Imo.Imo2005Q4</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">environment</span> <span class=\"n\">already</span> <span class=\"n\">contains</span> <span class=\"bp\">'</span><span class=\"n\">Imo.a'</span> <span class=\"k\">from</span> <span class=\"n\">Archive.Imo.Imo1998Q2</span>\n</code></pre></div>\n<p>seems the archive is still not fixed</p>",
        "id": 363379951,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685825381
    },
    {
        "content": "<p>and now it's on mathport master so we should probably get this fixed soonish</p>",
        "id": 363380047,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685825411
    },
    {
        "content": "<p>Ah, I used <code>imo</code> as namespace for the files in <code>imo</code>, so that the theorem names that were the actual full imo problem name would not cause duplicates.  I can fix this, but I'm not sure that I'll have time tomorrow.  On Monday for sure, though.</p>",
        "id": 363380201,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685825508
    },
    {
        "content": "<p>Probably the simplest is to use the filename as namespace and possibly turn off the repeated namespace linter (if it even complains).</p>",
        "id": 363380637,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685825712
    },
    {
        "content": "<p>I think we can drop the <code>.imo.</code> part of the namespace if the namespace is <code>archive.imo2005Q4</code></p>",
        "id": 363380837,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685825826
    },
    {
        "content": "<p>Note that <code>namespace imo</code> and <code>end imo</code> should be the only lines that need changing.</p>",
        "id": 363380880,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685825854
    },
    {
        "content": "<p>Eric, I did not use <code>archive</code>, just <code>imo</code>.</p>",
        "id": 363380925,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685825882
    },
    {
        "content": "<p>A possible solution would be to <code>sed</code> the lines mentioned above with something like <code>sed -i \"s=^namespace imo$=namespace ${filename}=\" \"${filename}\"</code> and similarly with <code>end</code>.</p>",
        "id": 363381224,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685826049
    },
    {
        "content": "<p>Btw, why was the name clash not picked up by the linter that Eric mentioned?</p>",
        "id": 363381455,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685826220
    },
    {
        "content": "<p>To summarise, my mistake has been that I introduced a namespace that would shield <code>src</code> names from names in <code>archive</code>, but it does not shield names clashes between different <code>imo</code> files.  For that, using a file-dependent namespace would solve the issue.</p>",
        "id": 363382122,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685826586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathport/near/363381455\">said</a>:</p>\n<blockquote>\n<p>Btw, why was the name clash not picked up by the linter that Eric mentioned?</p>\n</blockquote>\n<p>Because the linter ran in mathlib3 where the names are <code>a</code> and <code>A</code></p>",
        "id": 363382498,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685826817
    },
    {
        "content": "<p>And mathport is translating them both to <code>a</code> then failing</p>",
        "id": 363382586,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685826843
    },
    {
        "content": "<p>Can we solve this by just committing a dummy file to mathlib4 that aligns <code>A</code> to <code>A</code>?</p>",
        "id": 363382604,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685826859
    },
    {
        "content": "<p>I would guess the IMO problems want to ignore mathlib naming conventions and actually use the same case as the real problem anyway</p>",
        "id": 363382625,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685826885
    },
    {
        "content": "<p>The naming here is clearly not sustainable. what if another IMO problem has a variable or sequence named <code>a</code> or <code>A</code>?</p>",
        "id": 363388378,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685830351
    },
    {
        "content": "<p>This was why I put every IMO problem in its own namespace, but for some reason people didn't like this.</p>",
        "id": 363394806,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685834281
    },
    {
        "content": "<p>I liked this idea, personally. This is what I've already done for the Oxford invariants problem when it was first PRed iirc.</p>",
        "id": 363395363,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1685834646
    },
    {
        "content": "<p>I actually thought it was the <code>namespace archive</code> that was considered unnecessary</p>",
        "id": 363395710,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685834956
    },
    {
        "content": "<p>Yes, putting every IMO problem in its own namespace was the part of your PR l liked most Scott!</p>",
        "id": 363399543,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685837872
    },
    {
        "content": "<p>Ok, <a href=\"https://github.com/leanprover-community/mathlib/pull/19152\">#19152</a> replaces the blanket <code>imo</code> namespace with <code>imoYYYY_qX</code>.  I also added <code>nolint dup_namespace</code> profusely and sometimes unnecessarily.  Once it passes linting, I will remove the unnecessary <code>nolint</code> attributes.</p>",
        "id": 363410711,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685845728
    },
    {
        "content": "<p>The PR passed CI in its first form, with all the <code>nolint dup_namespace</code>.  I have now removed the <code>nolint</code> on the declarations that are in fact not actually duplicated.</p>",
        "id": 363414902,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685849009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, what's next in the process of actually making archive files available to port? It doesn't look like <a href=\"https://github.com/leanprover-community/mathlib3port/commit/4db5aed14bfb7740f99faa340ab2c7dec1c4a72c\">https://github.com/leanprover-community/mathlib3port/commit/4db5aed14bfb7740f99faa340ab2c7dec1c4a72c</a> worked</p>",
        "id": 364131017,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686092711
    },
    {
        "content": "<p>Do we just need to change the <code>git add Mathbin upstream-rev README.md lake-manifest.json</code> line?</p>",
        "id": 364131227,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686092842
    },
    {
        "content": "<p>I think so, I just did that</p>",
        "id": 364131497,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686093000
    },
    {
        "content": "<p>One more spacing issue: <code>mathport</code> outputs <code>‚à´ x in a.1 ..b.1, f x</code> for an interval integral but Lean 4 accepts only <code>‚à´ x in a.1..b.1, f x</code> (no space before <code>..</code>). Not sure which side needs to be fixed. Note that we also have notation <code>‚à´ x in s, f x</code> for an integral over a set, so relaxing the interval notation too much is not an option.</p>",
        "id": 364347194,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686158215
    },
    {
        "content": "<p>mathport failed overnight due to the new proofwidgets dependency in mathlib4. Hopefully should be fixed by <a href=\"https://github.com/leanprover-community/mathport/pull/241\">https://github.com/leanprover-community/mathport/pull/241</a>.</p>",
        "id": 364393612,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686171387
    },
    {
        "content": "<p>Now <code>mathlib3port</code> has <code>Archive/</code> etc but <code>start_port.sh</code> doesn't support these folders.</p>",
        "id": 364397942,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686173070
    },
    {
        "content": "<p>I have a PR open for that</p>",
        "id": 364401567,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686174621
    },
    {
        "content": "<p>But right now it's a feature; if you add archive files manually they won't actually be tested in mathlib4 CI yet</p>",
        "id": 364401618,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686174659
    },
    {
        "content": "<p>mathport is down again (expected because of the lean bump), but I'm not having any success using the downloaded cache files: lean crashes with error code 139 on startup, even on files that have already been pre-built from mathlib</p>",
        "id": 364730253,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686286785
    },
    {
        "content": "<p>it seems to work fine in CI though</p>",
        "id": 364730399,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686286837
    },
    {
        "content": "<p>Does <code>lake clean; killall lean; lake exe cache get</code> help?</p>",
        "id": 364730489,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686286861
    },
    {
        "content": "<p>Another thing to try: clean your local cache and redownload.</p>",
        "id": 364730697,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686286942
    },
    {
        "content": "<p>I did <code>rm -rf lake-packages; lake exe cache get</code> and it didn't seem to help</p>",
        "id": 364730706,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686286946
    },
    {
        "content": "<p>currently building mathlib locally to see whether it makes a difference</p>",
        "id": 364730727,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686286963
    },
    {
        "content": "<p>What about <code>~/.cache/mathlib/</code>?</p>",
        "id": 364730754,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686286978
    },
    {
        "content": "<p>ah, that could be it</p>",
        "id": 364730818,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686287013
    },
    {
        "content": "<p>Just FYI, I have reduced the rate of the \"mathport\" workflow (which updates mathlib4) to 1/day. It is still useful to keep it running, as it breaks every once in a while due to mathlib4 tactic changes, but it isn't being hammered constantly anymore so this seems like a better use of resources</p>",
        "id": 387405140,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693040204
    }
]