[
    {
        "content": "<p>Here is an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.PushNeg</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">push_neg</span> <span class=\"n\">at</span>  <span class=\"n\">h</span>\n</code></pre></div>\n<p>While <code>α</code> is not a <code>LinearOrder</code>, <code>push_neg</code> still tries to rewrite using <code>[not_le]</code> and fails.</p>",
        "id": 326013774,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675632693
    },
    {
        "content": "<p>This used to work in Lean 3 (encountered for <code>α = Filter β</code> in a file I'm porting).</p>",
        "id": 326013839,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675632729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> you made most contributions to this file <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 326013974,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675632879
    },
    {
        "content": "<p>I'll have a look right now. If I don't manage to fix it tonight, it might be a while before I have time again though.</p>",
        "id": 326028043,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1675644982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span>  If you don't fix it tonight I'll take a look tomorrow</p>",
        "id": 326028785,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1675645666
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/2095\">!4#2095</a></p>",
        "id": 326030979,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1675647697
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/Bug.20in.20push_neg\">#lean4 &gt; Bug in push_neg</a> by <span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span>.</p>",
        "id": 326032308,
        "sender_full_name": "Notification Bot",
        "timestamp": 1675648950
    }
]