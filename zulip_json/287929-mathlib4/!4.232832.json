[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/2831\">!4#2831</a> I've got a little more experience now, but there's one error I can't seem to fix (for the moment), can somebody take a look?</p>",
        "id": 341332572,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1678652824
    },
    {
        "content": "<p>It's in <code>raiseCone</code></p>",
        "id": 341332693,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1678652892
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simps]</span>\n<span class=\"kd\">def</span> <span class=\"n\">raiseCone</span> <span class=\"o\">[</span><span class=\"n\">IsConnected</span> <span class=\"n\">J</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">⥤</span> <span class=\"n\">Over</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">Cone</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"bp\">⋙</span> <span class=\"n\">forget</span> <span class=\"n\">B</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"n\">Cone</span> <span class=\"n\">F</span> <span class=\"n\">where</span>\n  <span class=\"n\">pt</span> <span class=\"o\">:=</span> <span class=\"n\">Over.mk</span> <span class=\"o\">(</span><span class=\"n\">c.π.app</span> <span class=\"o\">(</span><span class=\"n\">Classical.arbitrary</span> <span class=\"n\">J</span><span class=\"o\">)</span> <span class=\"bp\">≫</span> <span class=\"o\">(</span><span class=\"n\">F.obj</span> <span class=\"o\">(</span><span class=\"n\">Classical.arbitrary</span> <span class=\"n\">J</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">hom</span><span class=\"o\">)</span>\n  <span class=\"n\">π</span> <span class=\"o\">:=</span>\n    <span class=\"o\">{</span> <span class=\"n\">app</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">j</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"n\">Over.homMk</span> <span class=\"o\">(</span><span class=\"n\">c.π.app</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nat_trans_from_is_connected</span> <span class=\"o\">(</span><span class=\"n\">c.π</span> <span class=\"bp\">≫</span> <span class=\"n\">natTransInOver</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"n\">j</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n      <span class=\"n\">naturality</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">intro</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span>\n        <span class=\"n\">apply</span> <span class=\"n\">CommaMorphism.ext</span>\n        <span class=\"bp\">·</span> <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"o\">(</span><span class=\"n\">c.w</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n        <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 341333878,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678653751
    },
    {
        "content": "<p>Now the linter revealed an unused argument which I removed. Should I leave a porting note, and if so what kind?</p>",
        "id": 341336226,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1678655561
    },
    {
        "content": "<p>What do you mean by \"removed\"? Just <code>_</code>? No need for a note.</p>",
        "id": 341336968,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678656180
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/2831/commits/8f5c251a972496db9afe14bc4c3565d5437b48c9\">https://github.com/leanprover-community/mathlib4/pull/2831/commits/8f5c251a972496db9afe14bc4c3565d5437b48c9</a> I mean this</p>",
        "id": 341337000,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1678656209
    },
    {
        "content": "<p>Not just <code>_</code> replacement; an entire argument to a function was marked by the linter as unused</p>",
        "id": 341337092,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1678656299
    },
    {
        "content": "<p>It might be there on purpose. Adam will know. I would suggest leaving it (otherwise you definitely need a porting note as well as an <code>#align</code> with an <code>x</code>.</p>",
        "id": 341337183,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678656385
    },
    {
        "content": "<p>Sorry, I’m on mobile now and can’t really check such things. Who wrote the original file? Maybe they will know immediately</p>",
        "id": 341337466,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678656612
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> see above</p>",
        "id": 341337518,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678656686
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/2832\">!4#2832</a> can someone help with the remaining issues over here?</p>",
        "id": 341366763,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1678680883
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598052\">Jeremy Tan</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.232832/near/341366763\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/2832\">!4#2832</a> can someone help with the remaining issues over here?</p>\n</blockquote>\n<p>In principle, I have fixed the issues <a href=\"https://github.com/leanprover-community/mathlib4/pull/2832/commits/7cfe34201d5116ff4244c58ae8870bcc10689ad8\">https://github.com/leanprover-community/mathlib4/pull/2832/commits/7cfe34201d5116ff4244c58ae8870bcc10689ad8</a></p>",
        "id": 341479918,
        "sender_full_name": "Joël Riou",
        "timestamp": 1678718208
    }
]