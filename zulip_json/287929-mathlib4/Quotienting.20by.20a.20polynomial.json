[
    {
        "content": "<p>Is there a canonical definition for the quotient ring <code>R[X] / P[X]</code>, where <code>R</code> is a ring and <code>P[X] ∈ R[X]</code> is a polynomial?</p>",
        "id": 391002894,
        "sender_full_name": "Son Ho",
        "timestamp": 1694718600
    },
    {
        "content": "<p>You use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Ideal.span#doc\">docs#Ideal.span</a> and take the quotient by that ideal</p>",
        "id": 391003044,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694718652
    },
    {
        "content": "<p>Namely: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Ideal.Quotient</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Polynomial.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Polynomial</span> <span class=\"n\">R</span> <span class=\"bp\">⧸</span> <span class=\"n\">Ideal.span</span> <span class=\"o\">{</span><span class=\"n\">P</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 391003331,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694718784
    },
    {
        "content": "<p>Thanks! (again :) )</p>",
        "id": 391003616,
        "sender_full_name": "Son Ho",
        "timestamp": 1694718922
    },
    {
        "content": "<p>Or if you want some nicer notation:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Ideal.Quotient</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Polynomial.Basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Polynomial</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"bp\">⧸</span> <span class=\"n\">Ideal.span</span> <span class=\"o\">{</span><span class=\"n\">P</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 391003655,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694718944
    },
    {
        "content": "<p>I don't remember whether we have notation for <code>Ideal.span</code>...</p>",
        "id": 391003673,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694718956
    },
    {
        "content": "<p>there's notation for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Submodule.span#doc\">docs#Submodule.span</a>, which is defeq IIRC, but sadly it is untypeable... see <a href=\"https://tqft.net/mathlib4files/Mathlib/LinearAlgebra/Span\">file#Mathlib/LinearAlgebra/Span</a> at ~l270</p>",
        "id": 391005090,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694719656
    },
    {
        "content": "<p>In specific, it is supposedly <code>\\.</code> according to the top of the file, but that is now the Lean4 dot</p>",
        "id": 391005245,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694719708
    },
    {
        "content": "<p>Can we somehow introduce the notations:</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle f \\rangle</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⟨</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">⟩</span></span></span></span> for the ideal generated by an element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>,</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><msub><mi>f</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>f</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>f</mi><mn>3</mn></msub><mo separator=\"true\">,</mo><msub><mi>f</mi><mn>4</mn></msub><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle f_1, f_2, f_3, f_4 \\rangle</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">⟩</span></span></span></span> for the ideal generated by the set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>f</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>f</mi><mn>4</mn></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{f_1,...,f_4\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> and</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>S</mi><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle S \\rangle</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⟨</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">⟩</span></span></span></span> for the ideal generated by a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>?</li>\n</ol>\n<p>Is Lean4's notation flexible enough for this much overloading?</p>",
        "id": 391005569,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694719859
    },
    {
        "content": "<p>We something similar for <code>IntermediateField.adjoin</code>, so could presumably do the same thing</p>",
        "id": 391006027,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694720063
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IntermediateField.adjoin#doc\">docs#IntermediateField.adjoin</a></p>",
        "id": 391006126,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694720120
    },
    {
        "content": "<p>(just a note - that notation is broken in conjunction with the one for C^infty and such like - I was going to mention this when I had time to work on it but I thought it may be relevant)</p>",
        "id": 391006378,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694720233
    },
    {
        "content": "<p>I only see <a href=\"https://github.com/leanprover-community/mathlib4/blob/cdbcc21987465a4a2b7818916888e1dcee620bb2/Mathlib/FieldTheory/Adjoin.lean#L472\">https://github.com/leanprover-community/mathlib4/blob/cdbcc21987465a4a2b7818916888e1dcee620bb2/Mathlib/FieldTheory/Adjoin.lean#L472</a> for finitely many elements... is there one for sets as well?</p>",
        "id": 391006386,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694720237
    },
    {
        "content": "<p>(also this should be moved)</p>",
        "id": 391006387,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694720237
    }
]