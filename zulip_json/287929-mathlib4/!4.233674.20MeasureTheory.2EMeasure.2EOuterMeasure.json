[
    {
        "content": "<p>PR reopened: 3170 -&gt; 3674</p>",
        "id": 353180711,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1682586725
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"604291\">MonadMaverick</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.233170/near/347610555\">said</a>:</p>\n<blockquote>\n<p>Mathlib.MeasureTheory.Measure.OuterMeasure almost fixed.</p>\n<p>But importing Mathlib.Analysis.SpecificLimits.Basic causes error in synthesizing instances</p>\n<p>It seems that importing Mathlib.Topology.Algebra.Algebra introduces too many possibilities</p>\n<p>For example, around line 840 in theorem smul_ofFunction:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">▶</span> <span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">5</span><span class=\"bp\">-</span><span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">42</span><span class=\"o\">:</span> <span class=\"n\">information</span><span class=\"o\">:</span>\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">m.7236733</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">m.7236733</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">SMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">m.7236733</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">m.7236733</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">SMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">SMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">💥</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n\n<span class=\"bp\">▶</span> <span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">70</span><span class=\"bp\">-</span><span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">75</span><span class=\"o\">:</span> <span class=\"n\">information</span><span class=\"o\">:</span>\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n\n<span class=\"bp\">▶</span> <span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">81</span><span class=\"bp\">-</span><span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">95</span><span class=\"o\">:</span> <span class=\"n\">information</span><span class=\"o\">:</span>\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">SMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">Mul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">MulZeroClass</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">MulZeroClass</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"bp\">▶</span>\n\n\n<span class=\"bp\">▶</span> <span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">5</span><span class=\"bp\">-</span><span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">42</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span>\n<span class=\"n\">typeclass</span> <span class=\"kd\">instance</span> <span class=\"n\">problem</span> <span class=\"n\">is</span> <span class=\"n\">stuck</span><span class=\"o\">,</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">often</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">metavariables</span>\n  <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>without Mathlib.Topology.Algebra.Algebra </p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">▶</span> <span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">5</span><span class=\"bp\">-</span><span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">42</span><span class=\"o\">:</span> <span class=\"n\">information</span><span class=\"o\">:</span>\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MeasureTheory.OuterMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n\n<span class=\"bp\">▶</span> <span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">70</span><span class=\"bp\">-</span><span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">75</span><span class=\"o\">:</span> <span class=\"n\">information</span><span class=\"o\">:</span>\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">HSMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span><span class=\"o\">)</span> <span class=\"bp\">▶</span>\n\n\n<span class=\"bp\">▶</span> <span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">81</span><span class=\"bp\">-</span><span class=\"mi\">837</span><span class=\"o\">:</span><span class=\"mi\">95</span><span class=\"o\">:</span> <span class=\"n\">information</span><span class=\"o\">:</span>\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">SMul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">Mul</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">MulZeroClass</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"bp\">▶</span>\n\n<span class=\"o\">[</span><span class=\"n\">Meta.synthInstance</span><span class=\"o\">]</span> <span class=\"bp\">✅</span> <span class=\"n\">MulZeroClass</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"bp\">▶</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 353181587,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1682586845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"604291\">@MonadMaverick</span>, you might try merging <code>eta_cleanup</code> and seeing if that helps.</p>",
        "id": 353228516,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682593364
    },
    {
        "content": "<p>Are you referring to the branch reenableeta?<br>\n I have tried using the toolchain gebner/lean4:reenableeta230411, but I am still getting the same results.</p>",
        "id": 355288507,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1683073262
    },
    {
        "content": "<p>I guess scott means <a href=\"https://github.com/leanprover-community/mathlib4/pull/3668\">https://github.com/leanprover-community/mathlib4/pull/3668</a> so merging master should be enough</p>",
        "id": 355288852,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1683073453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.233674.20MeasureTheory.2EMeasure.2EOuterMeasure/near/355288852\">said</a>:</p>\n<blockquote>\n<p>I guess scott means <a href=\"https://github.com/leanprover-community/mathlib4/pull/3668\">https://github.com/leanprover-community/mathlib4/pull/3668</a> so merging master should be enough</p>\n</blockquote>\n<p>Thank you.<br>\nI'll give it a go</p>",
        "id": 355289974,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1683074064
    },
    {
        "content": "<p>Tried with latest master.<br>\nNo luck</p>",
        "id": 355291352,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1683074810
    },
    {
        "content": "<p>I'm confused, the PR is failing with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">./././</span><span class=\"n\">Mathlib.lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Measure.tmp</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">environment</span> <span class=\"n\">already</span> <span class=\"n\">contains</span> <span class=\"bp\">'</span><span class=\"n\">hasSum_geometric_two''</span> <span class=\"k\">from</span> <span class=\"n\">Mathlib.Analysis.SpecificLimits.Basic</span>\n</code></pre></div>\n<p>Could you bring this PR into a state where I can see the issue discussed here, and then ping me?</p>",
        "id": 355294272,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683076541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> </p>\n<p>I've pushed the changes for reproducing the errors.</p>\n<p>The following is a description of what's going on:</p>\n<ul>\n<li>import Mathlib.Analysis.SpecificLimits.Basic causes the error<ul>\n<li>there are 5 imports in SpecificLimits.Basic</li>\n<li>import Mathlib.Topology.Algebra.Algebra causes the error</li>\n</ul>\n</li>\n<li>OuterMeasure uses 1 lemma from SpecificLimits.Basic<ul>\n<li>which is:<ul>\n<li>ofFunction in OuterMeasure uses</li>\n<li>ENNReal.exists_pos_sum_of_countable in SpecificLimits.Basic</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>tmp.lean was created to isolated the lemma ENNReal.exists_pos_sum_of_countable and it compiles<ul>\n<li>ENNReal.exists_pos_sum_of_countable does not depend on Topology.Algebra.Algebra</li>\n<li>tmp.lean is a just a stripped copy of SpecificLimits.Basic that only provides ENNReal.exists_pos_sum_of_countable for OuterMeasure to use</li>\n</ul>\n</li>\n<li>OuterMeasure.lean is almost fixed<ul>\n<li>for the first import<ul>\n<li>import Mathlib.Analysis.SpecificLimits.Basic causes the error</li>\n<li>import Mathlib.MeasureTheory.Measure.tmp compiles</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
        "id": 355298725,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1683079299
    },
    {
        "content": "<p>And <code>git revert HEAD</code> toggles the 2 scenarios</p>",
        "id": 355298905,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1683079438
    },
    {
        "content": "<p>Sorry, I still don't see it. The build is currently failing with <code>Error: ./././Mathlib/MeasureTheory/Measure/OuterMeasure.lean:433:26: error: typeclass instance problem is stuck, it is often due to metavariables</code> which is very far from <code>smul_ofFunction</code>.</p>\n<p>Maybe you could clarify what \"the error\" is referring to in your message above? Sorry if I'm being dense.</p>",
        "id": 355304505,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683082820
    },
    {
        "content": "<p>Further there's no file <code>Mathlib.MeasureTheory.Measure.tmp</code> in your PR.</p>",
        "id": 355305750,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683083430
    },
    {
        "content": "<p>Okay, in any case, I've pushed a candidate fix to the errors in this PR.</p>",
        "id": 355308567,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683084874
    },
    {
        "content": "<p>Lean is failing to find <code>IsScalarTower ℝ≥0∞ ℝ≥0∞ ℝ≥0∞</code>, even though <code>IsScalarTower.right</code> is an instance. I've included in comments the trace of typeclass search crashing, to help debugging later.</p>\n<p>I've added some <code>local instance</code> statements to provide this missing instance.</p>",
        "id": 355308685,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683084944
    },
    {
        "content": "<p>It works well to change the priority of <code>IsScalarTower.of_ring_hom</code>.</p>",
        "id": 355356358,
        "sender_full_name": "Pol'tta / Miyahara Kō",
        "timestamp": 1683102157
    },
    {
        "content": "<p>There is a PR that needs forward-porting that should help with that missing instance</p>",
        "id": 355371315,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683105716
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3778\">!4#3778</a>?</p>",
        "id": 355373360,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1683106195
    },
    {
        "content": "<p>Unfortunately, that PR didn't help this file.</p>",
        "id": 355376372,
        "sender_full_name": "Pol'tta / Miyahara Kō",
        "timestamp": 1683106798
    }
]