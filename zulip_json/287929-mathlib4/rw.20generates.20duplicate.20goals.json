[
    {
        "content": "<p>Sometimes <code>rw</code> produces duplicate goals, when one of the argument of the lemma you are rewriting by is unified with an existing metavariable:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">{</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">//</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">?</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">w</span><span class=\"o\">⟩</span>\n  <span class=\"n\">rotate_left</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"n\">trace_state</span> <span class=\"c1\">-- two goals! `case x` is reported twice, but ideally only once.</span>\n  <span class=\"n\">exact</span> <span class=\"mi\">37</span>\n</code></pre></div>\n<p>It don't really see a way around this except sticking a <code>recover</code> in the definition of <code>rewriteTarget</code>. Any other ideas?</p>\n<p>It's not a particularly harmful problem, but it does annoy me a little!</p>",
        "id": 387396606,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693035450
    },
    {
        "content": "<p>I've seen a similar thing happen in certain <code>have := ... ?_</code> statements where new metavariables need to be unified. The goals will be given twice, but closing one closes the other.</p>",
        "id": 387408063,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1693042448
    }
]