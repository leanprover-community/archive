[
    {
        "content": "<p>Why are <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Neg.toHasAbs#doc\">docs#Neg.toHasAbs</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Inv.toHasAbs#doc\">docs#Inv.toHasAbs</a> both instances, and why didn't they lead to trouble for ordered fields? The multiplicative one probably shouldn't be an instance?</p>\n<p>Does to_additive not transfer the <code>(priority := 100)</code> so <code>Neg.toHasAbs</code> gets normal priority?</p>",
        "id": 398814638,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698379100
    },
    {
        "content": "<p>because <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> asked for absolute values to be multiplicativised and we didn't have the heart to tell him it was a bad idea.</p>",
        "id": 398839916,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1698391284
    },
    {
        "content": "<p>If I ever pushed for the multiplicative version of the instance, then I apologize.<br>\nI thought there was separate notation for multiplicative absolute values, but now I don't see it.</p>",
        "id": 398840692,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1698391588
    },
    {
        "content": "<p>There used to be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- `mabs a` is the multiplicative absolute value of `a`. -/</span>\n<span class=\"kd\">@[</span><span class=\"n\">to_additive</span> <span class=\"n\">abs</span>\n<span class=\"s2\">\"`abs a` is the additive absolute value of `a`.\"</span>\n<span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">mabs</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">has_inv</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">lattice</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">⊔</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>And then in <a href=\"https://github.com/leanprover-community/mathlib/pull/9172/files#diff-3e069267e91f1c9fa57363bce4331f584ef26260c60a7801494d2889b733a866\">https://github.com/leanprover-community/mathlib/pull/9172/files#diff-3e069267e91f1c9fa57363bce4331f584ef26260c60a7801494d2889b733a866</a> it was turned into a notation typeclass. I merged that PR, and clearly I forgot to think about the conflict that it introduced.</p>",
        "id": 398841540,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1698391888
    },
    {
        "content": "<p>I think <code>mabs</code> is not necessarily bad. But certainly it shouldn't have been turned into <code>|.|</code> notation.</p>",
        "id": 398841644,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1698391934
    },
    {
        "content": "<p>Anyway I have a full rewrite of the files in question coming up, so don't worry too much about it.</p>",
        "id": 398892138,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1698410837
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7976\">#7976</a> is generalizing some stuff about Abs. </p>\n<blockquote>\n<p>Does to_additive not transfer the (priority := 100) so Neg.toHasAbs gets normal priority?</p>\n</blockquote>\n<p>Returning to this question: how do I find out the priority of an instance?</p>",
        "id": 398917834,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698419667
    }
]