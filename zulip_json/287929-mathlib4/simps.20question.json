[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Simps.Basic</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">P</span> <span class=\"n\">where</span>\n  <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">P.y</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">p.x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simps</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">where</span>\n  <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"mi\">37</span>\n\n<span class=\"c1\">-- Is there a way to ask `simps` to generate `p_y`?</span>\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span> <span class=\"kd\">theorem</span> <span class=\"n\">p_y</span> <span class=\"o\">:</span> <span class=\"n\">p.y</span> <span class=\"bp\">=</span> <span class=\"mi\">37</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 403153561,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700481092
    },
    {
        "content": "<p>No, currently that is not supported, unless <code>P.y</code> is definitionally equal to one of the projections.</p>",
        "id": 403166301,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1700485711
    }
]