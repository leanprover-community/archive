[
    {
        "content": "<p>I was very confused why in my usage, <code>lake exe cache get</code> almost never works. I am realizing now that it is because the hashing is quite coarse. In particular, the hash of every Lean file mixes in the \"root hash\" which is a mix of <code>lakefile.lean</code>/<code>lake-manifest.json</code>/<code>lean-toolchain</code>. So if I change something unrelated, e.g. the version of docgen I depend on in <code>lake-manifest.json</code>, the entire cache gets invalidated. Lake traces are much better at this; even if I change some pinned versions of the manifest, if those don't end up in the build dependencies of a module, the Lake trace of that module remains the same. Is there a reason why <code>Mathlib.Cache</code> doesn't use Lake traces?</p>",
        "id": 349189855,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1681412128
    },
    {
        "content": "<p>The computation of Lake traces is tied to the building routine, but if we build in order to know the traces we no longer need cached files. So <code>cache</code> should be totally able to reuse Lake traces, but that would require a refactor of <code>Lake</code> itself.</p>\n<p>Note: if we ever want to reuse Lake implementations, we'd need to add Lake as a dependency in Mathlib's lakefile. Not a prohibitive thing, but Mathlib maintainers will need to chime in for this decision</p>",
        "id": 349193358,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1681413255
    },
    {
        "content": "<p>Gotcha. It sounds like either a parse-only (but don't build) trace generation routine could be exposed by Lake as a library, or <code>Cache</code> could become part of Lake. The latter option would certainly benefit non-mathlib projects. Lake already has its cloud build support, but I am understanding that it was insufficient in some respects for mathlib.</p>",
        "id": 349195548,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1681414068
    },
    {
        "content": "<p>(Short of integrating with Lake, though, Mathlib.Cache could also attempt finer trace generation that looks at <code>import</code> statements beyond those just in Mathlib.)</p>",
        "id": 349195772,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1681414148
    }
]