[
    {
        "content": "<p>Is there a good reason for the following to fail?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.NormedSpace.Basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‖</span><span class=\"n\">x</span> <span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- expected term</span>\n</code></pre></div>",
        "id": 369798968,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1687804380
    },
    {
        "content": "<p>I guess for human parsing (and maybe Lean too?) it's helpful if there is no space between the norm symbols and the stuff inside it.</p>",
        "id": 369804732,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1687805818
    },
    {
        "content": "<p>Well it's definitely cleaner, but this is really annoying for beginners who don't have this kind of style rules in mind.</p>",
        "id": 369805401,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1687806002
    },
    {
        "content": "<p>fair point. Is <code>\\norm</code> a valid abbreviation in the Lean 4 extension yet? (EDIT: seems not, that would have helped with cursor placement)</p>",
        "id": 369807638,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1687806555
    },
    {
        "content": "<p>I think it is <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 369810782,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1687807368
    },
    {
        "content": "<p>Lol, I have a very old version of lean-m17n that was hijacking the Lean 4 extension and not doing the replacement.</p>",
        "id": 369812816,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1687807893
    },
    {
        "content": "<p>I guess this is the price to pay for having a reasonable notation. Here, as often, reasonable means the same token is a delimiter on both sides.</p>",
        "id": 369817965,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1687809012
    },
    {
        "content": "<p>AKA \"unreasonable\", as far as some computer scientists are concerned :-)</p>",
        "id": 369832538,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687813151
    },
    {
        "content": "<p>I know, hence my emphasis.</p>",
        "id": 369836073,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1687813868
    },
    {
        "content": "<p>There is workable syntax, and then there is workaroundable syntax</p>",
        "id": 369838164,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1687814657
    }
]