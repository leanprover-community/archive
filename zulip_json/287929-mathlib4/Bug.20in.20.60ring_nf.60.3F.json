[
    {
        "content": "<p>The following fails on current master, with <code>x + 0</code> failing to be normalized to <code>x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Ring</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">ring_nf</span> <span class=\"c1\">-- does nothing</span>\n  <span class=\"n\">with_reducible</span> <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>Any thoughts on what the bug might be?</p>",
        "id": 339757962,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678061520
    },
    {
        "content": "<p>Yes, this was reported earlier</p>",
        "id": 339758076,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678061593
    },
    {
        "content": "<p><a href=\"#narrow/stream/287929-mathlib4/topic/ring_nf.20failing.20to.20fully.20normalize\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/ring_nf.20failing.20to.20fully.20normalize</a></p>",
        "id": 339758112,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678061636
    },
    {
        "content": "<p>Is it wontfix then?</p>",
        "id": 339758224,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678061734
    },
    {
        "content": "<p>the fix requires some substantial new code</p>",
        "id": 339758234,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678061757
    },
    {
        "content": "<p>for now there is <a href=\"https://github.com/leanprover-community/mathlib4/pull/2171\">!4#2171</a></p>",
        "id": 339758287,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678061775
    },
    {
        "content": "<p>huh</p>\n<blockquote>\n<p>hrmacbeth added this to <a href=\"https://github.com/orgs/leanprover-community/projects/3\">Teaching Features</a> last month</p>\n</blockquote>",
        "id": 339758324,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678061807
    },
    {
        "content": "<p>I must have forgotten about this issue!  Can I motivate anyone to add it to their to-do list?  I expect to start to use <code>ring_nf</code> heavily in teaching in about two weeks.</p>",
        "id": 339758431,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1678061891
    }
]