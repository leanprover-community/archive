[
    {
        "content": "<p>I can't understand why in the first case the <code>ring</code> tactic closes the goal whereas in the second case it can't:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">ring</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">ring</span>\n</code></pre></div>\n<p>How can I close the goal in my second case? (e.i. if <code>a</code> is really a natural integer)</p>\n<p>Thank you.</p>",
        "id": 386245986,
        "sender_full_name": "RL",
        "timestamp": 1692554127
    },
    {
        "content": "<p>The short answer is that <code>-</code> on the naturals is not an operation in the language of <code>ring</code>s, and therefore <code>ring</code> can't solve it.</p>",
        "id": 386246156,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692554304
    },
    {
        "content": "<p><code>rw [mul_tsub]</code> directly closes your second goal (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=mul_tsub#doc\">docs#mul_tsub</a>)</p>",
        "id": 386246168,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692554317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Beginner.20question.20on.20ring.20tactic.20with.20natural.20integers/near/386246156\">said</a>:</p>\n<blockquote>\n<p>The short answer is that <code>-</code> on the naturals is not an operation in the language of <code>ring</code>s, and therefore <code>ring</code> can't solve it.</p>\n</blockquote>\n<p>So how can I close my goal? Another tactic?</p>",
        "id": 386246225,
        "sender_full_name": "RL",
        "timestamp": 1692554395
    },
    {
        "content": "<p>You can generally move to <code>ℤ</code> by using <code>zify</code> and supplying the necessary inequalities:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">a</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">simp</span>\n  <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Nat.succ_eq_add_one</span><span class=\"o\">,</span> <span class=\"n\">mul_add</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span>\n    <span class=\"n\">zify</span> <span class=\"o\">[</span><span class=\"n\">Nat.le_add_left</span> <span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">Nat.le_add_left</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n    <span class=\"n\">ring</span>\n</code></pre></div>",
        "id": 386246389,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1692554505
    },
    {
        "content": "<blockquote>\n<p>So how can I close my goal? Another tactic?</p>\n</blockquote>\n<p>Yes, I just gave you such a tactic in my second message!</p>",
        "id": 386246438,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692554526
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Beginner.20question.20on.20ring.20tactic.20with.20natural.20integers/near/386246168\">said</a>:</p>\n<blockquote>\n<p><code>rw [mul_tsub]</code> directly closes your second goal (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=mul_tsub#doc\">docs#mul_tsub</a>)</p>\n</blockquote>",
        "id": 386246465,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692554542
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"350358\">RL</span> has marked this topic as resolved.</p>",
        "id": 386246737,
        "sender_full_name": "Notification Bot",
        "timestamp": 1692554797
    }
]