[
    {
        "content": "<p>I think <code>lake exe cache get</code> is broken (or rather, the cache it downloads is not being used), ever since we merged ProofWidgets.</p>",
        "id": 364427896,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686190589
    },
    {
        "content": "<p>Would someone mind running <code>lake clean &amp;&amp; lake exe cache get &amp;&amp; lake build</code> to verify they see the same thing?</p>",
        "id": 364427910,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686190612
    },
    {
        "content": "<p>It worked for me last I checked (working on a std bump now)</p>",
        "id": 364428016,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686190694
    },
    {
        "content": "<p>This is what I saw, running your code on a freshly pulled master:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">/</span><span class=\"n\">mathlib4</span> <span class=\"o\">(</span><span class=\"n\">master</span><span class=\"o\">)</span><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">clean</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Downloading</span> <span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">v0.0.10</span><span class=\"bp\">/</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">tar.gz</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Unpacking</span> <span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">v0.0.10</span><span class=\"bp\">/</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">tar.gz</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">2637</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">2637</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">2637</span><span class=\"bp\">/</span><span class=\"mi\">2637</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3063</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"mi\">230</span><span class=\"bp\">/</span><span class=\"mi\">1160</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Data.Json</span>\n<span class=\"o\">[</span><span class=\"mi\">385</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.TermUnsafe</span>\n<span class=\"o\">[</span><span class=\"mi\">385</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">385</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.NameMapAttribute</span>\n<span class=\"o\">[</span><span class=\"mi\">385</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Init.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">385</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.OpenPrivate</span>\n<span class=\"o\">[</span><span class=\"mi\">386</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Ord</span>\n<span class=\"o\">[</span><span class=\"mi\">387</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.List.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">388</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.NoMatch</span>\n<span class=\"o\">[</span><span class=\"mi\">389</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.LibraryNote</span>\n<span class=\"o\">[</span><span class=\"mi\">390</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Simp</span>\n<span class=\"o\">[</span><span class=\"mi\">391</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.TypeClass</span>\n<span class=\"o\">[</span><span class=\"mi\">392</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint</span>\n<span class=\"o\">[</span><span class=\"mi\">393</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">394</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Misc</span>\n<span class=\"o\">[</span><span class=\"mi\">394</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Frontend</span>\n<span class=\"o\">[</span><span class=\"mi\">401</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">scripts.runLinter</span>\n<span class=\"o\">[</span><span class=\"mi\">403</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Compat</span>\n<span class=\"o\">[</span><span class=\"mi\">1113</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">scripts.runLinter</span>\n<span class=\"o\">[</span><span class=\"mi\">1509</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">2398</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.Panel</span>\n<span class=\"o\">[</span><span class=\"mi\">2398</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Data.Html</span>\n<span class=\"o\">[</span><span class=\"mi\">2612</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">runLinter</span>\n<span class=\"o\">[</span><span class=\"mi\">2992</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.PenroseDiagram</span>\n<span class=\"o\">[</span><span class=\"mi\">2992</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Presentation.Expr</span>\n<span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/././</span><span class=\"n\">ProofWidgets</span><span class=\"bp\">/</span><span class=\"n\">Presentation</span><span class=\"bp\">/</span><span class=\"n\">Expr.lean</span><span class=\"o\">:</span><span class=\"mi\">85</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"bp\">`</span><span class=\"n\">ProofWidgets.getExprPresentation</span><span class=\"bp\">`</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">deprecated</span>\n<span class=\"o\">[</span><span class=\"mi\">2994</span><span class=\"bp\">/</span><span class=\"mi\">3086</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.SelectionPanel</span>\n</code></pre></div>",
        "id": 364428472,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1686191013
    },
    {
        "content": "<p>Interesting... for me it keeps building random subsets of mathlib4.</p>",
        "id": 364428755,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686191261
    },
    {
        "content": "<p>My experience with <code>lake exe cache get</code> is that it works fairly well, but maybe I have not been trying to rough it out too much...</p>",
        "id": 364428889,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1686191376
    },
    {
        "content": "<p>In fact, especially when porting a new file, I usually skip the final <code>lake build</code> step, since I trust that everything else has been downloaded, and start editing directly in VSCode.</p>",
        "id": 364428991,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1686191450
    },
    {
        "content": "<p>A <code>lake exe cache clean!</code> seems to have resolved my difficulties, sorry for the noise.</p>",
        "id": 364429574,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686191890
    },
    {
        "content": "<p>Lately I've been running <code>for f in ~/.cache/mathlib/*.gz; do gzip -t \"$f\" || rm \"$f\"; done</code> quite often due to bad internet connectivity (curl stalls, I press <code>Ctrl-C</code> to restart it and pending files aren't removed). Maybe a new command <code>lake exe cache check</code> (or <code>get!?</code>) could do this?</p>",
        "id": 374554646,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689155800
    },
    {
        "content": "<p>I'm having the issue that it seems to download the files but I don't get any kind of \"Building\" or \"Compiling\" message. And then when I try and run vs code it is clearly not using the cache.</p>",
        "id": 374896582,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689247928
    },
    {
        "content": "<p>I've tried a <code>lake exe cache clean!</code> and it still isn't working.</p>",
        "id": 374896684,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689247955
    },
    {
        "content": "<p>Is this on <code>master</code> from 1 second ago?</p>",
        "id": 374896762,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689247973
    },
    {
        "content": "<p>I'm trying to add Mathlib to a separate project to be clear.</p>",
        "id": 374896840,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689247996
    },
    {
        "content": "<p>Using <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency\">https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency</a></p>",
        "id": 374896857,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689248002
    },
    {
        "content": "<p>Ok... because the commit that was causing trouble was reverted about half an hour ago.</p>",
        "id": 374896937,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689248024
    },
    {
        "content": "<p>That's why I was asking whether these problems were recent or <em>very</em> recent</p>",
        "id": 374896989,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689248042
    },
    {
        "content": "<p>Oh I just now had the issue. But I need to update lake or something?</p>",
        "id": 374897730,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689248220
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span><span class=\"bp\">!</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">3568</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">3568</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">3568</span><span class=\"bp\">/</span><span class=\"mi\">3568</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3568</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 374897859,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689248248
    },
    {
        "content": "<p>This just happened (it did nothing further than this).</p>",
        "id": 374897939,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689248262
    },
    {
        "content": "<p>If there's something I can run to diagnose what my whatsit is on lmk.</p>",
        "id": 374898216,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689248315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Is there a chance that artifacts on Azure are now corrupt?</p>",
        "id": 374898762,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689248432
    },
    {
        "content": "<p>So that even after reverting the commit, we're still downloading a broken cache?</p>",
        "id": 374898820,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689248447
    },
    {
        "content": "<p>They shouldn't because they use different file extensions, right?</p>",
        "id": 374898916,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689248471
    },
    {
        "content": "<p>I guess that's right</p>",
        "id": 374898990,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689248489
    },
    {
        "content": "<p>I'll run <code>lake exe cache get!</code> just to be sure.</p>",
        "id": 374899238,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689248547
    },
    {
        "content": "<p>Like... is it maybe the case that I need to link Mathlib in more clearly? I'm just totally confused and very frustrated.</p>",
        "id": 374900628,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689248825
    },
    {
        "content": "<p>The only Building/Compiling messages <code>lake exe cache</code> should print are the eight or so to build the cache tool itself (and those only if it isn't built yet)</p>",
        "id": 374901259,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689248937
    },
    {
        "content": "<p>Wrenna, could you post your <code>lakefile</code>, and the output of <code>git status</code>?</p>",
        "id": 374901265,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689248938
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330967\">Wrenna Robson</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20broken.3F/near/374897859\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span><span class=\"bp\">!</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">3568</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">3568</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">3568</span><span class=\"bp\">/</span><span class=\"mi\">3568</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3568</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This output looks correct</p>",
        "id": 374901518,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689248975
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">cat</span> <span class=\"n\">lakefile.lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">«</span><span class=\"n\">controlbits</span><span class=\"bp\">»</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add any package configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n\n<span class=\"kd\">@[default_target]</span>\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">Controlbits</span><span class=\"bp\">»</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add any library configuration options here</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 374901555,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689248985
    },
    {
        "content": "<p>Please also paste what's in your <code>lean-toolchain</code> and <code>lake-manifest.json</code></p>",
        "id": 374901741,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689249016
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">status</span>\n<span class=\"n\">On</span> <span class=\"n\">branch</span> <span class=\"n\">master</span>\n\n<span class=\"n\">No</span> <span class=\"n\">commits</span> <span class=\"n\">yet</span>\n\n<span class=\"n\">Untracked</span> <span class=\"n\">files</span><span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"s2\">\"git add &lt;file&gt;...\"</span> <span class=\"n\">to</span> <span class=\"kn\">include</span> <span class=\"k\">in</span> <span class=\"n\">what</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">committed</span><span class=\"o\">)</span>\n        <span class=\"bp\">.</span><span class=\"n\">gitignore</span>\n        <span class=\"n\">Controlbits.lean</span>\n        <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">manifest.json</span>\n        <span class=\"n\">lakefile.lean</span>\n        <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span>\n\n<span class=\"n\">nothing</span> <span class=\"n\">added</span> <span class=\"n\">to</span> <span class=\"n\">commit</span> <span class=\"n\">but</span> <span class=\"n\">untracked</span> <span class=\"n\">files</span> <span class=\"n\">present</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"s2\">\"git add\"</span> <span class=\"n\">to</span> <span class=\"n\">track</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 374901790,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249026
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">cat</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">07</span><span class=\"bp\">-</span><span class=\"mi\">12</span>\n</code></pre></div>",
        "id": 374901832,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249034
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">cat</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">manifest.json</span>\n<span class=\"o\">{</span><span class=\"s2\">\"version\"</span><span class=\"o\">:</span> <span class=\"mi\">4</span><span class=\"o\">,</span>\n <span class=\"s2\">\"packagesDir\"</span><span class=\"o\">:</span> <span class=\"s2\">\"lake-packages\"</span><span class=\"o\">,</span>\n <span class=\"s2\">\"packages\"</span><span class=\"o\">:</span>\n <span class=\"o\">[{</span><span class=\"s2\">\"git\"</span><span class=\"o\">:</span>\n   <span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span> <span class=\"s2\">\"https://github.com/EdAyers/ProofWidgets4\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"subDir?\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"rev\"</span><span class=\"o\">:</span> <span class=\"s2\">\"c43db94a8f495dad37829e9d7ad65483d68c86b8\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"proofwidgets\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"inputRev?\"</span><span class=\"o\">:</span> <span class=\"s2\">\"v0.0.11\"</span><span class=\"o\">}},</span>\n  <span class=\"o\">{</span><span class=\"s2\">\"git\"</span><span class=\"o\">:</span>\n   <span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span> <span class=\"s2\">\"https://github.com/mhuisi/lean4-cli.git\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"subDir?\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"rev\"</span><span class=\"o\">:</span> <span class=\"s2\">\"5a858c32963b6b19be0d477a30a1f4b6c120be7e\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Cli\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"inputRev?\"</span><span class=\"o\">:</span> <span class=\"s2\">\"nightly\"</span><span class=\"o\">}},</span>\n  <span class=\"o\">{</span><span class=\"s2\">\"git\"</span><span class=\"o\">:</span>\n   <span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"subDir?\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"rev\"</span><span class=\"o\">:</span> <span class=\"s2\">\"aeaebdd3d43b60b0d771c9a457131c72cc20a811\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"mathlib\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"inputRev?\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">}},</span>\n  <span class=\"o\">{</span><span class=\"s2\">\"git\"</span><span class=\"o\">:</span>\n   <span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span> <span class=\"s2\">\"https://github.com/gebner/quote4\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"subDir?\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"rev\"</span><span class=\"o\">:</span> <span class=\"s2\">\"e6ca4e7e6b13ceee845e40a904c1a71ed9866574\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Qq\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"inputRev?\"</span><span class=\"o\">:</span> <span class=\"s2\">\"master\"</span><span class=\"o\">}},</span>\n  <span class=\"o\">{</span><span class=\"s2\">\"git\"</span><span class=\"o\">:</span>\n   <span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span> <span class=\"s2\">\"https://github.com/JLimperg/aesop\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"subDir?\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"rev\"</span><span class=\"o\">:</span> <span class=\"s2\">\"f04538ab6ad07642368cf11d2702acc0a9b4bcee\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"aesop\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"inputRev?\"</span><span class=\"o\">:</span> <span class=\"s2\">\"master\"</span><span class=\"o\">}},</span>\n  <span class=\"o\">{</span><span class=\"s2\">\"git\"</span><span class=\"o\">:</span>\n   <span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span> <span class=\"s2\">\"https://github.com/leanprover/std4\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"subDir?\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"rev\"</span><span class=\"o\">:</span> <span class=\"s2\">\"dff883c55395438ae2a5c65ad5ddba084b600feb\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"std\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"inputRev?\"</span><span class=\"o\">:</span> <span class=\"s2\">\"main\"</span><span class=\"o\">}}]}</span>\n</code></pre></div>",
        "id": 374901889,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249049
    },
    {
        "content": "<p>Thank you for help.</p>",
        "id": 374901910,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249055
    },
    {
        "content": "<p>Also here's my actual file I was trying to use Mathlib in.</p>",
        "id": 374902050,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249082
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">cat</span> <span class=\"n\">Controlbits.lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">ControlBits</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">bits</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"o\">((</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">&lt;&lt;&lt;</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Bool</span>\n</code></pre></div>",
        "id": 374902063,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249085
    },
    {
        "content": "<p>I opened this file in VS Code yesterday and I still had orange bars after 40 minutes</p>",
        "id": 374902144,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249103
    },
    {
        "content": "<p>Thanks. Now if only I saw something wrong <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 374902430,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689249152
    },
    {
        "content": "<p>Yeah it is really baffling.</p>",
        "id": 374902549,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249177
    },
    {
        "content": "<p>I tried to reproduce with the files you pasted and it works</p>",
        "id": 374903724,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689249392
    },
    {
        "content": "<p>OK. How did you check that it works?</p>",
        "id": 374904142,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249473
    },
    {
        "content": "<p>Perhaps it is a problem with my VS Code setup? So if there's some way of testing it outside of that...</p>",
        "id": 374904288,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689249495
    },
    {
        "content": "<p>I opened vs code and the infoview worked</p>",
        "id": 374904440,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689249534
    },
    {
        "content": "<p>Try changing something in <code>Controlbits.lean</code> and running <code>lake build</code>, it should show</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"o\">[</span><span class=\"mi\">3566</span><span class=\"bp\">/</span><span class=\"mi\">3567</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Controlbits</span>\n</code></pre></div>\n<p>and nothing else</p>",
        "id": 374904740,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689249599
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"o\">[</span><span class=\"mi\">3566</span><span class=\"bp\">/</span><span class=\"mi\">3567</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Controlbits</span>\n</code></pre></div>",
        "id": 374908504,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250307
    },
    {
        "content": "<p>I do indeed have this</p>",
        "id": 374908515,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250310
    },
    {
        "content": "<p>But it is then just... hanging at the command line, clearly working.</p>",
        "id": 374908593,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250323
    },
    {
        "content": "<p>No output. Is there a verbose build mode?</p>",
        "id": 374908685,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250341
    },
    {
        "content": "<p>You mean it never returns to the command line?</p>",
        "id": 374908720,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689250347
    },
    {
        "content": "<p>Correct.</p>",
        "id": 374908759,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250354
    },
    {
        "content": "<p>Essentially as I'd expect it to behave if it was running some kind of very intensive program, the fan is going 15 to the dozen (this is a laptop, mind), and yes, it hasn't returned to the command line.</p>",
        "id": 374908981,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250403
    },
    {
        "content": "<p>Note that without the \"import Mathlib\" I don't get this behaviour.</p>",
        "id": 374909057,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250425
    },
    {
        "content": "<p>Are there orphaned lean processes still running?</p>",
        "id": 374910111,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1689250656
    },
    {
        "content": "<p>It has now returned!</p>",
        "id": 374910125,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250659
    },
    {
        "content": "<p>I do tend to run \"killall lean\" to prevent this</p>",
        "id": 374910272,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330967\">Wrenna Robson</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20broken.3F/near/374910125\">said</a>:</p>\n<blockquote>\n<p>It has now returned!</p>\n</blockquote>\n<p>I'm now trying VS code.</p>",
        "id": 374910392,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250709
    },
    {
        "content": "<p>Orange bars.</p>",
        "id": 374910432,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250720
    },
    {
        "content": "<p>Heavy fan, as if it's building the whole file again.</p>",
        "id": 374910505,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250739
    },
    {
        "content": "<p>Which should be trivial...</p>",
        "id": 374910603,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250761
    },
    {
        "content": "<p>I feel like I must have some part of my setup borked.</p>",
        "id": 374910678,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250780
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Lake</span> <span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">pre</span> <span class=\"o\">(</span><span class=\"n\">Lean</span> <span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">07</span><span class=\"bp\">-</span><span class=\"mi\">12</span><span class=\"o\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">elan</span> <span class=\"c1\">--version</span>\n<span class=\"n\">elan</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"mi\">001</span><span class=\"n\">eb2cfe</span> <span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">07</span><span class=\"bp\">-</span><span class=\"mi\">03</span><span class=\"o\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">lean</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">07</span><span class=\"bp\">-</span><span class=\"mi\">12</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"mi\">6</span><span class=\"n\">e904421304c</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>For reference.</p>",
        "id": 374911012,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250842
    },
    {
        "content": "<p>Will do anything to fix this :(</p>",
        "id": 374911058,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250858
    },
    {
        "content": "<p>Oh! It's not orange.</p>",
        "id": 374911543,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250961
    },
    {
        "content": "<p>I have no idea why it now works. Potentially this cache fix you did has done it and I just needed to give it a bit.</p>",
        "id": 374911731,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689250996
    },
    {
        "content": "<p>Strange, but glad to hear it works now</p>",
        "id": 374911997,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689251047
    },
    {
        "content": "<p>If it needs more a few seconds to load, there still seems to be something quite wrong</p>",
        "id": 374912144,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689251087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20broken.3F/near/374554646\">said</a>:</p>\n<blockquote>\n<p>Lately I've been running <code>for f in ~/.cache/mathlib/*.gz; do gzip -t \"$f\" || rm \"$f\"; done</code> quite often due to bad internet connectivity (curl stalls, I press <code>Ctrl-C</code> to restart it and pending files aren't removed). Maybe a new command <code>lake exe cache check</code> (or <code>get!?</code>) could do this?</p>\n</blockquote>\n<p>How about simply passing the <code>--remove-on-error</code> flag to <code>curl</code>? Then at least there won't be wrong partial downloads when interrupted</p>",
        "id": 374949799,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1689257781
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/blob/aeaebdd3d43b60b0d771c9a457131c72cc20a811/Cache/Requests.lean#L86\">https://github.com/leanprover-community/mathlib4/blob/aeaebdd3d43b60b0d771c9a457131c72cc20a811/Cache/Requests.lean#L86</a></p>",
        "id": 374951728,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689258106
    },
    {
        "content": "<p>Are you sure it does anything on <code>SIGINT</code>?</p>",
        "id": 374951910,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689258131
    },
    {
        "content": "<p>Not sure of that, but at least it should work for dropped connections</p>",
        "id": 374957366,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1689259159
    },
    {
        "content": "<p>So should the code I linked to</p>",
        "id": 374957942,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689259263
    },
    {
        "content": "<p>So oddly it was working fine for a bit, and now - and I ran an update of the cache just to be sure, but it was doing it spontaneously before - I am in orange bar hell again.</p>",
        "id": 375254259,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689340269
    },
    {
        "content": "<p>So it's very odd - it's like suddenly building my file is really hard for it. But I cannot see why.</p>",
        "id": 375254715,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689340330
    },
    {
        "content": "<p>Is it reproducible with <code>lake build</code>?</p>",
        "id": 375259212,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689340935
    },
    {
        "content": "<p>In that lake build takes an age to complete, yes.</p>",
        "id": 375274344,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689342991
    },
    {
        "content": "<p>On the last step again? Could you try this then?</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">time</span><span class=\"w\"> </span>lake<span class=\"w\"> </span>env<span class=\"w\"> </span>lean<span class=\"w\"> </span>--profile<span class=\"w\"> </span>Controlbits.lean\n</code></pre></div>",
        "id": 375276125,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689343232
    },
    {
        "content": "<p>I'm having a problem that seems related. I cloned a fresh copy of mathlib4, then ran <code>lake update</code> and <code>lake exe cache get</code> in the folder. Then <code>lake build</code> takes a long time and gives errors. If I do the same thing without <code>lake update</code>, it works fine (builds mathlib quickly).</p>",
        "id": 375281715,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1689344012
    },
    {
        "content": "<p>Running the above now.</p>",
        "id": 375282666,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689344204
    },
    {
        "content": "<p>No no no, don't run <code>lake update</code> within mathlib</p>",
        "id": 375283280,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689344319
    },
    {
        "content": "<p>I'm not, personally: I was following the instructions here. <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency\">https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency</a></p>",
        "id": 375284341,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689344515
    },
    {
        "content": "<p>That was probably for me. Understood!</p>",
        "id": 375285471,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1689344728
    },
    {
        "content": "<p>FWIW it is still running 15 minutes later.</p>",
        "id": 375287315,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689345057
    },
    {
        "content": "<p>Still running...</p>",
        "id": 375304348,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689348144
    },
    {
        "content": "<p>This is the output thus far:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">time</span> <span class=\"n\">lake</span> <span class=\"n\">env</span> <span class=\"n\">lean</span> <span class=\"c1\">--profile Controlbits.lean</span>\n<span class=\"n\">interpretation</span> <span class=\"n\">of</span> <span class=\"n\">Mathlib.Prelude.Rename.binportTag</span> <span class=\"n\">took</span> <span class=\"mi\">79</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"n\">s</span>\n<span class=\"n\">interpretation</span> <span class=\"n\">of</span> <span class=\"n\">Lean.mkStateFromImportedEntries._at.Mathlib.Prelude.Rename.initFn._</span><span class=\"bp\">@.</span><span class=\"n\">Mathlib.Mathport.Rename._hyg.251._spec_1</span> <span class=\"n\">took</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">22</span><span class=\"n\">s</span>\n<span class=\"kn\">import</span> <span class=\"n\">took</span> <span class=\"mi\">156</span><span class=\"n\">s</span>\n<span class=\"n\">elaboration</span> <span class=\"n\">took</span> <span class=\"mi\">284</span><span class=\"n\">ms</span>\n<span class=\"n\">compilation</span> <span class=\"n\">new</span> <span class=\"n\">took</span> <span class=\"mi\">108</span><span class=\"n\">ms</span>\n<span class=\"n\">typeclass</span> <span class=\"n\">inference</span> <span class=\"n\">of</span> <span class=\"n\">CoeFun</span> <span class=\"n\">took</span> <span class=\"mi\">619</span><span class=\"n\">ms</span>\n</code></pre></div>\n<p>But it hasn't yet returned to the command line.</p>",
        "id": 375304449,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689348167
    },
    {
        "content": "<p>Still going. I think this is past the point I would give up, <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>...</p>",
        "id": 375307407,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689348719
    },
    {
        "content": "<p>I am a little worried that nobody seems able to replicate my issue.</p>",
        "id": 375307546,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689348735
    },
    {
        "content": "<p>I think it's safe to say at this point that there must be something special about your setup. Is your project on a network drive, or some other exotic configuration?</p>",
        "id": 375308263,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689348892
    },
    {
        "content": "<p>No, it's literally just running on my laptop.</p>",
        "id": 375314099,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689350119
    },
    {
        "content": "<p>Oh! Well, I mean, it's on WSL?</p>",
        "id": 375314134,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689350125
    },
    {
        "content": "<p>But that was never a problem for lean before.</p>",
        "id": 375314182,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689350135
    },
    {
        "content": "<p>Is it possible I could spin up a gitpod VM or something - literally just to confirm that things work normally there?</p>",
        "id": 375314452,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689350184
    },
    {
        "content": "<p>And the project is on the Linux drive?</p>",
        "id": 375314606,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689350212
    },
    {
        "content": "<p>Yes.</p>",
        "id": 375314916,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689350270
    },
    {
        "content": "<p>That is where I do all my work from.</p>",
        "id": 375315096,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689350302
    },
    {
        "content": "<p><a href=\"http://gitpod.io/new/#https://github.com/leanprover-community/mathlib4\">gitpod.io/new/#https://github.com/leanprover-community/mathlib4</a></p>",
        "id": 375315256,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1689350338
    },
    {
        "content": "<p>That puts me in a mathlib4 directory - I should create my project outside that, right?</p>",
        "id": 375324640,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689352356
    },
    {
        "content": "<p>It's using as a dependency I want.</p>",
        "id": 375324665,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689352362
    },
    {
        "content": "<p>Sure yeah. One way is to create a github repo containing a new project depending on mathlib4</p>",
        "id": 375325027,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1689352451
    },
    {
        "content": "<p>If you test</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">time</span><span class=\"w\"> </span>lake<span class=\"w\"> </span>env<span class=\"w\"> </span>lean<span class=\"w\"> </span>--profile<span class=\"w\"> </span>lake-packages/mathlib/Mathlib.lean\n</code></pre></div>\n<p>and even that is slow, we know it's not your project but it must be your setup that's somehow misbehaving</p>",
        "id": 375326035,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689352719
    },
    {
        "content": "<p>If you can find the PID of the busy process (e.g. in <code>htop</code>), it might be interesting to dump a stacktrace of it using</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">gdb</span> <span class=\"bp\">-</span><span class=\"n\">batch</span> <span class=\"bp\">-</span><span class=\"n\">ex</span> <span class=\"n\">bt</span> <span class=\"bp\">-</span><span class=\"n\">p</span> <span class=\"bp\">&lt;</span><span class=\"n\">PID</span><span class=\"bp\">&gt;</span>\n</code></pre></div>",
        "id": 375326829,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689352913
    },
    {
        "content": "<p>I'll try that. Thank you for your patience.</p>",
        "id": 375326861,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689352920
    },
    {
        "content": "<p>For reference, running time lake env lean --profile Controlbits.lean but on the gitpod is having similar issues. Running that stacktrace now, as the command you just suggested (run in the project directory) is being slow.</p>",
        "id": 375327638,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353085
    },
    {
        "content": "<p>Incoming:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wrobson</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">verifying</span><span class=\"bp\">-</span><span class=\"n\">cmce</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">controlbits</span><span class=\"bp\">$</span> <span class=\"n\">gdb</span> <span class=\"bp\">-</span><span class=\"n\">batch</span> <span class=\"bp\">-</span><span class=\"n\">ex</span> <span class=\"n\">bt</span> <span class=\"bp\">-</span><span class=\"n\">p</span> <span class=\"mi\">30573</span>\n<span class=\"o\">[</span><span class=\"n\">Thread</span> <span class=\"n\">debugging</span> <span class=\"n\">using</span> <span class=\"n\">libthread_db</span> <span class=\"n\">enabled</span><span class=\"o\">]</span>\n<span class=\"n\">Using</span> <span class=\"n\">host</span> <span class=\"n\">libthread_db</span> <span class=\"n\">library</span> <span class=\"s2\">\"/lib/x86_64-linux-gnu/libthread_db.so.1\"</span><span class=\"bp\">.</span>\n<span class=\"mi\">0x00007f5de7937f26</span> <span class=\"k\">in</span> <span class=\"n\">l_Array_forInUnsafe_loop___at_Lean_importModules___spec__10</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">0</span>  <span class=\"mi\">0x00007f5de7937f26</span> <span class=\"k\">in</span> <span class=\"n\">l_Array_forInUnsafe_loop___at_Lean_importModules___spec__10</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">1</span>  <span class=\"mi\">0x00007f5de793a23c</span> <span class=\"k\">in</span> <span class=\"n\">l_Array_forInUnsafe_loop___at_Lean_importModules___spec__12</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">2</span>  <span class=\"mi\">0x00007f5de793bdf4</span> <span class=\"k\">in</span> <span class=\"n\">l_Lean_importModules___lambda__3</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">3</span>  <span class=\"mi\">0x00007f5de9afdb2f</span> <span class=\"k\">in</span> <span class=\"n\">lean_apply_2</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">4</span>  <span class=\"mi\">0x00007f5de9afcd7d</span> <span class=\"k\">in</span> <span class=\"n\">lean_apply_1</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">5</span>  <span class=\"mi\">0x00007f5de7944073</span> <span class=\"k\">in</span> <span class=\"n\">l_Lean_withImporting___rarg</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">6</span>  <span class=\"mi\">0x00007f5de793cd9c</span> <span class=\"k\">in</span> <span class=\"n\">l_Lean_importModules___lambda__4___boxed</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">7</span>  <span class=\"mi\">0x00007f5de9afdb2f</span> <span class=\"k\">in</span> <span class=\"n\">lean_apply_2</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">8</span>  <span class=\"mi\">0x00007f5de9afcd7d</span> <span class=\"k\">in</span> <span class=\"n\">lean_apply_1</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">9</span>  <span class=\"mi\">0x00007f5de88a028e</span> <span class=\"k\">in</span> <span class=\"n\">l_Lean_profileitIOUnsafe___rarg___lambda__1</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">10</span> <span class=\"mi\">0x00007f5de88a048f</span> <span class=\"k\">in</span> <span class=\"n\">l_Lean_profileitIOUnsafe___rarg___lambda__1___boxed</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">11</span> <span class=\"mi\">0x00007f5de9afcd69</span> <span class=\"k\">in</span> <span class=\"n\">lean_apply_1</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">12</span> <span class=\"mi\">0x00007f5de9a447f4</span> <span class=\"k\">in</span> <span class=\"n\">lean_profileit</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">13</span> <span class=\"mi\">0x00007f5de88a03b0</span> <span class=\"k\">in</span> <span class=\"n\">l_Lean_profileitIOUnsafe___rarg</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">14</span> <span class=\"mi\">0x00007f5de793cbf8</span> <span class=\"k\">in</span> <span class=\"n\">lean_import_modules</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">15</span> <span class=\"mi\">0x00007f5de861cbd5</span> <span class=\"k\">in</span> <span class=\"n\">l_Lean_Elab_processHeader</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">16</span> <span class=\"mi\">0x00007f5de8281201</span> <span class=\"k\">in</span> <span class=\"n\">lean_run_frontend</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">17</span> <span class=\"mi\">0x00007f5de99df68d</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">run_new_frontend</span><span class=\"o\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">basic_string</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"o\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">char_traits</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">allocator</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"bp\">&gt;</span> <span class=\"bp\">&gt;</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">options</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">basic_string</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"o\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">char_traits</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">allocator</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"bp\">&gt;</span> <span class=\"bp\">&gt;</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">name</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">unsigned</span> <span class=\"n\">int</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">optional</span><span class=\"bp\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">basic_string</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"o\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">char_traits</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">allocator</span><span class=\"bp\">&lt;</span><span class=\"n\">char</span><span class=\"bp\">&gt;</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">&gt;</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">18</span> <span class=\"mi\">0x00007f5de99e2208</span> <span class=\"k\">in</span> <span class=\"n\">lean_main</span> <span class=\"o\">()</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">wrobson</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/../lib/lean/libleanshared.so</span>\n<span class=\"bp\">#</span><span class=\"mi\">19</span> <span class=\"mi\">0x00007f5de6295083</span> <span class=\"k\">in</span> <span class=\"n\">__libc_start_main</span> <span class=\"o\">(</span><span class=\"n\">main</span><span class=\"bp\">=</span><span class=\"mi\">0x55f5bddce8b0</span> <span class=\"bp\">&lt;</span><span class=\"n\">main</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">argc</span><span class=\"bp\">=</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">argv</span><span class=\"bp\">=</span><span class=\"mi\">0x7ffe75fc6958</span><span class=\"o\">,</span> <span class=\"n\">init</span><span class=\"bp\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"n\">out</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">fini</span><span class=\"bp\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"n\">out</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">rtld_fini</span><span class=\"bp\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"n\">out</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">stack_end</span><span class=\"bp\">=</span><span class=\"mi\">0x7ffe75fc6948</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">../</span><span class=\"n\">csu</span><span class=\"bp\">/</span><span class=\"n\">libc</span><span class=\"bp\">-</span><span class=\"n\">start.c</span><span class=\"o\">:</span><span class=\"mi\">308</span>\n<span class=\"bp\">#</span><span class=\"mi\">20</span> <span class=\"mi\">0x000055f5bddce7e5</span> <span class=\"k\">in</span> <span class=\"n\">_start</span> <span class=\"o\">()</span>\n<span class=\"o\">[</span><span class=\"n\">Inferior</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">process</span> <span class=\"mi\">30573</span><span class=\"o\">)</span> <span class=\"n\">detached</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 375327702,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353102
    },
    {
        "content": "<p>Ok, at least that's confirmation that the import itself is slow. Which usually should not take more than a few seconds.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">env</span> <span class=\"n\">lean</span> <span class=\"c1\">--profile Mathlib.lean</span>\n<span class=\"n\">interpretation</span> <span class=\"n\">of</span> <span class=\"n\">Mathlib.Prelude.Rename.binportTag</span> <span class=\"n\">took</span> <span class=\"mi\">320</span><span class=\"n\">ms</span>\n<span class=\"n\">interpretation</span> <span class=\"n\">of</span> <span class=\"n\">Lean.mkStateFromImportedEntries._at.Mathlib.Prelude.Rename.initFn._</span><span class=\"bp\">@.</span><span class=\"n\">Mathlib.Mathport.Rename._hyg.251._spec_1</span> <span class=\"n\">took</span> <span class=\"mi\">412</span><span class=\"n\">ms</span>\n<span class=\"kn\">import</span> <span class=\"n\">took</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"n\">s</span>\n<span class=\"n\">cumulative</span> <span class=\"n\">profiling</span> <span class=\"n\">times</span><span class=\"o\">:</span>\n    <span class=\"n\">elaboration</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0252</span><span class=\"n\">ms</span>\n    <span class=\"kn\">import</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"n\">s</span>\n    <span class=\"n\">initialization</span> <span class=\"mi\">15</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"n\">ms</span>\n    <span class=\"n\">interpretation</span> <span class=\"mi\">964</span><span class=\"n\">ms</span>\n    <span class=\"n\">linting</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0255</span><span class=\"n\">ms</span>\n    <span class=\"n\">parsing</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">00132</span><span class=\"n\">ms</span>\n</code></pre></div>",
        "id": 375328577,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689353297
    },
    {
        "content": "<p>Running <code>lake env lean --profile lake-packages/mathlib/Mathlib.lean</code> on the gitpod is fine. So it's something on my local machine I guess.</p>",
        "id": 375329614,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353572
    },
    {
        "content": "<p>But I have no idea what.</p>",
        "id": 375329638,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353577
    },
    {
        "content": "<p>Running <code>lake env lean --profile Controlbits.lean</code> on the gitpod with this file doesn't finish though. So possibly also something is up with my file.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">ControlBits</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">bits</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Bool</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">ControlBits</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">myT</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">myFunkyThing</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ControlBits</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n<span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">k</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">k</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">single</span> <span class=\"o\">(</span><span class=\"n\">myT</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">Fin.succAbove</span> <span class=\"o\">(</span><span class=\"n\">myT</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">∘</span>  <span class=\"n\">k</span><span class=\"o\">)))</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">ControlBits</span>\n</code></pre></div>",
        "id": 375330270,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353720
    },
    {
        "content": "<p>Trying removing everything but <code>import Mathlib</code></p>",
        "id": 375330453,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689353760
    },
    {
        "content": "<p>I was hoping (as I was used to in lean 3) that the typechecker would quickly identify if there was any issues here. I was accustomed to using it as a quick tool to help me refine the correct expressions.</p>",
        "id": 375330529,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353766
    },
    {
        "content": "<p>That is how it works for most users, yes</p>",
        "id": 375330743,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689353830
    },
    {
        "content": "<p>Yep, that's fine in gitpod.</p>",
        "id": 375330887,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353869
    },
    {
        "content": "<p>Do <code>./lean-toolchain</code> and <code>./lake-packages/mathlib/lean-toolchain</code> match?</p>",
        "id": 375330920,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1689353878
    },
    {
        "content": "<p>Yes</p>",
        "id": 375331064,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353910
    },
    {
        "content": "<p><code>leanprover/lean4:nightly-2023-07-12</code></p>",
        "id": 375331092,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353917
    },
    {
        "content": "<p>I am a bit stupefied. I don't know if many other people have tried using mathlib4 as a dependency in WSL2 but there should basically be no difference in compiling Mathlib.lean vs compiling a file that does nothing but <code>import Mathlib</code></p>",
        "id": 375331112,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689353923
    },
    {
        "content": "<p>To be clear - neither of those are working in WSL2.</p>",
        "id": 375331226,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353944
    },
    {
        "content": "<p>And both of those are working in gitpod.</p>",
        "id": 375331253,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353952
    },
    {
        "content": "<p>So that is at least saner.</p>",
        "id": 375331275,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689353956
    },
    {
        "content": "<p>Ah, I missed that. I'm pretty sure other people have successfully worked on mathlib4 in WSL before though</p>",
        "id": 375331549,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689354019
    },
    {
        "content": "<p>There seem to be two separate things:<br>\na) something about the file I quote above is so broken that it just doesn't even fail to compile, but hangs.<br>\nb) My import of Mathlib locally is really slow/also I can't compiled Mathlib locally. But it was working at some point, and I didn't substantively change anything.</p>\n<p>From my point of view, actually, I made the edits to the file that broke it for a)... and thereafter was also experiencing b). Like the failure at a) caused some poisoning somehow.</p>",
        "id": 375331846,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689354083
    },
    {
        "content": "<p>(I think the error in that file, on some experimentation in github, is that I've used the wrong symbol for xor.)</p>",
        "id": 375332577,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689354245
    },
    {
        "content": "<p>Perhaps your .olean files somehow got corrupted. Does re-running <code>lake exe cache get</code> change anything?</p>",
        "id": 375356631,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689360031
    },
    {
        "content": "<p>Sorry for repeating myself, but <code>for f in ~/.cache/mathlib/*.gz; do gzip -t \"$f\" || rm \"$f\"; done</code> might be useful to delete corrupted files (which won't be redownloaded by <code>lake exe cache get</code>)</p>",
        "id": 375362701,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689361578
    },
    {
        "content": "<p>Or <code>lake exe cache clean!</code></p>",
        "id": 375364092,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689361900
    },
    {
        "content": "<p>(this will delete all cached files)</p>",
        "id": 375364115,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689361908
    },
    {
        "content": "<p>I did try these but can't hurt to do it again</p>",
        "id": 375984490,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689593214
    },
    {
        "content": "<p>Could I check what the right versions of lean/lake etc. should be? I'm almost wondering should I try and uninstall elan, lean, lake etc. from scratch.</p>",
        "id": 375993219,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689594882
    },
    {
        "content": "<p>But I don't know how to do that or indeed what the right install process now is. Advice there would be useful.</p>",
        "id": 375993473,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689594931
    },
    {
        "content": "<p>OK, so, I do seem to be able to use Mathlib locally OK. It seems the issue is in creating a project depeneding on it.</p>",
        "id": 376061020,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1689606654
    },
    {
        "content": "<p>Just had the same issue (I executed <code>lake exe cache get</code>, but cache wasn't getting used) and <code>lake exe cache clean!</code> fixed that.</p>",
        "id": 376269528,
        "sender_full_name": "Evgenia Karunus",
        "timestamp": 1689670289
    },
    {
        "content": "<p>On current master <code>lake exe cache get! &amp;&amp; lake build</code> is building everything from <code>Mathlib.Algebra.Star.Pi</code> onwards for me. Can anyone else confirm?</p>",
        "id": 376530473,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689740366
    },
    {
        "content": "<p>what OS?</p>",
        "id": 376534267,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689742784
    },
    {
        "content": "<p>works for me on x86 linux</p>",
        "id": 376534465,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689742884
    },
    {
        "content": "<p>try <code>rm -rf build</code> and rerun (if your build files are corrupt but the trace files are correct then leantar won't unpack / replace them)</p>",
        "id": 376534508,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689742915
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/5991\">#5991</a></p>",
        "id": 376536581,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689743869
    },
    {
        "content": "<p>For the last few days, I've been finding that <code>lake build</code> still has work to do, often lots of it, after I've run <code>lake exe cache get</code>, whereas previously it would return immediately if the branch had built successfully in CI.</p>\n<p>I thought something might be broken in my configuration, so I did a fresh install of Ubuntu 22.04 in a VM, ran:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">wget</span> <span class=\"bp\">-</span><span class=\"n\">q</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">raw.githubusercontent.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">/</span><span class=\"n\">master</span><span class=\"bp\">/</span><span class=\"n\">scripts</span><span class=\"bp\">/</span><span class=\"n\">install_debian.sh</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">bash</span> <span class=\"n\">install_debian.sh</span> <span class=\"bp\">;</span> <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">f</span> <span class=\"n\">install_debian.sh</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">source</span> <span class=\"bp\">~/.</span><span class=\"n\">profile</span>\n</code></pre></div>\n<p>and then</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4.git</span>\n<span class=\"n\">cd</span> <span class=\"n\">mathlib4</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">lake</span> <span class=\"n\">build</span>\n</code></pre></div>\n<p>It started building from file 47 of 3810 - <code>Std.Util.TermUnsafe</code></p>",
        "id": 386482856,
        "sender_full_name": "Christopher Hoskin",
        "timestamp": 1692656077
    },
    {
        "content": "<p>The usual cause of this is that you are using a different <code>lean-toolchain</code> than mathlib</p>",
        "id": 386483082,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692656217
    },
    {
        "content": "<p>try <code>cp lake-packages/mathlib/lean-toolchain lean-toolchain</code> and then <code>lake exe cache get; lake build</code> again</p>",
        "id": 386483297,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692656366
    },
    {
        "content": "<p>Wait I've seen lean spend 5 or so seconds compiling std files, and then it finishes quickly and everything works. What happens after 47/3810? Is it 1345/3810?</p>",
        "id": 386483474,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1692656481
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20broken.3F/near/386483082\">said</a>:</p>\n<blockquote>\n<p>The usual cause of this is that you are using a different <code>lean-toolchain</code> than mathlib</p>\n</blockquote>\n<p>All I have is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">ls</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span>\n<span class=\"n\">aesop</span>  <span class=\"n\">Cli</span>  <span class=\"n\">proofwidgets</span>  <span class=\"n\">Qq</span>  <span class=\"n\">std</span>\n</code></pre></div>\n<p>There is no <code>lake-packages/mathlib/lean-toolchain</code>?</p>",
        "id": 386483475,
        "sender_full_name": "Christopher Hoskin",
        "timestamp": 1692656482
    },
    {
        "content": "<p>oh I see, you are working on mathlib itself - in that case my advice doesn't apply</p>",
        "id": 386483514,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692656511
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20broken.3F/near/386483474\">said</a>:</p>\n<blockquote>\n<p>Wait I've seen lean spend 5 or so seconds compiling std files, and then it finishes quickly and everything works. What happens after 47/3810? Is it 1345/3810?</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"o\">[</span><span class=\"mi\">47</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.TermUnsafe</span>\n<span class=\"o\">[</span><span class=\"mi\">48</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.NameMapAttribute</span>\n<span class=\"o\">[</span><span class=\"mi\">49</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.OpenPrivate</span>\n<span class=\"o\">[</span><span class=\"mi\">50</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.List.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">51</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Ord</span>\n<span class=\"o\">[</span><span class=\"mi\">52</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.LibraryNote</span>\n<span class=\"o\">[</span><span class=\"mi\">53</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Command</span>\n<span class=\"o\">[</span><span class=\"mi\">54</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Unreachable</span>\n<span class=\"o\">[</span><span class=\"mi\">55</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.TagAttribute</span>\n<span class=\"o\">[</span><span class=\"mi\">56</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.ByCases</span>\n<span class=\"o\">[</span><span class=\"mi\">57</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.SeqFocus</span>\n<span class=\"o\">[</span><span class=\"mi\">58</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Name</span>\n<span class=\"o\">[</span><span class=\"mi\">59</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Position</span>\n<span class=\"bp\">^</span><span class=\"n\">C</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">waiting</span> <span class=\"n\">for</span> <span class=\"n\">prior</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">build</span><span class=\"bp\">`</span> <span class=\"n\">invocation</span> <span class=\"n\">to</span> <span class=\"n\">finish...</span> <span class=\"o\">(</span><span class=\"n\">remove</span> <span class=\"bp\">'./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lake.lock'</span> <span class=\"k\">if</span> <span class=\"n\">stuck</span><span class=\"o\">)</span>\n<span class=\"bp\">^</span><span class=\"n\">C</span>\n<span class=\"n\">cat</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lake.lock</span>\n<span class=\"mi\">3960</span>\n<span class=\"n\">ps</span> <span class=\"n\">aux</span> <span class=\"bp\">|</span> <span class=\"n\">grep</span> <span class=\"mi\">3960</span>\n<span class=\"n\">mans0954</span>    <span class=\"mi\">4486</span>  <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span>  <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>  <span class=\"mi\">17736</span>  <span class=\"mi\">2432</span> <span class=\"n\">pts</span><span class=\"bp\">/</span><span class=\"mi\">0</span>    <span class=\"n\">S</span><span class=\"bp\">+</span>   <span class=\"mi\">23</span><span class=\"o\">:</span><span class=\"mi\">22</span>   <span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"mi\">00</span> <span class=\"n\">grep</span> <span class=\"c1\">--color=auto 3960</span>\n<span class=\"n\">rm</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lake.lock</span>\n<span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"o\">[</span><span class=\"mi\">52</span><span class=\"bp\">/</span><span class=\"mi\">3661</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Data.Json</span>\n<span class=\"o\">[</span><span class=\"mi\">65</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Position</span>\n<span class=\"o\">[</span><span class=\"mi\">66</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Parser</span>\n<span class=\"o\">[</span><span class=\"mi\">67</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">68</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Tactic</span>\n<span class=\"o\">[</span><span class=\"mi\">69</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.RCases</span>\n<span class=\"o\">[</span><span class=\"mi\">70</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.WF</span>\n<span class=\"o\">[</span><span class=\"mi\">71</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.BEq</span>\n<span class=\"o\">[</span><span class=\"mi\">72</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Delaborator</span>\n<span class=\"o\">[</span><span class=\"mi\">73</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.Dvd</span>\n<span class=\"o\">[</span><span class=\"mi\">74</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.LCtx</span>\n<span class=\"o\">[</span><span class=\"mi\">75</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.ExtendedBinder</span>\n<span class=\"o\">[</span><span class=\"mi\">76</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.InfoTree</span>\n<span class=\"o\">[</span><span class=\"mi\">77</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Control.ForInStep.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">78</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.HaveI</span>\n<span class=\"o\">[</span><span class=\"mi\">79</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Option.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">80</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.DList</span>\n<span class=\"o\">[</span><span class=\"mi\">81</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.MLList.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">82</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Prod.Lex</span>\n<span class=\"o\">[</span><span class=\"mi\">83</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Expr</span>\n<span class=\"o\">[</span><span class=\"mi\">84</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.HashMap</span>\n<span class=\"o\">[</span><span class=\"mi\">85</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.HashSet</span>\n<span class=\"o\">[</span><span class=\"mi\">86</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.Expr</span>\n<span class=\"o\">[</span><span class=\"mi\">87</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.PersistentHashMap</span>\n<span class=\"o\">[</span><span class=\"mi\">88</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.Inaccessible</span>\n<span class=\"o\">[</span><span class=\"mi\">89</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.MonadBacktrack</span>\n<span class=\"o\">[</span><span class=\"mi\">90</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.PersistentHashSet</span>\n<span class=\"o\">[</span><span class=\"mi\">91</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Exact</span>\n<span class=\"o\">[</span><span class=\"mi\">92</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Instances</span>\n<span class=\"o\">[</span><span class=\"mi\">93</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Where</span>\n<span class=\"o\">[</span><span class=\"mi\">110</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.SetNotation</span>\n<span class=\"o\">[</span><span class=\"mi\">111</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Format</span>\n<span class=\"o\">[</span><span class=\"mi\">112</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.NoMatch</span>\n<span class=\"o\">[</span><span class=\"mi\">113</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.AttributeExtra</span>\n<span class=\"o\">[</span><span class=\"mi\">114</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.Pickle</span>\n<span class=\"o\">[</span><span class=\"mi\">115</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.CodeAction.Attr</span>\n<span class=\"o\">[</span><span class=\"mi\">116</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.GuardExpr</span>\n<span class=\"o\">[</span><span class=\"mi\">117</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.InstantiateMVars</span>\n<span class=\"o\">[</span><span class=\"mi\">118</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.Clear</span>\n<span class=\"o\">[</span><span class=\"mi\">119</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.AssertHypotheses</span>\n<span class=\"o\">[</span><span class=\"mi\">120</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.PrintDependents</span>\n<span class=\"o\">[</span><span class=\"mi\">121</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.CoeExt</span>\n<span class=\"o\">[</span><span class=\"mi\">122</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Int.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">123</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Nat.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">124</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Char</span>\n<span class=\"o\">[</span><span class=\"mi\">125</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Control.ForInStep.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">196</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Linter.UnreachableTactic</span>\n<span class=\"o\">[</span><span class=\"mi\">197</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">198</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.SavedState</span>\n<span class=\"o\">[</span><span class=\"mi\">199</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Ext.Attr</span>\n<span class=\"o\">[</span><span class=\"mi\">200</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Util.WhatsNew</span>\n<span class=\"o\">[</span><span class=\"mi\">201</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.PPWithUniv</span>\n<span class=\"o\">[</span><span class=\"mi\">202</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Mathport.Attributes</span>\n<span class=\"o\">[</span><span class=\"mi\">203</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.Alias</span>\n<span class=\"o\">[</span><span class=\"mi\">204</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Mathport.Rename</span>\n<span class=\"o\">[</span><span class=\"mi\">209</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Simpa</span>\n<span class=\"o\">[</span><span class=\"mi\">210</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Compat</span>\n<span class=\"o\">[</span><span class=\"mi\">214</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.CodeAction.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">215</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.NormCast.Ext</span>\n<span class=\"o\">[</span><span class=\"mi\">216</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Control.ForInStep</span>\n<span class=\"o\">[</span><span class=\"mi\">252</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.TryThis</span>\n<span class=\"o\">[</span><span class=\"mi\">253</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Init.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">254</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Linter.UnnecessarySeqFocus</span>\n<span class=\"o\">[</span><span class=\"mi\">255</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Frontend</span>\n<span class=\"o\">[</span><span class=\"mi\">256</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.Cast</span>\n<span class=\"o\">[</span><span class=\"mi\">263</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.Order</span>\n<span class=\"o\">[</span><span class=\"mi\">264</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">268</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Simp</span>\n<span class=\"o\">[</span><span class=\"mi\">270</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.CodeAction.Misc</span>\n<span class=\"o\">[</span><span class=\"mi\">271</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.NormCast.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">281</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.SimpTrace</span>\n<span class=\"o\">[</span><span class=\"mi\">282</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.ShowTerm</span>\n<span class=\"o\">[</span><span class=\"mi\">283</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Linter</span>\n<span class=\"o\">[</span><span class=\"mi\">284</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.GuardMsgs</span>\n<span class=\"o\">[</span><span class=\"mi\">288</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">289</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.Panel</span>\n<span class=\"o\">[</span><span class=\"mi\">290</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Data.Html</span>\n<span class=\"o\">[</span><span class=\"mi\">294</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.CodeAction</span>\n<span class=\"o\">[</span><span class=\"mi\">297</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.SqueezeScope</span>\n<span class=\"o\">[</span><span class=\"mi\">300</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Misc</span>\n<span class=\"o\">[</span><span class=\"mi\">301</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.TypeClass</span>\n<span class=\"o\">[</span><span class=\"mi\">302</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.PenroseDiagram</span>\n<span class=\"o\">[</span><span class=\"mi\">303</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Presentation.Expr</span>\n<span class=\"o\">[</span><span class=\"mi\">305</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.SelectionPanel</span>\n<span class=\"o\">[</span><span class=\"mi\">309</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint</span>\n<span class=\"o\">[</span><span class=\"mi\">311</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">315</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Logic</span>\n<span class=\"o\">[</span><span class=\"mi\">317</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Ext</span>\n<span class=\"o\">[</span><span class=\"mi\">323</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.PairingHeap</span>\n<span class=\"o\">[</span><span class=\"mi\">324</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Nat.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">325</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.LawfulMonad</span>\n<span class=\"o\">[</span><span class=\"mi\">329</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Congr</span>\n<span class=\"o\">[</span><span class=\"mi\">330</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">333</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Fin.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">338</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap.WF</span>\n<span class=\"o\">[</span><span class=\"mi\">339</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Nat.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">340</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Option.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">342</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">348</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap</span>\n<span class=\"o\">[</span><span class=\"mi\">349</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap.Alter</span>\n<span class=\"o\">[</span><span class=\"mi\">350</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.BinomialHeap.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">351</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.String.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">352</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Nat.Gcd</span>\n<span class=\"o\">[</span><span class=\"mi\">356</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Merge</span>\n<span class=\"o\">[</span><span class=\"mi\">357</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.List.Basic</span>\n<span class=\"bp\">^</span><span class=\"n\">C</span>\n</code></pre></div>",
        "id": 386483939,
        "sender_full_name": "Christopher Hoskin",
        "timestamp": 1692656772
    },
    {
        "content": "<p>those are <code>Compiling</code> not <code>Building</code>, that is expected</p>",
        "id": 386484301,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692657046
    },
    {
        "content": "<p>the cache does not include compilation artifacts (.o files) as those are architecture specific</p>",
        "id": 386484336,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692657075
    },
    {
        "content": "<p>the better question is why you need to compile all that, this normally only happens when building an executable</p>",
        "id": 386484422,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692657125
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20broken.3F/near/386484422\">said</a>:</p>\n<blockquote>\n<p>the better question is why you need to compile all that, this normally only happens when building an executable</p>\n</blockquote>\n<p>Oh right? What command should I run to check that there are no errors?</p>",
        "id": 386485371,
        "sender_full_name": "Christopher Hoskin",
        "timestamp": 1692657801
    },
    {
        "content": "<p>just let it run to completion</p>",
        "id": 386485571,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692657902
    },
    {
        "content": "<p>what are the final products toward the end?</p>",
        "id": 386485625,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692657935
    },
    {
        "content": "<p>It will not take 3 hours to run, don't worry</p>",
        "id": 386485641,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692657945
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"n\">time</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"o\">[</span><span class=\"mi\">47</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.TermUnsafe</span>\n<span class=\"o\">[</span><span class=\"mi\">48</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.NameMapAttribute</span>\n<span class=\"o\">[</span><span class=\"mi\">49</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.OpenPrivate</span>\n<span class=\"o\">[</span><span class=\"mi\">50</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.List.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">51</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Ord</span>\n<span class=\"o\">[</span><span class=\"mi\">52</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.LibraryNote</span>\n<span class=\"o\">[</span><span class=\"mi\">53</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Command</span>\n<span class=\"o\">[</span><span class=\"mi\">54</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Unreachable</span>\n<span class=\"o\">[</span><span class=\"mi\">55</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.TagAttribute</span>\n<span class=\"o\">[</span><span class=\"mi\">56</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.ByCases</span>\n<span class=\"o\">[</span><span class=\"mi\">57</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.SeqFocus</span>\n<span class=\"o\">[</span><span class=\"mi\">58</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Name</span>\n<span class=\"o\">[</span><span class=\"mi\">59</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Position</span>\n<span class=\"o\">[</span><span class=\"mi\">60</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Parser</span>\n<span class=\"o\">[</span><span class=\"mi\">61</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">62</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Tactic</span>\n<span class=\"o\">[</span><span class=\"mi\">63</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.RCases</span>\n<span class=\"o\">[</span><span class=\"mi\">64</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.WF</span>\n<span class=\"o\">[</span><span class=\"mi\">65</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.BEq</span>\n<span class=\"o\">[</span><span class=\"mi\">66</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Delaborator</span>\n<span class=\"o\">[</span><span class=\"mi\">67</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.Dvd</span>\n<span class=\"o\">[</span><span class=\"mi\">68</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.LCtx</span>\n<span class=\"o\">[</span><span class=\"mi\">69</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.ExtendedBinder</span>\n<span class=\"o\">[</span><span class=\"mi\">70</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.InfoTree</span>\n<span class=\"o\">[</span><span class=\"mi\">71</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Control.ForInStep.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">72</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.HaveI</span>\n<span class=\"o\">[</span><span class=\"mi\">73</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Option.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">74</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.DList</span>\n<span class=\"o\">[</span><span class=\"mi\">75</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.MLList.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">76</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Prod.Lex</span>\n<span class=\"o\">[</span><span class=\"mi\">77</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Expr</span>\n<span class=\"o\">[</span><span class=\"mi\">78</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.HashMap</span>\n<span class=\"o\">[</span><span class=\"mi\">79</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.HashSet</span>\n<span class=\"o\">[</span><span class=\"mi\">80</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.Expr</span>\n<span class=\"o\">[</span><span class=\"mi\">81</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.PersistentHashMap</span>\n<span class=\"o\">[</span><span class=\"mi\">82</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.Inaccessible</span>\n<span class=\"o\">[</span><span class=\"mi\">83</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.MonadBacktrack</span>\n<span class=\"o\">[</span><span class=\"mi\">84</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.PersistentHashSet</span>\n<span class=\"o\">[</span><span class=\"mi\">85</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Exact</span>\n<span class=\"o\">[</span><span class=\"mi\">86</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Instances</span>\n<span class=\"o\">[</span><span class=\"mi\">87</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Where</span>\n<span class=\"o\">[</span><span class=\"mi\">93</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Data.Json</span>\n<span class=\"o\">[</span><span class=\"mi\">110</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.SetNotation</span>\n<span class=\"o\">[</span><span class=\"mi\">111</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Format</span>\n<span class=\"o\">[</span><span class=\"mi\">112</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.NoMatch</span>\n<span class=\"o\">[</span><span class=\"mi\">113</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.AttributeExtra</span>\n<span class=\"o\">[</span><span class=\"mi\">114</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Util.Pickle</span>\n<span class=\"o\">[</span><span class=\"mi\">115</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.CodeAction.Attr</span>\n<span class=\"o\">[</span><span class=\"mi\">116</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.GuardExpr</span>\n<span class=\"o\">[</span><span class=\"mi\">117</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.InstantiateMVars</span>\n<span class=\"o\">[</span><span class=\"mi\">118</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.Clear</span>\n<span class=\"o\">[</span><span class=\"mi\">119</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.AssertHypotheses</span>\n<span class=\"o\">[</span><span class=\"mi\">120</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.PrintDependents</span>\n<span class=\"o\">[</span><span class=\"mi\">121</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.CoeExt</span>\n<span class=\"o\">[</span><span class=\"mi\">122</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Int.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">123</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Nat.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">124</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Char</span>\n<span class=\"o\">[</span><span class=\"mi\">125</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Control.ForInStep.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">197</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Linter.UnreachableTactic</span>\n<span class=\"o\">[</span><span class=\"mi\">198</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">199</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.SavedState</span>\n<span class=\"o\">[</span><span class=\"mi\">200</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Ext.Attr</span>\n<span class=\"o\">[</span><span class=\"mi\">201</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Util.WhatsNew</span>\n<span class=\"o\">[</span><span class=\"mi\">202</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.PPWithUniv</span>\n<span class=\"o\">[</span><span class=\"mi\">203</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Mathport.Attributes</span>\n<span class=\"o\">[</span><span class=\"mi\">204</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.Alias</span>\n<span class=\"o\">[</span><span class=\"mi\">205</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Mathport.Rename</span>\n<span class=\"o\">[</span><span class=\"mi\">209</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Compat</span>\n<span class=\"o\">[</span><span class=\"mi\">210</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Simpa</span>\n<span class=\"o\">[</span><span class=\"mi\">214</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.CodeAction.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">215</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.NormCast.Ext</span>\n<span class=\"o\">[</span><span class=\"mi\">216</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Control.ForInStep</span>\n<span class=\"o\">[</span><span class=\"mi\">252</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.TryThis</span>\n<span class=\"o\">[</span><span class=\"mi\">253</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Init.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">254</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Linter.UnnecessarySeqFocus</span>\n<span class=\"o\">[</span><span class=\"mi\">255</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Frontend</span>\n<span class=\"o\">[</span><span class=\"mi\">256</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.Cast</span>\n<span class=\"o\">[</span><span class=\"mi\">263</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">264</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.Order</span>\n<span class=\"o\">[</span><span class=\"mi\">268</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Simp</span>\n<span class=\"o\">[</span><span class=\"mi\">270</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.CodeAction.Misc</span>\n<span class=\"o\">[</span><span class=\"mi\">271</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.NormCast.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">281</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.SimpTrace</span>\n<span class=\"o\">[</span><span class=\"mi\">282</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.ShowTerm</span>\n<span class=\"o\">[</span><span class=\"mi\">283</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Linter</span>\n<span class=\"o\">[</span><span class=\"mi\">284</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.GuardMsgs</span>\n<span class=\"o\">[</span><span class=\"mi\">288</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">289</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.Panel</span>\n<span class=\"o\">[</span><span class=\"mi\">290</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Data.Html</span>\n<span class=\"o\">[</span><span class=\"mi\">294</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.CodeAction</span>\n<span class=\"o\">[</span><span class=\"mi\">297</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.SqueezeScope</span>\n<span class=\"o\">[</span><span class=\"mi\">300</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.Misc</span>\n<span class=\"o\">[</span><span class=\"mi\">301</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint.TypeClass</span>\n<span class=\"o\">[</span><span class=\"mi\">302</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.PenroseDiagram</span>\n<span class=\"o\">[</span><span class=\"mi\">303</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Presentation.Expr</span>\n<span class=\"o\">[</span><span class=\"mi\">305</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">ProofWidgets.Component.SelectionPanel</span>\n<span class=\"o\">[</span><span class=\"mi\">309</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Lint</span>\n<span class=\"o\">[</span><span class=\"mi\">311</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">315</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Logic</span>\n<span class=\"o\">[</span><span class=\"mi\">317</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Ext</span>\n<span class=\"o\">[</span><span class=\"mi\">323</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.PairingHeap</span>\n<span class=\"o\">[</span><span class=\"mi\">324</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Nat.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">325</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.LawfulMonad</span>\n<span class=\"o\">[</span><span class=\"mi\">329</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Tactic.Congr</span>\n<span class=\"o\">[</span><span class=\"mi\">330</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">333</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Fin.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">338</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap.WF</span>\n<span class=\"o\">[</span><span class=\"mi\">339</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Nat.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">340</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Option.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">342</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Init.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">348</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap</span>\n<span class=\"o\">[</span><span class=\"mi\">349</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap.Alter</span>\n<span class=\"o\">[</span><span class=\"mi\">350</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.BinomialHeap.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">351</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.String.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">352</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Nat.Gcd</span>\n<span class=\"o\">[</span><span class=\"mi\">356</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Merge</span>\n<span class=\"o\">[</span><span class=\"mi\">357</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.List.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">359</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Option.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">363</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Fin.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">364</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.BinomialHeap.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">366</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Int.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">372</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Lean.Meta</span>\n<span class=\"o\">[</span><span class=\"mi\">373</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Lean.Expr.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">374</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.AssocList</span>\n<span class=\"o\">[</span><span class=\"mi\">380</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.BinomialHeap</span>\n<span class=\"o\">[</span><span class=\"mi\">383</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Int.DivMod</span>\n<span class=\"o\">[</span><span class=\"mi\">384</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.DiscrTree</span>\n<span class=\"o\">[</span><span class=\"mi\">396</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Lean.Elab.Tactic.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">397</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.Relation.Symm</span>\n<span class=\"o\">[</span><span class=\"mi\">398</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.Relation.Rfl</span>\n<span class=\"o\">[</span><span class=\"mi\">399</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.Cases</span>\n<span class=\"o\">[</span><span class=\"mi\">401</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.List.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">404</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.HashMap.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">412</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.Relation.Trans</span>\n<span class=\"o\">[</span><span class=\"mi\">415</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Rat.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">417</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.RBMap.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">418</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Range.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">421</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Array.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">427</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.String.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">428</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Rat.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">429</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Classes.RatCast</span>\n<span class=\"o\">[</span><span class=\"mi\">439</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.HashMap.WF</span>\n<span class=\"o\">[</span><span class=\"mi\">440</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.String</span>\n<span class=\"o\">[</span><span class=\"mi\">441</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.Rat</span>\n<span class=\"o\">[</span><span class=\"mi\">448</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Data.HashMap</span>\n<span class=\"o\">[</span><span class=\"mi\">449</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std.Lean.Meta.UnusedNames</span>\n<span class=\"o\">[</span><span class=\"mi\">538</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Std</span>\n<span class=\"o\">[</span><span class=\"mi\">541</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">554</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Init.Logic</span>\n<span class=\"o\">[</span><span class=\"mi\">565</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Init.Align</span>\n<span class=\"o\">[</span><span class=\"mi\">576</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.ToLevel</span>\n<span class=\"o\">[</span><span class=\"mi\">580</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.DeriveToExpr</span>\n<span class=\"o\">[</span><span class=\"mi\">586</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Mathlib.Tactic.ToExpr</span>\n<span class=\"o\">[</span><span class=\"mi\">590</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">scripts.checkYaml</span>\n<span class=\"o\">[</span><span class=\"mi\">591</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">scripts.runLinter</span>\n<span class=\"o\">[</span><span class=\"mi\">594</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">scripts.checkYaml</span>\n<span class=\"o\">[</span><span class=\"mi\">595</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">scripts.runLinter</span>\n<span class=\"o\">[</span><span class=\"mi\">778</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">checkYaml</span>\n<span class=\"o\">[</span><span class=\"mi\">778</span><span class=\"bp\">/</span><span class=\"mi\">3810</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">runLinter</span>\n\n<span class=\"n\">real</span>    <span class=\"mi\">1</span><span class=\"n\">m21.224s</span>\n<span class=\"n\">user</span>    <span class=\"mi\">1</span><span class=\"n\">m1.064s</span>\n<span class=\"n\">sys</span> <span class=\"mi\">0</span><span class=\"n\">m5.662s</span>\n</code></pre></div>\n<p>Okay, that's not too bad - but it was taking 10s of minutes on one of my branches earlier in the week - but perhaps that was a separate problem.</p>",
        "id": 386488089,
        "sender_full_name": "Christopher Hoskin",
        "timestamp": 1692659355
    },
    {
        "content": "<p>oh crap, apparently <code>scripts.checkYaml</code> has unnecessarily added a dependency on all of <code>Std</code> transitively via <code>Mathlib.Tactic.Basic</code>, cc: <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span></p>",
        "id": 386489865,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692660285
    },
    {
        "content": "<p>Oops, I assumed the burden would be paid only by CI</p>",
        "id": 386490024,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692660363
    },
    {
        "content": "<p><code>runLinter</code> too I guess, via <code>Mathlib.Tactic.ToExpr -&gt; Mathlib.Tactic.DeriveToExpr -&gt; Mathlib.Tactic.ToLevel -&gt; Mathlib.Init.Align -&gt; Mathlib.Init.Logic -&gt; Mathlib.Tactic.Basic -&gt; Std</code></p>",
        "id": 386490059,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692660366
    },
    {
        "content": "<p>Align -&gt; Std seems like the bad link there</p>",
        "id": 386490180,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692660434
    },
    {
        "content": "<p>We could also remove the <code>@[default_target]</code> from checkYaml and runLinter (the other scripts are only built when necessary).</p>",
        "id": 386490706,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1692660751
    },
    {
        "content": "<p>I think that is reasonable for mathlib, although I think it is orthogonal to the issue of decreasing the compile dependencies of those targets</p>",
        "id": 386491642,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692661419
    },
    {
        "content": "<p>I think we might want to rethink our imports more generally so that non-tactic files get <code>Std</code> in bulk and init files and tactics import only what they need</p>",
        "id": 386491788,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692661504
    },
    {
        "content": "<p>Actually I think the <code>Mathlib.Tactic.ToLevel -&gt; Mathlib.Init.Align</code> was the mistaken one, I think someone was trying to get the <code>#align</code> command but that is supplied by <code>Mathlib.Mathport.Rename</code>, <code>Mathlib.Init.Align</code> is basically \"all of lean 3 core\"</p>",
        "id": 386492757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692662165
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6716\">#6716</a></p>",
        "id": 386493718,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692662775
    }
]