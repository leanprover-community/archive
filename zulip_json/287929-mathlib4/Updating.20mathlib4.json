[
    {
        "content": "<p>I have a project that uses a little bit of mathlib4.  When something I want to use gets added to mathlib4, I update the version in my project, and it <em>never</em> goes smoothly.</p>\n<p>My lakefile.lean file contains:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n</code></pre></div>\n<p>When I want to update mathlib4, I give the command <code>lake update</code> in the terminal.  Then I update my lean-toolchain file to match the lean-toolchain file in mathlib, and I restart Lean.  It starts building files, and usually at some point I get an error message.  I restart Lean again, or I quit VSCode and then reopen it, and the building process starts again.  Sometimes I get errors more than once.  Eventually it completes and everything is fine, so it's more of an annoyance than a serious problem.  But why do I keep getting errors?  Am I doing something wrong?</p>\n<p>Here's the most recent error I got:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Watchdog</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Order</span><span class=\"bp\">/</span><span class=\"n\">BoundedOrder.olean.tmp</span>\n<span class=\"o\">[</span><span class=\"n\">Error</span> <span class=\"bp\">-</span> <span class=\"mi\">9</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"mi\">21</span> <span class=\"n\">AM</span><span class=\"o\">]</span> <span class=\"n\">Client</span> <span class=\"n\">Lean</span> <span class=\"mi\">4</span><span class=\"o\">:</span> <span class=\"n\">connection</span> <span class=\"n\">to</span> <span class=\"n\">server</span> <span class=\"n\">is</span> <span class=\"n\">erroring.</span> <span class=\"n\">Shutting</span> <span class=\"n\">down</span> <span class=\"n\">server.</span>\n<span class=\"o\">[</span><span class=\"n\">Error</span> <span class=\"bp\">-</span> <span class=\"mi\">9</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"mi\">21</span> <span class=\"n\">AM</span><span class=\"o\">]</span> <span class=\"n\">Connection</span> <span class=\"n\">to</span> <span class=\"n\">server</span> <span class=\"n\">got</span> <span class=\"n\">closed.</span> <span class=\"n\">Server</span> <span class=\"n\">will</span> <span class=\"n\">not</span> <span class=\"n\">be</span> <span class=\"n\">restarted.</span>\n<span class=\"o\">[</span><span class=\"n\">Error</span> <span class=\"bp\">-</span> <span class=\"mi\">9</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"mi\">21</span> <span class=\"n\">AM</span><span class=\"o\">]</span> <span class=\"n\">Stopping</span> <span class=\"n\">server</span> <span class=\"n\">failed</span>\n  <span class=\"n\">Message</span><span class=\"o\">:</span> <span class=\"n\">Pending</span> <span class=\"n\">response</span> <span class=\"n\">rejected</span> <span class=\"n\">since</span> <span class=\"n\">connection</span> <span class=\"n\">got</span> <span class=\"n\">disposed</span>\n  <span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"mi\">32097</span>\n<span class=\"o\">[</span><span class=\"n\">Error</span> <span class=\"bp\">-</span> <span class=\"mi\">9</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"mi\">21</span> <span class=\"n\">AM</span><span class=\"o\">]</span> <span class=\"n\">Stopping</span> <span class=\"n\">server</span> <span class=\"n\">failed</span>\n  <span class=\"n\">Message</span><span class=\"o\">:</span> <span class=\"n\">Pending</span> <span class=\"n\">response</span> <span class=\"n\">rejected</span> <span class=\"n\">since</span> <span class=\"n\">connection</span> <span class=\"n\">got</span> <span class=\"n\">disposed</span>\n  <span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"mi\">32097</span>\n</code></pre></div>",
        "id": 340883557,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1678460033
    },
    {
        "content": "<p>This is looking more like a general Lake issue. I believe the <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a> stream is more appropriate for this discussion</p>",
        "id": 340884807,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678460324
    },
    {
        "content": "<p>There are issues with dependencies. <code>lake update</code> updates all the packages the project depends on, which may or may not be compatible. with each other and with the latest version of <code>mathlib</code>.</p>\n<p>Instead, I avoid <code>lake update</code> and try to update the dependencies for mathlib by hand. I do that by changing the version of <code>mathlib4</code> in my <code>lake-manifest.json</code> file to the latest commit, and then I go to the corresponding file in the mathlib4 repository, and cut-and-paste those into my <code>lake-manifest.json</code> file as well:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/master/lake-manifest.json\">https://github.com/leanprover-community/mathlib4/blob/master/lake-manifest.json</a></p>\n<p>Then I do <code>lake build</code>, and, I think, that usually works.</p>",
        "id": 340884911,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1678460351
    },
    {
        "content": "<p>When doing an update like that, I'd quit all vscode processes and build with <code>lake build</code> from the terminal - not sure if that would help with your issue</p>",
        "id": 340885052,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1678460389
    },
    {
        "content": "<p>I have been annoyed by these errors as well the few times I've used mathlib4 so far, <a href=\"https://github.com/leanprover/lean4/pull/2144\">https://github.com/leanprover/lean4/pull/2144</a> should help with that</p>",
        "id": 340894763,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1678462565
    },
    {
        "content": "<p>For <a href=\"http://lean.math.hhu.de\">lean.math.hhu.de</a>, which updates to the newest mathlib multiple times a day, I have now the following routine in a crontab:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">cd</span> <span class=\"n\">MyProject</span> <span class=\"bp\">&amp;&amp;</span>\n  <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">f</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">manifest.json</span> <span class=\"bp\">&amp;&amp;</span>\n  <span class=\"n\">lake</span> <span class=\"n\">update</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"bp\">#</span> <span class=\"n\">download</span> <span class=\"n\">latest</span> <span class=\"n\">mathlib</span>\n  <span class=\"n\">cp</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span> <span class=\"bp\">.</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"bp\">#</span> <span class=\"n\">copy</span> <span class=\"n\">lean</span> <span class=\"n\">version</span> <span class=\"n\">of</span> <span class=\"n\">mathlib</span>\n  <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span> <span class=\"bp\">&amp;&amp;</span>\n  <span class=\"n\">lake</span> <span class=\"n\">build</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>with this in the <code>lakefile.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4\"</span><span class=\"bp\">@</span><span class=\"s2\">\"master\"</span>\n</code></pre></div>\n<p>This has worked for me for the last couple months now.</p>",
        "id": 340897307,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1678463151
    },
    {
        "content": "<p>Jon's process should \"just work\" so long as mathlib is the only dependency explicitly listed in your lakefile.</p>\n<p><span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span>  Lake now looks at the dependencies of your dependencies to find compatible versions (e.g. what you're doing manually right now). Do you have mathlib's transitive dependencies in your lakefile?</p>",
        "id": 341216067,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678592371
    },
    {
        "content": "<p>My lakefile requires only <code>mathlib</code> and Marc Huisinga's <code>Cli</code>. Jon's process sounds good! I'll try that next time I update.</p>",
        "id": 341271634,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1678624017
    }
]