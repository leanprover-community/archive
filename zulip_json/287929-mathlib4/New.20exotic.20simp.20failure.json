[
    {
        "content": "<p>I have a new puzzle for simp debugging lovers. I tried to minimize but it's a very shy bug which very quickly disappear.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.Projection</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">Prod.snd_mk</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InnerProductSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">orthogonalProjection</span> <span class=\"o\">(</span><span class=\"n\">Submodule.span</span> <span class=\"n\">ℝ</span> <span class=\"o\">{(</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">})</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Prod.snd_mk</span><span class=\"o\">]</span> <span class=\"c1\">-- fails to make progress and to report it didn't make progress</span>\n  <span class=\"c1\">-- dsimp only [Prod.snd_mk] -- works</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 390531900,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694528879
    },
    {
        "content": "<p>The goal here is to get simp to transform <code>(t, v).snd</code> into <code>v</code>.</p>",
        "id": 390532052,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694528920
    },
    {
        "content": "<p>If you do it twice it doesn't make progress the second time</p>",
        "id": 390560350,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694537675
    },
    {
        "content": "<p>I think we're missing a congruence lemma for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=orthogonalProjection#doc\">docs#orthogonalProjection</a>, as it takes a dependently-typed argument</p>",
        "id": 390560654,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694537785
    },
    {
        "content": "<p>Or the auto-generated ones are broken</p>",
        "id": 390560691,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694537803
    },
    {
        "content": "<p>In 4 places of the expression, the following</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Prod.snd'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Prod.mk'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2905'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2904'</span> <span class=\"c1\">-- fvar</span>\n</code></pre></div>\n<p>was replaced by</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2904'</span> <span class=\"c1\">-- fvar</span>\n</code></pre></div>",
        "id": 390585468,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694547953
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>This is how the expression begins, until the first position where they differ</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">inspect</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">orthogonalProjection</span> <span class=\"o\">(</span><span class=\"n\">Submodule.span</span> <span class=\"n\">ℝ</span> <span class=\"o\">{(</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">})</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"bp\">'</span>\n\n<span class=\"bp\">'</span><span class=\"n\">Eq'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|-'</span><span class=\"n\">ContinuousLinearMap'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DivisionSemiring.toSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Semifield.toDivisionSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Field.toSemifield'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedField.toField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DivisionSemiring.toSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Semifield.toDivisionSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Field.toSemifield'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedField.toField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">RingHom.id'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Semiring.toNonAssocSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DivisionSemiring.toSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Semifield.toDivisionSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Field.toSemifield'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedField.toField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">UniformSpace.toTopologicalSpace'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">PseudoMetricSpace.toUniformSpace'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">SeminormedAddCommGroup.toPseudoMetricSpace'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toSeminormedAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">AddCommGroup.toAddCommMonoid'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Subtype'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-</span><span class=\"o\">(</span><span class=\"sc\">'x'</span><span class=\"o\">)</span> <span class=\"c1\">-- lam</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Membership.mem'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Submodule'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DivisionSemiring.toSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Semifield.toDivisionSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Field.toSemifield'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedField.toField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">AddCommGroup.toAddCommMonoid'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedSpace.toModule'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toSeminormedAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">InnerProductSpace.toNormedSpace'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2903'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">SetLike.instMembership'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Submodule'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DivisionSemiring.toSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Semifield.toDivisionSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Field.toSemifield'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedField.toField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">AddCommGroup.toAddCommMonoid'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedSpace.toModule'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n</code></pre></div>\n</div></div>",
        "id": 390585666,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694548059
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>and this did not fit in the previous message</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toSeminormedAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">InnerProductSpace.toNormedSpace'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2903'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Submodule.setLike'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DivisionSemiring.toSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Semifield.toDivisionSemiring'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Field.toSemifield'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedField.toField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">AddCommGroup.toAddCommMonoid'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedSpace.toModule'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toSeminormedAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">InnerProductSpace.toNormedSpace'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2903'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-</span><span class=\"sc\">'0'</span> <span class=\"c1\">-- bvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Submodule.span'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.semiring'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">AddCommGroup.toAddCommMonoid'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedSpace.toModule'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">DenselyNormedField.toNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">IsROrC.toDenselyNormedField'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">NormedAddCommGroup.toSeminormedAddCommGroup'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">InnerProductSpace.toNormedSpace'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Real.isROrC'</span> <span class=\"bp\">'</span><span class=\"o\">[]</span><span class=\"bp\">'</span> <span class=\"c1\">-- const</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2902'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2903'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Singleton.singleton'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Set'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">Set.instSingletonSet'</span> <span class=\"c1\">-- app</span>\n<span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|</span>   <span class=\"bp\">|-'</span><span class=\"n\">_uniq.2901'</span> <span class=\"c1\">-- fvar</span>\n</code></pre></div>\n</div></div>",
        "id": 390585687,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694548075
    },
    {
        "content": "<p>Interesting. So indeed <code>simp</code> does something, but no what we expected.</p>",
        "id": 390588275,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694549162
    },
    {
        "content": "<p>Here's a hint, the congruence lemma for <code>orthogonalProjection</code> needs to be a HEq</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">orthogonalProjection.congr</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">IsROrC</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">InnerProductSpace</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"n\">K'</span> <span class=\"o\">:</span> <span class=\"n\">Submodule</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"bp\">=</span> <span class=\"n\">K'</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">HasOrthogonalProjection</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">HasOrthogonalProjection</span> <span class=\"n\">K'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"bp\">;</span> <span class=\"n\">assumption</span>\n    <span class=\"n\">HEq</span> <span class=\"o\">(</span><span class=\"n\">orthogonalProjection</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">orthogonalProjection</span> <span class=\"n\">K'</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">congr</span><span class=\"bp\">!</span>\n</code></pre></div>",
        "id": 390588420,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1694549213
    },
    {
        "content": "<p>Rewriting <code>K</code> in <code>orthogonalProjection K</code> changes the type</p>",
        "id": 390588489,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1694549242
    },
    {
        "content": "<p><code>dsimp</code> can make progress because it's allowed to change <code>K</code> to something that's defeq</p>",
        "id": 390588536,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1694549262
    },
    {
        "content": "<p>Upon better inspection, it seems that <code>simp</code> simplified the product inside the <em>type</em> of the left-hand side of the equality, but failed to enter the lhs and perform the substitution there.</p>\n<p>Of the probably 22 places where the expression could change, <code>simp</code> seems to only \"see\" 4, all inside the type and none in the actual terms.</p>",
        "id": 390588582,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694549278
    },
    {
        "content": "<p>Here you can see the locations where the relevant mvar appears, the end of the implicit argument to <code>Eq.</code> and the beginning of the LHS.</p>\n<p><a href=\"/user_uploads/3121/WoQwPSEz2MHRHUyiNoNioZhT/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/WoQwPSEz2MHRHUyiNoNioZhT/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/WoQwPSEz2MHRHUyiNoNioZhT/image.png\"></a></div>",
        "id": 390589118,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694549506
    },
    {
        "content": "<p>Again this does not explain why the Lean 3 simplifier was happy to do its job and the Lean 4 simplifier isn't.</p>",
        "id": 390589234,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694549541
    },
    {
        "content": "<p>The diff highlights how the expression became, only the first 4 occurrences were rewritten.</p>",
        "id": 390589239,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694549542
    },
    {
        "content": "<p>No, this is just a text based description!</p>",
        "id": 390589278,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694549559
    },
    {
        "content": "<p>Sorry, it is bed-time!  Have fun with this puzzle!</p>",
        "id": 390589308,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694549575
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> When <code>simp</code> comes across \"fixed\" variables it will usually <code>dsimp</code> them, but I'm not sure it will always do so.</p>",
        "id": 390589329,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1694549585
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> It doesn't help simp make progress, but I noticed that <code>Prod.snd_mk</code> is specialized to <code>Type</code> instead of <code>Type*</code>!)</p>",
        "id": 390589461,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1694549643
    },
    {
        "content": "<p>Oops, that's a copy-paste mistake.</p>",
        "id": 390589556,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694549677
    },
    {
        "content": "<p>I'll fix it in my post above to avoid confusion.</p>",
        "id": 390589608,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694549702
    }
]