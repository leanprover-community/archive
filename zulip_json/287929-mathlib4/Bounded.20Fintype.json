[
    {
        "content": "<p>Hi, I am trying to express the set of k-tuples on a n-element ordered alphabet. I want to count stuff like \"how many tuples are strictly increasing?\". Can someone provide guidance on how concretely?<br>\nI got advice to represent it as functions from Fin k \\to \\iota, where \\iota is a Fintype with a linear order, but I am not sure how to correspond the n-element ordered alphabet with a Fintype.</p>",
        "id": 396801800,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1697420368
    },
    {
        "content": "<p>So is the question \"I have a linearly ordered Fintype, can someone produce an order isomorphism with fin n for some n\"? If not, can you post code which asks your actual question rather than asking it in words? Asking to fill in a sorry in a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> is the best way to ask questions here.</p>",
        "id": 396820705,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697430721
    },
    {
        "content": "<p>Yeah, it sounds like you could just use <code>Fin k → Fin n</code> here.</p>",
        "id": 396856882,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697447438
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/3fgTkTC9Ha-0HnbIOhy_uGp7/A0AC44F5-4AEE-4215-8D53-D6A26397256A.png\">A0AC44F5-4AEE-4215-8D53-D6A26397256A.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/3fgTkTC9Ha-0HnbIOhy_uGp7/A0AC44F5-4AEE-4215-8D53-D6A26397256A.png\" title=\"A0AC44F5-4AEE-4215-8D53-D6A26397256A.png\"><img src=\"/user_uploads/3121/3fgTkTC9Ha-0HnbIOhy_uGp7/A0AC44F5-4AEE-4215-8D53-D6A26397256A.png\"></a></div>",
        "id": 396866736,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1697450776
    },
    {
        "content": "<p>Here it is: the number of 3-tuple of alphabets such that the final one is Z and they’re strictly increasing</p>",
        "id": 396866783,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1697450803
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Bounded.20Fintype/near/396856882\">said</a>:</p>\n<blockquote>\n<p>Yeah, it sounds like you could just use <code>Fin k → Fin n</code> here.</p>\n</blockquote>\n<p>I assume I add a LinearOrder to the fin n too?</p>",
        "id": 396866872,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1697450836
    },
    {
        "content": "<p>No, <code>Fin n</code> already has one</p>",
        "id": 396867103,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697450925
    },
    {
        "content": "<p>I see, okay thanks!</p>",
        "id": 396869250,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1697451448
    },
    {
        "content": "<p>I think this is what Bhavik recommended me too (the original suggestion) but I misunderstood it</p>",
        "id": 396869479,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1697451491
    }
]