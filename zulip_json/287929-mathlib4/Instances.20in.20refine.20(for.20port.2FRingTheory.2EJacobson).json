[
    {
        "content": "<p>I am trying to finish to port that file written in Lean 3 by <span class=\"user-mention\" data-user-id=\"319772\">@Devon Tuma</span> <br>\nI have one question about instances as arguments.</p>\n<p>Some statements have arguments of the form <code>(P : Ideal R) [hP : IsMaximal P]</code>, but it seems that Lean 3 and Lean 4 behave differently, in so that Lean 4 blocks if the instance <code>hP</code> cannot be found, while Lean 3, if it finds <code>P</code> seems to be capable of creating the goal <code>IsMaximal P</code>.</p>\n<p>Am I right ? If yes, how to circumvent this issue ?</p>\n<p>One option would be to change the arguments formats to <code>{P : Ideal R} (hP : IsMaximal P)</code>.</p>",
        "id": 371782976,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1688320165
    },
    {
        "content": "<p>Doing <code>refine' @foo _ _ _</code> should still work.</p>",
        "id": 371799582,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688326405
    },
    {
        "content": "<p>But I agree it would be nice if <code>refine</code> asks for instances that is not able to find, at least if they're <code>Prop</code> valued.</p>",
        "id": 371799760,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688326474
    },
    {
        "content": "<p>You might need to put <code>(_)</code> in place of <code>_</code> for the instance argument</p>",
        "id": 371800636,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688326896
    },
    {
        "content": "<p>You can also use <code>apply (config := {allowSynthFailures := true})</code>.</p>",
        "id": 372207334,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688455826
    }
]