[
    {
        "content": "<p>Consider the following mwe from <a href=\"https://github.com/leanprover-community/mathlib4/pull/1878\">mathlib4#1878</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Hom.Aut</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">H</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[ext]</span>\n<span class=\"kd\">structure</span> <span class=\"n\">SemidirectProduct</span> <span class=\"o\">(</span><span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">→*</span> <span class=\"n\">MulAut</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">left</span> <span class=\"o\">:</span> <span class=\"n\">N</span>\n  <span class=\"n\">right</span> <span class=\"o\">:</span> <span class=\"n\">G</span>\n  <span class=\"n\">deriving</span> <span class=\"n\">DecidableEq</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Group</span> <span class=\"o\">(</span><span class=\"n\">SemidirectProduct</span> <span class=\"n\">G</span> <span class=\"n\">N</span> <span class=\"n\">φ</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">⟩</span>\n  <span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">a.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">a.2</span> <span class=\"n\">b.1</span><span class=\"o\">,</span> <span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"n\">b.2</span><span class=\"o\">⟩</span>\n  <span class=\"n\">inv</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">φ</span> <span class=\"n\">x.2</span><span class=\"bp\">⁻¹</span> <span class=\"n\">x.1</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">x.2</span><span class=\"bp\">⁻¹</span><span class=\"o\">⟩</span>\n  <span class=\"n\">mul_assoc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">SemidirectProduct.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">a.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">a.2</span> <span class=\"n\">b.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"o\">(</span><span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"n\">b.2</span><span class=\"o\">)</span> <span class=\"n\">c.1</span> <span class=\"bp\">=</span> <span class=\"n\">a.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">a.2</span> <span class=\"o\">(</span><span class=\"n\">b.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">b.2</span> <span class=\"n\">c.1</span><span class=\"o\">)</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">])</span>\n    <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"n\">b.2</span> <span class=\"bp\">*</span> <span class=\"n\">c.2</span> <span class=\"bp\">=</span> <span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b.2</span> <span class=\"bp\">*</span> <span class=\"n\">c.2</span><span class=\"o\">)</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">])</span>\n  <span class=\"n\">one_mul</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">SemidirectProduct.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"mi\">1</span> <span class=\"n\">a.1</span> <span class=\"bp\">=</span> <span class=\"n\">a.1</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">one_mul</span> <span class=\"n\">a.2</span><span class=\"o\">)</span>\n  <span class=\"n\">mul_one</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">SemidirectProduct.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">a.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">a.2</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">a.1</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mul_one</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n  <span class=\"n\">mul_left_inv</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">⟩</span> <span class=\"bp\">↦</span> <span class=\"n\">SemidirectProduct.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">φ</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mul_left_inv</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>To prove <code>mul_assoc</code> (and the other following properties), I did not find any better way  than to state the required equality and proved it. Indeed, after doing <code>refine SemidirectProduct.ext _ _ ?_ ?_</code>, I find myself with the two goals: <br>\n<code>(a * b * c).left = (a * (b * c)).left</code><br>\n and <br>\n<code>(a * b * c).right = (a * (b * c)).right</code><br>\nbut I haven't found how to unfold these expressions...</p>\n<p>I am missing something? There must be an easier to do that...</p>",
        "id": 324052205,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1674826580
    },
    {
        "content": "<p>You can do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Hom.Aut</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">H</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[ext]</span>\n<span class=\"kd\">structure</span> <span class=\"n\">SemidirectProduct</span> <span class=\"o\">(</span><span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">→*</span> <span class=\"n\">MulAut</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">left</span> <span class=\"o\">:</span> <span class=\"n\">N</span>\n  <span class=\"n\">right</span> <span class=\"o\">:</span> <span class=\"n\">G</span>\n  <span class=\"n\">deriving</span> <span class=\"n\">DecidableEq</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Mul</span> <span class=\"o\">(</span><span class=\"n\">SemidirectProduct</span> <span class=\"n\">G</span> <span class=\"n\">N</span> <span class=\"n\">φ</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">a.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">a.2</span> <span class=\"n\">b.1</span><span class=\"o\">,</span> <span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"n\">b.2</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_def</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">SemidirectProduct</span> <span class=\"n\">G</span> <span class=\"n\">N</span> <span class=\"n\">φ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">⟨</span><span class=\"n\">a.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">a.2</span> <span class=\"n\">b.1</span><span class=\"o\">,</span> <span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"n\">b.2</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Group</span> <span class=\"o\">(</span><span class=\"n\">SemidirectProduct</span> <span class=\"n\">G</span> <span class=\"n\">N</span> <span class=\"n\">φ</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">⟩</span>\n  <span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">a.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">a.2</span> <span class=\"n\">b.1</span><span class=\"o\">,</span> <span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"n\">b.2</span><span class=\"o\">⟩</span>\n  <span class=\"n\">inv</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">φ</span> <span class=\"n\">x.2</span><span class=\"bp\">⁻¹</span> <span class=\"n\">x.1</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">x.2</span><span class=\"bp\">⁻¹</span><span class=\"o\">⟩</span>\n  <span class=\"n\">mul_assoc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">SemidirectProduct.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_def</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">mul_assoc</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"n\">b.2</span> <span class=\"bp\">*</span> <span class=\"n\">c.2</span> <span class=\"bp\">=</span> <span class=\"n\">a.2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b.2</span> <span class=\"bp\">*</span> <span class=\"n\">c.2</span><span class=\"o\">)</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">])</span>\n  <span class=\"n\">one_mul</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">SemidirectProduct.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"mi\">1</span> <span class=\"n\">a.1</span> <span class=\"bp\">=</span> <span class=\"n\">a.1</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">one_mul</span> <span class=\"n\">a.2</span><span class=\"o\">)</span>\n  <span class=\"n\">mul_one</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">SemidirectProduct.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">a.1</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">a.2</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">a.1</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mul_one</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n  <span class=\"n\">mul_left_inv</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">⟩</span> <span class=\"bp\">↦</span> <span class=\"n\">SemidirectProduct.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">φ</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">φ</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mul_left_inv</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 324053068,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674826808
    },
    {
        "content": "<p>So <code>mul_def</code> is what I was missing. Thanks!</p>",
        "id": 324053248,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1674826858
    },
    {
        "content": "<p>Oh, and remove <code>mul a b := ...</code> line in the <code>Group</code> instance (though it works like this)</p>",
        "id": 324053517,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674826928
    },
    {
        "content": "<p>Oh, I just needed to read your answer more carefully! Thanks</p>",
        "id": 324054443,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1674827163
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"488648\">Xavier Roblot</span> has marked this topic as resolved.</p>",
        "id": 324056097,
        "sender_full_name": "Notification Bot",
        "timestamp": 1674827585
    }
]