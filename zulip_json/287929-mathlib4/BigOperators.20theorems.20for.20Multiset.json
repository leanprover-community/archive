[
    {
        "content": "<p>Do we want to systematically create <code>Multiset</code> versions of theorems from this file?<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Data/List/BigOperators/Basic.lean\">https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Data/List/BigOperators/Basic.lean</a><br>\nOtherwise, I'll PR only the one I need for my VCSP.</p>",
        "id": 399967823,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1698939067
    },
    {
        "content": "<p>I would expect we already have many of them</p>",
        "id": 399970934,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698939965
    },
    {
        "content": "<p>There are a lot of weird theorems in that file due to multiplication not being commutative, which isn't allowed for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Multiset.prod#doc\">docs#Multiset.prod</a></p>",
        "id": 399971101,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698940008
    },
    {
        "content": "<p>(it is for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Multiset.nonCommProd#doc\">docs#Multiset.nonCommProd</a> though...)</p>",
        "id": 399971156,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698940027
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/BigOperators.20theorems.20for.20Multiset/near/399970934\">said</a>:</p>\n<blockquote>\n<p>I would expect we already have many of them</p>\n</blockquote>\n<p>Which file(s) do you recommend checking?</p>",
        "id": 399982122,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1698943196
    },
    {
        "content": "<p>Loogle?</p>",
        "id": 399982195,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698943209
    },
    {
        "content": "<p>Back to my original question: Do we want to systematically add all those that can be proved for <code>Multiset</code> but are not in mathlib yet? Or should I just add the one I need now?</p>",
        "id": 399982458,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1698943301
    },
    {
        "content": "<p>Adding just the one you need now (and the obvious variants of it) is fine, and shouldn't be held up by doing the whole file</p>",
        "id": 399984468,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698943940
    },
    {
        "content": "<p>But it <em>might</em> also be a good idea to do the whole file after you're unblocked</p>",
        "id": 399984508,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698943957
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8127\">#8127</a></p>",
        "id": 399990016,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1698945832
    },
    {
        "content": "<p>I think that, before we add the <code>Multiset</code> versions, we should address the inconsistencies between the <code>List</code> versions and the <code>Finset</code> versions. See my comment here:<br>\n<a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Multiset.2Esum_lt_sum/near/400185099\">https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Multiset.2Esum_lt_sum/near/400185099</a></p>",
        "id": 400186175,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1699035919
    }
]