[
    {
        "content": "<p>I'm noticing many errors when executing <code>lake exe cache get!</code> in the last few days.<br>\nFor example <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/4433007937/jobs/7777638232\">here</a> the CI fails with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">1749</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">OpenSSL</span> <span class=\"n\">SSL_read</span><span class=\"o\">:</span> <span class=\"n\">Connection</span> <span class=\"n\">reset</span> <span class=\"kd\">by</span> <span class=\"n\">peer</span><span class=\"o\">,</span> <span class=\"n\">errno</span> <span class=\"mi\">104</span>\n<span class=\"n\">OpenSSL</span> <span class=\"n\">SSL_read</span><span class=\"o\">:</span> <span class=\"n\">Connection</span> <span class=\"n\">reset</span> <span class=\"kd\">by</span> <span class=\"n\">peer</span><span class=\"o\">,</span> <span class=\"n\">errno</span> <span class=\"mi\">104</span>\n<span class=\"mi\">2</span> <span class=\"n\">download</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">failed</span>\n</code></pre></div>\n<p>which might just be a connection hiccup.</p>",
        "id": 342312256,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1678973521
    },
    {
        "content": "<p>I also got this one locally (on Windows):</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">Floris@MSI MINGW64 /d/projects/mathlib4b ((094cafa95...))</span>\n<span class=\"gp\">$ </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\n<span class=\"go\">error: &gt; git fetch origin    # in directory .\\lake-packages\\std</span>\n<span class=\"go\">error: stderr:</span>\n<span class=\"go\">error: cannot lock ref 'refs/remotes/origin/main': is at d4107bc2bd28bc70e8327578c16acb904d2bcfd0 but expected 7d37ab32aac2004fa32e1df5b38d878c2301cd71</span>\n<span class=\"go\">From https://github.com/leanprover/std4</span>\n<span class=\"go\"> ! 7d37ab3..d4107bc  main       -&gt; origin/main  (unable to update local ref)</span>\n<span class=\"go\">error: external command `git` exited with code 1</span>\n</code></pre></div>\n<p>and then all future attempts give</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">Floris@MSI MINGW64 /d/projects/mathlib4b (kmill_congr_fallback)</span>\n<span class=\"gp\">$ </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\n<span class=\"go\">info: updating .\\lake-packages\\Qq to revision cc915afc9526e904a7b61f660d330170f9d60dd7</span>\n<span class=\"go\">error: &gt; git checkout --detach cc915afc9526e904a7b61f660d330170f9d60dd7    # in directory .\\lake-packages\\Qq</span>\n<span class=\"go\">error: stderr:</span>\n<span class=\"go\">fatal: Unable to create 'D:/projects/mathlib4b/lake-packages/Qq/.git/index.lock': File exists.</span>\n\n<span class=\"go\">Another git process seems to be running in this repository, e.g.</span>\n<span class=\"go\">an editor opened by 'git commit'. Please make sure all processes</span>\n<span class=\"go\">are terminated then try again. If it still fails, a git process</span>\n<span class=\"go\">may have crashed in this repository earlier:</span>\n<span class=\"go\">remove the file manually to continue.</span>\n<span class=\"go\">error: external command `git` exited with code 128</span>\n</code></pre></div>",
        "id": 342312340,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1678973530
    },
    {
        "content": "<p>This was easily fixed, but it looks like a bug?</p>",
        "id": 342312706,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1678973607
    },
    {
        "content": "<p>Are you running parallel processes? Is your VS Code open while you call <code>cache</code>?</p>",
        "id": 342322060,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678975687
    },
    {
        "content": "<p>Oh, upon reflection is was probably VS Code. I did have VS Code open, but only in a different project, so I thought it wouldn't interfere. However, both these projects were different worktrees of the same git repository, so the VS Code instance probably was still the thing interfering.</p>",
        "id": 342342424,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1678979417
    },
    {
        "content": "<p>At LFTCM this morning we have encountered at least two people for whom we could not get the cache to work. Both users are Windows 11 users and with third-party antivirus software. We observed two problems:</p>\n<ol>\n<li>It was necessary to disable the antivirus software to get <code>lake exe cache get</code> to run.</li>\n<li>Even after disabling antivirus and apparently getting <code>lake exe cache get</code> to run successfully, Lean does not seem to find the cache and wants to compile everything.</li>\n</ol>",
        "id": 388953502,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1693822278
    },
    {
        "content": "<p>Has this been observed before? The users are surviving on Gitpod for now but obviously this is not a good situation.</p>",
        "id": 388953600,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1693822311
    },
    {
        "content": "<p>It might be helpful to know the error messages when running <code>lake exe cache get</code> with the antivirus enabled.</p>",
        "id": 388961316,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693824507
    },
    {
        "content": "<p>Similarly, showing us the actual output from <code>lake exe cache get</code> and <code>lake build</code> might be helpful?</p>",
        "id": 388961490,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693824586
    },
    {
        "content": "<p>Reagrding 1; I think the error code was 35; though I don't have the message to hand. Essentially, curl is complaining that someone MiTM'd its connection, which is correct; the antivirus did</p>",
        "id": 388978744,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693830163
    },
    {
        "content": "<p>There might not exist a reasonable fix to such issues. I assume we're not talking about Microsoft's AV?</p>",
        "id": 388979093,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1693830280
    },
    {
        "content": "<p>No, the two that caused trouble were AVG and Kaspersky</p>",
        "id": 388979416,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693830393
    },
    {
        "content": "<p>There was another user who had the Microsoft AV using up half their CPU</p>",
        "id": 388979468,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693830408
    },
    {
        "content": "<p>The error code was \"curl: (35) schannel: next InitializeSecurityContext failed: Unknown error (0x80092012) - The revocation function was unable to check revocation for the certificate\"</p>",
        "id": 388979511,
        "sender_full_name": "Malthe Sporring",
        "timestamp": 1693830425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/388979468\">said</a>:</p>\n<blockquote>\n<p>There was another user who had the Microsoft AV using up half their CPU (I think I personally had this too)</p>\n</blockquote>\n<p>We told it to ignore the operation of the <code>lean.exe</code> and that seemed to quieten things down, though ultimately their disk speed seemed to be throttling Lean so much to be unusable</p>",
        "id": 388979668,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693830474
    },
    {
        "content": "<p>Although I don't seem able to recreate it. I get \"No files to download\", but still Visual Studio is insisting on rebuilding everything.</p>",
        "id": 388979744,
        "sender_full_name": "Malthe Sporring",
        "timestamp": 1693830490
    },
    {
        "content": "<p>You can do <code>lean exe cache get!</code> to force it to restart from scratch</p>",
        "id": 388979802,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693830509
    },
    {
        "content": "<p>(and throw away your previous cache)</p>",
        "id": 388979819,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693830514
    },
    {
        "content": "<p>That returns \"Expected exactly one file name\"</p>",
        "id": 388980017,
        "sender_full_name": "Malthe Sporring",
        "timestamp": 1693830588
    },
    {
        "content": "<p><code>lake</code> not <code>lean</code>:)</p>",
        "id": 388980833,
        "sender_full_name": "Malthe Sporring",
        "timestamp": 1693830849
    },
    {
        "content": "<p>That replicates it. I now get a constant stream of <code>schannel: next InitializeSecurityContext failed (...)</code></p>",
        "id": 388981909,
        "sender_full_name": "Malthe Sporring",
        "timestamp": 1693831201
    },
    {
        "content": "<p>For Kaspersky, you can disable the MiTM attempts (a.k.a. \"encrypted connection scanning\") following these instructions: <a href=\"https://support.kaspersky.com/KESWin/11.6.0/en-US/175124.htm\">https://support.kaspersky.com/KESWin/11.6.0/en-US/175124.htm</a>. Similarly, for AVG, you can disable HTTPS scanning following the instructions at <a href=\"https://support.avg.com/SupportArticleView?l=en&amp;urlName=Use-AVG-Antivirus-HTTPS-scan&amp;supportType=home\">https://support.avg.com/SupportArticleView?l=en&amp;urlName=Use-AVG-Antivirus-HTTPS-scan&amp;supportType=home</a>.</p>",
        "id": 389019448,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1693842627
    },
    {
        "content": "<p>I'm trying to get cache on my Windows machine for my project <a href=\"https://github.com/YaelDillies/LeanCamCombi\">LeanCamCombi</a> but <code>lake exe cache get</code> keeps on failing:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4.git</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">gebner</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">JLimperg</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">mhuisi</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli.git</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Cli</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">EdAyers</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Downloading</span> <span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">v0.0.13</span><span class=\"bp\">/</span><span class=\"n\">windows</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">tar.gz</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Unpacking</span> <span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">v0.0.13</span><span class=\"bp\">/</span><span class=\"n\">windows</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">tar.gz</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Cli</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Ya</span><span class=\"bp\">Ù</span><span class=\"n\">l</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.0.0\\bin\\lean.exe -Dpp.unicode.fun=true -DautoImplicit=false -DrelaxedAutoImplicit=false .\\lake-packages\\mathlib\\.\\.\\Cache\\IO.lean -R .\\lake-packages\\mathlib\\.\\. -o .\\lake-packages\\mathlib\\build\\lib\\Cache\\IO.olean -i .\\lake-packages\\mathlib\\build\\lib\\Cache\\IO.ilean -c .\\lake-packages\\mathlib\\build\\ir\\Cache\\IO.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">IO.lean</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Init'</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">IO.lean</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">expected</span> <span class=\"sc\">')'</span><span class=\"o\">,</span> <span class=\"sc\">','</span> <span class=\"n\">or</span> <span class=\"sc\">':'</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">IO.lean</span><span class=\"o\">:</span><span class=\"mi\">24</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">expected</span> <span class=\"bp\">'=&gt;'</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">IO.lean</span><span class=\"o\">:</span><span class=\"mi\">29</span><span class=\"o\">:</span><span class=\"mi\">23</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">UInt64'</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">IO.lean</span><span class=\"o\">:</span><span class=\"mi\">29</span><span class=\"o\">:</span><span class=\"mi\">23</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kd\">constant</span> <span class=\"bp\">'</span><span class=\"n\">sorryAx'</span>\n</code></pre></div>",
        "id": 390277027,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694427014
    },
    {
        "content": "<p>It's as if <code>lake exe cache get</code> ran on the wrong version of Lean somehow. Does anyone have a clue?</p>",
        "id": 390277116,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694427056
    },
    {
        "content": "<p>It seems to be working for me on my Windows 10 machine with a fresh clone, so I can't reproduce the error :(</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Lake output</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"PowerShell\"><pre><span></span><code><span class=\"n\">Windows</span> <span class=\"n\">PowerShell</span>\n<span class=\"n\">Copyright</span> <span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span> <span class=\"n\">Microsoft</span> <span class=\"n\">Corporation</span><span class=\"p\">.</span> <span class=\"n\">All</span> <span class=\"n\">rights</span> <span class=\"n\">reserved</span><span class=\"p\">.</span>\n\n<span class=\"k\">Try</span> <span class=\"n\">the</span> <span class=\"n\">new</span> <span class=\"n\">cross-platform</span> <span class=\"n\">PowerShell</span> <span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">aka</span><span class=\"p\">.</span><span class=\"n\">ms</span><span class=\"p\">/</span><span class=\"n\">pscore6</span>\n\n<span class=\"n\">Loading</span> <span class=\"n\">personal</span> <span class=\"n\">and</span> <span class=\"n\">system</span> <span class=\"n\">profiles</span> <span class=\"n\">took</span> <span class=\"n\">2271ms</span><span class=\"p\">.</span>\n<span class=\"n\">skywi</span><span class=\"nv\">@DESKTOP</span><span class=\"n\">-K15RNOG</span> <span class=\"err\"></span> <span class=\"p\">~</span> <span class=\"err\"></span>                                                                                    <span class=\"p\">[</span><span class=\"n\">11</span><span class=\"p\">:</span><span class=\"n\">08</span><span class=\"p\">]</span>\n<span class=\"err\">❯</span> <span class=\"nb\">cd </span><span class=\"n\">E</span><span class=\"p\">:/</span><span class=\"n\">code</span>\n<span class=\"n\">skywi</span><span class=\"nv\">@DESKTOP</span><span class=\"n\">-K15RNOG</span> <span class=\"err\"></span> <span class=\"n\">E</span><span class=\"p\">:\\</span><span class=\"n\">code</span> <span class=\"err\"></span>                                                                              <span class=\"p\">[</span><span class=\"n\">11</span><span class=\"p\">:</span><span class=\"n\">08</span><span class=\"p\">]</span>\n<span class=\"err\">❯</span> <span class=\"n\">gh</span> <span class=\"n\">repo</span> <span class=\"n\">clone</span> <span class=\"n\">YaelDillies</span><span class=\"p\">/</span><span class=\"n\">LeanCamCombi</span>\n<span class=\"n\">Cloning</span> <span class=\"n\">into</span> <span class=\"s1\">'LeanCamCombi'</span><span class=\"p\">...</span>\n<span class=\"n\">remote</span><span class=\"p\">:</span> <span class=\"n\">Enumerating</span> <span class=\"n\">objects</span><span class=\"p\">:</span> <span class=\"n\">2061</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"n\">remote</span><span class=\"p\">:</span> <span class=\"n\">Counting</span> <span class=\"n\">objects</span><span class=\"p\">:</span> <span class=\"n\">100</span><span class=\"p\">%</span> <span class=\"p\">(</span><span class=\"n\">1648</span><span class=\"p\">/</span><span class=\"n\">1648</span><span class=\"p\">),</span> <span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"n\">remote</span><span class=\"p\">:</span> <span class=\"n\">Compressing</span> <span class=\"n\">objects</span><span class=\"p\">:</span> <span class=\"n\">100</span><span class=\"p\">%</span> <span class=\"p\">(</span><span class=\"n\">262</span><span class=\"p\">/</span><span class=\"n\">262</span><span class=\"p\">),</span> <span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"n\">remote</span><span class=\"p\">:</span> <span class=\"n\">Total</span> <span class=\"n\">2061</span> <span class=\"p\">(</span><span class=\"n\">delta</span> <span class=\"n\">1341</span><span class=\"p\">),</span> <span class=\"n\">reused</span> <span class=\"n\">1615</span> <span class=\"p\">(</span><span class=\"n\">delta</span> <span class=\"n\">1336</span><span class=\"p\">),</span> <span class=\"n\">pack-reused</span> <span class=\"n\">413</span>\n<span class=\"p\">|</span> <span class=\"n\">3</span><span class=\"p\">.</span><span class=\"n\">47</span> <span class=\"n\">MiB</span><span class=\"p\">/</span><span class=\"n\">s</span>\n<span class=\"n\">Receiving</span> <span class=\"n\">objects</span><span class=\"p\">:</span> <span class=\"n\">100</span><span class=\"p\">%</span> <span class=\"p\">(</span><span class=\"n\">2061</span><span class=\"p\">/</span><span class=\"n\">2061</span><span class=\"p\">),</span> <span class=\"n\">4</span><span class=\"p\">.</span><span class=\"n\">46</span> <span class=\"n\">MiB</span> <span class=\"p\">|</span> <span class=\"n\">3</span><span class=\"p\">.</span><span class=\"n\">78</span> <span class=\"n\">MiB</span><span class=\"p\">/</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"n\">Resolving</span> <span class=\"n\">deltas</span><span class=\"p\">:</span> <span class=\"n\">100</span><span class=\"p\">%</span> <span class=\"p\">(</span><span class=\"n\">1550</span><span class=\"p\">/</span><span class=\"n\">1550</span><span class=\"p\">),</span> <span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"n\">skywi</span><span class=\"nv\">@DESKTOP</span><span class=\"n\">-K15RNOG</span> <span class=\"err\"></span> <span class=\"n\">E</span><span class=\"p\">:\\</span><span class=\"n\">code</span> <span class=\"err\"></span>                                                                              <span class=\"p\">[</span><span class=\"n\">11</span><span class=\"p\">:</span><span class=\"n\">09</span><span class=\"p\">]</span>\n<span class=\"err\">❯</span> <span class=\"nb\">cd </span><span class=\"n\">LeanCamCombi</span>\n<span class=\"n\">skywi</span><span class=\"nv\">@DESKTOP</span><span class=\"n\">-K15RNOG</span> <span class=\"err\"></span> <span class=\"n\">E</span><span class=\"p\">:\\</span><span class=\"n\">code</span><span class=\"p\">\\</span><span class=\"n\">LeanCamCombi</span> <span class=\"err\"></span> <span class=\"err\"></span> <span class=\"n\">main</span> <span class=\"err\">≣</span> <span class=\"err\"></span>                                                      <span class=\"p\">[</span><span class=\"n\">11</span><span class=\"p\">:</span><span class=\"n\">09</span><span class=\"p\">]</span>\n<span class=\"err\">❯</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">leanprover-community</span><span class=\"p\">/</span><span class=\"n\">mathlib4</span><span class=\"p\">.</span><span class=\"n\">git</span> <span class=\"n\">to</span> <span class=\"p\">.\\</span><span class=\"n\">lake-packages</span><span class=\"p\">\\</span><span class=\"n\">mathlib</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">leanprover</span><span class=\"p\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"p\">.\\</span><span class=\"n\">lake-packages</span><span class=\"p\">\\</span><span class=\"n\">std</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">gebner</span><span class=\"p\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"p\">.\\</span><span class=\"n\">lake-packages</span><span class=\"p\">\\</span><span class=\"n\">Qq</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">JLimperg</span><span class=\"p\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"p\">.\\</span><span class=\"n\">lake-packages</span><span class=\"p\">\\</span><span class=\"n\">aesop</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">mhuisi</span><span class=\"p\">/</span><span class=\"n\">lean4-cli</span><span class=\"p\">.</span><span class=\"n\">git</span> <span class=\"n\">to</span> <span class=\"p\">.\\</span><span class=\"n\">lake-packages</span><span class=\"p\">\\</span><span class=\"nb\">Cli</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">EdAyers</span><span class=\"p\">/</span><span class=\"n\">ProofWidgets4</span> <span class=\"n\">to</span> <span class=\"p\">.\\</span><span class=\"n\">lake-packages</span><span class=\"p\">\\</span><span class=\"n\">proofwidgets</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">Downloading</span> <span class=\"n\">proofwidgets</span><span class=\"p\">/</span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"n\">0</span><span class=\"p\">.</span><span class=\"n\">13</span><span class=\"p\">/</span><span class=\"n\">windows</span><span class=\"p\">-</span><span class=\"n\">64</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">gz</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"n\">Unpacking</span> <span class=\"n\">proofwidgets</span><span class=\"p\">/</span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"n\">0</span><span class=\"p\">.</span><span class=\"n\">13</span><span class=\"p\">/</span><span class=\"n\">windows</span><span class=\"p\">-</span><span class=\"n\">64</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">gz</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">1</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache</span><span class=\"p\">.</span><span class=\"n\">IO</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">2</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache</span><span class=\"p\">.</span><span class=\"n\">IO</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">2</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache</span><span class=\"p\">.</span><span class=\"n\">Hashing</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">3</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache</span><span class=\"p\">.</span><span class=\"n\">Hashing</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">3</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache</span><span class=\"p\">.</span><span class=\"n\">Requests</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">5</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache</span><span class=\"p\">.</span><span class=\"n\">Requests</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">5</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache</span><span class=\"p\">.</span><span class=\"n\">Main</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">6</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache</span><span class=\"p\">.</span><span class=\"n\">Main</span>\n<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">9</span><span class=\"p\">/</span><span class=\"n\">9</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache</span><span class=\"p\">.</span><span class=\"n\">exe</span>\n<span class=\"n\">No</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">download</span>\n<span class=\"n\">Decompressing</span> <span class=\"n\">3731</span> <span class=\"n\">file</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"n\">132925</span> <span class=\"n\">ms</span>\n<span class=\"n\">skywi</span><span class=\"nv\">@DESKTOP</span><span class=\"n\">-K15RNOG</span> <span class=\"err\"></span> <span class=\"n\">E</span><span class=\"p\">:\\</span><span class=\"n\">code</span><span class=\"p\">\\</span><span class=\"n\">LeanCamCombi</span> <span class=\"err\"></span> <span class=\"err\"></span> <span class=\"n\">main</span> <span class=\"err\">≣</span> <span class=\"err\"></span>                                                    <span class=\"p\">[</span><span class=\"n\">11</span><span class=\"p\">:</span><span class=\"n\">12</span><span class=\"p\">]</span>\n<span class=\"err\">❯</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"p\">[</span><span class=\"n\">259</span><span class=\"p\">/</span><span class=\"n\">359</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Logic</span><span class=\"p\">.</span><span class=\"n\">Basic</span>\n<span class=\"p\">[</span><span class=\"n\">356</span><span class=\"p\">/</span><span class=\"n\">359</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Data</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">Image</span>\n<span class=\"p\">[</span><span class=\"n\">1011</span><span class=\"p\">/</span><span class=\"n\">1552</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Data</span><span class=\"p\">.</span><span class=\"n\">Fintype</span><span class=\"p\">.</span><span class=\"n\">Basic</span>\n<span class=\"p\">[</span><span class=\"n\">1014</span><span class=\"p\">/</span><span class=\"n\">1552</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Logic</span><span class=\"p\">.</span><span class=\"n\">Relation</span>\n<span class=\"p\">[</span><span class=\"n\">1028</span><span class=\"p\">/</span><span class=\"n\">1552</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Data</span><span class=\"p\">.</span><span class=\"n\">Sym</span><span class=\"p\">.</span><span class=\"n\">Sym2</span>\n<span class=\"p\">[</span><span class=\"n\">1098</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Data</span><span class=\"p\">.</span><span class=\"n\">Finset</span><span class=\"p\">.</span><span class=\"n\">Basic</span>\n<span class=\"p\">[</span><span class=\"n\">1099</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Order</span>\n<span class=\"p\">[</span><span class=\"n\">1594</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">LittlewoodOfford</span>\n<span class=\"p\">[</span><span class=\"n\">1599</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">ExampleSheets</span><span class=\"p\">.</span><span class=\"n\">Graph</span><span class=\"p\">.</span><span class=\"n\">ES2</span>\n<span class=\"p\">[</span><span class=\"n\">1599</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">ExampleSheets</span><span class=\"p\">.</span><span class=\"n\">Graph</span><span class=\"p\">.</span><span class=\"n\">ES1</span>\n<span class=\"p\">[</span><span class=\"n\">1638</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Combinatorics</span><span class=\"p\">.</span><span class=\"n\">SimpleGraph</span><span class=\"p\">.</span><span class=\"n\">Basic</span>\n<span class=\"p\">[</span><span class=\"n\">1639</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">MeasureTheory</span><span class=\"p\">.</span><span class=\"n\">Measure</span><span class=\"p\">.</span><span class=\"n\">MeasureSpace</span>\n<span class=\"p\">[</span><span class=\"n\">1642</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">VanDenBergKesten</span>\n<span class=\"n\">stdout</span><span class=\"p\">:</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">LittlewoodOfford</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">20</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"n\">stdout</span><span class=\"p\">:</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">36</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">56</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">69</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">82</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">102</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">116</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">133</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">147</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">169</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">192</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">212</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">227</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">233</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">238</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">261</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ExampleSheets</span><span class=\"p\">\\</span><span class=\"n\">Graph</span><span class=\"p\">\\</span><span class=\"n\">ES1</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">266</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">[</span><span class=\"n\">1648</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Combinatorics</span><span class=\"p\">.</span><span class=\"n\">SimpleGraph</span><span class=\"p\">.</span><span class=\"n\">Subgraph</span>\n<span class=\"n\">stdout</span><span class=\"p\">:</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">VanDenBergKesten</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">100</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">[</span><span class=\"n\">1650</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Probability</span><span class=\"p\">.</span><span class=\"n\">Independence</span><span class=\"p\">.</span><span class=\"n\">Basic</span>\n<span class=\"p\">[</span><span class=\"n\">1650</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Pmf</span>\n<span class=\"p\">[</span><span class=\"n\">1651</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Combinatorics</span><span class=\"p\">.</span><span class=\"n\">SimpleGraph</span><span class=\"p\">.</span><span class=\"n\">Density</span>\n<span class=\"p\">[</span><span class=\"n\">1651</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">Mathlib</span><span class=\"p\">.</span><span class=\"n\">Combinatorics</span><span class=\"p\">.</span><span class=\"n\">SimpleGraph</span><span class=\"p\">.</span><span class=\"n\">Containment</span>\n<span class=\"p\">[</span><span class=\"n\">1653</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">BernoulliSeq</span>\n<span class=\"n\">stdout</span><span class=\"p\">:</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">BernoulliSeq</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">107</span><span class=\"p\">:</span><span class=\"n\">16</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">[</span><span class=\"n\">1654</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">ErdosRenyi</span><span class=\"p\">.</span><span class=\"n\">Basic</span>\n<span class=\"n\">stdout</span><span class=\"p\">:</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">Mathlib</span><span class=\"p\">\\</span><span class=\"n\">Combinatorics</span><span class=\"p\">\\</span><span class=\"n\">SimpleGraph</span><span class=\"p\">\\</span><span class=\"n\">Containment</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">210</span><span class=\"p\">:</span><span class=\"n\">14</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">Mathlib</span><span class=\"p\">\\</span><span class=\"n\">Combinatorics</span><span class=\"p\">\\</span><span class=\"n\">SimpleGraph</span><span class=\"p\">\\</span><span class=\"n\">Containment</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">227</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">[</span><span class=\"n\">1657</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">ErdosRenyi</span><span class=\"p\">.</span><span class=\"n\">BollobasContainment</span>\n<span class=\"p\">[</span><span class=\"n\">1657</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">ErdosRenyi</span><span class=\"p\">.</span><span class=\"n\">GiantComponent</span>\n<span class=\"p\">[</span><span class=\"n\">1657</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span><span class=\"p\">.</span><span class=\"n\">ErdosRenyi</span><span class=\"p\">.</span><span class=\"n\">Connectivity</span>\n<span class=\"n\">stdout</span><span class=\"p\">:</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ErdosRenyi</span><span class=\"p\">\\</span><span class=\"n\">BollobasContainment</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">27</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">.\\.\\.\\</span><span class=\"n\">LeanCamCombi</span><span class=\"p\">\\</span><span class=\"n\">ErdosRenyi</span><span class=\"p\">\\</span><span class=\"n\">BollobasContainment</span><span class=\"p\">.</span><span class=\"n\">lean</span><span class=\"p\">:</span><span class=\"n\">33</span><span class=\"p\">:</span><span class=\"n\">6</span><span class=\"p\">:</span> <span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"s1\">'sorry'</span>\n<span class=\"p\">[</span><span class=\"n\">1660</span><span class=\"p\">/</span><span class=\"n\">1661</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">LeanCamCombi</span>\n<span class=\"n\">skywi</span><span class=\"nv\">@DESKTOP</span><span class=\"n\">-K15RNOG</span> <span class=\"err\"></span> <span class=\"n\">E</span><span class=\"p\">:\\</span><span class=\"n\">code</span><span class=\"p\">\\</span><span class=\"n\">LeanCamCombi</span> <span class=\"err\"></span> <span class=\"err\"></span> <span class=\"n\">main</span> <span class=\"err\">≣</span> <span class=\"err\"></span>                                                    <span class=\"p\">[</span><span class=\"n\">11</span><span class=\"p\">:</span><span class=\"n\">18</span><span class=\"p\">]</span>\n<span class=\"err\">❯</span>\n</code></pre></div>\n</div></div>",
        "id": 390278261,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1694427535
    },
    {
        "content": "<p>(not sure how to put code blocks in spoiler blocks)</p>",
        "id": 390278358,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1694427571
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Like this</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">some</span> <span class=\"n\">code</span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>\n</code></pre></div>\n</div></div>",
        "id": 390278890,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694427795
    },
    {
        "content": "<p>When everything is broken for me, I delete the <code>lake-packages</code> directory and then do <code>lake exe cache get!</code>. Does that make things any better?</p>",
        "id": 390283458,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694429433
    },
    {
        "content": "<p>Also I guess you can do <code>lake update</code> in the middle (after deleting, before cache) if this is a project which depends on mathlib rather than mathlib itself.</p>",
        "id": 390283575,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694429479
    },
    {
        "content": "<p>Nope, deleting <code>lake-packages</code>, <code>lake clean</code>, <code>lake exe cache get!</code>, <code>lake update</code> do not help.</p>",
        "id": 390283771,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694429536
    },
    {
        "content": "<p>Try copying <code>lean-toolchain</code> from mathlib to your project, and make sure you are elan v3 with something like <code>elan self update</code></p>",
        "id": 390283874,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694429570
    },
    {
        "content": "<p>and then do everything again in a random order, at least this is what I usually do when things don't work for me.</p>",
        "id": 390283939,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694429589
    },
    {
        "content": "<p>It's worth noting that the project compiles on my windows machine and on CI. I copied mathlib's <code>lean-toolchain</code> into this project yesterday.</p>",
        "id": 390284066,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1694429643
    },
    {
        "content": "<p>If none of these help then maybe post the current state of the error.</p>",
        "id": 390284118,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694429651
    },
    {
        "content": "<p>Did all that. I'll try Sophie's votive candle :(</p>",
        "id": 390284123,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694429652
    },
    {
        "content": "<p>Does <code>lake build</code> work (as in, start compiling things) without <code>lake exe cache get</code>?</p>",
        "id": 390284702,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1694429852
    },
    {
        "content": "<p>Hmm, <code>lake exe cache get</code> works fine for me (mac os) in this project.</p>",
        "id": 390308679,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694438235
    },
    {
        "content": "<p>Have you reinstalled <code>elan</code>? That's the only emergency measure I haven't seen tried above. :-)</p>",
        "id": 390308744,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694438258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/390277027\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Ya</span><span class=\"bp\">Ù</span><span class=\"n\">l</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.0.0\\bin\\lean.exe</span>\n</code></pre></div>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Is your name <code>YaÙl</code>?</p>",
        "id": 390309753,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694438579
    },
    {
        "content": "<p>The terminal indeed mangles my umlaut. Do you think this could be related?</p>",
        "id": 390319479,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694441515
    },
    {
        "content": "<p>it's not clear if this is a terminal display issue or something else, but the error message suggests that your builtin lean path was not set correctly so it could be relevant</p>",
        "id": 390319716,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694441567
    },
    {
        "content": "<p>can you build it from inside <code>lake-packages/mathlib</code>?</p>",
        "id": 390319801,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694441592
    },
    {
        "content": "<p>Am currently retrying everything in <code>C:/Users/Public</code>. Will tell you how it goes if the airplane doesn't take off before it finishes loading.</p>",
        "id": 390321942,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694442159
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/390319801\">said</a>:</p>\n<blockquote>\n<p>can you build it from inside <code>lake-packages/mathlib</code>?</p>\n</blockquote>\n<p>What do you mean exactly? Should I run <code>lake build </code> inside that folder?</p>",
        "id": 390322558,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694442328
    },
    {
        "content": "<p>The <code>C:/Users/Public</code> trick didn't work because it's looking for something under the mangled folder.</p>",
        "id": 390322835,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694442396
    },
    {
        "content": "<p>Is there any way I can just wipe everything lean-related and restart? (not dangerous, this computer is brand new)</p>",
        "id": 390323002,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694442448
    },
    {
        "content": "<p>yes, just go into that folder and run <code>lake exe cache</code></p>",
        "id": 390323535,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694442581
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/390319479\">said</a>:</p>\n<blockquote>\n<p>The terminal indeed mangles my umlaut. Do you think this could be related?</p>\n</blockquote>\n<p>Why do you call this a umlaut, are you a German Breton?</p>",
        "id": 390324504,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694442841
    },
    {
        "content": "<p>Nobody knows what I mean when I say tréma <span aria-label=\"disappointed\" class=\"emoji emoji-1f61e\" role=\"img\" title=\"disappointed\">:disappointed:</span></p>",
        "id": 390324821,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694442913
    },
    {
        "content": "<p>Plane taking off, I guess I'll read some notes instead of working on my project.</p>",
        "id": 390325402,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694443063
    },
    {
        "content": "<p>Do American people know more about umlauts?</p>",
        "id": 390326131,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694443254
    },
    {
        "content": "<p>It's funny that on computers they ended up looking the same. On paper they aren't meant to be the same, right?</p>",
        "id": 390326264,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694443289
    },
    {
        "content": "<p>haha the wikipedia page is actually just called <a href=\"https://en.wikipedia.org/wiki/Two_dots_(diacritic)\">https://en.wikipedia.org/wiki/Two_dots_(diacritic)</a></p>",
        "id": 390326877,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694443429
    },
    {
        "content": "<p>No, they have <a href=\"https://en.wikipedia.org/wiki/Diaeresis_(diacritic)\">https://en.wikipedia.org/wiki/Diaeresis_(diacritic)</a> and <a href=\"https://en.wikipedia.org/wiki/Umlaut_(diacritic)\">https://en.wikipedia.org/wiki/Umlaut_(diacritic)</a></p>",
        "id": 390327491,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694443582
    },
    {
        "content": "<p>Can you see I should be grading?</p>",
        "id": 390327738,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694443653
    },
    {
        "content": "<p>those two pages are about the distinct phonemic functions, not just the typographical mark</p>",
        "id": 390328461,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694443845
    },
    {
        "content": "<p>apparently the trema redirects to \"diaeresis\"</p>",
        "id": 390328515,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694443861
    },
    {
        "content": "<p>and that also accords with my experience, in english the usage in french would be called a diaeresis</p>",
        "id": 390328797,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694443929
    },
    {
        "content": "<p>I don't think I've ever heard anyone in conversational US English say \"diaresis\" unless it was specifically to be pedantic about the difference, IME \"umlaut\" is indeed a bit more common to say/hear, but \"two dots\" is probably even more common.</p>",
        "id": 390344151,
        "sender_full_name": "Julian Berman",
        "timestamp": 1694448257
    },
    {
        "content": "<p>I guess I don't say \"two dots\" because it means \":\" in French.</p>",
        "id": 390354198,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694451916
    },
    {
        "content": "<p>Two dots or double-dot seems reasonable as a way to describe the diacritic if you don't know the word for it, but \"umlaut\" is just wrong unless you are talking about the thing that changes vowel sounds in german and related languages. English itself has some diaereses, although most uses are considered a bit pedantic these days, such as in \"coöperation\". See also <a href=\"https://www.newyorker.com/culture/culture-desk/the-curse-of-the-diaeresis\">https://www.newyorker.com/culture/culture-desk/the-curse-of-the-diaeresis</a></p>",
        "id": 390363438,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694455609
    },
    {
        "content": "<p>(This seems to have less and less to do with the name of the topic)</p>",
        "id": 390369425,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1694458127
    },
    {
        "content": "<p>To steer this back on course, we could rename the topic name to <code>läkë ëxë cächë gët</code> and start a poll on how many diaeresis, umlauts, two-dots people see in the title.</p>",
        "id": 390374976,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694460503
    },
    {
        "content": "<p>I am getting the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">starlight</span> <span class=\"n\">mathlib4</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">fetch</span> <span class=\"n\">origin</span>    <span class=\"bp\">#</span> <span class=\"k\">in</span> <span class=\"n\">directory</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">fatal</span><span class=\"o\">:</span> <span class=\"n\">bad</span> <span class=\"n\">object</span> <span class=\"n\">refs</span><span class=\"bp\">/</span><span class=\"n\">heads</span><span class=\"bp\">/</span><span class=\"n\">main</span> <span class=\"mi\">2</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">did</span> <span class=\"n\">not</span> <span class=\"n\">send</span> <span class=\"n\">all</span> <span class=\"n\">necessary</span> <span class=\"n\">objects</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">git</span><span class=\"bp\">`</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">code</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>What could be causing this?</p>",
        "id": 391903113,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695127040
    },
    {
        "content": "<p>It's only one branch, <a href=\"https://github.com/leanprover-community/mathlib4/pull/6500\">#6500</a></p>",
        "id": 391903347,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695127127
    },
    {
        "content": "<p>Actually check that, it is not working on master. I ran it once on master fine, but then I synced and ran it again and it failed.</p>",
        "id": 391903736,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695127276
    },
    {
        "content": "<p>That sounds more like git having trouble talking to github than anything specific to <code>lake</code> or <code>cache</code>.</p>",
        "id": 391905155,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695127774
    },
    {
        "content": "<p>If it's github's fault, waiting should suffice. In the meantime you might try <code>rm -rf lake-packages</code> and see if that helps.</p>",
        "id": 391905279,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695127810
    },
    {
        "content": "<p><code>rm -rf lake-packages</code> worked. Thanks!</p>",
        "id": 391905899,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695128017
    },
    {
        "content": "<p>Incidentally, GitHub seems to be <a href=\"https://x.com/githubstatus/status/1704125689882935764?s=20\">having issues as well</a>, so maybe that was the cause.</p>",
        "id": 391914967,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695130799
    },
    {
        "content": "<p>I get a segmentation fault when running <code>lake exe cache get</code> on current mathlib master. On a branch where I haven't merged master in a few days, no issue. Is someone else running into this?</p>",
        "id": 396847418,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1697444152
    },
    {
        "content": "<p>It's working for me.</p>",
        "id": 396849805,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697444977
    },
    {
        "content": "<p>Can you try (in order, so we find out which one helps):</p>\n<ol>\n<li><code>lake clean &amp;&amp; lake exe cache get</code></li>\n<li><code>rm lakefile.olean &amp;&amp; lake exe cache get</code></li>\n</ol>",
        "id": 396850133,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697445080
    },
    {
        "content": "<p>The first one worked. Thanks!</p>",
        "id": 396851804,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1697445628
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/oTU6wqwDvUUw3BwIQPT7DMi5/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/oTU6wqwDvUUw3BwIQPT7DMi5/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/oTU6wqwDvUUw3BwIQPT7DMi5/image.png\"></a></div><p>I got this after pulling the latest master.</p>",
        "id": 396875731,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1697453306
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span>, that's very helpful. Let's see if <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> has an idea.</p>",
        "id": 396878296,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697454253
    },
    {
        "content": "<p>I will say that wiping and repulling fixed everything, so maybe it's just a transient issue after upgrading.</p>",
        "id": 396879088,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1697454543
    },
    {
        "content": "<p>Trying to toy around with the <code>rw_search</code> branch, but I'm getting the error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">starlight</span> <span class=\"n\">mathlib4</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">x</span><span class=\"bp\">�</span><span class=\"o\">]</span><span class=\"bp\">/./</span><span class=\"n\">Cache</span><span class=\"bp\">/</span><span class=\"n\">Main.lean</span>\n</code></pre></div>",
        "id": 397441263,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1697698564
    },
    {
        "content": "<p>What is this garbage in the path? Why does lake expect to find something there?</p>",
        "id": 397441355,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1697698625
    },
    {
        "content": "<p>Does deleting the <code>lakefile.olean</code> help?</p>",
        "id": 397441384,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697698651
    },
    {
        "content": "<p>The error changes!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">starlight</span> <span class=\"n\">mathlib4</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">ld64.lld</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">system</span><span class=\"bp\">/</span><span class=\"n\">libsystem_kernel.dylib</span> <span class=\"n\">has</span> <span class=\"n\">version</span> <span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">newer</span> <span class=\"n\">than</span> <span class=\"n\">target</span> <span class=\"n\">minimum</span> <span class=\"n\">of</span> <span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">ld64.lld</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">system</span><span class=\"bp\">/</span><span class=\"n\">libsystem_platform.dylib</span> <span class=\"n\">has</span> <span class=\"n\">version</span> <span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">newer</span> <span class=\"n\">than</span> <span class=\"n\">target</span> <span class=\"n\">minimum</span> <span class=\"n\">of</span> <span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">ld64.lld</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">system</span><span class=\"bp\">/</span><span class=\"n\">libsystem_pthread.dylib</span> <span class=\"n\">has</span> <span class=\"n\">version</span> <span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">newer</span> <span class=\"n\">than</span> <span class=\"n\">target</span> <span class=\"n\">minimum</span> <span class=\"n\">of</span> <span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">zsh</span><span class=\"o\">:</span> <span class=\"n\">segmentation</span> <span class=\"n\">fault</span>  <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n</code></pre></div>",
        "id": 397441850,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1697698917
    },
    {
        "content": "<p><code>lake clean</code>?</p>",
        "id": 397441920,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697698935
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">starlight</span> <span class=\"n\">mathlib4</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">clean</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">22</span><span class=\"o\">,</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span>\n</code></pre></div>",
        "id": 397441954,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1697698955
    },
    {
        "content": "<p>Oh dear!</p>",
        "id": 397441985,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697698973
    },
    {
        "content": "<p><code>rm -rf lake-packages &amp;&amp; lake clean</code>?</p>",
        "id": 397442006,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697698985
    },
    {
        "content": "<p>Success!</p>",
        "id": 397442086,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1697699036
    },
    {
        "content": "<p>(<code>lake exe cache get</code> now works too) Thanks!</p>",
        "id": 397442124,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1697699044
    },
    {
        "content": "<p>Hmmmm.... I followed the steps in this thread and something deleted the contents of my mathlib4 repo! I'm okay with it, but I'm pretty religious about committing, and I even push local changes to my own private Gitea server when I'm not ready to put something out for public consumption. So I didn't lose anything important, but I can imagine other people being really upset about this.</p>\n<p>Note: my first guess was that I was just an idiot and did something stupid like <code>rm -rf .</code> instead of what was written, but as you can see from my bash history below, that was <em>not</em> the case.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span>jireh@boston<span class=\"w\"> </span>mathlib4<span class=\"o\">]</span>$<span class=\"w\"> </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\nerror:<span class=\"w\"> </span>no<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"o\">(</span>error<span class=\"w\"> </span>code:<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>\n<span class=\"w\">  </span>file:<span class=\"w\"> </span>./x�<span class=\"o\">]</span>/./Cache/Main.lean\n<span class=\"o\">[</span>jireh@boston<span class=\"w\"> </span>mathlib4<span class=\"o\">]</span>$<span class=\"w\"> </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get!\nerror:<span class=\"w\"> </span>no<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"o\">(</span>error<span class=\"w\"> </span>code:<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>\n<span class=\"w\">  </span>file:<span class=\"w\"> </span>./x�<span class=\"o\">]</span>/./Cache/Main.lean\n<span class=\"o\">[</span>jireh@boston<span class=\"w\"> </span>mathlib4<span class=\"o\">]</span>$<span class=\"w\"> </span>lake<span class=\"w\"> </span>clean\nerror:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>argument<span class=\"w\"> </span><span class=\"o\">(</span>error<span class=\"w\"> </span>code:<span class=\"w\"> </span><span class=\"m\">22</span>,<span class=\"w\"> </span>invalid<span class=\"w\"> </span>argument<span class=\"o\">)</span>\n<span class=\"w\">  </span>file:<span class=\"w\"> </span>./lake-packages/std/.\n<span class=\"o\">[</span>jireh@boston<span class=\"w\"> </span>mathlib4<span class=\"o\">]</span>$<span class=\"w\"> </span>lake<span class=\"w\"> </span>clean\nerror:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>argument<span class=\"w\"> </span><span class=\"o\">(</span>error<span class=\"w\"> </span>code:<span class=\"w\"> </span><span class=\"m\">22</span>,<span class=\"w\"> </span>invalid<span class=\"w\"> </span>argument<span class=\"o\">)</span>\n<span class=\"w\">  </span>file:<span class=\"w\"> </span>./lake-packages/Qq/.\n<span class=\"o\">[</span>jireh@boston<span class=\"w\"> </span>mathlib4<span class=\"o\">]</span>$<span class=\"w\"> </span>rm<span class=\"w\"> </span>-rf<span class=\"w\"> </span>lake-packages<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>lake<span class=\"w\"> </span>clean\ninfo:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover/std4<span class=\"w\"> </span>to<span class=\"w\"> </span>./lake-packages/std\ninfo:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/gebner/quote4<span class=\"w\"> </span>to<span class=\"w\"> </span>./lake-packages/Qq\ninfo:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/JLimperg/aesop<span class=\"w\"> </span>to<span class=\"w\"> </span>./lake-packages/aesop\ninfo:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/mhuisi/lean4-cli.git<span class=\"w\"> </span>to<span class=\"w\"> </span>./lake-packages/Cli\ninfo:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/EdAyers/ProofWidgets4<span class=\"w\"> </span>to<span class=\"w\"> </span>./lake-packages/proofwidgets\nerror:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>argument<span class=\"w\"> </span><span class=\"o\">(</span>error<span class=\"w\"> </span>code:<span class=\"w\"> </span><span class=\"m\">22</span>,<span class=\"w\"> </span>invalid<span class=\"w\"> </span>argument<span class=\"o\">)</span>\n<span class=\"w\">  </span>file:<span class=\"w\"> </span>./.\n<span class=\"o\">[</span>jireh@boston<span class=\"w\"> </span>mathlib4<span class=\"o\">]</span>$<span class=\"w\"> </span>lake<span class=\"w\"> </span>clean\nerror:<span class=\"w\"> </span>no<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"o\">(</span>error<span class=\"w\"> </span>code:<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>\n<span class=\"w\">  </span>file:<span class=\"w\"> </span>./lakefile.lean\n<span class=\"o\">[</span>jireh@boston<span class=\"w\"> </span>mathlib4<span class=\"o\">]</span>$<span class=\"w\"> </span>ls\n<span class=\"o\">[</span>jireh@boston<span class=\"w\"> </span>mathlib4<span class=\"o\">]</span>$<span class=\"w\"> </span>ls<span class=\"w\"> </span>-a\n.<span class=\"w\">  </span>..\n</code></pre></div>\n<p>If it matters, I think I may have just switch to a branch prior to the <code>lakefile.olean</code> (which I didn't attempt to delete before this happened), so it was probably present.</p>",
        "id": 397599766,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697763273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 397599826,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697763313
    },
    {
        "content": "<p>That is pretty scary.</p>",
        "id": 397600150,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697763484
    },
    {
        "content": "<p>I'll see if I can reproduce.</p>",
        "id": 397600178,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697763497
    },
    {
        "content": "<p>I think it can only have been the <code>lake clean</code> step?</p>",
        "id": 397600185,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697763499
    },
    {
        "content": "<p>I think so.</p>",
        "id": 397600301,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697763563
    },
    {
        "content": "<p>can't seem to repro, sorry.</p>",
        "id": 397600609,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697763715
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>, can you think how <code>lake clean</code> could possibly have done this?</p>",
        "id": 397601320,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697764068
    },
    {
        "content": "<p>I think there was something in the recent update that is leading to memory corruption errors in lake during the migration, likely due to out of date <code>lakefile.olean</code> built for the wrong version of lean</p>",
        "id": 397630803,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697778866
    },
    {
        "content": "<p>I think you need the <code>-R</code> argument to run <code>lake clean</code> without accidentally using the bad lakefile.olean</p>",
        "id": 397631304,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697779200
    },
    {
        "content": "<p>(IMO <code>lake clean</code> should default to using <code>-R</code>)</p>",
        "id": 397631367,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697779216
    },
    {
        "content": "<p>Lake does currently perform a check that the toolchain and olean match (it does this by checking that the modification time for the olean is newer than the toolchain). However, if on goes backwards in time to an older Lean with a new olean, this could corrupt the configuration (and would still be a problem with more bullet-proof changes to Lean/Lake's loading of oleans because an older Lean version would not have said changes).</p>",
        "id": 397631636,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697779377
    },
    {
        "content": "<p>This just happened to me (moved to a branch on the new version, then moved to a branch on the old version, and vscode called something that produced things in <code>bin</code> and <code>lib</code> folders in the current directory). Deleted <code>lakefile.olean</code> to hopefully fix the issue, but I'm guessing the same issue will recur if I go back and forth again. This is a pretty serious issue, can we back out the affected lean version?</p>",
        "id": 397633107,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697780389
    },
    {
        "content": "<p>I've seen the mysterious appearance of <code>bin</code> and <code>lib</code> twice as well. :-(</p>",
        "id": 397637878,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697782826
    },
    {
        "content": "<p>unfortunately I can't think of any way to make a change to the lakefile.olean format which will be handled correctly by the old version of lake, other than renaming <code>lakefile.olean</code> to something else for long enough for people to move on</p>",
        "id": 397638746,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697783189
    },
    {
        "content": "<p>in hindsight we really need lake to include the lean toolchain version in the <code>lakefile.olean</code> or alongside it</p>",
        "id": 397638871,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697783242
    },
    {
        "content": "<p>(Incidentally, this isn't a problem that would have happened if the lakefile.olean was in a more forward compatible format like, say, JSON <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> )</p>",
        "id": 397639220,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697783384
    },
    {
        "content": "<p>non-self-describing binary formats are super hazardous wrt an unclear versioning system</p>",
        "id": 397639515,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697783505
    },
    {
        "content": "<p>Actually, investigating this some more, I am now confused. Changing branches <a href=\"https://stackoverflow.com/a/2458146\">should update the modification time</a> of <code>lean-toolchain</code> when the Lean version changes and there was no stable or release candidate of Lean missing the toolchain file  modification time check. So Lake should always reconfigure if the toolchain changes. The check in question is <a href=\"https://github.com/leanprover/lean4/blob/419100d42b7b98ff76f25f7cc4d4ceddea1cc5a7/src/lake/Lake/Load/Elab.lean#L90-L95\">here</a> in case anyone sees something I overlooked.</p>",
        "id": 397646228,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697786204
    },
    {
        "content": "<p>have you replicated the issue <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> ?</p>",
        "id": 397647084,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697786610
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  Not yet, no. I plan to try my hand at writing some tests in an attempt to do so tomorrow, but we will see if I succeed.</p>",
        "id": 397647250,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697786682
    },
    {
        "content": "<p>Does this bug \"respect\" the repository boundary? Or can it rm -rf .. if you're unlucky with the memory corruption?</p>",
        "id": 397647538,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697786787
    },
    {
        "content": "<p>I don't think we will know the answer to that until we know exactly what the change is and how it manifests</p>",
        "id": 397647728,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697786860
    },
    {
        "content": "<p>it does seem very dangerous though, I would rather we just yank the new version until we figure this out</p>",
        "id": 397647828,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697786889
    },
    {
        "content": "<p>I just tried a couple variations on going back and forth between old versions and new and I wasn't able to reproduce the bug</p>",
        "id": 397648356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697787125
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/397647828\">said</a>:</p>\n<blockquote>\n<p>it does seem very dangerous though, I would rather we just yank the new version until we figure this out</p>\n</blockquote>\n<p>Which new version? As far as I can tell, it is not clear what version of Lean (or what combination of versions) is even the source of this bug.</p>",
        "id": 397650393,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697788015
    },
    {
        "content": "<p>My impression is that the issues are correlated with peoples' first experiences with rc3</p>",
        "id": 397650832,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788199
    },
    {
        "content": "<p>Have there been any changes to the olean version in rc3?</p>",
        "id": 397650937,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788227
    },
    {
        "content": "<p>There are two different problems here:</p>\n<ol>\n<li>The olean mismatch not being caught</li>\n<li>The specific Lake ABI change that leads to this <code>lake clean</code> behavior.</li>\n</ol>\n<p>As long as (1) is not resolved, <em>any</em> Lake ABI change could convincibly cause a problem  equal to or worse than this depending on how things get shuffled around from the version switch.</p>",
        "id": 397651201,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697788332
    },
    {
        "content": "<p>just checked, the <code>lakefile.olean</code>s generated for std4 before and after rc3 are identical</p>",
        "id": 397651362,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788398
    },
    {
        "content": "<p>are there any other ABI hazards you can think of here?</p>",
        "id": 397651500,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788442
    },
    {
        "content": "<p>rc2 was very short-lived, probably should check between rc1 and rc3</p>",
        "id": 397651607,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697788482
    },
    {
        "content": "<p>in particular, things that would impact the calculation of lean paths</p>",
        "id": 397651615,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788484
    },
    {
        "content": "<p>Yes, this specific ABI difference I am rather certain is due to <a href=\"https://github.com/leanprover/lean4/pull/2603\">lean4#2603</a> which occurred between  rc1 and rc2/rc3.</p>",
        "id": 397651703,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697788519
    },
    {
        "content": "<p>indeed there was a binary difference between rc1 and rc2</p>",
        "id": 397651748,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788539
    },
    {
        "content": "<p>Since that added a <code>PackageConfig</code> field and shifted everything below it down one.</p>",
        "id": 397651749,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697788539
    },
    {
        "content": "<p>Since <code>srcDir</code> and <code>buildDir</code> are adjacent this shift puts the <code>srcDir</code> in the <code>buildDir</code> spot and thus causes the <code>lake clean</code> behavior when it is (for some unknown reason) read by some earlier Lean version without reconfiguring.</p>",
        "id": 397652121,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697788656
    },
    {
        "content": "<p>One hot fix would be to just move <code>postUpdate?</code> to the bottom of the config, which should keep the <code>PackageConfig</code> ABI above the same. However, I am not sure whether this would instead cause a segfault or something worse.</p>",
        "id": 397652465,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697788774
    },
    {
        "content": "<p>in this case, a segfault is better than deleting your directory</p>",
        "id": 397652643,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788816
    },
    {
        "content": "<p>I wonder whether you can indirectly embed version numbers in the olean by making <code>package</code> add a declaration to the environment with the version number</p>",
        "id": 397652856,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788909
    },
    {
        "content": "<p>I am not sure if a segfault would be the result. It could just as easily bump other things around to produce a worse result. (I think?)</p>",
        "id": 397652956,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697788933
    },
    {
        "content": "<p>I don't understand oleans, but does the new field affect just its containing structure? Or does it \"shift everything down\" in the olean potentially corrupting reading later-occurring structures in older lean versions?</p>",
        "id": 397653106,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697788985
    },
    {
        "content": "<p>usually if you access something off the end of a VM object you get a segfault, although for packed olean objects you are probably more likely to run into the next object</p>",
        "id": 397653127,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697788994
    },
    {
        "content": "<p>the first field of the next object is the rc count which is always 0, so that's going to cause a crash if you are expecting a composite lean object (it's the null pointer)</p>",
        "id": 397653294,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789056
    },
    {
        "content": "<p>if the new field is a UInt8 or something then you might just read 0</p>",
        "id": 397653385,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789094
    },
    {
        "content": "<p>The version number definition sounds like a good solution.</p>",
        "id": 397653620,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789178
    },
    {
        "content": "<p>remember, keep it simple, you want to depend on the layout of as few lean objects as possible to minimize the possibility of corruption of the version decl</p>",
        "id": 397653795,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789246
    },
    {
        "content": "<p>So, iiuc, the chicken-and-egg problem here is that Lake typically checks if the oleans match the toolchain on a <code>lake build</code> (by doing traces or whatever), but older versions of Lean pick up and use <code>lakefile.olean</code> and there are no such checks. In Lean 3, oleans embedded Lean.versionString, is this no longer the case in Lean 4?</p>",
        "id": 397653873,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697789282
    },
    {
        "content": "<p>the old versions of lake have a check, but it's not as precise as it should be</p>",
        "id": 397653987,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789312
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/397653795\">said</a>:</p>\n<blockquote>\n<p>remember, keep it simple, you want to depend on the layout of as few lean objects as possible to minimize the possibility of corruption of the version decl</p>\n</blockquote>\n<p>What do you mean by this?</p>",
        "id": 397653999,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789316
    },
    {
        "content": "<p>it seems to work in basic tests though</p>",
        "id": 397654012,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789321
    },
    {
        "content": "<p>Might be good to add some sanity checks to Lean itself (to the place which actually mmaps the olean) if it still makes sense in the current architecture</p>",
        "id": 397654107,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697789359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/397653987\">said</a>:</p>\n<blockquote>\n<p>the old versions of lake have a check, but it's not as precise as it should be</p>\n</blockquote>\n<p>More specifically, it is not clear what the imprecision even is.</p>",
        "id": 397654151,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789378
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> You have to traverse several lean objects in order to get to the version decl's value. Reading an olean with the wrong ABI is pretty fraught and every read could cause something to blow up</p>",
        "id": 397654184,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789396
    },
    {
        "content": "<p>But thankfully the ABI of Expr and friends is fairly stable (although, I have a PR in progress...)</p>",
        "id": 397654339,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789442
    },
    {
        "content": "<p>Yeah, this solution is not bulletproof. Ideally, the Lean version would at least be in the olean to check (even if only optionally verified).</p>",
        "id": 397654614,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789534
    },
    {
        "content": "<p>I was thinking about that, but I think we don't necessarily want it always, since it changes the hashes</p>",
        "id": 397654745,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789580
    },
    {
        "content": "<p>in this case it would be sufficient if you could just make some room in lakefile.olean to store the version inline</p>",
        "id": 397654851,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789622
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/397654745\">said</a>:</p>\n<blockquote>\n<p>I was thinking about that, but I think we don't necessarily want it always, since it changes the hashes</p>\n</blockquote>\n<p>What's the concern? Lean.versionString is already hashed in lake exe cache get, and I'd certainly expect a full rebuild when changing toolchains.</p>",
        "id": 397654954,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697789650
    },
    {
        "content": "<p>Right now, I think it is relatively unlikely for oleans to generally be compatible across versions. Though, I guess it could be a toggle in both directions (on save and read).</p>",
        "id": 397654973,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789656
    },
    {
        "content": "<p>It's also not bulletproof because the ABI of an olean depends on all of its dependencies, not just the lean toolchain version</p>",
        "id": 397655115,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789706
    },
    {
        "content": "<p>i.e. you can add a field to a struct without changing the lean version</p>",
        "id": 397655143,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789722
    },
    {
        "content": "<p>In essence, when the time comes that oleans are modular, I can see the value in not checking, but I think that would already be a big enough breaking change that changing the version embedding would not be a major concern.</p>",
        "id": 397655205,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789747
    },
    {
        "content": "<p>this is less of a problem for lakefile.olean because all of its dependencies are in the toolchain</p>",
        "id": 397655225,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789756
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/397655115\">said</a>:</p>\n<blockquote>\n<p>It's also not bulletproof because the ABI of an olean depends on all of its dependencies, not just the lean toolchain version</p>\n</blockquote>\n<p>Oh, I did not realize it was that frail.</p>",
        "id": 397655413,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789814
    },
    {
        "content": "<p>I mean, if you say a struct has 4 fields then that's how the ABI goes</p>",
        "id": 397655486,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789839
    },
    {
        "content": "<p>Yeah, It just never fully processed that that would be an implication of storing arbitrary data in the extensions.</p>",
        "id": 397655599,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789880
    },
    {
        "content": "<p>do you mean lake data or user data?</p>",
        "id": 397655754,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789912
    },
    {
        "content": "<p>Any arbitrary Lean data. Upon reflection, though, it is quite obvious.</p>",
        "id": 397655861,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697789953
    },
    {
        "content": "<p>If you store stuff in Exprs then it's a bit more stable</p>",
        "id": 397655896,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789966
    },
    {
        "content": "<p>90% of (normal) .olean files is composed of Exprs</p>",
        "id": 397655981,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697789997
    },
    {
        "content": "<p>Apparently, not much more because <code>evalConst</code> is presumably the culprit here. (Apparently it does not check that the constructor is sized as expected).</p>",
        "id": 397656184,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697790053
    },
    {
        "content": "<p>it can't, really</p>",
        "id": 397656234,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790066
    },
    {
        "content": "<p>I actually have a <a href=\"https://github.com/digama0/oleandump\">tool</a> for generating \"olean schemas\" for lean types, but I'm not exactly sure how to mix it into the processes here</p>",
        "id": 397656364,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790120
    },
    {
        "content": "<p>Oh, yeah, because <code>evalConst</code> just has the erased type not the actual type definition to check against.</p>",
        "id": 397656457,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697790140
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/397656364\">said</a>:</p>\n<blockquote>\n<p>I actually have a <a href=\"https://github.com/digama0/oleandump\">tool</a> for generating \"olean schemas\" for lean types, but I'm not exactly sure how to mix it into the processes here</p>\n</blockquote>\n<p>Here's a sketch: we run this on every commit of lake to produce a schema for what can appear in an olean file, and commit it to the repo. A CI job recalculates the schema and updates this file / errors if it is not updated, and any update of the file comes with a requirement to bump the \"olean version\", which is stored in the file somewhere easily (and stably) accessible and used for validation</p>",
        "id": 397657411,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790424
    },
    {
        "content": "<p>The reason for the indirection here is because recalculating the schema at runtime would be too expensive, it's basically a compile time known value but it's also a complex object and a bit big to put in the olean file itself</p>",
        "id": 397657821,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790502
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/397657411\">said</a>:</p>\n<blockquote>\n<p>bump the \"olean version\", which is stored in the file somewhere easily (and stably) accessible and used for validation</p>\n</blockquote>\n<p>Would this \"olean version\" be a parameter of <code>saveModuleData</code> and return <code>readModuleData</code> because those are currently C black boxes making the entire olean format fixed and opaque to Lean.</p>",
        "id": 397658381,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697790607
    },
    {
        "content": "<p>yes</p>",
        "id": 397658435,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790618
    },
    {
        "content": "<p>this would be part of the olean file header</p>",
        "id": 397658483,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790631
    },
    {
        "content": "<p>(PS: if the olean file format changes I need to be made aware because <code>leantar</code>, used by <code>lake exe cache</code> will have to be updated)</p>",
        "id": 397658612,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790681
    },
    {
        "content": "<p>The most general thing I could think of for this header info would just be to make it an arbitrary <code>Expr</code> one can add to the header.  Does that seem reasonable?</p>",
        "id": 397658731,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697790723
    },
    {
        "content": "<p>I would rather it not be a lean object, this runs into the same ABI issues</p>",
        "id": 397658843,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790758
    },
    {
        "content": "<p>something with a fixed layout would be better, like a string or list of strings</p>",
        "id": 397658886,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790776
    },
    {
        "content": "<p>or a number in this case</p>",
        "id": 397658908,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790784
    },
    {
        "content": "<p>In that case, maybe just a direct <code>ByteArray</code>?</p>",
        "id": 397659014,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697790825
    },
    {
        "content": "<p>sure, but now you need a secondary parser and a spec for what goes in that array, and when that spec changes you have ABI issues all over again</p>",
        "id": 397659145,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790866
    },
    {
        "content": "<p>This byte array would also have to be copied out of the olean, most likely, because it's not a proper lean object</p>",
        "id": 397659323,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790929
    },
    {
        "content": "<p>True, but that same issue is true for a string or a number.</p>",
        "id": 397659343,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697790945
    },
    {
        "content": "<p>so don't put too much in it since it doesn't get the mmap goodness</p>",
        "id": 397659359,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697790948
    },
    {
        "content": "<p>(this copying process is also exactly what makes it more segfault-resistant than regular lean objects)</p>",
        "id": 397659680,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791052
    },
    {
        "content": "<p>A <code>ByteArray</code> just provides more flexibility and potential space saving for the header format whereas a number would give at most 64 bits and a string may be space inefficient and require undesirable parsing overhead.</p>",
        "id": 397659764,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697791082
    },
    {
        "content": "<p>There is also the matter of the very large (and excitable) magic number at the beginning of every olean file, <code>oleanfile!!!!!!!</code>. I can't resist the idea of adding versioning as <code>oleanfile!!!1!!!</code>, <code>oleanfile!!!2!!!</code> etc</p>",
        "id": 397659951,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791136
    },
    {
        "content": "<p>I think 32 bits is more than enough for a version number</p>",
        "id": 397660264,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791240
    },
    {
        "content": "<p>if that's the only requirement</p>",
        "id": 397660289,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791250
    },
    {
        "content": "<p>if you want to store random extra data I would just make use of some spare padding in the file</p>",
        "id": 397660378,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791282
    },
    {
        "content": "<p>Ideally, Lake would eventually store a cryptographic hash of the olean inputs.</p>",
        "id": 397660579,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697791343
    },
    {
        "content": "<p>Though that is likely very long-term.</p>",
        "id": 397660646,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697791369
    },
    {
        "content": "<p>that could be part of the lean data structure proper though, no?</p>",
        "id": 397660696,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791384
    },
    {
        "content": "<p>like in the <code>EnvHeader</code></p>",
        "id": 397660732,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791399
    },
    {
        "content": "<p>No? Wouldn't that still have ABI problems if the core data structures change? Inversely, it would also be helpful when the inputs hopefully do not change every new Lean version and we can reuse oleans more often.</p>",
        "id": 397660989,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697791484
    },
    {
        "content": "<p>Currently the olean header consists only of the magic number, the offset of the beginning of the file (used for relocating all lean objects if this location needs to be modified), and the pointer to the root object</p>",
        "id": 397661033,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791499
    },
    {
        "content": "<p>Yes, it would have ABI problems, the version is intended to defend against ABI changes</p>",
        "id": 397661141,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791535
    },
    {
        "content": "<p>Adding hashes to the olean file indeed make me concerned about lots of files getting lots of spurious updates</p>",
        "id": 397661360,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791600
    },
    {
        "content": "<p>The point of having an olean version rather than just using the toolchain version is that sometimes the toolchain changes without ABI changes and you can capitalize on this</p>",
        "id": 397661605,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791681
    },
    {
        "content": "<p>in particular, rc -&gt; stable</p>",
        "id": 397661665,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697791689
    },
    {
        "content": "<p>Now that lean-rc4 is out, how are we meant to solve the issue described [https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/397441263]? I had the <code>file: ./x�]/./Cache/Main.lean</code> error message. I tried removing <code>lakefile.olean</code> and now every <code>lake exe cache get</code> simply gets a segmentation fault. This is in Mathlib master.</p>",
        "id": 397985790,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698022655
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span></p>",
        "id": 397985801,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698022662
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> From that previous thread, the problem was that you also need to delete the <code>lakefile.olean</code> of all dependences as well (i.e., those in <code>lake-packages</code>). You could also just delete the whole <code>lake-packages</code> directory and start over.</p>",
        "id": 397986087,
        "sender_full_name": "Mac Malone",
        "timestamp": 1698022814
    },
    {
        "content": "<p>Thanks, it seems to work.</p>",
        "id": 397986203,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698022868
    },
    {
        "content": "<p><code>lake exe cache get</code> has stopped working for me after getting the latest master (currently at <a href=\"https://github.com/leanprover-community/mathlib4/commit/97065271c0e9912747251428d48389cc216202ff\">this commit</a>, which happens to be one of my own PRs though this is not relevant).</p>\n<p>I am running MacOS and I see just the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">➜</span>  <span class=\"n\">mathlib4</span> <span class=\"n\">git</span><span class=\"o\">:(</span><span class=\"n\">master</span><span class=\"o\">)</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">3960</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">3960</span><span class=\"bp\">/</span><span class=\"mi\">3960</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">some</span> <span class=\"n\">files</span> <span class=\"n\">were</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">cache.</span>\n<span class=\"n\">This</span> <span class=\"n\">usually</span> <span class=\"n\">means</span> <span class=\"n\">that</span> <span class=\"n\">your</span> <span class=\"kn\">local</span> <span class=\"n\">checkout</span> <span class=\"n\">of</span> <span class=\"n\">mathlib4</span> <span class=\"n\">has</span> <span class=\"n\">diverged</span> <span class=\"k\">from</span> <span class=\"n\">upstream.</span>\n<span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">push</span> <span class=\"n\">your</span> <span class=\"n\">commits</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">branch</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">mathlib4</span> <span class=\"n\">repository</span><span class=\"o\">,</span> <span class=\"n\">CI</span> <span class=\"n\">will</span> <span class=\"n\">build</span> <span class=\"n\">the</span> <span class=\"n\">oleans</span> <span class=\"n\">and</span> <span class=\"n\">they</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">available</span> <span class=\"n\">later.</span>\n<span class=\"n\">No</span> <span class=\"n\">cache</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">decompress</span>\n</code></pre></div>",
        "id": 405108171,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1701347802
    },
    {
        "content": "<p>Anyone else having issues?</p>",
        "id": 405108336,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1701347865
    },
    {
        "content": "<p>I think that I had the same this morning, but I erased <code>.lake</code> and then it worked.</p>",
        "id": 405108466,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1701347895
    },
    {
        "content": "<p>Thanks, that worked.</p>",
        "id": 405108572,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1701347934
    },
    {
        "content": "<p>(Maybe I also merged master... there has been a new release, I think.)</p>",
        "id": 405108608,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1701347945
    },
    {
        "content": "<p>Needless to say, this should not be necessary.</p>",
        "id": 405108620,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1701347950
    },
    {
        "content": "<p>I think <code>lake exe cache get!</code> would be helpful too?</p>",
        "id": 405111778,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1701349010
    },
    {
        "content": "<p>If someone can reproduce this that would be helpful</p>",
        "id": 405207078,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701379399
    },
    {
        "content": "<p>I've had this multiple times when bumping old branches to the latest lean today</p>",
        "id": 405212514,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701380994
    },
    {
        "content": "<p>I think <code>lake clean</code> always resolved things</p>",
        "id": 405212578,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701381007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> and I debugged this today. Repro:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git<span class=\"w\"> </span>checkout<span class=\"w\"> </span>1937b42b\nrm<span class=\"w\"> </span>-rf<span class=\"w\"> </span>.lake\nlake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>85239de6\nlake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get<span class=\"w\">  </span><span class=\"c1\"># fails to find anything</span>\nlake<span class=\"w\"> </span>clean\nlake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get<span class=\"w\">  </span><span class=\"c1\"># works</span>\n</code></pre></div>\n<p>The problem is a combination of several factors:</p>\n<ul>\n<li>The <code>4.3.0</code> release was accidentally a re-tag of the same commit as <code>4.3.0-rc2</code> (It's supposed to be the same content, but usually there are some release notes or something so that it's not exactly the same commit)</li>\n<li>The <code>cache</code> executable uses <code>Lean.versionString</code> for the root hash, which is different between <code>4.3.0-rc2</code> and <code>4.3.0</code> because it contains the literal toolchain name in it</li>\n<li>This version string is baked into the <code>cache</code> executable itself based on the version used to compile <code>cache</code>, it is not determined at runtime</li>\n<li>Lake only recompiles executables when the lean git hash changes, so in the second <code>lake exe cache get</code> invocation above it does not recompile <code>cache</code> and so it uses the <code>4.3.0-rc2</code> version string in the root hash, which throws all the hashes off</li>\n<li>Doing <code>lake clean</code> deletes the cache executable, and the second run rebuilds it with the correct <code>Lean.versionString</code> so it finds the files as expected</li>\n</ul>",
        "id": 405231700,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701389349
    },
    {
        "content": "<p>The easy short term fix is to only use <code>Lean.githash</code> in <code>cache</code> instead of <code>Lean.versionString</code>, so that lake invalidates it properly. <a href=\"https://github.com/leanprover-community/mathlib4/pull/8755\">#8755</a></p>",
        "id": 405232700,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701389801
    }
]