[
    {
        "content": "<p>I would really really like to get rid of the command line completely in the teaching process, because I am targeting mathematicians who may never have seen one  Here is my dream setup. Windows user with no python or decent command line surfs to the GitHub page of my lean 4 course repo which has mathlib as a dependency, downloads the zip file, places it in a directory they understand (so no problem for command line noobs who don't know about cd or pwd), double clicks to unzip, opens folder with VS Code, gets a pop-up saying \"shall I download mathlib cached oleans?\" which they're told to answer \"yes\" to, and then every now and again they get a popup saying \"Kevin uploaded more files to the repo and also bumped mathlib, click \"yes\" to pull master from GH and download new mathlib cached oleans\". I don't see why this can't be possible and the sooner we can get rid of the command line the better in my view.</p>",
        "id": 324321722,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674924186
    },
    {
        "content": "<p>A message was moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/tagged.20releases.3F\">#mathlib4 &gt; tagged releases?</a> by <span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span>.</p>",
        "id": 324323563,
        "sender_full_name": "Notification Bot",
        "timestamp": 1674925028
    },
    {
        "content": "<p>(I'll be teaching in lean 4 in October)</p>",
        "id": 324323884,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674925183
    },
    {
        "content": "<p>What about Patrick's self-contained solution with VSCodium?</p>",
        "id": 324372125,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1674958694
    },
    {
        "content": "<p>From what I remember, each module/lecture was packed in a compressed folder that contained VSCodium, Lean 3 and the respective sources. So his students weren't even required to have VS Code installed.</p>",
        "id": 324372350,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1674958922
    },
    {
        "content": "<p>I would like the option to change the course (and the version of mathlib it runs on) as it is running. Will this suggestion allow me to do that?</p>",
        "id": 324377205,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674962098
    },
    {
        "content": "<p>What do you mean by \"as it is running\"? You could just create new zip files, but if you mean \"during a lecture\" then the answer is no. Also, students would essentially lose their work by unzipping a new file. The old work would be in the old folder.</p>",
        "id": 324381192,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1674965770
    },
    {
        "content": "<p>I have a private repository for each student, all added as remotes in a folder and a branch tracking the <code>main</code> branch for each of the repositories. With such a setup I could in principle have a script that pushes my <code>main</code> onto the mains of each of these repositories when I want to update.</p>\n<p>So the following, along with some nice way to handle local changes such as the script of <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span>,  it seems that with work shifted to a TA/Instructor for the setup, one could:</p>\n<ul>\n<li>Create a repository for each student by importing  the main course repository (or using it as a template).</li>\n<li>Have a folder with remotes and branches for each of these.</li>\n<li>Push changes in main onto each of the remotes by a script.</li>\n<li>Then the student will only have to sync with git in VS Code (modulo local changes clash).</li>\n</ul>\n<p>When a student broke his build I did use the setup to undo the change in lake manifest and fix it. But otherwise I have asked the students to set upstream and pull.</p>\n<p>(In my case I took the view that being willing to do a certain amount of \"plumbing\" is a prerequisite for the course. Indeed I told the students that people in Lean development, VS Code etc have worked hard to make things easy for them and I am happy to help. But some effort is needed from their side if they wanted to take the course.)</p>",
        "id": 324384261,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674968738
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/removal.20of.20command.20line.20for.20teaching/near/324372350\">said</a>:</p>\n<blockquote>\n<p>From what I remember, each module/lecture was packed in a compressed folder that contained VSCodium, Lean 3 and the respective sources. So his students weren't even required to have VS Code installed.</p>\n</blockquote>\n<p>My situation is simpler because they download the exercises for the whole semester on day 1. There is no update during the semester.</p>",
        "id": 324401169,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674982055
    },
    {
        "content": "<p>By \"as it is running\" I mean \"during the semester\" because I'm not organised enough to prepare an entire course before it starts</p>",
        "id": 324414902,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674989472
    },
    {
        "content": "<p>I mean, I could just dump last year's course into this year's repo but I want to tinker because my course is quite open-ended and I ask the students what they want me to prioritise as the course proceeds</p>",
        "id": 324415061,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674989568
    },
    {
        "content": "<p>From my read, what you ultimately want is a VS Code extension that hides all that complexity behind buttons. Then you could distribute a pack with VSCodium + Git + Lean 4 + your extension installed.</p>\n<p>The custom extension would manage Git commands for your students. So there would be a button to enter a module (fetch + checkout to a branch). There would also be a button to submit exercises (commit + push).</p>\n<p>Behind the curtains, you would have, say, a <code>natural-numbers</code> branch and your students would be able to fetch that. Then Alan Turing would be able to submit his solutions by pushing to a <code>natural-numbers/alan-turing</code> branch.</p>\n<p>This solution, however, does not account for privacy and students who know Git/GitHub would be able to peek on the solutions of their classmates. But either way, I just wanted to make the point that a custom VS Code extension might be a good solution for hiding things behind buttons.</p>",
        "id": 324427437,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1674995449
    },
    {
        "content": "<p>In my course there are no homeworks, all I need them to be able to do is pull.</p>",
        "id": 324448429,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1675004665
    },
    {
        "content": "<p>Would the approach in <a href=\"https://www.youtube.com/watch?v=yZo6k48L0VY\">https://www.youtube.com/watch?v=yZo6k48L0VY</a> not work? There is no command line there. And VS Code lets you \"sync\" (including pulls and pushes).</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"yZo6k48L0VY\" href=\"https://www.youtube.com/watch?v=yZo6k48L0VY\"><img src=\"https://uploads.zulipusercontent.net/a7609547f4ca03a59f753da152909297f1ffe21d/68747470733a2f2f692e7974696d672e636f6d2f76692f795a6f366b34384c3056592f64656661756c742e6a7067\"></a></div>",
        "id": 324448812,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1675004827
    },
    {
        "content": "<p>I would guess that the main gap is <code>lake exe cache get</code>, which the extension doesn't (yet) know how to do</p>",
        "id": 324453413,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675006827
    }
]