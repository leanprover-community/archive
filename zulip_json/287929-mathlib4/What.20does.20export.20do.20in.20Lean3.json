[
    {
        "content": "<p>I'm trying to port <code>model_theory/syntax</code>. below the definition <a href=\"https://leanprover-community.github.io/mathlib_docs/find/first_order.language.term\">docs#first_order.language.term</a> there is the line <code>export term</code>. What does this do and how do I port it to Lean4?</p>",
        "id": 345700373,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1680188008
    },
    {
        "content": "<p>It's like a perpetual <code>open language (term)</code>. Not sure how to translate it.</p>",
        "id": 345700843,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1680188097
    },
    {
        "content": "<p><a href=\"https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html?highlight=export\">https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html?highlight=export</a></p>",
        "id": 345701005,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680188126
    },
    {
        "content": "<p>And this suggests that it should work in lean4 as well: <a href=\"https://leanprover.github.io/theorem_proving_in_lean4/interacting_with_lean.html?highlight=export#more-on-namespaces\">https://leanprover.github.io/theorem_proving_in_lean4/interacting_with_lean.html?highlight=export#more-on-namespaces</a></p>",
        "id": 345701463,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680188232
    },
    {
        "content": "<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span> <span class=\"bp\">|</span> <span class=\"n\">bar</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Foo</span>\n<span class=\"c1\">--#check bar &lt;-- error</span>\n<span class=\"kn\">export</span> <span class=\"n\">Foo</span> <span class=\"o\">(</span><span class=\"n\">bar</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"n\">bar</span> <span class=\"c1\">--&lt;-- no error</span>\n</code></pre></div>",
        "id": 345701997,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680188340
    },
    {
        "content": "<p>Thanks</p>",
        "id": 345707652,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1680189334
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory.abelian.basic</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kn\">export</span> <span class=\"n\">nat</span> <span class=\"o\">(</span><span class=\"n\">succ</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">succ</span> <span class=\"c1\">-- succ : ℕ → ℕ</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">category_theory</span>\n\n<span class=\"c1\">-- #check succ -- fails</span>\n<span class=\"c1\">-- #check category_theory.succ -- fails as well</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">succ</span> <span class=\"c1\">-- succ : ℕ → ℕ</span>\n</code></pre></div>\n<p>what a funny thing! I never knew you could do that.</p>",
        "id": 345736403,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680195296
    },
    {
        "content": "<p>Oh, I knew it could do that, but I never considered whether we should. <span class=\"user-mention\" data-user-id=\"459227\">@Violeta Hernández</span>, what do you think of <code>export order (succ)</code> in the namespace <code>ordinal</code>?</p>",
        "id": 345736750,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1680195380
    },
    {
        "content": "<p>Seems useful</p>",
        "id": 345737659,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1680195610
    },
    {
        "content": "<p>I think that's the only thing we use from that namespace</p>",
        "id": 345737696,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1680195621
    }
]