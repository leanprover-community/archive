[
    {
        "content": "<p>I'm a bit worried that <a href=\"https://leanprover-community.github.io/mathlib-port-status/out-of-sync\">https://leanprover-community.github.io/mathlib-port-status/out-of-sync</a> currently has 87 entries, and would like to pay down some of this debt.</p>",
        "id": 344720670,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679869334
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, would it be possible to make the list sortable by the age of the \"verified at\" commit, rather than the sha itself?</p>\n<p>This would be useful for identifying the egregious cases where the forwarding porting should have happened long ago.</p>",
        "id": 344720741,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679869391
    },
    {
        "content": "<p>Otherwise, I was thinking to take the following steps:</p>\n<ul>\n<li>make an effort to approve forwarding port PRs that are ready to go, which will hopefully reduce the list some</li>\n<li>collate the out-of-sync files according to the author of the mathlib3 PR, and then message them reminding them about their list of forwarding porting jobs</li>\n<li>start dealing with the ones that appear to be abandoned by their authors.</li>\n</ul>",
        "id": 344720853,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679869478
    },
    {
        "content": "<p>If anyone has advice on how I could move this along more effectively, I'm happy to hear. :-)</p>",
        "id": 344720870,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679869497
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/2926\">https://github.com/leanprover-community/mathlib4/pull/2926</a> will shrink that number by 5, and has already been reviewed :)</p>",
        "id": 344720926,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679869549
    },
    {
        "content": "<p>What do you mean by \"age of the verified at\" commit?</p>",
        "id": 344720964,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679869563
    },
    {
        "content": "<p>Is that interesting? Doesn't that just mean that the original port was long ago, not the mathlib3 PR that since made it out of sync?</p>",
        "id": 344721004,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679869583
    },
    {
        "content": "<p>Adding authors to the out-of-sync table was in the back of my mind; not least because I'm sure there are forward-ports I've forgotten about myself</p>",
        "id": 344721060,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679869629
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> forward-porting <a href=\"https://github.com/leanprover-community/mathlib/pull/17961\">#17961</a> (which only just landed) will knock down the list by another  8.</p>",
        "id": 344721222,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679869781
    },
    {
        "content": "<p>Yes, you're right, sorry, I want to sort by the age of the mathlib3 PR, which I now understand I can already do, by sorting on the <code>mathlib3 changes</code> column.</p>\n<p>Am I right, then, that <code>category_theory.structured_arrow</code> is the \"longest out-of-sync\" file, then?</p>",
        "id": 344721363,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679869861
    },
    {
        "content": "<p>I think sorting on the \"changes in mathlib3\" columns sorts by \"most out of sync\"</p>",
        "id": 344722256,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679870465
    },
    {
        "content": "<p>As in \"has the most independent PRs touching this file\"</p>",
        "id": 344722269,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679870474
    },
    {
        "content": "<p>Ah I see the confusion</p>",
        "id": 344722301,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679870503
    },
    {
        "content": "<p>\"newest first\" means \"within the cell, the commits are in this order\" not \"the rows are sorted this way\"</p>",
        "id": 344722315,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679870517
    },
    {
        "content": "<p>So the conclusion is that <code>set_theory.zfc.basic</code> is massively out of sync; but that's probably fine because the porting PR was abandoned anyway, and we should throw it out and start over</p>",
        "id": 344722460,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679870587
    },
    {
        "content": "<p><code>algebra.star.self_adjoint</code> is next most out of sync, which is my fault and I intend to address by reporting the file from scratch</p>",
        "id": 344722511,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679870618
    },
    {
        "content": "<p>\"date of oldest unsynced mathlib3 change\" would be a reasonable new column to add</p>",
        "id": 344722654,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679870694
    },
    {
        "content": "<p>Ugh, this is such a mess.</p>\n<p>As an example: <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/data/list/perm\">https://leanprover-community.github.io/mathlib-port-status/file/data/list/perm</a> shows that there are three different mathlib3 PRs that touched this file.</p>\n<p>There is an open PR for mathilb4, namely <a href=\"https://github.com/leanprover-community/mathlib4/pull/3076\">!4#3076</a>, which updates the SHA, but does not make any mention of those three PRs.</p>\n<p>In fact, the three mathlib3 PRs mentioned there have all actually been forward ported, but apparently in PRs that did not update the SHA, e.g. <a href=\"https://github.com/leanprover-community/mathlib4/pull/1509\">https://github.com/leanprover-community/mathlib4/pull/1509</a>.</p>\n<p>But it takes 20 minutes to decipher this and work out what to do, let alone do it. And there are 86 others on this list.</p>",
        "id": 344722902,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679870852
    },
    {
        "content": "<p>Unless I'm misunderstanding how bad this is, I think we need to hard freeze already ported files.</p>",
        "id": 344722989,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679870893
    },
    {
        "content": "<p>I would guess that about 1/3 of the mess is actually backports of refactors that happened during porting</p>",
        "id": 344723105,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679870982
    },
    {
        "content": "<p>Those are the ones that usually take longest to decipher</p>",
        "id": 344723203,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679871035
    },
    {
        "content": "<p>Which is to say; you picked a particularly nasty example</p>",
        "id": 344723273,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679871085
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3005\">!4#3005</a> is an example of what the easy end of the spectrum looks like</p>",
        "id": 344723612,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679871258
    },
    {
        "content": "<p>Okay, I've dealt with everything on the <a href=\"https://bit.ly/3cKk3ld\">#queue4</a> with label <code>mathlib-pair</code>, except for </p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/3101\">https://github.com/leanprover-community/mathlib4/pull/3101</a>, which <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> had self-assigned, and</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/3077\">https://github.com/leanprover-community/mathlib4/pull/3077</a>, which I've assigned to <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>, who I think wants to make further mathlib3 changes before resolving this one.</li>\n</ul>",
        "id": 344726129,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679872943
    },
    {
        "content": "<p>Now on to the things not on the <a href=\"https://bit.ly/3cKk3ld\">#queue4</a>, I guess. :-)</p>",
        "id": 344726151,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679872957
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3077\">!4#3077</a> is now on the queue. The fixes were already made on the mathlib side.</p>",
        "id": 344726332,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679873123
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 344726408,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679873166
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib-port-status/file/algebra/order/absolute_value\">https://leanprover-community.github.io/mathlib-port-status/file/algebra/order/absolute_value</a></p>\n<p>is ... not looking healthy. It is way out of date with master. <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>, would you be able to update us on what should happen here?</p>",
        "id": 344726441,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679873211
    },
    {
        "content": "<p>The open forward-porting PR (<a href=\"https://github.com/leanprover-community/mathlib4/pull/1238\">!4#1238</a>) is completely stuck due to obscure errors I have no idea how to fix.</p>",
        "id": 344726476,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679873261
    },
    {
        "content": "<p>Incidentally, we since found out that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_ring_norm\">docs#mul_ring_norm</a> was mathematically a duplicate of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/absolute_value\">docs#absolute_value</a>. So I think the correct thing to do here is to give up on my current porting PR, fix mathlib3, then report.</p>",
        "id": 344726594,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679873350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/forward.20porting/near/344726441\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib-port-status/file/algebra/order/absolute_value\">https://leanprover-community.github.io/mathlib-port-status/file/algebra/order/absolute_value</a></p>\n<p>is ... not looking healthy. It is way out of date with master. <span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span>, would you be able to update us on what should happen here?</p>\n</blockquote>\n<p>This one is particularly bad because the change happened before we were tracking SHAs properly (<a href=\"https://github.com/leanprover-community/mathlib4/pull/1238#discussion_r1104828588\">see github comment</a>)</p>",
        "id": 344726723,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679873479
    },
    {
        "content": "<p>And Jireh forward-ported <em>part</em> of the changes. So there isn't a SHA that you can meaningfully track.</p>",
        "id": 344726796,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679873543
    },
    {
        "content": "<blockquote>\n<p>So I think the correct thing to do here is to give up on my current porting PR</p>\n</blockquote>\n<p>agreed</p>\n<blockquote>\n<p>fix mathlib3</p>\n</blockquote>\n<p>possible not worth it</p>\n<blockquote>\n<p>then report.</p>\n</blockquote>\n<p>Agreed, I think it would be easiest to start from a clean mathport oneshot output</p>",
        "id": 344726809,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679873575
    },
    {
        "content": "<p>There's a separate reason why we should fix mathlib3: We are missing <code>absolute_value_class</code>, which seems to have hindered the original port.</p>",
        "id": 344726846,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679873633
    },
    {
        "content": "<p>I don't like that things like <a href=\"https://github.com/leanprover-community/mathlib4/pull/1470\">https://github.com/leanprover-community/mathlib4/pull/1470</a> are labelled as <code>mathlib-pair</code> at this point. They are empty placeholder PRs, and should be labelled to reflect this. Maybe <code>future-mathlib-pair</code>?</p>\n<p>I want to try and deal with as much of the <code>mathlib-pair</code> list as possible, and these ones are just a distraction (and my preferred solution to them is \"close the underlying mathlib3 PR\", but I'm not necessarily advocating that today :-).</p>",
        "id": 344727368,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874141
    },
    {
        "content": "<p>Well, they aren't labelled <code>awaiting-review</code></p>",
        "id": 344727418,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679874226
    },
    {
        "content": "<p>Yes, but we are <em>so far</em> behind on dealing with forward porting issues, that we need to be going through all these PRs, to understand their status and get them moving again. So it's not good enough to just say \"it's not labelled awaiting-review, so we can ignore it\".</p>",
        "id": 344727512,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874303
    },
    {
        "content": "<p>The point being that once we don't have a backlog of <code>mathlib-pair</code> PRs, we can start following up with the \"owners\" of forward porting obligations. While there is a backlog this is hard to do.</p>",
        "id": 344727545,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874344
    },
    {
        "content": "<p>I might add <code>blocked-by-other-PR</code> labels to <code>mathlib-pair</code> PRs where the mathlib3 PR has yet to be merged? Or should I just add an explicit label for this?</p>",
        "id": 344727605,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874386
    },
    {
        "content": "<p>I don't understand. Surely the presence of matching up PRs <em>helps</em>, right?</p>",
        "id": 344727606,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679874387
    },
    {
        "content": "<p>Yes! I want the matching up PRs</p>",
        "id": 344727613,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874397
    },
    {
        "content": "<p>I just want to know that they are only there as placeholders for future work.</p>",
        "id": 344727621,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874408
    },
    {
        "content": "<p>If we remove <code>mathlib-pair</code> labels from the placeholders then they won't show up in the dashboard, which in turn means that people might recreate them</p>",
        "id": 344727622,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679874411
    },
    {
        "content": "<p>Do you know about the mathlib4 project Eric made?</p>",
        "id": 344727624,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679874414
    },
    {
        "content": "<p>I consider that a failed experiment</p>",
        "id": 344727633,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679874424
    },
    {
        "content": "<p>I do want to keep the <code>mathlib-pair</code> label on them.</p>",
        "id": 344727638,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874431
    },
    {
        "content": "<p>I just want some additional label that shows that the mathlib3 PR hasn't even been approved yet.</p>",
        "id": 344727660,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874452
    },
    {
        "content": "<p>I think in practice the need to create placeholder PRs is now gone</p>",
        "id": 344727662,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679874455
    },
    {
        "content": "<p>We should keep around the old ones to fulfill the promises in the mathlib3 commits that reference them</p>",
        "id": 344727672,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679874475
    },
    {
        "content": "<p>In <a href=\"https://github.com/orgs/leanprover-community/projects/4\">https://github.com/orgs/leanprover-community/projects/4</a> there already is a place for matching up PRs whose mathlib PR hasn't gone through yet.</p>",
        "id": 344727720,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679874491
    },
    {
        "content": "<p>I don't understand what <a href=\"https://github.com/orgs/leanprover-community/projects/4\">https://github.com/orgs/leanprover-community/projects/4</a> is useful for, sorry. It seems to be showing me the things I don't care about, rather than the things I do. :-)</p>",
        "id": 344727957,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679874793
    },
    {
        "content": "<p>I built it as an attempt to be useful, but concluded it didn't really hit the mark. <span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span>'s improvements to the dashboard largely replace it.</p>",
        "id": 344727972,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679874817
    },
    {
        "content": "<p>The data there is all out of date now because I stopped updating it</p>",
        "id": 344728050,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679874871
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/forward.20porting/near/344721060\">said</a>:</p>\n<blockquote>\n<p>Adding authors to the out-of-sync table was in the back of my mind; not least because I'm sure there are forward-ports I've forgotten about myself</p>\n</blockquote>\n<p>Done. <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>, <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>, and I are each responsible for <del>about 15 files</del> 18, 13, and 9 files respectively</p>",
        "id": 344729275,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679875951
    },
    {
        "content": "<p>I'll have a look later tonight.</p>",
        "id": 344743406,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1679882528
    }
]