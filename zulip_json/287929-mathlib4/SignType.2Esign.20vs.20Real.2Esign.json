[
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SignType.sign#doc\">docs#SignType.sign</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Real.sign#doc\">docs#Real.sign</a>. Should we deduplicate?</p>",
        "id": 397967317,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1698003360
    },
    {
        "content": "<p>(and expand API about <code>SignType.sign</code> if needed)</p>",
        "id": 397967368,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1698003389
    },
    {
        "content": "<p>and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Int.sign#doc\">docs#Int.sign</a></p>",
        "id": 397968631,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1698004701
    },
    {
        "content": "<p>And yes please do! I tried deduplicating <code>SignType.sign</code> and <code>Int.sign</code> before but didn't get to the end.</p>",
        "id": 397968676,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1698004748
    },
    {
        "content": "<p>I'll open an issue for now.</p>",
        "id": 397968947,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1698004947
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/SignType.2Esign.20vs.20Real.2Esign/near/397968676\">said</a>:</p>\n<blockquote>\n<p>And yes please do! I tried deduplicating <code>SignType.sign</code> and <code>Int.sign</code> before but didn't get to the end.</p>\n</blockquote>\n<p>This is now much harder because the latter is in Std and the former in mathlib</p>",
        "id": 397971001,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698007353
    },
    {
        "content": "<p>But we can at least lose <code>Real.sign</code> without that problem</p>",
        "id": 397971007,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698007371
    },
    {
        "content": "<p>Yes, we won't be able to get rid of <code>Int.sign</code> because it is extensively used in programming and so needs to be there directly, not mediated by a typeclass.</p>",
        "id": 397974469,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698011726
    },
    {
        "content": "<p>If we relaxed <code>PreOrder</code> to <code>LT</code> on <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SignType.sign#doc\">docs#SignType.sign</a> then I don't see the typeclasses being an obstacle for Std</p>",
        "id": 397974529,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698011793
    }
]