[
    {
        "content": "<p>We've ended up with an unfortunate race condition in this PR. The sequence of things that happened was:</p>\n<ul>\n<li>The PR was not ready to port</li>\n<li><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> made a PR (<a href=\"https://github.com/leanprover-community/mathlib/pull/18608\">#18608</a>) that would make it ready to port</li>\n<li>The port dashboard reads in the latest mathlib3 and declares it ready-to-port</li>\n<li><span class=\"user-mention\" data-user-id=\"412682\">@Moritz Doll</span> dutifully makes a PR, but mathport still has the old not-ready-to-port version</li>\n</ul>",
        "id": 342856482,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679185599
    },
    {
        "content": "<p>I guess the easy solution is to have <a href=\"https://leanprover-community.github.io/mathlib-port-status\">#port-dashboard</a> perform the dependency analysis on the version mathport was last run on; but then that information will be more stale than it currently is</p>",
        "id": 342856684,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679185726
    },
    {
        "content": "<p>In this case it is not a big problem, but generally it might be annoying. Although I don't know whether it is worth the effort to fix this.</p>",
        "id": 342862255,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1679189356
    },
    {
        "content": "<p>I expect that this will be sufficiently rare that we should not go out of our way to fix it.</p>",
        "id": 342862762,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679189805
    },
    {
        "content": "<p>Maybe we should just use <a href=\"https://github.com/leanprover-community/mathlib4/wiki/port-comments\">#port-comments</a> at step 2 to record what's going on in future</p>",
        "id": 342864404,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679191233
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/4459289886\">https://github.com/leanprover-community/mathlib4/actions/runs/4459289886</a> this workflow for <a href=\"https://github.com/leanprover-community/mathlib4/pull/2983\">!4#2983</a> has been building for 4+ hours and yet has not reached a conclusion</p>",
        "id": 342910298,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1679222109
    },
    {
        "content": "<p>Somebody needs to stop it manually or we'll hit usage limits</p>",
        "id": 342910471,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1679222174
    },
    {
        "content": "<p>It's running on servers we own, there are no usage limits relevant here.</p>",
        "id": 342910887,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679222384
    },
    {
        "content": "<p>Probably the server finished but lost connection to github and couldn't report it, so I guess it doesn't matter that you hit \"cancel\".</p>",
        "id": 342911011,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679222433
    },
    {
        "content": "<p>Now what should we do about the non-terminating workflow?</p>",
        "id": 342911149,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1679222520
    },
    {
        "content": "<p>never mind, it was terminated</p>",
        "id": 342911549,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1679222697
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/TY6FxszxtOQBicSWVNDgGH5Y/image.png\">image.png</a> Currently the new file hangs on this theorem, at least locally</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/TY6FxszxtOQBicSWVNDgGH5Y/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/TY6FxszxtOQBicSWVNDgGH5Y/image.png\"></a></div>",
        "id": 342920656,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1679226705
    }
]