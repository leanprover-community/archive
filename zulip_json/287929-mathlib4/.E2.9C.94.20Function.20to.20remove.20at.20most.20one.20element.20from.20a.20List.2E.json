[
    {
        "content": "<p>Is there a function in mathlib4 to remove a single element from a given list?</p>\n<p>That is, functions such as:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">remove_once</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">List</span> <span class=\"n\">Nat</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n\">as</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"k\">then</span> <span class=\"n\">as</span> <span class=\"k\">else</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n\">remove_once</span> <span class=\"n\">x</span> <span class=\"n\">as</span>\n</code></pre></div>",
        "id": 395516609,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1696757516
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.erase#doc\">docs#List.erase</a> ?</p>",
        "id": 395517290,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696757753
    },
    {
        "content": "<p>Thanks!!!</p>",
        "id": 395517381,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1696757773
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 395517835,
        "sender_full_name": "Notification Bot",
        "timestamp": 1696757919
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as unresolved.</p>",
        "id": 395520992,
        "sender_full_name": "Notification Bot",
        "timestamp": 1696758721
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> </p>\n<p>Thank you very much.<br>\nI want the following proposition, is it in Mathlib4 ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">BEq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">List.erase</span> <span class=\"n\">l</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">=</span> <span class=\"n\">l.length</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 395521701,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1696758970
    },
    {
        "content": "<p>Try <code>by exact?</code></p>",
        "id": 395521789,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696759004
    },
    {
        "content": "<p>I think it's false as you stated it</p>",
        "id": 395521836,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696759020
    },
    {
        "content": "<p><code>apply?</code>, <code>exact?</code> do not resolve this.</p>",
        "id": 395521917,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1696759049
    },
    {
        "content": "<p>Yeah, it's false because <code>BEq</code> doesn't have to be reflexive</p>",
        "id": 395522000,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696759077
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> List.erase, List.length</p>",
        "id": 395522134,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696759114
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> List.erase, List.length</p>",
        "id": 395522197,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696759137
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Std/Data/List/Lemmas.html#List.length_erase_of_mem\">List.length_erase_of_mem</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/List/Basic.html#List.length_erase_add_one\">List.length_erase_add_one</a></p>",
        "id": 395522202,
        "sender_full_name": "loogle",
        "timestamp": 1696759138
    },
    {
        "content": "<p>Thanks for pointing that out.<br>\nI made a mistake in the assumption I gave for α.<br>\nWhat is the appropriate assumption?</p>",
        "id": 395522277,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1696759167
    },
    {
        "content": "<p>It's the one in the true lemma linked above</p>",
        "id": 395522407,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696759210
    },
    {
        "content": "<p><code>[DecidableEq α]</code>... Thanks.</p>",
        "id": 395522514,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1696759296
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 395522612,
        "sender_full_name": "Notification Bot",
        "timestamp": 1696759359
    }
]