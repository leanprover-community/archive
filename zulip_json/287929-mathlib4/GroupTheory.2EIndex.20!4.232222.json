[
    {
        "content": "<p>The only remaining errors seem to be about <code>to_additive</code> failing to translate a decl. I get errors like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">Subgroup</span> <span class=\"n\">G</span>\n<span class=\"n\">argument</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">AddGroup</span> <span class=\"n\">G</span>\n<span class=\"n\">but</span> <span class=\"n\">function</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"o\">[</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span>\n</code></pre></div>\n<p>on statements like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[to_additive (attr := simp)]</span> <span class=\"c1\">-- ← error is here</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">index_top</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">index</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Cardinal.toNat_eq_one_iff_unique.mpr</span> <span class=\"o\">⟨</span><span class=\"n\">QuotientGroup.subsingleton_quotient_top</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">⟩⟩</span>\n</code></pre></div>\n<p>Not sure how to debug this.</p>",
        "id": 327527792,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676289030
    },
    {
        "content": "<p>Can you try putting the type arguments that need translation first, if they aren't yet?</p>",
        "id": 327531425,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1676290038
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"n\">index_top</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">],</span> <span class=\"n\">index</span> <span class=\"bp\">⊤</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>looks alright to me.</p>",
        "id": 327537309,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676291932
    },
    {
        "content": "<p>Too bad, that was my only guess</p>",
        "id": 327537731,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1676292058
    },
    {
        "content": "<p>Is it stuck if you replace the proof with <code>sorry</code>?</p>",
        "id": 327538466,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676292313
    },
    {
        "content": "<p>It is not</p>",
        "id": 327539933,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676292727
    },
    {
        "content": "<p>How much of the proof needs to be replaced with sorry for it to work?</p>",
        "id": 327540780,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676292976
    },
    {
        "content": "<p>Is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=QuotientGroup.subsingleton_quotient_top#doc\">docs4#QuotientGroup.subsingleton_quotient_top</a> correctly additivized?</p>",
        "id": 327540958,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676293036
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[to_additive (attr := simp)]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">index_top</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">index</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Cardinal.toNat_eq_one_iff_unique.mpr</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>is broken</p>",
        "id": 327547857,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676295011
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/GroupTheory.2EIndex.20!4.232222/near/327540958\">said</a>:</p>\n<blockquote>\n<p>Is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=QuotientGroup.subsingleton_quotient_top#doc\">docs4#QuotientGroup.subsingleton_quotient_top</a> correctly additivized?</p>\n</blockquote>\n<p>Looks perfectly fine to me</p>",
        "id": 327548014,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676295052
    },
    {
        "content": "<p>Somehow replacing <code>Cardinal.toNat_eq_one_iff_unique</code> with <code>Nat.card_eq_one_iff_unique</code> fixes the issue, although there are some later issues in the file</p>",
        "id": 327701546,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1676356874
    },
    {
        "content": "<p>I think I've fixed all the errors in the file, but this bug with these Cardinal lemmas is very perplexing</p>",
        "id": 327702733,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1676357609
    }
]