[
    {
        "content": "<p>Coming back to a mathlib4-using project of mine that I haven't touched in a few month, I ran <code>lake update</code> and <code>cp lake-packages/mathlib/lean-toolchain .</code>, but if I now run <code>lake build</code> I get build errors when building <code>std</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">HaveI.lean</span><span class=\"o\">:</span><span class=\"mi\">47</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">TSyntax.getId</span> <span class=\"n\">x</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">x</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">TSyntax</span> <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">ident</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">Lean.Parser.Term.hole</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">Ident</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jojo</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-07-12/bin/lean` exited with code 1</span>\n</code></pre></div>\n<p>I checked: The same revision of <code>std</code> is mentioned in <code>lake-manifest.json</code> and <code>lake-packages/mathlib/lake-manifest.json</code>. What could this mean?<br>\n(I am using <code>elan 1.4.5</code> if that matters.)</p>",
        "id": 377331288,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1689951671
    },
    {
        "content": "<p>Did you try <code>lake clean</code> first?</p>",
        "id": 377332168,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1689951841
    },
    {
        "content": "<p>Not sure, but it doesn't help :-)</p>",
        "id": 377332436,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1689951885
    },
    {
        "content": "<p>Maybe a stray <code>elan override</code>.</p>",
        "id": 377332727,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1689951937
    },
    {
        "content": "<p>Good idea, but</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">elan</span> <span class=\"n\">override</span> <span class=\"n\">list</span>\n<span class=\"n\">no</span> <span class=\"n\">overrides</span>\n</code></pre></div>",
        "id": 377332932,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1689951969
    },
    {
        "content": "<p>Also probably worth doing <code>elan self update</code> not that its likely to make too much of a difference here</p>",
        "id": 377332989,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1689951980
    },
    {
        "content": "<p>(The project is <a href=\"https://github.com/nomeata/rerolling-sixes\">https://github.com/nomeata/rerolling-sixes</a> if someone wants to help by trying it; clone it and run <code>lake update;  cp lake-packages/mathlib/lean-toolchain .; lake build</code>)</p>",
        "id": 377333293,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1689952036
    },
    {
        "content": "<p>I’m using elan from nix, which doesn't like <code>elan self update</code>, but as you say, it’s unlikely the issue.<br>\nNow upgraded to elan-2.0.0, still via nix, deleted <code>~/.elan</code>, still fails. Very odd.</p>",
        "id": 377334209,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1689952204
    },
    {
        "content": "<p>Ah, found it. Somehow the <code>lake update</code> didn't work, at least after I ran it again it switched more versions, and now <code>cache get</code> actually hits… not sure what went wrong initially.<br>\nSorry for the noise</p>",
        "id": 377335010,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1689952362
    },
    {
        "content": "<p>Scrolling back I got</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">~/</span><span class=\"n\">projekte</span><span class=\"bp\">/</span><span class=\"n\">rerolling</span><span class=\"bp\">-</span><span class=\"n\">sixes</span> <span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">updating</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"mi\">8</span><span class=\"n\">fe2ce366cdcf5d06ea7d8de708d81e7d4df8873</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">29</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">weakLeanArgs'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.LeanLibConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">47</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">weakLeanArgs'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.LeanLibConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">has</span> <span class=\"n\">errors</span>\n</code></pre></div>\n<p>and I saw the error messages, but didn’t realize that the update was partial this way.</p>",
        "id": 377335295,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1689952412
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> has marked this topic as resolved.</p>",
        "id": 377335345,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689952421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> has marked this topic as unresolved.</p>",
        "id": 378104454,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690198862
    },
    {
        "content": "<p>I have a student with the same error and it was very confusing fixing it. Maybe quitting VS Code and using a terminal helps? Some combination of <code>lake clean</code> and <code>lake update</code> got us through in the end but I'm unclear about how we did it.</p>",
        "id": 378106057,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690199183
    },
    {
        "content": "<p>Update: we haven't fixed it and I have no idea how to fix it.</p>",
        "id": 378111211,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690200018
    },
    {
        "content": "<p>In a project depending on mathlib4? Did you follow <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4\">https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4</a>?</p>",
        "id": 378111995,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1690200148
    },
    {
        "content": "<p>Oh! No, I thought it was just <code>lake update</code> then <code>lake exe cache get</code>. Let's see if this gets us out of the hole!</p>",
        "id": 378113623,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690200418
    },
    {
        "content": "<p>Why is it more complicated? All experiments are slow because we're on a mac with a non-parallel curl :-/</p>",
        "id": 378115414,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690200744
    },
    {
        "content": "<p>Because your dependent project needs to ask for the version of lean that mathlib used to create the cached oleans</p>",
        "id": 378116094,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1690200867
    },
    {
        "content": "<p>but that was also true in lean 3 and I didn't have to type any random extra curl line</p>",
        "id": 378118754,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690201297
    },
    {
        "content": "<blockquote>\n<p>All experiments are slow because we're on a mac with a non-parallel curl :-/</p>\n</blockquote>\n<p>(if it helps, newer curl is in homebrew of course. <code>brew install curl</code> followed by <code>PATH=$(brew --prefix curl)/bin:$PATH</code> should get you whatever version it's expecting that has parallelism).</p>",
        "id": 378120948,
        "sender_full_name": "Julian Berman",
        "timestamp": 1690201667
    },
    {
        "content": "<p>oh nice! OK so we have a new curl and so far we're on <code>uncaught exception; leantar failed with error code 101</code></p>",
        "id": 378122921,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690202027
    },
    {
        "content": "<p>Lean 3 solved that by having a mathlib-specific command in leanproject. I wonder if lake could do that by default or at least print a prompt to do it after it's updated the dependency</p>",
        "id": 378123112,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1690202062
    },
    {
        "content": "<p>I don't know much about <code>leantar</code> but if you run <code>export RUST_BACKTRACE=1</code> and then try again do you get anything more interesting looking Kevin? That error message doesn't have much in it.</p>",
        "id": 378123848,
        "sender_full_name": "Julian Berman",
        "timestamp": 1690202188
    },
    {
        "content": "<p>looks like it's working now; that wasn't much fun. I have no idea what we did to get into that state.</p>",
        "id": 378124218,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690202253
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Heisenbug\">https://en.wikipedia.org/wiki/Heisenbug</a></p>",
        "id": 378124525,
        "sender_full_name": "Julian Berman",
        "timestamp": 1690202309
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/std.20fails.20to.20build.20after.20lake.20update/near/378122921\">said</a>:</p>\n<blockquote>\n<p>oh nice! OK so we have a new curl and so far we're on <code>uncaught exception; leantar failed with error code 101</code></p>\n</blockquote>\n<p>This error code looks to be the result of a rust panic inside <code>leantar</code>, so hopefully it printed something else before that, unless lake exe cache is swallowing the error message</p>",
        "id": 378255993,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690228476
    },
    {
        "content": "<p>My guess is that either a file was not found or something was not writable</p>",
        "id": 378256142,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690228531
    },
    {
        "content": "<p>or you ran out of disk space</p>",
        "id": 378256196,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690228553
    },
    {
        "content": "<p>A combination of <code>lake clean</code>, <code>lake exe cache clean!</code>, <code>lake update</code>, and copying the thing which Sebastian linked to ultimately got it working.</p>",
        "id": 378256327,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690228579
    },
    {
        "content": "<p>OK so I'm back, updating another project with mathlib as a dependency, same error.  This time I (believe I) am following the instructions to the letter. Right now the project works fine with the last commit in the mathlib in lake-packages being</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">commit</span> <span class=\"n\">f3e62849a4e599fd45fd6a0b43ee383789d52780</span> <span class=\"o\">(</span><span class=\"n\">HEAD</span><span class=\"o\">)</span>\n<span class=\"n\">Author</span><span class=\"o\">:</span> <span class=\"n\">Alex</span> <span class=\"n\">Keizer</span> <span class=\"bp\">&lt;</span><span class=\"mi\">65514131</span><span class=\"bp\">+</span><span class=\"n\">Ruben</span><span class=\"bp\">-</span><span class=\"n\">VandeVelde</span><span class=\"bp\">@</span><span class=\"n\">users.noreply.github.com</span><span class=\"bp\">&gt;</span>\n<span class=\"n\">Date</span><span class=\"o\">:</span>   <span class=\"n\">Mon</span> <span class=\"n\">Jul</span> <span class=\"mi\">3</span> <span class=\"mi\">07</span><span class=\"o\">:</span><span class=\"mi\">59</span><span class=\"o\">:</span><span class=\"mi\">33</span> <span class=\"mi\">2023</span> <span class=\"bp\">+</span><span class=\"mi\">0000</span>\n</code></pre></div>\n<p>I now try to update the dependencies of the project to today's mathlib following the instructions <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4\">here</a> and I get</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>buzzard@brutus:~/lean-projects/M1F-explained$<span class=\"w\"> </span>lake<span class=\"w\"> </span>build\nbuzzard@brutus:~/lean-projects/M1F-explained$<span class=\"w\"> </span>lean<span class=\"w\"> </span>--version\nLean<span class=\"w\"> </span><span class=\"o\">(</span>version<span class=\"w\"> </span><span class=\"m\">4</span>.0.0-nightly-2023-06-20,<span class=\"w\"> </span>commit<span class=\"w\"> </span>a44dd71ad62a,<span class=\"w\"> </span>Release<span class=\"o\">)</span>\nbuzzard@brutus:~/lean-projects/M1F-explained$<span class=\"w\"> </span>more<span class=\"w\"> </span>lean-toolchain\nleanprover/lean4:nightly-2023-06-20\nbuzzard@brutus:~/lean-projects/M1F-explained$<span class=\"w\"> </span><span class=\"c1\">## following https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4</span>\nbuzzard@brutus:~/lean-projects/M1F-explained$<span class=\"w\"> </span>lake<span class=\"w\"> </span>update\nupdating<span class=\"w\"> </span>lake-packages/mathlib<span class=\"w\"> </span>to<span class=\"w\"> </span>revision<span class=\"w\"> </span>35ae770835c2770643ccc5a57910828ba9885e23\nerror:<span class=\"w\"> </span>./lake-packages/mathlib/lakefile.lean:29:2:<span class=\"w\"> </span>error:<span class=\"w\"> </span><span class=\"s1\">'weakLeanArgs'</span><span class=\"w\"> </span>is<span class=\"w\"> </span>not<span class=\"w\"> </span>a<span class=\"w\"> </span>field<span class=\"w\"> </span>of<span class=\"w\"> </span>structure<span class=\"w\"> </span><span class=\"s1\">'Lake.LeanLibConfig'</span>\nerror:<span class=\"w\"> </span>./lake-packages/mathlib/lakefile.lean:52:2:<span class=\"w\"> </span>error:<span class=\"w\"> </span><span class=\"s1\">'weakLeanArgs'</span><span class=\"w\"> </span>is<span class=\"w\"> </span>not<span class=\"w\"> </span>a<span class=\"w\"> </span>field<span class=\"w\"> </span>of<span class=\"w\"> </span>structure<span class=\"w\"> </span><span class=\"s1\">'Lake.LeanLibConfig'</span>\nerror:<span class=\"w\"> </span>./lake-packages/mathlib/lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\nbuzzard@brutus:~/lean-projects/M1F-explained$<span class=\"w\"> </span>curl<span class=\"w\"> </span>-L<span class=\"w\"> </span>https://raw.githubusercontent.com/leanprover-community/mathlib4/master/lean-toolchain<span class=\"w\"> </span>-o<span class=\"w\"> </span>lean-toolchain\n<span class=\"w\">  </span>%<span class=\"w\"> </span>Total<span class=\"w\">    </span>%<span class=\"w\"> </span>Received<span class=\"w\"> </span>%<span class=\"w\"> </span>Xferd<span class=\"w\">  </span>Average<span class=\"w\"> </span>Speed<span class=\"w\">   </span>Time<span class=\"w\">    </span>Time<span class=\"w\">     </span>Time<span class=\"w\">  </span>Current\n<span class=\"w\">                                 </span>Dload<span class=\"w\">  </span>Upload<span class=\"w\">   </span>Total<span class=\"w\">   </span>Spent<span class=\"w\">    </span>Left<span class=\"w\">  </span>Speed\n<span class=\"m\">100</span><span class=\"w\">    </span><span class=\"m\">36</span><span class=\"w\">  </span><span class=\"m\">100</span><span class=\"w\">    </span><span class=\"m\">36</span><span class=\"w\">    </span><span class=\"m\">0</span><span class=\"w\">     </span><span class=\"m\">0</span><span class=\"w\">    </span><span class=\"m\">107</span><span class=\"w\">      </span><span class=\"m\">0</span><span class=\"w\"> </span>--:--:--<span class=\"w\"> </span>--:--:--<span class=\"w\"> </span>--:--:--<span class=\"w\">   </span><span class=\"m\">108</span>\nbuzzard@brutus:~/lean-projects/M1F-explained$<span class=\"w\"> </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\ninfo:<span class=\"w\"> </span>updating<span class=\"w\"> </span>./lake-packages/mathlib<span class=\"w\"> </span>to<span class=\"w\"> </span>revision<span class=\"w\"> </span>f3e62849a4e599fd45fd6a0b43ee383789d52780\nerror:<span class=\"w\"> </span>./lake-packages/proofwidgets/lakefile.lean:29:5:<span class=\"w\"> </span>error:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>binder<span class=\"w\"> </span>annotation,<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>is<span class=\"w\"> </span>not<span class=\"w\"> </span>a<span class=\"w\"> </span>class<span class=\"w\"> </span>instance\n<span class=\"w\">  </span>?m.6585\nuse<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">command</span><span class=\"w\"> </span><span class=\"sb\">`</span>set_option<span class=\"w\"> </span>checkBinderAnnotations<span class=\"w\"> </span><span class=\"nb\">false</span><span class=\"sb\">`</span><span class=\"w\"> </span>to<span class=\"w\"> </span>disable<span class=\"w\"> </span>the<span class=\"w\"> </span>check\nerror:<span class=\"w\"> </span>./lake-packages/proofwidgets/lakefile.lean:48:39:<span class=\"w\"> </span>error:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>binder<span class=\"w\"> </span>annotation,<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>is<span class=\"w\"> </span>not<span class=\"w\"> </span>a<span class=\"w\"> </span>class<span class=\"w\"> </span>instance\n<span class=\"w\">  </span>?m.6595\nuse<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">command</span><span class=\"w\"> </span><span class=\"sb\">`</span>set_option<span class=\"w\"> </span>checkBinderAnnotations<span class=\"w\"> </span><span class=\"nb\">false</span><span class=\"sb\">`</span><span class=\"w\"> </span>to<span class=\"w\"> </span>disable<span class=\"w\"> </span>the<span class=\"w\"> </span>check\nerror:<span class=\"w\"> </span>./lake-packages/proofwidgets/lakefile.lean:59:2:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unknown<span class=\"w\"> </span>identifier<span class=\"w\"> </span><span class=\"s1\">'widgetJsAllTarget'</span>\nerror:<span class=\"w\"> </span>./lake-packages/proofwidgets/lakefile.lean:62:2:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unknown<span class=\"w\"> </span>identifier<span class=\"w\"> </span><span class=\"s1\">'widgetJsAllTarget'</span>\nerror:<span class=\"w\"> </span>./lake-packages/proofwidgets/lakefile.lean:69:10:<span class=\"w\"> </span>error:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>field<span class=\"w\"> </span><span class=\"s1\">'await'</span>,<span class=\"w\"> </span>the<span class=\"w\"> </span>environment<span class=\"w\"> </span>does<span class=\"w\"> </span>not<span class=\"w\"> </span>contain<span class=\"w\"> </span><span class=\"s1\">'Lake.CustomData.await'</span>\n<span class=\"w\">  </span>job₁\nhas<span class=\"w\"> </span><span class=\"nb\">type</span>\n<span class=\"w\">  </span>CustomData<span class=\"w\"> </span><span class=\"o\">(</span>Package.name<span class=\"w\"> </span>pkg,<span class=\"w\"> </span><span class=\"sb\">`</span>widgetJsAll<span class=\"o\">)</span>\nerror:<span class=\"w\"> </span>./lake-packages/proofwidgets/lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\nbuzzard@brutus:~/lean-projects/M1F-explained$<span class=\"w\"> </span>git<span class=\"w\"> </span>status\nOn<span class=\"w\"> </span>branch<span class=\"w\"> </span>main\nYour<span class=\"w\"> </span>branch<span class=\"w\"> </span>is<span class=\"w\"> </span>up-to-date<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"s1\">'origin/main'</span>.\n\nChanges<span class=\"w\"> </span>not<span class=\"w\"> </span>staged<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>commit:\n<span class=\"w\">  </span><span class=\"o\">(</span>use<span class=\"w\"> </span><span class=\"s2\">\"git add &lt;file&gt;...\"</span><span class=\"w\"> </span>to<span class=\"w\"> </span>update<span class=\"w\"> </span>what<span class=\"w\"> </span>will<span class=\"w\"> </span>be<span class=\"w\"> </span>committed<span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"o\">(</span>use<span class=\"w\"> </span><span class=\"s2\">\"git restore &lt;file&gt;...\"</span><span class=\"w\"> </span>to<span class=\"w\"> </span>discard<span class=\"w\"> </span>changes<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>working<span class=\"w\"> </span>directory<span class=\"o\">)</span>\n<span class=\"w\">    </span>modified:<span class=\"w\">   </span>lean-toolchain\n\nno<span class=\"w\"> </span>changes<span class=\"w\"> </span>added<span class=\"w\"> </span>to<span class=\"w\"> </span>commit<span class=\"w\"> </span><span class=\"o\">(</span>use<span class=\"w\"> </span><span class=\"s2\">\"git add\"</span><span class=\"w\"> </span>and/or<span class=\"w\"> </span><span class=\"s2\">\"git commit -a\"</span><span class=\"o\">)</span>\nbuzzard@brutus:~/lean-projects/M1F-explained$\n</code></pre></div>\n<p>The project whose mathlib I want to update is on github <a href=\"https://github.com/ImperialCollegeLondon/M1F-explained\">here</a>. </p>\n<p>What am I doing wrong?</p>",
        "id": 383583171,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691665918
    },
    {
        "content": "<p><code>lake update</code> does not update <code>lean-toolchain</code>. Try copying it from mathlib.</p>",
        "id": 383585070,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1691666382
    },
    {
        "content": "<p>Is that not what the line <code>curl -L https://raw.githubusercontent.com/leanprover-community/mathlib4/master/lean-toolchain -o lean-toolchain</code> does?</p>\n<p>I should make it clearer what I ran:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">curl</span> <span class=\"bp\">-</span><span class=\"n\">L</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">raw.githubusercontent.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">/</span><span class=\"n\">master</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span> <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n</code></pre></div>",
        "id": 383588285,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691667064
    },
    {
        "content": "<p>Try running the curl first. That worked for me.</p>",
        "id": 383588404,
        "sender_full_name": "Arend Mellendijk",
        "timestamp": 1691667089
    },
    {
        "content": "<p>Sorry Kevin, my bad! But I agree with Arend's suggestion. From the logs, the initial <code>lake update</code> in your run fetched the new mathlib commits, then failed because of the Lake version mismatch and didn't touch the lockfile. Then <code>lake exe cache get</code> checked out the mathlib commit in the lockfile (that is, the old <code>f3e628</code> revision), which does not compile with the newer toolchain.</p>",
        "id": 383590265,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1691667513
    },
    {
        "content": "<p>I permuted those lines on the wiki page!</p>",
        "id": 383592288,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691667948
    },
    {
        "content": "<p>Progress: The project was in a borked state -- the copy of mathlib in <code>lake-packages</code> was on a July commit but it's claiming to use a version of Lean from August.</p>\n<p>I can confirm that running curl first, and then <code>lake update</code>, has updated the project correctly (i.e. Scott's fix seems to be good).</p>\n<p>Reverting back to the July state of the project, it seems that the following instructions</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">update</span> <span class=\"bp\">##</span> <span class=\"n\">errors</span> <span class=\"n\">as</span> <span class=\"n\">above</span>\n<span class=\"n\">curl</span> <span class=\"bp\">-</span><span class=\"n\">L</span> <span class=\"bp\">...</span> <span class=\"bp\">##</span> <span class=\"n\">works</span> <span class=\"n\">fine</span> <span class=\"n\">as</span> <span class=\"n\">above</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span> <span class=\"bp\">##</span> <span class=\"n\">errors</span> <span class=\"n\">as</span> <span class=\"n\">above</span>\n<span class=\"n\">lake</span> <span class=\"n\">update</span> <span class=\"bp\">##</span> <span class=\"n\">seems</span> <span class=\"n\">to</span> <span class=\"n\">work</span> <span class=\"n\">fine</span>\n</code></pre></div>\n<p>bork your project. After those commands I now have a mathlib dependency on a July 3rd commit and on an August toolchain. So this is a pretty horrible gotcha.</p>",
        "id": 383596528,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691668779
    }
]