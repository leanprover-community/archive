[
    {
        "content": "<p>The file <code>scripts/start_port.sh</code> has 5 <code>exit 1</code>s, which close the current shell.  Is there a reason for this, instead of having a <code>return 1</code>, which interrupts execution but does not close the shell?</p>\n<p>(Technical point: to avoid closing the shell, you would also need to remove <code>set -e</code> at the beginning.)</p>\n<p>Currently, when using the script, I run it in a subshell, so that the <code>exit</code> closes the subshell, but leaves my terminal open and I see the error messages.</p>\n<p>I am happy to make a PR to change the behaviour, but wanted to see if I am overlooking something before doing that.</p>",
        "id": 359704041,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684511822
    },
    {
        "content": "<p>How are you running the script?</p>",
        "id": 359704111,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684511841
    },
    {
        "content": "<p><code>. scripts/start_port.sh [path]</code></p>",
        "id": 359704164,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684511860
    },
    {
        "content": "<p>Don't write the <code>.</code></p>",
        "id": 359704180,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684511864
    },
    {
        "content": "<p>and I run it inside a subshell.</p>",
        "id": 359704188,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684511867
    },
    {
        "content": "<p><code>.</code> says \"run the source of the script in the current open shell\", instead of \"run this as a standalone script\"</p>",
        "id": 359704382,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684511902
    },
    {
        "content": "<p><code>.</code> is short for the <code>source</code> command, at least in bash</p>",
        "id": 359704428,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684511916
    },
    {
        "content": "<p>Ok, so effectively not putting the <code>.</code> is just like running <code>( ... )</code>, right?</p>",
        "id": 359704527,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684511943
    },
    {
        "content": "<p>Starting with <code>.</code> is almost never a good idea</p>",
        "id": 359704771,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684511998
    },
    {
        "content": "<p>Usually you need that for:</p>\n<ul>\n<li>Messing around with your bash_rc</li>\n<li>Loading a set of environment variables into your main shell (things like <code>bin/venv/activate</code> or whatever when working with python)</li>\n</ul>",
        "id": 359705077,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684512050
    },
    {
        "content": "<p>If you're using <code>zsh</code> or something, using <code>.</code> will probably run the script as zsh, even though it was intended to be run in bash</p>",
        "id": 359705247,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684512084
    },
    {
        "content": "<p>Ok, thanks for the explanation!  I am using <code>bash</code>.</p>",
        "id": 359705323,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684512103
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> has marked this topic as resolved.</p>",
        "id": 359705654,
        "sender_full_name": "Notification Bot",
        "timestamp": 1684512183
    },
    {
        "content": "<p>But, note, <code>./scripts/start_port.sh</code> is totally fine. The <code>./</code> _no-space_ is just a path indicator, and is a common way of referencing scripts to execute, especially when they are in the cwd: <code>./run_my_script.sh</code></p>",
        "id": 359707510,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1684512653
    }
]