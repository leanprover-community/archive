[
    {
        "content": "<p>At today's porting meeting it was suggested that we needed to triage for stalled PRs. I made <a href=\"https://github.com/leanprover-community/mathlib4/pulls?q=is%3Aopen+is%3Apr+-label%3Ahelp-wanted+-label%3Aawaiting-review+draft%3Afalse+-label%3Ablocked-by-other-PR+-label%3Aafter-port+-label%3Aforward-port-placeholder+sort%3Aupdated-asc\">#stalled</a>, which I think captures what we want to look at. I'm going to have a look at the results now, but I'd encourage everyone with mathlib4 PRs to take a quick look and see if they have anything there. :-)</p>\n<p>(Suggestions for modifying the github search query also welcome.)</p>",
        "id": 367791293,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687232091
    },
    {
        "content": "<p>I propose adding <code>help-wanted</code> to these PRs:</p>\n<ul>\n<li>feat: port Topology.Sheaves.Skyscraper <a href=\"https://github.com/leanprover-community/mathlib4/pull/4751\">!4#4751</a> <span class=\"user-mention\" data-user-id=\"382349\">@Calvin Lee</span> </li>\n<li>feat: port Topology.VectorBundle.Hom <a href=\"https://github.com/leanprover-community/mathlib4/pull/4514\">!4#4514</a> <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> </li>\n<li>feat: port LinearAlgebra.CliffordAlgebra.Basic <a href=\"https://github.com/leanprover-community/mathlib4/pull/4802\">!4#4802</a> <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> </li>\n<li>feat: port Geometry.Manifold.ContMdiff <a href=\"https://github.com/leanprover-community/mathlib4/pull/4656\">!4#4656</a> <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> </li>\n</ul>\n<p>(Feel free to say no, of course!)</p>",
        "id": 367792259,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687232751
    },
    {
        "content": "<p>Both <a href=\"https://github.com/leanprover-community/mathlib4/pull/4514\">!4#4514</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/4656\">!4#4656</a> are waiting for some solution to the \"simp with type synonyms\" issue.</p>",
        "id": 367792366,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687232813
    },
    {
        "content": "<p>Though if someone wants to find a workaround, I have no objections.</p>",
        "id": 367792389,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687232830
    },
    {
        "content": "<p>Added <code>help-wanted</code> to these two.</p>",
        "id": 367792441,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687232876
    },
    {
        "content": "<p>Additionally the <code>ContMdiff</code> PR is \"blocked\" by the porting comment</p>\n<blockquote>\n<p>please wait for <a href=\"https://github.com/leanprover-community/mathlib/pull/19094\">#19094</a></p>\n</blockquote>",
        "id": 367792514,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1687232910
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span>, I like the changes in \"Improve Aesop rule set for CategoryTheory.PEmpty\" <a href=\"https://github.com/leanprover-community/mathlib4/pull/2519\">!4#2519</a>. Do you want to change from <code>WIP</code> to <code>awaiting-review</code>?</p>",
        "id": 367792518,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687232916
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367792514\">said</a>:</p>\n<blockquote>\n<p>Additionally the <code>ContMdiff</code> PR is \"blocked\" by the porting comment</p>\n<blockquote>\n<p>please wait for <a href=\"https://github.com/leanprover-community/mathlib/pull/19094\">#19094</a></p>\n</blockquote>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span>?</p>",
        "id": 367792587,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687232969
    },
    {
        "content": "<p>I had a look at <a href=\"https://github.com/leanprover-community/mathlib/pull/19094\">#19094</a> and it seems that it only adds some lemmas, so I think that we should ask <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> to either push <a href=\"https://github.com/leanprover-community/mathlib/pull/19094\">#19094</a> forward or allow us to proceed with <a href=\"https://github.com/leanprover-community/mathlib4/pull/4656\">!4#4656</a></p>",
        "id": 367792675,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687233010
    },
    {
        "content": "<p>Heather may have already said that's okay somewhere, although I'm not finding it. I presume that will be okay.</p>",
        "id": 367793590,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687233644
    },
    {
        "content": "<p>Quote from <a href=\"https://github.com/leanprover-community/mathlib4/pull/4656\">!4#4656</a>: \"I'm willing to withdraw the wait request and try to forward-port everything, but it will be a hassle -- can we discuss it?\"</p>",
        "id": 367793848,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687233754
    },
    {
        "content": "<p>Okay, otherwise on <a href=\"https://github.com/leanprover-community/mathlib4/pulls?q=is%3Aopen+is%3Apr+-label%3Ahelp-wanted+-label%3Aawaiting-review+draft%3Afalse+-label%3Ablocked-by-other-PR+-label%3Aafter-port+-label%3Aforward-port-placeholder+sort%3Aupdated-asc\">#stalled</a>:</p>\n<ul>\n<li><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> has a WIP <a href=\"https://github.com/leanprover-community/mathlib4/pull/4895\">!4#4895</a> with a green tick. Perhaps just needs relabelling?</li>\n</ul>",
        "id": 367794462,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687234157
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"387244\">@YaÃ«l Dillies</span> has <a href=\"https://github.com/leanprover-community/mathlib4/pull/3731\">!4#3731</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/3730\">!4#3730</a>, removing <code>Cat</code> suffixes, where I think we lost some enthusiasm after realising <code>Mod</code> and <code>Top</code> were getting in the way.</li>\n</ul>",
        "id": 367794559,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687234208
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span> has <a href=\"https://github.com/leanprover-community/mathlib4/pull/3757\">!4#3757</a> which is failing and is marked WIP, adding some configuration options for <code>fail_if_no_progress</code>. I'll add <code>awaiting-author</code> now.</li>\n</ul>",
        "id": 367794687,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687234300
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> has <a href=\"https://github.com/leanprover-community/mathlib4/pull/4157\">!4#4157</a>, adding support for <code>at loc</code> to the <code>rw?</code> tactic. I should have a look at this. Alex, I'm going to assume it's okay for me to merge master here.</li>\n</ul>",
        "id": 367794942,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687234468
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> has \"Get rid of more <code>CoeFun</code>\", <a href=\"https://github.com/leanprover-community/mathlib4/pull/2390\">!4#2390</a>, with a merge conflict, but the discussion seems to indicate we would still like to proceed?</li>\n</ul>",
        "id": 367795601,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687234837
    },
    {
        "content": "<p>About <a href=\"https://github.com/leanprover-community/mathlib4/pull/2390\">!4#2390</a>: last time I tried, it generated some strange compile errors.</p>",
        "id": 367795677,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687234906
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> has \"chore: enable CanLift instance\" <a href=\"https://github.com/leanprover-community/mathlib4/pull/2256\">!4#2256</a>, which looks like it never passed CI, and is <code>awaiting-author</code>.</li>\n</ul>",
        "id": 367795682,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687234909
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367795677\">said</a>:</p>\n<blockquote>\n<p>About <a href=\"https://github.com/leanprover-community/mathlib4/pull/2390\">!4#2390</a>: last time I tried, it generated some strange compile errors.</p>\n</blockquote>\n<p>May I merge master on this to have a look?</p>",
        "id": 367795785,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687234961
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> has \"chore: better error message in linarith\" <a href=\"https://github.com/leanprover-community/mathlib4/pull/2605\">!4#2605</a>, with an unanswered query from Anne, marked <code>awaiting-author</code>.</li>\n</ul>",
        "id": 367795945,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687235049
    },
    {
        "content": "<ul>\n<li>the discussion at \"feat: port Algebra.Order.Hom.Basic again\"  <a href=\"https://github.com/leanprover-community/mathlib4/pull/3449\">!4#3449</a> is rather confusing, and I think we need to hear from <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> what (if anything) should be done here. Possibly the answer is just closing the PR.</li>\n</ul>",
        "id": 367796191,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687235220
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367792587\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367792514\">said</a>:</p>\n<blockquote>\n<p>Additionally the <code>ContMdiff</code> PR is \"blocked\" by the porting comment</p>\n<blockquote>\n<p>please wait for <a href=\"https://github.com/leanprover-community/mathlib/pull/19094\">#19094</a></p>\n</blockquote>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span>?</p>\n</blockquote>\n<p>This is currently blocked by <a href=\"https://github.com/leanprover-community/mathlib/pull/19146\">#19146</a>, which is awaiting a response from <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>, and <a href=\"https://github.com/leanprover-community/mathlib/pull/19147\">#19147</a>, which just passed CI!</p>",
        "id": 367798708,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1687236735
    },
    {
        "content": "<p>I'm sorry. I didn't realize that you're waiting for me (lost github notification).</p>",
        "id": 367798791,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687236805
    },
    {
        "content": "<p>I don't know how a <code>let</code> in the statement affects those who want to apply the lemma.</p>",
        "id": 367798940,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687236883
    },
    {
        "content": "<p>I don't know either -- maybe <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> does?</p>",
        "id": 367799033,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1687236932
    },
    {
        "content": "<p>(@Mario see <a href=\"https://github.com/leanprover-community/mathlib/pull/19146#discussion_r1217089375\">this discussion</a>)</p>",
        "id": 367799070,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1687236953
    },
    {
        "content": "<p>it affects the term, I recommend not to do it</p>",
        "id": 367799077,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687236959
    },
    {
        "content": "<p>use <code>letI</code> instead</p>",
        "id": 367799101,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687236964
    },
    {
        "content": "<p>I stand by my statement after looking at the example</p>",
        "id": 367799185,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687236991
    },
    {
        "content": "<p>OK, I'll change it.</p>",
        "id": 367799282,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1687237065
    },
    {
        "content": "<p>... done</p>",
        "id": 367799941,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1687237380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367796191\">said</a>:</p>\n<blockquote>\n<ul>\n<li>the discussion at \"feat: port Algebra.Order.Hom.Basic again\"  <a href=\"https://github.com/leanprover-community/mathlib4/pull/3449\">!4#3449</a> is rather confusing, and I think we need to hear from <span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> what (if anything) should be done here. Possibly the answer is just closing the PR.</li>\n</ul>\n</blockquote>\n<p>I don't recall off hand, I'll try to take another look later today</p>",
        "id": 367801107,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1687237871
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367792259\">said</a>:</p>\n<blockquote>\n<p>I propose adding <code>help-wanted</code> to these PRs:</p>\n<ul>\n<li>feat: port Topology.Sheaves.Skyscraper <a href=\"https://github.com/leanprover-community/mathlib4/pull/4751\">!4#4751</a> <span class=\"user-mention silent\" data-user-id=\"382349\">Calvin Lee</span> </li>\n</ul>\n</blockquote>\n<p>I'm blocked on a few PRs right now. This one seems to mostly be simp/ext regressions that i can't figure out, so i'll mark it \"help wanted\"</p>",
        "id": 367806149,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1687239799
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 367808963,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687240849
    },
    {
        "content": "<p>I don't think <a href=\"https://github.com/leanprover-community/mathlib4/pull/4802\">!4#4802</a> needs help directly, rather it needs data from downstream files to make a decision about the pending mathlib3 change (which I'd prefer not to merge if it can be avoided because it makes the setup verbose and hard to write about)</p>",
        "id": 367819058,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687244275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367794462\">said</a>:</p>\n<blockquote>\n<p>Okay, otherwise on <a href=\"https://github.com/leanprover-community/mathlib4/pulls?q=is%3Aopen+is%3Apr+-label%3Ahelp-wanted+-label%3Aawaiting-review+draft%3Afalse+-label%3Ablocked-by-other-PR+-label%3Aafter-port+-label%3Aforward-port-placeholder+sort%3Aupdated-asc\">#stalled</a>:</p>\n<ul>\n<li><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> has a WIP <a href=\"https://github.com/leanprover-community/mathlib4/pull/4895\">!4#4895</a> with a green tick. Perhaps just needs relabelling?</li>\n</ul>\n</blockquote>\n<p>It also has a zero diff! I'll close it. It was me trying (and faiing) to work out how <code>!bench</code> works, plus some experiment involving AdjoinRoot slowdown.</p>\n<p>See also <a href=\"#narrow/stream/287929-mathlib4/topic/!4.235256.20RingTheory.2ETrace/near/367812247\">here</a>.</p>",
        "id": 367833508,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687247929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367819058\">said</a>:</p>\n<blockquote>\n<p>I don't think <a href=\"https://github.com/leanprover-community/mathlib4/pull/4802\">!4#4802</a> needs help directly, rather it needs data from downstream files to make a decision about the pending mathlib3 change (which I'd prefer not to merge if it can be avoided because it makes the setup verbose and hard to write about)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, I don't understand: it's not possible to wait for downstream files (because that involves time travel). We either need to merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/4802\">!4#4802</a> without merging <a href=\"https://github.com/leanprover-community/mathlib/pull/18179\">#18179</a>, or to merge <a href=\"https://github.com/leanprover-community/mathlib/pull/18179\">#18179</a> and try again port the file. Which is it?</p>",
        "id": 367864003,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687254597
    },
    {
        "content": "<p>We can port downstream files before merging that one. We did it before for various chains of category_theory and integral files</p>",
        "id": 367864420,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687254667
    },
    {
        "content": "<p>That's true. I guess the point though is that no one but you will do that, because everyone else will assume that we're stuck on that first file. :-)</p>",
        "id": 367865503,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687254892
    },
    {
        "content": "<p>That would be a feature if I weren't away for two weeks starting Monday...</p>",
        "id": 367899442,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687262073
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367792518\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"256311\">Jannis Limperg</span>, I like the changes in \"Improve Aesop rule set for CategoryTheory.PEmpty\" <a href=\"https://github.com/leanprover-community/mathlib4/pull/2519\">!4#2519</a>. Do you want to change from <code>WIP</code> to <code>awaiting-review</code>?</p>\n</blockquote>\n<p>I've resurrected this PR.</p>",
        "id": 367910067,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1687264402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/367791293\">said</a>:</p>\n<blockquote>\n<p>At today's porting meeting it was suggested that we needed to triage for stalled PRs. I made <a href=\"https://github.com/leanprover-community/mathlib4/pulls?q=is%3Aopen+is%3Apr+-label%3Ahelp-wanted+-label%3Aawaiting-review+draft%3Afalse+-label%3Ablocked-by-other-PR+-label%3Aafter-port+-label%3Aforward-port-placeholder+sort%3Aupdated-asc\">#stalled</a>, which I think captures what we want to look at. I'm going to have a look at the results now, but I'd encourage everyone with mathlib4 PRs to take a quick look and see if they have anything there. :-)</p>\n<p>(Suggestions for modifying the github search query also welcome.)</p>\n</blockquote>\n<p>Can we break this off into a separate topic starting here?</p>",
        "id": 367913646,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1687265108
    },
    {
        "content": "<p>42 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series\">#mathlib4 &gt; Mathlib4 porting meeting series</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span>.</p>",
        "id": 368063107,
        "sender_full_name": "Notification Bot",
        "timestamp": 1687298808
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.23stalled.20PRs/near/367899442\">said</a>:</p>\n<blockquote>\n<p>That would be a feature if I weren't away for two weeks starting Monday...</p>\n</blockquote>\n<p>Okay --- perhaps you can leave any open PRs marked as <code>help-wanted</code> while you're away. There's mild danger of this chain (6 files in a chain) becoming longest (current worst is now 10 files in a chain). :-)</p>",
        "id": 368063666,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687299085
    },
    {
        "content": "<p>I've cut that chain down with <a href=\"https://github.com/leanprover-community/mathlib4/pull/5408\">!4#5408</a> and its dependencies :). With those in place, only the leaf files are left to port within <code>clifford_algebra</code>.</p>",
        "id": 368724264,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687481765
    },
    {
        "content": "<p>I presume <a href=\"https://github.com/leanprover-community/mathlib4/pull/5406\">!4#5406</a> is awaiting review <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>?</p>",
        "id": 369133728,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1687601413
    },
    {
        "content": "<p>I'll be away for the next two weeks, feel free to take over any of my mathlib4 PRs</p>",
        "id": 369135998,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687601950
    },
    {
        "content": "<p>(though I'd appreciate it if you could leave the leaf Clifford files for me to do on my return)</p>",
        "id": 369136099,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687601976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span>, I'd be excited to revive your PR \"feat: config options for fail_if_no_progress <a href=\"https://github.com/leanprover-community/mathlib4/pull/3757\">#3757</a>\". Do you know what needs to be done here?</p>",
        "id": 373462503,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688816953
    },
    {
        "content": "<p>(I want to make sure that every lemma in <code>simp_rw</code> is actually being used, as not having visibility into this makes debugging <code>simp_rw</code> calls very annoying.)</p>",
        "id": 373462630,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688816984
    },
    {
        "content": "<p>(That said, I really want <code>simp</code> to just fail in the first place when it makes no progress. Hopefully we'll get there!)</p>",
        "id": 373462921,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688817039
    },
    {
        "content": "<p>As an example, the remaining error in RingTheory.Kaehler <a href=\"https://github.com/leanprover-community/mathlib4/pull/4668\">#4668</a> is a <code>simp_rw</code> not firing.</p>",
        "id": 373467492,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688818142
    },
    {
        "content": "<p>I tried just putting <code>fail_if_no_progress</code> into <code>simp_rw</code> at <a href=\"https://github.com/leanprover-community/mathlib4/pull/5770\">#5770</a>,  but it will need the extra options from <a href=\"https://github.com/leanprover-community/mathlib4/pull/3757\">#3757</a> to be viable.</p>",
        "id": 373467599,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688818176
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>, sorry for the delay! I'll take a look at it now and see if I can get it on its feet (rebase incoming), then let you know what the situation is. :)</p>",
        "id": 373613208,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1688880329
    },
    {
        "content": "<p>Continued in <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/progress.20on.20fail_if_no_progress\">#mathlib4 &gt; progress on fail_if_no_progress</a>. :)</p>",
        "id": 373673292,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1688900574
    }
]