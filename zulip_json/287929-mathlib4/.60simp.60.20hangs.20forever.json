[
    {
        "content": "<p>Related to this mathlib4 <a href=\"https://github.com/leanprover-community/mathlib4/issues/7882\">issue</a>.</p>\n<p>Hi,</p>\n<p>I'm having problems with simp and would appreciate any help. The simp tactic sometimes hangs indefinitely without triggering the maxHeartbeats. To reproduce the error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.NumberTheory.Divisors</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Nat.divisors</span> <span class=\"o\">(</span><span class=\"mi\">30</span> <span class=\"bp\">^</span> <span class=\"mi\">4</span><span class=\"o\">),</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">123</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 399066491,
        "sender_full_name": "Kaiyu Yang",
        "timestamp": 1698511242
    },
    {
        "content": "<p>I guess simp is at some point trying to prove the result by <code>rfl</code> as both sides are closed terms of nat's. I'd recommend trying to generalize the statement you are trying to prove a bit, ideally to a stronger statement</p>",
        "id": 399072897,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698517355
    },
    {
        "content": "<p>Or you could just do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.NumberTheory.Divisors</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Nat.divisors</span> <span class=\"o\">(</span><span class=\"mi\">30</span> <span class=\"bp\">^</span> <span class=\"mi\">4</span><span class=\"o\">),</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">123</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">set</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"mi\">30</span> <span class=\"k\">with</span> <span class=\"n\">h</span>\n  <span class=\"n\">simp</span> <span class=\"o\">(</span><span class=\"n\">config</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">zeta</span> <span class=\"o\">:=</span> <span class=\"n\">false</span><span class=\"o\">})</span>\n</code></pre></div>",
        "id": 399072922,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698517370
    }
]