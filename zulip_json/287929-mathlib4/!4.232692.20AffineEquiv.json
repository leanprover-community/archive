[
    {
        "content": "<p>I've fixed a good chunk of the file, but the coercions are still causing trouble and <code>simp</code> is unable to find proofs, so I am suspecting that there are more fundamental issues. Maybe someone that has experience with porting an <code>Equiv</code> file wants to look at this.</p>",
        "id": 340786208,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678435336
    },
    {
        "content": "<p>I've fixed almost everything now, there is one issue left with <code>initialize_simps_projections</code> (it wants some arguments to be implicit, while the theorem takes them explicitly) which I don't know how to fix.</p>",
        "id": 341406474,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678699299
    },
    {
        "content": "<p>The implicitness of arguments doesn't matter. The argument order of implicit arguments does.</p>\n<blockquote>\n<p>Note: make sure order of implicit arguments is exactly the same.</p>\n</blockquote>",
        "id": 341434572,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1678707183
    },
    {
        "content": "<p>ah thanks, I misread that. The issue was that I swapped a ring instance and the other type definitions, because of 2074.</p>",
        "id": 341439023,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678708453
    },
    {
        "content": "<p>Why did you reorder the arguments?</p>",
        "id": 341439951,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678708697
    },
    {
        "content": "<p>I was being lazy and only moved the ring out of the definition, I reverted to the original order now.</p>",
        "id": 341441797,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678709207
    },
    {
        "content": "<p>Why did you need to move anything out of the definition?</p>",
        "id": 341442164,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678709303
    },
    {
        "content": "<p>Is there actually a preferred way? I think I've seen both <code>{a : Type _} [inst a] {b : Type _} [inst b] [inst a b]</code> and <code>{a b : Type _} [inst a] [inst b] [inst a b]</code>.</p>",
        "id": 341442271,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678709344
    },
    {
        "content": "<p>Can I remove the attribute in the def?</p>",
        "id": 341442319,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678709360
    },
    {
        "content": "<p>The attribute is nothing to do with the variables (edit: unless I'm missing something)</p>",
        "id": 341442370,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678709375
    },
    {
        "content": "<p>Just remove the <code>instance</code> attribute before the def</p>",
        "id": 341442381,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678709378
    },
    {
        "content": "<p>I think it's perhaps worth adding a <code>fun_like</code> instead before finishing this file; the coercions would be much less of a mess (edit: <a href=\"https://github.com/leanprover-community/mathlib/pull/18575\">#18575</a>)</p>",
        "id": 341456149,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678712922
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"412682\">@Moritz Doll</span>, I think it might be best to re-port everything depending on <a href=\"https://github.com/leanprover-community/mathlib4/pull/2692\">!4#2692</a> from scratch. You've presumably added a lot of workarounds to deal with coercion problems that no longer exist, and it might be easier to avoid keeping them around by accident by just throwing the whole lot out and starting over.</p>",
        "id": 342030981,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678880783
    },
    {
        "content": "<p>The file was rather painful, but you are probably right.</p>",
        "id": 342031631,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678880974
    },
    {
        "content": "<p>You can keep around your old version to cherry-pick fixes from</p>",
        "id": 342032558,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678881227
    },
    {
        "content": "<p>It might also be good to wait until <a href=\"#narrow/stream/287929-mathlib4/topic/simp.20doesn't.20work.20without.20placeholders/near/342032263\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/simp.20doesn't.20work.20without.20placeholders/near/342032263</a> is solved before working more on affine spaces</p>",
        "id": 342032681,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678881253
    },
    {
        "content": "<p>There seems to be something weird going on with out_params and <code>simp</code>, which is going to come up repeatedly for vadd and vsub</p>",
        "id": 342032769,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678881280
    },
    {
        "content": "<p>My motivation is to get to <code>Analysis.Calculus.FDeriv</code>, I think there are only two more files involving affine spaces.</p>\n<p>Edit: it's four files</p>",
        "id": 342033852,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678881551
    },
    {
        "content": "<p>Ah, that might be ok then. I'm just worried about doing geometry too soon</p>",
        "id": 342034378,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678881687
    },
    {
        "content": "<p>is the <code>simp only [homothety_apply, mul_smul, vadd_vsub]</code> issue again a variant of <code>simp</code> does not find a <code>simp</code>-theorem?</p>",
        "id": 342036064,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678882049
    },
    {
        "content": "<p>I think in this case it might be finding the wrong simp theorem with higher priority</p>",
        "id": 342036157,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678882069
    },
    {
        "content": "<p>I didn't try opening the mathlib3 file and seeing which simp theorems it looks for</p>",
        "id": 342036208,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678882081
    }
]