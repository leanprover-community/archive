[
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> and <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> we now have the <code>elementwise</code> attribute. While porting CategoryTheory.Limits.Shapes.Types <a href=\"https://github.com/leanprover-community/mathlib4/pull/2809\">!4#2809</a> this attribute would sometimes produce <code>..._apply</code> lemmas where the LHS is not simplified enough according to the simpNF linter (see <a href=\"https://github.com/leanprover-community/mathlib4/pull/2809/files#diff-bd1313dcddfed88eb46a2053178c60d4c91451e965a76da1672421458d44b87dR157-R179\">https://github.com/leanprover-community/mathlib4/pull/2809/files#diff-bd1313dcddfed88eb46a2053178c60d4c91451e965a76da1672421458d44b87dR157-R179</a> ). In other cases, some <code>rfl</code> lemmas seem to be simplified too much because they just become <code>True</code>, see for example <a href=\"https://github.com/leanprover-community/mathlib4/pull/2809/files#diff-bd1313dcddfed88eb46a2053178c60d4c91451e965a76da1672421458d44b87dR468-R476\">https://github.com/leanprover-community/mathlib4/pull/2809/files#diff-bd1313dcddfed88eb46a2053178c60d4c91451e965a76da1672421458d44b87dR468-R476</a></p>",
        "id": 342536404,
        "sender_full_name": "Joël Riou",
        "timestamp": 1679053113
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"459699\">@Joël Riou</span> Hopefully I haven't messed up what you're doing, but I pushed some changes to that branch to <code>elementwise</code> that hopefully address these issues. It now does a couple things:</p>\n<ol>\n<li>It checks for when it generates <code>True</code>, which means it's something that <code>simp</code> almost definitely can do on its own without the lemma, so it suggests that you remove <code>@[elementwise]</code>.</li>\n<li>It by default applies the full <code>simp</code> set to the LHS and RHS of the generated lemma, which hopefully puts it into simp normal form (there's also a check that the result isn't trivial). To keep it from doing this step, there's <code>@[elementwise nosimp]</code>.</li>\n</ol>",
        "id": 342591968,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679066548
    },
    {
        "content": "<p>I'll create a separate branch with a PR with these changes so that they can be reviewed independently.</p>",
        "id": 342592329,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679066634
    },
    {
        "content": "<p>Ok, these changes are at <a href=\"https://github.com/leanprover-community/mathlib4/pull/2956\">mathlib4#2956</a> if you feel like reverting my commit on <a href=\"https://github.com/leanprover-community/mathlib4/pull/2809\">mathlib4#2809</a>.</p>",
        "id": 342604127,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679068896
    },
    {
        "content": "<p>Thanks very much! It seems it works fine.</p>",
        "id": 342619592,
        "sender_full_name": "Joël Riou",
        "timestamp": 1679072545
    }
]