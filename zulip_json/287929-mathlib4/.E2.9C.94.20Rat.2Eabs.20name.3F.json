[
    {
        "content": "<p>What is the full name of the function that computes the absolute value of a rational number?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Rat.Order</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Rat</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">q</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">|</span><span class=\"n\">q</span><span class=\"bp\">|</span>\n</code></pre></div>\n<p>I would like to refer to the function from the example by its name (not by the <code>| . |</code> notation).<br>\nI checked <code>Rat.abs</code> does not exist.</p>",
        "id": 394636044,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1696339755
    },
    {
        "content": "<p>Why?</p>",
        "id": 394636129,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1696339784
    },
    {
        "content": "<p>Passing <code>fun q =&gt; |q|</code> as an argument doesn't look good.</p>",
        "id": 394636281,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1696339819
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Abs.abs#doc\">docs#Abs.abs</a></p>",
        "id": 394636462,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696339867
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 394636698,
        "sender_full_name": "Notification Bot",
        "timestamp": 1696339937
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20Rat.2Eabs.20name.3F/near/394636281\">said</a>:</p>\n<blockquote>\n<p>Passing <code>fun q =&gt; |q|</code> as an argument doesn't look good.</p>\n</blockquote>\n<p>|\\cdot|</p>",
        "id": 394636782,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1696339966
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20Rat.2Eabs.20name.3F/near/394636782\">said</a>:</p>\n<blockquote>\n<p>|\\cdot|</p>\n</blockquote>\n<p>This doesn't compile:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Rat.Order</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Rat</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"bp\">|⬝|</span>\n</code></pre></div>\n<p>Nor does it compile with extra spaces around the dot.</p>",
        "id": 394637078,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1696340050
    },
    {
        "content": "<p><code>example : ℚ → ℚ := (|·|)</code> works</p>",
        "id": 394638032,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1696340371
    },
    {
        "content": "<p>What about <code>(|⬝|)</code></p>",
        "id": 394638048,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696340380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20Rat.2Eabs.20name.3F/near/394636782\">said</a>:</p>\n<blockquote>\n<p>|\\cdot|</p>\n</blockquote>\n<p>FYI: <code>\\dot</code> = <code>\\cdot</code> != <code>\\centerdot</code> = <code>\\.</code></p>",
        "id": 394638611,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1696340561
    },
    {
        "content": "<p>ah, sorry for messing things up! I thought I had the right one...</p>",
        "id": 394668287,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1696349677
    }
]