[
    {
        "content": "<p>I'm stuck with one issue porting Combinatorics.SimpleGraph.Matching , <a href=\"https://github.com/leanprover-community/mathlib4/pull/3071\">mathlib4#3071</a>:<br>\nThere seems to be some sort of <code>coe_degree</code> missing, namely I need to have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">M.verts</span><span class=\"o\">),</span> <span class=\"bp\">@</span><span class=\"n\">SimpleGraph.degree</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">M.verts</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Subgraph.coe</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">coeFiniteAt</span> <span class=\"n\">v</span><span class=\"o\">)</span>  <span class=\"bp\">=</span>\n        <span class=\"bp\">@</span><span class=\"n\">SimpleGraph.degree</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">M.verts</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Subgraph.coe</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">neighborSetFintype</span> <span class=\"o\">(</span><span class=\"n\">Subgraph.coe</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>If I could prove this as a have inside <code>IsMatching.even_card</code>,  I can finish porting the file. Can someone help?</p>",
        "id": 344437266,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1679733748
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"313038\">@Moritz Firsching</span> I think I figured it out. <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SimpleGraph.Subgraph.coe_degree#doc\">docs4#SimpleGraph.Subgraph.coe_degree</a> is a simp lemma that should apply, but it uses an instance argument for its <code>Fintype</code> instance. A difference between Lean 3 and Lean 4 is that Lean 3 could treat instance arguments as implicit arguments. I inserted a <code>convert_to</code> to swap out a <code>Fintype</code> instance argument, which let the original <code>simp</code> go through.</p>",
        "id": 344523128,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679762325
    },
    {
        "content": "<p>Cool, I used the same <code>convert_to</code> trick just now in <a href=\"https://github.com/leanprover-community/mathlib4/pull/3102\">mathlib4#3102</a>, thanks for pointing it out <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>!</p>",
        "id": 344552858,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1679777195
    }
]