[
    {
        "content": "<p>I'm not sure whether my simplification is worth it: <a href=\"https://github.com/leanprover-community/mathlib/compare/refactor-wlog?expand=1\">https://github.com/leanprover-community/mathlib/compare/refactor-wlog?expand=1</a></p>",
        "id": 296996966,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1662214027
    },
    {
        "content": "<p>I'm happy to push on. But I would like to hear from others first.</p>",
        "id": 296997031,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1662214065
    },
    {
        "content": "<p>After my refactor, the <code>wlog</code> tactic would be really easy to port, but every <code>wlog</code> call turns from a 1-liner into a 3-or-4-line proof.</p>",
        "id": 296997160,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1662214124
    },
    {
        "content": "<p>Those proofs are still very easy. So it's very likely that they can be killed by automation.</p>",
        "id": 296997215,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1662214152
    },
    {
        "content": "<p>One reason (independent of mathport) why I wanted to simplify <code>wlog</code> is that the current version is pretty slowish.</p>",
        "id": 296997633,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1662214356
    },
    {
        "content": "<p>Yes! The last time I tried it I found it had become unusable. I wanted to embark on a medium length proof; the first line was \"WLOG a&lt;=b\" and this was taking several seconds to compile, meaning that I just couldn't face using it because it would have made writing the proof really painful.</p>",
        "id": 297022302,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1662228466
    },
    {
        "content": "<p>I have another 8 hr train ride coming up tomorrow. Should I press on with this? Or is it not worth it?</p>",
        "id": 297794172,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1662647390
    },
    {
        "content": "<p>I'll second that I have found <code>wlog</code> almost completely unusable, so a refactor would be greatly appreciated by me.</p>",
        "id": 297800019,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1662649091
    },
    {
        "content": "<p>I just pushed more commits. All files in <code>src/</code> containing <code>wlog</code> now compile locally.</p>",
        "id": 298538344,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663058807
    },
    {
        "content": "<p>TODO:</p>\n<ul>\n<li>update the docs</li>\n<li>make the tests work again</li>\n</ul>",
        "id": 298538405,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663058833
    },
    {
        "content": "<p>Since <code>wlog</code> is now a much simpler tactic, I have also significantly shortened the test file.</p>",
        "id": 298543728,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663060919
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16495\">#16495</a></p>",
        "id": 298544094,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663061057
    },
    {
        "content": "<p>I merged master and fixed conflicts.</p>",
        "id": 299894474,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663743417
    },
    {
        "content": "<p>However, I must say that there is something going on with the <code>generalizing</code> clause that I don't understand completely.</p>\n<ul>\n<li>Sometimes the tactic fails in mysterious ways if the <code>generalizing</code> clause is not present (the error suggests that the final <code>exact</code> in the source of the tactic is failing), and adding a <code>generalizes x y</code> solves the problem.</li>\n<li>In other cases, I've seen a <code>generalizing x y</code> clause, and the tactic state would look all happy, but the kernel would reject the proof. Removing the <code>generalizing</code> clause solved the problem.</li>\n</ul>\n<p>I've not been able to minimize.</p>",
        "id": 299894909,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663743588
    }
]