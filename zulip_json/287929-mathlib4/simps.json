[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>, just calling your attention to a query about <code>simps</code> at <a href=\"https://github.com/leanprover-community/mathlib4/pull/3193\">!4#3193</a>.</p>\n<blockquote>\n<p>When doing definitions of morphisms in the opposite category (i.e. when constructing functors), the simps tag would create lemmas _unop (like _hom_app_unop if we define a natural transformation). I had to occasionally require only simps lemmas like hom_app, inv_app, etc, instead of hom_app_unop, inv_app_unop). I do not know if it is possible to make this automatic by using a suitable initalize_simps_projection command [doing initalize_simps_projection Opposite (-unop) would just create no simp lemma at all].</p>\n</blockquote>\n<p>Is there a way to achieve this?</p>",
        "id": 348836985,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681335357
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"459699\">@JoÃ«l Riou</span>) For a single <code>simp</code> attribute you can use <code>@[simps (config := { notRecursive := [`Opposite] })]</code>. You can do this globally by adding <code> `Opposite</code> to this line:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/f5de05f35eda950d292d655dd165f9412207ce34/Mathlib/Tactic/Simps/Basic.lean#L837\">https://github.com/leanprover-community/mathlib4/blob/f5de05f35eda950d292d655dd165f9412207ce34/Mathlib/Tactic/Simps/Basic.lean#L837</a></p>",
        "id": 348837874,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1681335748
    },
    {
        "content": "<p>Thanks, I've incorporated this into the PR.</p>",
        "id": 348839286,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681336388
    }
]