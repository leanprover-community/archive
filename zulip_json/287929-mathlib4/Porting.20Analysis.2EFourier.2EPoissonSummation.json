[
    {
        "content": "<p>Hi folks,</p>\n<p>I'm trying to port the file Analysis.Fourier.PoissonSummation. The error I'm currently stuck at is the following.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Real.fourierCoeff_tsum_comp_add</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">‚Ñù</span><span class=\"o\">,</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">)}</span>\n    <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">Compacts</span> <span class=\"n\">‚Ñù</span><span class=\"o\">,</span> <span class=\"n\">Summable</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñ§</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">‚Äñ</span><span class=\"o\">(</span><span class=\"n\">f.comp</span> <span class=\"o\">(</span><span class=\"n\">ContinuousMap.addRight</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">restrict</span> <span class=\"n\">K</span><span class=\"bp\">‚Äñ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñ§</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fourierCoeff</span> <span class=\"o\">(</span><span class=\"n\">Periodic.lift</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">f.periodic_tsum_comp_add_zsmul</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"bp\">ùìï</span> <span class=\"n\">f</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">let</span> <span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">‚Ñù</span><span class=\"o\">,</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">fourier</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">m</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">‚ü®(</span><span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">UnitAddCircle</span><span class=\"o\">),</span> <span class=\"n\">continuous_quotient_mk'</span><span class=\"o\">‚ü©</span>\n  <span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>There's no error reported here (it generates a weird error further down the same proof), but something goes wrong already at this step, because the tactic state view shows</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">e</span><span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">‚Ñù</span><span class=\"o\">,</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">ContinuousMap.comp</span> <span class=\"o\">(</span><span class=\"n\">fourier</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">ContinuousMap.mk</span> <span class=\"o\">(</span><span class=\"n\">sorryAx</span> <span class=\"o\">(</span><span class=\"n\">‚Ñù</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">UnitAddCircle</span><span class=\"o\">)</span> <span class=\"n\">true</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>and the <code>sorryAx</code> clearly isn't what's meant to happen. Any thoughts what might be going on?</p>",
        "id": 368000287,
        "sender_full_name": "David Loeffler",
        "timestamp": 1687281158
    },
    {
        "content": "<p>Do you need to replace <code>coe</code> with <code>(‚Üë)</code>?</p>",
        "id": 368002057,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1687281520
    },
    {
        "content": "<p>OK, that worked, but unfortunately it doesn't solve the weird error a few lines further down as I'd hoped it would :-(</p>",
        "id": 368005608,
        "sender_full_name": "David Loeffler",
        "timestamp": 1687282345
    },
    {
        "content": "<p>A few lines later I have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">ContinuousMap.comp_apply</span><span class=\"o\">,</span> <span class=\"n\">mul_comp</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">eadd</span> <span class=\"bp\">‚ä¢</span>\n</code></pre></div>\n<p>where <code>eadd</code> is some hypothesis in the context. It puts a red underline under <code>at</code>, with the error message <code>expected ':='</code>. Why would it expect that?</p>",
        "id": 368006156,
        "sender_full_name": "David Loeffler",
        "timestamp": 1687282476
    },
    {
        "content": "<p>We're gonna need more context for this one</p>",
        "id": 368006646,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1687282566
    },
    {
        "content": "<p>Do you have this up in a PR?</p>",
        "id": 368006702,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1687282577
    },
    {
        "content": "<p>Probably unrelated but the first thing I do when I don't understand what's going on is <code>set_option autoImplicit false</code> at the top of the file.</p>",
        "id": 368006748,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687282587
    },
    {
        "content": "<p>This is <a href=\"https://github.com/leanprover-community/mathlib4/pull/5306\">!4#5306</a>. <br>\n<span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  Thanks for the suggestion but it doesn't seem to help here.</p>",
        "id": 368007544,
        "sender_full_name": "David Loeffler",
        "timestamp": 1687282749
    },
    {
        "content": "<p>If you comment out the <code>suffices</code> on line 97 then you get some less inscrutible errors.</p>",
        "id": 368009850,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687283329
    },
    {
        "content": "<p>Yeah, it's the <code>:=</code> in <code>suffices</code>; I pushed a small fix</p>",
        "id": 368010749,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1687283546
    },
    {
        "content": "<p>That's an interesting failure mode, and a terrible error message</p>",
        "id": 368010890,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1687283583
    },
    {
        "content": "<p>is this a bug in mathport?</p>",
        "id": 368011057,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1687283628
    },
    {
        "content": "<p>mathport didn't put the <code>:=</code> there. I have been caught out by this change in the syntax of <code>suffices</code> at least once before.</p>",
        "id": 368011730,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687283787
    },
    {
        "content": "<p>OK, thanks everyone! I'm sure I'll be back again soon enough (when I hit the next failure)</p>",
        "id": 368012407,
        "sender_full_name": "David Loeffler",
        "timestamp": 1687283950
    },
    {
        "content": "<p>If you delete the <code>:=</code> then the  line is <code>suffices foo : integrable ‚áë(e * f); exact this.has_sum_interval_integral_comp_add_int.tsum_eq</code> and there's an error on <code>;</code> saying \"expected <code>:=</code>\" which, if this isn't valid syntax any more, is an even more terrible error message!</p>",
        "id": 368012832,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687284042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"481963\">@David Loeffler</span> got it: remove the <code>‚áë</code> after <code>integrable</code>.</p>",
        "id": 368013055,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687284103
    },
    {
        "content": "<p>Mathport output was</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>      <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">integrable</span> <span class=\"bp\">‚áë</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">this.has_sum_interval_integral_comp_add_int.tsum_eq</span>\n</code></pre></div>\n<p>fwiw</p>",
        "id": 368013359,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1687284167
    },
    {
        "content": "<p>yeah so it's the up-arrow which needs to be removed.</p>",
        "id": 368013667,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687284238
    },
    {
        "content": "<p>Here's an annoying regression: in mathlib3 I could write <code>‚à´ x in 0..1, f x</code> and it would recognise it as an interval integral; here it seems I need to specify the type explicitly as <code>‚à´ x in (0:‚Ñù)..1, f x</code>.</p>",
        "id": 368016899,
        "sender_full_name": "David Loeffler",
        "timestamp": 1687284984
    },
    {
        "content": "<p>I've been working on this while waiting at Birmingham airport for a delayed flight. The good news is that the PR is now ready for review. The bad news is that my flight just got cancelled <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 368028880,
        "sender_full_name": "David Loeffler",
        "timestamp": 1687287960
    }
]