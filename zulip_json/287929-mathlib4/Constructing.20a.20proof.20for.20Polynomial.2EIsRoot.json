[
    {
        "content": "<p>I'd like to prove the following simple theorem:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Polynomial.IsRoot</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>I cannot find how to even approach this, anywhere! It should be so simple! I've figured out that I need to do as a proof something along the lines of</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Exists.intro</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">proof</span> <span class=\"n\">that</span> <span class=\"mi\">1</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">root</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>But I can't figure out what to do to make the proof. I've tried:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial.IsRoot</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">Polynomial.eval</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>and using <code>h</code> as the proof but this doesn't work. How do I construct a proof for Polynomial.IsRoot? Thanks!</p>",
        "id": 398540562,
        "sender_full_name": "Ryan Ziegler",
        "timestamp": 1698258556
    },
    {
        "content": "<p>Does <code>by simp</code> work to prove <code>h</code>?</p>",
        "id": 398541021,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698258727
    },
    {
        "content": "<p><code>Polynomial.eval (X^2 - 1) 1 = 0</code> is a proposition, not a proof, which is why that doesn't work.</p>\n<p>Does this work?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial.IsRoot</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 398541040,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698258734
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Polynomial</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Polynomial.IsRoot</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">use</span> <span class=\"mi\">1</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 398541062,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1698258750
    },
    {
        "content": "<p><span aria-label=\"racecar\" class=\"emoji emoji-1f3ce\" role=\"img\" title=\"racecar\">:racecar:</span></p>",
        "id": 398541090,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698258762
    },
    {
        "content": "<p><code>simp</code> does not work in <code>h</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unsolved</span> <span class=\"n\">goals</span>\n<span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">ℝ</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">Polynomial.eval</span> <span class=\"mi\">1</span> <span class=\"n\">X</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>but <code>use 1, simp</code> works, thank you!!</p>",
        "id": 398541263,
        "sender_full_name": "Ryan Ziegler",
        "timestamp": 1698258833
    },
    {
        "content": "<p>Out of curiosity, is there a way to do this with Exists.intro?</p>",
        "id": 398541387,
        "sender_full_name": "Ryan Ziegler",
        "timestamp": 1698258871
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Polynomial.IsRoot</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Exists.intro</span> <span class=\"mi\">1</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 398541495,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1698258920
    },
    {
        "content": "<p>(note that <code>use 1</code> is equivalent to <code>apply Exists.intro 1</code>. the <code>use</code> tactic is a convenient way to apply a constructor without needing to know its name while also passing in some arguments)</p>",
        "id": 398541659,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698258985
    },
    {
        "content": "<p>Turns out my editor width wasn't wide enough and I missed an underline on <code>by</code>, <code>use 1, simp</code> and the <code>apply</code> both don't work, and still have the same unsolved goal I pasted above</p>",
        "id": 398541672,
        "sender_full_name": "Ryan Ziegler",
        "timestamp": 1698258990
    },
    {
        "content": "<p>Are you pasting in the exact code that Kevin gave, or are you switching it to use possibly incorrect syntax? I notice you have a <code>,</code> in what you just said, which isn't correct in Lean 4</p>",
        "id": 398541813,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698259059
    },
    {
        "content": "<p>I copy-pasted exactly.</p>",
        "id": 398541924,
        "sender_full_name": "Ryan Ziegler",
        "timestamp": 1698259090
    },
    {
        "content": "<p>Although I notice I don't have the import Mathlib.Tactic import if that would make a difference... My imports are rebuilding now</p>",
        "id": 398542050,
        "sender_full_name": "Ryan Ziegler",
        "timestamp": 1698259151
    },
    {
        "content": "<p>Was the error you were getting \"unknown tactic\" by chance? There's a chance also that somehow one of the tactics is importing necessary simp lemmas.</p>",
        "id": 398542125,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698259189
    },
    {
        "content": "<p>Note also, the reason that <code>by simp</code> didn't work for <code>h</code> was not because the proof was invalid, but because the claim didn't elaborate. This works once you specify the kind of polynomial you want with <code>ℝ[X]</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Polynomial</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Polynomial.IsRoot</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial.IsRoot</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n  <span class=\"n\">use</span> <span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 398542262,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698259232
    },
    {
        "content": "<p>Oh, that's a good gotcha. You can also write <code>have h : Polynomial.IsRoot (X ^ 2 - 1) (1 : ℝ) := by simp</code></p>",
        "id": 398542390,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698259285
    },
    {
        "content": "<p>Ah it appears just adding import Mathlib.Tactic adds enough to simp that the first things people sent work too</p>",
        "id": 398544440,
        "sender_full_name": "Ryan Ziegler",
        "timestamp": 1698260238
    },
    {
        "content": "<p>Thanks for the help!</p>",
        "id": 398544470,
        "sender_full_name": "Ryan Ziegler",
        "timestamp": 1698260255
    }
]