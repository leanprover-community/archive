[
    {
        "content": "<p>FYI, I just wrote <code>import Mathlib</code> in Lean 4 for the first time. After 10 minutes of frying my computer and seeing no result, I closed VS Code.</p>",
        "id": 339875316,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678111179
    },
    {
        "content": "<p>&lt;copypaste&gt;<br>\nIn short: 6x 3.6 GHz, 16 GB RAM</p>\n<p>Details:<br>\nASROCK X370 Killer SLI<br>\nAMD RYZEN 5 2600X<br>\nADATA 16GB KIT DDR4 2400MHz CL17<br>\nWD Black NVMe SSD 500GB<br>\nASUS PHOENIX GeForce GTX 1050TI 4G<br>\n&lt;/copypaste&gt;</p>\n<p>I am on Windows 10. Is it normal?</p>",
        "id": 339875653,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678111260
    },
    {
        "content": "<p>If you don't have the olean files it's gonna build the entirety of <code>mathlib4</code> on the fly</p>",
        "id": 339875695,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678111269
    },
    {
        "content": "<p>I seem to have all <code>.olean</code> files in <code>\\lake_packages\\mathlib4\\build\\lib\\Mathlib</code> of the project I was trying <code>import Mathlib</code> in.</p>",
        "id": 339876587,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678111483
    },
    {
        "content": "<p>Oh that's interesting. Did you get those files via <code>lake exe cache</code>?</p>",
        "id": 339878155,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678111814
    },
    {
        "content": "<p>I don't think so.</p>",
        "id": 339878244,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678111836
    },
    {
        "content": "<p>Some of the <code>.olean</code> files are from today.</p>",
        "id": 339878627,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678111919
    },
    {
        "content": "<p>Maybe building Mathlib4 was just finishing its job when I killed it?</p>",
        "id": 339878865,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678111964
    },
    {
        "content": "<p>Maybe. You can try <code>lake exe cache get</code> and then do the import again just to see what happens. It shouldn't take that long AFAIK</p>",
        "id": 339879549,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678112100
    },
    {
        "content": "<p>Huh. I tried it again. This time, it was frying my computer less and after a few minutes, I got:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">dvora</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-02-01\\bin\\lake.exe print-paths Init Mathlib` failed:</span>\n\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Order.Nonneg.Ring</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Computability.TuringMachine</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Order.Filter.Germ</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.RingTheory.Subring.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.RingTheory.OreLocalization.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.DirectSum.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Finsupp</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.SetTheory.Cardinal.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.GroupTheory.QuotientGroup</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.MeasureTheory.MeasurableSpace</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Topology.Order.Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Topology.UniformSpace.Equiv</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Topology.UniformSpace.AbstractCompletion</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Topology.Algebra.ConstMulAction</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">dvora</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-02-01\\bin\\lean.exe -DwarningAsError=true -Dpp.unicode.fun=true .\\lake-packages\\mathlib4\\.\\.\\Mathlib\\Order\\Filter\\Germ.lean -R .\\lake-packages\\mathlib4\\.\\. -o .\\lake-packages\\mathlib4\\build\\lib\\Mathlib\\Order\\Filter\\Germ.olean -i .\\lake-packages\\mathlib4\\build\\lib\\Mathlib\\Order\\Filter\\Germ.ilean -c .\\lake-packages\\mathlib4\\build\\ir\\Mathlib\\Order\\Filter\\Germ.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Order</span><span class=\"bp\">\\</span><span class=\"n\">Filter</span><span class=\"bp\">\\</span><span class=\"n\">Germ.lean</span><span class=\"o\">:</span><span class=\"mi\">558</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">deterministic</span><span class=\"o\">)</span> <span class=\"n\">timeout</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">isDefEq'</span><span class=\"o\">,</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">heartbeats</span> <span class=\"o\">(</span><span class=\"mi\">200000</span><span class=\"o\">)</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span><span class=\"bp\">&gt;'</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">limit</span><span class=\"o\">)</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Order</span><span class=\"bp\">\\</span><span class=\"n\">Filter</span><span class=\"bp\">\\</span><span class=\"n\">Germ.lean</span><span class=\"o\">:</span><span class=\"mi\">558</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">deterministic</span><span class=\"o\">)</span> <span class=\"n\">timeout</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">isDefEq'</span><span class=\"o\">,</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">heartbeats</span> <span class=\"o\">(</span><span class=\"mi\">200000</span><span class=\"o\">)</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span><span class=\"bp\">&gt;'</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">limit</span><span class=\"o\">)</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Order</span><span class=\"bp\">\\</span><span class=\"n\">Filter</span><span class=\"bp\">\\</span><span class=\"n\">Germ.lean</span><span class=\"o\">:</span><span class=\"mi\">558</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">deterministic</span><span class=\"o\">)</span> <span class=\"n\">timeout</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">isDefEq'</span><span class=\"o\">,</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">heartbeats</span> <span class=\"o\">(</span><span class=\"mi\">200000</span><span class=\"o\">)</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span><span class=\"bp\">&gt;'</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">limit</span><span class=\"o\">)</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Order</span><span class=\"bp\">\\</span><span class=\"n\">Filter</span><span class=\"bp\">\\</span><span class=\"n\">Germ.lean</span><span class=\"o\">:</span><span class=\"mi\">558</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">deterministic</span><span class=\"o\">)</span> <span class=\"n\">timeout</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">isDefEq'</span><span class=\"o\">,</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">heartbeats</span> <span class=\"o\">(</span><span class=\"mi\">200000</span><span class=\"o\">)</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span><span class=\"bp\">&gt;'</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">limit</span><span class=\"o\">)</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Order</span><span class=\"bp\">\\</span><span class=\"n\">Filter</span><span class=\"bp\">\\</span><span class=\"n\">Germ.lean</span><span class=\"o\">:</span><span class=\"mi\">557</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">deterministic</span><span class=\"o\">)</span> <span class=\"n\">timeout</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">whnf'</span><span class=\"o\">,</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">heartbeats</span> <span class=\"o\">(</span><span class=\"mi\">200000</span><span class=\"o\">)</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span><span class=\"bp\">&gt;'</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">limit</span><span class=\"o\">)</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Order</span><span class=\"bp\">\\</span><span class=\"n\">Filter</span><span class=\"bp\">\\</span><span class=\"n\">Germ.lean</span><span class=\"o\">:</span><span class=\"mi\">557</span><span class=\"o\">:</span><span class=\"mi\">9</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">deterministic</span><span class=\"o\">)</span> <span class=\"n\">timeout</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">whnf'</span><span class=\"o\">,</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">heartbeats</span> <span class=\"o\">(</span><span class=\"mi\">200000</span><span class=\"o\">)</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span><span class=\"bp\">&gt;'</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">limit</span><span class=\"o\">)</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Order</span><span class=\"bp\">\\</span><span class=\"n\">Filter</span><span class=\"bp\">\\</span><span class=\"n\">Germ.lean</span><span class=\"o\">:</span><span class=\"mi\">564</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">CommMonoid.mul_comm</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Germ</span> <span class=\"bp\">?</span><span class=\"n\">m.147812</span> <span class=\"bp\">?</span><span class=\"n\">m.147813</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Germ</span> <span class=\"n\">l</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">dvora</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-02-01\\bin\\lean.exe` exited with code 1</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Topology.UniformSpace.CompactConvergence</span>\n<span class=\"o\">(</span><span class=\"bp\">...</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 339879580,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678112108
    },
    {
        "content": "<p>The output above was before <code>lake exe cache get</code> fyi.</p>",
        "id": 339879719,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678112145
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">dvora</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-02-01\\bin\\lean.exe .\\lake-packages\\mathlib4\\.\\.\\Cache\\Requests.lean -R .\\lake-packages\\mathlib4\\.\\. -o .\\lake-packages\\mathlib4\\build\\lib\\Cache\\Requests.olean -i .\\lake-packages\\mathlib4\\build\\lib\\Cache\\Requests.ilean -c .\\lake-packages\\mathlib4\\build\\ir\\Cache\\Requests.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">Requests.lean</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">lakefile.lean</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">Requests.lean</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kd\">constant</span> <span class=\"bp\">'</span><span class=\"n\">_root_.String'</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">Requests.lean</span><span class=\"o\">:</span><span class=\"mi\">12</span><span class=\"o\">:</span><span class=\"mi\">4</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kd\">constant</span> <span class=\"bp\">'</span><span class=\"n\">sorryAx'</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">Requests.lean</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"o\">:</span><span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">namespace</span> <span class=\"bp\">'</span><span class=\"n\">System'</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">Requests.lean</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">43</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">Option</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.18</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">Requests.lean</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">43</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kd\">constant</span> <span class=\"bp\">'</span><span class=\"n\">sorryAx'</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">Requests.lean</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">60</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">IO</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.27</span>\n<span class=\"o\">(</span><span class=\"bp\">...</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 339880098,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678112232
    },
    {
        "content": "<p>It ends with the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Cache</span><span class=\"bp\">\\</span><span class=\"n\">Requests.lean</span><span class=\"o\">:</span><span class=\"mi\">133</span><span class=\"o\">:</span><span class=\"mi\">38</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">expected</span> <span class=\"bp\">'</span><span class=\"o\">:=</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">where'</span><span class=\"o\">,</span> <span class=\"sc\">'|'</span> <span class=\"n\">or</span> <span class=\"n\">no</span> <span class=\"n\">space</span> <span class=\"n\">before</span> <span class=\"n\">spliced</span> <span class=\"n\">term</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">dvora</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-02-01\\bin\\lean.exe` exited with code 1</span>\n</code></pre></div>",
        "id": 339880528,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678112328
    },
    {
        "content": "<p>Ah, this issue again. You've done <code>require mathlib4 ...</code> in your lakefile. <code>cache</code> currently has a limitation that requires users to say <code>require mathlib ...</code> (no \"4\") in their lakefiles. Try that instead, then nuke your <code>lake-packages</code> folder and do <code>lake exe cache get</code> again</p>",
        "id": 339880941,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678112426
    },
    {
        "content": "<p>14 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/import.20bottleneck\">#lean4 &gt; import bottleneck</a> by <span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span>.</p>",
        "id": 339881035,
        "sender_full_name": "Notification Bot",
        "timestamp": 1678112447
    },
    {
        "content": "<p>I am gathering strength and time to fix that limitation</p>",
        "id": 339881288,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678112517
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Problems.20building.20mathlib4/near/339880941\">said</a>:</p>\n<blockquote>\n<p>Ah, this issue again. You've done <code>require mathlib4 ...</code> in your lakefile. <code>cache</code> currently has a limitation that requires users to say <code>require mathlib ...</code> (no \"4\") in their lakefiles. Try that instead, then nuke your <code>lake-packages</code> folder and do <code>lake exe cache get</code> again</p>\n</blockquote>\n<p>Should <code>lakefile.lean</code> contain the following?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">std</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/std4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"master\"</span>\n</code></pre></div>",
        "id": 339881384,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678112530
    },
    {
        "content": "<p>No, don't require <code>std</code> explicitly. Let <code>mathlib</code> do that transitively</p>",
        "id": 339881499,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678112559
    },
    {
        "content": "<p>OK.</p>",
        "id": 339881538,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678112569
    },
    {
        "content": "<p>Is <code>lake exe cache get</code> supposed to get me all Mathlib4 oleans, or just those that are actually (transitively) imported by my files?</p>",
        "id": 339884009,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678113100
    },
    {
        "content": "<p>It should get you everything</p>",
        "id": 339884441,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678113191
    },
    {
        "content": "<p>That is weird. I ran <code>lake update</code> followed by <code>lake exe cache get</code> as I probably should.<br>\nNow in <code>\\lake_packages\\mathlib\\Mathlib</code> I see (probably) all source files but in <code>\\lake_packages\\mathlib\\build\\lib\\Mathlib</code> only a small subset has <code>.olean</code> files.</p>",
        "id": 339885551,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678113468
    },
    {
        "content": "<p>Yes, Lake doesn't place the oleans inside the cloned repos. It targets the <code>build</code> directory on the root level of your project</p>",
        "id": 339886438,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678113662
    },
    {
        "content": "<p>OK but why did some of them appear in <code>\\lake_packages\\mathlib\\build\\lib\\Mathlib</code> then?</p>",
        "id": 339886644,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678113708
    },
    {
        "content": "<p>In my project's <code>build</code> directory, I don't see any Mathlib <code>.olean</code> files, only mine.</p>",
        "id": 339886964,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678113776
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Problems.20building.20mathlib4/near/339886438\">said</a>:</p>\n<blockquote>\n<p>Yes, Lake doesn't place the oleans inside the cloned repos. It targets the <code>build</code> directory on the root level of your project</p>\n</blockquote>\n<p>Wait, sorry, that was just bluntly wrong info</p>",
        "id": 339887278,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678113849
    },
    {
        "content": "<p>I'm down for a quick pairing session if you want to share your screen so I can see what's happening</p>",
        "id": 339888046,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1678114027
    },
    {
        "content": "<p>Thank you Arthur Paulino for your help!</p>",
        "id": 339897739,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678116244
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> realized the problem is probably in my <code>curl</code> installation.</p>",
        "id": 339899077,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678116522
    },
    {
        "content": "<p>I can get <code>.lean</code> files for Mathlib4 but I cannot get <code>.olean</code> files unless I build them on my PC.</p>",
        "id": 339899209,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678116569
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">curl</span> <span class=\"c1\">--version</span>\n<span class=\"n\">curl</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">85</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">w64</span><span class=\"bp\">-</span><span class=\"n\">mingw32</span><span class=\"o\">)</span> <span class=\"n\">libcurl</span><span class=\"bp\">/</span><span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">85</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"n\">OpenSSL</span><span class=\"bp\">/</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">Schannel</span><span class=\"o\">)</span> <span class=\"n\">zlib</span><span class=\"bp\">/</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">12</span> <span class=\"n\">brotli</span><span class=\"bp\">/</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">9</span> <span class=\"n\">zstd</span><span class=\"bp\">/</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">libidn2</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">3</span> <span class=\"n\">libssh2</span><span class=\"bp\">/</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"n\">nghttp2</span><span class=\"bp\">/</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">48</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">Release</span><span class=\"bp\">-</span><span class=\"n\">Date</span><span class=\"o\">:</span> <span class=\"mi\">2022</span><span class=\"bp\">-</span><span class=\"mi\">08</span><span class=\"bp\">-</span><span class=\"mi\">31</span>\n<span class=\"n\">Protocols</span><span class=\"o\">:</span> <span class=\"n\">dict</span> <span class=\"n\">file</span> <span class=\"n\">ftp</span> <span class=\"n\">ftps</span> <span class=\"n\">gopher</span> <span class=\"n\">gophers</span> <span class=\"n\">http</span> <span class=\"n\">https</span> <span class=\"n\">imap</span> <span class=\"n\">imaps</span> <span class=\"n\">ldap</span> <span class=\"n\">ldaps</span> <span class=\"n\">mqtt</span> <span class=\"n\">pop3</span> <span class=\"n\">pop3s</span> <span class=\"n\">rtsp</span> <span class=\"n\">scp</span> <span class=\"n\">sftp</span> <span class=\"n\">smb</span> <span class=\"n\">smbs</span> <span class=\"n\">smtp</span> <span class=\"n\">smtps</span> <span class=\"n\">telnet</span> <span class=\"n\">tftp</span>\n<span class=\"n\">Features</span><span class=\"o\">:</span> <span class=\"n\">alt</span><span class=\"bp\">-</span><span class=\"n\">svc</span> <span class=\"n\">AsynchDNS</span> <span class=\"n\">brotli</span> <span class=\"n\">HSTS</span> <span class=\"n\">HTTP2</span> <span class=\"n\">HTTPS</span><span class=\"bp\">-</span><span class=\"n\">proxy</span> <span class=\"n\">IDN</span> <span class=\"n\">IPv6</span> <span class=\"n\">Kerberos</span> <span class=\"n\">Largefile</span> <span class=\"n\">libz</span> <span class=\"n\">MultiSSL</span> <span class=\"n\">NTLM</span> <span class=\"n\">SPNEGO</span> <span class=\"n\">SSL</span> <span class=\"n\">SSPI</span> <span class=\"n\">threadsafe</span> <span class=\"n\">TLS</span><span class=\"bp\">-</span><span class=\"n\">SRP</span> <span class=\"n\">zstd</span>\n</code></pre></div>\n<p>Trying <code>curl</code> on a small file yields:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">curl</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">madvorak</span><span class=\"bp\">/</span><span class=\"n\">lean3</span><span class=\"bp\">-</span><span class=\"n\">tactic</span><span class=\"bp\">-</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">blob</span><span class=\"bp\">/</span><span class=\"n\">main</span><span class=\"bp\">/</span><span class=\"n\">README.md</span>\n  <span class=\"bp\">%</span> <span class=\"n\">Total</span>    <span class=\"bp\">%</span> <span class=\"n\">Received</span> <span class=\"bp\">%</span> <span class=\"n\">Xferd</span>  <span class=\"n\">Average</span> <span class=\"n\">Speed</span>   <span class=\"n\">Time</span>    <span class=\"n\">Time</span>     <span class=\"n\">Time</span>  <span class=\"n\">Current</span>\n                                 <span class=\"n\">Dload</span>  <span class=\"n\">Upload</span>   <span class=\"n\">Total</span>   <span class=\"n\">Spent</span>    <span class=\"n\">Left</span>  <span class=\"n\">Speed</span>\n  <span class=\"mi\">0</span>     <span class=\"mi\">0</span>    <span class=\"mi\">0</span>     <span class=\"mi\">0</span>    <span class=\"mi\">0</span>     <span class=\"mi\">0</span>      <span class=\"mi\">0</span>      <span class=\"mi\">0</span> <span class=\"c1\">--:--:-- --:--:-- --:--:--     0</span>\n<span class=\"n\">curl</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">60</span><span class=\"o\">)</span> <span class=\"n\">SSL</span> <span class=\"n\">certificate</span> <span class=\"n\">problem</span><span class=\"o\">:</span> <span class=\"n\">unable</span> <span class=\"n\">to</span> <span class=\"n\">get</span> <span class=\"kn\">local</span> <span class=\"n\">issuer</span> <span class=\"n\">certificate</span>\n<span class=\"n\">More</span> <span class=\"n\">details</span> <span class=\"n\">here</span><span class=\"o\">:</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">curl.se</span><span class=\"bp\">/</span><span class=\"n\">docs</span><span class=\"bp\">/</span><span class=\"n\">sslcerts.html</span>\n\n<span class=\"n\">curl</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">verify</span> <span class=\"n\">the</span> <span class=\"n\">legitimacy</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">server</span> <span class=\"n\">and</span> <span class=\"n\">therefore</span> <span class=\"n\">could</span> <span class=\"n\">not</span>\n<span class=\"n\">establish</span> <span class=\"n\">a</span> <span class=\"n\">secure</span> <span class=\"n\">connection</span> <span class=\"n\">to</span> <span class=\"n\">it.</span> <span class=\"n\">To</span> <span class=\"n\">learn</span> <span class=\"n\">more</span> <span class=\"n\">about</span> <span class=\"n\">this</span> <span class=\"n\">situation</span> <span class=\"n\">and</span>\n<span class=\"n\">how</span> <span class=\"n\">to</span> <span class=\"n\">fix</span> <span class=\"n\">it</span><span class=\"o\">,</span> <span class=\"n\">please</span> <span class=\"n\">visit</span> <span class=\"n\">the</span> <span class=\"n\">web</span> <span class=\"n\">page</span> <span class=\"n\">mentioned</span> <span class=\"n\">above.</span>\n</code></pre></div>",
        "id": 339899569,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678116655
    },
    {
        "content": "<p>I think I had the error message <code>curl failed to verify the legitimacy of the server and therefore could not establish a secure connection to it</code> before (quite a long time ago; I was using Lean 3).</p>",
        "id": 339900019,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678116757
    },
    {
        "content": "<p>This might just be an issue with ssl certs on your machine.</p>",
        "id": 339930384,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678124534
    },
    {
        "content": "<p>True.</p>\n<p>Since I don't care that much about making it work, I will close this topic. Originally, I just wanted to test whether <code>import Mathlib</code> would make me wait as long as <span class=\"user-mention\" data-user-id=\"129120\">@Alexander Bentkamp</span>.</p>",
        "id": 339931386,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678124817
    },
    {
        "content": "<p>If you've got it set up right it should finish in seconds on your machine.</p>",
        "id": 339932526,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678125129
    },
    {
        "content": "<p>I got it! I just wanted to point out that I was not that much interested in downloading <code>.olean</code> files in the first place.<br>\nI never wrote <code>import Mathlib</code> before Alexander Bentkamp raised his question.</p>",
        "id": 339934235,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678125598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 339937569,
        "sender_full_name": "Notification Bot",
        "timestamp": 1678126594
    }
]