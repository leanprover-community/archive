[
    {
        "content": "<p>On PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/6098\">#6098</a>, the base branch got changed, apparently by bors. I got the message \"bors changed the base branch from master to ScottCarnahan/BinomialRing2\" 4 hours ago. Does anyone understand what happened here?<br>\nI don't want to merge into that random branch. How do I switch it back to master?</p>",
        "id": 391468462,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1694937180
    },
    {
        "content": "<p>It looks like the same happened to all PRs numbered 7078 or below</p>",
        "id": 391468660,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1694937337
    },
    {
        "content": "<p>Came here to ask the same thing</p>",
        "id": 391468743,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1694937390
    },
    {
        "content": "<p>Would this be related to <a href=\"https://github.com/leanprover-community/mathlib4/pull/7215\">#7215</a>?</p>",
        "id": 391470039,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1694938521
    },
    {
        "content": "<p>Eek!</p>",
        "id": 391472025,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694939850
    },
    {
        "content": "<p>If you click \"edit\" on the title you can change the base branch baack.</p>",
        "id": 391472039,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694939861
    },
    {
        "content": "<p>Looking at the reference for bors, the only thing that seems related is this:</p>\n<blockquote>\n<p>update_base_for_deletes <br>\nIf turned on, and if delete_merged_branches is also turned on, then when a pull request is merged and its base branch is about to be deleted, any other pull requests made against the base branch will be fixed up.</p>\n</blockquote>\n<p>And indeed, we have <code>update_base_for_deletes = true</code> in bors.toml. Maybe bors thought that merging <code>master</code> into <code>ScottCarnahan/BinomialRing2</code> in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7215\">#7215</a> meant that master was going to be deleted, and so...updated every PR made against master? Why the cutoff at 7078, though, I wonder... But I don't know anything about bors, so!</p>",
        "id": 391472052,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1694939873
    },
    {
        "content": "<p>But obviously this shouldn't have happened.</p>",
        "id": 391472056,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694939875
    },
    {
        "content": "<p>Ah, Scott is here, and they know about bors! (Or at least more than I do. I'm not sure exactly who wrangles bors.) I'll leave it to you. :)</p>",
        "id": 391472185,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1694939949
    },
    {
        "content": "<p>This looks like a bors bug to me</p>",
        "id": 391472429,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694940129
    },
    {
        "content": "<p>There are <a href=\"https://github.com/leanprover-community/mathlib4/pulls?q=is%3Apr+is%3Aopen+-base%3Amaster\">217 PRs</a> which now have the wrong base</p>",
        "id": 391491286,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694951234
    },
    {
        "content": "<p>(which is to say, we should be very careful not to merge any of them until that is fixed)</p>",
        "id": 391491296,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694951252
    },
    {
        "content": "<p>I wonder if there's some way we can trick bors into switching them back</p>",
        "id": 391491381,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694951284
    },
    {
        "content": "<p>I think our options are:</p>\n<ul>\n<li>Write a script to set all the base branches back again</li>\n<li>Change all 217 by hand</li>\n<li>Delete the branch so that all the PRs are closed, but I don't know it it will be easy to re-open them</li>\n</ul>",
        "id": 391491512,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694951376
    },
    {
        "content": "<p>GPT suggests:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#!/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">bash</span>\n\n<span class=\"bp\">#</span> <span class=\"n\">Check</span> <span class=\"k\">if</span> <span class=\"n\">the</span> <span class=\"bp\">'</span><span class=\"n\">gh'</span> <span class=\"n\">command</span> <span class=\"n\">is</span> <span class=\"n\">available</span>\n<span class=\"k\">if</span> <span class=\"bp\">!</span> <span class=\"n\">command</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"n\">gh</span> <span class=\"bp\">&amp;&gt;</span> <span class=\"bp\">/</span><span class=\"n\">dev</span><span class=\"bp\">/</span><span class=\"n\">null</span><span class=\"bp\">;</span> <span class=\"k\">then</span>\n    <span class=\"n\">echo</span> <span class=\"s2\">\"'gh' command not found. Please install GitHub CLI.\"</span>\n    <span class=\"n\">exit</span> <span class=\"mi\">1</span>\n<span class=\"n\">fi</span>\n\n<span class=\"bp\">#</span> <span class=\"n\">Fetch</span> <span class=\"n\">all</span> <span class=\"kn\">open</span> <span class=\"n\">PRs</span> <span class=\"k\">with</span> <span class=\"n\">their</span> <span class=\"n\">numbers</span> <span class=\"n\">and</span> <span class=\"n\">base</span> <span class=\"n\">branch</span>\n<span class=\"n\">PR_DETAILS</span><span class=\"bp\">=$</span><span class=\"o\">(</span><span class=\"n\">gh</span> <span class=\"n\">pr</span> <span class=\"n\">list</span> <span class=\"c1\">--state open --limit 100 --json number,baseRefName --jq '[.[] | select(.baseRefName != \"master\")]')</span>\n\n<span class=\"bp\">#</span> <span class=\"n\">Iterate</span> <span class=\"n\">over</span> <span class=\"n\">each</span> <span class=\"n\">PR</span> <span class=\"n\">and</span> <span class=\"n\">update</span> <span class=\"n\">its</span> <span class=\"n\">base</span> <span class=\"n\">branch</span> <span class=\"n\">to</span> <span class=\"bp\">'</span><span class=\"n\">master'</span> <span class=\"k\">if</span> <span class=\"n\">it's</span> <span class=\"n\">not</span> <span class=\"n\">already</span>\n<span class=\"n\">for</span> <span class=\"n\">ROW</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">echo</span> <span class=\"s2\">\"${PR_DETAILS}\"</span> <span class=\"bp\">|</span> <span class=\"n\">jq</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">'.</span><span class=\"o\">[]</span><span class=\"bp\">'</span><span class=\"o\">)</span><span class=\"bp\">;</span> <span class=\"k\">do</span>\n    <span class=\"n\">PR_NUMBER</span><span class=\"bp\">=$</span><span class=\"o\">(</span><span class=\"n\">echo</span> <span class=\"bp\">$</span><span class=\"n\">ROW</span> <span class=\"bp\">|</span> <span class=\"n\">jq</span> <span class=\"bp\">-</span><span class=\"n\">r</span> <span class=\"bp\">'.</span><span class=\"n\">number'</span><span class=\"o\">)</span>\n    <span class=\"n\">BASE_BRANCH</span><span class=\"bp\">=$</span><span class=\"o\">(</span><span class=\"n\">echo</span> <span class=\"bp\">$</span><span class=\"n\">ROW</span> <span class=\"bp\">|</span> <span class=\"n\">jq</span> <span class=\"bp\">-</span><span class=\"n\">r</span> <span class=\"bp\">'.</span><span class=\"n\">baseRefName'</span><span class=\"o\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"$BASE_BRANCH\"</span> <span class=\"bp\">!=</span> <span class=\"s2\">\"master\"</span> <span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"k\">then</span>\n        <span class=\"n\">echo</span> <span class=\"s2\">\"Changing base branch of PR #$PR_NUMBER from $BASE_BRANCH to 'master'...\"</span>\n        <span class=\"bp\">#</span> <span class=\"n\">gh</span> <span class=\"n\">pr</span> <span class=\"n\">edit</span> <span class=\"bp\">$</span><span class=\"n\">PR_NUMBER</span> <span class=\"c1\">--base master</span>\n    <span class=\"n\">fi</span>\n<span class=\"n\">done</span>\n\n<span class=\"n\">echo</span> <span class=\"s2\">\"Updated the base branches where needed!\"</span>\n</code></pre></div>\n<p>(I commented out the \"live\" step.)</p>",
        "id": 391492618,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694951783
    },
    {
        "content": "<p>Might run into pagination issues with the <code>--limit 100</code>.</p>",
        "id": 391492650,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694951814
    },
    {
        "content": "<p>Happy to test it on a few by hand and then let it rip?</p>",
        "id": 391492711,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694951834
    },
    {
        "content": "<p>You should only change PRs that target the bad branch</p>",
        "id": 391493688,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694952312
    },
    {
        "content": "<p>Some other PRs might genuinely target non-master</p>",
        "id": 391493692,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694952315
    },
    {
        "content": "<p>I'll just do that via checking the dry runs first.</p>",
        "id": 391493727,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952344
    },
    {
        "content": "<p>Rather than writing extra code that may not be necessary.</p>",
        "id": 391493745,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952356
    },
    {
        "content": "<p>The initial dry-run says this is the only non-master target branch.</p>",
        "id": 391493823,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952382
    },
    {
        "content": "<p>The \"Extra code\" is replacing <code>!= \"master\" </code> with <code>== \"ScottCarnahan/BinomialRing2\"</code></p>",
        "id": 391494019,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694952535
    },
    {
        "content": "<p>Also <code>-S '-base:master' </code></p>",
        "id": 391494075,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952567
    },
    {
        "content": "<p>I think the last one alone is enough</p>",
        "id": 391494095,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694952589
    },
    {
        "content": "<p>nope</p>",
        "id": 391494110,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952597
    },
    {
        "content": "<p>Aren't you filtering twice?</p>",
        "id": 391494161,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694952608
    },
    {
        "content": "<p>That doesn't filter the results before the 100 result limit, only after.</p>",
        "id": 391494164,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952612
    },
    {
        "content": "<p>Well, that doens't really matter</p>",
        "id": 391494175,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694952620
    },
    {
        "content": "<p>Well, it does, because then you get 0 results, even though there are more to do.</p>",
        "id": 391494195,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952638
    },
    {
        "content": "<p>Once the top 100 PRs are all pointing at master</p>",
        "id": 391494211,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952652
    },
    {
        "content": "<p>Ah, because you're not iterating the API within the script, just re-running it</p>",
        "id": 391494252,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694952685
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/bors.20changed.20base.20branch/near/391493823\">said</a>:</p>\n<blockquote>\n<p>The initial dry-run says this is the only non-master target branch.</p>\n</blockquote>\n<p>This is only for the first 100, right?</p>",
        "id": 391494280,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694952700
    },
    {
        "content": "<p>The <code>gh</code> cli doesn't have pagination controls. You just get the first <code>--limit</code>.</p>",
        "id": 391494291,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694952710
    },
    {
        "content": "<p>All done. For reference,  two (three?) runs of:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#!/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">bash</span>\n\n<span class=\"bp\">#</span> <span class=\"n\">Check</span> <span class=\"k\">if</span> <span class=\"n\">the</span> <span class=\"bp\">'</span><span class=\"n\">gh'</span> <span class=\"n\">command</span> <span class=\"n\">is</span> <span class=\"n\">available</span>\n<span class=\"k\">if</span> <span class=\"bp\">!</span> <span class=\"n\">command</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"n\">gh</span> <span class=\"bp\">&amp;&gt;</span> <span class=\"bp\">/</span><span class=\"n\">dev</span><span class=\"bp\">/</span><span class=\"n\">null</span><span class=\"bp\">;</span> <span class=\"k\">then</span>\n    <span class=\"n\">echo</span> <span class=\"s2\">\"'gh' command not found. Please install GitHub CLI.\"</span>\n    <span class=\"n\">exit</span> <span class=\"mi\">1</span>\n<span class=\"n\">fi</span>\n\n<span class=\"bp\">#</span> <span class=\"n\">Fetch</span> <span class=\"n\">all</span> <span class=\"kn\">open</span> <span class=\"n\">PRs</span> <span class=\"k\">with</span> <span class=\"n\">their</span> <span class=\"n\">numbers</span> <span class=\"n\">and</span> <span class=\"n\">base</span> <span class=\"n\">branch</span>\n<span class=\"n\">PR_DETAILS</span><span class=\"bp\">=$</span><span class=\"o\">(</span><span class=\"n\">gh</span> <span class=\"n\">pr</span> <span class=\"n\">list</span> <span class=\"bp\">-</span><span class=\"n\">S</span> <span class=\"bp\">'-</span><span class=\"n\">base</span><span class=\"o\">:</span><span class=\"n\">master'</span> <span class=\"c1\">--state open --limit 100 --json number,baseRefName --jq '[.[] | select(.baseRefName == \"ScottCarnahan/BinomialRing2\" )]')</span>\n\n<span class=\"bp\">#</span> <span class=\"n\">Iterate</span> <span class=\"n\">over</span> <span class=\"n\">each</span> <span class=\"n\">PR</span> <span class=\"n\">and</span> <span class=\"n\">update</span> <span class=\"n\">its</span> <span class=\"n\">base</span> <span class=\"n\">branch</span> <span class=\"n\">to</span> <span class=\"bp\">'</span><span class=\"n\">master'</span> <span class=\"k\">if</span> <span class=\"n\">it's</span> <span class=\"n\">not</span> <span class=\"n\">already</span>\n<span class=\"n\">for</span> <span class=\"n\">ROW</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">echo</span> <span class=\"s2\">\"${PR_DETAILS}\"</span> <span class=\"bp\">|</span> <span class=\"n\">jq</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">'.</span><span class=\"o\">[]</span><span class=\"bp\">'</span><span class=\"o\">)</span><span class=\"bp\">;</span> <span class=\"k\">do</span>\n    <span class=\"n\">PR_NUMBER</span><span class=\"bp\">=$</span><span class=\"o\">(</span><span class=\"n\">echo</span> <span class=\"bp\">$</span><span class=\"n\">ROW</span> <span class=\"bp\">|</span> <span class=\"n\">jq</span> <span class=\"bp\">-</span><span class=\"n\">r</span> <span class=\"bp\">'.</span><span class=\"n\">number'</span><span class=\"o\">)</span>\n    <span class=\"n\">BASE_BRANCH</span><span class=\"bp\">=$</span><span class=\"o\">(</span><span class=\"n\">echo</span> <span class=\"bp\">$</span><span class=\"n\">ROW</span> <span class=\"bp\">|</span> <span class=\"n\">jq</span> <span class=\"bp\">-</span><span class=\"n\">r</span> <span class=\"bp\">'.</span><span class=\"n\">baseRefName'</span><span class=\"o\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"$BASE_BRANCH\"</span> <span class=\"bp\">==</span> <span class=\"s2\">\"ScottCarnahan/BinomialRing2\"</span> <span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"k\">then</span>\n        <span class=\"n\">echo</span> <span class=\"s2\">\"Changing base branch of PR #$PR_NUMBER from $BASE_BRANCH to 'master'...\"</span>\n        <span class=\"n\">gh</span> <span class=\"n\">pr</span> <span class=\"n\">edit</span> <span class=\"bp\">$</span><span class=\"n\">PR_NUMBER</span> <span class=\"c1\">--base master</span>\n    <span class=\"n\">fi</span>\n<span class=\"n\">done</span>\n\n<span class=\"n\">echo</span> <span class=\"s2\">\"Updated the base branches where needed!\"</span>\n</code></pre></div>",
        "id": 391495118,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953222
    },
    {
        "content": "<p>Your 217 PRs links above now returns 2!</p>",
        "id": 391495159,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953246
    },
    {
        "content": "<p>Great, thanks!</p>",
        "id": 391495191,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694953273
    },
    {
        "content": "<p>I made a patch to bors at <a href=\"https://github.com/bors-ng/bors-ng/pull/1715\">https://github.com/bors-ng/bors-ng/pull/1715</a> that should hopefully stop this happening again, but I doubt it will be merged</p>",
        "id": 391495214,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694953296
    },
    {
        "content": "<p>I guess it's not a big deal if it happens again now that we have this script to hand; thanks!</p>",
        "id": 391495276,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694953324
    },
    {
        "content": "<p>Does mathlib plan to migrate to the GitHub merge queue?</p>",
        "id": 391495755,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1694953658
    },
    {
        "content": "<p>Yes, we've talked about it. The biggest problem is just setting up the constraints so that only maintainers can give final approval for merging.</p>",
        "id": 391495862,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953719
    },
    {
        "content": "<p>When I looked at it I couldn't work out how to do that.</p>",
        "id": 391495867,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953726
    },
    {
        "content": "<p>Well, I could, but it required additional CI automation.</p>",
        "id": 391495885,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953737
    },
    {
        "content": "<p>A step that checks for a comment written by someone on a whitelist.</p>",
        "id": 391495915,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953753
    },
    {
        "content": "<p>I thought the problem was the opposite, and we couldn't work out how to delegate so that <em>non-maintainers</em> could trigger the final merge?</p>",
        "id": 391495926,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694953770
    },
    {
        "content": "<p>But as far as I could see the <em>absence</em> of that step was going to put a red x on the status of the PR, which I'd really prefer to avoid!</p>",
        "id": 391495934,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953774
    },
    {
        "content": "<p>Oh, I hadn't even got as far as thinking about delegating.</p>",
        "id": 391495957,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953795
    },
    {
        "content": "<p>I don't see why we need anything special for a delegation-free workflow</p>",
        "id": 391496039,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694953823
    },
    {
        "content": "<p>Surely only maintainers can hit the merge button anyway?</p>",
        "id": 391496049,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694953829
    },
    {
        "content": "<p>The documentation leaves something to be desired, so I think we need to set up a practice repo. My reading of the docs was that maintainers were not special.</p>",
        "id": 391496266,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694953985
    },
    {
        "content": "<p>The only criteria for merging were \"passes CI checks\" and \"has at least k approvals\" (and possibly something about approvals from a CODEOWNER).</p>",
        "id": 391496316,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694954016
    },
    {
        "content": "<p>What about the alternate proposal to switch back to Mergify? It has improved a lot since Mathlib migrated away from it in 2021.</p>",
        "id": 391497971,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1694954968
    },
    {
        "content": "<p>Their free tier seems limited to 100 PRs per month - I haven't checked but I feel like it'd be easy to hit that on a repo as big as mathlib.</p>",
        "id": 391498495,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1694955258
    },
    {
        "content": "<p>We could ask them if they would be interested in having us as a non-payment customer. I found them quite responsive usually when I managed the mergify setup for another project. Also happy to lend a hand setting it up if there is need for that.</p>",
        "id": 391499435,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1694955861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/bors.20changed.20base.20branch/near/391495214\">said</a>:</p>\n<blockquote>\n<p>I made a patch to bors at <a href=\"https://github.com/bors-ng/bors-ng/pull/1715\">https://github.com/bors-ng/bors-ng/pull/1715</a> that should hopefully stop this happening again, but I doubt it will be merged</p>\n</blockquote>\n<p>This was merged!</p>",
        "id": 391521455,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694963616
    },
    {
        "content": "<p>The bors repo is using Github’s merge queue feature <span aria-label=\"shocked\" class=\"emoji emoji-1f92f\" role=\"img\" title=\"shocked\">:shocked:</span></p>",
        "id": 391528116,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1694965471
    },
    {
        "content": "<p>Eating their own dog food: <a href=\"https://bors.tech/newsletter/2023/05/01/tmib-76/\">https://bors.tech/newsletter/2023/05/01/tmib-76/</a></p>",
        "id": 391586098,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694993352
    },
    {
        "content": "<p>Sorry about blowing everything up!</p>",
        "id": 391595679,
        "sender_full_name": "Scott Carnahan",
        "timestamp": 1694999420
    }
]