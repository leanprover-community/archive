[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4949\">!4#4949</a> has a universes related error et the end that I am not sure I understand... maybe someone used to universes can have a look.</p>\n<p>The <code>Module</code> instance also needs to be fixed, but I didn't try very hard.</p>",
        "id": 365089513,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1686395710
    },
    {
        "content": "<p>All the universe errors I've hit after were the result of errors or sorries earlier on the file, so I'd try dealing with those first</p>",
        "id": 365100788,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1686398316
    },
    {
        "content": "<p>Yeah, although filtered colimits in the category of modules (in which for some reason the ring and module are allowed to live in different universes) are ripe for universe problems. :-)</p>",
        "id": 365101504,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686398471
    },
    {
        "content": "<p>That's why I've mostly avoided category theory, but still worth looking at the earlier issues first :)</p>",
        "id": 365104977,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1686399308
    },
    {
        "content": "<p>I've fixed all the problems up to <code>colimitCoconeIsColimit</code>, where universes show up. Now I really need help :)</p>",
        "id": 365126762,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1686405119
    },
    {
        "content": "<p>The error is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">stuck</span> <span class=\"n\">at</span> <span class=\"n\">solving</span> <span class=\"kd\">universe</span> <span class=\"n\">constraint</span>\n  <span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">v</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">?</span><span class=\"n\">u.60462</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=?=</span> <span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">while</span> <span class=\"n\">trying</span> <span class=\"n\">to</span> <span class=\"n\">unify</span>\n  <span class=\"o\">(</span><span class=\"n\">ModuleCat</span> <span class=\"n\">R</span> <span class=\"bp\">тед</span> <span class=\"n\">TypeMax</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ModuleCat</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">moduleCategory</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ModuleCat</span> <span class=\"n\">R</span> <span class=\"bp\">тед</span> <span class=\"n\">TypeMax</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ModuleCat</span> <span class=\"n\">R</span> <span class=\"bp\">тед</span> <span class=\"n\">TypeMax</span><span class=\"o\">)</span>\n<span class=\"k\">with</span>\n  <span class=\"n\">ModuleCat</span> <span class=\"n\">R</span> <span class=\"bp\">тед</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>that doesn't look very good. Maybe I made some mistake earlier in the file.</p>",
        "id": 365268477,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1686474371
    },
    {
        "content": "<p>Do you need to introduce some TypeMax?</p>",
        "id": 365273787,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1686476196
    },
    {
        "content": "<p>I really don't know. At the moment I just copied what is in the mathlib3 version</p>",
        "id": 365275413,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1686476730
    },
    {
        "content": "<p>My understanding is that (some?) Type. {max u v} need to become TypeMax, which is new relative to lean 3</p>",
        "id": 365276160,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1686476962
    },
    {
        "content": "<p>Well, I prefer to not write this by myself since I don't really understand it, so I will leave the PR help-wanted.</p>",
        "id": 365277589,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1686477320
    },
    {
        "content": "<p>I'm having a look now.</p>",
        "id": 365282189,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686478656
    },
    {
        "content": "<p>I really wish Lean would just go ahead and solve <code>stuck at solving universe constraint max (v+1) (?u.60659+1) =?= max (u+1) (v+1)</code> with <code>?u = u</code>.</p>",
        "id": 365282226,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686478675
    },
    {
        "content": "<p>Lean 3 would unify universe questions like this, but Lean 4 refuses to. The solution ?u.60462=u is not unique if u&lt;=v, but because Lean has no infrastructure for saying u&lt;=v it's sad that it won't just solve this anyway. The other one that comes up up is <code>max u ? = u</code> which has the solution ?=u which Lean 4 won't assume despite it being the right one essentially always.</p>",
        "id": 365282515,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686478751
    },
    {
        "content": "<p>Fixed the first error, but now pausing to watch battle bots with kids. :-)</p>",
        "id": 365283769,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686479082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span>, I fixed the rest of the file. I took the opportunity of reordering some jumbled universe variables in <code>ConcreteCategory</code>.</p>",
        "id": 365301053,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686484511
    },
    {
        "content": "<p>One of the errors was very confusing, and resolved by changing <code>fun F =&gt;</code> to <code>fun {F} =&gt;</code>. The error looked to be all about universes, but this was misleading.</p>",
        "id": 365301152,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686484551
    },
    {
        "content": "<p>Thanks!!</p>",
        "id": 365302060,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1686484824
    }
]