[
    {
        "content": "<p>When I pull the latest version of mathlib it works fine, but as soon as I restart vscode it automatically moves back to the commit I was in, as well as showing an error (or warning): \"Lean version changed\", with a suggestion to restart lean. When the lean extension is disabled this doesn't happen, so I assume it's related to the error (they also happen at the same time, a few seconds after opening vscode).</p>",
        "id": 397730223,
        "sender_full_name": "Nir Paz",
        "timestamp": 1697814326
    },
    {
        "content": "<p>Are you working on a project that has mathlib as a dependency? Or just a git clone of mathlib itself?</p>",
        "id": 397730739,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697814484
    },
    {
        "content": "<p>A project depending of mathlib</p>",
        "id": 397731496,
        "sender_full_name": "Nir Paz",
        "timestamp": 1697814731
    },
    {
        "content": "<p>Then you should use <code>lake update</code> in the root of your project to update the dependencies (including mathlib), rather than a manual git pull</p>",
        "id": 397731967,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697814891
    },
    {
        "content": "<p>Thanks! Is this documented/explained somewhere? It's a silly mistake but as someone who doesn't know much cs these things can take up a lot of time if they're not shown explicitly</p>",
        "id": 397735837,
        "sender_full_name": "Nir Paz",
        "timestamp": 1697816129
    },
    {
        "content": "<p>Maybe there should be a list of useful lake commands in the \"using lake\" page</p>",
        "id": 397736229,
        "sender_full_name": "Nir Paz",
        "timestamp": 1697816247
    },
    {
        "content": "<p>One thing that I find very strange is that if one runs <code>lake update</code> while in a clone of <code>mathlib</code> (instead that in a project depending on it), some update takes place (notably in the folder <code>\\lake_packages\\std</code>) and the manifest changes, so that nothing works any more (the whole library needs to be rebuilt and <code>lake exe cache get</code> does not work). Wouldn't it be possible to raise an error if one calls <code>lake update</code> when in <code>mathlib</code>?</p>",
        "id": 397751843,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697823200
    },
    {
        "content": "<p>Can you clarify what happens?</p>",
        "id": 397752249,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697823421
    },
    {
        "content": "<p>Sure</p>",
        "id": 397752279,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697823437
    },
    {
        "content": "<p>I start with the usual git clone of mathlib4, and everything works on the nose (a part from the PR issue mentioned <a href=\"#narrow/stream/287929-mathlib4/topic/PR.20associated.20with.20default.20branch\">here</a>. If I simply <code>code .</code> the <code>cache</code>is already there, and I can immediately work on any file (say, on <code>master</code> if I am just willing to play).</p>",
        "id": 397752480,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697823546
    },
    {
        "content": "<p>Then I close VSCode and I do <code>lake update</code>: two updating messages show up</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">std</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"n\">e3f238c972c1b747e0b7605ff568017e6a5107c5'</span>\n<span class=\"n\">aesop</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"n\">b601328752091a1cfcaebdd6b6b7c30dc5ffd946'</span>\n</code></pre></div>\n<p>after which, if I <code>code .</code> everything is red and VSCode tells me I have to rebuild everything, which takes ages of course. If I rather close VSCode and type <code>lake exe cache get</code>,  no file is downloaded (because the manifest has changed, I suppose: this I can see by opening the diff view in VSCode).</p>",
        "id": 397752693,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697823669
    },
    {
        "content": "<p>If I manually revert the <code>manifest</code> to the one that has been downloaded (before the <code>lake update</code> call) everything is still broken, but <code>lake exe cache get</code> works and then everything is super-fast again.</p>",
        "id": 397753526,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697824087
    },
    {
        "content": "<p>Oh, I thought something weirder happened. This is just <code>lake update</code> doing what it says on the tin.</p>",
        "id": 397753758,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697824208
    },
    {
        "content": "<p>What made you think that it would do something useful (to you)?</p>",
        "id": 397753810,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697824239
    },
    {
        "content": "<p>Sure, I am not claiming anything strange happens. I am just suggesting that <code>lake update</code> raises a warning if you try to do it while on <code>mathlib</code>.</p>",
        "id": 397753855,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697824258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Lean.20extension.20reverts.20mathlib.20version/near/397753758\">said</a>:</p>\n<blockquote>\n<p>Oh, I thought something weirder happened. This is just <code>lake update</code> doing what it says on the tin.</p>\n</blockquote>\n<p>I called it by mistake, but it seems quite an innocuous call (it should just 'update' stuff and if one has just downloaded a fresh copy, it is a honest guess to suppose that nothing bad will happen, no?)</p>",
        "id": 397753963,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697824306
    },
    {
        "content": "<p>This has nothing to do with mathlib. lake update is the most disruptive command you can run. You should never type it randomly. Lake itself used to recommend running it whenever something was wrong but my hope is this is no longer true.</p>",
        "id": 397762927,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697828966
    },
    {
        "content": "<p><code>lake build</code> also checks out libraries to the version specified in the manifest.</p>",
        "id": 397768040,
        "sender_full_name": "Richard Copley",
        "timestamp": 1697831558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Lean.20extension.20reverts.20mathlib.20version/near/397762927\">said</a>:</p>\n<blockquote>\n<p>This has nothing to do with mathlib. lake update is the most disruptive command you can run. You should never type it randomly. Lake itself used to recommend running it whenever something was wrong but my hope is this is no longer true.</p>\n</blockquote>\n<p>Well, the only point I was trying to make is that it might help people to see a message explaining that \"lake update is the most disruptive command you can run. You should never type it randomly\". I can live with it and can solve my problem when VSCode is all red. I hope this is the same for all new members.</p>",
        "id": 397777295,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697836635
    },
    {
        "content": "<p>Would renaming to <code>update-deps</code> resolve the confusion here?</p>",
        "id": 397782993,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697840504
    },
    {
        "content": "<p>That's a pretty good idea!</p>",
        "id": 397807627,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697858091
    },
    {
        "content": "<p>I think there is now a mechanism to have libraries declare special hooks to run on <code>lake update</code>, and Mathlib could provide one that warns you are breaking everything.</p>",
        "id": 397807829,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697858248
    },
    {
        "content": "<p>I'd prefer not to implement this myself, but nominate <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> to do so, so he can leave an appropriate trail of issues behind if there are difficulties either discovering where this mechanism is, how it is documented, or how it works. :-)</p>",
        "id": 397807903,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697858298
    },
    {
        "content": "<p>Of course, anyone who would like to should do it!</p>",
        "id": 397807934,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697858328
    },
    {
        "content": "<p>Proposal to rename <code>lake update</code> to <code>lake upgrade-deps</code> at <a href=\"https://github.com/leanprover/lean4/pull/2726\">lean4#2726</a>.</p>",
        "id": 397808982,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697859206
    },
    {
        "content": "<p>If there was a verb like \"upgrade, almost surely breaking my project as a result\", we could try that. :-)</p>",
        "id": 397809050,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697859248
    },
    {
        "content": "<p>Scott, I think the hook you have in mind is a <em>post</em>-update hook, not a <em>pre</em>-update hook.</p>",
        "id": 397852447,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697896979
    },
    {
        "content": "<p>Do we need that too? If so, let's ask for it.</p>",
        "id": 397884484,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697931177
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Lean.20extension.20reverts.20mathlib.20version/near/397809050\">said</a>:</p>\n<blockquote>\n<p>If there was a verb like \"upgrade, almost surely breaking my project as a result\", we could try that. :-)</p>\n</blockquote>\n<p>Simply a warning like \"this is likely to break your project unless [add some cases where it is safe]: are you sure you want to proceed: Y/N\" and then execute it if Y?</p>",
        "id": 397943208,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697979553
    },
    {
        "content": "<p>What did you (or other people who ran it and got unpleasantly surprised) expect the command to do?</p>",
        "id": 397946737,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697983162
    },
    {
        "content": "<p>In general, I would expect <code> lake update</code>  to update the <code>mathlib</code> version my project depends on. If I run it on <code>mathlib</code>, I would hope it to do nothing (or simply a <code>git pull</code>) but I understand this is not the way it works, which is fine. The warning seemed to me to be a good way to avoid using it for wrong purposes.</p>",
        "id": 397960510,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1697995344
    },
    {
        "content": "<p>It sounds a bit silly, but maybe we should really hard-code <code>Mathlib</code> in lake such that on mathlib specifically, <code>lake update</code> errors with a message, and only <code>lake update --i-know-this-isnt-git-pull</code> works...</p>",
        "id": 397960753,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697995661
    },
    {
        "content": "<p>Likely in the short term only Scott will be running lake update on mathlib anyway</p>",
        "id": 397960815,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697995706
    },
    {
        "content": "<p>Mac is fairly adamant against hardcoding Mathlib into Lake, and I agree that in an ideal world this is a good aspiration. My preference would be that we <em>did</em> hardcode exceptions for Mathlib into Lake, opening issues for each such exception we make, asking for a generic solution (which presumably required more work) to come later.</p>",
        "id": 397974618,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698011955
    },
    {
        "content": "<p>I don't think it's unreasonable for users to hope that running an <code>update</code> command will not break their setup. Even if they consider the possibility that it is upgrading the versions of dependencies, they might reasonably hope that we have provided them with a sufficient safety net of version compatibility guarantees (which of course don't exist in the real world!) that it is safe to do so.</p>\n<p>That is, we should be designing the convenient and user-facing interface for <code>lake</code> around the most naive beginners. The expert users of course need to be able to do what they need to do, but it is very difficult when designing these tools to remember to prioritize the beginner experience.</p>",
        "id": 397974858,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698012231
    },
    {
        "content": "<p>We hardcoded mathlib into leanproject and I literally recall nobody ever complaining. That was the setup for years. What do you think about mathematician users forking lake? I suspect that this would also be a very unpopular decision in some parts? But even now I believe that lake still gives really lousy (ie \"do what lake says and break your project\") advice for projects which depend on mathlib and other projects. I just know from experience not to ever ever ever type <code>lake update</code> without saying what I want to update.</p>",
        "id": 397974911,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1698012266
    },
    {
        "content": "<blockquote>\n<p>But even now I believe that lake still gives really lousy (ie \"do what lake says and break your project\") advice for projects which depend on mathlib and other projects. I just know from experience not to ever ever ever type lake update without saying what I want to update.</p>\n</blockquote>\n<p>I'm pretty sure this is no longer true, and hasn't been for a month or more</p>",
        "id": 397975010,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698012421
    },
    {
        "content": "<p>If you have a project that depends on mathlib then <code>lake update</code> will in almost all cases do exactly the same as <code>lake update mathlib</code></p>",
        "id": 397975026,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698012456
    },
    {
        "content": "<p>It <em>is</em> still true that it doesn't touch <code>lean-toolchain</code> and breaks your project until you update yourself</p>",
        "id": 397975033,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698012478
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Lean.20extension.20reverts.20mathlib.20version/near/397975033\">said</a>:</p>\n<blockquote>\n<p>It <em>is</em> still true that it doesn't touch <code>lean-toolchain</code> and breaks your project until you update yourself</p>\n</blockquote>\n<p>And this is the part that can be solved by a post-update hook now! <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>? :-)</p>",
        "id": 397975209,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698012718
    },
    {
        "content": "<p>Just noting that there is parallel discussion going on in the thread at <a href=\"https://github.com/leanprover/lean4/pull/2726\">lean4#2726</a></p>",
        "id": 397975258,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698012741
    },
    {
        "content": "<p>Digging deeper (as explained in the issue Scott links); I think this is less of an issue of confused beginners, and more of (experienced?) Lean 3 users who expect their <code>leanproject update</code> muscle memory to transfer to <code>lake update</code>, but <em>on mathlib specifically</em> it does not.</p>",
        "id": 397975648,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698013260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Lean.20extension.20reverts.20mathlib.20version/near/397975209\">said</a>:</p>\n<blockquote>\n<p>And this is the part that can be solved by a post-update hook now! <span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span>? :-)</p>\n</blockquote>\n<p>Very easy, let me take a look at the <a href=\"https://github.com/leanprover/lean4/blob/master/src/lake/README.md\">lake README</a> to see the documentation of this feature... Then spend five minutes trying to add this <a href=\"https://github.com/leanprover/lean4/blob/master/src/lake/README.md#build--run\">postUpdate?</a> option everywhere in the Lake file before going to the git history of lake, searching for the API change that did not get reflected in the README. And now it's dinner time.</p>",
        "id": 397979835,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698017984
    },
    {
        "content": "<p>I opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/7846\">#7846</a>, but I want to wait until CI provides oleans to be able to actually test this code (which is mostly lifted from the postUpdate docstring in lake).</p>",
        "id": 397984016,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698021655
    },
    {
        "content": "<p>And I opened <a href=\"https://github.com/leanprover/lean4/pull/2735\">lean4#2735</a> for the lake README issue.</p>",
        "id": 397984157,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698021732
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Lean.20extension.20reverts.20mathlib.20version/near/397975010\">said</a>:</p>\n<blockquote>\n<p>I'm pretty sure this is no longer true, and hasn't been for a month or more</p>\n</blockquote>\n<p>Oh, then I apologise for this false accusation. I've been out of the loop for nearly a month because of teaching. Sorry.</p>",
        "id": 398016350,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1698041284
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Lean.20extension.20reverts.20mathlib.20version/near/397984016\">said</a>:</p>\n<blockquote>\n<p>I opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/7846\">#7846</a>, but I want to wait until CI provides oleans to be able to actually test this code (which is mostly lifted from the postUpdate docstring in lake).</p>\n</blockquote>\n<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span></p>",
        "id": 400851961,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699409525
    },
    {
        "content": "<p>To be honest I'm not quite sure how to test that code in a real situation.</p>",
        "id": 400852988,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699410074
    },
    {
        "content": "<p>And the new VSCode extension made it a lot less urgent.</p>",
        "id": 400853091,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699410124
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8243\">#8243</a> looks like another attempt at the same thing</p>",
        "id": 400853375,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699410260
    },
    {
        "content": "<p>Indeed.</p>",
        "id": 400853490,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699410315
    }
]