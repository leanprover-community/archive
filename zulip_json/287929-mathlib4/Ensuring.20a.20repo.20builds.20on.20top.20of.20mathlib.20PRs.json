[
    {
        "content": "<p>If I have an existing lake repo, and move some of its theorems into a mathlib PR, how does one best ensure the repo builds on top of the PR?  Should I make the branch inside the lake-packages directory, or would that be clobbered?</p>",
        "id": 396654659,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1697293198
    },
    {
        "content": "<p>I usually make sure everything builds before I first open the PR and don't bother fixing downstream stuff every time someone asks for a change.</p>",
        "id": 396654836,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697293337
    },
    {
        "content": "<p>You can also make your project depend on a specific commit of mathlib, be it on <code>master</code> or on your PR.</p>",
        "id": 396654867,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697293371
    },
    {
        "content": "<p>Everything builds already, so roughly I’ve already done step one.  Yoloing the rest is okay I suppose.</p>",
        "id": 396655472,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1697293967
    },
    {
        "content": "<p>Concretely, the \"correct\" way to do this is to modify the <code>lakefile.lean</code> of your project to contain </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"7d308680dc444730e84a86c72357ad9a7aea9c4b\"</span>\n</code></pre></div>\n<p>where you specify the commit of the mathlib-PR you build on. That way you can use the cache that CI built for the PR</p>\n<p>Then you call the usual</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">lake</span> <span class=\"n\">build</span>\n</code></pre></div>\n<p>in your project.</p>\n<p>Don't do any manual git-stuff inside <code>lake-packages</code>, that will only be prone to problems down the line.</p>",
        "id": 396657326,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1697295715
    },
    {
        "content": "<p>The cache never works for me (on M1 or M2 Mac); not sure if that’s expected.</p>",
        "id": 396667065,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1697304910
    },
    {
        "content": "<p>No that’s not! If you’re going to work on mathlib we should definitely work on solving that</p>",
        "id": 396669891,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1697308145
    },
    {
        "content": "<p>Fixed: This was just me not running the command (I hadn't tried since learning it didn't work on Lean 3).</p>\n<p>Edit:  No, still doesn't work in the <code>ray</code> repo.  It works fine for <code>mathlib</code> itself, though, so I'm not immediately blocked.</p>",
        "id": 396673430,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1697312254
    },
    {
        "content": "<p>What do you mean by \"doesn't work on the <code>ray</code> repo\"? Do you mean the whole command fails when you call it inside the <code>ray</code> repo, or that is doesn't find cache for the <code>ray</code> repo but does find cache for mathlib? The latter is expected: you probably haven't set up a caching mechanism for your repo. The former would be quite bad and unexpected.</p>",
        "id": 396674626,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697313767
    },
    {
        "content": "<p>It downloads cached files without complaint, but then for some reason it proceeds to build 1800 mathlib files anyways on <code>lake build</code>.  Here is a from scratch reproduction...no, <strong>actually checking out a fresh repo at the same CL doesn't have the same problem</strong>.  So somehow my checkout is corrupted, and this seems not worth chasing down.</p>\n<p>Fixed!</p>",
        "id": 396674902,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1697314141
    },
    {
        "content": "<p>Just in case you don't know about it, <code>lake exe cache get!</code> forces the redownload of all files.</p>",
        "id": 396674928,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697314197
    },
    {
        "content": "<p>Great, that seems to have fixed the initial repo too. :)</p>",
        "id": 396675023,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1697314272
    },
    {
        "content": "<p>(And often merely <code>lake clean &amp;&amp; lake exe cache get</code> suffices, but <code>lake clean &amp;&amp; lake exe cache get!</code> is even more thorough!)</p>",
        "id": 396686422,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697327868
    }
]