[
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/2790\">lean4#2790</a> changes the way some \"internal\" errors are handled, and it particular makes it \"harder to catch\" them, so when they occur they will break whatever is going on.</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8056\">#8056</a> is the Mathlib adaptation PR. </p>\n<p>There are currently several failures of <code>simp</code> or <code>norm_num</code>, all occurring in <code>Archive/</code>, where previously a \"max recursion depth\" error was being caught, and then the recovery path successfully finished the proof, but now the max recursion depth error is causing a crash.</p>\n<p>If anyone is able to look at these, that would be very helpful! A first step might just be to identify where the error is coming from, and/or who used to catch it!</p>",
        "id": 399646876,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698808740
    },
    {
        "content": "<p>Does locally increasing the depth help?</p>",
        "id": 399681295,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698827981
    },
    {
        "content": "<p>Not super helpful but: similar to <a href=\"https://github.com/leanprover/lean4/pull/2790/commits/6d51f350c48d16a3f28577e7238ebdeec229e186\">the failure Leo fixed in Lean's testsuite</a> as part of <a href=\"https://github.com/leanprover/lean4/pull/2790\">lean4#2790</a>, this seems to be related to simp calling decide (in this case, norm_num is calling simp). I haven't actually checked it but I'm saying this because in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7834\">#7834</a> I had to change the same line that's failing tests in Imo1960Q2.lean.</p>",
        "id": 399682544,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1698828598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/request.20for.20help.20with.20failure.20in.20Archive/near/399681295\">said</a>:</p>\n<blockquote>\n<p>Does locally increasing the depth help?</p>\n</blockquote>\n<p>Ah, should have said this: no, increasing the depth only makes it slower, it still fails.</p>",
        "id": 399703905,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698836881
    },
    {
        "content": "<p>I pushed an ugly workaround for Imo1962Q1: <a href=\"https://github.com/leanprover-community/mathlib4/pull/8056/commits/e2c18145218773d1dd36a85d1ef3c0ccfc8c437a\">https://github.com/leanprover-community/mathlib4/pull/8056/commits/e2c18145218773d1dd36a85d1ef3c0ccfc8c437a</a></p>",
        "id": 399771718,
        "sender_full_name": "David Renshaw",
        "timestamp": 1698861152
    },
    {
        "content": "<p>(and opened some related discussion: <a href=\"#narrow/stream/287929-mathlib4/topic/whnf.20blowup.20in.20Nat.2Edigits/near/399757322\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/whnf.20blowup.20in.20Nat.2Edigits/near/399757322</a> )</p>",
        "id": 399771760,
        "sender_full_name": "David Renshaw",
        "timestamp": 1698861180
    },
    {
        "content": "<p>Note that <code>Archive/Imo/Imo1960Q1</code> is still failing.</p>",
        "id": 399834739,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698889979
    },
    {
        "content": "<p>\"fixed\" Imo1960Q1 with the same idea here: <a href=\"https://github.com/leanprover-community/mathlib4/pull/8056/commits/f95d8117507cc9401a046ffd9d49764e2373cd18\">https://github.com/leanprover-community/mathlib4/pull/8056/commits/f95d8117507cc9401a046ffd9d49764e2373cd18</a></p>",
        "id": 399958124,
        "sender_full_name": "David Renshaw",
        "timestamp": 1698937209
    },
    {
        "content": "<p>This actually makes the proof go much faster than it currently does on master</p>",
        "id": 399958225,
        "sender_full_name": "David Renshaw",
        "timestamp": 1698937223
    },
    {
        "content": "<p>workaround for BirthdayProblem: <a href=\"https://github.com/leanprover-community/mathlib4/pull/8056/commits/0010b07b87adb9fa5d065e6c1a2b5898729907bf\">https://github.com/leanprover-community/mathlib4/pull/8056/commits/0010b07b87adb9fa5d065e6c1a2b5898729907bf</a></p>",
        "id": 399977782,
        "sender_full_name": "David Renshaw",
        "timestamp": 1698941791
    }
]