[
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/2790\">lean4#2790</a> changes the way some \"internal\" errors are handled, and it particular makes it \"harder to catch\" them, so when they occur they will break whatever is going on.</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8056\">#8056</a> is the Mathlib adaptation PR. </p>\n<p>The main problem in Mathlib itself is that the <code>ùìù[‚â†]</code> notation is broken, with many usages now resulting in a \"max recursion depth\" error (that was previously being caught and recovered from).</p>\n<p>If anyone is available to look at this (someone interested in both filters and notation? :-), that would be very helpful.</p>",
        "id": 399647325,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698808984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I hope I fixed this one. It took me a lot more time to locate the workaround commits I should revert than to see why this notation was problematic. I think it would have been faster to ask before writing the workarounds (but I'm fully aware that you need to be efficient when doing this huge and very useful work of porting Mathlib to recent changes in core).</p>",
        "id": 399734444,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698848237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> do you mind explaining what was wrong with the notation? I looked last night and couldn't figure out the problem.</p>",
        "id": 399756351,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698855073
    },
    {
        "content": "<p>It uses <code>{x}</code> which very often requires type ascription help.</p>",
        "id": 399764775,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698858140
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, sorry, I'm unclear what state this is in now. Should I revert the workarounds I made?</p>",
        "id": 399829105,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698886586
    },
    {
        "content": "<p>The filter stuff should be good, I reverted your commits.</p>",
        "id": 399832811,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698888795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, would you mind checking again? When I look at the PR diff it still seems to have many <code>nbhdsWithin</code>.</p>",
        "id": 399839190,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698892357
    },
    {
        "content": "<p>Sorry, it seems my heuristic to figure out which commit to revert was not good enough.</p>",
        "id": 399839353,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698892454
    },
    {
        "content": "<p>I'll take another look.</p>",
        "id": 399839366,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698892461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> it should be ok now.</p>",
        "id": 399840031,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698892803
    }
]