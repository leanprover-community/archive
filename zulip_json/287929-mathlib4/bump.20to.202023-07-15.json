[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>, the latest Mathlib bump PR is working except for the <code>CommDiag</code> test of ProofWidgets.</p>\n<p>Would you be able to look at <a href=\"https://github.com/leanprover-community/mathlib4/pull/5992\">#5992</a>?</p>",
        "id": 376871583,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689837871
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">test</span><span class=\"bp\">/</span><span class=\"n\">CommDiag.lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">object</span> <span class=\"n\">file</span>\n<span class=\"bp\">'./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets</span><span class=\"bp\">/</span><span class=\"n\">Component</span><span class=\"bp\">/</span><span class=\"n\">GoalTypePanel.olean'</span>\n<span class=\"n\">of</span> <span class=\"n\">module</span> <span class=\"n\">ProofWidgets.Component.GoalTypePanel</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"n\">exist</span>\n</code></pre></div>",
        "id": 376872122,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689838023
    },
    {
        "content": "<p>The test is working fine from VSCode; the failure seems to just be in CI.</p>",
        "id": 376872643,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689838160
    },
    {
        "content": "<p>Pushed a potential fix.</p>",
        "id": 377051640,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1689872205
    },
    {
        "content": "<p>Excellent, thanks, I can take it from there.</p>",
        "id": 377129580,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689894054
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> has marked this topic as resolved.</p>",
        "id": 377371240,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689959493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> has marked this topic as unresolved.</p>",
        "id": 377508546,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690010992
    },
    {
        "content": "<p>This has been marked as resolved (never really useful), but still isn't merged! :-) If someone could review this that would be great. Staying up to date with Lean saves lots of hassle.</p>",
        "id": 377508700,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690011021
    },
    {
        "content": "<p><a href=\"http://speedcenter.informatik.kit.edu/mathlib4/run-detail/1fa02e6d-71e6-4183-bded-91b8488955bd\">http://speedcenter.informatik.kit.edu/mathlib4/run-detail/1fa02e6d-71e6-4183-bded-91b8488955bd</a> suggests that this has had a significant performance loss on some files</p>",
        "id": 379307261,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690493750
    },
    {
        "content": "<p>We really need to be doing the bumps constantly, so we can more easily pinpoint what causes a regression like this. Having a bump PR take weeks to be merged is not so great.</p>",
        "id": 379326745,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690503213
    },
    {
        "content": "<p>One way to do that would be to bump by smaller amounts each time: for instance, bumping to the version just before a major Std/mathlib interface refactor (which should be a trivial merge), then bumping for the refactor alone (in this case the Fin stuff)</p>",
        "id": 379327020,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690503352
    },
    {
        "content": "<p>The constraint for bumping by smaller amount is how long review is taking. The last bump PR took 8 days to merge.</p>",
        "id": 379331210,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690505138
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6196\">#6196</a> bumps to 2023-07-19, which is easy because that's what Std is at.</p>",
        "id": 379331349,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690505175
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/std4/pull/201\">std4#201</a> is the no-op bump of Std to 2023-07-24. Past that requires some changes.</p>",
        "id": 379333145,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690505780
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/std4/pull/202\">std4#202</a> then bumps to 2023-07-25, which requires some changes to rewrites because of <a href=\"https://github.com/leanprover/lean4/pull/2317\">lean4#2317</a>.</p>",
        "id": 379341251,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690509325
    }
]