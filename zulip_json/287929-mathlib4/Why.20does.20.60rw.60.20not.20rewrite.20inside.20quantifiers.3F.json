[
    {
        "content": "<p>As title, why doesn't <code>rw</code> rewrite inside quantifiers? Is it because of performance issues or what? I know <code>simp_rw</code> does but the issue seems counterintuitive for beginners.</p>",
        "id": 397332260,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1697641260
    },
    {
        "content": "<p><code>rw</code> and <code>simp</code> (which is what <code>simp_rw</code> is itself using) use completely different techniques to rewrite. The <code>rw</code> tactic <em>does</em> permit rewriting under quantifiers, but the rewritten term just can't reference any of the bound variables. Both <code>rw</code> and <code>simp</code> can do things that the other cannot; <code>simp</code> only can rewrite one thing at a time, which can be a problem when there are complicated dependent types, but <code>simp</code> is able to reliable rewrite under binders because it can use <code>funext</code> to navigate into such subexpressions.</p>\n<p>I'd tried explaining it <a href=\"#narrow/stream/287929-mathlib4/topic/simp.20vs.20rw.20again/near/391348828\">here</a>, but there are other explanations scattered around Zulip as well. (Probably searching for \"rw\" and \"binders\" will help.)</p>",
        "id": 397333925,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1697641725
    },
    {
        "content": "<p>Kyle, it would be nice to gather all those explanations to a blog post or documentation page. I'm sure it would save you time in the long run.</p>",
        "id": 397334429,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697641882
    },
    {
        "content": "<p>I suggest making a FAQ page at <a href=\"https://leanprover-community.github.io/\">https://leanprover-community.github.io/</a> that you can just point to (perhaps even with a zulip command)</p>",
        "id": 397338815,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1697643222
    },
    {
        "content": "<p>Maybe we can adapt <span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> 's older FAQ page</p>",
        "id": 397339004,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1697643274
    },
    {
        "content": "<p>Also, functional extensionality doesn't hold in Lean's type theory (one needs <code>quot.sound</code> to prove it), so rewriting under a lambda requires an additional axiom, and sometimes people want to pay attention to that.</p>",
        "id": 397340013,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1697643607
    },
    {
        "content": "<p>Of course this is irrelevant in \"standard mathematics\".</p>",
        "id": 397340096,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1697643633
    }
]