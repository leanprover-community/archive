[
    {
        "content": "<p>In porting this file I ran across a \"cannot find synthesization order\" error on <code>attribute [local instance] toNorm</code> where the <code>toNorm</code> has type:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">InnerProductSpace.Core.toNorm.</span><span class=\"o\">{</span><span class=\"n\">u_1</span><span class=\"o\">,</span> <span class=\"n\">u_2</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"bp\">✝</span> <span class=\"o\">:</span> <span class=\"n\">IsROrC</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"bp\">✝¹</span> <span class=\"o\">:</span> <span class=\"n\">AddCommGroup</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"bp\">✝²</span> <span class=\"o\">:</span> <span class=\"n\">Module</span> <span class=\"bp\">𝕜</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">Core</span> <span class=\"bp\">𝕜</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Norm</span> <span class=\"n\">F</span>\n</code></pre></div>\n<p>The error says:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cannot</span> <span class=\"n\">find</span> <span class=\"n\">synthesization</span> <span class=\"n\">order</span> <span class=\"n\">for</span> <span class=\"kd\">instance</span> <span class=\"bp\">@</span><span class=\"n\">toNorm</span> <span class=\"k\">with</span> <span class=\"n\">type</span>\n  <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"bp\">→</span>\n    <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">}</span> <span class=\"bp\">→</span> <span class=\"o\">[</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">IsROrC</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"bp\">→</span> <span class=\"o\">[</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">AddCommGroup</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"bp\">→</span> <span class=\"o\">[</span><span class=\"n\">inst_2</span> <span class=\"o\">:</span> <span class=\"n\">Module</span> <span class=\"bp\">𝕜</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"bp\">→</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">Core</span> <span class=\"bp\">𝕜</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"bp\">→</span> <span class=\"n\">Norm</span> <span class=\"n\">F</span>\n<span class=\"n\">all</span> <span class=\"n\">remaining</span> <span class=\"n\">arguments</span> <span class=\"k\">have</span> <span class=\"n\">metavariables</span><span class=\"o\">:</span>\n  <span class=\"n\">IsROrC</span> <span class=\"bp\">?𝕜</span>\n  <span class=\"bp\">@</span><span class=\"n\">Module</span> <span class=\"bp\">?𝕜</span> <span class=\"n\">F</span> <span class=\"n\">DivisionSemiring.toSemiring</span> <span class=\"n\">AddCommGroup.toAddCommMonoid</span>\n  <span class=\"bp\">@</span><span class=\"n\">Core</span> <span class=\"bp\">?𝕜</span> <span class=\"n\">F</span> <span class=\"bp\">?</span><span class=\"n\">inst</span><span class=\"bp\">✝</span> <span class=\"n\">inst</span><span class=\"bp\">✝¹</span> <span class=\"bp\">?</span><span class=\"n\">inst</span><span class=\"bp\">✝¹</span>\n</code></pre></div>\n<p>The problem is that <code>𝕜</code> is a metavariable, but since we're looking for as <code>isROrC 𝕜</code> instance, so there are only two options and enumerating all of them is not the problem it usually is. What do I do here? Am I supposed to mark something as a <code>SemiOutParam</code> <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> ?</p>",
        "id": 360620009,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1684869306
    },
    {
        "content": "<p>Yes, since there are only the two instances <code>IsROrC ℝ</code> and <code>IsROrC ℂ</code> it's safe to mark it <code>IsROrC (K : semiOutParam Type)</code>.</p>",
        "id": 360620667,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1684869490
    },
    {
        "content": "<p>It would only be an issue if we had an instance like <code>[ConditionallyCompleteLinearOrderedField K] : IsROrC K</code>.</p>",
        "id": 360621135,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1684869588
    },
    {
        "content": "<p>And I mark this on the declaration <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsROrC#doc\">docs4#IsROrC</a> itself right, not when setting up <code>variable</code>s or in the declaration <code>toNorm</code>?</p>",
        "id": 360621649,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1684869778
    },
    {
        "content": "<p>Yes, that should be on <code>IsROrC</code> directly.</p>",
        "id": 360622797,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1684870151
    },
    {
        "content": "<p>I think this definition is only used internally anyway, so presumably it could just be set up locally somehow?</p>",
        "id": 360627861,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684871979
    },
    {
        "content": "<p>Which is to say, <code>inner_product_space</code> itself no longer relies on:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.234280.20Analysis.2EInnerProductSpace.2EBasic/near/360620667\">said</a>:</p>\n<blockquote>\n<p>Yes, since there are only the two instances <code>IsROrC ℝ</code> and <code>IsROrC ℂ</code> it's safe to mark it <code>IsROrC (K : semiOutParam Type)</code>.</p>\n</blockquote>",
        "id": 360627979,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684872007
    },
    {
        "content": "<p>ah shoot, I just realized I was supposed to wait for <a href=\"https://github.com/leanprover-community/mathlib/pull/19058\">#19058</a> to start this. My bad. I'll just keep my edits locally as I'm about half way done. <span class=\"user-mention\" data-user-id=\"412682\">@Moritz Doll</span> please let me know when that gets merged and then I'll pull in the new version from mathport.</p>",
        "id": 360658415,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1684885884
    },
    {
        "content": "<p>Moritz said I should just continue with porting this file. I have just pushed changes and there are only a few errors left.</p>\n<ol>\n<li>In one case I had to increase the <code>synthInstance.maxHeartbeats</code> to 80000 <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> </li>\n<li><code>toSesqForm</code> is broken and I don't really understand why, but it seems to be something to do with applying <code>LinearIsometryEquiv.toContinuousLinearEquiv</code> to <code>(ContinuousLinearMap.flipₗᵢ' E E' 𝕜 (starRingEnd 𝕜) (RingHom.id 𝕜))</code></li>\n<li>I haven't yet edited names or anything, I've only dealt with errors.</li>\n</ol>\n<p>Help welcome unless I say otherwise. I'll be asleep for 8 hours or so.</p>",
        "id": 360681035,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1684900148
    },
    {
        "content": "<p>I'm locking this file again to work on it.</p>",
        "id": 360778105,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1684932167
    },
    {
        "content": "<p>This is green, but there are two places where I had to increase <code>maxHeartbeats</code> by a <em>lot</em>. We should probably deal with these, but I need help because I couldn't figure it out.</p>",
        "id": 360873781,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1684954601
    }
]