[
    {
        "content": "<p>If anyone is feeling enthusiastic about wrangling <code>congr</code>, there is a nasty case of not being able to reproduce the behaviour of <code>congr</code> from a mathlib3 proof in this PR. <a href=\"https://github.com/leanprover-community/mathlib4/pull/4572\">!4#4572</a></p>",
        "id": 365850801,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686658908
    },
    {
        "content": "<p>It is now the last sorry in this file.</p>",
        "id": 365850823,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686658915
    },
    {
        "content": "<p>(Well, I turned the second last sorry into a maxHeartbeats 700000, so perhaps that still counts as a second sorry.)</p>",
        "id": 365850939,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686658937
    },
    {
        "content": "<p>I'll give it a shot</p>",
        "id": 365850944,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686658938
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Sorry for missing your message, but I think I have it working. Do you mind if I push it?</p>",
        "id": 365871697,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1686663315
    },
    {
        "content": "<p>Ah, just realised you pushed a wip too, so I won't push mine. Here's the diff wrt <code>\n22dd58d</code> instead, if it's useful (in particular, feel free to push it, as I won't have Internet access until tomorrow).</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/Mathlib/Analysis/Analytic/Composition.lean b/Mathlib/Analysis/Analytic/Composition.lean</span>\n<span class=\"gh\">index e0c3e4b0d..6a411cd14 100644</span>\n<span class=\"gd\">--- a/Mathlib/Analysis/Analytic/Composition.lean</span>\n<span class=\"gi\">+++ b/Mathlib/Analysis/Analytic/Composition.lean</span>\n<span class=\"gu\">@@ -1166,19 +1166,23 @@ def sigmaEquivSigmaPi (n : ℕ) :</span>\n<span class=\"w\"> </span>      simp [map_ofFn, (· ∘ ·), Composition.blocks_sum, Composition.ofFn_blocksFun]\n<span class=\"w\"> </span>    rw [sigma_pi_composition_eq_iff]\n<span class=\"w\"> </span>    dsimp\n<span class=\"gd\">-    -- Porting FIXME: I can't work out how to reproduce the behaviour of the `congr`</span>\n<span class=\"gd\">-    -- that appears at this point in mathlib3, and so the proof goes off track here.</span>\n<span class=\"gd\">-    congr! 2</span>\n<span class=\"gd\">-    · ext1</span>\n<span class=\"gi\">+    congr! 1</span>\n<span class=\"gi\">+    · congr</span>\n<span class=\"gi\">+      ext1</span>\n<span class=\"w\"> </span>      dsimp [Composition.gather]\n<span class=\"w\"> </span>      rwa [splitWrtComposition_join]\n<span class=\"w\"> </span>      simp only [map_ofFn]\n<span class=\"w\"> </span>      rfl\n<span class=\"gd\">-    · congr</span>\n<span class=\"gd\">-    · ext1</span>\n<span class=\"gd\">-      dsimp [Composition.gather, sigmaCompositionAux]</span>\n<span class=\"gd\">-      simp [get_splitWrtComposition]</span>\n<span class=\"gd\">-      sorry</span>\n<span class=\"gi\">+    · rw [Fin.heq_fun_iff]</span>\n<span class=\"gi\">+      · intro i</span>\n<span class=\"gi\">+        dsimp [Composition.sigmaCompositionAux]</span>\n<span class=\"gi\">+        rw [get_of_eq (splitWrtComposition_join _ _ _)]</span>\n<span class=\"gi\">+        · simp only [get_ofFn]</span>\n<span class=\"gi\">+          rfl</span>\n<span class=\"gi\">+        · simp only [map_ofFn]</span>\n<span class=\"gi\">+          congr</span>\n<span class=\"gi\">+        · simp only [map_ofFn]</span>\n<span class=\"gi\">+          rfl</span>\n<span class=\"w\"> </span>#align composition.sigma_equiv_sigma_pi Composition.sigmaEquivSigmaPi\n\n<span class=\"w\"> </span>end Composition\n</code></pre></div>\n</div></div>",
        "id": 365872540,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1686663484
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> Johan is unable to post for some reason, but he mentioned to me privately that he likes your version better!</p>",
        "id": 365905182,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686669551
    },
    {
        "content": "<p>Pushed, thanks!</p>",
        "id": 365909184,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1686670188
    },
    {
        "content": "<p>It has a <span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span>, did you want to mark it <code>awaiting-review</code>?</p>",
        "id": 365918261,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686672002
    },
    {
        "content": "<p>I've merged now. Nice work, everyone!</p>",
        "id": 366002646,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686694037
    },
    {
        "content": "<p>Sorry for disappearing suddenly after pushing the wip commit. I can't access zulip at home atm, because my laptop is bricked. I thought new hardware would arrive yesterday, but it seems like I have to wait one more day.</p>",
        "id": 366053292,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686721012
    },
    {
        "content": "<p>I'm glad the PR got merged while I was offline <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 366053320,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686721024
    }
]