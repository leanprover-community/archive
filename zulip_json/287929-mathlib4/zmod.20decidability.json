[
    {
        "content": "<p>I'm very confused by a decidability failure involving <code>ZMod</code>, see below.  The failure is very fragile - - reversing argument order makes it go away, as does removing an <code>intro/revert</code> pair, changing <code>ZMod</code> to <code>Fin</code>, or changing the associativity in <code>P</code>.  I was also not able to make it smaller by removing clauses of <code>P</code> (I'm not sure I tried each clause, but I tried several).</p>\n<p>Any ideas what the issue is here?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.ZMod.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.DeriveFintype</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">3</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Fintype</span><span class=\"o\">,</span> <span class=\"n\">DecidableEq</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">e</span><span class=\"o\">}</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">¬</span> <span class=\"o\">((</span><span class=\"n\">Foo.mk</span> <span class=\"n\">x</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">k</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">j</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">≠</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">))</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">3</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">revert</span> <span class=\"n\">x</span> <span class=\"n\">j</span> <span class=\"n\">k</span>\n  <span class=\"n\">decide</span> <span class=\"c1\">-- fails</span>\n\n<span class=\"c1\">-- bug disappears after reversing argument order</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">3</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">revert</span> <span class=\"n\">x</span> <span class=\"n\">j</span> <span class=\"n\">k</span>\n  <span class=\"n\">decide</span> <span class=\"c1\">-- works</span>\n\n<span class=\"c1\">-- bug disappears after pattern-matching part of the goal</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">3</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span>\n  <span class=\"n\">intro</span> <span class=\"o\">⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"o\">⟩</span>\n  <span class=\"n\">revert</span> <span class=\"n\">x</span> <span class=\"n\">j</span> <span class=\"n\">k</span>\n  <span class=\"n\">decide</span> <span class=\"c1\">-- works</span>\n\n<span class=\"c1\">-- bug disappears without spurious introduction/reversion of negation in goal</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">3</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span>\n  <span class=\"n\">revert</span> <span class=\"n\">x</span> <span class=\"n\">j</span> <span class=\"n\">k</span>\n  <span class=\"n\">decide</span> <span class=\"c1\">-- works</span>\n\n<span class=\"c1\">-- bug disappears if use `Fin` rather than `ZMod`</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">revert</span> <span class=\"n\">x</span> <span class=\"n\">j</span> <span class=\"n\">k</span>\n  <span class=\"n\">decide</span> <span class=\"c1\">-- works</span>\n</code></pre></div>",
        "id": 405380665,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1701442803
    },
    {
        "content": "<p>This is a lot less painful to debug as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">abbrev</span> <span class=\"n\">nP</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n  <span class=\"o\">((</span><span class=\"n\">Foo.mk</span> <span class=\"n\">x</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">k</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">j</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∧</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">≠</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Foo.mk</span> <span class=\"mi\">0</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">⟩</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">))</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">¬</span> <span class=\"n\">nP</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"n\">x</span>\n</code></pre></div>",
        "id": 405383409,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701443641
    },
    {
        "content": "<p>Sorry Eric, I didn't understand this comment ... what is the issue? (Thanks for looking)</p>",
        "id": 405384493,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1701443956
    },
    {
        "content": "<p>Oh I  have no idea what the issue is, but that makes the goal view at the failure a lot shorter!</p>",
        "id": 405384701,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701444014
    },
    {
        "content": "<p>Ah! :)</p>",
        "id": 405384764,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1701444037
    },
    {
        "content": "<p>It appears to be an issue with the instance size limit. <code>set_option synthInstance.maxSize 200 in decide</code> fixes the issue</p>",
        "id": 405423071,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701457732
    }
]