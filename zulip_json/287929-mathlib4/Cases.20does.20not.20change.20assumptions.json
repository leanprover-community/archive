[
    {
        "content": "<p>I noticed that sometimes <code>cases</code> does not modify assumptions - is this intentional?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Polynomial.Degree.Definitions</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">f.degree</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f.degree</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">f.degree</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span> <span class=\"c1\">-- fails, because `h` did not get changed</span>\n  <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span> <span class=\"c1\">-- fails, because `h` did not get changed</span>\n</code></pre></div>\n<p>I could certainly do <code>revert h</code> and <code>intro h</code> afterwards, or <code>cases h : f.degree</code> and <code>rw [h]</code> at necessary places, but both seem redundant.</p>",
        "id": 368349814,
        "sender_full_name": "David Ang",
        "timestamp": 1687377659
    },
    {
        "content": "<p>See also <a href=\"#narrow/stream/113489-new-members/topic/Matching.20and.20updating.20structure.20fields/near/366563143\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Matching.20and.20updating.20structure.20fields/near/366563143</a></p>",
        "id": 368373868,
        "sender_full_name": "Grant Barkley",
        "timestamp": 1687386447
    }
]