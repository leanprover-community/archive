[
    {
        "content": "<p>I (think I) yanked all occurrences of <code>etaExperiment</code> in this branch</p>",
        "id": 358558067,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684180185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306577\">@Matthew Ballard</span>, when you removed all the <code>maxHeartbeats</code> you left in place many of the now redundant <code>-- Porting note</code>s. I commented on many, but I think it might be easier to just let you do another pass rather than leave excessively many review comments.</p>",
        "id": 358574243,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684185994
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/358574243\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"306577\">Matthew Ballard</span>, when you removed all the <code>maxHeartbeats</code> you left in place many of the now redundant <code>-- Porting note</code>s. I commented on many, but I think it might be easier to just let you do another pass rather than leave excessively many review comments.</p>\n</blockquote>\n<p>Feel free to revert. Lesson: two bumps remain. Everything else can be removed.</p>",
        "id": 358574933,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684186259
    },
    {
        "content": "<p>In the middle of the evening routine and might not touch things again until tomorrow morning.</p>",
        "id": 358578676,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684187978
    },
    {
        "content": "<p>I've cleaned up these porting notes now.</p>",
        "id": 358586938,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684191912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>, as far as I'm concerned I think it's okay to merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/4009\">!4#4009</a> into reenableeta.</p>",
        "id": 358587161,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684192019
    },
    {
        "content": "<p>For that matter, I think after doing that it's fine to just merge reenableeta, and then tomorrow we'll switch the toolchain back to the nightly. I don't think it's particularly harmful to use a custom toolchain temporarily. This will enable everyone to fix up all the branches which rely on this without having to do the dependent PR dance.</p>",
        "id": 358587263,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684192081
    },
    {
        "content": "<p>I got as far as reviewing through to Mathlib/LinearAlgebra/Matrix/Basis.lean on the <a href=\"https://github.com/leanprover-community/mathlib4/pull/3414\">!4#3414</a> branch, and am happy with the changes through to there, but am now offline for a while.</p>",
        "id": 358602873,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684199273
    },
    {
        "content": "<p>It would be great if someone could look through the rest.</p>",
        "id": 358602894,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684199280
    },
    {
        "content": "<p>We do have a lot of porting notes referencing <a href=\"https://github.com/leanprover/lean4/pull/2074\">lean4#2074</a>, which should all be fixed up now, but I propose we do that in a second PR, after getting <a href=\"https://github.com/leanprover-community/mathlib4/pull/3414\">!4#3414</a> through.</p>",
        "id": 358603028,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684199314
    },
    {
        "content": "<p>10 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/port.20progress\">#mathlib4 &gt; port progress</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span>.</p>",
        "id": 358603139,
        "sender_full_name": "Notification Bot",
        "timestamp": 1684199359
    },
    {
        "content": "<p>Mathlib.RingTheory.Finiteness has many messy porting notes that can be cleaned up post <a href=\"https://github.com/leanprover/lean4/pull/2210\">lean4#2210</a>. If someone is keen to clean up, please push fixes direct to <a href=\"https://github.com/leanprover-community/mathlib4/pull/3414\">!4#3414</a>. Otherwise, let's not wait on this file for <a href=\"https://github.com/leanprover-community/mathlib4/pull/3414\">!4#3414</a>.</p>",
        "id": 358606611,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684201093
    },
    {
        "content": "<p>I'm still cleaning up comments in reenableeta. I won't name names or anything, but do please be careful doing regex modifications: A change that takes the comment</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Porting note:</span>\n<span class=\"c1\">-- This is another alarming location where we need to use</span>\n<span class=\"c1\">-- `eta_experiment%` to elaborate a particular subterm, but having `synthInstance.etaExperiment`</span>\n<span class=\"c1\">-- on for the whole declaration breaks other typeclass search.</span>\n</code></pre></div>\n<p>and just deletes the 3rd line is not particularly helpful. :-)</p>",
        "id": 358613914,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684206991
    },
    {
        "content": "<p>It builds!</p>",
        "id": 358652138,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1684224592
    },
    {
        "content": "<p>There is further cleanup that can be done, but I'm taking the attitude that if there's any cleanup related to this PR where there is already a porting note that mentions <a href=\"https://github.com/leanprover/lean4/pull/2074\">lean4#2074</a>, <a href=\"https://github.com/leanprover/lean4/pull/2210\">lean4#2210</a>, or <a href=\"https://github.com/leanprover-community/mathlib4/pull/3414\">!4#3414</a>, then we can do that cleanup later. :-)</p>",
        "id": 358653454,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684224950
    },
    {
        "content": "<p>The nightly is out too</p>",
        "id": 358655126,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1684225437
    },
    {
        "content": "<p>Okay, I have bumped <a href=\"https://github.com/leanprover-community/mathlib4/pull/3414\">!4#3414</a> to use the nightly, but something is seriously weird. In <code>Mathlib.AlgebraicTopology.DoldKan.HomotopyEquivalence</code> something that should be an <code>n + 2</code> is apparently now a <code>Nat.succ n + 1 + 1</code>.</p>",
        "id": 358669863,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684229194
    },
    {
        "content": "<p>I am bamboozled. This wasn't happening on Gabriel's tag, so this is some interaction with one of the other commits on <code>leanprover/lean4:nightly-2023-05-16</code>?</p>",
        "id": 358671080,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684229426
    },
    {
        "content": "<p>I have to admit that debugging 4 line <code>simpa</code> commands makes me want to say that ... we shouldn't have 4 line <code>simpa</code> commands, and this is precisely what <code>have</code> is for.</p>",
        "id": 358671393,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684229497
    },
    {
        "content": "<p>Isn't that <a href=\"https://github.com/leanprover/lean4/pull/2146\">lean4#2146</a>?</p>",
        "id": 358674417,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1684230284
    },
    {
        "content": "<p>Yeah. Similar things were already occurring with existing nightly. Not sure why it changed now in this file.</p>",
        "id": 358681150,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684231916
    },
    {
        "content": "<p>Isnâ€™t that PR merged in the most recent nightly?</p>",
        "id": 358681320,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684231964
    },
    {
        "content": "<p>Yes, <a href=\"https://github.com/leanprover/lean4/pull/2146\">lean4#2146</a> hasn't landed in <code>master</code>, it is coming in on <a href=\"https://github.com/leanprover-community/mathlib4/pull/3414\">!4#3414</a> (hopefully very soon).</p>",
        "id": 358683581,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684232636
    },
    {
        "content": "<p>I've fixed this issue. I left the proof \"ungolfed\" so its easier to understand the regression. There's a porting note.</p>",
        "id": 358683737,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684232675
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3414/commits/ea334e44c4ca827fbf45c58fb8d6c4933d1ccb10\">https://github.com/leanprover-community/mathlib4/pull/3414/commits/ea334e44c4ca827fbf45c58fb8d6c4933d1ccb10</a></p>",
        "id": 358683757,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684232685
    },
    {
        "content": "<p>I also mentioned it back on <a href=\"https://github.com/leanprover/lean4/pull/2146\">lean4#2146</a>.</p>",
        "id": 358683785,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684232696
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3414\">!4#3414</a> is merged</p>",
        "id": 358727376,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684242778
    },
    {
        "content": "<p>Does this mean we can now drop a bunch of:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"kd\">instance</span><span class=\"o\">]</span> <span class=\"n\">Ring.toNonAssocRing</span>\n</code></pre></div>\n<p>(and similar)?</p>",
        "id": 358729099,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1684243139
    },
    {
        "content": "<p>Many of those are gone now. There is still additional cleanup from other ad-hoc workarounds that are now in master.</p>",
        "id": 358729463,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684243204
    },
    {
        "content": "<p>OK great. A quick experiment showed me some still remain but in each case they were not necessary. I don't really have time for Lean at the moment but if they're still present in a week or so, I'll try to do some more cleanup of ad-hoc workarounds like this.</p>",
        "id": 358730047,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1684243323
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/reenableeta.20!4.233414/near/358613914\">said</a>:</p>\n<blockquote>\n<p>I'm still cleaning up comments in reenableeta. I won't name names or anything, but do please be careful doing regex modifications</p>\n</blockquote>\n<p>Apologies for leaving a mess and much thanks for cleaning it up!</p>",
        "id": 358734163,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684244132
    },
    {
        "content": "<p>There are four further cleanup PRs at <a href=\"https://github.com/leanprover-community/mathlib4/pull/4029\">!4#4029</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/4031\">!4#4031</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/4032\">!4#4032</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/4033\">!4#4033</a>.</p>",
        "id": 358750925,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684247366
    },
    {
        "content": "<p>Also <a href=\"https://github.com/leanprover-community/mathlib4/pull/4028\">!4#4028</a></p>",
        "id": 358751873,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684247571
    },
    {
        "content": "<p>And <a href=\"https://github.com/leanprover-community/mathlib4/pull/4030\">!4#4030</a> too!</p>",
        "id": 358752399,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684247671
    },
    {
        "content": "<p>I think we just had a three-way collision, but note that the simpNF linter still fails on <a href=\"https://github.com/leanprover-community/mathlib4/pull/3651\">!4#3651</a> (AffineIsometry) even with global eta</p>",
        "id": 358753249,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684247839
    },
    {
        "content": "<p>Looks like there will only be whitespace conflicts, however. I just delegated yours, <span class=\"user-mention\" data-user-id=\"598052\">@Jeremy Tan</span>, please merge when you have a green dot! :-)</p>",
        "id": 358753802,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1684247945
    }
]