[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I know mathport is broken right now anyway, but I think I found a bug. In the file <code>linear_algebra.quotient</code>, there is an occurence of <code>P^.quotient.mk_smul</code> in the mathlib 3 source, where <code>P : submodule R M</code> and this is some dot notation magic that unfolds to <code>submodule.quotient.mk_smul P</code>. Mathport translated this as <code>P</code>. I'm not sure what the <code>^</code> notation means anyway.</p>",
        "id": 327881340,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1676411781
    },
    {
        "content": "<p><code>foo^.bar.baz</code> where <code>foo : Foo</code> means <code>Foo.bar.baz foo</code></p>",
        "id": 327881429,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676411823
    },
    {
        "content": "<p>As opposed to <code>foo.bar.baz</code> which means <code>Bar.baz (Foo.bar foo)</code></p>",
        "id": 327881481,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676411851
    },
    {
        "content": "<p>I think this is super-ancient dot notation</p>",
        "id": 327881511,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676411869
    },
    {
        "content": "<p>It is present in 106 lines, 17 files.</p>",
        "id": 327887578,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1676414434
    },
    {
        "content": "<p>at least 1 false positive.</p>",
        "id": 327887697,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1676414502
    },
    {
        "content": "<p>It appears to be a simple bug. This notation is already supported, but the implementation was \"lightly tested\"</p>",
        "id": 327887727,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1676414516
    },
    {
        "content": "<p>While investigating this, I noticed that <code>^.</code> has a secret superpower compared to <code>.</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">list.foo.bar</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">list</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">id</span>\n\n<span class=\"k\">#check</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"bp\">^.</span><span class=\"n\">foo.bar</span> <span class=\"c1\">-- ok</span>\n<span class=\"k\">#check</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"bp\">.</span><span class=\"n\">foo.bar</span>  <span class=\"c1\">-- fail, interpreted as ([1].foo).bar</span>\n</code></pre></div>",
        "id": 327898807,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1676419801
    },
    {
        "content": "<p>this superpower behavior apparently has no equivalent in lean 4: <code>|&gt;.foo.bar</code> is also interpreted as <code>|&gt;.foo |&gt;.bar</code></p>",
        "id": 327899846,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1676420351
    },
    {
        "content": "<p>Yes, that's the power I described here:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathport.20bug.20with.20.60.5E.60/near/327881429\">said</a>:</p>\n<blockquote>\n<p><code>foo^.bar.baz</code> where <code>foo : Foo</code> means <code>Foo.bar.baz foo</code></p>\n</blockquote>",
        "id": 327903379,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676422198
    }
]