[
    {
        "content": "<p>Hi, there is one timeout left in this file. I tried to fix it several times by moving parts to a new lemma but even some simple-looking lemmas fail to elaborate.</p>",
        "id": 362046964,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685402678
    },
    {
        "content": "<p>Example of what fails (and thus I'm not 100% sure that I got it right):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NontriviallyNormedField</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedSpace</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedSpace</span> <span class=\"bp\">𝕜</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">uncurryLeft_uncurryRight</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">[</span><span class=\"bp\">×</span><span class=\"n\">n</span><span class=\"o\">]</span><span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">G</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n    <span class=\"n\">f.uncurryLeft.uncurryRight</span> <span class=\"bp\">=</span>\n      <span class=\"o\">(</span><span class=\"n\">continuousMultilinearCurryRightEquiv'</span> <span class=\"bp\">𝕜</span> <span class=\"n\">n</span> <span class=\"n\">E</span> <span class=\"n\">G</span> <span class=\"bp\">∘</span><span class=\"n\">L</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">uncurryLeft</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 362047020,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685402734
    },
    {
        "content": "<p>UPD: I fixed universes, now I have more failures.</p>",
        "id": 362614329,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685587771
    }
]