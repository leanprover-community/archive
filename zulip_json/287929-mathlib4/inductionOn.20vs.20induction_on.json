[
    {
        "content": "<p>There are some lemmas named <code>*.inductionOn</code> and some named <code>*.induction_on</code> now, should they be unified? If so, which name should be used?</p>",
        "id": 328838513,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1676826652
    },
    {
        "content": "<p>Can you give an example of each?</p>",
        "id": 328838553,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676826679
    },
    {
        "content": "<p>I think it depends on whether they construct data or not</p>",
        "id": 328838567,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1676826693
    },
    {
        "content": "<p>Or should</p>",
        "id": 328838655,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1676826725
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Quot.inductionOn#doc\">docs4#Quot.inductionOn</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Sym2.inductionOn#doc\">docs4#Sym2.inductionOn</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.mod.inductionOn#doc\">docs4#Nat.mod.inductionOn</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Ordinal.inductionOn#doc\">docs4#Ordinal.inductionOn</a><br>\nThese are all theorems (not defs, but there are some elsewhere). Searching in the docs page gives you a lot of examples.</p>",
        "id": 328839178,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1676827003
    },
    {
        "content": "<p>For induction_on:<br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Quot.induction_on#doc\">docs4#Quot.induction_on</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Int.induction_on#doc\">docs4#Int.induction_on</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Part.induction_on#doc\">docs4#Part.induction_on</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Trunc.induction_on#doc\">docs4#Trunc.induction_on</a></p>",
        "id": 328839892,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1676827327
    },
    {
        "content": "<p>Nice catch, especially since some of these are duplicates</p>",
        "id": 328840095,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676827417
    },
    {
        "content": "<p>inductionOn but defs:<br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Vector.inductionOn#doc\">docs4#Vector.inductionOn</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Fin.inductionOn#doc\">docs4#Fin.inductionOn</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Int.inductionOn'#doc\">docs4#Int.inductionOn'</a></p>",
        "id": 328840119,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1676827430
    },
    {
        "content": "<p>Should the defs be recOn, though?</p>",
        "id": 328840335,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1676827524
    }
]