[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/2360\">!4#2360</a>, we need to rename the following lemmas:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"kd\">theorem</span> <span class=\"n\">band</span> <span class=\"o\">:</span> <span class=\"n\">primrec₂</span> <span class=\"n\">band</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"kd\">theorem</span> <span class=\"n\">and</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"n\">p</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"n\">q</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">primrec_pred</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">primrec_pred</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">primrec_pred</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Mathport automatically changed <code>band</code> (boolean and is primitive recursive) to <code>and</code>. What should the old <code>and</code> be called? Some ideas:</p>\n<p>- <code>And</code> to match Prop (but it is a lemma, not a constructor)<br>\n  - <code>intersect</code> -- Because it says <code>primrec_pred</code> is closed under intersection<br>\n  -  <code>pand</code> -- current placeholder name to distinguish it from <code>and</code> (\"p\" for \"Prop\")<br>\nSimilarly, the lemmas <code>primrec.not</code> and <code>primrec.or</code> need to be renamed.</p>",
        "id": 338247346,
        "sender_full_name": "Praneeth Kolichala",
        "timestamp": 1677479385
    },
    {
        "content": "<p>Shouldn't these be in different namespaces?</p>",
        "id": 338277544,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677490826
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/primrec.and\">docs#primrec.and</a></p>",
        "id": 338277614,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677490852
    },
    {
        "content": "<p>The lemmas <code>band</code> and <code>and</code> are currently both in the primrec namespace. The issue is that <code>Bool.band</code> was renamed to <code>Bool.and</code>, and so, to match this, it seems <code>Primrec.band</code> should become <code>Primrec.and</code>. But then what does the old <code>Primrec.and</code> become?</p>",
        "id": 338394381,
        "sender_full_name": "Praneeth Kolichala",
        "timestamp": 1677517282
    },
    {
        "content": "<p>Could the <code>Prop</code> version be renamed to <code>primrec_pred.and</code>?</p>",
        "id": 338394919,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677517398
    }
]