[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/2986\">!4#2986</a>, I add a shortcut instance for coercion of a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearMap#doc\">docs4#LinearMap</a> to a function. Without this instance, Lean fails to generate the coercion in the new file. With this coercion, I get a linter error in <code>LinearAlgebra.Dfinsupp</code>: Lean can simplify some <code>(((s : Finset _) : Set _) : Type _)</code> to <code>(s : Type _)</code> in the LHS.</p>",
        "id": 344583904,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1679800576
    },
    {
        "content": "<p>Another issue is that Lean 4 is very slow on this file but this is probably related to already known issues with typeclasses in Lean 4.</p>",
        "id": 344583965,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1679800641
    },
    {
        "content": "<p>UPD: it compiles (at least, locally) without this instance.</p>",
        "id": 344594628,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1679807143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/!4.232986.20Maschke.20theorem/near/344583965\">said</a>:</p>\n<blockquote>\n<p>Another issue is that Lean 4 is very slow on this file but this is probably related to already known issues with typeclasses in Lean 4.</p>\n</blockquote>\n<p>Please <em>always</em> run the file under <code>--profile</code> before speculating about performance bottlenecks. For example, one of the slowest files, <code>Mathlib.GroupTheory.MonoidLocalization</code>, is dominated by <code>[to_additive]</code> interpretation.</p>",
        "id": 344616486,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1679820844
    },
    {
        "content": "<p>I wonder if this slowdown is related to the non-compiling of RingHoms evaluated I had earlier; maybe it's worth checking that TC doesn't go down some loop?</p>",
        "id": 344638993,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1679829759
    }
]