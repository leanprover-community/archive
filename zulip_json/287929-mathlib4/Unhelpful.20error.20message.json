[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span> <span class=\"c1\">-- error \"expected no space before\" at `|`</span>\n<span class=\"bp\">|</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<p>(Without imports, it already errors at <code>:=</code> with \"unexpected token '|'; expected term\", which I find more helpful.)</p>\n<p>Is there syntax that makes this work? (I.e., with <code>n</code> left of the colon.)</p>",
        "id": 401606701,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1699789278
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">|</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">2</span>\n</code></pre></div>",
        "id": 401606829,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1699789438
    },
    {
        "content": "<p>What's happening is that <code>|</code> is used for mathlib's absolute value notation as well, and to help prevent ambiguities that notation requires no whitespace after the first <code>|</code> and before the second <code>|</code> in <code>|x|</code>. The parser doesn't know that the <code>|</code> after the <code>:=</code> shouldn't be the start of an absolute value expression.</p>",
        "id": 401627884,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699809496
    },
    {
        "content": "<p>The point is that there <em>is</em> no space before the <code>|</code>! Since the <code>|</code>has the red squiggle, the error messsage seems to say that Lean expects no space <em>before the <code>|</code></em>, which is rather absurd in this case.</p>",
        "id": 401630605,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1699812398
    },
    {
        "content": "<p>I don't disagree with you Michael. I'm explaining where the error is coming from because I spent a few minutes looking for what is causing it, and maybe someone will have energy to fix it.</p>",
        "id": 401631011,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699812874
    },
    {
        "content": "<p>I also spent a few minutes trying to see how to get the noWs parser to give a better error message here.</p>",
        "id": 401631064,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699812915
    },
    {
        "content": "<p>IMO the <code>noWs</code> parser should highlight the whitespace and give an error like \"expected no space here\"</p>",
        "id": 401808160,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699894323
    },
    {
        "content": "<p>of course it could also take an optional message for better results in specific contexts</p>",
        "id": 401808271,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699894357
    }
]