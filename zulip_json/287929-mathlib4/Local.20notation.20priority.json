[
    {
        "content": "<p>How can I make</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Abs</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">quotPrecheck</span> <span class=\"n\">false</span> <span class=\"k\">in</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"s2\">\"αⁿ⁺¹\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">αⁿ</span><span class=\"bp\">⁺¹</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">const</span>\n</code></pre></div>\n<p>work? The local notation conflicts with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[inherit_doc]</span>\n<span class=\"kd\">postfix</span><span class=\"o\">:</span><span class=\"mi\">1000</span> <span class=\"s2\">\"⁺\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">PosPart.pos</span>\n</code></pre></div>\n<p>from the imported file.</p>",
        "id": 364320301,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686152422
    },
    {
        "content": "<p>I tried <code>local notation:200</code> and <code>local notation:2000</code>, neither makes it work.</p>",
        "id": 364320411,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686152447
    },
    {
        "content": "<p>that is not the priority but the binding power. Try <code>local notation (priority := high)</code></p>",
        "id": 364338115,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686156186
    },
    {
        "content": "<p>Doesn't work</p>",
        "id": 364339672,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686156509
    },
    {
        "content": "<p>You misdiagnosed the issue. This works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Abs</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">}</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">quotPrecheck</span> <span class=\"n\">false</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"s2\">\"αⁿ⁺¹\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">αⁿ</span><span class=\"bp\">⁺¹</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 364380957,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686167157
    },
    {
        "content": "<p>You got bitten by this trap: <a href=\"#narrow/stream/270676-lean4/topic/Notation.20for.20inductive.20types/near/363980933\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Notation.20for.20inductive.20types/near/363980933</a></p>",
        "id": 364381109,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686167195
    }
]