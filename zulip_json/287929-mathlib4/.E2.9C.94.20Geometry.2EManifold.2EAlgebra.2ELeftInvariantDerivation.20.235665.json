[
    {
        "content": "<p>This port fails in a pretty mysterious way...</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Add</span> <span class=\"o\">(</span><span class=\"n\">LeftInvariantDerivation</span> <span class=\"n\">I</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">add</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:=</span>\n    <span class=\"o\">⟨</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">g</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_add</span><span class=\"o\">,</span> <span class=\"n\">Derivation.coe_add</span><span class=\"o\">,</span> <span class=\"n\">left_invariant'</span><span class=\"o\">,</span> <span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">add_apply</span><span class=\"o\">]⟩</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Neg</span> <span class=\"o\">(</span><span class=\"n\">LeftInvariantDerivation</span> <span class=\"n\">I</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">neg</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"bp\">-</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">g</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_neg</span><span class=\"o\">,</span> <span class=\"n\">Derivation.coe_neg</span><span class=\"o\">,</span> <span class=\"n\">left_invariant'</span><span class=\"o\">,</span> <span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">neg_apply</span><span class=\"o\">]⟩</span> <span class=\"c1\">-- fails</span>\n</code></pre></div>\n<p>I have no clue why the <code>neg</code> version is so hard. Afaict all the instances that should be there are in fact present.</p>",
        "id": 372902720,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1688650971
    },
    {
        "content": "<p>This one has got 1 error left. Somebody fix this please?</p>",
        "id": 373337337,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1688767357
    },
    {
        "content": "<p>Is the error still the one above?</p>",
        "id": 373341406,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1688769132
    },
    {
        "content": "<p>Without opening lean, this looks like a \"simp can't work out the implicit arguments\" problem that can be solved by providing them</p>",
        "id": 373341479,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1688769169
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Geometry.2EManifold.2EAlgebra.2ELeftInvariantDerivation.20.235665/near/373341406\">said</a>:</p>\n<blockquote>\n<p>Is the error still the one above?</p>\n</blockquote>\n<p>no</p>",
        "id": 373344228,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1688770503
    },
    {
        "content": "<p>This one's on the merge queue now</p>",
        "id": 373377472,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1688789970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> has marked this topic as resolved.</p>",
        "id": 373382661,
        "sender_full_name": "Notification Bot",
        "timestamp": 1688793103
    }
]