[
    {
        "content": "<p>Mathlib 4 is released under Apache 2.0:</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/blob/master/LICENSE\">https://github.com/leanprover-community/mathlib4/blob/master/LICENSE</a></p>\n<p>Is this a conscious choice and is the community developing mathlib comfortable with the consequences?</p>\n<p>In a world, where formalisation of pure mathematics is of purely academic interest I suppose the license choice doesn't matter, but it does in a world where there is interest from the industry (e.g. competing in the IMO Grand Challenge).</p>\n<p>I did a little bit of digging, and it doesn't seem like this was discussed before, and the original license choice for the previous version of Mathlib seems to have been made 6 years ago -- when the community was much smaller than what it is today.</p>",
        "id": 385355391,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1692169109
    },
    {
        "content": "<p>It's hardly likely that we'd be able to change it at this point anyway</p>",
        "id": 385356381,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1692169424
    },
    {
        "content": "<p>I don't think we've ever had any complaints that Apache was not permissive enough</p>",
        "id": 385362713,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692170771
    },
    {
        "content": "<p>I think the driving reason for the choice was to match the licensing of Lean itself, which I assume was a decision made by MSR</p>",
        "id": 385362925,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692170804
    },
    {
        "content": "<p>(or possibly even that our hand was forced because mathlib grew out of the Apache-licensed core)</p>",
        "id": 385363080,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692170830
    },
    {
        "content": "<p>Note some previous discussion: <a href=\"#narrow/stream/113488-general/topic/Can.20part.20of.20mathlib.20be.20public.20domain.3F/near/321101940\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Can.20part.20of.20mathlib.20be.20public.20domain.3F/near/321101940</a></p>",
        "id": 385378203,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692172093
    },
    {
        "content": "<blockquote>\n<p>Is this a conscious choice and is the community developing mathlib comfortable with the consequences?</p>\n</blockquote>\n<p>Could you be more specific about what kind of consequences you are thinking about? Are you concerned with the license being too permissive or not permissive enough?</p>",
        "id": 385397836,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692173601
    },
    {
        "content": "<p>Personally I'm not concerned -- I haven't made any contributions to Mathlib -- so in a sense I don't have a horse in this race. But I think Apache being too permissive is a plausible concern here. I would say a scenario where a big company (e.g. Google, Facebook, OpenAI, etc...) creates a large corpus of \"hidden\" theorems as benchmark for their LLMs is likely. These theorems would link to Mathlib (which I believe would be permissible under Apache).</p>\n<p>I suppose the question is, if contributors to Mathlib would be comfortable with this hypothetical scenario.</p>\n<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> re changing the license. You can usually fairly easily change from a permissive license. It's the other direction that's difficult (although not impossible -- I've been involved in a project where we contacted a bunch of maintainers of multiple projects to get a permission to include their GPLv2-licensed work in a GPLv3-licensed work).</p>\n<p>It's fundamentally a question about <a href=\"https://en.wikipedia.org/wiki/Free_software#:~:text=Definition%20and%20the%20Four%20Essential%20Freedoms%20of%20Free%20Software,-Main%20article%3A%20The&amp;text=Freedom%200%3A%20The%20freedom%20to,you%20can%20help%20your%20neighbor.\">\"Freedom zero\"</a>. I don't think there are easy answers here...</p>",
        "id": 385409860,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1692174725
    },
    {
        "content": "<p>I for one very much hope that some big companies make large corpora of theorems that refer to Mathlib. :-)</p>",
        "id": 385410647,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692174839
    },
    {
        "content": "<p>Well, if that big company will then create closed source software, and start bribing universities to pay for licences, and charge students for using the software, etc...</p>",
        "id": 385412413,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1692175110
    },
    {
        "content": "<p>I suppose the point is that they don't have to share -- they can just maintain them internally under proprietary license -- as a \"competitive advantage\" vs other companies.</p>",
        "id": 385412480,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1692175120
    },
    {
        "content": "<p>I'm not a big fan of the state of the art of CAS at universities.</p>",
        "id": 385412543,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1692175130
    },
    {
        "content": "<p>Thinking in another direction: there seems to be some interest in using lean for software verification - would this make life difficult if you wanted to use mathlib in verifying properties of more permissively licensed code?</p>\n<p>Also, what would be the impact on std4?</p>",
        "id": 385414369,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1692175488
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> -- I think this is actually unlikely -- when DeepMind created AlphaZero (Chess and Go) and AlphaStar (Starcraft II), they didn't commercialise the technology. It was just a proprietary research project (you never get to see the code, you get to see a paper with description of the approach they took/ architecture of the neural network).</p>\n<p>There are good reasons for this. If you're Google/Facebook you need your project to have a TAM (total addressable market) to be in excess of $10b USD to \"move the needle\" for the parent co.</p>\n<p>This is why they only started commercialising AlphaFold -- because drugging a previously undruggable target can easily give you a TAM of $10b USD and more (you can read about \"KRAS race\", which a recent example here).</p>\n<p>I don't think that selling CAS to universities is big enough market for the really big companies to care. But it could be market for smaller companies like WolframAlpha, etc... But these smaller companies don't typically have access to a really big capital, so what they can achieve is typically much less than the big guys.</p>",
        "id": 385415020,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1692175655
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> open source licensing is actually a surprisingly difficult field. I didn't realise before I started working with open source lawyers.</p>\n<p>Typically some of the \"bright lines\" are as follows:</p>\n<ul>\n<li>static or dynamic linking to a restrictively licensed project means you have to release under a restrictive license</li>\n<li>other forms of communication (e.g. via network) are sufficiently \"separated\" that you don't have to release under restrictive license (exception are e.g. Affero GPL, which was designed specifically to counter this point)</li>\n<li>using output of e.g. a restrictively licensed compiler is OK in a permissively licensed project</li>\n</ul>\n<p>But there's lots of exceptions.</p>\n<p>In your case there shouldn't be any impact on std4, as I believe std4 doesn't depend on Mathlib (dependency goes the other way?)</p>",
        "id": 385416272,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1692175997
    },
    {
        "content": "<p>... except that std4 is partially growing out of both mathlib and mathlib4 via upstreaming of definitions and lemmas</p>",
        "id": 385416780,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1692176149
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> well in this case changing Mathlib to a more restrictive license would indeed cause problems with permissive licensing of std4.</p>",
        "id": 385417319,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1692176315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> , but I think fundamentally you're right, \"medium-sized\" companies targeting academia as a market and using Mathlib under the hood is also a valid potential concern.</p>\n<p>I just think it's distinct from the \"big company research project\" potential concern I shared earlier.</p>",
        "id": 385418051,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1692176555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/License.20choice.20for.20mathlib.204/near/385412413\">said</a>:</p>\n<blockquote>\n<p>Well, if that big company will then create closed source software, and start bribing universities to pay for licences, and charge students for using the software, etc...</p>\n</blockquote>\n<p>If mathlib is part of the interface to that software (rather than hidden internals) I don't see this working out while mathlib is still actively developed, because it's super important to be on a recent version.</p>",
        "id": 385418491,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692176690
    },
    {
        "content": "<p>And in the unlikely event this starts looking like a serious issue, we can re-license to trap the company on an old version.</p>",
        "id": 385418658,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692176752
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> -- thanks for linking to the previous thread. I might be making an assumption here, but I suppose licensing of Lean/Mathlib (e.g. coordinating the community, hiring open source lawyers, etc...) will become the responsibility of Lean FRO?</p>",
        "id": 385419455,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1692177000
    },
    {
        "content": "<p>I would guess the Lean FRO has little interest in the cost of relicensing given Leo was probably involved in the original choice of license; of course I don't speak for the FRO!</p>",
        "id": 385419663,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692177067
    },
    {
        "content": "<p>As far as I'm aware the FRO is happy with current licensing. Certainly the FRO wants industrial users to be able to use Lean!</p>",
        "id": 385421698,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692177822
    },
    {
        "content": "<p>Re AlphaFold2, I am at the ACS meeting right now, and John Jumper gave one of the plenary talks. I don't see the direct connection between releasing AF2 and commercialization. The connection to the KRAS race is quite tenuous here - we've had structures of RAS proteins with bound ligands for ages. RAS is one the most well studied proteins out there.</p>\n<p>And to the point of open source, AF2 participated in CASP, which is the protein structure science equivalent of the IMO Grand Challenge. Based on the ideas of AF2, Baker released RosettaFold in response, others released their own open source implementations of the same ideas... And DeepMind has collaborated with central non profits in the field to release more and more of their predictions such that 200 millions structures are now accessible through EMBL EBI.</p>\n<p>Its not the code that's the magic sauce, it's the high quality data that the models are trained on (requiring in house curation of data) and the capital and resource access to be able to actually train the model. Note, they release the code, not the parameters (even that's changed). Similarly, LLaMa code is available, not the parameters.</p>",
        "id": 385456740,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1692190675
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://en.wikipedia.org/wiki/Isomorphic_Labs\">Isomorphic Labs</a> is a London-based drug discovery company, which uses artificial intelligence for drug discovery. Isomorphic Labs was incorporated in February 2021 and announced on November 5, 2021. It was established under Alphabet Inc. as a spin-off from its AI research lab Deepmind. It is led by Demis Hassabis.</p>\n</blockquote>\n<blockquote>\n<p>The company draws upon Deepmind's AlphaFold 2 technology, which can be used to predict protein structures in the human body with high accuracy, allowing its researchers to find new target pathways for drug delivery.</p>\n</blockquote>",
        "id": 385493542,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1692201425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111040\">Adam Kurkiewicz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/License.20choice.20for.20mathlib.204/near/385409860\">said</a>:</p>\n<blockquote>\n<p>Personally I'm not concerned -- I haven't made any contributions to Mathlib -- so in a sense I don't have a horse in this race. But I think Apache being too permissive is a plausible concern here. I would say a scenario where a big company (e.g. Google, Facebook, OpenAI, etc...) creates a large corpus of \"hidden\" theorems as benchmark for their LLMs is likely. These theorems would link to Mathlib (which I believe would be permissible under Apache).</p>\n<p>I suppose the question is, if contributors to Mathlib would be comfortable with this hypothetical scenario.</p>\n</blockquote>\n<p>Okay, I understand better now what your concern is. Yes, this is a deliberate choice, Mathlib is intended to be usable in closed source scenarios, this was kind of a required part for MS and now Amazon to support this project through Leo and related funding. And for my own part, I think this is important - if I were to make a choice unconstrained by anything else I would choose PD or CC0, I think mathematics should be free in the most literal sense I can make it, and that includes being free to be remixed in arbitrary ways and incorporated in things that are not free.</p>",
        "id": 385493583,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692201439
    },
    {
        "content": "<p>Mario, I'm curious what makes CC0 or PD more desirable to you than MIT / Apache / BSD, as the later seem to be the typical choice for open source.</p>",
        "id": 385500425,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692203681
    },
    {
        "content": "<p>I don't want there to be any requirements on users of the code, and BSD still has e.g. attribution-required</p>",
        "id": 385500571,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692203734
    },
    {
        "content": "<p>By the way, the metamath <a href=\"http://set.mm\">set.mm</a> library (which I have also been involved with for a long time) is public domain</p>",
        "id": 385501153,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692203954
    },
    {
        "content": "<p>\"Attribution required\" (in the form of citing papers) is pretty par for the course in academic mathematics, right?</p>",
        "id": 385501204,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692203975
    },
    {
        "content": "<p>Sure, but academics does not use the copyright courts for enforcement</p>",
        "id": 385501261,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692204002
    },
    {
        "content": "<p>I certainly want people to cite me when they use my work, but I don't need to use a legal document to enforce that</p>",
        "id": 385501398,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692204050
    },
    {
        "content": "<p>By the way, even if something is public domain if you treat it as your own work without attribution this is plagiarism</p>",
        "id": 385501636,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692204138
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/License.20choice.20for.20mathlib.204/near/385501261\">said</a>:</p>\n<blockquote>\n<p>Sure, but academics does not use the copyright courts for enforcement</p>\n</blockquote>\n<p>And thinking about it now, that actually sounds kind of terrifying, like what if you could copyright a theorem, and anyone who wants to use the theorem has to check the license to make sure they don't have to pay a royalty, write the theorem reference in a way that affects the document under construction, or other things like that</p>",
        "id": 385502283,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692204386
    },
    {
        "content": "<p>Here's a relevant issue about licensing changes in an open source project. <a href=\"https://opentf.org/\">https://opentf.org/</a></p>",
        "id": 385502760,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1692204577
    },
    {
        "content": "<p>A recent example is Hugging Face's <a href=\"https://github.com/huggingface/text-generation-inference/issues/726\">text generation inference license change</a>, which happened however after only a few months of development with dozens of contributors. </p>\n<blockquote>\n<p>HFOIL is not a true open source license because we added a restriction: to sell a hosted or managed service built on top of TGI, we now require a separate agreement.</p>\n</blockquote>\n<p>Yannic Kilcher (a contributor) has expressed his worries:<br>\n<a href=\"https://twitter.com/ykilcher/status/1685303009629069312\">https://twitter.com/ykilcher/status/1685303009629069312</a></p>",
        "id": 385509537,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1692207463
    },
    {
        "content": "<p>Some more previous discussions about licensing:</p>\n<ul>\n<li><a href=\"#narrow/stream/113488-general/topic/copyleft\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/copyleft</a></li>\n<li><a href=\"#narrow/stream/113488-general/topic/Mathlib.20and.20copyright.20ownership\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Mathlib.20and.20copyright.20ownership</a></li>\n</ul>",
        "id": 387036214,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1692871482
    }
]