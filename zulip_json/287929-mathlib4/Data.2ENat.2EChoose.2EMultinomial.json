[
    {
        "content": "<p>In port/Data.Nat.Choose.Multinomial , <a href=\"https://github.com/leanprover-community/mathlib4/pull/2361\">mathlib4#2361</a>, there are a couple of places, where there were instances missing, and <span class=\"user-mention\" data-user-id=\"488648\">@Xavier Roblot</span> pointed out those can be fixed by adding haves with the correct instances, but suggested to check back on zulip if this is the right way to do it. One problem with it, that this leads to lines like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">IsEmpty</span> <span class=\"o\">(</span><span class=\"n\">Finset.sym</span> <span class=\"o\">(</span><span class=\"bp\">∅</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n        <span class=\"n\">Finset.instIsEmptySubtypeMemFinsetInstMembershipFinsetEmptyCollectionInstEmptyCollectionFinset</span>\n</code></pre></div>\n<p>which go over the 100 character limit. Is just adding those instances the correct thing to do here?</p>\n<p>Perhaps related, the last thing missing in the proof is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Multiset.multinomial</span> <span class=\"bp\">↑</span><span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>where this was automatic before, but now cannot be unified for a reason that I don't understand.</p>",
        "id": 346341866,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1680434871
    },
    {
        "content": "<p>Does turning on <code>etaExperiement</code> cause that instance to be found automatically?</p>",
        "id": 346342984,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680435278
    },
    {
        "content": "<p>If this is done by inserting the line </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">synthInstance.etaExperiment</span> <span class=\"n\">true</span> <span class=\"k\">in</span>\n</code></pre></div>\n<p>before the theorem, then no, the instance can still not be found automatically, i.e. when removing the correspondings <code>have</code>s it doesn't work</p>",
        "id": 346344003,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1680435674
    },
    {
        "content": "<p>Another issue with <code>have</code> is that a linter might complain that the <code>have</code> is unused, and if this happens then usually it's fixed by changing to <code>haveI</code> (which means inline have, not instance have, in Lean 4)</p>",
        "id": 346397826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680459439
    },
    {
        "content": "<p>I fixed the last issue on this one, and it was merged.<br>\nHowever I'm still unsure if adding those instances is the way to go. Porting notes are there in any case.</p>",
        "id": 347728674,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1680894252
    }
]