[
    {
        "content": "<p>Hello all, we're planning on having a public weekly meeting for mathlib4 porting efforts, to replace the mentee meeting for discussing tactic development. It takes place on Thursdays starting <time datetime=\"2022-11-10T17:00:00Z\">2022-11-10T12:00:00-05:00</time>. The hope is to get both people working on porting mathlib files as well as those porting tactics, and get some cross-communication going, iron out mathport kinks and so on.</p>\n<p><a href=\"https://meet.jit.si/moderated/a58c9883e1b3ef01acd9989d4626b2579d5263d496cacf6e5f3f917699ecb994\">https://meet.jit.si/moderated/a58c9883e1b3ef01acd9989d4626b2579d5263d496cacf6e5f3f917699ecb994</a></p>",
        "id": 308619414,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1667923543
    },
    {
        "content": "<p>(We can also use this thread for meeting notes going forward.)</p>",
        "id": 308619597,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1667923573
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"323441\">@mathlib mentees</span></p>",
        "id": 308679578,
        "sender_full_name": "Sarah Smith",
        "timestamp": 1667944196
    },
    {
        "content": "<p>Are there other people interested in the meeting that would prefer a different time? It is at 4 in the night for me, but if I am the only person that cannot make it then it does not make sense to have a second meeting.</p>",
        "id": 308691024,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1667949646
    },
    {
        "content": "<p>Note that the above widget already shows local time (corresponding to 17:00 UTC in this case).</p>\n<p>Edit: Oh, you're in Victoria. Nice! The list of time zones I looked at ignored daylight saving time, so I missed Australia.</p>",
        "id": 308691255,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1667949804
    },
    {
        "content": "<p>I know</p>",
        "id": 308691667,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1667950048
    },
    {
        "content": "<p>This clashes with Xena for me. (but I was going to experiment with trying to go and also help UGs at the same time...)</p>",
        "id": 308693421,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667951045
    },
    {
        "content": "<p>If it was a slightly more Australia compatible time (e.g. starting at least two hours later, or four hours earlier), I would come.</p>",
        "id": 308701623,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1667956974
    },
    {
        "content": "<p>Four hours earlier or 2 hours later would also be more comfy for me. Right now it clashes with dinner + kids bed time.</p>",
        "id": 308727016,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1667976917
    },
    {
        "content": "<p>2 hours or more later would be comfortable for me, but I wouldn’t be able to make four hours earlier.</p>",
        "id": 308727200,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1667977037
    },
    {
        "content": "<p>I'm inclined to move to <time datetime=\"2022-11-10T19:00:00Z\">2022-11-10T14:00:00-05:00</time> if that's better then, it would be good to see some new faces. Let's do a poll to confirm (vote for all options you think you can come to):</p>",
        "id": 308772947,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1667995683
    },
    {
        "content": "<p>/poll Let's do the meeting at...<br>\n<time datetime=\"2022-11-10T13:00:00Z\">2022-11-10T08:00:00-05:00</time><br>\n<time datetime=\"2022-11-10T15:00:00Z\">2022-11-10T10:00:00-05:00</time><br>\n<time datetime=\"2022-11-10T17:00:00Z\">2022-11-10T12:00:00-05:00</time><br>\n<time datetime=\"2022-11-10T19:00:00Z\">2022-11-10T14:00:00-05:00</time><br>\n<time datetime=\"2022-11-10T21:00:00Z\">2022-11-10T16:00:00-05:00</time></p>",
        "id": 308772963,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1667995693
    },
    {
        "content": "<p>Well that didn't work. For reference the times are: -4, -2, 0, +2, +4 hours from the current <time datetime=\"2022-11-10T17:00:00Z\">2022-11-10T12:00:00-05:00</time> meeting time.</p>",
        "id": 308773153,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1667995792
    },
    {
        "content": "<p>(In general I can do current time -2 but I have a meeting tomorrow)</p>",
        "id": 308776003,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667996902
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is there a final decision about the meeting time tomorrow? If it's \"-4\" then I need to make sure not to sleep too late. :)</p>",
        "id": 308908545,
        "sender_full_name": "David Renshaw",
        "timestamp": 1668047072
    },
    {
        "content": "<p>Let's meet <time datetime=\"2022-11-10T21:00:00Z\">2022-11-10T16:00:00-05:00</time>, there are surprisingly many Europeans okay with that time and it's a bit easier for the Americans. Apparently every time is better than what we are doing now...</p>",
        "id": 308908750,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668047259
    },
    {
        "content": "<p>(Sorry for the late notice!)</p>",
        "id": 308908842,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668047313
    },
    {
        "content": "<p>Will the meeting be recorded?</p>",
        "id": 309007113,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668092495
    },
    {
        "content": "<p>uh, dunno I've never tried that with jitsi but I don't mind. This is a weekly meeting, so I don't want it to be too much hassle to post on youtube, and it's more of a meeting than a presentation so the main benefit would be automating the meeting notes</p>",
        "id": 309015348,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668094719
    },
    {
        "content": "<p>A recording (apologies for the erratic audio levels) will be available later today at <a href=\"https://youtu.be/0nGwjhi6UlI\">https://youtu.be/0nGwjhi6UlI</a>.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"0nGwjhi6UlI\" href=\"https://youtu.be/0nGwjhi6UlI\"><img src=\"https://uploads.zulipusercontent.net/5b2813036f678f49a436c3a56ca5ea1b31e8ce67/68747470733a2f2f692e7974696d672e636f6d2f76692f306e47776a686936556c492f64656661756c742e6a7067\"></a></div>",
        "id": 309094529,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668120048
    },
    {
        "content": "<p>Are we meeting again at <time datetime=\"2022-11-17T21:00:00Z\">2022-11-18T08:00:00+11:00</time>?</p>",
        "id": 310594176,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668686003
    },
    {
        "content": "<p>I made the bump PR for mathlib4, at <a href=\"https://github.com/leanprover-community/mathlib4/pull/624\">mathlib4#624</a>, but there are two places where we might want to find out what went wrong, rather than just paper over a broken proof.</p>",
        "id": 310599624,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668688170
    },
    {
        "content": "<p>I'm off to sleep now, but can look again in the morning if it hasn't already been done. I'm excited to have the Lean 4 fixes in so we can proceed on a few porting PRs!</p>",
        "id": 310599745,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668688206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/310599624\">said</a>:</p>\n<blockquote>\n<p>I made the bump PR for mathlib4, at <a href=\"https://github.com/leanprover-community/mathlib4/pull/624\">mathlib4#624</a>, but there are two places where we might want to find out what went wrong, rather than just paper over a broken proof.</p>\n</blockquote>\n<p>Did you record  / report these somewhere else, seeing as 624 is merged they may be forgotten otherwise</p>",
        "id": 310615312,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1668693777
    },
    {
        "content": "<p>I reviewed / fixed the proof</p>",
        "id": 310616043,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668694045
    },
    {
        "content": "<p>the short answer is that <code>simp</code> got a bit less powerful in the latest nightly, because it no longer does iota reduction when matching input facts against subterms in the goal</p>",
        "id": 310616297,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668694112
    },
    {
        "content": "<p>I think this is a good thing, or at least explainable, because they don't really look like they would match</p>",
        "id": 310616376,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668694144
    },
    {
        "content": "<p>it is fixed in most cases by doing <code>dsimp only at h; simp [h]</code> where <code>simp [h]</code> was being used before</p>",
        "id": 310616638,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668694217
    },
    {
        "content": "<p>for example if <code>h : ULift.down (ULift.up x) = y</code>, then <code>simp [h]</code> on <code>P x</code> does not result in <code>P y</code> even though it used to, but <code>dsimp only at h; simp [h]</code> will work</p>",
        "id": 310616848,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668694307
    },
    {
        "content": "<p>Okay yeah that makes sense, doesn't sound like too much of a loss indeed</p>",
        "id": 310617803,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1668694594
    },
    {
        "content": "<p>Isn't that used quite often actually? At least I have the habit of swallowing up <code>dsimp</code> calls into <code>simp</code> ones.</p>",
        "id": 310678587,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668711814
    },
    {
        "content": "<p>That also means <code>simp</code> isn't strictly more powerful than <code>dsimp</code> anymore, right? We really should make a warning about that, then.</p>",
        "id": 310678666,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668711838
    },
    {
        "content": "<p>I'm not sure I'll be able to come to the meeting today, but I'd be interested to know whether last week I was the only one who had a <em>lot</em> of trouble hearing what Mario was saying. Basically I had to guess a lot of pieces of sentences that got cut. If I'm not the only one then it would be nice to figure out a way to have a better internet connexion for Mario today.</p>",
        "id": 310689409,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1668715297
    },
    {
        "content": "<p>I think zoom is generally better than jitsi when it comes to meetings with &gt; N participants.</p>",
        "id": 310689550,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1668715343
    },
    {
        "content": "<p>I also want to say that it would be very nice for the port effort to put more energy into documenting the new naming conventions and porting tricks.</p>",
        "id": 310689740,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1668715419
    },
    {
        "content": "<p>The audio was being picked up by the hoskinson center room mic last time. I will be at home today and using my mic so the audio should be better. Can't say the same about the internet, this seems to be a plague that follows me around</p>",
        "id": 310690736,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668715791
    },
    {
        "content": "<p>Are there planned topics of discussion for today?</p>",
        "id": 310690892,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1668715837
    },
    {
        "content": "<p>no, we can spend the first 5 minutes working things out, or you can post agenda items here</p>",
        "id": 310690955,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668715871
    },
    {
        "content": "<p>If you don't have other ideas, I suggest:</p>\n<ul>\n<li>do a live file porting and making sure for each name issue that <a href=\"https://github.com/leanprover-community/mathlib4/wiki#naming-convention\">https://github.com/leanprover-community/mathlib4/wiki#naming-convention</a> gives a clear answer (unless it's a very special case), edit that file if it doesn't</li>\n<li>do a live mathlib4 PR review, making sure that each issue could have been avoided using the wiki page, edit the wiki page if needed</li>\n</ul>\n<p>If editing the wiki page is too slow we could have people volunteering to do the editing work while you continue live coding/reviewing. Those are only suggestions, I don't the perfect way of making porting easier</p>",
        "id": 310691703,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1668716172
    },
    {
        "content": "<p>I'd be interested in hearing what our current \"stop mathlib3 and mathlib4 going out of sync\" plan is, and whether there is any CI in the works to aid with that (and if not, what would be useful for me or others to build)</p>",
        "id": 310696555,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668718059
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> seems to either have something in mind, or some foundations, at <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/137\">https://github.com/leanprover-community/mathlib-tools/pull/137</a>)</p>",
        "id": 310696884,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668718183
    },
    {
        "content": "<p>Unfortunately I won't be able to attend today</p>",
        "id": 310698281,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668718775
    },
    {
        "content": "<p>Is the intent for the meeting link in the top post to be reused?</p>",
        "id": 310698448,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668718819
    },
    {
        "content": "<p><a href=\"https://meet.jit.si/moderated/a58c9883e1b3ef01acd9989d4626b2579d5263d496cacf6e5f3f917699ecb994\">https://meet.jit.si/moderated/a58c9883e1b3ef01acd9989d4626b2579d5263d496cacf6e5f3f917699ecb994</a></p>",
        "id": 310698522,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668718840
    },
    {
        "content": "<p>yes</p>",
        "id": 310698526,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668718843
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/310615312\">said</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Did</span> <span class=\"n\">you</span> <span class=\"n\">record</span>  <span class=\"bp\">/</span> <span class=\"n\">report</span> <span class=\"n\">these</span> <span class=\"n\">somewhere</span> <span class=\"k\">else</span><span class=\"o\">,</span> <span class=\"n\">seeing</span> <span class=\"n\">as</span> <span class=\"mi\">624</span> <span class=\"n\">is</span> <span class=\"n\">merged</span> <span class=\"n\">they</span> <span class=\"n\">may</span> <span class=\"n\">be</span> <span class=\"n\">forgotten</span> <span class=\"n\">otherwise</span>\n<span class=\"bp\">````</span>\n<span class=\"n\">Mario</span> <span class=\"n\">already</span> <span class=\"n\">fixed</span> <span class=\"n\">these</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">PR.</span>\n</code></pre></div>",
        "id": 310700321,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668719580
    },
    {
        "content": "<p>Oh yeah sorry we had a whole conversation about it but it got moved to <a href=\"#narrow/stream/287929-mathlib4/topic/dsimp.20and.20simp/near/310616043\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/dsimp.20and.20simp/near/310616043</a></p>",
        "id": 310700568,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1668719674
    },
    {
        "content": "<p>TODO list items from after the mathlib4 porting meeting.</p>",
        "id": 310710678,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668723858
    },
    {
        "content": "<ol>\n<li>explain in the wiki where to find the mathlib3 sha, and where to put it in your mathlib4 PR</li>\n</ol>",
        "id": 310710741,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668723892
    },
    {
        "content": "<ol start=\"2\">\n<li>write a wiki section about Lean 4 coercions</li>\n</ol>",
        "id": 310710792,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668723914
    },
    {
        "content": "<ol start=\"3\">\n<li>write a wiki section explaining <code>OfNat.ofNat</code> vs. <code>Nat.cast</code></li>\n</ol>",
        "id": 310710856,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668723941
    },
    {
        "content": "<ol start=\"4\">\n<li><code>scripts/port_status.py</code> should show the git diff for files that have been modified since their recorded sha (presumably this should be controlled by a flag)</li>\n</ol>",
        "id": 310711163,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724051
    },
    {
        "content": "<ol start=\"5\">\n<li><code>scripts/port_status.py</code> should work regardless of which directory it is run from</li>\n</ol>",
        "id": 310711199,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724071
    },
    {
        "content": "<ol start=\"6\">\n<li>CI action for mathlib3 that detects changes to any file containing a mathlib4 synchronization message, and adds a label to the PR.</li>\n</ol>",
        "id": 310711334,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724121
    },
    {
        "content": "<ol start=\"7\">\n<li>Currently new files in mathlib3 are only added to <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-status</a> either manually, or if someone copy-pastes the output of <code>port_status.yaml</code> (automatically generated in the current directory when you run <code>scripts/port-status.py</code>) back into the wiki. Either automate this, or decide how to manage this.</li>\n</ol>",
        "id": 310711732,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724257
    },
    {
        "content": "<ol start=\"8\">\n<li>CI that watches for mathlib4 PRs marked with the <code>mathlib-port</code> label being merged, then automatically creates a PR to mathlib3 adding the synchronization label to the corresponding files.</li>\n</ol>",
        "id": 310712142,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724434
    },
    {
        "content": "<ol start=\"9\">\n<li>Switch to the new yaml format that <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> has proposed for <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-status</a>, and update all CI tools to use it.</li>\n</ol>",
        "id": 310712233,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724461
    },
    {
        "content": "<ol start=\"10\">\n<li>One of: work out <code>lake upload</code> to distribute build artifacts / copy over the mathlib3 build artifact solution / investigate how to do something more fine-grained.</li>\n</ol>",
        "id": 310712326,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724511
    },
    {
        "content": "<p>Mind editing those messages to number them?</p>",
        "id": 310712371,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668724543
    },
    {
        "content": "<p>Perhaps people could add the <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> or similar emoji if they are \"claiming\" an item.</p>",
        "id": 310712384,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724551
    },
    {
        "content": "<p>(of course, claiming is non-exclusive and non-obligatory :-)</p>",
        "id": 310712585,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724640
    },
    {
        "content": "<p>The recording of today's meeting will be available later at <a href=\"https://youtu.be/O90i1nPOEjs\">https://youtu.be/O90i1nPOEjs</a>.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"O90i1nPOEjs\" href=\"https://youtu.be/O90i1nPOEjs\"><img src=\"https://uploads.zulipusercontent.net/9a8b7e4205326f986ea6b04c35700c1fa995f9d6/68747470733a2f2f692e7974696d672e636f6d2f76692f4f393069316e504f456a732f64656661756c742e6a7067\"></a></div>",
        "id": 310712637,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668724668
    },
    {
        "content": "<p>My plans for 6 and 8 are slightly different to the above, respectively:</p>\n<ol start=\"6\">\n<li>CI action for mathlib3 that detects changes to any file <del>containing a mathlib4 synchronization message</del> <em>with a relevant status on the port status wiki</em>, and adds a label to the PR. </li>\n</ol>\n<p>.</p>\n<ol start=\"8\">\n<li>CI that <del>watches for mathlib4 PRs marked with the mathlib-port label being merged</del> <em>runs nightly and reads the wiki page</em>, then automatically creates a PR to mathlib3 adding the synchronization label to <em>all</em> the corresponding files.</li>\n</ol>",
        "id": 310713996,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668725279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/310710792\">said</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>write a wiki section about Lean 4 coercions</li>\n</ol>\n</blockquote>\n<p>I can do parts of that, but I don't know too many examples of mathlib3 coercions ↦ mathlib4 coercions.</p>",
        "id": 310714234,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668725382
    },
    {
        "content": "<p><code>Nat.cast</code> was discussed in the meeting</p>",
        "id": 310714364,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668725411
    },
    {
        "content": "<p>(specifically, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_nat_cast\">docs#has_nat_cast</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.of_nat\">docs#int.of_nat</a> were the Lean3 analogs of two of the cast-like things discussed)</p>",
        "id": 310714497,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668725469
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, your plan for 6. and 8. sounds better! Thanks. We will need to update again when the yaml format changes, but that should be easy; let's not wait on that.</p>",
        "id": 310716044,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668726164
    },
    {
        "content": "<p>Yeah, I would guess that most of the work is in the CI glue, and <code>mathlibtools</code> ought to abstract away the rest in a way that's easy to adapt to</p>",
        "id": 310716141,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668726229
    },
    {
        "content": "<p>7\\. involves <em>writing</em> the wiki page which is probably a big more fragile and better to leave until the format change is done</p>",
        "id": 310716233,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668726269
    },
    {
        "content": "<p>I'm sorry I couldn't join. Was there discussion of a \"leanproject port\" that's similar to a \"leanproject pr\"? I imagine it takes in at least a mathport and mathlib4 path, and a mathlib3 file name</p>",
        "id": 310716282,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668726307
    },
    {
        "content": "<p>Yeah. As I wrote the bullet point for 7. I decided that \"manage this\" was a more plausible outcome than \"automate this\".</p>",
        "id": 310716306,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668726321
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span>, no, there wasn't. What would it do?</p>",
        "id": 310716331,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668726340
    },
    {
        "content": "<p>Load the yaml. Check that the file indicated hasn't yet been ported or claimed, according to the yaml. Git checkout branch on mathlib 4. Copy file from mathport to mathlib4 directory (possibly modifying Mathlib.lean). Git push new branch. Read the mathport repo Readme for the hash. Use the gh cli to make a PR. Add a port label. Update the wiki yaml with the PR number and mathlib3 hash.</p>",
        "id": 310716638,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668726485
    },
    {
        "content": "<p>It can do some subset of this initially.</p>",
        "id": 310716664,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668726498
    },
    {
        "content": "<p>Regarding my comment in the meeting about the danger of conflicts in the port-status; I just tried making parallel edits on adjacent lines and github did the right thing.</p>",
        "id": 310716940,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668726632
    },
    {
        "content": "<p>I don't think we want people using <code>leanproject</code> on their local machine to update the wiki</p>",
        "id": 310717054,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668726688
    },
    {
        "content": "<p>Because then if the format changes people with an old version will clobber it</p>",
        "id": 310717076,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668726698
    },
    {
        "content": "<p>If CI is the only automation that edits it we at least can control versioning</p>",
        "id": 310717121,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668726721
    },
    {
        "content": "<p>Although maybe the port status page just needs a format version number then the problem goes away</p>",
        "id": 310717294,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668726798
    },
    {
        "content": "<p>The mathlibtools version number would likely work</p>",
        "id": 310717436,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668726848
    },
    {
        "content": "<p>Wow, okay, sounds great. :-)</p>",
        "id": 310718439,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668727308
    },
    {
        "content": "<p>Regarding the out-of-date mathlibtools, we can put directly into the tool that if the file is of a newer version, it refuses to run the rest of the port subcommands</p>",
        "id": 310719951,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668728054
    },
    {
        "content": "<p>Yes, exactly!</p>",
        "id": 310721902,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668728913
    },
    {
        "content": "<p>I've mostly done 8. in <a href=\"https://github.com/leanprover-community/mathlib/pull/17600\">#17600</a>.</p>",
        "id": 310791495,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668768507
    },
    {
        "content": "<p>Yay, no more accidental duplicates.</p>",
        "id": 310819217,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668777309
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/310710792\">said</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>write a wiki section about Lean 4 coercions</li>\n</ol>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/wiki#coercions\">https://github.com/leanprover-community/mathlib4/wiki#coercions</a> I did not know what to write about the attribute and there might be things missing.</p>",
        "id": 310954629,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668823021
    },
    {
        "content": "<p>I've also mentioned <code>autoImplicit</code> in a new 'Tips and Tricks` section at the very end</p>",
        "id": 310955062,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668823433
    },
    {
        "content": "<p>Does the script <code>add_port_comments.py</code> really work? I get</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Traceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>:\n  File <span class=\"s2\">\"/home/ricky/lean/mathlib/scripts/add_port_comments.py\"</span>, line <span class=\"m\">1</span>, <span class=\"k\">in</span> &lt;module&gt;\n    from mathlibtools.file_status import PortStatus\nImportError: cannot import name <span class=\"s1\">'PortStatus'</span> from <span class=\"s1\">'mathlibtools.file_status'</span> <span class=\"o\">(</span>/home/ricky/.local/lib/python3.9/site-packages/mathlibtools/file_status.py<span class=\"o\">)</span>\n</code></pre></div>",
        "id": 311123132,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668941941
    },
    {
        "content": "<p>10 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/add_port_comments.2Epy\">#mathlib4 &gt; add_port_comments.py</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 311129693,
        "sender_full_name": "Notification Bot",
        "timestamp": 1668945620
    },
    {
        "content": "<p>Here's another feature for the <code>port_status</code> script it would be nice to have: an option to check all files that have already been ported to see if they have any dubious translations (i.e., things that should have been <code>#alignₓ</code>ed but were only <code>#align</code>ed). I mention it because I have <em>already</em> made this mistake myself in a couple of places <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span>, which I'm about to go and fix. </p>\n<p>Checking for this could be as simple as checking out the most recent mathlib3port and doing <code>grep 'warning.*dubious' list-of-files-that-have-been-ported</code>. It would regularly return some false positives (e.g., in files that have been recently ported, they would appear as <code>Yes</code>in the port status wiki, but we would be checking against the last nightly run of mathlib3port). However, it would make it perhaps easy to catch errors like this before they start to get really annoying.</p>",
        "id": 311221614,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669011514
    },
    {
        "content": "<p>by the way, I chose the word <code>dubious</code> specifically because it is uncommon (zero hits in mathlib), so grepping for <code>dubious</code> alone should work</p>",
        "id": 311221762,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669011642
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> I guess your CI for adding synchronization labels isn't running because it needs a new release of mathlibtools?</p>",
        "id": 311396156,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669041344
    },
    {
        "content": "<p>It should run nightly</p>",
        "id": 311396254,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669041364
    },
    {
        "content": "<p>Someone has to approve the PR it creates though</p>",
        "id": 311396284,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669041374
    },
    {
        "content": "<p>What does it put in the PR subject line?</p>",
        "id": 311396439,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669041433
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/17642\">#17642</a></p>",
        "id": 311396448,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669041436
    },
    {
        "content": "<p>Possibly something lousy</p>",
        "id": 311396468,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669041444
    },
    {
        "content": "<p>You can run it manually at <a href=\"https://github.com/leanprover-community/mathlib/actions/workflows/add_port_comment.yml\">https://github.com/leanprover-community/mathlib/actions/workflows/add_port_comment.yml</a></p>",
        "id": 311396692,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669041523
    },
    {
        "content": "<p>It's possible I didn't configure the cron job correctly</p>",
        "id": 311396718,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669041532
    },
    {
        "content": "<p>No, I just didn't realize this is how it works. Thanks. Is nightly 0 UTC?</p>",
        "id": 311397077,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669041668
    },
    {
        "content": "<p>Feel free to make a PR to adjust the title of the bot PRs</p>",
        "id": 311410430,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669045445
    },
    {
        "content": "<p>what you wrote is fine, it just wasn't the first thing that came to mind for me (synchronization, freeze)</p>",
        "id": 311410543,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669045484
    },
    {
        "content": "<p>On the assumption that you're much more involved in actually porting than I am, what first comes to mind for you is likely much better than whatever I wrote to get on with fighting CI</p>",
        "id": 311418226,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669047705
    },
    {
        "content": "<p>is there a meeting happening tomorrow? I vaguely remember Mario saying that he has no time and I don't how much the time might interfere with a weird american ritual.</p>",
        "id": 311973044,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1669281948
    },
    {
        "content": "<p>We are talking about <time datetime=\"2022-11-24T21:00:00Z\">2022-11-24T22:00:00+01:00</time>  right? (For me this is \"today\"...)</p>",
        "id": 311973679,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669282159
    },
    {
        "content": "<p>If there is, I won't be there, and likely neither will many people in the US. That \"weird american ritual\" often encompasses most of the day, at least in some form.</p>",
        "id": 311975957,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669283047
    },
    {
        "content": "<p>For people outside the USA: the weird ritual mentioned by Jireh is thanksgiving. I don't really know what it means but indeed I noticed that American people tend to be rather serious about not working on that day, even for fun.</p>",
        "id": 311993224,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1669289050
    },
    {
        "content": "<p>I won't be there. I'm in the US at the moment with family, but my dispensation to be on the computer will probably expire shortly. :-)</p>",
        "id": 312034680,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669302133
    },
    {
        "content": "<p>One time I suggested to some colleagues in Germany that traveling on Easter Monday shouldn't be a problem &amp; I quickly learned about \"a weird German ritual\".</p>",
        "id": 312080231,
        "sender_full_name": "Arien Malec",
        "timestamp": 1669321651
    },
    {
        "content": "<p>Are we meeting at <time datetime=\"2022-12-01T21:00:00Z\">2022-12-01T22:00:00+01:00</time> ?</p>",
        "id": 313271865,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669899339
    },
    {
        "content": "<p>I will probably be there, but don't wait for me, as I may have weather delays!</p>",
        "id": 313293510,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669905272
    },
    {
        "content": "<p>Hi a newbie trying to port data.set.basic.<br>\n May I ask what the meeting is about and who is invited?</p>",
        "id": 313360852,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1669923721
    },
    {
        "content": "<p>Everyone is more than welcome! Last time we discussed several problems. If you have questions it's a good idea to be there... If the experts will be there <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 313361519,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669923920
    },
    {
        "content": "<p>Thanks a lot. I will try to make it there</p>",
        "id": 313361893,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1669924037
    },
    {
        "content": "<p><a href=\"https://meet.jit.si/moderated/a58c9883e1b3ef01acd9989d4626b2579d5263d496cacf6e5f3f917699ecb994\">https://meet.jit.si/moderated/a58c9883e1b3ef01acd9989d4626b2579d5263d496cacf6e5f3f917699ecb994</a></p>",
        "id": 313376120,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669928402
    },
    {
        "content": "<p>I keep getting kicked out of the meeting, I suspect just because my network connection is poor.</p>",
        "id": 313377302,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669928788
    },
    {
        "content": "<p>I think I'm in the same situation as Johan. I haven't had any audio come through, just connecting noises.</p>",
        "id": 313378384,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669929167
    },
    {
        "content": "<p>I changed browser to solve this</p>",
        "id": 313378948,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669929382
    },
    {
        "content": "<p>Would it be an option to try Zoom next time?</p>",
        "id": 313379301,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1669929516
    },
    {
        "content": "<p>It didn't work for me in Chrome, but it is working now in Firefox</p>",
        "id": 313379336,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669929532
    },
    {
        "content": "<p>No luck in Chrome, Safari, or Firefox.</p>",
        "id": 313379759,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669929691
    },
    {
        "content": "<p>Firefox working fine for me on Ubuntu</p>",
        "id": 313379828,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669929720
    },
    {
        "content": "<p>I'm also having issues in <del>Opera</del>. Firefox works for me.</p>",
        "id": 313380303,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669929859
    },
    {
        "content": "<p>Chrome and Edge are both a no for me</p>",
        "id": 313380921,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669930064
    },
    {
        "content": "<p>I have firefox 106.0.5 installed</p>",
        "id": 313381001,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669930085
    },
    {
        "content": "<p>I get as far as seeing a black box labelled <span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span>'s screen, then the call restarts</p>",
        "id": 313381022,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669930093
    },
    {
        "content": "<p>That's what I was seeing in Opera too, which is Chrome-based.</p>",
        "id": 313381077,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669930116
    },
    {
        "content": "<p>Next week move to Zoom?</p>",
        "id": 313381972,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669930403
    },
    {
        "content": "<p>fyi the bikeshedding is put to a vote at <a href=\"#narrow/stream/270676-lean4/topic/.5BRFC.5D.20refine_struct.20functionality.20via.20new.20.3F.2E.2E.20syntax/near/313385470\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/.5BRFC.5D.20refine_struct.20functionality.20via.20new.20.3F.2E.2E.20syntax/near/313385470</a></p>",
        "id": 313390415,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1669933489
    },
    {
        "content": "<p>Do we have a plan for the next meeting? I'm presuming it is <time datetime=\"2022-12-08T21:00:00Z\">2022-12-09T08:00:00+11:00</time>. Could someone please plan to host a zoom meeting, and post a link for us?</p>",
        "id": 314641547,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670494126
    },
    {
        "content": "<p><time datetime=\"2022-12-08T21:00:00Z\">2022-12-08T16:00:00-05:00</time> conflicts with an all-hands meeting at MSR, so I proposed <time datetime=\"2022-12-08T20:00:00Z\">2022-12-08T15:00:00-05:00</time> in the meeting last time but that's pretty rough on the Australians IIUC. Should we try for <time datetime=\"2022-12-08T22:00:00Z\">2022-12-08T17:00:00-05:00</time> this time?</p>",
        "id": 314642364,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670494390
    },
    {
        "content": "<p>The earlier time is fine with me. Not sure if there are others in nearby timezones. But the later time is fine too.</p>",
        "id": 314642628,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670494490
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>",
        "id": 314643291,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670494730
    },
    {
        "content": "<p>Let's go with <time datetime=\"2022-12-08T20:00:00Z\">2022-12-09T07:00:00+11:00</time>!</p>",
        "id": 314647142,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670496009
    },
    {
        "content": "<p>I have a mild preference for the later time but I'm not suggesting we change it this week now it's been announced.</p>",
        "id": 314647665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670496236
    },
    {
        "content": "<p>FYI: meeting started</p>",
        "id": 314761826,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1670530091
    },
    {
        "content": "<p>Sarah's list of tactics: <a href=\"#narrow/stream/287929-mathlib4/topic/Tactic.20porting.20assignments/near/313711324\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Tactic.20porting.20assignments/near/313711324</a></p>",
        "id": 314762362,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670530292
    },
    {
        "content": "<p>Is there a porting meeting this week? I am happy with any of the suggested times (the old time, the old time +-1 hour) but my family want to know when I'm coming home from work. Will the Zoom link be the same?</p>",
        "id": 316019143,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671104835
    },
    {
        "content": "<p><span aria-label=\"this\" class=\"emoji emoji-1f446\" role=\"img\" title=\"this\">:this:</span></p>",
        "id": 316112875,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671129547
    },
    {
        "content": "<p>I'll show up.</p>",
        "id": 316113804,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671129848
    },
    {
        "content": "<p>I will be there... but when?</p>",
        "id": 316118169,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671131128
    },
    {
        "content": "<p>oops, same as last time = <time datetime=\"2022-12-15T20:00:00Z\">2022-12-15T15:00:00-05:00</time></p>",
        "id": 316118332,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671131172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> With the same zoom link?</p>",
        "id": 316128619,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671134451
    },
    {
        "content": "<p>Re: <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>'s question about documentation of the colouring schemes for the port progress graphs:</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib-tools/pull/158\">https://github.com/leanprover-community/mathlib-tools/pull/158</a></p>",
        "id": 316145535,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671140088
    },
    {
        "content": "<p>I merged that PR. But I think the most useful thing would be to edit <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki#porting-procedure\">https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki#porting-procedure</a> step 1 to say that looking at graphs is more currently useful than looking at the list and stick the color explanation there.</p>",
        "id": 316148502,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671141267
    },
    {
        "content": "<p>I have substantially rewritten that section of the wiki page. If someone can review and let me know about problems, that would be great.</p>",
        "id": 316178105,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671157464
    },
    {
        "content": "<p>It looks great. I <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki/_compare/bfe22c8cfe0c902dc0b6efdc368a604feea53c27...273fb1345dcd480d663cd83efd484eab7158ea36\">just added</a> Mario's find command.</p>",
        "id": 316224888,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671184678
    },
    {
        "content": "<p>Will there be another meeting tonight?</p>",
        "id": 317435012,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671736445
    },
    {
        "content": "<p><time datetime=\"2022-12-22T20:00:00Z\">2022-12-22T15:00:00-05:00</time> , let's take the next week off though so that people can do the holiday thing</p>",
        "id": 317435386,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671736605
    },
    {
        "content": "<p>Meeting started</p>",
        "id": 317444223,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671739979
    },
    {
        "content": "<p>Sorry, I'm already doing the holiday thing, so I'll miss today.</p>",
        "id": 317445694,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671740604
    },
    {
        "content": "<p>If there's a recording, please post the link and I'll watch it later.</p>",
        "id": 317445725,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671740628
    },
    {
        "content": "<p>whoops, in my case, I forgot it had been moved to 3! 4 is anchored in my brain for some reason. see you all whenever the next meeting is, and happy holidays! :)</p>",
        "id": 317450853,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671742781
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/Wk86mn6ia7f5loXNjrRYMIV1YzrUAXvUD_qKQ1X1NIsuo5em7xPFzEBGtVq0i_5w.vqhOaKUiu4zlQ7q8?startTime=1671739144000\">https://cmu.zoom.us/rec/share/Wk86mn6ia7f5loXNjrRYMIV1YzrUAXvUD_qKQ1X1NIsuo5em7xPFzEBGtVq0i_5w.vqhOaKUiu4zlQ7q8?startTime=1671739144000</a><br>\nPasscode: UH#Z8X?t</p>",
        "id": 317458146,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671745967
    },
    {
        "content": "<p>Is there some more info on this feature to write equivalent definitions, (one for the compiler and one for human use)?</p>",
        "id": 317458803,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671746255
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/317458803\">said</a>:</p>\n<blockquote>\n<p>Is there some more info on this feature to write equivalent definitions, (one for the compiler and one for human use)?</p>\n</blockquote>\n<p>In the docs for instance</p>",
        "id": 317458825,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671746275
    },
    {
        "content": "<p>It's the <code>@[csimp]</code> attribute</p>",
        "id": 317462322,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671748125
    },
    {
        "content": "<p>Meeting in ~90 mins: <time datetime=\"2023-01-05T20:00:00Z\">2023-01-05T21:00:00+01:00</time></p>",
        "id": 319647648,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672943800
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/314643291\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>\n<p>Is this still the meeting link?</p>",
        "id": 319662328,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672948705
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"mi\">2014</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">real</span><span class=\"bp\">/</span><span class=\"n\">ennreal.lean</span>\n    <span class=\"mi\">2061</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">power_series</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2079</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">matrix</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2101</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">module</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2106</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">algebraic_geometry</span><span class=\"bp\">/</span><span class=\"n\">open_immersion.lean</span>\n    <span class=\"mi\">2122</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">borel_space.lean</span>\n    <span class=\"mi\">2142</span> <span class=\"n\">docs</span><span class=\"bp\">/</span><span class=\"n\">references.bib</span>\n    <span class=\"mi\">2196</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2209</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">deriv.lean</span>\n    <span class=\"mi\">2229</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">pow.lean</span>\n    <span class=\"mi\">2248</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">pullbacks.lean</span>\n    <span class=\"mi\">2273</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">conditional_expectation</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2355</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">ideal</span><span class=\"bp\">/</span><span class=\"n\">operations.lean</span>\n    <span class=\"mi\">2371</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2378</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">set_theory</span><span class=\"bp\">/</span><span class=\"n\">ordinal</span><span class=\"bp\">/</span><span class=\"n\">arithmetic.lean</span>\n    <span class=\"mi\">2429</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">inner_product_space</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2449</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">computability</span><span class=\"bp\">/</span><span class=\"n\">turing_machine.lean</span>\n    <span class=\"mi\">2489</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">core.lean</span>\n    <span class=\"mi\">2511</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2611</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">filter</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2676</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">buffer</span><span class=\"bp\">/</span><span class=\"n\">parser</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2711</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">interval_integral.lean</span>\n    <span class=\"mi\">2713</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">2956</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">lp_space.lean</span>\n    <span class=\"mi\">3032</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">lebesgue.lean</span>\n    <span class=\"mi\">3086</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">metric_space</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">3132</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">fderiv.lean</span>\n    <span class=\"mi\">3222</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">group_theory</span><span class=\"bp\">/</span><span class=\"n\">subgroup</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n    <span class=\"mi\">3494</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">cont_diff.lean</span>\n    <span class=\"mi\">4126</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">measure_space.lean</span>\n    <span class=\"mi\">4204</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n</code></pre></div>",
        "id": 319664415,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672949491
    },
    {
        "content": "<blockquote>\n<p>4204 src/data/list/basic.lean</p>\n</blockquote>\n<p>all downhill from here</p>",
        "id": 319664522,
        "sender_full_name": "David Renshaw",
        "timestamp": 1672949528
    },
    {
        "content": "<p>Is there another meeting about to happen now?</p>",
        "id": 321022025,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1673553227
    },
    {
        "content": "<p>sounds good to me</p>",
        "id": 321022512,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673553374
    },
    {
        "content": "<p>Sorry for missing the meeting, <em>someone</em> really wanted to finish Data.Multiset.Basic and I ended up in the wrong timezone again ;) . Here's the recording link:</p>\n<p><a href=\"https://cmu.zoom.us/rec/share/ILUT_80UqBLzTrsG0iPVJs4xC7Hmqg1N3ULZy8yzCMG8LD21XhzB2mnJPcVejxui.4XHAUmzBM4-f0m0g?startTime=1673553487000\">https://cmu.zoom.us/rec/share/ILUT_80UqBLzTrsG0iPVJs4xC7Hmqg1N3ULZy8yzCMG8LD21XhzB2mnJPcVejxui.4XHAUmzBM4-f0m0g?startTime=1673553487000</a><br>\nPasscode: N9Vp+7n8</p>",
        "id": 321079322,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673582685
    },
    {
        "content": "<p>/me <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span> <span aria-label=\"clock\" class=\"emoji emoji-1f557\" role=\"img\" title=\"clock\">:clock:</span> <span aria-label=\"in bed\" class=\"emoji emoji-1f6cc\" role=\"img\" title=\"in bed\">:in_bed:</span> <span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"zzz\" class=\"emoji emoji-1f4a4\" role=\"img\" title=\"zzz\">:zzz:</span></p>",
        "id": 321089196,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673590951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, I think some people wanted you to take a look at their code last time; do you think we could have another 1-hour meeting series, e.g. right before the current porting meeting, where we can ask you questions about porting/would you prefer one-on-one calls/something else?</p>",
        "id": 321150785,
        "sender_full_name": "Evgenia Karunus",
        "timestamp": 1673613666
    },
    {
        "content": "<p>one-on-one sounds best</p>",
        "id": 321150917,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673613695
    },
    {
        "content": "<p>I will not be able to make it today.</p>",
        "id": 322341407,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674150791
    },
    {
        "content": "<p>I'll be there but late.</p>",
        "id": 322351337,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674153432
    },
    {
        "content": "<p>Is the meeting now?</p>",
        "id": 322367129,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1674158387
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/mGfpugCNTgzS9qGSAzvYIWZ-ALPSe2z8js45iSSk2bUCq3uzk5KYb6tkc8SK5uf1.xrB-E6ejVRnb29qD?startTime=1674158378000\">https://cmu.zoom.us/rec/share/mGfpugCNTgzS9qGSAzvYIWZ-ALPSe2z8js45iSSk2bUCq3uzk5KYb6tkc8SK5uf1.xrB-E6ejVRnb29qD?startTime=1674158378000</a><br>\nPasscode: tsp*rgj9</p>",
        "id": 322385381,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674164730
    },
    {
        "content": "<p>Please confirm: we're meeting in a little less than an hour, right?</p>",
        "id": 323816770,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1674760125
    },
    {
        "content": "<p>(Sorry, I will not be there today, as I’m on a trip this week!)</p>",
        "id": 323820579,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1674761190
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/xUEFxJaCb2fvCqQvpJsdr_JgzL-zrl_kR-qJDPTNZrP-qB_58eXXlBQY6cMbWptF.86ViC07Hvco6xKeK?startTime=1674763150000\">https://cmu.zoom.us/rec/share/xUEFxJaCb2fvCqQvpJsdr_JgzL-zrl_kR-qJDPTNZrP-qB_58eXXlBQY6cMbWptF.86ViC07Hvco6xKeK?startTime=1674763150000</a><br>\nPasscode: .2vtyS3$</p>",
        "id": 323913540,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674768864
    },
    {
        "content": "<p>I joined the porting effort but I can't attend the meetings because I have teaching <time datetime=\"2023-01-26T20:20:00Z\">2023-01-26T14:20:00-06:00</time>-<time datetime=\"2023-01-26T21:35:00Z\">2023-01-26T15:35:00-06:00</time> .</p>",
        "id": 323935593,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674779151
    },
    {
        "content": "<p>(every Tuesday and Thursday)</p>",
        "id": 323935639,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674779164
    },
    {
        "content": "<p>Since the semester might have disrupted others' schedules as well, let's take a poll to see if there is a different day that works for more people:</p>",
        "id": 323936791,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674779773
    },
    {
        "content": "<p>/poll What day should the porting meeting be on?<br>\nMonday<br>\nTuesday<br>\nWednesday<br>\nThursday<br>\nFriday</p>",
        "id": 323936845,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674779810
    },
    {
        "content": "<p>What time of day are we talking about? Should I create a more detailed poll on <a href=\"http://doodle.com\">doodle.com</a>?</p>",
        "id": 323937265,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674780016
    },
    {
        "content": "<p>same time, <time datetime=\"2023-01-26T20:00:00Z\">2023-01-26T15:00:00-05:00</time></p>",
        "id": 323937951,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674780405
    },
    {
        "content": "<p>given the international crowd the time of day isn't too flexible</p>",
        "id": 323938022,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674780453
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 323938623,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674780768
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 323938759,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674780845
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/314643291\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>",
        "id": 325487681,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1675368333
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/KcYImFOqA1gdSc_qXEPukmkkOMu-e9zndraCKP4EsT6iD1JpqJbt5omWNq2Cx3fI.zeWYueNRrHFXlwHC?startTime=1675368059000\">https://cmu.zoom.us/rec/share/KcYImFOqA1gdSc_qXEPukmkkOMu-e9zndraCKP4EsT6iD1JpqJbt5omWNq2Cx3fI.zeWYueNRrHFXlwHC?startTime=1675368059000</a><br>\nPasscode: AYq+5HXK</p>",
        "id": 325497697,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675372028
    },
    {
        "content": "<p>Based on the poll results, we'll be meeting on Mondays starting next week <time datetime=\"2023-02-06T20:00:00Z\">2023-02-06T15:00:00-05:00</time></p>",
        "id": 325497876,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675372087
    },
    {
        "content": "<p>(Unfortunately I have an appointment at 2:30, so I might miss the meeting or only arrive in the latter half)</p>",
        "id": 326219970,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1675711160
    },
    {
        "content": "<p>meeting started</p>",
        "id": 326227957,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1675713804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, are you planning to join us?</p>",
        "id": 326228943,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675714098
    },
    {
        "content": "<p>Sorry for missing the meeting this week. Here's the recording:</p>\n<p><a href=\"https://cmu.zoom.us/rec/share/bdOGzXdCfjuMh8aENg26nAnk1zURO1Get1HlJ1tqz-N_up2DQ0OVfZS4hpTXbZel.MYXF7WxdfXJtYiqc?startTime=1675713659000\">https://cmu.zoom.us/rec/share/bdOGzXdCfjuMh8aENg26nAnk1zURO1Get1HlJ1tqz-N_up2DQ0OVfZS4hpTXbZel.MYXF7WxdfXJtYiqc?startTime=1675713659000</a><br>\nPasscode: &amp;a20kcXe</p>",
        "id": 326248105,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675721578
    },
    {
        "content": "<p>26 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/Already-forward-ported.20files\">#mathlib4 &gt; Already-forward-ported files</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 327585647,
        "sender_full_name": "Notification Bot",
        "timestamp": 1676304165
    },
    {
        "content": "<p>Since many lean people are at the IPAM workshop this week, I propose we cancel today's meeting.</p>",
        "id": 327590737,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1676305522
    },
    {
        "content": "<p>Are we meeting at <time datetime=\"2023-02-20T20:00:00Z\">2023-02-20T15:00:00-05:00</time> today? Or are people travelling from IPAM?</p>",
        "id": 329033989,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676914070
    },
    {
        "content": "<p>Let's assume everyone travelled over the weekend :-)</p>",
        "id": 329038921,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1676915855
    },
    {
        "content": "<p>I don't have any input for the meeting.</p>",
        "id": 329048539,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676919156
    },
    {
        "content": "<p>Do others have questions that they want to discuss?</p>",
        "id": 329048563,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676919167
    },
    {
        "content": "<p>what are the current blockers?</p>",
        "id": 329049764,
        "sender_full_name": "David Renshaw",
        "timestamp": 1676919656
    },
    {
        "content": "<p>Do you mean lean 4 issues? Or porting PRs? In general, I guess the lack of eta-for-classes is causing trouble.</p>",
        "id": 329050653,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676919914
    },
    {
        "content": "<p>We've discovered that in Mario's absence we can't share screens!</p>",
        "id": 329061089,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676924399
    },
    {
        "content": "<p>oh I thought we weren't meeting?</p>",
        "id": 329066014,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1676926720
    },
    {
        "content": "<p>we're kinda having a co-working session :)</p>",
        "id": 329066068,
        "sender_full_name": "David Renshaw",
        "timestamp": 1676926739
    },
    {
        "content": "<p>I got bicategory.functor compiiling thanks to Matt :D</p>",
        "id": 329081612,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1676936145
    },
    {
        "content": "<p>Sorry about the sharing screens issue. I will try to send out some co-host invites to other maintainers, since there doesn't seem to be a way to enable screen sharing which is sticky over meetings</p>\n<p><a href=\"https://cmu.zoom.us/rec/share/718JCNE9F5zDIbjpPdM_fNa3AaXrUFXbgO71-KYAdqSIJ9-0si2IMe9q80z_PhJq.D2sw7VEdMylmf_xb?startTime=1676923177000\">https://cmu.zoom.us/rec/share/718JCNE9F5zDIbjpPdM_fNa3AaXrUFXbgO71-KYAdqSIJ9-0si2IMe9q80z_PhJq.D2sw7VEdMylmf_xb?startTime=1676923177000</a><br>\nPasscode: &amp;.L785pf</p>",
        "id": 329084582,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1676938451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/325487681\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/314643291\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>\n</blockquote>\n<p>meeting now</p>",
        "id": 338440359,
        "sender_full_name": "David Renshaw",
        "timestamp": 1677528716
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/zB5iaIqLJmiNCYZ6PR4ddXCPOyB5HV_1sy0OBsCq2rhKIHFdC_VIuA-IvGdWVtBE.g9ncB9TbiXcgorh9?startTime=1677528003000\">https://cmu.zoom.us/rec/share/zB5iaIqLJmiNCYZ6PR4ddXCPOyB5HV_1sy0OBsCq2rhKIHFdC_VIuA-IvGdWVtBE.g9ncB9TbiXcgorh9?startTime=1677528003000</a><br>\nPasscode: U&amp;5&amp;49zS</p>",
        "id": 338454702,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677533687
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/GD7lq_GNxalARWCm8ZsL9LfUJEPCgC-_VYYK_hlydbLFxxKTkPVvZ-uanvasRE4M.3pkJFhcrQUNApgBS?startTime=1678132827000\">https://cmu.zoom.us/rec/share/GD7lq_GNxalARWCm8ZsL9LfUJEPCgC-_VYYK_hlydbLFxxKTkPVvZ-uanvasRE4M.3pkJFhcrQUNApgBS?startTime=1678132827000</a><br>\nPasscode: V9SK=m7#</p>",
        "id": 339987566,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678145269
    },
    {
        "content": "<p><time datetime=\"2023-03-13T20:00:00Z\">2023-03-13T20:00:00</time>?</p>",
        "id": 341540847,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678731515
    },
    {
        "content": "<p>Dang daylight savings time</p>",
        "id": 341540963,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1678731552
    },
    {
        "content": "<p>can't attend, that's when I'm asleep</p>",
        "id": 341541337,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1678731648
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306577\">Matthew Ballard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/341540963\">said</a>:</p>\n<blockquote>\n<p>Dang daylight savings time</p>\n</blockquote>\n<p>In my timezone that's the same time as always (in the UK it switches Mar 26th). If that's not the case in other people's, then perhaps we should pick a new time</p>",
        "id": 341541528,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678731708
    },
    {
        "content": "<p>We will align again shortly. I say stick with it until then</p>",
        "id": 341541901,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1678731813
    },
    {
        "content": "<p>I say let <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> decide</p>",
        "id": 341542365,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678731951
    },
    {
        "content": "<p>Yes, DST in the US started yesterday.</p>",
        "id": 341542371,
        "sender_full_name": "Reid Barton",
        "timestamp": 1678731952
    },
    {
        "content": "<p>My country, Singapore, has no DST</p>",
        "id": 341542600,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1678732006
    },
    {
        "content": "<p>I am flexible so have no strong preference. I have to juggle a meeting with student so knowing sooner would help</p>",
        "id": 341542603,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1678732006
    },
    {
        "content": "<p>What would the alternate time be?</p>",
        "id": 341542678,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678732026
    },
    {
        "content": "<p><time datetime=\"2023-03-13T19:00:00Z\">2023-03-13T15:00:00-04:00</time> is 3 EDT now</p>",
        "id": 341542802,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1678732057
    },
    {
        "content": "<p>I thought we're doing meetings at <time datetime=\"2023-03-13T22:30:00Z\">2023-03-13T15:30:00-07:00</time> since last week?  (i.e., later than before?)</p>",
        "id": 341545855,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1678732937
    },
    {
        "content": "<p>I don't see a message about that above</p>",
        "id": 341546050,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678732994
    },
    {
        "content": "<p>Ah, Kevin told me the time got changed and I assumed Mario's post from last week ^^ is the new time.</p>",
        "id": 341546391,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1678733091
    },
    {
        "content": "<p>I was assuming it starts now: <time datetime=\"2023-03-13T19:00:00Z\">2023-03-13T15:00:00-04:00</time></p>",
        "id": 341550332,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678734200
    },
    {
        "content": "<p>Oh, I thought an hour from now based on the thread. I can be there shortly if we’re meeting now, though…are we?</p>",
        "id": 341551531,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1678734566
    },
    {
        "content": "<p>we are</p>",
        "id": 341551817,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678734656
    },
    {
        "content": "<p>I'll probably miss the whole thing in that case</p>",
        "id": 341552040,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678734730
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/efKAc4UpLWfy1JH6EWxJRefPuuItzM56d2M9ylMbgANuGbbTGAD_kY7rREgixEe1.5GhcB789C_uyxCoQ?startTime=1678734128000\">https://cmu.zoom.us/rec/share/efKAc4UpLWfy1JH6EWxJRefPuuItzM56d2M9ylMbgANuGbbTGAD_kY7rREgixEe1.5GhcB789C_uyxCoQ?startTime=1678734128000</a><br>\nPasscode: 2!FJ7GSt</p>\n<p>Next week we'll be meeting at the same time <time datetime=\"2023-03-20T19:00:00Z\">2023-03-20T15:00:00-04:00</time> , but let's do another poll to see whether another time of day will be better going forward:</p>",
        "id": 341572713,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678741422
    },
    {
        "content": "<p>/poll When should we meet after daylight savings (on mondays) <br>\n10 AM PDT = 1 PM EDT = 7 PM CEST<br>\n11 AM PDT = 2 PM EDT = 8 PM CEST<br>\n12 PM PDT = 3 PM EDT = 9 PM CEST<br>\n1 PM PDT = 4 PM EDT = 10 PM CEST<br>\n2 PM PDT = 5 PM EDT = 11 PM CEST</p>",
        "id": 341573334,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678741645
    },
    {
        "content": "<p>I won't be able to come tomorrow since we have a company event.</p>",
        "id": 343010898,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1679276706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, is there meant to be a meeting now?</p>",
        "id": 343203823,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679338885
    },
    {
        "content": "<p>yes</p>",
        "id": 343203859,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1679338897
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/314643291\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>",
        "id": 343203908,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679338915
    },
    {
        "content": "<p>Is this private meeting, can I join ??</p>",
        "id": 343205312,
        "sender_full_name": "alex chan",
        "timestamp": 1679339284
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454034\">@alex chan</span>, Eric just posted the link in the <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series\">other thread</a>.</p>",
        "id": 343205851,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679339437
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/9n5VBm-Bfr_4sn_ZBTaP2v7OXt1KKwplE1eiUaXg_z3CxiH4WaNLEBPl5JIeitOB.yzj5ufzzCdejLWFg?startTime=1679338782000\">https://cmu.zoom.us/rec/share/9n5VBm-Bfr_4sn_ZBTaP2v7OXt1KKwplE1eiUaXg_z3CxiH4WaNLEBPl5JIeitOB.yzj5ufzzCdejLWFg?startTime=1679338782000</a><br>\nPasscode: Wx5t6G=0</p>",
        "id": 343222636,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1679345030
    },
    {
        "content": "<p>2 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/port.20progress\">#mathlib4 &gt; port progress</a> by <span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span>.</p>",
        "id": 343338721,
        "sender_full_name": "Notification Bot",
        "timestamp": 1679397052
    },
    {
        "content": "<p>Did we decide a time?</p>",
        "id": 344836116,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679916832
    },
    {
        "content": "<p>...asks the person who would prefer it not be 5am their time and who is probably going to bed soon. I am happy with any time between approx 6 and 10 hours from now.</p>",
        "id": 344839499,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679917722
    },
    {
        "content": "<p>The <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/341573334\">poll above</a> suggests <time datetime=\"2023-03-27T19:00:00Z\">2023-03-27T12:00:00-07:00</time>  as the winning vote</p>",
        "id": 344840928,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679918108
    },
    {
        "content": "<p>(which is 3am my time)</p>",
        "id": 344844095,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1679918907
    },
    {
        "content": "<p>The meeting link is <br>\n<span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/314643291\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>\n<p>as usual.</p>",
        "id": 344946545,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679943757
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/TomcR5TzQHQRYbCWBS9epem2yAvZUsnPfEFrK3NyXbOgo_qVY6fpjqitjY0oba_D.as5EaqTA1IR2xf63?startTime=1679943633000\">https://cmu.zoom.us/rec/share/TomcR5TzQHQRYbCWBS9epem2yAvZUsnPfEFrK3NyXbOgo_qVY6fpjqitjY0oba_D.as5EaqTA1IR2xf63?startTime=1679943633000</a><br>\nPasscode: sJ$+^6Lc</p>",
        "id": 344960161,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1679948288
    },
    {
        "content": "<p>Next meeting at <time datetime=\"2023-04-03T19:00:00Z\">2023-04-04T05:00:00+10:00</time>! <span aria-label=\"in bed\" class=\"emoji emoji-1f6cc\" role=\"img\" title=\"in bed\">:in_bed:</span> <span aria-label=\"zzz\" class=\"emoji emoji-1f4a4\" role=\"img\" title=\"zzz\">:zzz:</span> <span aria-label=\"alarm clock\" class=\"emoji emoji-23f0\" role=\"img\" title=\"alarm clock\">:alarm_clock:</span></p>",
        "id": 346530455,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1680520234
    },
    {
        "content": "<p>(I'll be missing the next two, I'm in India and this is past my bedtime)</p>",
        "id": 346564483,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680527729
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/MGhoRl6AY4o7KCRBQefTIm7QgevKLp2nBX8OTx5KTvjEfklZe9kFqE7fXm-CdqHn.fyE7LMZNxR6HRU8a?startTime=1680548385000\">https://cmu.zoom.us/rec/share/MGhoRl6AY4o7KCRBQefTIm7QgevKLp2nBX8OTx5KTvjEfklZe9kFqE7fXm-CdqHn.fyE7LMZNxR6HRU8a?startTime=1680548385000</a><br>\nPasscode: +B7!gM0#</p>",
        "id": 346673453,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1680554779
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/aWBe3t38z38VP9v3C5wypNI8Uo-uxYO9UObyLqr9DlsWOvKBTQ9I6FtuTwT72Qf6.yvzco00Augkhs7fc?startTime=1681153165000\">https://cmu.zoom.us/rec/share/aWBe3t38z38VP9v3C5wypNI8Uo-uxYO9UObyLqr9DlsWOvKBTQ9I6FtuTwT72Qf6.yvzco00Augkhs7fc?startTime=1681153165000</a><br>\nPasscode: n8qUk@g6</p>",
        "id": 348304492,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1681160870
    },
    {
        "content": "<p>(I’ll be missing at least part of this meeting; if I can, I’ll join later on :) )</p>",
        "id": 350594989,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1681757820
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/6pSeTBcuv_5hRLjkQnvjoXUo0gKijGDptHlFFtcgfdQYOlxuv-12Hvnzf8zmgrSt.xp9MH03hoPoHB5jm?startTime=1681757930000\">https://cmu.zoom.us/rec/share/6pSeTBcuv_5hRLjkQnvjoXUo0gKijGDptHlFFtcgfdQYOlxuv-12Hvnzf8zmgrSt.xp9MH03hoPoHB5jm?startTime=1681757930000</a><br>\nPasscode: ^12u+PE3</p>",
        "id": 350636757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1681775594
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> You mention in the meeting that you wanted to get information about parser combinators like <code>,*</code> and <code>ppGroup</code>. Hover and go-to-definition actually works in both cases, but <em>you have to use <code>import Lean</code></em> or else it won't work because the constants it wants to link to are not in the environment.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n           <span class=\"c1\">-- v click here to go to Lean.Parser.ppGroup</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"foo\"</span> <span class=\"n\">ppGroup</span><span class=\"o\">(</span><span class=\"s2\">\"bla\"</span><span class=\"o\">),</span><span class=\"bp\">*</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n                        <span class=\"c1\">-- ^ hover talks about sepBy, although ctrl-click doesn't work</span>\n</code></pre></div>",
        "id": 350661827,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1681788067
    },
    {
        "content": "<p>compare:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>           <span class=\"c1\">-- v hover talks about sepBy, no ctrl-click</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"foo\"</span> <span class=\"n\">ppGroup</span><span class=\"o\">(</span><span class=\"s2\">\"bla\"</span><span class=\"o\">),</span><span class=\"bp\">*</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n                        <span class=\"c1\">-- ^ hover talks about sepBy, no ctrl-click</span>\n</code></pre></div>",
        "id": 350661889,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1681788119
    },
    {
        "content": "<p>I heard there was discussion at the last meeting of pushing the meeting time later by an hour. If anyone is able to confirm or deny, that would be great, so I can set my alarm clock. :-)</p>",
        "id": 352235224,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682333564
    },
    {
        "content": "<p>I can confirm in the last meeting that no one present (<span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>, <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, <span class=\"user-mention\" data-user-id=\"306577\">@Matthew Ballard</span>, me, maybe some others who don't appear in the zoom transcript) objected to pushing back by an hour</p>",
        "id": 352235689,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682333675
    },
    {
        "content": "<p>But it sounds like we forgot to do a poll / make an announcement and now we're left in the same position as always that people aren't simultaneously awake to agree a new time at short notice</p>",
        "id": 352236665,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682333920
    },
    {
        "content": "<p>Okay, I will wake up really early again, and take responsibility for running the poll after the meeting. :-)</p>",
        "id": 352238414,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682334337
    },
    {
        "content": "<p>Happening now</p>",
        "id": 352360730,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682363230
    },
    {
        "content": "<p>Trying again to move the meeting one hour later:</p>",
        "id": 352370183,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682366697
    },
    {
        "content": "<p>/poll Future mathlib4 porting meetings<br>\n1pm PDT, 4pm EDT, 10pm CEST, 6am AEST<br>\nnoon PDT, 3pm EDT, 9pm CEST, 5am AEST</p>",
        "id": 352370752,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682366904
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/CFkkDwoogHQpxDV5wrwa6jV7Q8Oq7hRykmEF1Lfd_Z4_f5nQwOOqsgCmvI1JziGO.aw5dEYGG29VCJSDv?startTime=1682362741000\">https://cmu.zoom.us/rec/share/CFkkDwoogHQpxDV5wrwa6jV7Q8Oq7hRykmEF1Lfd_Z4_f5nQwOOqsgCmvI1JziGO.aw5dEYGG29VCJSDv?startTime=1682362741000</a><br>\nPasscode: 6PN@0=RH</p>",
        "id": 352439132,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682403428
    },
    {
        "content": "<p>Okay, this poll came out the way I wanted, so: the next mathlib porting meeting will be at <time datetime=\"2023-05-01T20:00:00Z\">2023-05-02T06:00:00+10:00</time>!</p>",
        "id": 354791834,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682917517
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/MUBVFm33iGZnRiCvvtp1a8nx3deZPTY7J5oYRnhM1dvERce2o4ZSvdw8XLN8rK4-.aXMjXfev9yQ4v9rq?startTime=1682971245000\">https://cmu.zoom.us/rec/share/MUBVFm33iGZnRiCvvtp1a8nx3deZPTY7J5oYRnhM1dvERce2o4ZSvdw8XLN8rK4-.aXMjXfev9yQ4v9rq?startTime=1682971245000</a><br>\nPasscode: s9Yy?GVE</p>",
        "id": 354982793,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682977642
    },
    {
        "content": "<p>Here's the <code>rfl</code> tactic PR that we discussed in the meeting: <a href=\"https://github.com/leanprover-community/mathlib4/pull/3758\">!4#3758</a> (currently awaiting CI)</p>",
        "id": 354983693,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1682978057
    },
    {
        "content": "<p>Link broken?</p>",
        "id": 354983966,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682978181
    },
    {
        "content": "<p>Oops, transposed the last two digits. :) fixed now!</p>",
        "id": 354984044,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1682978215
    },
    {
        "content": "<p>There's a suggestion from Mario, otherwise looks good to me. How about run <code>!bench</code> once CI is done?</p>",
        "id": 354984490,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682978391
    },
    {
        "content": "<p>Continued in <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/.214.233758.20.E2.80.93.20rfl.20refactor.20.26.20fix\">#mathlib4 &gt; !4#3758 – rfl refactor &amp; fix</a> ! :)</p>",
        "id": 355006486,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1682990825
    },
    {
        "content": "<p>A reminder the next meeting is coming up at <time datetime=\"2023-05-08T20:00:00Z\">2023-05-09T06:00:00+10:00</time>!</p>",
        "id": 356705995,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683551814
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/zR-VKKIym_l_RI9fswq-qTpsdYk999QE2VGkRLoFQFqiOID8U6OT2FyPtUUZjK7w.fjj60cjItaYh7DjS?startTime=1683575955000\">https://cmu.zoom.us/rec/share/zR-VKKIym_l_RI9fswq-qTpsdYk999QE2VGkRLoFQFqiOID8U6OT2FyPtUUZjK7w.fjj60cjItaYh7DjS?startTime=1683575955000</a><br>\nPasscode: ?x0&amp;W8#y</p>",
        "id": 356847803,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1683597502
    },
    {
        "content": "<p>I assume we're meeting in 1 minute from now.</p>",
        "id": 358559931,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684180760
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/gbsh6P9sRVfLbfxR046UxVOMIC0f9_XcCCyNZiUlD7chxUO1cK3AGYaXsU2ojekB.QjsI3rrnXP9f_Vyq?startTime=1684180746000\">https://cmu.zoom.us/rec/share/gbsh6P9sRVfLbfxR046UxVOMIC0f9_XcCCyNZiUlD7chxUO1cK3AGYaXsU2ojekB.QjsI3rrnXP9f_Vyq?startTime=1684180746000</a><br>\nPasscode: auVV2su*</p>",
        "id": 358577598,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684187468
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> You asked about searching for <code>#align</code>s in the meeting to translate something where you know the lean 3 name. While you can grep for it, you can also use the <code>#lookup3</code> command</p>",
        "id": 358580842,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684188921
    },
    {
        "content": "<p>Are we meeting today in about seven hours?</p>",
        "id": 360247949,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684757202
    },
    {
        "content": "<p>Me Scott Johan Matt Heather Adam... are all physically in Banff</p>",
        "id": 360248174,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684757261
    },
    {
        "content": "<p>There is a nice talk at <time datetime=\"2023-05-22T20:00:00Z\">2023-05-22T14:00:00-06:00</time> also</p>",
        "id": 360250810,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1684757949
    },
    {
        "content": "<p>I'm at a conference and won't be available today.</p>",
        "id": 360268531,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1684761952
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/360248174\">said</a>:</p>\n<blockquote>\n<p>Me Scott Johan Matt Heather Adam... are all physically in Banff</p>\n</blockquote>\n<p>Is that an argument for or against meeting?</p>",
        "id": 360363593,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684785388
    },
    {
        "content": "<p>looks like most people aren't available, so let's cancel this week</p>",
        "id": 360365366,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684786022
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> also did the time calculation wrong above, it was 8 hours (now) not 7 (an hour ago).</p>",
        "id": 360365406,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684786047
    },
    {
        "content": "<p>Are we meeting in 3 minutes? Hopefully I didn't do the calculation wrong this time (last time I forgot we'd recently added 1 hour to the start time)</p>",
        "id": 362025345,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685390283
    },
    {
        "content": "<p>Can we make a linkifier for the zoom link and put it in the thread title so we don't have to scroll up each week?</p>",
        "id": 362029036,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685392191
    },
    {
        "content": "<p>It seems that I missed the meeting again. I shoulld set up an alarm.</p>",
        "id": 362030084,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685392715
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/362029036\">said</a>:</p>\n<blockquote>\n<p>Can we make a linkifier for the zoom link and put it in the thread title so we don't have to scroll up each week?</p>\n</blockquote>\n<p>I usually put the link in a calendar notification for this kind of thing</p>",
        "id": 362034791,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685395362
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/D0ojneXcxYzY1F0qw5ih6LXlOxkTA-vaONNo6XB5mfgfvXfYPZoG_BOJRl5H3D9e.HwrohSnLPMAziGzt?startTime=1685390450000\">https://cmu.zoom.us/rec/share/D0ojneXcxYzY1F0qw5ih6LXlOxkTA-vaONNo6XB5mfgfvXfYPZoG_BOJRl5H3D9e.HwrohSnLPMAziGzt?startTime=1685390450000</a><br>\nPasscode: %0*i?w+K</p>",
        "id": 362040095,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685398714
    },
    {
        "content": "<p>Bonus for working out what the passcode does when interpreted as a regex</p>",
        "id": 362045512,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685401769
    },
    {
        "content": "<p>Next mathlib porting meeting at <time datetime=\"2023-06-05T20:00:00Z\">2023-06-06T06:00:00+10:00</time>!</p>",
        "id": 363707210,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685968016
    },
    {
        "content": "<p>A quiet meeting today. Discussed and needing follow up:</p>\n<ul>\n<li>the mysterious failure to add a theorem to the environment in <a href=\"#narrow/stream/287929-mathlib4/topic/Lean.204.20doesn't.20add.20lemma.20to.20the.20environment\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Lean.204.20doesn't.20add.20lemma.20to.20the.20environment</a>, which <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> says he'll try to minimize</li>\n<li>unfortunately needing to add many simp lemmas for <code>ModelProd</code>, which is a type synonym for <code>Prod</code> introduced to avoid instances, in <a href=\"https://github.com/leanprover-community/mathlib4/pull/4656\">!4#4656</a>. It feels like we need a reducibility setting that <code>simp</code> can see through by typeclass synthesis can't.</li>\n<li>the question of allowing <code>variable!</code> from <a href=\"https://github.com/leanprover-community/mathlib4/pull/3162\">!4#3162</a> in committed code.</li>\n</ul>",
        "id": 363837008,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685998018
    },
    {
        "content": "<p>I think this is as minimal as I can find</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">)</span>\n\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"s2\">\"ℝ\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">ι</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ha</span> <span class=\"o\">(</span><span class=\"n\">_I</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">_f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">True</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">tndsto</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ha</span> <span class=\"n\">I</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n<span class=\"k\">#check</span> <span class=\"n\">tndsto</span>\n</code></pre></div>",
        "id": 363839215,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1685998834
    },
    {
        "content": "<p>That's pretty minimal. :-) Want to create a Lean4 issue?</p>",
        "id": 363839332,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685998880
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/issues/2257\">https://github.com/leanprover/lean4/issues/2257</a></p>",
        "id": 363840300,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1685999225
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/Spp7PuOj9pi3j7oXITZvKc6AGkOAVaJVw-MTVZco9UhGci-_W2XWr-1zOmwcekuh.QUmS52_T2UGcptwz?startTime=1685995251000\">https://cmu.zoom.us/rec/share/Spp7PuOj9pi3j7oXITZvKc6AGkOAVaJVw-MTVZco9UhGci-_W2XWr-1zOmwcekuh.QUmS52_T2UGcptwz?startTime=1685995251000</a><br>\nPasscode: 9D%!jQa1</p>",
        "id": 363841687,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685999773
    },
    {
        "content": "<p>By the way, <a href=\"https://github.com/leanprover/lean4/pull/2257\">lean4#2257</a> looks pretty similar to <a href=\"https://github.com/leanprover/lean4/pull/2226\">lean4#2226</a></p>",
        "id": 363843311,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686000480
    },
    {
        "content": "<p><code>no_index</code> reminds me of something that is maybe worth asking about again.</p>\n<p>A common (anti)pattern in category theory is that we have <code>@CategoryStruct.comp D 𝒟 X Y Z f g</code>, and would like to rewrite by a lemma that says <code>@CategoryStruct.comp D 𝒟 X' Y' Z' f g = h</code>, where here the <code>f</code>s and <code>g</code>s appearing are syntactically identical, but the objects these are morphisms between have changed from <code>X Y Z</code> to some definitionally equal objects <code>X' Y' Z'</code>.</p>\n<p>Because of the difference in the implicit arguments <code>X Y Z</code>, <code>rw</code> won't fire, and we resort to <code>erw</code>. However this is overkill: the explicit arguments match identically, so we \"know\" the implicit arguments must match definitionally.</p>\n<p><code>rw</code> is \"just\" a wrapper around <code>kabstract</code> which is in turn a wrapper around <code>isDefEq</code>, so I think asking for any more powerful behaviour in <code>rw</code> here comes down to asking about <code>isDefEq</code>. Does it even make sense to ask if we can test def-eq-ness in situations like this by comparing the explicit arguments <em>before</em> the implicit ones?</p>",
        "id": 363873740,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686018275
    },
    {
        "content": "<p>If we could make some improvement on this it would massively improve life in e.g. algebraic geometry, where this issue arises all the time.</p>",
        "id": 363873833,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686018348
    },
    {
        "content": "<p>e.g. <a href=\"https://github.com/leanprover-community/mathlib4/pull/4693\">!4#4693</a></p>",
        "id": 363873984,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686018415
    },
    {
        "content": "<p>What are <code>X</code> and <code>X'</code> in this example?</p>",
        "id": 363941049,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686044216
    },
    {
        "content": "<p>The meeting link is <br>\n<span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/314643291\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>\n<p>as usual.</p>\n<p>The next meeting is <time datetime=\"2023-06-12T20:00:00Z\">2023-06-13T06:00:00+10:00</time>. Likely I won't make it, as I'm going to try to catch some of the PNAS meeting, which is at a ridiculous time for me.</p>",
        "id": 365522535,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686567885
    },
    {
        "content": "<p>The PNAS meeting finishes just in time for the porting meeting, right?</p>\n<p>I'm at two conferences this week :-/ and the meeting clashes with the conference dinner for one of them so I'll probably not make it either.</p>",
        "id": 365525435,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686568521
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/fatk9LUh-kgaIMAvmlfhDCNRXebBA7eIVCBNRoteutIFBXHwMhWeOVzHiqG4cO89.MJzhslLq7FWJwuta?startTime=1686600013000\">https://cmu.zoom.us/rec/share/fatk9LUh-kgaIMAvmlfhDCNRXebBA7eIVCBNRoteutIFBXHwMhWeOVzHiqG4cO89.MJzhslLq7FWJwuta?startTime=1686600013000</a><br>\nPasscode: 3Dp#JE!+</p>",
        "id": 365683758,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686604599
    },
    {
        "content": "<p>Next meeting at <time datetime=\"2023-06-19T20:00:00Z\">2023-06-20T06:00:00+10:00</time>!</p>",
        "id": 367618973,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687177393
    },
    {
        "content": "<p>What is the meeting link?</p>",
        "id": 367740432,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1687204898
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a></p>",
        "id": 367740486,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1687204917
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/04HkxlGzBDMV9ZqbgFVrB5-PFJfcYyRAAerdt7vPUccEapaeB0Znj-OwPr5hvx9k.XrrRIAz2TsayhGTn?startTime=1687204762000\">https://cmu.zoom.us/rec/share/04HkxlGzBDMV9ZqbgFVrB5-PFJfcYyRAAerdt7vPUccEapaeB0Znj-OwPr5hvx9k.XrrRIAz2TsayhGTn?startTime=1687204762000</a><br>\nPasscode: v*M2n.i9</p>",
        "id": 367751880,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687209230
    },
    {
        "content": "<p>42 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/.23stalled.20PRs\">#mathlib4 &gt; #stalled PRs</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span>.</p>",
        "id": 368063108,
        "sender_full_name": "Notification Bot",
        "timestamp": 1687298808
    },
    {
        "content": "<p>The meeting link is </p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>\n<p>as usual, at <time datetime=\"2023-06-26T20:00:00Z\">2023-06-27T06:00:00+10:00</time>.</p>",
        "id": 369664026,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687778956
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/B9YS_HX_Ex11HAisB3lDaOibzgqfrDIEP0C5aqV3SDA3HLwo-Co5007qdLOvdPG7.5YYflG9gs7lEfxUk?startTime=1687809696000\">https://cmu.zoom.us/rec/share/B9YS_HX_Ex11HAisB3lDaOibzgqfrDIEP0C5aqV3SDA3HLwo-Co5007qdLOvdPG7.5YYflG9gs7lEfxUk?startTime=1687809696000</a><br>\nPasscode: ^b0k=3qh</p>",
        "id": 369845307,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687817720
    },
    {
        "content": "<p>Today's porting meeting was all triage: we went through the <a href=\"https://leanprover-community.github.io/mathlib-port-status\">#port-dashboard</a>, deciding what to do with the \"old stuff\", and then started going through the tactic porting tracking issue <a href=\"https://github.com/leanprover-community/mathlib4/pull/430\">#430</a> to see what still needed to be done.</p>\n<p>I'm going to now post a whole list of individual TODO items. If you are able to do one of these, please either claim it with a <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>, or just tell us that you've done it with a <span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span>.</p>",
        "id": 369847750,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687818940
    },
    {
        "content": "<ul>\n<li><code>category_theory.limits.constructions.over.default</code> is a \"fake\" default file that actually has content. It should be renamed in mathlib3. (And we'll subsequently port it like anything else.)</li>\n</ul>",
        "id": 369847864,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687818991
    },
    {
        "content": "<ul>\n<li>many <code>.default</code> files in <a href=\"https://github.com/leanprover-community/mathlib4/wiki/port-comments\">#port-comments</a> have been deleted from mathlib3, and we should delete them from <a href=\"https://github.com/leanprover-community/mathlib4/wiki/port-comments\">#port-comments</a></li>\n</ul>",
        "id": 369848126,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819142
    },
    {
        "content": "<ul>\n<li><code>control.random</code>, <code>testing.slim_check.gen</code>, <code>testing.slim_check.sampleable</code>, and <code>testing.slim_check.testable</code> have all been ported by hand (and everything that is needed for <code>slim_check</code> works), so we should just add a header to the mathlib4 file so the dashboard know this is completed.</li>\n</ul>",
        "id": 369848321,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819261
    },
    {
        "content": "<ul>\n<li><code>data.buffer.parser</code> contains code parsing strings into arrays, and contains some proofs about its behaviour, not just meta code. We would eventually like to have this, but it needn't be ported now. The proposal is to create a mathlib4 issue saying at least \"We would like a replacement implementation of mathlib3's data.buffer.parser\", and to port it as an empty file, containing just the header and a link to the issue.</li>\n</ul>",
        "id": 369848535,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819370
    },
    {
        "content": "<ul>\n<li><code>data.rat.meta_defs</code> we think has been entirely ported, but the code is spread amongst different locations (and this is fine). Proposal: port as an empty file, containing just a header, and either a TODO to track them down, or references to the places the replacement code now lives.</li>\n</ul>",
        "id": 369848705,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819454
    },
    {
        "content": "<ul>\n<li>for all the files on <a href=\"https://leanprover-community.github.io/mathlib-port-status\">#port-dashboard</a> with <code>array</code> in the name, port them so that they are written in terms of the new <code>Array</code>. Still #align declarations, even though they are now talking about a different type! (See <a href=\"#narrow/stream/287929-mathlib4/topic/porting.20.60.2Earray.60.20files.20whose.20PR's.20were.20closed.3F\">zulip discussion</a>.)</li>\n</ul>",
        "id": 369848817,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819524
    },
    {
        "content": "<ul>\n<li><code>init.data.list.instances</code> should be ported as a file with just a header and #align statements</li>\n</ul>",
        "id": 369848861,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819556
    },
    {
        "content": "<ul>\n<li>all the RBTree files can be ported as empty files, just with a header, as all the content we want is in Std already.</li>\n</ul>",
        "id": 369848971,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819605
    },
    {
        "content": "<ul>\n<li>we would like to use whatever mechanism in <a href=\"https://github.com/leanprover-community/mathlib-port-status/\">https://github.com/leanprover-community/mathlib-port-status/</a> already exists to not list meta code from Lean 3 core to also not list <code>system.*</code> and <code>init.meta.*</code></li>\n</ul>",
        "id": 369849416,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819814
    },
    {
        "content": "<ul>\n<li>update the tactic porting tracking issue <a href=\"https://github.com/leanprover-community/mathlib4/pull/430\">#430</a> to reflect discussion in the meeting</li>\n</ul>",
        "id": 369849486,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819869
    },
    {
        "content": "<ul>\n<li>write a description of the current meta PRs on the <a href=\"https://bit.ly/3cKk3ld\">#queue</a>, and solicit additional reviews as needed</li>\n</ul>",
        "id": 369849604,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819937
    },
    {
        "content": "<ul>\n<li>write a summary of important / interesting tactics that still need porting</li>\n</ul>",
        "id": 369849625,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687819958
    },
    {
        "content": "<p>There was mention of an idea for implementing <code>parameter</code> in terms of nullary typeclasses. I can't find any trace of this on zulip: if someone knows a source we can mention this in <a href=\"https://github.com/leanprover-community/mathlib4/pull/430\">#430</a>.</p>",
        "id": 369850699,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687820545
    },
    {
        "content": "<p><a href=\"#narrow/stream/270676-lean4/topic/parameter/near/271747258\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/parameter/near/271747258</a></p>",
        "id": 369851746,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687821123
    },
    {
        "content": "<p>Wow, that is really simple.</p>",
        "id": 369851984,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687821271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/369848971\">said</a>:</p>\n<blockquote>\n<ul>\n<li>all the RBTree files can be ported as empty files, just with a header, as all the content we want is in Std already.</li>\n</ul>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/5504\">!4#5504</a></p>",
        "id": 369858769,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1687825100
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598052\">@Jeremy Tan</span>, would you mind merging Johan's <a href=\"https://github.com/leanprover-community/mathlib4/pull/5479\">#5479</a> into this. I don't think we need to have all the #align's in the later files, but given Johan has already done that effort we shouldn't waste it.</p>",
        "id": 369859570,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687825451
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/5505\">#5505</a> adds the headers for the <code>slim_check</code> files.</p>",
        "id": 369860323,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687825799
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/369859570\">said</a>:</p>\n<blockquote>\n<p>would you mind merging Johan's <a href=\"https://github.com/leanprover-community/mathlib4/pull/5479\">#5479</a> into this</p>\n</blockquote>\n<p>Should be done</p>",
        "id": 369860856,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1687826021
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/19217\">!3#19217</a> renames <code>category_theory.limits.constructions.over.default</code> and is ready for a <span aria-label=\"peace sign\" class=\"emoji emoji-270c\" role=\"img\" title=\"peace sign\">:peace_sign:</span> or <img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\">.</p>",
        "id": 369861324,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687826217
    },
    {
        "content": "<p>On the topic of files from core that were not ported, I just noticed that <code>Mathlib.Init.Data.Nat.Lemmas</code> is an adhoc port, and is missing the majority of <code>#align</code>s, which is surprising since there are so many important theorems on <code>Nat</code> in there</p>",
        "id": 370577221,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687986995
    },
    {
        "content": "<p>actually, now that I think of it it's probably using the older convention of using <code>#align</code> only when mathport would not be able to guess the name on its own</p>",
        "id": 370577455,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687987074
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a></p>\n<p>Starting in two minutes, I suppose.</p>",
        "id": 372119599,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1688414300
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/Hb53g_FV5i-9I0Dsn79NqZuvUft2gojG-rrA2T8EXvwQjqVUZ1jed-YTGH0XtTwx.1pghhJtIPgkmdiA9?startTime=1688414370000\">https://cmu.zoom.us/rec/share/Hb53g_FV5i-9I0Dsn79NqZuvUft2gojG-rrA2T8EXvwQjqVUZ1jed-YTGH0XtTwx.1pghhJtIPgkmdiA9?startTime=1688414370000</a><br>\nPasscode: $F#Y62gu</p>",
        "id": 372145945,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688427093
    },
    {
        "content": "<p>Starting 8 minutes ago? Or did last meeting conclude we weren't meeting this week?</p>",
        "id": 374073918,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689019695
    },
    {
        "content": "<p>Ah, I guess <a href=\"https://www.lorentzcenter.nl/index.php?pntType=ConPagina&amp;id=1891&amp;conPaginaProgrammaDagId=463&amp;pntHandler=DownloadAction\">this programme</a> suggests there might be a clash with an overrunning wine and cheese party!</p>",
        "id": 374074908,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689020028
    },
    {
        "content": "<p>End-of-port party at <time datetime=\"2023-07-17T20:00:00Z\">2023-07-18T06:00:00+10:00</time>?</p>",
        "id": 375643273,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1689466364
    },
    {
        "content": "<p>BYOB <span aria-label=\"beer\" class=\"emoji emoji-1f37a\" role=\"img\" title=\"beer\">:beer:</span>. For some of you this is a <em>very</em> strange time for a drink. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 375654197,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1689472094
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"356930\">@porters</span> We'll start in 5 minutes (-;</p>",
        "id": 376146669,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689623719
    },
    {
        "content": "<p>Are people who haven't ported recently welcome?</p>",
        "id": 376147046,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689623833
    },
    {
        "content": "<p>The meeting link is </p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>\n<p>as \"usual\".</p>",
        "id": 376147082,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689623847
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/376147046\">said</a>:</p>\n<blockquote>\n<p>Are people who haven't ported recently welcome?</p>\n</blockquote>\n<p>Yes, please, it's a party, all welcome. :-)</p>",
        "id": 376147130,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689623863
    },
    {
        "content": "<p>Clearing out some old tabs, remember when graphs looked like this? <a href=\"https://tqft.net/mathlib4/2023-01-17/number_theory.legendre_symbol.quadratic_reciprocity.pdf\">https://tqft.net/mathlib4/2023-01-17/number_theory.legendre_symbol.quadratic_reciprocity.pdf</a></p>",
        "id": 376168907,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1689630081
    },
    {
        "content": "<p>In line with the discussion, some suggestions for future lines of work from the CS side that do not involve algorithms or verification:</p>\n<ol>\n<li>Finite Model Theory: The textbook by Leonid libkin might be a good start.</li>\n<li>Fair division/allocation theory: Many (already proved) theorems about existence of various kinds of allocations and their computation through graph theoretic methods. </li>\n<li>Computational Social Choice.</li>\n<li>The book on boolean Fourier analysis by Ryan O Donnell.</li>\n<li>The matrix cookbook which iirc someone is already working on.</li>\n<li>Elementary probability theory with accompanying tactics. (For example a tactic that searches the environment for conditions and matches them with the correct concentration inequality out of some tagged ones)</li>\n<li>If some of the above are done, then the theory of Markov Decision Processes.</li>\n</ol>",
        "id": 376169524,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689630344
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/jwUJ-4hubpzzajsByKEGP1jOCXdngVOyRq_Fq5D8YfqeGqXfJhb0rmxgqBppy1TK.pHZS4Ydm2sCCjbIb?startTime=1689623924000\">https://cmu.zoom.us/rec/share/jwUJ-4hubpzzajsByKEGP1jOCXdngVOyRq_Fq5D8YfqeGqXfJhb0rmxgqBppy1TK.pHZS4Ydm2sCCjbIb?startTime=1689623924000</a><br>\nPasscode: ?9^wP6UG</p>",
        "id": 376232507,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689659917
    },
    {
        "content": "<p>As follow-up from today's meeting (I forget if it was in the main meeting or after-party):</p>\n<ul>\n<li>feat: <code>says</code> tactic combinator <a href=\"https://github.com/leanprover-community/mathlib4/pull/5980\">#5980</a></li>\n</ul>\n<blockquote>\n<p>This is a primitive implementation of the <code>says</code> combinator discussed at today's porting meeting.</p>\n<p>If you write X says, where X is a tactic that produces a \"Try this: Y\" message, then you will get a message \"Try this: X says Y\". Once you've clicked to replace <code>X says</code> with <code>X says Y</code>, afterwards <code>X says Y</code> will only run <code>Y.</code></p>\n</blockquote>",
        "id": 376299200,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689676796
    },
    {
        "content": "<p>(When thinking about this earlier, for some reason I had expected that we couldn't write <code>says</code> in between the <code>X</code> and <code>Y</code>, and that it would have had to come first, and thus be <code>quoth</code> instead of <code>says</code>.)</p>",
        "id": 376299491,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689676849
    },
    {
        "content": "<blockquote>\n<p>(I forget if it was in the main meeting or after-party)</p>\n</blockquote>\n<p>By the way, I want to state that I wasn't really happy with the \"after-party\" setup; as I expected we just ended up doing more business during the second half of the meeting and that wasn't recorded despite containing lots of useful information for people who might not be in the right time zone. I'd rather not repeat it.</p>",
        "id": 376370901,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689690413
    },
    {
        "content": "<p>As mentioned on Monday: counting the remaining porting notes in the speedcenter <a href=\"https://github.com/leanprover-community/mathlib4/pull/5994\">#5994</a></p>",
        "id": 376587870,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689758127
    },
    {
        "content": "<p>We're still doing this! At least until we all get bored of it...</p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>",
        "id": 378257496,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690228892
    },
    {
        "content": "<p>I have to miss today, sorry.</p>",
        "id": 378258494,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1690229177
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/sAHBY7S9IQJUS3u3yK1OkfnDsMEAhgn8agdZeltcwgp3zRg1oqVY7nX5gm1EZRPO.VuIl0cA5bwGoz0tU?startTime=1690228917000\">https://cmu.zoom.us/rec/share/sAHBY7S9IQJUS3u3yK1OkfnDsMEAhgn8agdZeltcwgp3zRg1oqVY7nX5gm1EZRPO.VuIl0cA5bwGoz0tU?startTime=1690228917000</a><br>\nPasscode: ^t1NB@QS</p>",
        "id": 378283107,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690235482
    },
    {
        "content": "<p>A reminder we're still having Mathlib meetings at the regular time.</p>\n<p><time datetime=\"2023-07-31T20:00:00Z\">2023-08-01T06:00:00+10:00</time> </p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>",
        "id": 380303285,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690803166
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/ozrnh1y__FHz-on9rRTpCYKb6cRf1KhrkSZGeO2IWEAI2wo3W8Z30oc88gSacIzl.bfvxuo_QWvp_5TZR?startTime=1690833651000\">https://cmu.zoom.us/rec/share/ozrnh1y__FHz-on9rRTpCYKb6cRf1KhrkSZGeO2IWEAI2wo3W8Z30oc88gSacIzl.bfvxuo_QWvp_5TZR?startTime=1690833651000</a><br>\nPasscode: mq!J1?$g</p>",
        "id": 380553038,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690862793
    },
    {
        "content": "<p>I will not make today/tomorrow's meeting at <time datetime=\"2023-08-07T20:00:00Z\">2023-08-08T06:00:00+10:00</time> as it's rather soon and I need to sleep. I encourage everyone to think about organising a PR merge sprint. :-)</p>",
        "id": 382666379,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691420934
    },
    {
        "content": "<p>Tune in for the next edition of \"what's next for mathlib\" at: <time datetime=\"2023-07-31T20:00:00Z\">2023-08-01T06:00:00+10:00</time> </p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>",
        "id": 382745815,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691438213
    },
    {
        "content": "<p><a href=\"https://bit.ly/3cKk3ld\">#queue</a> for reference</p>",
        "id": 382750933,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691439838
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/rb1jRfD7YkIE334mxV4YBFwlo-VSLLMNm3TUKJX_OW1wU19Xcrdy7RIjb8N497xX.YMppbvK4yxKqXgzV?startTime=1691438417000\">https://cmu.zoom.us/rec/share/rb1jRfD7YkIE334mxV4YBFwlo-VSLLMNm3TUKJX_OW1wU19Xcrdy7RIjb8N497xX.YMppbvK4yxKqXgzV?startTime=1691438417000</a><br>\nPasscode: !#c2Hejm</p>",
        "id": 382764216,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691444191
    },
    {
        "content": "<p>Regarding the <code>Type _</code> issue discussed in this meeting. Talking to Leo yesterday, he said something that I hadn't appreciated: paraphrasing only slightly: \"I wouldn't allow authors to use <code>Type _</code> in a repository I was responsible for. It will cause delayed unification problems, with potentially unpredictable results or performance problems.\"</p>\n<p>I would suggest that not only do we merge Matthew's PR about this, but that we add a linter forbidding <code>Type _</code> in Mathlib.</p>\n<p>We should perhaps think of it as</p>\n<ul>\n<li>there as a historical legacy, from when it was painful to have to introduce your universes ahead of time (note that's not longer the case: you can just write <code>variable (X : Type u) (Y : Type v)</code>.</li>\n<li>an aspect of Lean's great flexibility to write metavariables almost anywhere and then hope for unification to help you, rather than a feature there to support universe polymorphism.</li>\n</ul>",
        "id": 382774533,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691449181
    },
    {
        "content": "<blockquote>\n<p>there as a historical legacy, from when it was painful to have to introduce your universes ahead of time (note that's not longer the case: you can just write <code>variable (X : Type u) (Y : Type v)</code>.</p>\n</blockquote>\n<p>This is not really an improvement over the legacy syntax</p>",
        "id": 382774719,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691449249
    },
    {
        "content": "<p>in particular you can't write <code>variable (X Y Z W : Type _)</code> here</p>",
        "id": 382774762,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691449267
    },
    {
        "content": "<blockquote>\n<p>I would suggest that not only do we merge Matthew's PR about this, but that we add a linter forbidding Type _ in Mathlib.</p>\n</blockquote>\n<p>I think I suggested this in the meeting</p>",
        "id": 382774852,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691449291
    },
    {
        "content": "<p>Matthew pointed out that a notable exception is things like <code>def foo : Type _ := ...</code> where you really do just want lean to unify the universe</p>",
        "id": 382774892,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691449318
    },
    {
        "content": "<p>I recall Eric also suggested tweaking variable elaboration to make <code>variable (X Y Z W : Type _)</code> make new universe variables rather than metavariables, like in lean 3</p>",
        "id": 382774993,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691449339
    },
    {
        "content": "<p>That's what Matthew's PR does anyway though, using <code>*</code> syntax instead of <code>_</code></p>",
        "id": 382775039,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691449370
    },
    {
        "content": "<p>Even the <code>def foo : Type _ := ...</code> seems pretty dubious to me --- saving characters at the expense of readability.</p>",
        "id": 382775326,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691449490
    },
    {
        "content": "<p>readability of what though? 99% of the time the universe levels just aren't important and obscure the mathematical content</p>",
        "id": 382775654,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691449627
    },
    {
        "content": "<p>If you banned <code>Type _</code> then people would write <code>def foo :=</code> which is worse because now you have to guess whether the expression is a type at all</p>",
        "id": 382775765,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691449669
    },
    {
        "content": "<p>(ok, we should probably ban that in a linter too)</p>",
        "id": 382775841,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691449685
    },
    {
        "content": "<p>I remain pro-hiding-universes because lean is <em>remarkably</em> good at making the whole level algebra thing invisible in the vast majority of cases, although category theory may be an exception to this (because of its free level variable)</p>",
        "id": 382775947,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691449738
    },
    {
        "content": "<p>Lean core has made some questionable choices regarding universe unification though, like allowing the body to unify level metavariables in the theorem statement. I suspect this is at least partially the cause of the \"unpredictable results or performance problems\" Leo is hinting at</p>",
        "id": 382776436,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691449948
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/382775039\">said</a>:</p>\n<blockquote>\n<p>That's what Matthew's PR does anyway though, using <code>*</code> syntax instead of <code>_</code></p>\n</blockquote>\n<p>Yes though Kyle wrote the elaborators. </p>\n<p>On my most recent pass today, I tried to make universe levels explicit but left two cases: type wrappers and quantification over types.</p>",
        "id": 382776583,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691450028
    },
    {
        "content": "<p>I only encountered one incident of seemingly unintentional monomorphization</p>",
        "id": 382776786,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691450149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/382774533\">said</a>:</p>\n<blockquote>\n<p>Regarding the <code>Type _</code> issue discussed in this meeting. Talking to Leo yesterday, he said something that I hadn't appreciated: paraphrasing only slightly: \"I wouldn't allow authors to use <code>Type _</code> in a repository I was responsible for. It will cause delayed unification problems, with potentially unpredictable results or performance problems.\"</p>\n</blockquote>\n<p>If you're not allowed to use <code>Type _</code>, then you're also not allowed to use <code>autoImplicit</code> for type variables, right?</p>",
        "id": 382777648,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691450611
    },
    {
        "content": "<p>Why?</p>",
        "id": 382777768,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691450664
    },
    {
        "content": "<p>Because doesn't that generate a variable of type <code>Sort _</code>?</p>",
        "id": 382777791,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691450676
    },
    {
        "content": "<p>Indeed. No explicitly written <code>Type _</code>, then. :-)</p>",
        "id": 382777967,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691450780
    },
    {
        "content": "<p>Well \"It will cause delayed unification problems, with potentially unpredictable results or performance problems\" is true of implicitly-written <code>Type _</code> too!</p>",
        "id": 382777993,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691450804
    },
    {
        "content": "<p>IIRC Leo also didn't like <code>{X}</code> in declarations, although this was before auto implicits</p>",
        "id": 382778004,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691450815
    },
    {
        "content": "<p>Yes, but we would have fewer of them by banning the explicit ones.</p>",
        "id": 382778017,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691450830
    },
    {
        "content": "<p>How about we add an option to make universe metavariables get turned into variables after the type is elaborated? I think this will have minimal fallout on mathlib since lean 3 effectively did this</p>",
        "id": 382778176,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691450940
    },
    {
        "content": "<p>I think that will address the main performance issue with universe metavariables - having no ground terms at all because the base types have universe metavariables in them</p>",
        "id": 382778259,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691450996
    },
    {
        "content": "<p>I think we should see how performance of that compares to Matthew's PR.</p>",
        "id": 382816142,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691468659
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 382820765,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691471207
    },
    {
        "content": "<p>I transitioned from <code>Sort _</code> to <code>Sort*</code> last night taking care to  make explicit any  existing constraints on the universe level. </p>\n<p>One thing that was very common was having <code>Sort  _</code> when Lean would only accept <code>Type _</code></p>",
        "id": 382884031,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691486756
    },
    {
        "content": "<p>We had a few of those in lean 3 too when we had the binders in the declaration rather than variables</p>",
        "id": 382889041,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691487897
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/378257496\">said</a>:</p>\n<blockquote>\n<p>We're still doing this! At least until we all get bored of it...</p>\n<blockquote>\n<p><a href=\"https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09\">https://cmu.zoom.us/j/91251085952?pwd=cnFCK0RTWVJnUS96MTRCMXVSL0haZz09</a><br>\nMeeting ID: 912 5108 5952<br>\nPasscode: 730524</p>\n</blockquote>\n</blockquote>\n<p>Are we bored of this?</p>",
        "id": 384895487,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692043498
    },
    {
        "content": "<p>At least bored of turning up the first 10 minutes it seems....</p>",
        "id": 384896188,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692043657
    },
    {
        "content": "<p>Or the first 25 minutes :)</p>",
        "id": 384900419,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692044674
    },
    {
        "content": "<p>Sorry, I'm in a field with a bunch of other people</p>",
        "id": 384902938,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1692045295
    },
    {
        "content": "<p>I've been at a state fair all day with my kids. I should be more regular once the semester starts.</p>",
        "id": 384910745,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1692047349
    },
    {
        "content": "<p>I've been a little under the weather this weekend and appear to have missed it, sounds like the recording will be interesting</p>",
        "id": 384920682,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692051723
    },
    {
        "content": "<p>It appears the recording captured 25 minutes of no talking and Matthew staring at the screen, so I think I will not post it. Here's the chat log:</p>\n<blockquote>\n<ul>\n<li>\n<p>Eric Wieser 12:40</p>\n<p>I'm afraid I haven't really been following your work on the <code>with</code> stuff recently, and probably shouldn't distract myself this week by getting re-interested in it!</p>\n<p>(afk for 5 minutes)</p>\n</li>\n<li>\n<p>Matthew Ballard (he/him) 14:48</p>\n<p>I got <code>a with</code> to elaborate as <code>let src := a; toA := src</code> and benchmarked it. Lots of changes. Most good but some serious regression mostly around Algebraic Geometry and Calculus.</p>\n<p>Today I got <code>let src :=a; {toA := a}</code> but I tripped the unused variable linter so cannot build and share a toolchain</p>\n</li>\n<li>\n<p>Eric Wieser 16:02</p>\n<p>Aren't those the same?</p>\n</li>\n<li>\n<p>Matthew Ballard (he/him) 16:16</p>\n<p>The second reduces the let</p>\n</li>\n<li>\n<p>Eric Wieser 16:34</p>\n<p>I don't understand the first, it looks like a syntax error</p>\n</li>\n<li>\n<p>Matthew Ballard (he/him) 16:48</p>\n<p>Yes it should be <code>{toA := src}</code></p>\n<p>Currently it elaborates are <code>let src := a; {toA := { x := src.x }}</code></p>\n<p>For some reason there is an extra eta expansion on top of everything.</p>\n<p>It doesn’t seem to have anything to do with the reenable eta stuff</p>\n</li>\n<li>\n<p>Eric Wieser 18:49</p>\n<p>Sorry, I see the difference now</p>\n</li>\n<li>\n<p>Matthew Ballard (he/him) 19:23</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6539\">https://github.com/leanprover-community/mathlib4/pull/6539</a> has the benchmark results</p>\n</li>\n<li>\n<p>Matthew Ballard (he/him) 21:41</p>\n<p>Apparently the changes also addressed the slowness that ACL was talking about for the algebra instance on a quotient of <code>MvPolynomial</code></p>\n</li>\n</ul>\n</blockquote>",
        "id": 384932985,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692057984
    },
    {
        "content": "<p>Hey, there were far less than 25 minute of me starting at the screen ;)</p>",
        "id": 384934518,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692058694
    },
    {
        "content": "<p>It's happening!</p>",
        "id": 386464934,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692648469
    },
    {
        "content": "<p>A pressing unresolved question: what the does the <code>e</code> in <code>erw</code> stand for?</p>",
        "id": 386475956,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692652164
    },
    {
        "content": "<p>Euler's number?</p>",
        "id": 386476306,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1692652333
    },
    {
        "content": "<p>It could be!</p>",
        "id": 386476368,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692652369
    },
    {
        "content": "<p><span aria-label=\"fire\" class=\"emoji emoji-1f525\" role=\"img\" title=\"fire\">:fire:</span><strong>EXTREME</strong><span aria-label=\"fire\" class=\"emoji emoji-1f525\" role=\"img\" title=\"fire\">:fire:</span> <code>rw</code></p>",
        "id": 386476773,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1692652565
    },
    {
        "content": "<p>I tracked it down to the original commit: <a href=\"https://github.com/leanprover-community/lean/commit/e2f70371cc6c3527930eb1a6ad30fd0730d116aa\">https://github.com/leanprover-community/lean/commit/e2f70371cc6c3527930eb1a6ad30fd0730d116aa</a> . It didn't help.</p>",
        "id": 386481782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692655418
    },
    {
        "content": "<p><a href=\"https://cmu.zoom.us/rec/share/fdJnR6o1FAbQR4m43S60_6lm0QYYz79XAvd12m9kwVGEo5F666C0kqDxEE_Zt1U5.TeLi1rKDY2xrzxRu?startTime=1692647990000\">https://cmu.zoom.us/rec/share/fdJnR6o1FAbQR4m43S60_6lm0QYYz79XAvd12m9kwVGEo5F666C0kqDxEE_Zt1U5.TeLi1rKDY2xrzxRu?startTime=1692647990000</a><br>\nPasscode: L12p@!yj</p>",
        "id": 386486569,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692658453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306577\">Matthew Ballard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/386475956\">said</a>:</p>\n<blockquote>\n<p>A pressing unresolved question: what the does the <code>e</code> in <code>erw</code> stand for?</p>\n</blockquote>\n<p>In an email on 26 Jan 2017 to the <code>lean-user</code> Google group (an old Lean mailing list) Leo writes </p>\n<blockquote>\n<p>[you can] use the \"expensive\" rewrite tactic erewrite. This version will unfold all declarations that are not marked as irreducible. This option works well for simple things, but you may have performance problems </p>\n</blockquote>\n<p>so I think that is the intended interpretation of the <code>e</code>.</p>",
        "id": 386488081,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1692659350
    },
    {
        "content": "<p>Nice—mystery solved, I’d say! Btw, in searching zulip for answers initially, I stumbled across this old message (Oct 2022), and I suppose the sentiment is even more justified now in light of that:<br>\n<span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20analogue.20of.20semireducible.20for.20TransparencyMode.3F/near/302781055\">said</a>:</p>\n<blockquote>\n<p>It occurs to me that <code>erw</code> should maybe be renamed to <code>rw!</code> to follow this naming convention (it is the <code>reducibility := .default</code> version of <code>rw</code>)</p>\n</blockquote>",
        "id": 386488915,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1692659811
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306577\">Matthew Ballard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/386475956\">said</a>:</p>\n<blockquote>\n<p>A pressing unresolved question: what the does the <code>e</code> in <code>erw</code> stand for?</p>\n</blockquote>\n<p>I've been calling it \"engry rewrite\" lately <span aria-label=\"angry\" class=\"emoji emoji-1f620\" role=\"img\" title=\"angry\">:angry:</span> <span aria-label=\"very angry\" class=\"emoji emoji-1f621\" role=\"img\" title=\"very angry\">:very_angry:</span> --- <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 386533649,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1692683209
    },
    {
        "content": "<p><code>erw</code> stands for Extra-strength rewrite</p>",
        "id": 386537161,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1692684591
    },
    {
        "content": "<p>I think we might have got bored of these meetings, the turnout was quite low again. So I propose we (1) renegotiate timing, since it's a new semester for many of us, (2) lower the frequency, and (3) rebrand, as it's not a porting meeting anymore. <a href=\"#narrow/stream/270676-lean4/topic/Meeting.20series.3A.20What's.20new.20in.20lean.3F\">Continued in #lean4</a>...</p>",
        "id": 387751526,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693254590
    },
    {
        "content": "<p>I intended to attend but I didn't know the time.</p>",
        "id": 387753678,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1693255462
    }
]