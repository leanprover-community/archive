[
    {
        "content": "<p>Perhaps once the port is done it's worth slight consideration of even merging the repositories?</p>",
        "id": 355280523,
        "sender_full_name": "Julian Berman",
        "timestamp": 1683068346
    },
    {
        "content": "<p>I definitely think it would be helpful to graft the git histories somehow, even a slightly imperfect result would still be helpful when working on mathlib in the future</p>",
        "id": 355280910,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1683068513
    },
    {
        "content": "<p>Not that it needs any further reputability but might also be nice for publicity purposes if someone in the future sees a 10 year commit history rather than a 2 year one or whatever. But yeah git is perfectly happy with that sort of thing.</p>",
        "id": 355281393,
        "sender_full_name": "Julian Berman",
        "timestamp": 1683068749
    },
    {
        "content": "<p>What I'd probably suggest is doing something like</p>\n<div class=\"codehilite\" data-code-language=\"plain\"><pre><span></span><code>* \"Combine the mathlib3 and mathlib4 repos\"\n|\\\n| * Merge of last mathport output into master, discarding all changes from mathport\n| |\\\n| | * automated fixed (Mathbin -&gt; Mathlib)\n| | * mathport output for last commit in mathlib3, with lean3 versions deleted\n| | * last commit in mathlib3\n| | |\n| |\n* | misc mathlib4 features that happen\n* | misc mathlib4 features that happen\n|/\n/\n|\n* last forward-porting commit in mathlib4\n* last porting commit in mathlib4\n* misc mathlib4 commits\n|\n</code></pre></div>",
        "id": 355283250,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683069829
    },
    {
        "content": "<p>A bit of thought can probably be put into which order we want the parents in the top two merge commits; I believe by default git follows the first parent. This lets us pick between emphasizing the porting history or the mathlib3 history</p>",
        "id": 355283715,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683070085
    },
    {
        "content": "<p>(And then on the GitHub side you transfer all the mathlib4 issues and they get new mathlib numbers, and then you put your fingers in your ears and don't think about all the zulip mentions of mathlib4 numbers between now and then :)</p>",
        "id": 355283799,
        "sender_full_name": "Julian Berman",
        "timestamp": 1683070153
    },
    {
        "content": "<p>That would actually be ok if the new home were <code>leanprover-community/mathlib</code></p>",
        "id": 355283838,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683070181
    },
    {
        "content": "<p>OK we figured it all out, is the port done now, where's Johan to say 100%</p>",
        "id": 355283963,
        "sender_full_name": "Julian Berman",
        "timestamp": 1683070243
    },
    {
        "content": "<p>Because github would redirect from the mathlib4 issues automatically</p>",
        "id": 355283977,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683070256
    },
    {
        "content": "<p>9 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/Mention.20Lean.204.20somewhere.20in.20the.20Lean.20Community.20pages\">#new members &gt; Mention Lean 4 somewhere in the Lean Community pages</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 355284105,
        "sender_full_name": "Notification Bot",
        "timestamp": 1683070324
    },
    {
        "content": "<p>I love the idea of the repo name eventually being just <code>mathlib</code> rather than <code>mathlib4</code>.</p>",
        "id": 355287131,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683072402
    },
    {
        "content": "<p>Is now a good point to think about implementing this?</p>",
        "id": 376714523,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1689781817
    },
    {
        "content": "<p>Yes, once we've made the release tags. Some things we need to answer:</p>",
        "id": 376728849,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689784677
    },
    {
        "content": "<ul>\n<li>What do we want blame to point at; the porting history, or the mathlib3 history? Which order do the parents of the merge commits need to be to achieve this?</li>\n</ul>",
        "id": 376728876,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689784681
    },
    {
        "content": "<ul>\n<li>Do we want to shuffle repo names, making <code>mathlib4</code> be <code>mathlib</code> again? This will either<ul>\n<li>break all our links (zulip, commit message, etc) to mathlib3 issues/pr (if we move <code>mathlib</code> to <code>mathlib3</code>)</li>\n<li>break commit message links to issues, and require all open mathlib4 PRs to be re-opened (if we archive the <code>mathlib4</code> repo and move all the work back into mathlib3)</li>\n</ul>\n</li>\n</ul>",
        "id": 376728890,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689784682
    },
    {
        "content": "<p>I would definitely vote for blame pointing to the mathlib3 history. I am already missing this. I see a comment and think \"oh who wrote that -- oh darn it's annoying to find out\". As for repo renaming, I am less excited about this (for the reasons you mention).</p>",
        "id": 376739403,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689787079
    },
    {
        "content": "<p>I would prefer mathlib3 history; and archiving of mathlib4 repo (requiring reopening mathlib4 PRs) instead of renaming repos. I feel like that's an acceptable compromise to reclaim the repo name. It also means that existing mathlib3 PRs can be migrated \"easier\" (well, sort of).</p>",
        "id": 376745344,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1689788571
    },
    {
        "content": "<p>It also means we get back to a unique numbering system.</p>",
        "id": 376925718,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1689849251
    },
    {
        "content": "<p>/poll Ignoring details of the git history, what should we do about repo names on github</p>\n<ul>\n<li>Do nothing. All future development happens in mathlib3.</li>\n<li>Archive mathlib4 and move Lean 4 development back to mathlib. Transfer all issues, ask contributors to re-open PRs.</li>\n<li>Rename mathlib to mathlib3 and mathlib4 to mathlib, breaking all links to mathlib3 code.</li>\n</ul>",
        "id": 376926767,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689849464
    },
    {
        "content": "<p>Edit for visibility: <a href=\"https://github.com/leanprover-community/mathlib/wiki/Merging-github-repos-and-history\">https://github.com/leanprover-community/mathlib/wiki/Merging-github-repos-and-history</a> compares the consequences of these options.</p>\n<p>Sorry, that first option was obviously a typo!</p>",
        "id": 376927318,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689849589
    },
    {
        "content": "<p>We can ask the same question about lean4</p>",
        "id": 376927628,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689849641
    },
    {
        "content": "<p>If we want to do the second option, we should do it ASAP to minimize the number of PRs that have to be re-opened. We could do that by:</p>\n<ul>\n<li>Renaming the <code>master</code> branch of <code>mathlib</code> to <code>lean3-master</code></li>\n<li>Putting the <code>master</code> branch of <code>mathlib4</code> in the <code>mathlib</code> repo</li>\n<li>Deal with merging the history later</li>\n</ul>",
        "id": 376927915,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689849703
    },
    {
        "content": "<p>I'm not even sure it's worth merging the git histories</p>",
        "id": 376928172,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689849755
    },
    {
        "content": "<p>I really like having the new repo to give us a clean break between lean 3 and lean 4 things</p>",
        "id": 376928468,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689849812
    },
    {
        "content": "<p>I think merging the git histories probably is worthwhile, because:</p>\n<ul>\n<li>It makes a blame possible</li>\n<li>It means the github contributor stats reflect the mathlib3 effort too</li>\n</ul>",
        "id": 376928527,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689849828
    },
    {
        "content": "<p>the contrib stats are a good point, they look really weird right now</p>",
        "id": 376928788,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689849874
    },
    {
        "content": "<p>Merging the repos is less of a win; the only obvious benefit is that the mathlib3 commits with titles like \"feat: some PR (#XXXX)\"  will not end up being incorrectly linkified by github</p>",
        "id": 376928913,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689849905
    },
    {
        "content": "<p>in exchange for incorrectly linkifying all the mathlib4 PR numbers</p>",
        "id": 376929104,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689849949
    },
    {
        "content": "<p>Sorry, I mispoke: either we have the problem in my comment (if we merge histories in <code>mathlib4</code> but leave the repos alone), or the problem in your comment (if we merge the repos back into <code>mathlib</code>)</p>",
        "id": 376929301,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689849981
    },
    {
        "content": "<p>We probably want to merge histories soon, since refactors will make the blame game harder</p>",
        "id": 376929703,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689850063
    },
    {
        "content": "<p>I think the pressure is off with the merging strategy I outlined above</p>",
        "id": 376929775,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689850079
    },
    {
        "content": "<p>We can always do a merge at the port-complete tags, and then merge in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> weeks of refactors that came after that</p>",
        "id": 376929912,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689850098
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/putting.20mathlib3.20in.20the.20git.20history/near/376929301\">said</a>:</p>\n<blockquote>\n<p>Sorry, I mispoke: either we have the problem in my comment (if we merge histories in <code>mathlib4</code> but leave the repos alone), or the problem in your comment (if we merge the repos back into <code>mathlib</code>)</p>\n</blockquote>\n<p>We can of course avoid both outcomes if we're willing to rewrite history, but that seems rather disruptive</p>",
        "id": 376930300,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689850188
    },
    {
        "content": "<p>we either have the commits the same as mathlib3, or the issue numbers</p>",
        "id": 376930778,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689850288
    },
    {
        "content": "<p>I'd go for keeping the commits and let people figure out how to copy the issue numbers</p>",
        "id": 376930983,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689850326
    },
    {
        "content": "<p>Yeah, there are too many pointers at specific commits of <code>master</code>. I would like those to stay commits in the history of <code>master</code>.</p>",
        "id": 376931251,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689850388
    },
    {
        "content": "<p>I didn't follow your bit Eric. There's of course probably a third option though to throw out, which is more work, but I think fixes what I'm guessing I should have understood -- namely create some new branch in <code>mathlib4</code> (<code>main</code> or whatever), run <code>git-filter-repo</code> on mathlib and stick those commits on the new <code>main</code> (of <code>mathlib4</code>) while rewriting all the <code>#XXXX</code> links to <code>leanprover-community/mathlib3#XXXX</code>, then rename the repos (mathlib -&gt; mathlib3 + archive, mathlib4 -&gt; mathlib, maybe with transfering issues)</p>\n<p>Possibly I'm still not following all the potential problems though</p>",
        "id": 376931285,
        "sender_full_name": "Julian Berman",
        "timestamp": 1689850398
    },
    {
        "content": "<p>... or we merge the repos into <code>mathlib4</code>, and have the same problem but for mathilb4 instead of mathlib3</p>",
        "id": 376931336,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689850411
    },
    {
        "content": "<p>For which there are fewer of each</p>",
        "id": 376931432,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689850432
    },
    {
        "content": "<blockquote>\n<p>Possibly I'm still not following all the potential problems though</p>\n</blockquote>\n<p>The issue is that this changes the commit SHAs for <code>mathlib</code> commits, which as Johan says are referred to in many places</p>",
        "id": 376931991,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689850540
    },
    {
        "content": "<p>Ah the <em>commit</em> SHAs. got it.</p>",
        "id": 376932082,
        "sender_full_name": "Julian Berman",
        "timestamp": 1689850555
    },
    {
        "content": "<p>Issues can be moved between repos, I think. PRs can't, but it's easy to edit mathlib3 PR #X descriptions to include \"perhaps you want PR mathlib4#X instead?\"</p>",
        "id": 376934336,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689850950
    },
    {
        "content": "<p>Let me make a wiki page to summarize the options here</p>",
        "id": 376934528,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689850985
    },
    {
        "content": "<p>Here's a cross-reference to an older thread because it includes discussion on <code>.git-blame-ignore-revs</code>: <a href=\"#narrow/stream/113488-general/topic/mathport.20and.20git.20history\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/mathport.20and.20git.20history</a></p>",
        "id": 376936935,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689851431
    },
    {
        "content": "<p>It's a pity the automated mathport commits are squashed by bors, because ignoring just them (and not the manual fixes) would be great.</p>",
        "id": 376937359,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689851512
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/putting.20mathlib3.20in.20the.20git.20history/near/376931991\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Possibly I'm still not following all the potential problems though</p>\n</blockquote>\n<p>The issue is that this changes the commit SHAs for <code>mathlib</code> commits, which as Johan says are referred to in many places</p>\n</blockquote>\n<p>You can mention old mathlib4 SHAs in the rewritten commit message (and keep old commits somewhere, either in mathlib4 or in a mathlib3 branch)</p>",
        "id": 376939822,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689851938
    },
    {
        "content": "<p>Having two copies of every commit sounds pretty confusing to me</p>",
        "id": 376942769,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689852512
    },
    {
        "content": "<p>The \"rewritten\" commit could be a merge of the original mathlib4 commit to the main branch. Then the mathlib4 part of <code>git log --graph</code> would be a pretty ladder ðª</p>",
        "id": 376943630,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689852687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/putting.20mathlib3.20in.20the.20git.20history/near/376934528\">said</a>:</p>\n<blockquote>\n<p>Let me make a wiki page to summarize the options here</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/Merging-github-repos-and-history\">https://github.com/leanprover-community/mathlib/wiki/Merging-github-repos-and-history</a></p>",
        "id": 376945146,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689853042
    },
    {
        "content": "<p>I think it ends up convenient that we predate the <code>master</code>/<code>main</code> switch.</p>",
        "id": 376961896,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689856476
    },
    {
        "content": "<p>It should make some things easier here, right?</p>",
        "id": 376961965,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689856485
    },
    {
        "content": "<p>Old commits can be on <code>master</code>, the new history can be on <code>main</code></p>",
        "id": 376962003,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689856493
    },
    {
        "content": "<p>I think that probably makes things less confusing for option2 if we have the two branches be <code>main</code> and <code>lean3-main</code>, with no <code>master</code> in sight (I've added a remark to that effect). I don't think it adds any value to the other options.</p>",
        "id": 376964521,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689857032
    },
    {
        "content": "<p>wouldn't <code>lean3-main</code> kill any old hyperlinks?</p>",
        "id": 376966895,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689857472
    },
    {
        "content": "<p>Hyperlinks to what?</p>",
        "id": 376967495,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689857574
    },
    {
        "content": "<p>to github, although I'm realising that most github links don't link to master but usually to a specific commit</p>",
        "id": 376967910,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689857652
    },
    {
        "content": "<p>Links to (files and lines) on master are broken all the time by refactors anyway</p>",
        "id": 376968101,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689857696
    },
    {
        "content": "<p>And the port is one heck of a refactor</p>",
        "id": 376968162,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689857706
    }
]