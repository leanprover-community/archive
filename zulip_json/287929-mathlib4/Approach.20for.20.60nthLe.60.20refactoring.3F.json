[
    {
        "content": "<p>For <code>Combinatorics.Composition</code> I want to refactor <code>nthLe</code> to <code>get</code> but <code>BigOperators.sum_take_succ</code> is defined in terms of <code>nthLe</code></p>\n<p>Is the right thing to do here to rename <code>BigOperators.sum_take_succ</code> to <code>BigOperators.sum_take_succ'</code> or refactor to use <code>get</code> or to mark things in <code>Combinatorics.Composition</code> as <code>nolint</code>?</p>\n<p>(I've noticed that the <code>deprecated</code> lint does <em>not</em> fire when the deprecation is in the binding rather than the body).</p>",
        "id": 325871207,
        "sender_full_name": "Arien Malec",
        "timestamp": 1675537021
    },
    {
        "content": "<p>there might be some useful discussion about this in the old Data.List.Basic zulip thread—iirc “<code>get</code> is the new <code>nthLe</code>” and we should just transition everything to <code>get</code>, but it’s worth checking with someone who’s sure :)</p>",
        "id": 325878456,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1675542291
    },
    {
        "content": "<p>that's right &amp; that's the <code>deprecated</code> message for <code>nthLe</code> -- the question is really how far/fast to take the refactor..</p>",
        "id": 325879727,
        "sender_full_name": "Arien Malec",
        "timestamp": 1675543230
    },
    {
        "content": "<p>as it happens this was indeed addressed by Mario right at the end of the <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/Data.2EList.2EBasic\">#mathlib4 &gt; Data.List.Basic</a> thread :)</p>",
        "id": 325881991,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1675545222
    },
    {
        "content": "<p>(actually it's still a little unclear to me what to do after re-reading those messages...I'm not sure if we now have the majority of code available for the <code>nthLe</code> refactor to proceed and therefore it should, or if it's still intended to be a future refactor)</p>",
        "id": 325882489,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1675545677
    },
    {
        "content": "<p>I don't think that we should start a refactor before the porting is done (unless you want to do the refactor both in Lean 3 and Lean 4).</p>",
        "id": 325883843,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675546910
    },
    {
        "content": "<p>So, to make it clear:</p>\n<ol>\n<li>If it's easy and targeted to remove <code>nthLe</code> in favor of <code>get</code>, do it.</li>\n<li>If not, <code>nolint</code> the deprecated message with a porting note TODO</li>\n</ol>",
        "id": 325886752,
        "sender_full_name": "Arien Malec",
        "timestamp": 1675549224
    },
    {
        "content": "<p>In case <code>1</code>, leave a <code>deprecated</code> version of a lemma formulated using <code>nthLe</code> anyway.</p>",
        "id": 325888785,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675550755
    },
    {
        "content": "<p>It can call the <code>get</code> version. Also,</p>\n<ol start=\"3\">\n<li>If you're talking about a leaf file/folder, then you can migrate once the whole folder is ported.</li>\n</ol>",
        "id": 325888854,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675550805
    },
    {
        "content": "<p>The \"whole folder\" strategy is still risky if mathlib3 gains new theory in that folder.</p>",
        "id": 325890279,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675552039
    },
    {
        "content": "<p>IMHO, if the whole leaf folder is ported, then we can freeze it in mathlib3 and tell contributors to add new results to the mathlib4 version.</p>",
        "id": 325891146,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675552904
    },
    {
        "content": "<p>(of course, this is only my opinion and any freeze should be discussed with all maintainers)</p>",
        "id": 325891209,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675552937
    }
]