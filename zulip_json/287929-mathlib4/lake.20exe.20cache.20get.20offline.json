[
    {
        "content": "<p>Is it possible to make this have an offline fallback? It's sometimes nice to be able to switch between predownloaded oleans, but it seems to me it fails when fully offline because of the <code>git fetch origin</code> step:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>&gt;<span class=\"w\"> </span>git<span class=\"w\"> </span>fetch<span class=\"w\"> </span>origin<span class=\"w\">    </span><span class=\"c1\"># in directory ./lake-packages/std</span>\nerror:<span class=\"w\"> </span>stderr:\nfatal:<span class=\"w\"> </span>unable<span class=\"w\"> </span>to<span class=\"w\"> </span>access<span class=\"w\"> </span><span class=\"s1\">'https://github.com/leanprover/std4/'</span>:<span class=\"w\"> </span>Failed<span class=\"w\"> </span>to<span class=\"w\"> </span>connect<span class=\"w\"> </span>to<span class=\"w\"> </span>github.com<span class=\"w\"> </span>port<span class=\"w\"> </span><span class=\"m\">443</span><span class=\"w\"> </span>after<span class=\"w\"> </span><span class=\"m\">7790</span><span class=\"w\"> </span>ms:<span class=\"w\"> </span>Couldn<span class=\"err\">'</span>t<span class=\"w\"> </span>connect<span class=\"w\"> </span>to<span class=\"w\"> </span>server\nerror:<span class=\"w\"> </span>external<span class=\"w\"> </span><span class=\"nb\">command</span><span class=\"w\"> </span><span class=\"sb\">`</span>git<span class=\"sb\">`</span><span class=\"w\"> </span>exited<span class=\"w\"> </span>with<span class=\"w\"> </span>code<span class=\"w\"> </span><span class=\"m\">128</span>\n</code></pre></div>",
        "id": 383197117,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691571440
    },
    {
        "content": "<p>hack: point <code>origin</code> at <code>.</code> instead so that fetching is a no-op</p>",
        "id": 383197555,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691571539
    },
    {
        "content": "<p>changing that back and forth all the time would be annoying though</p>",
        "id": 383198251,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691571705
    },
    {
        "content": "<p>If the <code>ltar</code> files are already downloaded there shouldn't <code>lake exe cache unpack!</code> just work?</p>",
        "id": 383208981,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1691574013
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/blob/07944c77adc653e2f348fc03e0e0671edc69777d/Cache/Main.lean#L20\">https://github.com/leanprover-community/mathlib4/blob/07944c77adc653e2f348fc03e0e0671edc69777d/Cache/Main.lean#L20</a></p>",
        "id": 383209622,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1691574141
    },
    {
        "content": "<p>Ah perfect, I'll try that out next time I'm on the tube</p>",
        "id": 383212575,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691574776
    },
    {
        "content": "<p>Commands with exclamation mark are slower and meant to be used in case of error due to some corrupted file. <code>lake exe cache unpack</code> should do the job, not trying to decompress files that are already available and decompressed. If you notice that something is strange because some <code>olean</code> file is corrupted, then try the <code>unpack!</code> version</p>",
        "id": 383249386,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1691581693
    }
]