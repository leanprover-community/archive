[
    {
        "content": "<p>Is anyone working on <code>AlgebraicGeometry.Morphisms.RingHomProperties</code>? It has some insane <code>maxHeartbeats</code>, and it conspicuously delays the end of the build for me.</p>\n<p>Could we even consider moving it back out to a PR until someone works out what is going on?</p>",
        "id": 385595609,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692248004
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <span class=\"user-mention\" data-user-id=\"306577\">@Matthew Ballard</span> since they've been looking hard at these speed problems in the past weeks.</p>",
        "id": 385613904,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1692256986
    },
    {
        "content": "<p>Thanks, yes. From what I've been reading of their work I think no one has been directly looking at this file?</p>",
        "id": 385614290,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692257156
    },
    {
        "content": "<p>I'm away this week but don't have any speedups up my sleeve. The group cohomology files also have too many raised heartbeats</p>",
        "id": 385615882,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1692257748
    },
    {
        "content": "<p>I’m familiar with the file after helping to port it.  I started looking at why AG was so unhappy with <a href=\"https://github.com/leanprover-community/mathlib4/pull/6539\">#6539</a>. In general, many <code>rw</code> became <code>erw</code>’s during the port.</p>",
        "id": 385662684,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692274991
    },
    {
        "content": "<p>The changes to structure instance elaboration result in a more tightly packed term. Which is great when there is no further unfolding necessary during unification.</p>",
        "id": 385662880,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692275055
    },
    {
        "content": "<p>But it appears that AG as is needs to unfold and to rather large terms.</p>",
        "id": 385662974,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692275089
    },
    {
        "content": "<p>Why it needs to unfold? Especially more so than other areas.  I’m not sure. From a preliminary look at traces I’ve found some structure eta expansions not eliminated by the changes to the tool chain in <a href=\"https://github.com/leanprover-community/mathlib4/pull/6359\">#6359</a>.</p>",
        "id": 385663639,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692275345
    },
    {
        "content": "<p>But how much this contributes, I don’t know</p>",
        "id": 385663897,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692275432
    },
    {
        "content": "<p>It’s worth noting that <code>ModuleCat</code> and <code>RepresentationTheory</code> both improved overall with <a href=\"https://github.com/leanprover-community/mathlib4/pull/6539\">#6539</a></p>",
        "id": 385664060,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692275495
    },
    {
        "content": "<p>Everytime I build mathlib and get to the point of waiting on <code>RingHomProperties</code> I think of a seabird choking down a giant rock for digestion.</p>",
        "id": 385736742,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692299885
    },
    {
        "content": "<p>Pro tip: don't edit files imported by <code>RingHomProperties</code> <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> (obviously joking)</p>",
        "id": 385739893,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1692301426
    },
    {
        "content": "<p>Is it feasible to split this file for shorter build times? At least until we get a handle on its issues</p>",
        "id": 393922265,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1695990812
    },
    {
        "content": "<p>Sure, I guess a split in 2 is certainly fine.</p>",
        "id": 393935257,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1695995575
    },
    {
        "content": "<p>But it would be a bit sad to have a 1-lemma-per-file strategy...</p>",
        "id": 393935284,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1695995587
    },
    {
        "content": "<p>Would that help overall build times? Is there a lot of code that depends only on part of the file? Or would the sum of the compilation times be less than the compilation time of the sum?</p>",
        "id": 393935946,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695995786
    },
    {
        "content": "<p>Having separate files makes it a lot easier to edit something at the end of the file</p>",
        "id": 393936235,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695995887
    },
    {
        "content": "<p>That file takes ~15  minutes to build in CI. Usually ~10 minutes of which is it building alone</p>",
        "id": 393936782,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1695996063
    },
    {
        "content": "<p>I’m not sure how much can be done parallel though</p>",
        "id": 393937186,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1695996189
    },
    {
        "content": "<p>I think it's worth splitting just for the editing experience in vscode</p>",
        "id": 393937609,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695996328
    },
    {
        "content": "<p>If I have to wait 10 minutes to add a result to the bottom of the file, I am going to be much more sad than having 2 or 3 files to pick between</p>",
        "id": 393937663,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695996349
    },
    {
        "content": "<p>Our long national nightmare is <a href=\"http://speed.lean-fro.org/mathlib4/compare/2bec3b06-bb82-4e0d-9a71-185b31536525/to/8e23cb39-144e-4df4-b137-c1cee15c885a\">over</a>. Thanks <span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span>!</p>",
        "id": 397504411,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697721793
    },
    {
        "content": "<p>16.4% overall build wall-clock reduction and there's still a <code>set_option maxHeartbeats 4000000 in</code> line in the same file! That's amazing.</p>\n<p>EDIT: Now I see the build wall-clock metric is <a href=\"http://speed.lean-fro.org/mathlib4/run-detail/80711b23-5b1e-458c-864a-d990f3eccaec\">quite unstable</a>, probably due to the fact that it depends on build scheduling. Nevertheless, -3.5 trillion instructions is a lot!</p>",
        "id": 397504804,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697721926
    },
    {
        "content": "<p>Merge master now and get an extra 10-15 minutes of your life back</p>",
        "id": 397504992,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697721988
    },
    {
        "content": "<p>I am 99% sure that wall clock is accurate</p>",
        "id": 397505203,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697722080
    },
    {
        "content": "<p>It can bounce 2-3% or a lot more if there are some transient effects. We spend about 10 extra minutes just building this file alone so \"smaller\" changes (eg 3% total CPU instructions) can have huge effects</p>",
        "id": 397505641,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697722204
    },
    {
        "content": "<p>The linter was spending a monstrous amount of time (edit: and instructions!) linting that file</p>",
        "id": 397506123,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697722327
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306577\">Matthew Ballard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/RingHomProperties/near/397505203\">said</a>:</p>\n<blockquote>\n<p>I am 99% sure that wall clock is accurate</p>\n</blockquote>\n<p>I agree. I think the run prior to the one I linked was just really unlucky with scheduling (wall clock can be a lot longer than longest path if you're unlucky with scheduling), which wasn't the case with the base commit here.</p>",
        "id": 397506172,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697722342
    },
    {
        "content": "<p>So probably more like 20 minutes of your life back <span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span></p>",
        "id": 397506535,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697722459
    },
    {
        "content": "<p><a href=\"http://speed.lean-fro.org/mathlib4/run-detail/1b068583-673e-44c6-90e5-95bb851b28e2\">Run number two</a></p>",
        "id": 397509286,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697723247
    },
    {
        "content": "<p>Looks like -6 minutes in Ryzen time</p>",
        "id": 397510024,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697723430
    },
    {
        "content": "<p>Wow. An AG file is no longer the last one to finish.</p>",
        "id": 397515217,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697724822
    },
    {
        "content": "<p>Can you link to the PR?</p>",
        "id": 397516352,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697725162
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7749\">#7749</a></p>",
        "id": 397516515,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697725203
    }
]