[
    {
        "content": "<p>By default, Aesop can \"succeed\" without solving the goal. It seems like this leads to nasty universe issues when Aesop is used as an auto-param, as discussed <a href=\"#narrow/stream/287929-mathlib4/topic/Goal.20state.20not.20updating.2C.20bugs.2C.20etc.2E\">here</a>. So if you use Aesop as an auto-param, please use <code>options := { terminal := true }</code>, which makes Aesop fail if it can't solve the goal. See <a href=\"https://github.com/leanprover-community/mathlib4/pull/2527\">!4#2527</a> for an example.</p>\n<p>Currently, the error message when Aesop fails with <code>terminal := true</code> is very uninformative, but I'll fix this shortly.</p>",
        "id": 338894977,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1677688918
    },
    {
        "content": "<p>I think we should adopt a mathlib4 policy that discourages/disallows usage of <code>aesop</code> nonterminally, for the same reason that we disallow nonterminal <code>simp</code>: it makes proofs fragile. Note that <code>aesop</code> calls <code>simp</code>.</p>",
        "id": 338899372,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1677689828
    },
    {
        "content": "<p>Yes, 100%. Nonterminal <code>aesop</code> is even worse than nonterminal <code>simp</code>.</p>",
        "id": 338900676,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1677690126
    }
]