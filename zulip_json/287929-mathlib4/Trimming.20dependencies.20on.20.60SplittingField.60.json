[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"534091\">@Alain Chavarri Villarello</span> has been doing some nice work in Lean 3 that we might want to start porting to Lean 4, but it depends transitively on splitting fields. We definitely need <code>ring_theory.integrally_closed</code> which imports <code>splitting_field</code>, and probably also <code>ring_theory.ideal.norm</code>. Any objections to me splitting these files to remove the splitting field dependency?</p>",
        "id": 362778442,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1685630244
    },
    {
        "content": "<p>I am also having a look at splitting that remove dependencies on <code>splitting_field</code> (for example in <a href=\"https://github.com/leanprover-community/mathlib/pull/19130\">#19130</a>). I think they're very good, especially if they make sense mathematically.</p>",
        "id": 362782070,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685630889
    },
    {
        "content": "<p>From your \"for example\" I assume you are working on more than just <a href=\"https://github.com/leanprover-community/mathlib/pull/19130\">#19130</a>. I couldn't find any open PRs related to this, so are they already merged?</p>",
        "id": 362783165,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1685631098
    },
    {
        "content": "<p>Anyway, I'll get started with <code>integrally_closed</code> now, that certainly shouldn't know about splitting fields...</p>",
        "id": 362783514,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1685631156
    },
    {
        "content": "<p>I am porting the file for the moment, I plan to had another look at mathlib3 later.</p>",
        "id": 362784818,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685631403
    },
    {
        "content": "<p>I had a quick look at integrally closed, and the only problem is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/integral_closure.mem_lifts_of_monic_of_dvd_map\">docs#integral_closure.mem_lifts_of_monic_of_dvd_map</a></p>",
        "id": 362785011,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685631442
    },
    {
        "content": "<p>The theorem really needs <code>splitting_field</code></p>",
        "id": 362785190,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685631476
    },
    {
        "content": "<p>Mathematically  it can reasonably be moved to something about Gauss' Lemma (it is in the same spirit)</p>",
        "id": 362785444,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685631525
    },
    {
        "content": "<p>It is only used in <code>eq_map_mul_C_of_dvd</code> and that is only used in <code>gauss_lemma.lean</code>, so I propose to move those two to that file.</p>",
        "id": 362785664,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1685631563
    },
    {
        "content": "<p>Nice, this confirms my intuition that this is a \"Gauss lemma style\" result, so it can definitely be moved there.</p>",
        "id": 362786580,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685631715
    },
    {
        "content": "<p>Probably you're already further along, but this is what I was looking at a while ago: <a href=\"https://github.com/leanprover-community/mathlib/pull/new/split-split\">https://github.com/leanprover-community/mathlib/pull/new/split-split</a></p>",
        "id": 362788657,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1685632077
    },
    {
        "content": "<p>Ah, I am keeping <code>splitting_field.lean</code> intact and instead split the dependencies, so hopefully we can be parallel here :)</p>",
        "id": 362789131,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1685632162
    },
    {
        "content": "<p>Something else we can do is create a folder <code>ring_theory/root_of_unity</code> with files <code>basic</code> and <code>minpoly</code> (the current <code>ring_theory/root_of_unity</code> file is almost 1200 lines long) in such a way that <code>ring_theory/root_of_unity/basic</code> would not depend on splitting fields.</p>",
        "id": 362990047,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685699757
    },
    {
        "content": "<p>If you think it is reasonable I can do it</p>",
        "id": 362990284,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685699803
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/19144\">#19144</a></p>",
        "id": 362995105,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685700891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> <code>splitting_field</code> is still showing as having 92 <del>dependencies</del> dependents at <a href=\"https://leanprover-community.github.io/mathlib-port-status/old\">#port-status</a>; do you know if there is a second path importing <code>splitting_field</code> in most of <code>roots_of_unity</code>'s dependents, or if <a href=\"https://leanprover-community.github.io/mathlib-port-status/old\">#port-status</a> isn't updating?</p>",
        "id": 363157030,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1685737336
    },
    {
        "content": "<p><code>roots_of_unity.basic</code> should be ready to port</p>",
        "id": 363157956,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685737630
    },
    {
        "content": "<p>The rest I think really depends on splitting fileds</p>",
        "id": 363158006,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685737655
    },
    {
        "content": "<p>I don't see the 92 dependencies...</p>",
        "id": 363158675,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1685737874
    },
    {
        "content": "<p>Oooh, sorry, you meant dependents, I guess.</p>",
        "id": 363158738,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1685737900
    },
    {
        "content": "<p>\"dependents\" is what Heather meant, I guess?</p>",
        "id": 363158746,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1685737903
    },
    {
        "content": "<p>You can see here <a href=\"https://github.com/leanprover-community/mathlib-port-status/actions/workflows/pages.yml\">https://github.com/leanprover-community/mathlib-port-status/actions/workflows/pages.yml</a> that <a href=\"https://leanprover-community.github.io/mathlib-port-status/old\">#port-status</a> last updated 26 mins ago</p>",
        "id": 363158866,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1685737937
    },
    {
        "content": "<p>So the next version should start building in ~ 3 mins</p>",
        "id": 363158924,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1685737961
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trimming.20dependencies.20on.20.60SplittingField.60/near/363158006\">said</a>:</p>\n<blockquote>\n<p>The rest I think really depends on splitting fileds</p>\n</blockquote>\n<p>I see, so it's really only <code>roots_of_unity</code> and not any of its dependents which are made port-able by the split?</p>",
        "id": 363165914,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1685740241
    },
    {
        "content": "<p>For example <code>ring_theory.polynomial.cyclotomic.basic</code> now doesn't  depends on splitting fields. I am afraid this is the only one.</p>",
        "id": 363260193,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685786574
    },
    {
        "content": "<p>Also worth noting that <code>field_theory.adjoin</code> only depends on <code>is_splitting_field</code> and not the existence of a splitting field.</p>",
        "id": 363285370,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1685792935
    },
    {
        "content": "<p>Why does <code>ring_theory.polynomial.gauss_lemma</code> import <code>field_theory.splitting_field</code>?<br>\nOn its face, Gauß' lemma should not require splitting fields. (I didn't check what is actually done in the file, though.)</p>",
        "id": 363360390,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685816413
    },
    {
        "content": "<p>I suggest you look at the code; that's what anyone else would need to do to answer your question anyway</p>",
        "id": 363363648,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1685817758
    },
    {
        "content": "<p>OK; I see that the very first lemma uses the splitting field of <code>g</code> to show that if <code>g : K[X]</code> (monic) divides <code>f : R[X]</code> (monic), its coefficients are integral over <code>R</code>.  It doesn't feel necessary to use the splitting field here, but I don't have a \"better\" proof right now.</p>",
        "id": 363365805,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685818596
    },
    {
        "content": "<p>(This is the only lemma whose proof depends on splitting fields (but many other results depend on this lemma); the only other complaint I got after removing the splitting fields import can be fixed by importing <code>field_theory.minpoly.basic</code>.)</p>",
        "id": 363370918,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685820937
    },
    {
        "content": "<p>The idea of the proof seems to be to say that the roots of <code>g</code> are also roots of <code>f</code>, which are integral over <code>R</code> as witnessed by <code>f</code>, so the coefficients of <code>g</code>, which are polynomials with integral coefficients in the roots of <code>g</code>, are themselves integral over <code>R</code>.</p>",
        "id": 363372573,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685821629
    },
    {
        "content": "<p>A possible alternative route could be to show that the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\"> n </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> th coefficients of all monic divisors of degree <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\"> d </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> of <code>f</code> satisfy a polynomial whose coefficients are polynomials with integral coefficients in the coefficients of <code>f</code>, via the theory of symmetric polynomials. This may be somewhat painful, though...</p>",
        "id": 363372756,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685821730
    },
    {
        "content": "<p>(The reason I've been looking at this is that uncoupling <code>gauss_lemma</code>from <code>splitting_field</code> would open up for porting some more files on the way to <code>quadratic_reciprocity</code>. But there is still a part of the graph that depends on <code>splitting_field</code> via a different route.)</p>",
        "id": 363373089,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685821870
    },
    {
        "content": "<p>Well at some point we will need splitting fields. We should not spend a lot of time trying to avoid it, but rather to fixing it (I am still trying to understand what the problem really is, and I think it goes back to adjoin root)</p>",
        "id": 363374766,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685822701
    },
    {
        "content": "<p>Agreed. I was just wondering about this non-obvious dependence.</p>",
        "id": 363376560,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685823572
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110044\">Chris Hughes</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trimming.20dependencies.20on.20.60SplittingField.60/near/363285370\">said</a>:</p>\n<blockquote>\n<p>Also worth noting that <code>field_theory.adjoin</code> only depends on <code>is_splitting_field</code> and not the existence of a splitting field.</p>\n</blockquote>\n<p>I thought a little bit more about this observation and there is actually a split that maybe worth: we can separate <code>is_splitting_field</code> from <code>splitting_field</code>, and unblock <code>field_theory.adjoin</code>, <code>field_theory.normal</code>, <code>field_theory.fixed</code> and maybe even <code>field_theory.galois</code> (I didn't check carefully). I gave it a try in <a href=\"https://github.com/leanprover-community/mathlib/pull/19154\">#19154</a></p>",
        "id": 363467389,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685875047
    },
    {
        "content": "<p>If people think this is a sensible thing to do I can finalize the splitting (probably creating a folder <code>splitting_field</code> with files <code>is_splitting_field</code> and <code>existence</code>, or something like that)</p>",
        "id": 363467566,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685875098
    },
    {
        "content": "<p>I'd prefer <a href=\"http://splitting_field.construction\">splitting_field.construction</a></p>",
        "id": 363468432,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1685875379
    },
    {
        "content": "<p>Is there a way of seeing the dependents of a file? I see that for <code>splitting_field</code> they're 92 but I don't see a list.</p>",
        "id": 363468826,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685875509
    },
    {
        "content": "<p>Well, it's not that important, renaming <code>splitting_field</code> will force me to fix the import line</p>",
        "id": 363469043,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685875569
    },
    {
        "content": "<p>BTW, I have found a proof that shows that the coefficients of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\"> g </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> are integral over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msub><mi>f</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>f</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\"> \\mathbb{Z}[f_1,\\ldots,f_n] </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>=</mo><msup><mi>X</mi><mi>n</mi></msup><mo>+</mo><msub><mi>f</mi><mn>1</mn></msub><msup><mi>X</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>f</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\"> f = X^n + f_1 X^{n-1} + \\dots + f_n </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, without using splitting fields. (This would imply a stronger version of the lemma, without the assumption that <code>K</code> is a field.) It is, however, fairly involved and combinatorial, and so maybe it's not really worth while trying to formalize it.</p>\n<p>The idea is that when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>=</mo><msup><mi>X</mi><mi>k</mi></msup><mo>+</mo><msub><mi>g</mi><mn>1</mn></msub><msup><mi>X</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>g</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\"> g = X^k + g_1 X^{k-1} + \\dots + g_k </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9324em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0435em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> divides <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\"> f </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>, the the matrix (how to get LaTeX displays here?) whose first row is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mtext>  </mtext><msub><mi>f</mi><mn>1</mn></msub><mtext>  </mtext><msub><mi>f</mi><mn>2</mn></msub><mtext>  </mtext><mo>⋯</mo><mtext>  </mtext><msub><mi>f</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> (1 \\; f_1 \\; f_2 \\; \\cdots \\; f_n) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> and whose <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\"> n-k+1 </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> further rows are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo>⋯</mo><mn>0</mn><mtext>  </mtext><mn>1</mn><mtext>  </mtext><msub><mi>g</mi><mn>1</mn></msub><mtext>  </mtext><mo>⋯</mo><mtext>  </mtext><msub><mi>g</mi><mi>k</mi></msub><mtext>  </mtext><mn>0</mn><mo>⋯</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> (0 \\cdots 0 \\; 1 \\; g_1 \\; \\cdots \\; g_k \\; 0 \\cdots 0) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> (with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>n</mi><mo>−</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\"> 0, 1, ..., n-k </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> zeros in front) does not have full rank. Picking suitable minors, one can show that one can express all monomials of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>g</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\"> g_j </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> of degree <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\"> n-k+1 </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msub><mi>f</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>f</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\"> \\mathbb{Z}[f_1, \\ldots, f_n] </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> in terms of monomials of smaller degree...</p>",
        "id": 363469141,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685875605
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trimming.20dependencies.20on.20.60SplittingField.60/near/363467389\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110044\">Chris Hughes</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trimming.20dependencies.20on.20.60SplittingField.60/near/363285370\">said</a>:</p>\n<blockquote>\n<p>Also worth noting that <code>field_theory.adjoin</code> only depends on <code>is_splitting_field</code> and not the existence of a splitting field.</p>\n</blockquote>\n<p>I thought a little bit more about this observation and there is actually a split that maybe worth: we can separate <code>is_splitting_field</code> from <code>splitting_field</code>, and unblock <code>field_theory.adjoin</code>, <code>field_theory.normal</code>, <code>field_theory.fixed</code> and maybe even <code>field_theory.galois</code> (I didn't check carefully). I gave it a try in <a href=\"https://github.com/leanprover-community/mathlib/pull/19154\">#19154</a></p>\n</blockquote>\n<p>OK, this is not so simple, there are two declarations in <code>field_theory.normal</code> that use <code>splitting_field</code>: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normal.of_is_splitting_field\">docs#normal.of_is_splitting_field</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.splitting_field.normal\">docs#polynomial.splitting_field.normal</a>. I can probably remove the first dependency (it is used only in the proof), but of course not the second one. Maybe the simplest thing to do is to make the new file <code>field_theory.splitting_field.construction</code> import <code>field_theory.normal</code> and putting the result there.</p>",
        "id": 363471701,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685876481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"479359\">@Michael Stoll</span> click on the \"?\" under the box for writing posts to answer most questions of the form \"how do I do X in a Zulip post\". It's <code> ```math </code> in this case.</p>",
        "id": 363472397,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685876736
    },
    {
        "content": "<p>Back to the point, I guess it feels a little bit unnatural to me to separate <code>splitting_field</code> and <code>is_splitting_field</code>. Are we only proposing doing this so we can port stuff in a different order?</p>",
        "id": 363472933,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685876905
    },
    {
        "content": "<p>I am not sure it is the best thing to do, but I see two reasonable advantages:</p>\n<ul>\n<li>currently to do a lot of basic Galois theory, mathlib needs to know the existence of splitting fields. This seems to me a little unnatural, for example we cannot even say that a given (finite) field extension is normal without importing the file that construct the splitting field.</li>\n<li>All the problems of <code>splitting_fields</code> are (probably) in the construction, not in the characteristic predicate <code>is_splitting_field</code>.</li>\n</ul>\n<p>Of course the first point is not completely solved by the splitting I am proposing, since to speak about normal extensions we still need the characteristic predicate.</p>",
        "id": 363474142,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685877263
    },
    {
        "content": "<p>I have taught Galois theory by doing existence of algebraic closure on day 1 and postponing splitting fields to much later.</p>",
        "id": 363476764,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685878161
    },
    {
        "content": "<p>Currently our construction of algebraic closure depends on existence of splitting fields.</p>",
        "id": 363477340,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685878336
    },
    {
        "content": "<p>Is the problem (a) splitting fields are slow or (b) splitting field files need to be reorganised?</p>",
        "id": 363477689,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685878444
    },
    {
        "content": "<p>I will try and find some time today to work on (a).</p>",
        "id": 363477737,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685878466
    },
    {
        "content": "<p>(a) is surely more important than (b) (sooner or later we will need to address it). What I am proposing just postpone the moment all algebraic number theory is blocked by splitting fields. Note that I am against moving lemmas around just to avoid splitting fields, the point is that this particular splitting makes some sense mathematically.</p>",
        "id": 363478487,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685878746
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/19154\">#19154</a> builds locally. I <em>think</em> it unblocks a non negligible amount of files to be ported. This assuming that <code>field_theory.splitting_field.is_splitting_field</code> can be ported without troubles.</p>",
        "id": 363481322,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1685879595
    },
    {
        "content": "<p>Hm, thanks. I tried ```latex, but it produced a LaTeX code listing...<br>\n(This is in reply to <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>'s remark.)</p>",
        "id": 363491224,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685882576
    },
    {
        "content": "<p>That PR is now merged and the split files are listed in <a href=\"https://leanprover-community.github.io/mathlib-port-status/old\">#port-status</a>. But I guess we still need to wait for mathport output?</p>",
        "id": 363656787,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1685956453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trimming.20dependencies.20on.20.60SplittingField.60/near/363656787\">said</a>:</p>\n<blockquote>\n<p>That PR is now merged and the split files are listed in <a href=\"https://leanprover-community.github.io/mathlib-port-status/old\">#port-status</a>. But I guess we still need to wait for mathport output?</p>\n</blockquote>\n<p>We do, yeah</p>",
        "id": 363659985,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1685957176
    }
]