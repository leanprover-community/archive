[
    {
        "content": "<p>If I run</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.LibrarySearch</span>\n\n<span class=\"kd\">example</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">library_search</span>\n</code></pre></div>\n<p>i get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Server</span> <span class=\"n\">process</span> <span class=\"n\">for</span> <span class=\"n\">file</span><span class=\"o\">:</span><span class=\"bp\">///</span><span class=\"n\">LeanProject</span><span class=\"bp\">/</span><span class=\"n\">LeanProject.lean</span> <span class=\"n\">crashed</span><span class=\"o\">,</span> <span class=\"n\">likely</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">stack</span> <span class=\"n\">overflow</span> <span class=\"n\">or</span> <span class=\"n\">a</span> <span class=\"n\">bug.</span>\n</code></pre></div>\n<p>Is this perhaps something going wrong with the caching?</p>",
        "id": 366180580,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686748747
    },
    {
        "content": "<p>Jake Levinson was seeing exactly the same behaviour in a local VS Code earlier today.</p>",
        "id": 366334531,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686790604
    },
    {
        "content": "<p>I suspect the root cause is a broken <code>olean</code> file for the library_search cache, and when it is being <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=unpickle#src\">src4#unpickle</a> 'd something is going horribly wrong.</p>\n<p>I doubt that we can do any useful error checking at the unpickle stage, and this is something for which we need checksums in the oleans.</p>",
        "id": 366334751,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686790703
    },
    {
        "content": "<p><a href=\"#narrow/stream/270676-lean4/topic/.60library_search.60.20crash\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/.60library_search.60.20crash</a> that's the other thread.</p>\n<p><code>lake clean</code> seems to have fixed this</p>",
        "id": 366434908,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1686823788
    }
]