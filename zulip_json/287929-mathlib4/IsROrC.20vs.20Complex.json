[
    {
        "content": "<p>In case people haven't noticed, the coercion <code>ℝ → ℂ</code> is not syntactically the same as the coercion <code>ℝ → 𝕜</code> where <code>IsROrC 𝕜</code> and <code>𝕜</code> is <code>ℂ</code>. This means that lemma pairs like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Complex.ofReal_sum#doc\">docs#Complex.ofReal_sum</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsROrC.ofReal_sum#doc\">docs#IsROrC.ofReal_sum</a> are not interchangeable anymore.</p>",
        "id": 393560733,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695844275
    },
    {
        "content": "<p>I find that mildly worrying. What about you?</p>",
        "id": 393560759,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695844288
    },
    {
        "content": "<p>(the extra context here is that the lean 3 coe mechanism meant these were syntactically the same)</p>",
        "id": 393561895,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695844717
    },
    {
        "content": "<p>I don't think this is any more worrying than having two different <code>.im</code>s</p>",
        "id": 393562127,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695844808
    },
    {
        "content": "<p>Really? I had both coercions in the infoview and nothing told they were different until I clicked on them!</p>",
        "id": 393562213,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695844845
    },
    {
        "content": "<p>It's pretty easy to fix as well: Just don't define the coercion <code> ℝ→ ℂ</code>, or define it in terms of the <code>IsROrC</code> one.</p>",
        "id": 393562319,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695844884
    },
    {
        "content": "<p>The same solution could work for .re and .im</p>",
        "id": 393562498,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695844936
    },
    {
        "content": "<p>But <code>IsROrC.im</code> is visually different to <code>Complex.im</code>. I don't get your argument...</p>",
        "id": 393562769,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695845045
    },
    {
        "content": "<p>Also the same couldn't really work for <code>.re</code> and <code>.im</code> since you'd lose dot notation.</p>",
        "id": 393562853,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695845080
    },
    {
        "content": "<p>For context, I just lost 40min debugging a <code>rw</code> call that broke because of that.</p>",
        "id": 393563305,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695845278
    },
    {
        "content": "<p>Sorry, you mean the coercion the other way right? There is no coercion <code>ℂ → ℝ</code>.</p>",
        "id": 393564751,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1695845959
    },
    {
        "content": "<p>Using <code>algebraMap</code> everywhere would solve this I think</p>",
        "id": 393565470,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695846289
    },
    {
        "content": "<p>I think we started doing that in lean 3, but it got in the way of the port so we reverted it all</p>",
        "id": 393565589,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695846357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/287929-mathlib4/topic/IsROrC.20vs.20Complex/near/393564751\">said</a>:</p>\n<blockquote>\n<p>Sorry, you mean the coercion the other way right? There is no coercion <code>ℂ → ℝ</code>.</p>\n</blockquote>\n<p>Uh yeah, of course. Can you tell I'm tired? <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 393615467,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695876495
    }
]