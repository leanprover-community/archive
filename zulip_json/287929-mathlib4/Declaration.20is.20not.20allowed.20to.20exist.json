[
    {
        "content": "<p>Hello, I made a commit and the CI failed with an error mentioning a file that I didn't modify: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7213319694/job/19652944627\">https://github.com/leanprover-community/mathlib4/actions/runs/7213319694/job/19652944627</a><br>\nI modified the files <code>Mathlib/Data/Fin/Basic.lean</code>, <code>Mathlib/Combinatorics/SimpleGraph/ConcreteColorings.lean</code> and <code>Mathlib/Combinatorics/SimpleGraph/Hasse.lean</code>.<br>\nThe CI says when building <code>Mathlib/Data/Fin/Basic.lean</code>: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">./././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Multiset</span><span class=\"bp\">/</span><span class=\"n\">FinsetOps.lean</span><span class=\"o\">:</span><span class=\"mi\">286</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Declaration</span> <span class=\"n\">Set.sInter</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">allowed</span> <span class=\"n\">to</span> <span class=\"n\">exist</span> <span class=\"k\">in</span> <span class=\"n\">this</span> <span class=\"n\">file</span>\n</code></pre></div>\n<p>Does somebody know what is the error?</p>",
        "id": 408032609,
        "sender_full_name": "Iván Renison",
        "timestamp": 1702583096
    },
    {
        "content": "<p>This is CI checking the import graph has not been messed up.</p>",
        "id": 408032968,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1702583189
    },
    {
        "content": "<p>Did you modify the import graph?</p>",
        "id": 408033055,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1702583210
    },
    {
        "content": "<p>I added:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Parity</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Parity</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Init.CCLemmas</span>\n</code></pre></div>\n<p>In <code>Mathlib/Data/Fin/Basic.lean</code></p>",
        "id": 408033230,
        "sender_full_name": "Iván Renison",
        "timestamp": 1702583248
    },
    {
        "content": "<p>Yeah, that's pretty messed up in terms of imports.</p>",
        "id": 408033324,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702583268
    },
    {
        "content": "<p>You have your answer then.</p>",
        "id": 408033382,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1702583278
    },
    {
        "content": "<p>For the sake of clarity, what does \"messed up\" mean in this context? The message <code>Declaration Set.sInter is not allowed to exist in this file</code> is not very insightful</p>",
        "id": 408034324,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1702583496
    },
    {
        "content": "<p><code>Data.Fin.Basic</code> is one of the earliest files in mathlib. In comparison, <code>Data.Nat.Parity</code> imports the first part of the algebraic order hierarchy because it uses order properties of the naturals</p>",
        "id": 408034557,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702583553
    },
    {
        "content": "<p>So it's a cyclic import?</p>",
        "id": 408037144,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1702584189
    },
    {
        "content": "<p>I can delete <code>import Mathlib.Algebra.Parity</code> and <code>import Mathlib.Init.CCLemmas</code> and it still works<br>\n<code>Data.Nat.Parity</code> I used it for the following theorem:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Even_iff_even_val</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Even</span> <span class=\"n\">u</span> <span class=\"bp\">↔</span> <span class=\"n\">Even</span> <span class=\"n\">u.val</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>But I guess I have to move it to another file, right? And to what file should I move it?</p>",
        "id": 408038008,
        "sender_full_name": "Iván Renison",
        "timestamp": 1702584441
    },
    {
        "content": "<p><code>Data.Fin.Parity</code>, maybe?</p>",
        "id": 408038104,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702584478
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Declaration.20is.20not.20allowed.20to.20exist/near/408037144\">said</a>:</p>\n<blockquote>\n<p>So it's a cyclic import?</p>\n</blockquote>\n<p>Not quite, because we avoid importing <code>Fin</code> in the most basic parts of the library, including the algebraic order hierarchy.</p>",
        "id": 408038290,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702584554
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Declaration.20is.20not.20allowed.20to.20exist/near/408038104\">said</a>:</p>\n<blockquote>\n<p><code>Data.Fin.Parity</code>, maybe?</p>\n</blockquote>\n<p>Ok, I will do that</p>",
        "id": 408038487,
        "sender_full_name": "Iván Renison",
        "timestamp": 1702584634
    },
    {
        "content": "<p>Maybe I can write some other basic theorems about parity of Fin and make a separate pull request</p>",
        "id": 408038492,
        "sender_full_name": "Iván Renison",
        "timestamp": 1702584635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"646655\">Iván Renison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Declaration.20is.20not.20allowed.20to.20exist/near/408038008\">said</a>:</p>\n<blockquote>\n<p>I can delete <code>import Mathlib.Algebra.Parity</code> and <code>import Mathlib.Init.CCLemmas</code> and it still works<br>\n<code>Data.Nat.Parity</code> I used it for the following theorem:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Even_iff_even_val</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Even</span> <span class=\"n\">u</span> <span class=\"bp\">↔</span> <span class=\"n\">Even</span> <span class=\"n\">u.val</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>But I guess I have to move it to another file, right? And to what file should I move it?</p>\n</blockquote>\n<p>I think <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> already has a PR with this result</p>",
        "id": 408039754,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702585187
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8960\">#8960</a></p>",
        "id": 408040226,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702585372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"646655\">Iván Renison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Declaration.20is.20not.20allowed.20to.20exist/near/408032609\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">./././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Multiset</span><span class=\"bp\">/</span><span class=\"n\">FinsetOps.lean</span><span class=\"o\">:</span><span class=\"mi\">286</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Declaration</span> <span class=\"n\">Set.sInter</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">allowed</span> <span class=\"n\">to</span> <span class=\"n\">exist</span> <span class=\"k\">in</span> <span class=\"n\">this</span> <span class=\"n\">file</span>\n</code></pre></div>\n<p>Does somebody know what is the error?</p>\n</blockquote>\n<p>There's a comment about the purpose of the check in the file it's referencing, right before line 286. (It's <code>Data/Multiset/FinsetOps.lean</code>, not <code>Data/Fin/Basic.lean</code> by the way).</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/blob/3465d1aaae242475fad59e688648a2285031d19e/Mathlib/Data/Multiset/FinsetOps.lean#L284-L286\">https://github.com/leanprover-community/mathlib4/blob/3465d1aaae242475fad59e688648a2285031d19e/Mathlib/Data/Multiset/FinsetOps.lean#L284-L286</a></p>",
        "id": 408040681,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702585577
    },
    {
        "content": "<p>I guess someone could make <code>assert_not_exists</code> accept a docstring and have it print the docstring as an additional error message, but at least the error shows a file and line number.</p>",
        "id": 408040908,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702585680
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/9070\">#9070</a> expands on the error message that <code>assert_not_exists</code> produces, hopefully making it clearer what is going on!</p>",
        "id": 408114225,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1702617980
    }
]