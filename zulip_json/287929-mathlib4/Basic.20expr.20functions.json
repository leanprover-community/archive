[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is there any reason why <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Lean/Expr/Basic.lean\">https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Lean/Expr/Basic.lean</a> is in mathlib rather than std? It contains stuff I'd like to use in a project not depending on mathlib. I know what you think: \"what's the point of a project not depending on mathlib?\". The answer is of course the hope to use it in mathlib some day.</p>",
        "id": 353973327,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1682700201
    },
    {
        "content": "<p>I think it's mostly added by mathlib4 contributors that noticed some basic function was missing (like me) and quickly needed one. I think they should eventually go to <code>Std</code>.</p>",
        "id": 353982971,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1682701358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Is there a reason? Yes, no one put it in std. I have been mostly reactive as an std maintainer, so if you want something to go in std you have to PR it yourself (or induce someone to PR it on your behalf).</p>\n<blockquote>\n<p>I know what you think: \"what's the point of a project not depending on mathlib?\".</p>\n</blockquote>\n<p>That's what <em>you</em> think, not me. Most of the mathematical projects I can imagine being involved with (including most of my mathlib contributions) could feasibly be done with very little mathlib, and I would like to make that more feasible, not less, and std is critical for that.</p>",
        "id": 354042486,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682712453
    },
    {
        "content": "<p>I thought it was me that could be accurately caricatured as believing that. :-) I agree we should move quite a lot to Std.</p>",
        "id": 354178434,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682743508
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Most</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">mathematical</span> <span class=\"n\">projects</span> <span class=\"n\">I</span> <span class=\"n\">can</span> <span class=\"n\">imagine</span> <span class=\"n\">being</span> <span class=\"n\">involved</span> <span class=\"k\">with</span> <span class=\"o\">(</span><span class=\"n\">including</span> <span class=\"n\">most</span> <span class=\"n\">of</span> <span class=\"n\">my</span> <span class=\"n\">mathlib</span> <span class=\"n\">contributions</span><span class=\"o\">)</span> <span class=\"n\">could</span> <span class=\"n\">feasibly</span> <span class=\"n\">be</span> <span class=\"n\">done</span> <span class=\"k\">with</span> <span class=\"n\">very</span> <span class=\"n\">little</span> <span class=\"n\">mathlib</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">I</span> <span class=\"n\">would</span> <span class=\"n\">like</span> <span class=\"n\">to</span> <span class=\"n\">make</span> <span class=\"n\">that</span> <span class=\"n\">more</span> <span class=\"n\">feasible</span><span class=\"o\">,</span> <span class=\"n\">not</span> <span class=\"n\">less</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">std</span> <span class=\"n\">is</span> <span class=\"n\">critical</span> <span class=\"n\">for</span> <span class=\"n\">that.</span>\n</code></pre></div>\n<p>Which bits of mathlib will we eventually find in Std? For example, would it be things like basic data types, collections, and in general anything that an fpil person could use?</p>",
        "id": 354636226,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1682844951
    },
    {
        "content": "<p>more than that probably, but that sounds like a lower bound</p>",
        "id": 354636434,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682845013
    },
    {
        "content": "<p>A fair number of general purpose tactics need to be moved as well</p>",
        "id": 354636597,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682845078
    },
    {
        "content": "<p>stuff that makes lean generally easier to use and is not domain specific or tied to the mathlib class hierarchy could move to std</p>",
        "id": 354636724,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682845118
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Basic.20expr.20functions/near/354636597\">said</a>:</p>\n<blockquote>\n<p>A fair number of general purpose tactics need to be moved as well</p>\n</blockquote>\n<p>Thanks. I can imagine that many program/hardware verification tools wouldn't need mathlib if these things were available in std. Depending on what is being verified, mathlib would be an optional (and very useful) extra for such work.</p>",
        "id": 354638242,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1682845551
    }
]