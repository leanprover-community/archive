[
    {
        "content": "<p>Try this code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Lift</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">lift</span> <span class=\"n\">a</span> <span class=\"n\">to</span> <span class=\"n\">ℕ</span> <span class=\"n\">using</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"c1\">--trivial</span>\n</code></pre></div>\n<p>At no point does this code complain, until you close the proof fully (with <code>trivial</code>); then it throws the error. It also gives you no chance to fill in your metavariable (note that after the <code>lift</code> there is only one goal!)</p>",
        "id": 408229586,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1702662065
    },
    {
        "content": "<p>Where is the list of three missing incantations that cause all the meta errors?</p>",
        "id": 408230044,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1702662265
    },
    {
        "content": "<p>seems to be <code>withContext</code> and <code>instantiateMVars</code>, and by the names I think it's the second</p>",
        "id": 408230654,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1702662544
    },
    {
        "content": "<p>This seems like it might be a more rarely noticed fourth error: the failure to collect metavariables from the elaborated term and add them to the goal list.</p>",
        "id": 408235451,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702664498
    }
]