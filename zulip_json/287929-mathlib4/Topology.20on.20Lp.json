[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/6839\">#6839</a>, I define a <code>UniformSpace</code> structure on <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.Lp#doc\">docs#MeasureTheory.Lp</a> for all <code>p</code>. The goal is to port lemmas from <code>∀ ε &gt; 0, ∃ f, P f ∧ snorm (f - g) &lt; ε</code> to <code>Dense {f : Lp E p μ | P f}</code>, though I postpone this to a later PR.</p>",
        "id": 387775723,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693267007
    },
    {
        "content": "<p>Since <code>Lp</code> does not satisfy the triangle inequality for <code>0 &lt; p &lt; 1</code>, I had to repeat some lemmas for <code>Lp</code>.</p>",
        "id": 387776190,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693267298
    },
    {
        "content": "<p>I didn't add more typeclasses because we don't have more examples.</p>",
        "id": 387776212,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693267311
    },
    {
        "content": "<p>Mathlib doesn't know about this weaker version of metric spaces where d(x,y) &lt;= c (d(x,z)+ d(y,z)) for some constant c ?</p>",
        "id": 388040775,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1693377202
    },
    {
        "content": "<p>Correct. We don't currently have a type class for that. However, in various places, including <code>Lp</code>, we have designed things in such a way that it should be possible to easily make instances of this type class once it's defined.</p>",
        "id": 388095074,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693398518
    },
    {
        "content": "<p>With <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> we made some progress in that direction in <a href=\"https://github.com/leanprover-community/mathlib/tree/lp_p_le_one\">https://github.com/leanprover-community/mathlib/tree/lp_p_le_one</a> but this has never been pushed to <code>mathlib</code> (and never translated into Lean4).</p>",
        "id": 388118987,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1693404461
    },
    {
        "content": "<p>I'm going to add typeclasses for that. How should I call it?</p>",
        "id": 388253576,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693460365
    },
    {
        "content": "<p>The terminology I'm familiar with is quasi-metric and quasi-norm. I think the latter is unambiguous, but the former I think may have other meanings.</p>",
        "id": 388254263,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693460816
    },
    {
        "content": "<p>Indeed, Wikipedia seems to agree with my assessment. I would vote for \"quasi\" in both settings for consistency.</p>",
        "id": 388255096,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693461368
    },
    {
        "content": "<p>Should it be <code>PseudoQuasiEMetricSpace</code> or <code>QuasiPseudoEMetricSpace</code>?</p>",
        "id": 388255572,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693461640
    },
    {
        "content": "<p>Wouldn't it be more useful to give up on homogeneity but keep subadditivity? If we use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∥</mi><mi>f</mi><msub><mi mathvariant=\"normal\">∥</mi><mi>p</mi></msub><mo>=</mo><mo>∫</mo><mi mathvariant=\"normal\">∣</mi><mi>f</mi><msup><mi mathvariant=\"normal\">∣</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\Vert f\\Vert_p = \\int \\vert f\\vert^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\">∥</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord\">∥</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1111em;vertical-align:-0.3061em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">p &lt; 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> we still have a metric structure right?</p>",
        "id": 388352785,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1693496465
    },
    {
        "content": "<p>Either way works for me...</p>",
        "id": 388366448,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693499899
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> What do you think?</p>",
        "id": 388366896,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693500038
    },
    {
        "content": "<p>I don't have a well-informed opinion here. The book on F-spaces that Filippo pointed to uses the homogeneous norm, but also the distance which satisfies the triangular inequality (which is not given directly by the norm, but rather a power of it). It proves that given any quasi-distance, there exists a true distance defining the same topology.</p>",
        "id": 388368451,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1693500550
    },
    {
        "content": "<p>My only goal is to reformulate our \"dense\" lemmas in terms of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Dense#doc\">docs#Dense</a> in <code>Lp</code>.</p>",
        "id": 388368726,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693500625
    },
    {
        "content": "<p>p-Banach spaces (usual axioms for Banach space except for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>λ</mi><mi>v</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi>λ</mi><msup><mi mathvariant=\"normal\">∣</mi><mi>p</mi></msup><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>v</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">||\\lambda v||=|\\lambda|^p||v||</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">∣∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">λ</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">∣∣</span></span></span></span> ) are all over the liquid Tensor experiment.</p>",
        "id": 388380823,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1693505371
    },
    {
        "content": "<p>So, should I change the definition of <code>snorm</code>?</p>",
        "id": 388385491,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693507114
    },
    {
        "content": "<p>Yeah, I'm not sure which is preferable.</p>",
        "id": 388386320,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693507457
    },
    {
        "content": "<p>For me, it's easier to change <code>snorm</code> and reuse <code>NormedAddCommGroup</code> than to add <code>QuasiMetricSpace</code>s etc. So, unless someone tells me that <code>QuasiMetricSpace</code>s are a much better approach to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">L^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>p</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0&lt;p&lt;1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, then I'll change <code>snorm</code>.</p>",
        "id": 388386964,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693507704
    },
    {
        "content": "<p>FWIW, here's LTE's <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">ℓ</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\ell^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\">ℓ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span> as a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>-Banach space:<br>\n<a href=\"https://github.com/leanprover-community/lean-liquid/blob/master/src/pBanach/lp.lean\">https://github.com/leanprover-community/lean-liquid/blob/master/src/pBanach/lp.lean</a></p>\n<p>I haven't followed the discussion above, but just wanted to mention it, in case it's helpful at all.</p>",
        "id": 388402058,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1693514132
    },
    {
        "content": "<p>But it's a <code>p</code>-Banach space for all <code>p</code>.</p>",
        "id": 388402361,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693514261
    },
    {
        "content": "<p>Not only for <code>p &lt; 1</code>.</p>",
        "id": 388402463,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693514289
    },
    {
        "content": "<p>I mean, in that file.</p>",
        "id": 388402471,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693514296
    },
    {
        "content": "<p>BTW, is it a metric for <code>p &gt; 1</code>?</p>",
        "id": 388402487,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693514305
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean-liquid/blob/92f188bd17f34dbfefc92a83069577f708851aec/src/pBanach/lp.lean#L39\">https://github.com/leanprover-community/lean-liquid/blob/92f188bd17f34dbfefc92a83069577f708851aec/src/pBanach/lp.lean#L39</a></p>",
        "id": 388404157,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1693515138
    },
    {
        "content": "<p>Looks like we used <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nnreal.rpow_add_le_add_rpow\">docs3#nnreal.rpow_add_le_add_rpow</a> for the triangle inequality</p>",
        "id": 388404534,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1693515320
    },
    {
        "content": "<p>So, I'll use that formula for <code>0 &lt; p &lt; 1</code> and the usual formula for <code>1 ≤ p</code>.</p>",
        "id": 388408583,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1693517292
    },
    {
        "content": "<p>I am not sure all the intermediate categories (where various restrictions are made regarding the “distance”) are really worthy of introduction. However, a general lemma which can be found in Bourbaki (General Topology, chapter 9, §1) describes the functions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>X</mi><mo>×</mo><mi>X</mi><mo>→</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">;</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\"> d \\colon X \\times X \\to [0;+\\infty] </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">]</span></span></span></span> such that the preimages of the intervals <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">;</mo><mi>a</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\"> [0;a] </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">]</span></span></span></span>, for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\"> a &gt;0 </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>, generate a fundamental systems of entourages of a uniform structure. My feeling is that this lemma could be introduced, together with a name for these functions as well as a process of creation of the according uniform structure.</p>",
        "id": 388562456,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1693587172
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/VrqTvczu3LTta9lnM_dbIqUh/image.png\">image.png</a><br>\n(The exercise, in French… )</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/VrqTvczu3LTta9lnM_dbIqUh/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/VrqTvczu3LTta9lnM_dbIqUh/image.png\"></a></div>",
        "id": 388562575,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1693587217
    },
    {
        "content": "<p>and in English<br>\n<a href=\"/user_uploads/3121/GgZjIvYqFfuAJveTi0kReUV3/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/GgZjIvYqFfuAJveTi0kReUV3/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/GgZjIvYqFfuAJveTi0kReUV3/image.png\"></a></div>",
        "id": 388562772,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1693587297
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=UniformSpace.ofFun#doc\">docs#UniformSpace.ofFun</a>, but not much API for it</p>",
        "id": 388673996,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1693648433
    },
    {
        "content": "<p>Oh and it’s still too strong</p>",
        "id": 388674063,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1693648453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Topology.20on.20Lp/near/388408583\">said</a>:</p>\n<blockquote>\n<p>So, I'll use that formula for <code>0 &lt; p &lt; 1</code> and the usual formula for <code>1 ≤ p</code>.</p>\n</blockquote>\n<p>This was the approach that we took with Heather.</p>",
        "id": 389006723,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1693838552
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Topology.20on.20Lp/near/388255572\">said</a>:</p>\n<blockquote>\n<p>Should it be <code>PseudoQuasiEMetricSpace</code> or <code>QuasiPseudoEMetricSpace</code>?</p>\n</blockquote>\n<p>I have also seen the comment</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Registering</span> <span class=\"n\">this</span> <span class=\"n\">separately</span> <span class=\"n\">allows</span> <span class=\"n\">for</span> <span class=\"n\">a</span> <span class=\"n\">future</span> <span class=\"n\">emetric</span><span class=\"bp\">-</span><span class=\"n\">like</span> <span class=\"kd\">structure</span> <span class=\"n\">on</span> <span class=\"bp\">`</span><span class=\"n\">PiLp</span> <span class=\"n\">p</span> <span class=\"n\">β</span><span class=\"bp\">`</span> <span class=\"n\">for</span> <span class=\"bp\">`</span><span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"bp\">`</span>\n<span class=\"n\">satisfying</span> <span class=\"n\">a</span> <span class=\"n\">relaxed</span> <span class=\"n\">triangle</span> <span class=\"n\">inequality.</span> <span class=\"n\">The</span> <span class=\"n\">terminology</span> <span class=\"n\">for</span> <span class=\"n\">this</span> <span class=\"n\">varies</span> <span class=\"n\">throughout</span> <span class=\"n\">the</span>\n<span class=\"n\">literature</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">sometimes</span> <span class=\"n\">called</span> <span class=\"n\">a</span> <span class=\"bp\">*</span><span class=\"n\">quasi</span><span class=\"bp\">-</span><span class=\"n\">metric</span><span class=\"bp\">*</span> <span class=\"n\">or</span> <span class=\"bp\">*</span><span class=\"n\">semi</span><span class=\"bp\">-</span><span class=\"n\">metric</span><span class=\"bp\">*.</span> <span class=\"bp\">-/</span>\n</code></pre></div>\n<p>on line 127 of Mathlib/Analysis/NormedSpace/PiLp.lean</p>",
        "id": 389007651,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1693838887
    },
    {
        "content": "<p>I'm going to finally implement this change (redefine norm on <code>Lp</code> for <code>p &lt; 1</code>). I have one last question: for <code>p = 0</code>, the formula for <code>p &lt; 1</code> gives the measure of the indicator. Does it make sense to redefine <code>Lp 0</code> norm this way (currently it's just zero)?</p>",
        "id": 399830503,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1698887289
    },
    {
        "content": "<p>I mean, it gives more information about <code>f</code> than just constant zero, so unless it breaks some useful statement, I'm going to do it.</p>",
        "id": 399832398,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1698888506
    },
    {
        "content": "<p>Yes, I would do that. It would match <code>PiLp</code> and <code>lp</code> that way.</p>",
        "id": 399839289,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698892427
    },
    {
        "content": "<p>UPD: no, the formula gives <code>μ univ</code>. I'll need to override for <code>p = 0</code>.</p>",
        "id": 399846753,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1698896100
    }
]