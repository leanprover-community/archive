[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/pull/1673\">mathlib#1673</a>, I have a couple of error messages: <code>warning: expanding binder collection (y «expr ∉ » t)</code>, however the corresponding lemmas compile fine. What I am supposed to do there? Thus leave the warnings and move on? Delete the warnings and move on? Something else?</p>",
        "id": 322327646,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1674146933
    },
    {
        "content": "<p>Don't delete anything that you don't understand without leaving a porting note :-)</p>",
        "id": 322355599,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674154727
    },
    {
        "content": "<p>How far are we from geeting rid of all those <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Data/Set/Lattice.lean#L216-L235\">./././Mathport/Syntax/Translate/Expr.lean:107:6: warning: expanding binder group (i j)</a>? There are now some of the most ugly remaining porting scars.</p>",
        "id": 401014768,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699473837
    },
    {
        "content": "<p>I could remove them now</p>",
        "id": 401015054,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1699473948
    },
    {
        "content": "<p>Is the reasonnable syntax now supported?</p>",
        "id": 401015326,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699474055
    },
    {
        "content": "<p>Oh, I thought it was the comments that bothered you. No, it isn't</p>",
        "id": 401015535,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1699474146
    },
    {
        "content": "<p>Though it may not be too hard... Let's see how much this breaks</p>",
        "id": 401015923,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1699474328
    },
    {
        "content": "<p>(Pretty hard if you don't know what you're doing)</p>",
        "id": 401018000,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1699475350
    },
    {
        "content": "<p>I appreciate that you tried, but I fear this may require a <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> or a <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>.</p>",
        "id": 401018264,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699475459
    },
    {
        "content": "<p>I took a very brief look, and you need to do things like convert <code>∀ (a) (_ : a ∉ s), 1 ≤ g a</code> to <code>∀ a ∉ s, 1 ≤ g a</code>. Parentheses are not allowed for extended binders.</p>\n<p>At least some of the warnings, like for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set#doc\">docs#Set</a>.iUnion₂_congr, seem to be sort of false alarms, but there are still some parentheses to clean up (<code>⋃ (i) (j), s i j</code> to <code>⋃ i j, s i j</code>)</p>",
        "id": 401019080,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699475853
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/287929-mathlib4/topic/warning.3A.20expanding.20binder.20collection/near/401019080\">said</a>:</p>\n<blockquote>\n<p>I took a very brief look, and you need to do things like convert <code>∀ (a) (_ : a ∉ s), 1 ≤ g a</code> to <code>∀ a ∉ s, 1 ≤ g a</code>. Parentheses are not allowed for extended binders.</p>\n</blockquote>\n<p>I took care of <code>∀ a ∉ s</code> recently.</p>\n<blockquote>\n<p>At least some of the warnings, like for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set#doc\">docs#Set</a>.iUnion₂_congr, seem to be sort of false alarms, but there are still some parentheses to clean up (<code>⋃ (i) (j), s i j</code> to <code>⋃ i j, s i j</code>)</p>\n</blockquote>\n<p>Yes, those are the remaining issues.</p>",
        "id": 401019595,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699476077
    },
    {
        "content": "<p><code>⋃ i j, s i j</code> simply doesn't work.</p>",
        "id": 401019759,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699476147
    },
    {
        "content": "<p>Oh right, I forgot about this limitation. With the experimental <a href=\"https://github.com/leanprover-community/mathlib4/pull/7227\">#7227</a> it would work.</p>",
        "id": 401020351,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699476444
    },
    {
        "content": "<p>But it is marked as WIP and doesn't build <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 401020705,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699476615
    },
    {
        "content": "<p>It seems only tests do not build. Maybe those tests need to be updated?</p>",
        "id": 401020793,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699476660
    },
    {
        "content": "<p>I'm still working on it (and the non-building is some tests)</p>",
        "id": 401020819,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699476671
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7227\">#7227</a> has lots of cool stuff, but I'm a bit unhappy about the fact that the <code>∈</code> is now being used in a place where it is not literally syntax for <code>Membership.mem</code>, even though morally it sort of is.</p>",
        "id": 401030957,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699481034
    }
]