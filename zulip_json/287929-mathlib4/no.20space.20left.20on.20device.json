[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/5185396528/jobs/9345272031\">https://github.com/leanprover-community/mathlib4/actions/runs/5185396528/jobs/9345272031</a> is this a result of us switching to the Hoskinson machines?</p>",
        "id": 363900759,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686033495
    },
    {
        "content": "<p>they should have plenty space, I think</p>",
        "id": 363900957,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686033563
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span></p>",
        "id": 363900977,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686033572
    },
    {
        "content": "<p>yeah, I triggered re-run twice and got the same error back</p>",
        "id": 363901159,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686033611
    },
    {
        "content": "<p>It's failing for <strong>every</strong> build now</p>",
        "id": 363901893,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686033862
    },
    {
        "content": "<p>It really has to be an OOM on the Hoskinson machines</p>",
        "id": 363902299,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686034036
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span></p>",
        "id": 363902548,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686034118
    },
    {
        "content": "<p>We will need to add <code>rm -rf ~/.cache/mathlib</code> in the appropriate place in CI. We already do this for mathport CI. We only recently moved to running mathlib4 PRs on the Hoskinson machines.</p>",
        "id": 363904959,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686034930
    },
    {
        "content": "<p>I wonder if we couldn't have faster builds if we use a smarter eviction policy like deleting the oldest things until what remains is under X MB</p>",
        "id": 363905580,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686035108
    },
    {
        "content": "<p>I'm probably out for a little while, but if someone wants to add this line to .github/workflows/build.yml.in and run <a href=\"http://mk_build_yml.sh\">mk_build_yml.sh</a> there, I can merge.</p>",
        "id": 363905619,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686035122
    },
    {
        "content": "<p>this could also be a command line arg for <code>cache get</code></p>",
        "id": 363905858,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686035186
    },
    {
        "content": "<p>where should <code>rm -rf ~/.cache/mathlib</code> be added in <a href=\"http://build.yml.in\">build.yml.in</a>?</p>",
        "id": 363923921,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686040029
    },
    {
        "content": "<p>here or not?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">build</span><span class=\"o\">:</span>\n    <span class=\"k\">if</span><span class=\"o\">:</span> <span class=\"n\">github.repository</span> <span class=\"n\">MAIN_OR_FORK</span> <span class=\"bp\">'</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4'</span>\n    <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">BuildJOB_NAME</span>\n    <span class=\"n\">runs</span><span class=\"bp\">-</span><span class=\"n\">on</span><span class=\"o\">:</span> <span class=\"n\">RUNS_ON</span>\n    <span class=\"n\">steps</span><span class=\"o\">:</span>\n      <span class=\"bp\">-</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">cleanup</span>\n        <span class=\"n\">run</span><span class=\"o\">:</span> <span class=\"bp\">|</span>\n          <span class=\"n\">find</span> <span class=\"bp\">.</span> <span class=\"bp\">-</span><span class=\"n\">name</span> <span class=\"bp\">.</span> <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"bp\">-</span><span class=\"n\">prune</span> <span class=\"bp\">-</span><span class=\"n\">exec</span> <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"c1\">-- {} +</span>\n          <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"bp\">~/.</span><span class=\"n\">cache</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n</code></pre></div>",
        "id": 363926608,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686040568
    },
    {
        "content": "<p>I pushed that to <a href=\"https://github.com/leanprover-community/mathlib4/pull/4721\">!4#4721</a>, still didn't work</p>",
        "id": 363942078,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686044478
    },
    {
        "content": "<p>I am trying to summon the relevant people with shell access.</p>",
        "id": 363944562,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686045082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598052\">@Jeremy Tan</span>, in the meantime could you revert 18b622df767cc9ef272454f416192a53e52a41e4 on your PR and see if that succeeds? If should move CI back to the github runners in the meantime.</p>",
        "id": 363945090,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686045188
    },
    {
        "content": "<p>Looks good.</p>",
        "id": 363946116,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686045445
    },
    {
        "content": "<p>build job is now running at <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/5187158004/jobs/9349183280?pr=4721\">https://github.com/leanprover-community/mathlib4/actions/runs/5187158004/jobs/9349183280?pr=4721</a></p>",
        "id": 363946183,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686045464
    },
    {
        "content": "<p>Okay, I will make a PR reverting 18b622df767cc9ef272454f416192a53e52a41e4  for now, I guess.</p>",
        "id": 363946407,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686045537
    },
    {
        "content": "<p>Can we insta-merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/4726\">!4#4726</a>?</p>",
        "id": 363946969,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686045671
    },
    {
        "content": "<p>Or you can just merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/4721\">!4#4721</a> instead, which incorporates the same revert</p>",
        "id": 363947171,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686045722
    },
    {
        "content": "<p>I've edited the description on my PR to indicate this</p>",
        "id": 363947839,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686045887
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598052\">@Jeremy Tan</span>, no, it's better we leave a clean paper trail here. :-)</p>",
        "id": 363948374,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686046010
    },
    {
        "content": "<p>In any case, I broke protocol and merged <a href=\"https://github.com/leanprover-community/mathlib4/pull/4726\">!4#4726</a> myself. Hopefully I'm not making anything worse. :-)</p>\n<p>If we see more build failures because of out of space issues, you can either merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/4726\">!4#4726</a> directly into it, or wait until it lands on master and merge that.</p>",
        "id": 363948928,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686046117
    },
    {
        "content": "<p>Ugh, the bors step is still partially running on hoskinson machines...</p>",
        "id": 363949415,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686046230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> properly insta-merged it without even using bors. Thanks! :-)</p>",
        "id": 363950124,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686046412
    },
    {
        "content": "<p>I think however no bors jobs are going to succeed with the current setup... I think I should make another PR to remove bors from hoskinson too.</p>",
        "id": 363950456,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686046497
    },
    {
        "content": "<p>I merged master into <a href=\"https://github.com/leanprover-community/mathlib4/pull/4721\">!4#4721</a> and it's working</p>",
        "id": 363950649,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686046557
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <span class=\"user-mention\" data-user-id=\"598052\">@Jeremy Tan</span> what is the status now? Can I <code>bors merge</code> some PRs again? Or should I wait a bit?</p>",
        "id": 363958323,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686048538
    },
    {
        "content": "<p>I think we're all working again now.</p>",
        "id": 363958874,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686048682
    },
    {
        "content": "<p>great, let's see what bors does!</p>",
        "id": 363958978,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686048716
    },
    {
        "content": "<p>(But temporarily not on Hoskinson until we get those cleaned up, and then merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/4728\">!4#4728</a>.)</p>",
        "id": 363959069,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686048736
    },
    {
        "content": "<p>Does the lack of Hoskinsin runners mean mathlib3 is stalled for now?</p>",
        "id": 363959847,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686048943
    },
    {
        "content": "<p>Probably. :-(</p>",
        "id": 363960130,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686049008
    },
    {
        "content": "<p>Did you mean \"more stalled\"? :)</p>",
        "id": 363964983,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1686050120
    },
    {
        "content": "<p>this is affecting <code>mathlib3</code> too, yes</p>",
        "id": 363977249,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1686052692
    },
    {
        "content": "<p>I get \"no space left on device\" in <a href=\"https://github.com/leanprover-community/mathlib4/pull/4695\">!4#4695</a></p>",
        "id": 364031622,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686064034
    },
    {
        "content": "<p>It's fixed now <span aria-label=\"ok\" class=\"emoji emoji-1f44c\" role=\"img\" title=\"ok\">:ok:</span></p>",
        "id": 364036708,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1686065027
    },
    {
        "content": "<p>Okay, the Hoskinson machines have been manually cleaned up, and <a href=\"https://github.com/leanprover-community/mathlib4/pull/4728\">!4#4728</a> now passes CI, running again on the Hoskinson machines, and using <code>lake exe cache clean!</code> on every run to avoid the cache growing unboundedly.</p>\n<p>If someone could take a look at that and then merge, that would be great.</p>\n<p>Ideally we would have a <code>lake exe cache clean-old</code>, that just removes older files from the cache, so we could avoid redownloading everything each cycle, but keep the cache bounded.</p>",
        "id": 364127323,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686090850
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> how do you qualify \"old\"? There's already <code>lake exe cache clean</code></p>",
        "id": 364129377,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1686091885
    },
    {
        "content": "<p>Hmm, okay, does that just delete everything not relevant for the currently open branch?</p>",
        "id": 364129523,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686091943
    },
    {
        "content": "<p>I guess I saw that and didn't immediately understand what \"non-linked\" meant, to dismissed it too quickly.</p>",
        "id": 364129565,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686091966
    },
    {
        "content": "<p>I guess the ideal would be \"keep anything relevant to the current branch and/or current master\".</p>",
        "id": 364129664,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686092020
    },
    {
        "content": "<p>linked means that <code>get</code> would have tried to download it</p>",
        "id": 364130243,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686092341
    },
    {
        "content": "<p>the variant I was thinking of implementing was <code>clean-old --size=1G</code> would delete non-linked files from oldest to newest until the size of the cache drops below 1G</p>",
        "id": 364130468,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686092451
    },
    {
        "content": "<p>Okay <a href=\"https://github.com/leanprover-community/mathlib4/pull/4728\">!4#4728</a> now uses <code>lake exe cache clean</code> rather than <code>lake exe cache clean!</code>.</p>",
        "id": 364130797,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686092584
    },
    {
        "content": "<p>alternatively, it can be an option to <code>get</code> as in <code>get --purge-old=1G</code> which would determine the linked files, clean up everything else per the above cache policy, then download missing files. The main advantage being that it wouldn't require headroom for an additional copy of the cache compared to downloading and then purging</p>",
        "id": 364130951,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686092661
    },
    {
        "content": "<p>That leaves you in a mess if your network cuts out</p>",
        "id": 364131632,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686093058
    },
    {
        "content": "<p>Which doesn't matter for CI, but sounds annoying for humans</p>",
        "id": 364131668,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686093073
    },
    {
        "content": "<p>Oh nevermind, \"determine your linked files\" means \"salvage the parts that are useful\" I guess</p>",
        "id": 364131727,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686093117
    },
    {
        "content": "<p>actually another difference with <code>get --purge</code> would be that the cache size hovers a bit above the specified value since the missing files are not accounted for in the 1G limit (we don't know how big they are until we download them)</p>",
        "id": 364131926,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686093202
    },
    {
        "content": "<p>actually I guess that is equivalent to running <code>clean-old</code> prior to <code>get</code></p>",
        "id": 364132107,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686093307
    }
]