[
    {
        "content": "<p>I just came across <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.Partition.decidableEqParition#doc\">docs#Nat.Partition.decidableEqParition</a> which is a decidable instance that can't reduce. I'm making a PR right now to fix it (and in Lean 3 this instance could be generated automatically, see <a href=\"#narrow/stream/270676-lean4/topic/deriving.20DecidableEq.20fails.20with.20implicit.20argument\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/deriving.20DecidableEq.20fails.20with.20implicit.20argument</a>), but is it possible to automatically lint or check for such instances?</p>",
        "id": 403041461,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1700419435
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.Partition.decidableEqParition#doc\">docs#Nat.Partition.decidableEqParition</a></p>",
        "id": 403042242,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700419926
    },
    {
        "content": "<p>Maybe it's time for a spelling linter too</p>",
        "id": 403042251,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700419935
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Linting.20for.20bad.20instances/near/403042242\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.Partition.decidableEqParition#doc\">docs#Nat.Partition.decidableEqParition</a></p>\n</blockquote>\n<p>Oops, thanks, I'm still used to the mathlib3 docs search where it automatically figures this out! Edited.</p>",
        "id": 403042566,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1700420131
    }
]