[
    {
        "content": "<p>The other thing we might want to do is delete lemmas like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Submodule.span_induction#doc\">docs#Submodule.span_induction</a>, as only the primed versions work with the induction keyword</p>",
        "id": 378947916,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690406208
    },
    {
        "content": "<p>Why would we delete them? Those lemmas are surely useful.</p>",
        "id": 378948490,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1690406412
    },
    {
        "content": "<p>In fact, I bet they are likely the version used more often.</p>",
        "id": 378948561,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1690406440
    },
    {
        "content": "<p>Only because in Lean3 neither version worked with induction (and the primed ones came much later)</p>",
        "id": 378950265,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690406994
    },
    {
        "content": "<p>My claims are:</p>\n<ul>\n<li>Now that we _can_ use <code>induction x using foo</code>, we should prefer it over <code>refine foo x _ (fun _ _ _=&gt; _) _ _ _</code></li>\n<li>The primed versions are strictly more general (syntactically) than the unprimed ones</li>\n<li>Only the primed versions work with <code>induction</code>, so with the spelling preference above there would never be a reason to use the unprimed ones</li>\n</ul>",
        "id": 378950503,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690407081
    },
    {
        "content": "<p>Except that if you have an unbundled <code>x</code> and a hypothesis <code>hx : x ∈ ...</code>, then you have to first <code>lift x to ... using hx</code>, right? Or does it just work as <code>induction ⟨x, hx⟩ using foo</code> (I suspect not)?</p>",
        "id": 378951087,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1690407313
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Submodule.span_induction%27#doc\">docs#Submodule.span_induction'</a> doesn't take a subtype, but I think there are a few stray primed induction principles that do but shouldn't</p>",
        "id": 378952632,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690407957
    },
    {
        "content": "<p>I think you can just write <code>induction hx using foo</code> or maybe <code>induction x, hx using foo</code></p>",
        "id": 378952703,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690407972
    },
    {
        "content": "<p>(I think whether you need <code>x,</code> depends on whether it was explicit in the induction principle)</p>",
        "id": 378952755,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690407995
    },
    {
        "content": "<p>9 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/Linter.20idea.3A.20.02klzzwxh.3A0000.03.20hypotheses.20in.20induction\">#mathlib4 &gt; Linter idea: <code>h1 h2</code> hypotheses in induction</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 378952875,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690408044
    },
    {
        "content": "<p>oops, sorry! I didn't actually click on the docs link because I assumed I knew what it said! In that case I don't see any reason to preserve the unprimed versions.</p>",
        "id": 378956489,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1690409463
    },
    {
        "content": "<p>Your comment was still helpful, it reminded me that there <em>are</em> some lemmas stated the way you expected</p>",
        "id": 378957767,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690410104
    },
    {
        "content": "<p>And yours was too, as I have a PR which adds the wrong version of some primed lemmas! <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 378959849,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1690410964
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> do the correctly stated primed versions need <code>@[elab_as_elim]</code>?</p>",
        "id": 379599638,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1690568309
    },
    {
        "content": "<p>Yes, but that's not sufficient to verify that they work unfortunately</p>",
        "id": 379600194,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690568443
    }
]