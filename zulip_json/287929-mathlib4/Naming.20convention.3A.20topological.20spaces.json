[
    {
        "content": "<p>What's the preferred naming convention for topological spaces? Currently, I mostly see Greek letters <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span>. From math textbooks, I'm much more used to letters <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> etc.</p>\n<p>Per the <a href=\"https://leanprover-community.github.io/contribute/style.html\">style guide</a>, one may think the latter is preferred and the former mostly pre-existing/local consistency/inertia. Maybe this is wrong. Let me know what you think!</p>",
        "id": 395768481,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696889028
    },
    {
        "content": "<p>Greek letters come from the antiquity of Mathlib. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> are now preferred.</p>",
        "id": 395769893,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1696889933
    },
    {
        "content": "<p>Greek letters were the preferred naming convention for <em>everything</em> in 2017 :-) but we complained enough and they changed the convention :-)</p>",
        "id": 395773583,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696892995
    },
    {
        "content": "<p>I'd claim they're still preferred for plain types with no typeclasses?</p>",
        "id": 395773680,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696893061
    },
    {
        "content": "<p>(as that's what <a href=\"https://leanprover-community.github.io/contribute/naming.html#variable-conventions\">https://leanprover-community.github.io/contribute/naming.html#variable-conventions</a> implies)</p>",
        "id": 395773713,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696893102
    },
    {
        "content": "<p>(though frankly I don't think that section aligns very well with mathlib; I can't remember the last time <code>i j k</code> were integers)</p>",
        "id": 395773805,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696893161
    },
    {
        "content": "<p>Thanks for the clarification. First two PRs sent as <a href=\"https://github.com/leanprover-community/mathlib4/pull/7587\">#7587</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/7589\">#7589</a>.</p>",
        "id": 395775298,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696894428
    },
    {
        "content": "<p>Greek letters are still very much preferred for many things, Patrick <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 395817995,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696920489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Citation needed. I think some people adapted to the old convention. But I don't know of any informal-maths reference text that uses <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo separator=\"true\">,</mo><mi>β</mi><mo separator=\"true\">,</mo><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha, \\beta, \\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> for \"universal sets\" or types. Not in topology, not in order theory, not in algebra, etc...</p>",
        "id": 395821366,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1696922183
    },
    {
        "content": "<p>Okay here's a concrete example where the \"old\" convention would be better: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddChar#doc\">docs#AddChar</a></p>",
        "id": 395821458,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696922238
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> writes that \"the definition works for <code>R</code> an additive commutative monoid and <code>R'</code> a commutative monoid, but we will soon restrict to them being rings\". Hence the name of the variables.</p>",
        "id": 395821633,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696922314
    },
    {
        "content": "<p>That looks like a fine convention to me. Are you saying that alpha is better?</p>",
        "id": 395821762,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696922381
    },
    {
        "content": "<p>The only uses of AddChar in the wild have commrings as source and target</p>",
        "id": 395821854,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696922412
    },
    {
        "content": "<p>However, in LeanAPAP, we use <code>AddChar</code> for <code>R</code> an additive group and <code>R'</code> a ring. Which would warrant <code>AddChar G R</code> rather than <code>AddChar R R'</code>. So now I'm faced with either having <code>R</code> standing for a group, or with dully renaming all the variables in the file. If we had used <code>α</code>, <code>β</code> from the onset, I wouldn't need such a stupid diff.</p>",
        "id": 395821950,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696922462
    },
    {
        "content": "<p>Alpha would still be worse because then nobody has a clue what's going on</p>",
        "id": 395822035,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696922515
    },
    {
        "content": "<p>As someone who learned informal maths way before any formalized one, it took some time to get adjusted to greek letters for type.  I find it an acceptable convention now, if you do not want to convey any expectation on the type, but I do not think that I ever saw it in informal maths.</p>",
        "id": 395822243,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696922597
    },
    {
        "content": "<p>Also <code>α</code> is a great convention in combinatorics where everybody write <span class=\"tex-error\">$$X ⊂ 2^[[n]}$$</span> and you certainly don't want a type called <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span> (nor <code>Fin n</code> since that would be ordered and work badly with induction).</p>",
        "id": 395822470,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696922699
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395821950\">said</a>:</p>\n<blockquote>\n<p>However, in LeanAPAP, we use <code>AddChar</code> for <code>R</code> an additive group and <code>R'</code> a ring. Which would warrant <code>AddChar G R</code> rather than <code>AddChar R R'</code>. So now I'm faced with either having <code>R</code> standing for a group, or with dully renaming all the variables in the file. If we had used <code>α</code>, <code>β</code> from the onset, I wouldn't need such a stupid diff.</p>\n</blockquote>\n<p>I think renaming the variables is the correct move (-; I'm aware that this is a matter of taste. But I'd argue that these variable names carry semantic value. Similarly, it would be really confusing if we started doing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span>-<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>δ</mi></mrow><annotation encoding=\"application/x-tex\">\\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span></span></span></span>-proofs with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x,y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>, just because \"that's what real numbers are always called\".</p>",
        "id": 395823833,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1696923330
    },
    {
        "content": "<p>So really, while I understand your frustration, I don't think that \"renaming variables diff\" would be \"stupid\". Because it demonstrates that we learned that <code>AddChar</code> is used in more general contexts, and hence Stoll's documentation also can be updated. We learned something!</p>",
        "id": 395824012,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1696923404
    },
    {
        "content": "<p>Why not use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> ? Because this is nicely ambiguous -- could be an additive abelian group, could be a ring.</p>",
        "id": 395835665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696927771
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395821458\">said</a>:</p>\n<blockquote>\n<p>Okay here's a concrete example where the \"old\" convention would be better: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddChar#doc\">docs#AddChar</a></p>\n</blockquote>\n<p>I'm to blame for that. They used to be rings... <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span><br>\n(OK; I now see that Yaël has already mentioned this -- I should remember reading the thread to the end before replying...)</p>",
        "id": 395841510,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1696929841
    },
    {
        "content": "<p>I mean, sure, if you are to merge the PR that renames the variables.</p>",
        "id": 395846499,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696931616
    },
    {
        "content": "<p>If such a PR exists, I apologize for missing it. Can you please give me a pointer?</p>",
        "id": 395860931,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1696936953
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"634338\">Michael Rothgang</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395775298\">said</a>:</p>\n<blockquote>\n<p>Thanks for the clarification. First two PRs sent as <a href=\"https://github.com/leanprover-community/mathlib4/pull/7587\">#7587</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/7589\">#7589</a>.</p>\n</blockquote>\n<p>After merging master, now <a href=\"https://github.com/leanprover-community/mathlib4/pull/7587\">#7587</a> fails to build - I'm rather puzzled by the error. Help welcome &amp;appreciated.</p>",
        "id": 395870626,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696940385
    },
    {
        "content": "<blockquote>\n<p>After merging master, now <a href=\"https://github.com/leanprover-community/mathlib4/pull/7587\">#7587</a> fails to build - I'm rather puzzled by the error. Help welcome &amp;appreciated.<br>\nThanks for the help with fixing this.</p>\n</blockquote>\n<p>Can somebody re-bors this PR, please? I had pushed to it after it was r+-ed, to fix a conflict that was not visible to git. Apparently, it's fallen through the cracks now.</p>",
        "id": 396077216,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1697026898
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7591\">#7591</a> is the third PR along these lines.</p>",
        "id": 396079031,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1697027539
    }
]