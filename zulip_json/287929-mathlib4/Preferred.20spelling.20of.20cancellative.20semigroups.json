[
    {
        "content": "<p>We currently have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LeftCancelSemigroup#doc\">docs#LeftCancelSemigroup</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=RightCancelSemigroup#doc\">docs#RightCancelSemigroup</a>, which extend <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Semigroup#doc\">docs#Semigroup</a>.<br>\nWe do not have a <code>CancelSemigroup</code> that extends both.</p>\n<p>We do however have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsCancelMul#doc\">docs#IsCancelMul</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsLeftCancelMul#doc\">docs#IsLeftCancelMul</a>,and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsRightCancelMul#doc\">docs#IsRightCancelMul</a>, which are mixins (and so also work for magmas and for semirings)</p>",
        "id": 402284870,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700066357
    },
    {
        "content": "<p>/poll Which of the following is preferable?</p>\n<ul>\n<li>Write <code>[CancelSemigroup S]</code>, after defining a new <code>CancelSemigroup</code> class and all the boilerplate</li>\n<li>Write <code>[Semigroup S] [IsCancelMul S]</code></li>\n<li>Write <code>[Semigroup S] [IsCancelMul S]</code> and delete the existing (Left|Right)Cancel versions in favor of <code>[Semigroup S] [IsLeftCancelMul S]</code> etc</li>\n</ul>",
        "id": 402285195,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700066448
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>, who has already written all the boilerplate for the first option</p>",
        "id": 402285369,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700066502
    },
    {
        "content": "<p>I created <a href=\"https://github.com/leanprover-community/mathlib4/pull/8428\">#8428</a>, which generalizes the existing lemmas about <code>LeftCancelSemigroup</code> to <code>IsLeftCancelMul</code></p>",
        "id": 402289712,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700067787
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8429\">#8429</a> contains the result where I have to use a hack to juggle between the two spellings.</p>",
        "id": 402290075,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1700067892
    },
    {
        "content": "<p>I voted for the last option. I don't think it will matter much, but we should benchmark any PR implementing that option.</p>",
        "id": 402360102,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1700098187
    },
    {
        "content": "<p>It would be great if someone could take a look at <a href=\"https://github.com/leanprover-community/mathlib4/pull/8428\">#8428</a> which is a prerequisite for the last option, and for Yael's work</p>",
        "id": 403768093,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700738113
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8748\">#8748</a> is one step closer towards the last poll option</p>",
        "id": 405151360,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701360876
    }
]