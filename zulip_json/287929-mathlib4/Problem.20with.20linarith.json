[
    {
        "content": "<p>This example works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n</code></pre></div>\n<p>This one doesn't:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommMonoid</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n</code></pre></div>\n<p>The error message is \"\"failed to synthesize AddGroup R\".  I guess linarith is trying to figure out how to make use of <code>h2</code>, and it can't figure it out.  Shouldn't it be smart enough to throw away hypotheses that it doesn't know how to make use of?</p>",
        "id": 341841404,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1678810078
    },
    {
        "content": "<p>Maybe not very helpful but I'm pretty sure this has been discussed here before--try searching for <code>linarith</code>?</p>",
        "id": 341841742,
        "sender_full_name": "Reid Barton",
        "timestamp": 1678810150
    },
    {
        "content": "<p>It's <a href=\"#narrow/stream/287929-mathlib4/topic/linarith.20and.20ENNReal/near/339379541\">this thread</a></p>",
        "id": 341846284,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1678811168
    },
    {
        "content": "<p>Yes, that looks like the same bug.  And apparently a fix is already in the works.  Thanks.</p>",
        "id": 341872311,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1678817590
    }
]