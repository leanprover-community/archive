[
    {
        "content": "<p>I do not know the exact difference between <code>Type _</code> and <code>Type*</code>, but it seems that <a href=\"https://github.com/leanprover-community/mathlib4/pull/6499\">#6499</a> broke the universe polymorphic properties of some definitions/lemmas, e.g. <code>CategoryTheory.Localization.Construction.lift</code> at <a href=\"https://github.com/leanprover-community/mathlib4/blob/3d6112b5c7d095d3088b359c611a5a2704c5dbdc/Mathlib/CategoryTheory/Localization/Construction.lean#L165\">https://github.com/leanprover-community/mathlib4/blob/3d6112b5c7d095d3088b359c611a5a2704c5dbdc/Mathlib/CategoryTheory/Localization/Construction.lean#L165</a> which now depends of three universes only although it should depend of four (there are two arbitrary categories involved).<br>\nI am not sure what it is the best way to investigate how many similar issues may have appeared?</p>",
        "id": 384284680,
        "sender_full_name": "Joël Riou",
        "timestamp": 1691851654
    },
    {
        "content": "<p>I'm confused. Isn't that the opposite of what should have happened? Because <code>Type*</code> introduces a new universe variable for every invocation?</p>",
        "id": 384292244,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691853273
    },
    {
        "content": "<p>I think we need to explicitly specify universes in the category theory library</p>",
        "id": 384292886,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1691853449
    },
    {
        "content": "<p>There is probably some construction somewhere which unifies universes of the category theory instances with something more specialized than it needs to be.</p>",
        "id": 384293072,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1691853485
    },
    {
        "content": "<p>Long story short, I think we need to avoid </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Category</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>And instead write </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">universe</span> <span class=\"n\">v</span> <span class=\"n\">u</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 384293526,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1691853596
    },
    {
        "content": "<p>If someone wants to write a <code>Category*</code> elaborator, that could also work ;)</p>",
        "id": 384293846,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1691853674
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Localization.Construction.lift#doc\">docs#CategoryTheory.Localization.Construction.lift</a></p>",
        "id": 384311808,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691858243
    },
    {
        "content": "<p>Should we add <code>pp_with_univ</code> to Category so that that's actually visible in the docs?</p>",
        "id": 384312053,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691858331
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6550\">#6550</a></p>",
        "id": 384350886,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691874856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>, this is printing with a surprising amount of whitespace in the docs:</p>\n<p><a href=\"/user_uploads/3121/UGLk-KdthGSlNsxZoV3wp7M_/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/UGLk-KdthGSlNsxZoV3wp7M_/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/UGLk-KdthGSlNsxZoV3wp7M_/image.png\"></a></div>",
        "id": 386153692,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692487760
    },
    {
        "content": "<p>That looks quite funky indeed, can you open an issue about it?</p>",
        "id": 386153777,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1692487816
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6685\">#6685</a> fixes the titular problem in that one file.</p>",
        "id": 386154609,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692488678
    }
]