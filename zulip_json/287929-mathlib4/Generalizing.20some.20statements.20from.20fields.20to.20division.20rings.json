[
    {
        "content": "<p>Hi all, for my projective space/grassmannian project over division rings, I needed the fact that a linear map whose source is a finite-dimensional vector space is automatically continuous. This result is in mathlib for a <code>NontriviallyNormedField</code> that is complete, it's called <code>LinearMap.continuous_of_finiteDimensional</code>. I wanted to have it for a complete nontrivially normed division ring (such as the Hamiltonian quaternions), without assuming that this division ring is finite-dimensional over its center (which is true in my example, but I don't know how far from true it is in general).<br>\nThis is not in mathlib for not much is needed to have it. I had fun modifying my own local copy of mathlib to make it happen, the result is there:<br>\n<a href=\"https://github.com/smorel394/JeCasseTout\">https://github.com/smorel394/JeCasseTout</a><br>\nI changed 3 files:</p>\n<ul>\n<li>Analysis.Normed.Field.Basic.lean</li>\n<li>Analysis.LocallyConvex.BalancedCoreHull.lean</li>\n<li>Topology.Algebra.Module.FiniteDimension.lean</li>\n</ul>\n<p>The biggest changes are in the first one, I defined a <code>NontriviallyNormedDivisionRing</code> class and added a <code>NontriviallyNormedField.toNontriviallyNormedDivisionRing</code> instance. The rest was just replacing some <code>NontriviallyNormedField</code> variables with <code>NontriviallyNormedDivisionRing</code> variables until I got the continuity result I wanted. This is by no means optimal, for example you would want <code>LinearMap.toContinuousLinearMap</code> to work with the weaker assumption, but right now it can't because it defines a <code>ùïú</code>-linear equivalence and, if <code>ùïú</code> is not commutative, the equivalence can only be linear over the center of <code>ùïú</code>. So we should make <code>ùïú</code> into an algebra over a commutative thing and add a scalar tower somewhere. (This would unlock some later results too, and it might be useful for the later parts of my own project, I am not sure yet.)</p>\n<p>But before I went too far with this, I wanted to check with the mathlib experts if what I did was stupid/dangerous for some reason that I cannot see. I'm not sure how to summon experts, should I just ping all the authors of the files I modified ?</p>",
        "id": 393925048,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1695991917
    },
    {
        "content": "<blockquote>\n<p>So we should make ùïú into an algebra over a commutative thing and add a scalar tower somewhere. </p>\n</blockquote>\n<p>I don't think you need a scalar tower, just commuting actions (via <code>SMulCommClass</code>)</p>",
        "id": 393928996,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695993355
    },
    {
        "content": "<blockquote>\n<p>I had fun modifying my own local copy of mathlib to make it happen, the result is there: <a href=\"https://github.com/smorel394/JeCasseTout\">https://github.com/smorel394/JeCasseTout</a></p>\n</blockquote>\n<p>It would be a lot easier to give feedback on this if you modified the real mathlib, so that we can see the diff easily!</p>",
        "id": 393929263,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695993439
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Generalizing.20some.20statements.20from.20fields.20to.20division.20rings/near/393929263\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I had fun modifying my own local copy of mathlib to make it happen, the result is there: <a href=\"https://github.com/smorel394/JeCasseTout\">https://github.com/smorel394/JeCasseTout</a></p>\n</blockquote>\n<p>It would be a lot easier to give feedback on this if you modified the real mathlib, so that we can see the diff easily!</p>\n</blockquote>\n<p>I would be glad to, I am just not sure what to do. I did modify the files in my local copy of mathlib, so should I just ask git to stop ignoring them and push ?</p>",
        "id": 393929419,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1695993494
    },
    {
        "content": "<p>It is absolutely fine to push broken code to a mathlib branch, and open a PR tagged WIP; PRs don't have to be polished before you push!</p>",
        "id": 393929420,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695993494
    },
    {
        "content": "<p>What do you mean by \"your local copy of mathlib\"? Are you talking about something in the <code>lake-packages</code> directory? Or are you already working on a different mathlib branch?</p>",
        "id": 393929524,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695993544
    },
    {
        "content": "<p>Okay,</p>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Generalizing.20some.20statements.20from.20fields.20to.20division.20rings/near/393929524\">said</a>:</p>\n<blockquote>\n<p>What do you mean by \"your local copy of mathlib\"? Are you talking about something in the <code>lake-packages</code> directory? Or are you already working on a different mathlib branch?</p>\n</blockquote>\n<p>Yes, my local <code>lacke-packages</code> directory. I haven't actually figured out yet how to push to a mathlib branch (I know that I have been given the necessary permissions).</p>",
        "id": 393929631,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1695993590
    },
    {
        "content": "<p>I'll figure it out later today, soon I will have to run to catch a train.</p>",
        "id": 393929748,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1695993632
    },
    {
        "content": "<p>You're not really supposed to modify things in lake-packages, but creating a branch and pushing might work fine anyway</p>",
        "id": 393929828,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695993670
    },
    {
        "content": "<p>I just don't know what I was supposed to do ! Obviously I need to go read some documentation...</p>",
        "id": 393929910,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1695993702
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a> is that documentation; the expectation is that you clone mathlib directly and work in that clone</p>",
        "id": 393930416,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695993875
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Generalizing.20some.20statements.20from.20fields.20to.20division.20rings/near/393930416\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a> is that documentation; the expectation is that you clone mathlib directly and work in that clone</p>\n</blockquote>\n<p>Thanks, will do ! (Later today hopefully.)</p>",
        "id": 393930494,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1695993901
    },
    {
        "content": "<p>It sounds like you're exploiting the fact that lake cloned it for you, but what lake giveth lake can also taketh away!</p>",
        "id": 393930525,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695993909
    },
    {
        "content": "<p>Okay, I finally figured it out, here is the new branch:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/tree/NontriviallNormedDivisionRing\">https://github.com/leanprover-community/mathlib4/tree/NontriviallNormedDivisionRing</a><br>\nIn the first message of this thread, I explain what I changed so far and why. At first I was scared because CI sent me an email saying \"some jobs were not successful\", but apparently the thing does build and the problem is trailing whitespace/lines that are too long.</p>",
        "id": 393995540,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1696017285
    },
    {
        "content": "<p>Yeah, the CI bots can be very angry when you trespass like that (-;</p>",
        "id": 393995927,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1696017481
    },
    {
        "content": "<p>I feel properly ashamed of my behaviour. <span aria-label=\"exhausted\" class=\"emoji emoji-1f625\" role=\"img\" title=\"exhausted\">:exhausted:</span></p>",
        "id": 393996253,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1696017604
    }
]