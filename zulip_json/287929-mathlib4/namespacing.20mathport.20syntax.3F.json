[
    {
        "content": "<p>Do namespaces matter for mathport syntax? For example, the syntax for <code>mono</code> (attribute and tactic is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">...</span>\n<span class=\"kn\">namespace</span> <span class=\"n\">Tactic</span>\n\n<span class=\"n\">syntax</span> <span class=\"n\">mono.side</span> <span class=\"o\">:=</span> <span class=\"bp\">&amp;</span><span class=\"s2\">\"left\"</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"bp\">&amp;</span><span class=\"s2\">\"right\"</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"bp\">&amp;</span><span class=\"s2\">\"both\"</span> <span class=\"c1\">-- Lean.Parser.Tactic.mono.side</span>\n\n<span class=\"n\">syntax</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">mono</span><span class=\"o\">)</span> <span class=\"s2\">\"mono\"</span> <span class=\"s2\">\"*\"</span><span class=\"bp\">?</span> <span class=\"o\">(</span><span class=\"n\">ppSpace</span> <span class=\"n\">mono.side</span><span class=\"o\">)</span><span class=\"bp\">?</span>\n  <span class=\"o\">(</span><span class=\"s2\">\" with \"</span> <span class=\"o\">(</span><span class=\"n\">colGt</span> <span class=\"n\">term</span><span class=\"o\">),</span><span class=\"bp\">+</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">(</span><span class=\"s2\">\" using \"</span> <span class=\"o\">(</span><span class=\"n\">colGt</span> <span class=\"n\">simpArg</span><span class=\"o\">),</span><span class=\"bp\">+</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"c1\">-- Lean.Parser.Tactic.mono</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">Tactic</span>\n<span class=\"bp\">...</span>\n<span class=\"kn\">namespace</span> <span class=\"n\">Attr</span>\n\n<span class=\"n\">syntax</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">mono</span><span class=\"o\">)</span> <span class=\"s2\">\"mono\"</span> <span class=\"o\">(</span><span class=\"n\">ppSpace</span> <span class=\"n\">Tactic.mono.side</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">attr</span> <span class=\"c1\">-- Lean.Parser.Attr.mono</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">Attr</span>\n<span class=\"bp\">...</span>\n</code></pre></div>\n<p>Do these namespaces need to match when implemented somehow? So far it seems like they haven't needed to (e.g. many syntax names for tactic are in <code>Mathlib.Tactic</code>).</p>\n<p>For this specific case, the tactic file imports the attribute file, so it's more natural to put <code>mono.side</code> in the attribute file instead of the tactic file. So, there's also the question of whether the <code>mono</code> in <code>mono.side</code> needs to remain the <code>Tactic.mono</code> <code>mono</code> instead of the <code>Attr.mono</code> <code>mono</code>.</p>",
        "id": 328358214,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1676591095
    },
    {
        "content": "<p>No, the namespaces are almost completely irrelevant except for 1) name clashes, and 2) if someone writes <code>TSyntax ``mono</code> (then you need to open the right namespace).</p>",
        "id": 328359212,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1676591582
    }
]