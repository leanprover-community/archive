[
    {
        "content": "<p>I've decided that Mathlib's categories, functors, natural transformations, and bicategories have advanced features I really respect, so I'm constructing bijections with their ordinary counterparts so I can learn to use them. It's more important to me that I be able to translate into Mathlib's categories, functors, natural transformations, bicategories than vice versa, since I'm content with the extensionality results of Mathlib's category library. I was hoping someone who knows the library could help me fill in these two <code>.mk</code>'s, since there were some complexities in the inference that are giving me difficulties. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">CategoryTheory.Category</span>\n<span class=\"k\">#check</span> <span class=\"n\">CategoryTheory.Category.mk</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- A basic category structure</span>\n<span class=\"kd\">structure</span> <span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">u₀</span><span class=\"o\">,</span><span class=\"n\">v₀</span><span class=\"o\">}</span> <span class=\"n\">where</span>\n  <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₀</span>\n  <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">v₀</span>\n  <span class=\"n\">Idn</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">X</span>\n  <span class=\"n\">Cmp</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span>\n  <span class=\"n\">Id₁</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Idn</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">Id₂</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">Ass</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">W</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">h</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">dict₁</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">CategoryTheory.Category</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"c1\">-- It could be something involving CategoryTheory.Category.mk ...</span>\n</code></pre></div>\n<p>The situation was similar with functors and natural transformations: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">CategoryTheory.Functor</span>\n<span class=\"k\">#check</span> <span class=\"n\">CategoryTheory.Functor.mk</span>\n</code></pre></div>\n<p>I wanted to be able to go back and forth with it with only the information of this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- an ordinary functor structure</span>\n<span class=\"kd\">structure</span> <span class=\"n\">functor</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n   <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"n\">D.Obj</span>\n   <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"n\">D.Hom</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n   <span class=\"n\">Idn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"o\">(</span><span class=\"n\">C.Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">D.Idn</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n   <span class=\"n\">Cmp</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">),</span>\n   <span class=\"n\">D.Cmp</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">dict₂</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">CategoryTheory.Functor</span> <span class=\"o\">(</span><span class=\"n\">dict₁</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">dict₁</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"c1\">-- It could be CategoryTheory.Functor.mk ... (and it should involve two applications of dict₁)</span>\n</code></pre></div>\n<p>The <code>.mk</code>'s are a little complex for the object and hom components with some nice features clearly built in. Can anyone give me some advice on how to work these <code>.mk</code>'s?</p>",
        "id": 383827594,
        "sender_full_name": "Dean Young",
        "timestamp": 1691730933
    },
    {
        "content": "<p>What you've written doesn't make sense. <code>CategoryTheory.Functor</code> is not a type: you need to parametrize is by two <code>CategoryTheory.Category</code>s.</p>",
        "id": 383829410,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691731784
    },
    {
        "content": "<p>Ok, I made some edits.</p>",
        "id": 383830294,
        "sender_full_name": "Dean Young",
        "timestamp": 1691732158
    },
    {
        "content": "<p>I got the first part.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- A category C consists of:</span>\n<span class=\"kd\">structure</span> <span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">u₀</span><span class=\"o\">,</span><span class=\"n\">v₀</span><span class=\"o\">}</span> <span class=\"n\">where</span>\n  <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₀</span>\n  <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">v₀</span>\n  <span class=\"n\">Idn</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">X</span>\n  <span class=\"n\">Cmp</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span>\n  <span class=\"n\">Id₁</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Idn</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">Id₂</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">Ass</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">W</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">h</span>\n\n\n\n<span class=\"c1\">-- Notation for the identity map which infers the category:</span>\n<span class=\"kd\">def</span> <span class=\"n\">identity_map</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.Idn</span> <span class=\"n\">X</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"𝟙_(\"</span> <span class=\"n\">C</span> <span class=\"s2\">\")\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">identity_map</span> <span class=\"n\">C</span>\n\n\n\n<span class=\"c1\">-- Notation for composition which infers the category and objects:</span>\n<span class=\"kd\">def</span> <span class=\"n\">composition</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span> <span class=\"o\">:=</span> <span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n<span class=\"kd\">notation</span> <span class=\"n\">g</span> <span class=\"s2\">\"∘_(\"</span> <span class=\"n\">C</span> <span class=\"s2\">\")\"</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">composition</span> <span class=\"n\">C</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Id₁</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">𝟙</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">X</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">C.Id₂</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Id₂</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"mi\">𝟙</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">Y</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">C.Id₁</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Ass</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">((</span><span class=\"n\">h</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">C.Ass</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">CategoryTheory.Category.mk</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">toCategory</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Category</span> <span class=\"n\">C.Obj</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">Hom</span> <span class=\"o\">:=</span> <span class=\"n\">C.Hom</span><span class=\"o\">,</span> <span class=\"n\">id</span> <span class=\"o\">:=</span> <span class=\"n\">C.Idn</span><span class=\"o\">,</span> <span class=\"n\">comp</span> <span class=\"o\">:=</span> <span class=\"n\">composition</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">id_comp</span> <span class=\"o\">:=</span> <span class=\"n\">Id₁</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">comp_id</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">Id₂</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"n\">assoc</span> <span class=\"o\">:=</span> <span class=\"n\">Ass</span> <span class=\"n\">C</span><span class=\"o\">}</span>\n<span class=\"k\">#check</span> <span class=\"n\">toCategory</span>\n</code></pre></div>\n<p>The functors seem a bit harder since <code>Functor</code> seems to take in object components and infer the category structure on its on.</p>",
        "id": 384344990,
        "sender_full_name": "Dean Young",
        "timestamp": 1691871513
    },
    {
        "content": "<p>Does changing your <code>toCategory</code> to an <code>instance</code> rather than a <code>def</code> help?</p>",
        "id": 384360561,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691881682
    },
    {
        "content": "<p>Yeah thanks.</p>\n<p>I decided to just completely switch over to Mathlib's set.</p>",
        "id": 384391907,
        "sender_full_name": "Dean Young",
        "timestamp": 1691899041
    }
]