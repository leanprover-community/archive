[
    {
        "content": "<p>The next Lean version bump for Mathlib is going to be a bit spicy: <code>master</code> and <code>nightly-testing</code> have already diverged a fair bit. Next time, I think we'll be able to progressively merge adaptation PRs into a <code>bump/v4.X.0</code> branch. But because ... complicated CI related things I can explain elsewhere ... that wasn't possible this time.</p>\n<p>So: <a href=\"https://github.com/leanprover-community/mathlib4/pull/8366\">#8366</a> will move Mathlib to <code>v4.3.0-rc2</code> (it doesn't actually exist yet, but probably will tomorrow). It is the supremum of </p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/8284\">#8284</a></li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/8056\">#8056</a> (this is the one that can no longer be built separately)</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/8023\">#8023</a></li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/8332\">#8332</a></li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/8226\">#8226</a> (already approved)<br>\nalong with some manual changes to <code>nightly-testing</code> as Mathlib <code>master</code> changes have been merged in.</li>\n</ul>\n<p>If anyone if available to look at this one, this would be extremely helpful! Once this is in, <code>master</code> and <code>nightly-testing</code> will resynchronize, and hopefully the new CI scheme will make everything easier next time.</p>",
        "id": 401597545,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699782236
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8056\">#8056</a> probably built before because of the simp decide changes. You can try adding <code>decide := false</code> to the offending simps in the meantime (<code>norm_num</code> doesn't have such a knob but I think you can replace it with <code>simp</code> in the few cases where it fails now)</p>",
        "id": 401598063,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1699782480
    },
    {
        "content": "<p>I'm not sure that getting <a href=\"https://github.com/leanprover-community/mathlib4/pull/8056\">#8056</a> to build serves any purpose. It can't be merged into anything, because it is using a Lean version that is not comparable to any nightly release.</p>",
        "id": 401598231,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699782590
    },
    {
        "content": "<p>Was just about to write that :)</p>",
        "id": 401598327,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1699782619
    },
    {
        "content": "<p>(The point of the new scheme is that all adaptation PRs will be mergable into a branch that always stays on a nightly release, and only contains approved changes.)</p>",
        "id": 401598360,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699782634
    },
    {
        "content": "<p>BTW, can we not be doing bumps on a Scott-monday? This always seems to happen when I'm out of town on a weekend :)</p>",
        "id": 401598886,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699782949
    },
    {
        "content": "<p>Haha, still Scott-sunday here.</p>",
        "id": 401598969,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699782975
    },
    {
        "content": "<p>But sure, I can go for Australia-tuesday in future.</p>",
        "id": 401598989,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699782989
    },
    {
        "content": "<p>Judging from the diff I think the supremum includes <a href=\"https://github.com/leanprover-community/mathlib4/pull/7834\">#7834</a> (which Scott already approved) too <span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span></p>",
        "id": 401599826,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1699783474
    },
    {
        "content": "<p>Some of these PRs are awfully large, especially <a href=\"https://github.com/leanprover-community/mathlib4/pull/8023\">#8023</a> which touches over 200 files! Maybe it's too late on this round, but can we try harder in future to split them into \"cleanup of master\" (in this case using <code>comp_def</code>) and \"fixes for the nightly branch\" (everything else)?</p>",
        "id": 401600663,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699784210
    },
    {
        "content": "<p>Yes. The PRs made based on the pre-release toolchain will be merged into a bump branch. Only fixes made on <code>nightly-testing</code> because of subsequent breakages introduced by changes in <code>master</code> will need to be reviewed serparately.</p>",
        "id": 401600776,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784309
    },
    {
        "content": "<p>Oh, sorry, I missed the point.</p>",
        "id": 401600818,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784363
    },
    {
        "content": "<p>I'm requesting something stronger where the bits of the patch that work on master are PR'd directly to master</p>",
        "id": 401600827,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699784375
    },
    {
        "content": "<p>You're asking that all the <code>comp_def</code> changes be done separately, because they can be merged into master first.</p>",
        "id": 401600834,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784381
    },
    {
        "content": "<p>Not necessarily that we actually do that now, but that we try to do things in that way in future</p>",
        "id": 401600913,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699784418
    },
    {
        "content": "<p>Hmm... not making any promises I can do that. Perhaps when I notice the possibility to do that I can ask for someone to do it.</p>",
        "id": 401600960,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784444
    },
    {
        "content": "<p>The smaller the bump PRs are the fewer conflicts they have to manage</p>",
        "id": 401600966,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699784447
    },
    {
        "content": "<p>We'll see.</p>",
        "id": 401600972,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784457
    },
    {
        "content": "<p>I tried to do something similar with Kyle's PR, but the response was \"we don't have a process for merging master back into the bump branches, so this makes things worse\". Maybe that's a discussion for another thread</p>",
        "id": 401601027,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699784514
    },
    {
        "content": "<p>Oh, yeah.</p>",
        "id": 401601089,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784534
    },
    {
        "content": "<p>The <code>lean-pr-testing-NNNN</code> branches cannot necessarily receive further changes from <code>master</code>.</p>",
        "id": 401601133,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784565
    },
    {
        "content": "<p>They (as of about a week ago) are always based of a <code>nightly-testing-YYYY-MM-DD</code> branch, and they don't keep up with <code>master</code> once <code>nightly-testing</code> itself has advanced to a more recent nightly releasse.</p>",
        "id": 401601170,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784613
    },
    {
        "content": "<p>Can their base <code>nightly-YYYY-MM-DD</code> branch receive (manual) merges from master directly?</p>",
        "id": 401601189,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699784630
    },
    {
        "content": "<p>They can, but there is no automation that attempts to do this.</p>",
        "id": 401601252,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784655
    },
    {
        "content": "<p>Edited, I meant manual merges</p>",
        "id": 401601265,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699784671
    },
    {
        "content": "<p>Or a manual PR that requests a merge</p>",
        "id": 401601276,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699784683
    },
    {
        "content": "<p>So if you want to do it by hand for a particular one, that is fine. (As long as you maintain the invariant that <code>nightly-testing-YYYY-MM-DD</code> stays on the <code>nightly-YYYY-MM-DD</code> toolchain and passes CI.)</p>",
        "id": 401601312,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699784711
    },
    {
        "content": "<p>32 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/v4.2E3.2E0-rc2.20-.20comp_def.20and.20.238023\">#mathlib4 &gt; v4.3.0-rc2 - comp_def and #8023</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 401606546,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699789118
    },
    {
        "content": "<p>To summarize the thread above; I pushed to <a href=\"https://github.com/leanprover-community/mathlib4/pull/8023\">#8023</a> (and the bump PR) some commits that use <code>@[eqns]</code> instead of <code>comp_def</code>. The fallout on master can be seen in <a href=\"https://github.com/leanprover-community/mathlib4/pull/8371\">#8371</a> (which we can safely merge before the bump, if we want this change). If we think the fallout is worse than writing <code>comp_def</code> everywhere, we should revert my pushes to <a href=\"https://github.com/leanprover-community/mathlib4/pull/8023\">#8023</a></p>",
        "id": 401635013,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699817139
    },
    {
        "content": "<p>For anyone who wants a up-to-date summary, it looks like the current status is</p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/8366\">#8366</a> (the bump PR) passes CI</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/8371\">#8371</a> can be merged to master right now (I don't see why not, so I just merged it <img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\">)</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/8023\">#8023</a> can be ignored since it's already been incorporated into the bump PR</li>\n</ul>",
        "id": 401644309,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699827604
    },
    {
        "content": "<p>For <a href=\"https://github.com/leanprover-community/mathlib4/pull/8366\">#8366</a>, we've only got ~450 changed files to review <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n<p>I've scrolled through the changes and did the \"spin the globe and stop it with your finger\" game a number of times. If we each do enough rounds of that, we'll almost certainly have reviewed the whole thing. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 401644622,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699827996
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8373\">#8373</a> knocks 3 files off that list, which is hardly significant, but it's green already so <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 401644672,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699828077
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8332\">#8332</a> is an easy review for anyone who remembers what <code>destruct</code> means for aesop</p>",
        "id": 401644770,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699828189
    },
    {
        "content": "<p>We're now down from ~450 files to =450 files!</p>",
        "id": 401653041,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699835611
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Should I be reviewing the PRs that <a href=\"https://github.com/leanprover-community/mathlib4/pull/8366\">#8366</a> depends on?</p>",
        "id": 401701255,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1699859710
    },
    {
        "content": "<p>What exactly is that status?</p>",
        "id": 401701266,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1699859716
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8366\">#8366</a> is the main PR, that we want to get approval form. It depends on:</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8284\">#8284</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8056\">#8056</a> (this is the one that can no longer be built separately)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8023\">#8023</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8226\">#8226</a> (already approved)</p>\n<p>Because of the problem with <a href=\"https://github.com/leanprover-community/mathlib4/pull/8056\">#8056</a>, unfortunately <a href=\"https://github.com/leanprover-community/mathlib4/pull/8366\">#8366</a> is an all-or-nothing affair.</p>",
        "id": 401708385,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699863217
    },
    {
        "content": "<p>Ideally in future I will be able to present a list of PRs which can be reviewed separately, along with a pinky promise that the main PR is just their supremum.</p>",
        "id": 401708518,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699863251
    },
    {
        "content": "<p>But I think at this point the right thing to do is just look at <a href=\"https://github.com/leanprover-community/mathlib4/pull/8366\">#8366</a>.</p>",
        "id": 401708556,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699863265
    },
    {
        "content": "<p>I pulled off some instances change to <a href=\"https://github.com/leanprover-community/mathlib4/pull/8380\">#8380</a>, just since I think it's useful to be able to see the statement changes in a blame in future without going through a four-hundred-file diff</p>",
        "id": 401737161,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699872335
    }
]