[
    {
        "content": "<p>I made a <code>metric_space</code> in Lean 3, and want to convert it to Lean 4. However, it seems that <code>MetricSpace</code> has a whole host of new fields like <code>edist_dist</code> and Bornology. Is there a version of metric spaces in Lean 4 without all these add-ons?</p>",
        "id": 401465357,
        "sender_full_name": "Bjørn Kjos-Hanssen",
        "timestamp": 1699669581
    },
    {
        "content": "<p>Both were added in Lean 3.</p>",
        "id": 401466761,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699670699
    },
    {
        "content": "<p>For <code>edist_dist</code>, we had a tactic to fill it in.</p>",
        "id": 401466787,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699670718
    },
    {
        "content": "<p>I removed it while porting (because my Lean 4 metaprogramming skills are between very low and non-existent).</p>",
        "id": 401466825,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699670762
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/New.20fields.20in.20MetricSpace\">#lean4 &gt; New fields in MetricSpace</a> by <span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span>.</p>",
        "id": 401466872,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699670777
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"347475\">@Bjørn Kjos-Hanssen</span> I moved the topic to a more appropriate stream.</p>",
        "id": 401466956,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699670827
    },
    {
        "content": "<p><code>MetricSpace</code> should be able to fill in <code>Bornology</code>-related fields automatically (possibly, after you fill in <code>edist_dist</code>). If it fails, then this is a bug.</p>",
        "id": 401466979,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699670848
    },
    {
        "content": "<p>And restoring the autoparam for <code>edist_dist</code> is very welcome.</p>",
        "id": 401467140,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699670988
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>  So basically <code>`[exact (ennreal.of_real_eq_coe_nnreal _).symm</code> ?</p>",
        "id": 401469970,
        "sender_full_name": "Bjørn Kjos-Hanssen",
        "timestamp": 1699672906
    },
    {
        "content": "<p>If you have a code that works, then please make a PR that removes (almost) all the <code>edist_dist</code> fields from instances.</p>",
        "id": 401470062,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699672981
    },
    {
        "content": "<p>It should work for <code>rfl</code> too.</p>",
        "id": 401470071,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699672990
    },
    {
        "content": "<p>Thanks for the encouragement, actually</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>        <span class=\"n\">edist_dist</span>         <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">↦</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">ENNReal.ofReal_eq_coe_nnreal</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>seems to do the trick. But I'm not sure how to turn that into a PR.</p>",
        "id": 401471242,
        "sender_full_name": "Bjørn Kjos-Hanssen",
        "timestamp": 1699673944
    },
    {
        "content": "<p>And you're right, only <code>edist_dist</code> needs to be supplied.</p>",
        "id": 401471269,
        "sender_full_name": "Bjørn Kjos-Hanssen",
        "timestamp": 1699673980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"347475\">@Bjørn Kjos-Hanssen</span>, is <a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a> what you are looking for? If you need some more specific advice on making a PR, please ask.</p>",
        "id": 401471931,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699674537
    },
    {
        "content": "<p>It looks like <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> already answered my question about tactic <a href=\"#narrow/stream/287929-mathlib4/topic/pseudo_metric_space.2Eedist_dist_tac/near/339413670\">here</a></p>",
        "id": 401472417,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699674888
    },
    {
        "content": "<p>You can try to add this definition and add <code>:= by edist_dist_tac</code> to the <code>edist_dist</code> field.</p>",
        "id": 401472460,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699674936
    },
    {
        "content": "<p>Or I can try to do it tomorrow.</p>",
        "id": 401472467,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699674945
    },
    {
        "content": "<p>I see it says <code>#noalign pseudo_metric_space.edist_dist_tac</code> is that the part to change?</p>",
        "id": 401483888,
        "sender_full_name": "Bjørn Kjos-Hanssen",
        "timestamp": 1699682875
    },
    {
        "content": "<p>You can just delete that #noalign, there's no point writing #align or #noalign statement for metaprogamming code.</p>",
        "id": 401484636,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699683542
    }
]