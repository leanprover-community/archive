[
    {
        "content": "<p><code>refine?</code> (<a href=\"https://github.com/leanprover-community/mathlib4/pull/8364\">#8364</a>) replaces all unassigned <code>_</code>'s with <code>?_</code> so that <code>refine</code> works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span><span class=\"bp\">?</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span> <span class=\"c1\">-- Try this: refine fun (_ : _) =&gt; ?_</span>\n</code></pre></div>\n<p>If anyone would like to try it out (<code>thorimur/refine-question-mark</code>) and let me know if it's working as you'd expect (including weird edge cases), as well as if there are some ways it could be more useful, I'd appreciate it! :)</p>",
        "id": 401590952,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1699777092
    },
    {
        "content": "<p>I don't have time to do this, but if you want to test it, just search for <code>refine'</code> in Mathlib and use it there.</p>",
        "id": 401599223,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1699783128
    },
    {
        "content": "<p>Let me ask a specific question here (to the general audience of this thread): would you expect <code>refine?</code> to insert goals for implicit and instance arguments if they couldn’t be synthesized? E.g. to turn <code>f _</code> into <code>f (α := ?_) ?_</code></p>\n<p>This isn’t part of v1, because I kind of figure this is exactly the use case of <code>refine'</code>. <code>refine'</code> could (in the future) become a hint that we are in fact making implicit or instance arguments into goals. (Also in part because modifying syntax is safer than roundtripping, which would be necessary for inserting implicit or instance arguments.)</p>",
        "id": 401600184,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1699783802
    },
    {
        "content": "<p>(Tangentially related: I think it might be nice if  there were a code action on <code>..</code> which expands it, so e.g. <code>@g ..</code> ⇒ <code>@g (_) _ _ _ _</code>. I’m going to look into that tomorrow.)</p>",
        "id": 401600370,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1699783928
    }
]