[
    {
        "content": "<p>I'm porting <code>topology.sets.opens</code> <a href=\"https://github.com/leanprover-community/mathlib4/pull/2118\">!4#2118</a>, and Lean claims that the <code>Coe</code> instance is noncomputable. Why?</p>",
        "id": 326249302,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675722072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 326251136,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675722813
    },
    {
        "content": "<p><del><a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/4107942511/jobs/7088044056#step:7:26\">the error</a></del> GitHub links are broken</p>",
        "id": 326251830,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675723104
    },
    {
        "content": "<p>That looks like a compiler bug with underapplied <code>Subtype.val</code>.</p>",
        "id": 326251847,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1675723110
    },
    {
        "content": "<p>If you write <code>coe x := x.val</code> instead of <code>coe := Subtype.val</code>, the error goes away.</p>",
        "id": 326251877,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1675723125
    },
    {
        "content": "<p>Filed as <a href=\"https://github.com/leanprover/lean4/pull/2096\">lean4#2096</a>.  Don't expect it to be fixed any time soon.</p>",
        "id": 326252552,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1675723411
    },
    {
        "content": "<p>I have several more strange <code>noncomputable</code>s in <a href=\"https://github.com/leanprover-community/mathlib4/pull/2174\">!4#2174</a> (e.g., <code>Union</code> instance on bundled measurable sets)</p>",
        "id": 327140917,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1676061033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 327140937,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1676061039
    },
    {
        "content": "<p>I don't care about computability of these definitions, just want to know if this is the same bug or not.</p>",
        "id": 327141041,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1676061076
    },
    {
        "content": "<p>I think they're related issues, but I've filed it as <a href=\"https://github.com/leanprover/lean4/pull/2104\">lean4#2104</a> so that we can close more bugs when the new compiler lands. <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span></p>",
        "id": 327143440,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1676061963
    }
]