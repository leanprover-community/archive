[
    {
        "content": "<p>Hello, I'm trying to start using Lean4 and I am running into a bit of trouble. I started following the instructions from <a href=\"https://github.com/leanprover-community/mathlib4\">https://github.com/leanprover-community/mathlib4</a>. I currently have input the following commands in order:</p>\n<p><code>curl -L https://raw.githubusercontent.com/leanprover-community/mathlib4/master/lean-toolchain -o lean-toolchain</code><br>\n<code>lake update</code><br>\n<code>lake exe cache get</code></p>\n<p>but after I input <code>lake exe cache</code> get I got the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">2508</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">No</span> <span class=\"n\">cache</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">decompress</span>\n</code></pre></div>\n<p>My lakefile.lean looks like the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"n\">hello</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add package configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"n\">Hello</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add library configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4\"</span>\n\n<span class=\"kd\">@[default_target]</span>\n<span class=\"n\">lean_exe</span> <span class=\"n\">hello</span> <span class=\"o\">{</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>Can I get some help regarding this problem?</p>",
        "id": 359890867,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684588516
    },
    {
        "content": "<p>Are you sure that's an error? Is something not working? Does <code>lake build</code> return with no output? If so it sounds like you're done.</p>",
        "id": 359894121,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684589593
    },
    {
        "content": "<p>Thank you. <code>lake build</code> gives me </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Hello</span>\n<span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Hello</span>\n<span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Main</span>\n<span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Main</span>\n<span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">hello.exe</span>\n</code></pre></div>\n<p>But apparently <code>import Mathlib</code> works in neither Hello.lean nor Main.lean</p>",
        "id": 359896462,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684590264
    },
    {
        "content": "<p><a href=\"https://github.com/kbuzzard/IISc-experiments\">Here</a> is a simple Lean 4 project which has mathlib as a dependency; maybe it helps. Can you get that project working?</p>",
        "id": 359897784,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684590621
    },
    {
        "content": "<p>Thank you. I have tried <code>lake build</code> and found that some packages could be installed but some ran into errors:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Name</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Position</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.Array.Defs</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Mathport.Rename</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.Typ</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.WF</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Alias</span>\n<span class=\"n\">Building</span> <span class=\"n\">Aesop.Nanos</span>\n<span class=\"n\">Building</span> <span class=\"n\">Aesop.Check</span>\n<span class=\"n\">Building</span> <span class=\"n\">Aesop.Options.Public</span>\n<span class=\"n\">Building</span> <span class=\"n\">Aesop.Percent</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.SortLocalDecls</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.ForLean.Do</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.CasesM</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Clear_</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Clear</span><span class=\"bp\">!</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.ClearExcept</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Coe</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Constructor</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.FailIfNoProgress</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.GuardGoalNums</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.GuardHypNums</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Control.SimpSet</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Inhabit</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.LabelAttr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.LocalContext</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Classical</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.PrintPrefix</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.NthRewrite</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.CoreM</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.ProjectionNotation</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Meta.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Rename</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.WithWeakNamespace</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Set</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.SimpRw</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Substs</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Spread</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.SudoSetOption</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.TypeCheck</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Use</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.SimpIntro</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Linter.UnreachableTactic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Trace</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.Pickle</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.SuccessIfFailWithMsg</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.ApplyWith</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.CodeAction.Tactic.Attr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.CodeAction.Hole.Attr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.GuardExpr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Format</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.UnsetOption</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Char</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.InstantiateMVars</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Clear</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.AssertHypotheses</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Have</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Ordering.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Function</span>\n<span class=\"n\">Building</span> <span class=\"n\">Aesop.Constants</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.HigherOrder</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Control.Combinators</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.SavedState</span>\n<span class=\"n\">Building</span> <span class=\"n\">Aesop.Options.Internal</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.Macro</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Simpa</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Linter.UnnecessarySeqFocus</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe -DwarningAsError=true -Dlinter.missingDocs=true .\\lake-packages\\std\\.\\.\\Std\\Linter\\UnreachableTactic.lean -R .\\lake-packages\\std\\.\\. -o .\\lake-packages\\std\\build\\lib\\Std\\Linter\\UnreachableTactic.olean -i .\\lake-packages\\std\\build\\lib\\Std\\Linter\\UnreachableTactic.ilean -c .\\lake-packages\\std\\build\\ir\\Std\\Linter\\UnreachableTactic.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Linter</span><span class=\"bp\">\\</span><span class=\"n\">UnreachableTactic.lean</span><span class=\"o\">:</span><span class=\"mi\">87</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"o\">{</span><span class=\"bp\">...</span><span class=\"o\">}</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">...</span><span class=\"o\">)</span>\n  <span class=\"n\">Linter</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe` exited with code 1</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.ScopedNS</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.CodeAction.Hole.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.CodeAction.Tactic.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Conv</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Set</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.TryThis</span>\n<span class=\"n\">Building</span> <span class=\"n\">Aesop.Options</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.TypeClass</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe -DwarningAsError=true -Dlinter.missingDocs=true .\\lake-packages\\std\\.\\.\\Std\\Linter\\UnnecessarySeqFocus.lean -R .\\lake-packages\\std\\.\\. -o .\\lake-packages\\std\\build\\lib\\Std\\Linter\\UnnecessarySeqFocus.olean -i .\\lake-packages\\std\\build\\lib\\Std\\Linter\\UnnecessarySeqFocus.ilean -c .\\lake-packages\\std\\build\\ir\\Std\\Linter\\UnnecessarySeqFocus.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Linter</span><span class=\"bp\">\\</span><span class=\"n\">UnnecessarySeqFocus.lean</span><span class=\"o\">:</span><span class=\"mi\">151</span><span class=\"o\">:</span><span class=\"mi\">47</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"o\">{</span><span class=\"bp\">...</span><span class=\"o\">}</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">...</span><span class=\"o\">)</span>\n  <span class=\"n\">Linter</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe` exited with code 1</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe -DwarningAsError=true -Dlinter.missingDocs=true .\\lake-packages\\std\\.\\.\\Std\\CodeAction\\Hole\\Basic.lean -R .\\lake-packages\\std\\.\\. -o .\\lake-packages\\std\\build\\lib\\Std\\CodeAction\\Hole\\Basic.olean -i .\\lake-packages\\std\\build\\lib\\Std\\CodeAction\\Hole\\Basic.ilean -c .\\lake-packages\\std\\build\\ir\\Std\\CodeAction\\Hole\\Basic.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">CodeAction</span><span class=\"bp\">\\</span><span class=\"n\">Hole</span><span class=\"bp\">\\</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">28</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">code_action_provider</span><span class=\"o\">]</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe` exited with code 1</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Replace</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Control.Basic</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe -DwarningAsError=true -Dlinter.missingDocs=true .\\lake-packages\\std\\.\\.\\Std\\Tactic\\TryThis.lean -R .\\lake-packages\\std\\.\\. -o .\\lake-packages\\std\\build\\lib\\Std\\Tactic\\TryThis.olean -i .\\lake-packages\\std\\build\\lib\\Std\\Tactic\\TryThis.ilean -c .\\lake-packages\\std\\build\\ir\\Std\\Tactic\\TryThis.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">TryThis.lean</span><span class=\"o\">:</span><span class=\"mi\">51</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">code_action_provider</span><span class=\"o\">]</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe` exited with code 1</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.ApplyCongr</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe -DwarningAsError=true -Dlinter.missingDocs=true .\\lake-packages\\std\\.\\.\\Std\\CodeAction\\Tactic\\Basic.lean -R .\\lake-packages\\std\\.\\. -o .\\lake-packages\\std\\build\\lib\\Std\\CodeAction\\Tactic\\Basic.olean -i .\\lake-packages\\std\\build\\lib\\Std\\CodeAction\\Tactic\\Basic.ilean -c .\\lake-packages\\std\\build\\ir\\Std\\CodeAction\\Tactic\\Basic.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span><span class=\"bp\">\\.\\.\\</span><span class=\"n\">Std</span><span class=\"bp\">\\</span><span class=\"n\">CodeAction</span><span class=\"bp\">\\</span><span class=\"n\">Tactic</span><span class=\"bp\">\\</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">143</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">code_action_provider</span><span class=\"o\">]</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe` exited with code 1</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.Order</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.Delab</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.MetaM</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.AssertInstancesCommute</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.Match</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq</span>\n</code></pre></div>\n<p>Moreover, <code>lake build</code> seems to automatically terminate in the middle</p>",
        "id": 359899751,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684591293
    },
    {
        "content": "<p>Why not delete your project and start again with <code>lake new hello math</code>? This is the recommended way to make a project which has mathlib as a dependency.</p>",
        "id": 359900547,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684591527
    },
    {
        "content": "<p>Then change directory into your project and type</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">lake</span> <span class=\"n\">build</span>\n</code></pre></div>\n<p>and it should all be fine. Now you can make project files, e.g. change the contents of<code>Hello.lean</code> to the line <code>import Hello.test</code>, make a <code>Hello</code> subdirectory and put a file <code>test.lean</code> in that subdirectory saying <code>import Mathlib</code>. Then <code>lake build</code> in the root folder should work fine.</p>",
        "id": 359900790,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684591590
    },
    {
        "content": "<p>When I typed <code>lake exe cache get</code> I got </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">2509</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Failed</span> <span class=\"n\">to</span> <span class=\"n\">connect</span> <span class=\"n\">to</span> <span class=\"n\">lakecache.blob.core.windows.net</span> <span class=\"n\">port</span> <span class=\"mi\">443</span> <span class=\"n\">after</span> <span class=\"mi\">21058</span> <span class=\"n\">ms</span><span class=\"o\">:</span> <span class=\"n\">Couldn't</span> <span class=\"n\">connect</span> <span class=\"n\">to</span> <span class=\"n\">server</span>\n<span class=\"mi\">1</span> <span class=\"n\">download</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">failed</span>\n</code></pre></div>\n<p>so I typed <code>git config --global --unset http.proxy</code> before typing <code>lake exe cache get</code> again. After that I got</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">2509</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">No</span> <span class=\"n\">cache</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">decompress</span>\n</code></pre></div>\n<p>Since I didn't get the long string of building packages, I am not sure if I am doing it right. Is this supposed to happen?</p>",
        "id": 359903738,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684592527
    },
    {
        "content": "<p><code>cache</code> is currently incompatible with Git's <code>autocrlf</code> if you use that on Windows</p>",
        "id": 359905588,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684593156
    },
    {
        "content": "<p>Also, I have tried changing the contents of <code>Hello.lean</code> to <code>import Hello.test</code> and ran into an error</p>",
        "id": 359905936,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684593273
    },
    {
        "content": "<p>You are right. I have forgot to mention that I am using Windows 11 64 bit operating system</p>",
        "id": 359906258,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684593368
    },
    {
        "content": "<p>The error you pasted above seems to say your lean-toolchain does not match Std's. Have you ever used <code>elan override</code> before? If so, that might be causing the problem.</p>",
        "id": 359908692,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1684594127
    },
    {
        "content": "<p>(this is orthogonal to the autocrlf issue)</p>",
        "id": 359908733,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1684594146
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"403479\">Hyunsang Hwang</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trouble.20getting.20mathlib/near/359899751\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe` exited with code 1</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This part of the error message suggest that it might be indeed the wrong toolchain being used. Looks like the toolchain used is from March 17, while mathlib uses one that should be something in May</p>",
        "id": 359910286,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1684594606
    },
    {
        "content": "<p>I have downloaded </p>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trouble.20getting.20mathlib/near/359897784\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/kbuzzard/IISc-experiments\">Here</a> is a simple Lean 4 project which has mathlib as a dependency; maybe it helps. Can you get that project working?</p>\n</blockquote>\n<p>and have typed</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">curl</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">raw.githubusercontent.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">master</span><span class=\"bp\">/</span><span class=\"n\">elan</span><span class=\"bp\">-</span><span class=\"n\">init.sh</span> <span class=\"bp\">-</span><span class=\"n\">sSf</span> <span class=\"bp\">|</span> <span class=\"n\">sh</span>\n<span class=\"n\">elan</span> <span class=\"n\">self</span> <span class=\"n\">update</span>\n<span class=\"n\">elan</span> <span class=\"n\">override</span> <span class=\"n\">unset</span>\n<span class=\"n\">lake</span> <span class=\"n\">build</span>\n</code></pre></div>\n<p>which gave </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4.git</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">gebner</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">JLimperg</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.OpenPrivate</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.HaveI</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Util.ExtendedBinder</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Util.TermUnsafe</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Unreachable</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Nat.Notation</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.TagAttribute</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.GuardExpr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.TryThis</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.ByCases</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.SeqFocus</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Parser</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.NameMapAttribute</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Option.Init.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Tactic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.List.Init.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Ord</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.KVMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Expr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.MemoFix</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.EnvExtension</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Delaborator</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.RCases</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Command</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Message</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Util.LibraryNote</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Relation.Rfl</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.ForLean.ReduceEval</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.ForLean.ToExpr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.Typ</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.Dvd</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Linter</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Mathport.Rename</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Alias</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.BEq</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.LCtx</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Control.ForInStep.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.DList</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Prod.Lex</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Fin.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.HashMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.HashSet</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Expr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.PersistentHashMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Inaccessible</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.MonadBacktrack</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.PersistentHashSet</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.SqueezeScope</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Mathport.Attributes</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.LeftRight</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.RunCmd</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.SimpTrace</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.AttributeExtra</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Linter.UnreachableTactic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.ShowTerm</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Meta.Simp</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.NoMatch</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.InstantiateMVars</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Clear</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.AssertHypotheses</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.SetNotation</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Int.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Ordering.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Function</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Control.ForInStep.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.WhatsNew</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.SavedState</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Simpa</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.CoeExt</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Linter.UnnecessarySeqFocus</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.Macro</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Init.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Char</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Ext.Attr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Control.ForInStep</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Set</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Frontend</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Simp</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Misc</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.TypeClass</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.Cast</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.NormCast.Ext</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Linter</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.Order</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.MetaM</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.NormCast.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Logic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Ext</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Congr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.PairingHeap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.LawfulMonad</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.WF</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Option.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Gcd</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.BinomialHeap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.String</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Init.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Merge</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.Alter</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.DiscrTree</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.UnusedNames</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.List.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Meta</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Option.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Int.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Relation.Symm</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Relation.Trans</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Int.DivMod</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.AssocList</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Expr.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.String.Defs</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.List.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Expr.Traverse</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Cases</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Simps.NotationClass</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Expr.ReplaceRec</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Simps.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Rat.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Rat.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.RatCast</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.HashMap.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Rat</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Expr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.ToAdditive</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.HashMap.WF</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Core</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.HashMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.ZeroOne</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Nat.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Int.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Logic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.SplitIfs</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Algebra.Classes</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Logic.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Algebra.Order</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Algebra.Functions</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Logic.Nonempty</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Nat.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Logic.Function.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Group.Defs</span>\n<span class=\"n\">Building</span> <span class=\"n\">IIScExperiments.GroupTheory</span>\n<span class=\"n\">Building</span> <span class=\"n\">IIScExperiments</span>\n</code></pre></div>\n<p>for the last line. However, I get <code>IIScExperiments.lean:1:0 unknown package 'IIScExperiments'</code> in <code>IIScExperiments.lean</code></p>",
        "id": 359911665,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684595053
    },
    {
        "content": "<p>Why are you typing <code>curl</code> stuff? What are you reading which is telling you to do that? I think you're only supposed to type <code>curl</code> once, and that's when you're installing Lean itself.</p>",
        "id": 359912167,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684595217
    },
    {
        "content": "<p>Oh and <em>much</em> more importantly, why are you typing <code>elan override</code>? This is a big red flag. Where are you reading that? We are currently trying to eradicate all mention of that command. It is no longer necessary.</p>",
        "id": 359912371,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684595282
    },
    {
        "content": "<p>I thought</p>\n<p><span class=\"user-mention silent\" data-user-id=\"385895\">Jon Eugster</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trouble.20getting.20mathlib/near/359910286\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"403479\">Hyunsang Hwang</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trouble.20getting.20mathlib/near/359899751\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">hyunsang</span> <span class=\"n\">hwang</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-03-17\\bin\\lean.exe` exited with code 1</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This part of the error message suggest that it might be indeed the wrong toolchain being used. Looks like the toolchain used is from March 17, while mathlib uses one that should be something in May</p>\n</blockquote>\n<p>meant that I would update lean so I followed the instruction from the top part of <a href=\"https://github.com/leanprover-community/mathlib4\">https://github.com/leanprover-community/mathlib4</a></p>",
        "id": 359912606,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684595345
    },
    {
        "content": "<p>When you installed Lean you will have got the latest version of <code>elan</code>. You never need to run any more <code>elan</code> commands ever. It is a stable program which only changes very occasionally.</p>",
        "id": 359913299,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684595554
    },
    {
        "content": "<p>I am specifically interested in where you got <code>elan override</code> from.</p>",
        "id": 359913417,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684595590
    },
    {
        "content": "<p>And typing this <code>curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh</code> just re-installs it. You should never need to type that either. If you type <code>elan --version</code> and you see <code>elan 1.4.2</code> then you should then forget that <code>elan</code> even exists.</p>",
        "id": 359913741,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684595674
    },
    {
        "content": "<p>Okay. I just downloaded the file you provided here once again</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Trouble.20getting.20mathlib/near/359897784\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/kbuzzard/IISc-experiments\">Here</a> is a simple Lean 4 project which has mathlib as a dependency; maybe it helps. Can you get that project working?</p>\n</blockquote>\n<p>and typed <code>lake build</code> which gave </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4.git</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">gebner</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">JLimperg</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Util.ExtendedBinder</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Option.Init.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.OpenPrivate</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Nat.Notation</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.HaveI</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.TagAttribute</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Unreachable</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.GuardExpr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.ByCases</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.TryThis</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Parser</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Tactic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.SeqFocus</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.NameMapAttribute</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Util.TermUnsafe</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.List.Init.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Ord</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.KVMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Expr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.RCases</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Delaborator</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.EnvExtension</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Command</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.MemoFix</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Util.LibraryNote</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.ForLean.ToExpr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Relation.Rfl</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.ForLean.ReduceEval</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.Typ</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Message</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.Dvd</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Linter</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Mathport.Rename</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Alias</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.BEq</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.LCtx</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Control.ForInStep.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.DList</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Fin.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Prod.Lex</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.HashMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.HashSet</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Expr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.PersistentHashMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Inaccessible</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.MonadBacktrack</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.PersistentHashSet</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.SqueezeScope</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Mathport.Attributes</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.LeftRight</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.SimpTrace</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.RunCmd</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.ShowTerm</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Linter.UnreachableTactic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.AttributeExtra</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.InstantiateMVars</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.Clear</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.AssertHypotheses</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Meta.Simp</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.NoMatch</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.SetNotation</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Int.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Control.ForInStep.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.WhatsNew</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.Macro</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Simpa</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Ordering.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Function</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.SavedState</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Linter.UnnecessarySeqFocus</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Control.ForInStep</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.CoeExt</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Char</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Ext.Attr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Init.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Frontend</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Simp</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Set</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.Cast</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.NormCast.Ext</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Linter</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.TypeClass</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Misc</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.NormCast.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Ext</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Logic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Congr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.LawfulMonad</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.Order</span>\n<span class=\"n\">Building</span> <span class=\"n\">Qq.MetaM</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.PairingHeap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Init.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Option.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Merge</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Nat.Gcd</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.String</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.BinomialHeap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.WF</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Option.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Meta</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Int.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.List.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.DiscrTree</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Lean.Meta.UnusedNames</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Relation.Trans</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Relation.Symm</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Int.DivMod</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Expr.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.List.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.String.Defs</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.AssocList</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.Alter</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Rat.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Rat.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Classes.RatCast</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Rat</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.HashMap.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Expr.Traverse</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Cases</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Simps.NotationClass</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.Array.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.RBMap.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Simps.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Expr.ReplaceRec</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Expr</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Core</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.HashMap.WF</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std.Data.HashMap</span>\n<span class=\"n\">Building</span> <span class=\"n\">Std</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.ToAdditive</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Logic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.SplitIfs</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Algebra.Classes</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.ZeroOne</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Nat.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Int.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Logic.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Algebra.Order</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Algebra.Functions</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Nat.Lemmas</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Logic.Nonempty</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Logic.Function.Basic</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Group.Defs</span>\n<span class=\"n\">Building</span> <span class=\"n\">IIScExperiments.GroupTheory</span>\n<span class=\"n\">Building</span> <span class=\"n\">IIScExperiments</span>\n</code></pre></div>\n<p>However I still get the line <code>unknown package 'IIScExperiments'</code> in <code>IIScExperiments.lean</code></p>",
        "id": 359914172,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684595826
    },
    {
        "content": "<p>All I can say is that <code>lake build</code> works for me. What do you mean precisely by \"However I still get the line <code>unknown package 'IIScExperiments'</code> in <code>IIScExperiments.lean</code>\"? How do you \"get\" this line?</p>",
        "id": 359914504,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684595943
    },
    {
        "content": "<p>Not from the terminal but <br>\n<code>IIScExperiments.lean:1:0\nMessages (1)\nIIScExperiments.lean:1:0\nunknown package 'IIScExperiments'\nAll Messages (1)</code></p>\n<p>from Lean infoview</p>",
        "id": 359914617,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684595979
    },
    {
        "content": "<p>So you are now in VS Code? Have you opened the root directory of the project folder using VS Code's \"open folder\" functionality?</p>",
        "id": 359914784,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684596022
    },
    {
        "content": "<p>Yes</p>",
        "id": 359914964,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684596089
    },
    {
        "content": "<p>Can you send a screenshot with the VS Code file manager open?</p>",
        "id": 359915157,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684596157
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/ukRTWbdUglKlvlnFuDteIw1H/iisc.png\">iisc.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ukRTWbdUglKlvlnFuDteIw1H/iisc.png\" title=\"iisc.png\"><img src=\"/user_uploads/3121/ukRTWbdUglKlvlnFuDteIw1H/iisc.png\"></a></div>",
        "id": 359915329,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684596242
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/JgJtUF9WTx6bB243ylMLElnJ/2023-05-21.png\">2023-05-21.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/JgJtUF9WTx6bB243ylMLElnJ/2023-05-21.png\" title=\"2023-05-21.png\"><img src=\"/user_uploads/3121/JgJtUF9WTx6bB243ylMLElnJ/2023-05-21.png\"></a></div>",
        "id": 359915478,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684596298
    },
    {
        "content": "<p>You have not opened the root directory of the project using VS Code's open folder functionality.</p>",
        "id": 359915616,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684596348
    },
    {
        "content": "<p>You've opened a folder containing the project</p>",
        "id": 359915643,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684596360
    },
    {
        "content": "<p>I see that I have been making a mistake. Now I get the result that you have showed me<br>\n<a href=\"/user_uploads/3121/XYO8ao_RW94GOE2Tpr7rZXG6/2023-05-21-2.png\">2023-05-21-2.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/XYO8ao_RW94GOE2Tpr7rZXG6/2023-05-21-2.png\" title=\"2023-05-21-2.png\"><img src=\"/user_uploads/3121/XYO8ao_RW94GOE2Tpr7rZXG6/2023-05-21-2.png\"></a></div>",
        "id": 359916096,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684596498
    },
    {
        "content": "<p>Thank you so much for your help and patience</p>",
        "id": 359916645,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1684596684
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"403479\">Hyunsang Hwang</span> has marked this topic as resolved.</p>",
        "id": 360001053,
        "sender_full_name": "Notification Bot",
        "timestamp": 1684651201
    }
]