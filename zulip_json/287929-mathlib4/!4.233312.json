[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3312\">!4#3312</a> compiles but suffers a <code>Name.append</code> error in <code>mk_real</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">mk_real</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">ùî†</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_antisymm</span>\n  <span class=\"bp\">¬∑</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Real.equivCauchy.cardinal_eq</span><span class=\"o\">]</span>\n    <span class=\"n\">apply</span> <span class=\"n\">mk_quotient_le.trans</span>\n    <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">mk_subtype_le</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_eq</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">‚Üê</span> <span class=\"n\">power_def</span><span class=\"o\">,</span> <span class=\"n\">mk_nat</span><span class=\"o\">,</span> <span class=\"n\">mkRat</span><span class=\"o\">,</span> <span class=\"n\">aleph0_power_aleph0</span><span class=\"o\">]</span>\n  <span class=\"bp\">¬∑</span> <span class=\"n\">convert</span> <span class=\"n\">mk_le_of_injective</span> <span class=\"o\">(</span><span class=\"n\">cantorFunction_injective</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">‚Üê</span> <span class=\"n\">power_def</span><span class=\"o\">,</span> <span class=\"n\">mk_bool</span><span class=\"o\">,</span> <span class=\"n\">mk_nat</span><span class=\"o\">,</span> <span class=\"n\">two_power_aleph0</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">3</span>\n    <span class=\"n\">norm_num</span>\n    <span class=\"n\">norm_num</span>\n</code></pre></div>\n<p>How do I fix the <code>Name.append</code> error?</p>",
        "id": 347472152,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680799720
    },
    {
        "content": "<p>More specifically it's at the <code>convert</code> line <code>convert mk_le_of_injective (cantorFunction_injective _ _)</code></p>",
        "id": 347472634,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680799848
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> can help, since I think they recently improved <code>convert</code></p>",
        "id": 347473093,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680799987
    },
    {
        "content": "<p>No, I think the same problem occurred with a closed PR that <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> created</p>",
        "id": 347475780,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680800743
    },
    {
        "content": "<p>If there's a <code>Name.append</code> error, I'd guess it has something to do with the errors in <a href=\"#narrow/stream/270676-lean4/topic/server.20error/near/345275677\">this message</a> and the next, which point to an error in Lean 4.</p>",
        "id": 347484778,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1680803493
    },
    {
        "content": "<p>I think I've tracked it down, will PR in a minute</p>",
        "id": 347484820,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1680803520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> What did you end up tracking down?</p>",
        "id": 347490059,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1680805163
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3314\">!4#3314</a></p>",
        "id": 347491110,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1680805520
    }
]