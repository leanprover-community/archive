[
    {
        "content": "<p>I've noticed that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MulOpposite.opHomeomorph#doc\">docs4#MulOpposite.opHomeomorph</a> has wrong <code>simp</code> lemmas generated by <code>simps</code> (compare with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_opposite.op_homeomorph\">docs#mul_opposite.op_homeomorph</a>).</p>",
        "id": 367785770,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687228616
    },
    {
        "content": "<p>First, it generates <code>apply_unop'</code> instead of <code>apply</code>. Second, it uses <code>unop'</code> instead of <code>unop</code>.</p>",
        "id": 367785811,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687228646
    },
    {
        "content": "<p>I can try to fix it tomorrow (in this and other files).</p>",
        "id": 367787667,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687229798
    },
    {
        "content": "<p>The first one is fallout from making it a structure</p>",
        "id": 367820392,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687244636
    },
    {
        "content": "<p>The second one is annoying to fix; I don't think simps allows custom projections on type synonyms, though it should.</p>",
        "id": 367820561,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687244667
    },
    {
        "content": "<p>If you don't want to recurse into <code>MulOpposite</code>/<code>AddOpposite</code>, you can add <code>PreOpposite</code> to <a href=\"https://github.com/leanprover-community/mathlib4/blob/6533094a68393dbab56cfb3ff2bed55c6978a84d/Mathlib/Tactic/Simps/Basic.lean#L837\">https://github.com/leanprover-community/mathlib4/blob/6533094a68393dbab56cfb3ff2bed55c6978a84d/Mathlib/Tactic/Simps/Basic.lean#L837</a><br>\nAnd indeed, <code>simps</code> doesn't (currently) allow custom projections for type synonyms.</p>",
        "id": 367925344,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1687267324
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/5434\">#5434</a> (awaiting CI)</p>",
        "id": 369010270,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687550890
    }
]