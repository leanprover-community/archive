[
    {
        "content": "<p>After <a href=\"https://github.com/leanprover-community/mathlib4/pull/7205\">#7205</a> was merged, which added a <code>pp.beta</code> pretty printer option, people started reporting linter errors (for example <a href=\"#narrow/stream/144837-PR-reviews/topic/.237205.20pp.2Ebeta/near/397342667\">here</a> and <a href=\"#narrow/stream/144837-PR-reviews/topic/.237341.20updateFinset/near/397477372\">here</a>). In particular, this one:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>info: [53/53] Linking runMathlibLinter\nlibc++abi: terminating due to uncaught exception of type lean::exception: cannot evaluate `[init]` declaration 'Lean.pp.beta' in the same module\n</code></pre></div>",
        "id": 398508661,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698246979
    },
    {
        "content": "<p>The PR was reverted in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7774\">#7774</a> and now I'm trying to reintroduce the option in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7910\">#7910</a>. This error is puzzling to me because the code in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7205\">#7205</a> seemed fine: there was one module that added the <code>pp.beta</code> option along with a function to read its value, and then in another the option was actually used. For <a href=\"https://github.com/leanprover-community/mathlib4/pull/7910\">#7910</a>, I moved this function into the second module to prevent the linter from failing (but I haven't looked into what the linter is doing).</p>",
        "id": 398508674,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698246983
    },
    {
        "content": "<p>Two and a half questions:</p>\n<ol>\n<li>If <a href=\"https://github.com/leanprover-community/mathlib4/pull/7910\">#7910</a> is passing CI, is it fine to merge? Are there other linting environments out there where this will fail? I want to prevent the need to revert again.</li>\n<li>Is this indicative of a bug in the linter?</li>\n<li>(How did <code>pp.beta</code> manage to get merged by bors and then later cause linting issues?)</li>\n</ol>",
        "id": 398508677,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698246984
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> has marked this topic as resolved.</p>",
        "id": 398511210,
        "sender_full_name": "Notification Bot",
        "timestamp": 1698247649
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Mis-click, or are you saying we need not worry about these questions? <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>)</p>",
        "id": 398511538,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698247732
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> has marked this topic as unresolved.</p>",
        "id": 398511686,
        "sender_full_name": "Notification Bot",
        "timestamp": 1698247775
    },
    {
        "content": "<p>The exception suggests the linter binary is trying to execute imported code without having run <code>enableInitializersExecution</code> before importing</p>",
        "id": 398514558,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1698248606
    },
    {
        "content": "<p>Phone in wet pocket <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 398514712,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1698248647
    },
    {
        "content": "<p>I believe that the CI failures after <a href=\"https://github.com/leanprover-community/mathlib4/pull/7205\">#7205</a> were sporadic (I should be able to confirm this by digging through some old branches if that would help). Given this, I would hazard answers as follows:</p>\n<ol>\n<li>Probably not</li>\n<li>Unclear</li>\n<li>We were (un)lucky on the CI runs for <a href=\"https://github.com/leanprover-community/mathlib4/pull/7205\">#7205</a></li>\n</ol>",
        "id": 398522491,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1698251155
    }
]