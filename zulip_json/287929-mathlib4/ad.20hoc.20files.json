[
    {
        "content": "<p>Can we generate an easy overview of which files are ad hoc ports? Is it just all the <code>.lean</code> files that don't have a porting header at the top?</p>",
        "id": 319801481,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673018234
    },
    {
        "content": "<p>Gives me this list:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Control</span><span class=\"bp\">/</span><span class=\"n\">Random.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Control</span><span class=\"bp\">/</span><span class=\"n\">SimpSet.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Control</span><span class=\"bp\">/</span><span class=\"n\">Writer.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Array</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Array</span><span class=\"bp\">/</span><span class=\"n\">Defs.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">BinaryHeap.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">ByteArray.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Equiv</span><span class=\"bp\">/</span><span class=\"n\">Functor.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Finset</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Fintype</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">HashMap.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">KVMap.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">List</span><span class=\"bp\">/</span><span class=\"n\">Card.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">List</span><span class=\"bp\">/</span><span class=\"n\">Chain.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">List</span><span class=\"bp\">/</span><span class=\"n\">Nodup.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">List</span><span class=\"bp\">/</span><span class=\"n\">Pairwise.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">List</span><span class=\"bp\">/</span><span class=\"n\">Perm.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">List</span><span class=\"bp\">/</span><span class=\"n\">Range.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Multiset</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Multiset</span><span class=\"bp\">/</span><span class=\"n\">Nodup.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Nat</span><span class=\"bp\">/</span><span class=\"n\">ForSqrt.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">String</span><span class=\"bp\">/</span><span class=\"n\">Defs.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">String</span><span class=\"bp\">/</span><span class=\"n\">Lemmas.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">UInt.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">UnionFind.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Classes.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Functions.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Order.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">Align.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">CcLemmas.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">Classical.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">Control</span><span class=\"bp\">/</span><span class=\"n\">Combinators.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">Core.lean</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Bool</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span>\n</code></pre></div>",
        "id": 319802882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673018709
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4000\">!4#4000</a> knocks one off this list</p>",
        "id": 358533834,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684173357
    },
    {
        "content": "<p>Many of these ad-hoc files seem to be missing <code>#align</code> statements; did we put the aligns in another file, or are we just relying on the names not having changed?</p>",
        "id": 358534563,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684173510
    },
    {
        "content": "<p>Did we have #align when those were added? :)</p>",
        "id": 358535248,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1684173672
    },
    {
        "content": "<p>It seems we did, but perhaps added manually</p>",
        "id": 358537228,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684174159
    },
    {
        "content": "<p>Having <code>#align</code> after every decl was a choice made later -- in fact, earlier, the idea was that <code>#align</code> were to be added only in instances when one really needed it. But for some files, almost every decl needed it. I had asked Mario, can we, instead of \"whitelisting\" and writing in <code>#align</code>, get a file that had <code>#align</code> for everything, and delete the ones that were tautological? And I think that then moved to \"don't delete tautological #align at all\".</p>",
        "id": 358546788,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1684176731
    }
]