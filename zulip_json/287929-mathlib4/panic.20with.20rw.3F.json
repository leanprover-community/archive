[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">List</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">Lean.versionString</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">WithBot.unbot</span> <span class=\"o\">(</span><span class=\"n\">minimum</span> <span class=\"o\">([</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">let</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">foo</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"bp\">?</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>typing this gives the error<br>\n\"Lean server printed an error: PANIC at Lean.Meta.whnfEasyCases Lean.Meta.WHNF:317:22: loose bvar in expression\"<br>\nwith the output page saying</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">PANIC</span> <span class=\"n\">at</span> <span class=\"n\">Lean.Meta.whnfEasyCases</span> <span class=\"n\">Lean.Meta.WHNF</span><span class=\"o\">:</span><span class=\"mi\">317</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span> <span class=\"n\">loose</span> <span class=\"n\">bvar</span> <span class=\"k\">in</span> <span class=\"n\">expression</span>\n<span class=\"n\">PANIC</span> <span class=\"n\">at</span> <span class=\"n\">Lean.Meta.whnfEasyCases</span> <span class=\"n\">Lean.Meta.WHNF</span><span class=\"o\">:</span><span class=\"mi\">317</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span> <span class=\"n\">loose</span> <span class=\"n\">bvar</span> <span class=\"k\">in</span> <span class=\"n\">expression</span>\n</code></pre></div>\n<p>This is on 4.0.0-nightly-2023-08-03</p>",
        "id": 382439334,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1691355052
    },
    {
        "content": "<p>This seems superficially related to <a href=\"#narrow/stream/287929-mathlib4/topic/panic.20and.20error.20with.20rw.3F\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/panic.20and.20error.20with.20rw.3F</a>, but this is on a version after the fix for that was merged</p>",
        "id": 382439472,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1691355134
    },
    {
        "content": "<p>Made <a href=\"https://github.com/leanprover-community/mathlib4/pull/6411\">#6411</a> for this</p>",
        "id": 382457513,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1691367799
    }
]