[
    {
        "content": "<p>Guess what the goal is at this sorry?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p><code>Complex.abs ↑z ≤ ↑z</code>, due to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Complex.int_cast_abs#doc\">docs#Complex.int_cast_abs</a> / <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complex.int_cast_abs\">docs3#complex.int_cast_abs</a></p>\n</div></div>",
        "id": 400510974,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699269616
    }
]