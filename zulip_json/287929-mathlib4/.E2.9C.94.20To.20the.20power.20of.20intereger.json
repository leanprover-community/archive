[
    {
        "content": "<p>What types of numbers can be raised to the power of integer?</p>",
        "id": 339605208,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677958736
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/div_inv_monoid\">docs#div_inv_monoid</a>?</p>",
        "id": 339605323,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677958819
    },
    {
        "content": "<p>Sorry, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=DivInvMonoid#doc\">docs4#DivInvMonoid</a></p>",
        "id": 339605345,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677958854
    },
    {
        "content": "<p>Invertible ones?</p>",
        "id": 339605477,
        "sender_full_name": "Reid Barton",
        "timestamp": 1677958986
    },
    {
        "content": "<p>I confused why <code>ℝ</code> cannot be.</p>",
        "id": 339606008,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677959341
    },
    {
        "content": "<p>I should think it can be. Do you have missing imports?</p>",
        "id": 339606407,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677959617
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">z</span> <span class=\"c1\">-- works</span>\n</code></pre></div>\n<p>Oh -- this is the mathlib4 stream -- maybe something isn't ported yet?</p>",
        "id": 339606510,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677959687
    },
    {
        "content": "<p>It should just work. Can you give a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 339606569,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677959733
    },
    {
        "content": "<p>Oh I missed <code>noncomputable</code> in my definition. It was not needed for multiplying real numbers but for powers it is required (I don't understand why).</p>",
        "id": 339610958,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677962924
    },
    {
        "content": "<p>The inverse of real numbers is not computable</p>",
        "id": 339611671,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677963403
    },
    {
        "content": "<p>Because the definition of <code>x / y</code> is <code>if h : y = 0 then 0 else some_computable_cauchy_sequence h</code></p>",
        "id": 339611700,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677963432
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.has_inv/src\">src#real.has_inv</a></p>",
        "id": 339611720,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677963447
    },
    {
        "content": "<p>Ah, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cau_seq.completion.Cauchy.has_inv/src\">src#cau_seq.completion.Cauchy.has_inv</a> is where the details are</p>",
        "id": 339611845,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677963529
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 339612422,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677964041
    }
]