[
    {
        "content": "<p>As courses using Lean 4 will start in a couple of weeks (including mine), I would like to suggest having periodic tagged commits. Just a lightweight tag is fine. This is so <code>lakefile.lean</code> in a course repository can point to tagged versions to ensure compatibility.</p>\n<p>Specifically, what would be nice is for coordinated labels for <code>mathlib</code>, <code>Std</code>, <code>Qq</code>, <code>docgen4</code> and <code>aesop</code> so that any project that uses versions with the same tags and has the same lean-toolchain as the tagged mathlib should have compatible dependencies. </p>\n<p>My main concern is that students will run <code>lake update</code> and break their clones.  I can point to specific commits in the lakefile but that is more fiddly.</p>",
        "id": 316707405,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671445365
    },
    {
        "content": "<blockquote>\n<p>My main concern is that students will run lake update and break their clones</p>\n</blockquote>\n<p>Is that a reasonable concern? You are effectively trying to reinvent the manifest file inside lakefile.lean.</p>",
        "id": 316709444,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671446116
    },
    {
        "content": "<p>I support the general idea though, this would best be coordinated with sufficiently frequent Lean stable releases</p>",
        "id": 316709613,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671446185
    },
    {
        "content": "<p>It would be great of course if <code>lake update</code> simply updated you to the next coordinated tag if you already use them</p>",
        "id": 316709816,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671446257
    },
    {
        "content": "<p>What I meant is that each time I update to a newer mathlib, I have to update all commits in the manifest file and check that the setup works. Also my course page will depend on other repositories of mine and I have to fix those as well.</p>\n<p>Not that there is any fundamental problem with this, but if instead I could point to commits with the same name it will be easier and I am less likely to make an error. But besides this, if say 4 courses are being taught each of us teaching will have to do this every time we update.</p>",
        "id": 316712193,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671447052
    },
    {
        "content": "<p>Whenever I've taught, I've never updated mathlib at all during the course. It seemed to me that this was asking for trouble.</p>",
        "id": 316713507,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671447509
    },
    {
        "content": "<p>That's a lot easier to do with mathlib3. With mathlib4 we want to use things as they come online</p>",
        "id": 316718032,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671449147
    },
    {
        "content": "<p>You can't ask for coordinated releases and \"things as they come online\" at the same time :) . I would expect coordinated releases to happen about very month or so. If you want to update mathlib4 more frequently, there's no way around coordinating stuff manually, but at least your students won't be exposed to that.</p>",
        "id": 316720426,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671449935
    },
    {
        "content": "<p>An \"update only these specific packages\" Lake command would be helpful though</p>",
        "id": 316720679,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671450003
    },
    {
        "content": "<p>I agree. I meant with a modest delay as they come online, not a whole semester. And I meant some intermediate stability, like lean's nightly builds, not necessarily M-x` level.</p>",
        "id": 316722214,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671450566
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/287929-mathlib4/topic/tagged.20releases.3F/near/316709444\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>My main concern is that students will run lake update and break their clones</p>\n</blockquote>\n<p>Is that a reasonable concern? You are effectively trying to reinvent the manifest file inside lakefile.lean.</p>\n</blockquote>\n<p>Some empirical data (nothing serious but in case it is amusing) - two students did indeed run <code>lake update</code> and break their builds.</p>",
        "id": 324310000,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674919559
    },
    {
        "content": "<p>Perhaps <code>upgrade</code> would be a more destructive-sounding name</p>",
        "id": 324310587,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674919736
    },
    {
        "content": "<p>Many of these are mathematics students so they may find <code>upgrade</code> more positive even. The group is small enough that I just fix for those who make mistakes instead of defending against their creativity. But here the issue is that a warning that it may be good to run <code>lake update</code> is given.</p>",
        "id": 324311549,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674920098
    },
    {
        "content": "<p>Then you have some conflict between your lakefile and manifest</p>",
        "id": 324311832,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674920207
    },
    {
        "content": "<p>I believe it just has to do with <code>docgen4</code> and the mode when it is on and off. Everything is running fine, just emitting this warning.</p>",
        "id": 324311953,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674920266
    },
    {
        "content": "<p>I don't think mathlib4 currently has this warning, so it can definitely be avoided</p>",
        "id": 324312130,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674920330
    },
    {
        "content": "<p>Or maybe some inconsistency between direct and transitive dependencies, not causing an error but a warning.</p>",
        "id": 324312133,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674920331
    },
    {
        "content": "<p>Actually I think only I see this warning, and only when I run <code>lake -Kdoc=on build PnP2023:docs</code>.</p>",
        "id": 324312377,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674920430
    },
    {
        "content": "<p>So it may have been actual errors of students that gave them the warning. Or maybe they updated seeing some README.</p>",
        "id": 324312506,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674920487
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> I am teaching in Lean 4 at the moment and have already needed to update my mathlib; I expect to do this regularly.  My setup (which I copied from <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> who is also doing this) doesn't seem difficult for the students.  Here's how it works:</p>\n<ul>\n<li>when I want to bump mathlib I change the commit listed in the <a href=\"https://github.com/hrmacbeth/math2001/blob/main/lakefile.lean\">lakefile</a></li>\n<li>then I locally run <code>lake update</code> and it changes the commits of all dependencies in the <a href=\"https://github.com/hrmacbeth/math2001/blob/main/lake-manifest.json\">lake-manifest</a> to the versions of those dependencies used in that version of mathlib</li>\n<li>then the students just have to pull and run <code>lake exe cache get</code>; they never run <code>lake update</code> themselves.  (Actually instead of pulling directly they run <a href=\"https://github.com/hrmacbeth/math2001/blob/main/scripts/pull-updates\">this script</a> Rob wrote which tries to deal with local changes)</li>\n</ul>",
        "id": 324315537,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674921690
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> <br>\nI have broadly a similar system, with students having private repositories for which they have instructions to set upstream to my repository. The intention is exactly that only I do updates and these propagate when they pull from upstream and merge.</p>\n<p>What happened is a couple of students ran <code>lake update</code> anyway. In one case I have no idea what prompted this - I noticed the break in the students CI, told him and fixed it. The other case there was some other installation problem and the student thought <code>lake update</code> will help.</p>",
        "id": 324316225,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674921972
    },
    {
        "content": "<p>Maybe at some point the students ran <code>lake build</code>?  This emits a warning that you should <code>lake update</code> if you're not on the latest version of everything (that warning is super confusing and I think it should be changed).</p>",
        "id": 324316458,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674922073
    },
    {
        "content": "<p>That is quite likely.</p>",
        "id": 324316533,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674922091
    },
    {
        "content": "<p>I have not had the students run <code>lake build</code> (partly for this reason).  My file hierarchy is only a few files deep so I can get away without it, just doing <code>lake exe cache get</code> for the mathlib build.</p>",
        "id": 324316607,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674922125
    },
    {
        "content": "<p>They are indeed required to run <code>lake build</code> directly or indirectly.</p>",
        "id": 324316612,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674922126
    },
    {
        "content": "<p>It might be too late now, but maybe you can write a script which does <code>lake build</code> but suppresses the output :-)</p>",
        "id": 324316827,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674922207
    },
    {
        "content": "<p>Or maybe just PR a change to lake to rephrase that confusing message!</p>",
        "id": 324316895,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674922229
    },
    {
        "content": "<p>I got the students to run a command line program in the first lab (not write it, just edit the imports). I am mixing programming with proofs and matheematics, so I have taken the view that students should learn to deal with low-level issues at least a bit.</p>",
        "id": 324316912,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674922239
    },
    {
        "content": "<p>It is a small enough group and I help them when needed. And many are smart with such things already.</p>",
        "id": 324317022,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674922284
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> I don't get that warning when running <code>lake build</code> on your repo. It really should be shown only when you've changed the lakefile without running <code>lake update</code> afterwards</p>",
        "id": 324319522,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674923313
    },
    {
        "content": "<p>I'm not sure exactly the circumstances when this happens, but I have seen it a few times.  Here was one last month, if you remember:<br>\n<a href=\"#narrow/stream/287929-mathlib4/topic/aesop/near/317587174\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/aesop/near/317587174</a></p>",
        "id": 324319803,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674923415
    },
    {
        "content": "<p>I believe I also saw it recently when temporarily working off a fork of Std (not sure I am exactly remembering the circumstances)</p>",
        "id": 324319928,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674923464
    },
    {
        "content": "<p>Kevin, that sounds great for teaching, but should probably be discussed in another topic - if a warning make sense on the command line, it should make sense in VS Code as well</p>",
        "id": 324322505,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674924567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/tagged.20releases.3F/near/324319803\">said</a>:</p>\n<blockquote>\n<p>I'm not sure exactly the circumstances when this happens, but I have seen it a few times.  Here was one last month, if you remember:<br>\n<a href=\"#narrow/stream/287929-mathlib4/topic/aesop/near/317587174\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/aesop/near/317587174</a></p>\n</blockquote>\n<p>Yes, that was such an unsynchronized change where the warning should indeed be shown</p>",
        "id": 324322976,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674924732
    },
    {
        "content": "<p>(moved -- thanks)</p>",
        "id": 324323581,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674925038
    },
    {
        "content": "<p>I get the <code>lake update</code> warning every single time because I'm on Windows.</p>",
        "id": 324336780,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1674931880
    },
    {
        "content": "<p>Ah, I think someone mentioned that before, but we don't have a Lake issue for it yet afaics</p>",
        "id": 324351008,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674942021
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/tagged.20releases.3F/near/316707405\">said</a>:</p>\n<blockquote>\n<p>As courses using Lean 4 will start in a couple of weeks (including mine), I would like to suggest having periodic tagged commits. Just a lightweight tag is fine. This is so <code>lakefile.lean</code> in a course repository can point to tagged versions to ensure compatibility.</p>\n<p>Specifically, what would be nice is for coordinated labels for <code>mathlib</code>, <code>Std</code>, <code>Qq</code>, <code>docgen4</code> and <code>aesop</code> so that any project that uses versions with the same tags and has the same lean-toolchain as the tagged mathlib should have compatible dependencies. </p>\n<p>My main concern is that students will run <code>lake update</code> and break their clones.  I can point to specific commits in the lakefile but that is more fiddly.</p>\n</blockquote>\n<p>Indeed the student whose clone broke yesterday (fixed easily) was no windows.<br>\nJust to revive my suggestion, perhaps it will be good to have \"fortnightly\" tags (just lightweight tags to point to) for the major repositories, say on the 10th and 25th of the month, so that they work. And a corresponding tag for the lean-toolchain - just an alias to the nightly actually used in the coordniated tagged versions.</p>\n<p>The idea is to point our lakefiles to these tags only, and periodically shift to the next tag. This is not essential (my course is going fine for example) but may help all those teaching.</p>",
        "id": 324369902,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1674956886
    },
    {
        "content": "<p>On Windows I see the \"manifest out of date\" warning every single time I run <code>lake build</code> or <code>lake exe cache get</code>.</p>",
        "id": 324416508,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674990324
    }
]