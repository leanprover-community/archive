[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4063\">!4#4063</a> I've got two remaining errors in this file, both regarding <code>convert</code> and failures to synthesise things with metavariables. Specifying implicit arguments, though, generates lots of unsolvable goals even if <code>using 1</code> is put in</p>",
        "id": 359299979,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684378910
    },
    {
        "content": "<p>so how can they be fixed?</p>",
        "id": 359300032,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684378929
    },
    {
        "content": "<p>OK, one error has been fixed, but the other one will not budge</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">right_inv</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">toFunAlgHom</span> <span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">invFun</span> <span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">n</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">invFun</span><span class=\"o\">,</span> <span class=\"n\">AlgHom.map_sum</span><span class=\"o\">,</span> <span class=\"n\">stdBasisMatrix</span><span class=\"o\">,</span> <span class=\"n\">apply_ite</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">algebraMap</span> <span class=\"n\">R</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">smul_eq_mul</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_boole</span><span class=\"o\">,</span> <span class=\"n\">toFunAlgHom_apply</span><span class=\"o\">,</span> <span class=\"n\">RingHom.map_zero</span><span class=\"o\">,</span> <span class=\"n\">RingHom.map_one</span><span class=\"o\">,</span> <span class=\"n\">Matrix.map_apply</span><span class=\"o\">,</span>\n    <span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">smul_def</span><span class=\"o\">]</span>\n  <span class=\"n\">convert</span> <span class=\"n\">Finset.sum_product</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">matrix_eq_sum_std_basis</span>\n</code></pre></div>\n<p>It may have to do with <code>apply_ite ⇑(algebraMap R A)</code> not working</p>",
        "id": 359312065,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684389369
    }
]