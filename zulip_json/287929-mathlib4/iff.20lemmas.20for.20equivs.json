[
    {
        "content": "<p>We have many lemmas like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Homeomorph.isCompact_image#doc\">docs#Homeomorph.isCompact_image</a>. How hard is it to autogenerate them?</p>\n<ul>\n<li>Ideally, they should be completely autogenerated: the definition of <code>IsCompact</code> only uses topology and homeomorphisms preserve topology. AFAIR, I was told that it's hard. Also, we usually want to prove one of implications with much weaker assumptions on the map.</li>\n<li>Less automatic approach is to autogenerate both <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Homeomorph.isCompact_image#doc\">docs#Homeomorph.isCompact_image</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Homeomorph.isCompact_preimage#doc\">docs#Homeomorph.isCompact_preimage</a> from one implication, giving user a choice between <code>preimage</code> (easy for <code>IsOpen</code>) and <code>image</code> (easy for <code>IsCompact</code>).</li>\n<li>Or tell me that the time of people who can write meta code is too valuable to automate such small particular cases (properties of sets under <code>EquivLike</code> maps).</li>\n</ul>",
        "id": 369864943,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687827915
    },
    {
        "content": "<p>Jake Levinson and I have been thinking again about auto-generation, but no promises. :-)</p>",
        "id": 369865745,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687828277
    },
    {
        "content": "<p>The 2nd half of your first bullet point is why I think this automation never became very urgent in practice.</p>",
        "id": 369909488,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1687843292
    },
    {
        "content": "<p>Our auto-generation method is meant to work in just one direction at a time, and to just pick up surjective / injective / etc hypotheses as needed.</p>",
        "id": 369910195,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687843459
    }
]