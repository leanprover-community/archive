[
    {
        "content": "<p>What's the plan for this file and the downstream <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/data/buffer/parser/numeral\">port-status#data/buffer/parser/numeral</a>? cc <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span></p>",
        "id": 367214939,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687020160
    },
    {
        "content": "<p>IIRC, <code>start_port.sh</code> doesn't work for lean core files, so you have to copy the file manually from mathport output</p>",
        "id": 367214998,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687020185
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib-port-status/file/data/buffer/basic\">port-status#data/buffer/basic</a> is marked \"not needed\" with no explanation; without this the <code>numeral</code> file is unportable.</p>",
        "id": 367215101,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687020232
    },
    {
        "content": "<p>Do we need/want to port parser/numeral?</p>",
        "id": 367219075,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1687021713
    },
    {
        "content": "<p>I understood that lean 3 buffer was replaced by something else</p>",
        "id": 367219251,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1687021798
    },
    {
        "content": "<p>I don't think we want <code>data.buffer.parser.numeral</code> either.</p>",
        "id": 367286116,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687057446
    },
    {
        "content": "<p>lean 3 <code>buffer</code> is basically <code>Array</code>, although for character buffers you probably want to use <code>String</code> in lean 4</p>",
        "id": 367292619,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687062023
    },
    {
        "content": "<p>I don't think it is unportable, but it might require a substantial rewrite, much like <code>data.rbmap</code></p>",
        "id": 367292640,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687062054
    },
    {
        "content": "<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span> <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span>; are you happy if this doesn't end up in the \"100% ported\" mathlib4?</p>",
        "id": 374029181,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689008455
    },
    {
        "content": "<p>I would guess that we can (painfully) port <code>data/buffer</code> from <code>lean3port</code> (replacing <code>buffer X</code> with <code>Array X</code>), and then everything downstream will work without issue</p>",
        "id": 374029897,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689008614
    },
    {
        "content": "<p>I'm okay if it doesn't get ported as it is. I'd still want us to have a moral equivalent, like Mario said in a meeting the other week, that we can have proofs about how lean parsing works now.</p>",
        "id": 374034746,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1689009805
    }
]