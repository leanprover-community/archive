[
    {
        "content": "<p>In this PR there is one error left and I have no idea how to fix it: we have a statement about continuity with a specific topology, but in the proof Lean seems to forget what the topology is supposed to be. Code:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/2013/files#diff-6fbe09f46d499557f39aa50ba472af8c50434af5f30365bcb77c018bf486c7ceR178-R187\">https://github.com/leanprover-community/mathlib4/pull/2013/files#diff-6fbe09f46d499557f39aa50ba472af8c50434af5f30365bcb77c018bf486c7ceR178-R187</a></p>",
        "id": 327449957,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1676248551
    },
    {
        "content": "<p>This is a known problem, <code>{}</code> notation for constructors doesn't work when the instance arguments to the constructor aren't canonical</p>",
        "id": 327453181,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676251320
    },
    {
        "content": "<p>I pushed a fix</p>",
        "id": 327453488,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676251658
    },
    {
        "content": "<p>I've tried it with <code>⟨..⟩</code>, but that did not work either. It did not cross my mind to use <code>ContinuousSMul.mk</code>. To me it sounds that this is a Lean error, right?</p>",
        "id": 327457625,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1676256168
    },
    {
        "content": "<p>I asked about this before, it's apparently somewhat by design</p>",
        "id": 327457950,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676256518
    },
    {
        "content": "<p>There's a thread I can't search for on mobile about <code>(_)</code></p>",
        "id": 327457981,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676256551
    },
    {
        "content": "<p>You can do, e.g., <code>letI := yourInstance; { ... }</code></p>",
        "id": 327468793,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1676266574
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Topology.2EAlgebra.2EMulAction.20!4.232013/near/327453181\">said</a>:</p>\n<blockquote>\n<p>This is a known problem, <code>{}</code> notation for constructors doesn't work when the instance arguments to the constructor aren't canonical</p>\n</blockquote>\n<p>What does canonical mean in this context?</p>",
        "id": 327469098,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1676266777
    },
    {
        "content": "<p>\"Canonical\" means \"can be found by instance search, not unification\"</p>",
        "id": 327469282,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1676266869
    }
]