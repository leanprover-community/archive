[
    {
        "content": "<p>Mathport translated an <code>@{irreducible] def</code> to an <code>irreducible_def</code>. Is there a reason to prefer this to the former? I had a bit of trouble with <code>irreducible_def</code> and actually getting Lean to unfold the definition, but presumably I'm missing something.</p>",
        "id": 348523261,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1681233957
    },
    {
        "content": "<p><code>irreducible_def foo</code> generates a lemma <code>foo_def</code>  which unfolds the definition</p>",
        "id": 348532837,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1681236873
    },
    {
        "content": "<p>okay, so do we prefer <code>irreducible_def</code> over <code>@[irreducible] def</code> for that reason then?</p>",
        "id": 348537091,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1681238206
    },
    {
        "content": "<p>The advantage of <code>irreducible_def</code> is that it also applies to the kernel.  <code>@[irreducible]</code> only affects the elaborator.</p>",
        "id": 348544121,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1681240456
    },
    {
        "content": "<p>There were some issues with <code>protected irreducible_def</code>.  These are fixed by <a href=\"https://github.com/leanprover-community/mathlib4/pull/3395\">!4#3395</a></p>",
        "id": 348544174,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1681240479
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110044\">Chris Hughes</span> <a href=\"#narrow/stream/287929-mathlib4/topic/irreducible_def/near/348532837\">said</a>:</p>\n<blockquote>\n<p><code>irreducible_def foo</code> generates a lemma <code>foo_def</code>  which unfolds the definition</p>\n</blockquote>\n<p>I actually didn't know about this until today, so there are some ported files where I changed an <code>irreducible_def</code> to an <code>@[irreducible] def</code> that should probably be changed back.</p>",
        "id": 348549122,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1681242009
    },
    {
        "content": "<p>Another open issue is that <code>irreducible_def</code> doesn't work with <code>to_additive</code>.</p>",
        "id": 348549223,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1681242050
    },
    {
        "content": "<p>I think almost everything should be an <code>irreducible_def</code>.</p>",
        "id": 348549433,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1681242127
    },
    {
        "content": "<p>I think it would be really nice to add a paragraph about <code>irreducible_def</code> to the porting wiki, because I was really puzzled by this too.</p>",
        "id": 348560547,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681246524
    },
    {
        "content": "<p>I have added a paragraph about this to the <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Mathlib3-Synchronisation\">#port-guide</a></p>",
        "id": 348569115,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1681250567
    },
    {
        "content": "<p>Note that <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-wiki</a> doesn't like to the porting wiki.  The paragraph is here: <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki#irreducible_def\">https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki#irreducible_def</a></p>",
        "id": 348572941,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1681252366
    },
    {
        "content": "<p>We have too many <code>port</code> related linkifiers. Fixed.</p>",
        "id": 348574106,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1681252881
    },
    {
        "content": "<p>Gabriel, I don't want you to think I don't like <code>irreducible_def</code> but the following took me a while to understand in a non-minimized context:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.IrreducibleDef</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n<span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Bar</span> <span class=\"kd\">extends</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">}</span>\n\n<span class=\"n\">irreducible_def</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Bar</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"k\">with</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>resulting in error messages like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Scratch.lean</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">0</span>\n<span class=\"n\">function</span> <span class=\"n\">expected</span>\n  <span class=\"n\">y</span> <span class=\"n\">src</span><span class=\"bp\">✝</span>\n<span class=\"n\">Scratch.lean</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">0</span>\n<span class=\"n\">tactic</span> <span class=\"bp\">'</span><span class=\"n\">rewrite'</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">did</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"kd\">instance</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">pattern</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">target</span> <span class=\"n\">expression</span>\n  <span class=\"n\">Wrapper.value</span><span class=\"bp\">✝</span> <span class=\"n\">wrapped</span><span class=\"bp\">✝</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">sorryAx</span> <span class=\"o\">(</span><span class=\"kt\">Sort</span> <span class=\"n\">u_1</span><span class=\"o\">)</span> <span class=\"n\">true</span>\n</code></pre></div>\n<p>with a Lean server error on top:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">03</span><span class=\"bp\">-</span><span class=\"mi\">31</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"mi\">742</span><span class=\"n\">d053a97bd</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n<span class=\"n\">Watchdog</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Got</span> <span class=\"bp\">`</span><span class=\"n\">shutdown</span><span class=\"bp\">`</span> <span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">an</span> <span class=\"bp\">`</span><span class=\"n\">exit</span><span class=\"bp\">`</span> <span class=\"n\">notification</span>\n<span class=\"n\">Watchdog</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Got</span> <span class=\"bp\">`</span><span class=\"n\">shutdown</span><span class=\"bp\">`</span> <span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">an</span> <span class=\"bp\">`</span><span class=\"n\">exit</span><span class=\"bp\">`</span> <span class=\"n\">notification</span>\n<span class=\"o\">[</span><span class=\"n\">Error</span> <span class=\"bp\">-</span> <span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">37</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">]</span> <span class=\"n\">Connection</span> <span class=\"n\">to</span> <span class=\"n\">server</span> <span class=\"n\">got</span> <span class=\"n\">closed.</span> <span class=\"n\">Server</span> <span class=\"n\">will</span> <span class=\"n\">not</span> <span class=\"n\">be</span> <span class=\"n\">restarted.</span>\n<span class=\"o\">[</span><span class=\"n\">Error</span> <span class=\"bp\">-</span> <span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">37</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">]</span> <span class=\"n\">Stopping</span> <span class=\"n\">server</span> <span class=\"n\">failed</span>\n  <span class=\"n\">Message</span><span class=\"o\">:</span> <span class=\"n\">Pending</span> <span class=\"n\">response</span> <span class=\"n\">rejected</span> <span class=\"n\">since</span> <span class=\"n\">connection</span> <span class=\"n\">got</span> <span class=\"n\">disposed</span>\n  <span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"mi\">32097</span>\n<span class=\"n\">Watchdog</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Got</span> <span class=\"bp\">`</span><span class=\"n\">shutdown</span><span class=\"bp\">`</span> <span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">an</span> <span class=\"bp\">`</span><span class=\"n\">exit</span><span class=\"bp\">`</span> <span class=\"n\">notification</span>\n<span class=\"o\">[</span><span class=\"n\">Error</span> <span class=\"bp\">-</span> <span class=\"mi\">21</span><span class=\"o\">:</span><span class=\"mi\">27</span><span class=\"o\">:</span><span class=\"mi\">42</span><span class=\"o\">]</span> <span class=\"n\">Connection</span> <span class=\"n\">to</span> <span class=\"n\">server</span> <span class=\"n\">got</span> <span class=\"n\">closed.</span> <span class=\"n\">Server</span> <span class=\"n\">will</span> <span class=\"n\">not</span> <span class=\"n\">be</span> <span class=\"n\">restarted.</span>\n<span class=\"o\">[</span><span class=\"n\">Error</span> <span class=\"bp\">-</span> <span class=\"mi\">21</span><span class=\"o\">:</span><span class=\"mi\">27</span><span class=\"o\">:</span><span class=\"mi\">42</span><span class=\"o\">]</span> <span class=\"n\">Stopping</span> <span class=\"n\">server</span> <span class=\"n\">failed</span>\n  <span class=\"n\">Message</span><span class=\"o\">:</span> <span class=\"n\">Pending</span> <span class=\"n\">response</span> <span class=\"n\">rejected</span> <span class=\"n\">since</span> <span class=\"n\">connection</span> <span class=\"n\">got</span> <span class=\"n\">disposed</span>\n  <span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"mi\">32097</span>\n<span class=\"n\">elan</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"mi\">4</span><span class=\"n\">a1b1b918</span> <span class=\"mi\">2022</span><span class=\"bp\">-</span><span class=\"mi\">09</span><span class=\"bp\">-</span><span class=\"mi\">13</span><span class=\"o\">)</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">03</span><span class=\"bp\">-</span><span class=\"mi\">31</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"mi\">742</span><span class=\"n\">d053a97bd</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n<span class=\"n\">Cannot</span> <span class=\"n\">send</span> <span class=\"n\">message</span> <span class=\"n\">to</span> <span class=\"n\">unknown</span> <span class=\"n\">document</span> <span class=\"bp\">'</span><span class=\"n\">file</span><span class=\"o\">:</span><span class=\"bp\">///</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">pmassot</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Hom.lean'</span><span class=\"o\">:</span>\n<span class=\"o\">{</span><span class=\"s2\">\"params\"</span><span class=\"o\">:{</span><span class=\"s2\">\"uri\"</span><span class=\"o\">:</span><span class=\"s2\">\"file:///home/pmassot/lean/mathlib4/Mathlib/Algebra/Algebra/Hom.lean\"</span><span class=\"o\">,</span><span class=\"s2\">\"sessionId\"</span><span class=\"o\">:</span><span class=\"s2\">\"10413944821563192556\"</span><span class=\"o\">},</span><span class=\"s2\">\"method\"</span><span class=\"o\">:</span><span class=\"s2\">\"$/lean/rpc/keepAlive\"</span><span class=\"o\">,</span><span class=\"s2\">\"jsonrpc\"</span><span class=\"o\">:</span><span class=\"s2\">\"2.0\"</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 349200991,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681416040
    },
    {
        "content": "<p>Probably the server error has nothing to do with this, but it happens quite often tonight.</p>",
        "id": 349201387,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681416165
    },
    {
        "content": "<p>Oh actually it has nothing to do with <code>sorry</code> either. It also fails when using an actual proof.</p>",
        "id": 349201565,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681416232
    },
    {
        "content": "<p>So the new mwe is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.IrreducibleDef</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n<span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Bar</span> <span class=\"kd\">extends</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">}</span>\n\n<span class=\"n\">irreducible_def</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Bar</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"k\">with</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>where replacing <code>irreducible_def</code> by <code>def</code> works just fine.</p>",
        "id": 349201852,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681416321
    },
    {
        "content": "<p>Thank you for the bug report!  Here's an even shorter MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.IrreducibleDef</span>\n<span class=\"n\">irreducible_def</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"mi\">42</span><span class=\"bp\">;</span> <span class=\"n\">x</span>\n</code></pre></div>",
        "id": 349204562,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1681417252
    },
    {
        "content": "<p>Do you want me to open an issue in the mathlib4 repo?</p>",
        "id": 349204836,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681417338
    },
    {
        "content": "<p>I've already pushed a fixed to the latest irreducible_def refactor <a href=\"https://github.com/leanprover-community/mathlib4/pull/3399\">!4#3399</a></p>",
        "id": 349205040,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1681417405
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 349206654,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681417938
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> it would be nice to merge  <a href=\"https://github.com/leanprover-community/mathlib4/pull/3399\">!4#3399</a> rather soon if you are happy with it since it blocks progress.</p>",
        "id": 349277339,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681454218
    }
]