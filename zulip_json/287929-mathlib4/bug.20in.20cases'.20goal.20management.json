[
    {
        "content": "<p>There seems to be a bug in <code>cases'</code> related to goal management:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Cases</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">hpnq</span> <span class=\"n\">hpq</span>\n  <span class=\"n\">apply</span> <span class=\"n\">hpnq</span>\n  <span class=\"n\">cases'</span> <span class=\"n\">hpq</span> <span class=\"k\">with</span> <span class=\"n\">hp</span> <span class=\"n\">hq</span>\n  <span class=\"n\">assumption</span>\n  <span class=\"c1\">-- (kernel) declaration has metavariables '_example'</span>\n\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">hpnq</span> <span class=\"n\">hpq</span>\n  <span class=\"n\">apply</span> <span class=\"n\">hpnq</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hpq</span>\n  <span class=\"n\">assumption</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hpq</span>\n  <span class=\"n\">assumption</span> <span class=\"c1\">-- succeeds</span>\n</code></pre></div>\n<p>Focusing on the first subgoals produced by <code>apply</code> makes the error go away, as does using <code>cases</code> instead of <code>cases'</code>. Any ideas what's up here? Unfortunately a student already ran into this about 30 minutes after my first Lean homework dropped <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 325426211,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1675351526
    },
    {
        "content": "<p>I can fix this with a <code>focus</code> at the beginning of the implementation of <code>cases'</code>, which seems like it wouldn't hurt, but I'm not sure that's the root cause?</p>",
        "id": 325428274,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1675352033
    },
    {
        "content": "<p>(never mind my proposed other example, this seems to just be slow updating in my infoview)</p>",
        "id": 325429308,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1675352299
    },
    {
        "content": "<p>Reported as <a href=\"https://github.com/leanprover-community/mathlib4/pull/2016\">mathlib4#2016</a> so it doesn't get lost</p>",
        "id": 325440904,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1675355175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/287929-mathlib4/topic/bug.20in.20cases'.20goal.20management/near/325428274\">said</a>:</p>\n<blockquote>\n<p>I can fix this with a <code>focus</code> at the beginning of the implementation of <code>cases'</code>, which seems like it wouldn't hurt, but I'm not sure that's the root cause?</p>\n</blockquote>\n<p>Yes, that's the root cause. It's a copy/alteration of <code>Lean.Elab.Tactic.evalCases</code>, which <a href=\"https://github.com/leanprover/lean4/blob/35ccf7b1637f758b36bfa90af1dbd135ac372946/src/Lean/Elab/Tactic/Induction.lean#L593\">uses <code>focus</code> at the start</a> and this was not replicated in the rewrite. A fix is up at <a href=\"https://github.com/leanprover-community/mathlib4/pull/2021\">!4#2021</a></p>",
        "id": 325469985,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675363076
    },
    {
        "content": "<p>Amazing, thanks! I'm still wrapping my head around Lean 4 goal management. Is there a short explanation for why the <code>focus</code> is needed here, and why <code>withMainContext</code> doesn't have the same effect?</p>",
        "id": 325475175,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1675364590
    },
    {
        "content": "<p><code>withMainContext</code> doesn't do anything with the goal list. It only sets the local context to match the local context of the main goal, so that <code>elabTerm</code> will work correctly. What the <code>focus</code> combinator does is to stash all the goals in the list except for the first and then append them once the inner tactic is done making its modifications. Without that, <code>cases</code> calls <code>getMainGoal</code> at the start (which pulls only the first goal) and <code>setGoals</code> at the end (which drops any trailing goals). An alternative would be to use <code>replaceMainGoal</code> instead of <code>setGoals</code> at the end, which removes the head of the goal list and prepends the provided list of subgoals.</p>",
        "id": 325477030,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675365135
    },
    {
        "content": "<p>Notably, <code>focus</code> is also not a replacement for <code>withMainContext</code> - it does not set the local context so you would need to use both if you need both the goal management behavior and setting the local context.</p>",
        "id": 325477546,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675365276
    },
    {
        "content": "<p>Got it. That makes sense, and I see now where this behavior is coming from!</p>",
        "id": 325478152,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1675365457
    }
]