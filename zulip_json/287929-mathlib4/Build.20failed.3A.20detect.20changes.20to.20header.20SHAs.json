[
    {
        "content": "<p>We're running into build failures I don't understand on <a href=\"https://github.com/leanprover-community/mathlib4/pull/6576\">#6576</a>: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6399965647/job/17378238549\">https://github.com/leanprover-community/mathlib4/actions/runs/6399965647/job/17378238549</a></p>\n<p>As far as I can see we didn't touch any header SHA, so why is this build step failing, and how can we fix it?</p>",
        "id": 394792480,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1696409904
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6576\">#6576</a> I think you mean</p>",
        "id": 394800582,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1696412766
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Build.20failed.3A.20detect.20changes.20to.20header.20SHAs/near/394800582\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6576\">#6576</a> I think you mean</p>\n</blockquote>\n<p>Corrected, thanks!</p>",
        "id": 394800921,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1696412911
    },
    {
        "content": "<p>Did you merge master recently?</p>",
        "id": 394800941,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1696412920
    },
    {
        "content": "<p>Nope, let's try that...</p>",
        "id": 394801200,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1696413025
    },
    {
        "content": "<p>I opened the PR a while ago and I merged master yesterday, after a long period of non-merging, but the SHAs were still unhappy.  Anyway, I see that Anne merged it again now: if the check passes, I am happy!</p>",
        "id": 394801601,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696413188
    },
    {
        "content": "<p>It failed :(</p>",
        "id": 394801951,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1696413297
    },
    {
        "content": "<p>I also tried pushing your suggestion, in case it helped, but it failed again.</p>",
        "id": 394803121,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696413721
    },
    {
        "content": "<p>Rebase on master?</p>",
        "id": 394811105,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1696415893
    },
    {
        "content": "<p>Does the sha it complains about exist?</p>",
        "id": 394811164,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696415922
    },
    {
        "content": "<p>If so, I would guess that adding a <code>git fetch</code> somewhere in CI fixes it.</p>",
        "id": 394811196,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696415936
    },
    {
        "content": "<p>(due to some shallow checkout shenanigans)</p>",
        "id": 394811345,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696415999
    },
    {
        "content": "<p>Unfortunately,</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>git<span class=\"w\"> </span>cat-file<span class=\"w\"> </span>-e<span class=\"w\"> </span>530610771ae0ef4ca41280633545883763d0b897<span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"nb\">echo</span><span class=\"w\"> </span>fail\nfail\n</code></pre></div>",
        "id": 394812028,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696416212
    },
    {
        "content": "<p>I'll try to rebase master, if I can do it via gitpod.</p>",
        "id": 394812077,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696416237
    },
    {
        "content": "<p>On gitpod, I can rebase master, but I have not found a way to push the rebased branch back to remote.  It seems that it is a problem with permissions.  I'll try it when I am back at home later today</p>\n<p>If someone else wants to have a look before, when rebasing there is only one non-clean commit and you simply accept all \"current changes\" (it is just indentation and almost all conflicts are identical in the two versions anyway).</p>",
        "id": 394813450,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696416754
    },
    {
        "content": "<p>Let me have a go rebasing...</p>",
        "id": 394835356,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1696424418
    },
    {
        "content": "<p>The SHAs are happy!  Thank you <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span>!!</p>",
        "id": 394837431,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696424997
    },
    {
        "content": "<p>Now let's hope I didn't mess up the rebase <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 394837604,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1696425038
    },
    {
        "content": "<p>It is already linting, so I am confident that it will work!  Thank you very much!</p>",
        "id": 394838283,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696425260
    },
    {
        "content": "<p>For future reference, Scott's suggestion of rebasing master fixed this issue!</p>\n<p>Thank you all for the help!</p>",
        "id": 394844274,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696427020
    },
    {
        "content": "<p>The sha is supposed to be in mathlib3 not mathlib4</p>",
        "id": 394859721,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696431391
    },
    {
        "content": "<p>While I did the wrong check earlier, it turns out that the SHA did not exist in Lean 3 either:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>lean<span class=\"w\"> </span>--version\nLean<span class=\"w\"> </span><span class=\"o\">(</span>version<span class=\"w\"> </span><span class=\"m\">3</span>.51.1,<span class=\"w\"> </span>commit<span class=\"w\"> </span>cce7990ea86a,<span class=\"w\"> </span>Release<span class=\"o\">)</span>\n$<span class=\"w\"> </span>git<span class=\"w\"> </span>cat-file<span class=\"w\"> </span>-e<span class=\"w\"> </span>530610771ae0ef4ca41280633545883763d0b897<span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"nb\">echo</span><span class=\"w\"> </span>fail\nfail\n</code></pre></div>",
        "id": 394883919,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696439691
    },
    {
        "content": "<p>Does GitHub know about it?</p>",
        "id": 394885279,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696440204
    },
    {
        "content": "<p>How did the sha get there?</p>",
        "id": 394885291,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696440210
    },
    {
        "content": "<p>I looked at the stack trace more closely; this looks like somehow <code>GitPython</code> is confused; it ran <code>git diff</code>, then looked at the shas in the <code>git diff</code> header and blew up because they didn't exist.</p>",
        "id": 394888223,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696441263
    },
    {
        "content": "<p>Eric, I am afraid that I do not even understand if you have answered your own question or not...</p>",
        "id": 394904064,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696447670
    },
    {
        "content": "<p>Just a blind pass-by comment, but Git has this horrible default setting where a <code>pull_request</code> CI job does _not_ run on the latest commit of the feature branch. Instead, it secretly does a merge with the target branch, and runs on that commit, which you will not find anywhere else. Could this be it?</p>\n<p>(This behavior can be very confusing, because it is inherently stateful and with hidden state  at that. It could be that your PR looks red even though everything works locally, and then it suddenly turns green the next time you run it, just because the target branch changed.)</p>",
        "id": 394911830,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1696451355
    },
    {
        "content": "<p>The linked action says at the beginning:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--progress --force refs/remotes/pull/6576/merge</span>\n  <span class=\"n\">Note</span><span class=\"o\">:</span> <span class=\"n\">switching</span> <span class=\"n\">to</span> <span class=\"bp\">'</span><span class=\"n\">refs</span><span class=\"bp\">/</span><span class=\"n\">remotes</span><span class=\"bp\">/</span><span class=\"n\">pull</span><span class=\"bp\">/</span><span class=\"mi\">6576</span><span class=\"bp\">/</span><span class=\"n\">merge'.</span>\n\n  <span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"mi\">7680267</span> <span class=\"n\">Merge</span> <span class=\"mi\">6704</span><span class=\"n\">be3b38a4acf30eb3bb602443e70680a7c88f</span> <span class=\"n\">into</span> <span class=\"n\">b2540cf9b47f7cf8d913114cb688317719bc50b4</span>\n</code></pre></div>\n<p>so maybe thatâ€™s how otherwise unknown git commits enter the scene?</p>",
        "id": 394912217,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1696451497
    },
    {
        "content": "<p>Joachim, in the past, when I had issues with SHAs, it is true that they went away simply by re-running the job... sometimes.</p>\n<p>What I do not understand is why this behavious of Git would not give errors <em>always</em>, but only occasionally.</p>",
        "id": 394913389,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696452040
    }
]