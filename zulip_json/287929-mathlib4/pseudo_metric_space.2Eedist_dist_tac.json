[
    {
        "content": "<p>Could someone port this tactic, please? <code>Topology.MetricSpace.Basic</code> is already in <code>master</code>.</p>",
        "id": 339412821,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1677866925
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/pseudo_metric_space.edist_dist_tac\">docs#pseudo_metric_space.edist_dist_tac</a></p>",
        "id": 339412938,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677866966
    },
    {
        "content": "<p>do we have <code>control_laws_tac</code> yet? That's been on the todo list for a while.</p>",
        "id": 339413083,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677867005
    },
    {
        "content": "<p>Here is the source:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">pseudo_metric_space.edist_dist_tac</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">tactic.intros</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">ennreal.of_real_eq_coe_nnreal</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">control_laws_tac</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 339413124,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1677867016
    },
    {
        "content": "<p><code>control_laws_tac</code> is just <code>intro; rfl</code> (at least in this case)</p>",
        "id": 339413228,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1677867059
    },
    {
        "content": "<p>Oh, so it should be very easy to make this using just a macro</p>",
        "id": 339413670,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677867208
    },
    {
        "content": "<p>unfortunately I'm stuck compiling forever right now <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 339413976,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677867296
    },
    {
        "content": "<p>A first approximation:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.ENNReal</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"edist_dist_tac\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean.Elab.Tactic</span> <span class=\"k\">in</span>\n<span class=\"n\">elab_rules</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span><span class=\"n\">edist_dist_tac</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"n\">evalTactic</span> <span class=\"bp\">&lt;|</span> <span class=\"bp\">←</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span><span class=\"n\">intros</span><span class=\"o\">)</span>\n      <span class=\"n\">evalTactic</span> <span class=\"bp\">&lt;|</span> <span class=\"bp\">←</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span><span class=\"n\">first</span> <span class=\"bp\">|</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">ENNReal.ofReal_eq_coe_nnreal</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">|</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 339415687,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677867791
    },
    {
        "content": "<p>I'm not a tactic programmer so someone else should verify and/or fix :)</p>",
        "id": 339416137,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677867950
    },
    {
        "content": "<p>Can a macro be used in <code>:= by _</code>?</p>",
        "id": 339417780,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1677868423
    },
    {
        "content": "<p>A macro that expands to a tactic, yes. But the way I wrote it above it's not technically a macro.</p>",
        "id": 339417990,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677868482
    },
    {
        "content": "<p>The goal is to get rid of all the <code>edist_dist</code> fields in <code>MetricSpace.Basic</code>.</p>",
        "id": 339418079,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1677868509
    },
    {
        "content": "<p>I'll test it tonight.</p>",
        "id": 339418113,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1677868523
    }
]