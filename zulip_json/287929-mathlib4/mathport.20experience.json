[
    {
        "content": "<p>I have used <code>mathport</code> for a project (consisting of three files) as described <a href=\"https://github.com/leanprover-community/mathport\">here</a>. It worked reasonably well, with a few exceptions.</p>\n<ul>\n<li><code>Zmod</code> instead of <code>ZMod</code> in the <code>import</code>s (and <code>Tactic.Basic</code>, which does not seem to exist anymore)</li>\n<li>It insists on changing <code>mul</code> into <code>hMul</code> in all theorem names</li>\n<li>In some cases, it fails to change <code>nat.foo</code> or <code>int.foo</code> into <code>Nat.foo</code> or <code>Int.foo</code></li>\n<li>When <code>p : Nat</code> and <code>a : Int</code>, <code>\\u p \\mid a</code> now gives an error in some cases (maybe it's unfair to blame <code>mathport</code> for that)</li>\n<li>Similarly with things like <code>a / b</code>, where <code>a : Int</code> and <code>b : Nat</code> (looks for some <code>HDiv</code> instance...)</li>\n<li>It does not translate <code>div</code> and <code>mod</code> in lemma names to <code>ediv</code> and <code>emod</code> where appropriate</li>\n<li>It changes names of definitions and lemmas according to the new naming convention, but does not also change them at places where they are used</li>\n</ul>",
        "id": 388708866,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1693671828
    },
    {
        "content": "<p>All of those sound like issues we've encountered during porting mathlib (except the hMul one, I haven't seen that)</p>",
        "id": 388709500,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1693672255
    },
    {
        "content": "<p>And theorem names not being translated is something I've generally seen in the parts of a proof after another error</p>",
        "id": 388709641,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1693672353
    },
    {
        "content": "<p>The import issue is just handled by a specific translation table (or rather, a table of exceptions to the rule, like ZMod), so updating that should be the fix there.</p>",
        "id": 388714119,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693675813
    },
    {
        "content": "<p>That table isn't implemented</p>",
        "id": 388714164,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693675855
    },
    {
        "content": "<p>We have the interface to it, <code>#align_import</code>, but mathport was never taught how to read it</p>",
        "id": 388714181,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693675874
    },
    {
        "content": "<p>?? We definitely had something working for NNReal and the like. I remember editing it.</p>",
        "id": 388715311,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693676901
    },
    {
        "content": "<p>Oh maybe it was part of the start_port script.</p>",
        "id": 388715340,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693676936
    },
    {
        "content": "<p>Which makes both of our statements agree.</p>",
        "id": 388715369,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693676966
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathport.20experience/near/388714181\">said</a>:</p>\n<blockquote>\n<p>We have the interface to it, <code>#align_import</code>, but mathport was never taught how to read it</p>\n</blockquote>\n<p>I was thinking I would implement it, but it turns out it's not that simple, <code>#align_import</code> is actually dropping its data on the floor so there is nothing mathport can do to recover it</p>",
        "id": 388718392,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693679705
    },
    {
        "content": "<p>I noticed that <code>mathport</code> generated <code>#align_import</code> lines in the lean4 files (which led to an error message <code>from expected</code> at the beginning of the following module docstring IIRC).</p>",
        "id": 388719792,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1693680888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathport.20experience/near/388718392\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathport.20experience/near/388714181\">said</a>:</p>\n<blockquote>\n<p>We have the interface to it, <code>#align_import</code>, but mathport was never taught how to read it</p>\n</blockquote>\n<p>I was thinking I would implement it, but it turns out it's not that simple, <code>#align_import</code> is actually dropping its data on the floor so there is nothing mathport can do to recover it</p>\n</blockquote>\n<p>Yes, my thinking was that you'd know better what it should be doing with its data anyway, so I'd let you or someone else implement both ends at the same time</p>",
        "id": 388720438,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693681483
    },
    {
        "content": "<p>The <code>hMul</code> problem appeared last Thursday IIRC.</p>",
        "id": 388720626,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1693681629
    },
    {
        "content": "<p>\"appeared\" = \"was noticed\" or \"was introduced\"?</p>",
        "id": 388720706,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1693681693
    },
    {
        "content": "<p>Was introduced. One of Mario's commits. I know it because I mathported one project on Wednesday and one on Thursday and I saw the error appearing from one to the next.</p>",
        "id": 388720882,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1693681868
    },
    {
        "content": "<p>And indeed I checked the commits and you can see the mathport going all wrong on <code>mul</code> after that one commit.</p>",
        "id": 388720898,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1693681904
    },
    {
        "content": "<p>which one?</p>",
        "id": 388721500,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693682514
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3926\">#3926</a> implements the environment extension</p>",
        "id": 388721692,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693682661
    },
    {
        "content": "<p>Will be at a computer in a bit. Can tell you.</p>",
        "id": 388721712,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1693682669
    },
    {
        "content": "<p>lol, I'm about to board a flight, let's see if you can get it in time</p>",
        "id": 388721763,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693682702
    },
    {
        "content": "<p>Did we actually want to do anything with the origin information in <code>#align_import</code>?</p>",
        "id": 388723712,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693684522
    },
    {
        "content": "<p>I guess you meant last last thursday: <a href=\"https://github.com/leanprover-community/mathlib3port/commit/60285dccd117e90dd1faa65f8ae103e9befb924f\">https://github.com/leanprover-community/mathlib3port/commit/60285dccd117e90dd1faa65f8ae103e9befb924f</a></p>",
        "id": 388724342,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693685109
    },
    {
        "content": "<p>The origin info was mainly there to support the dashboard</p>",
        "id": 388724673,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693685288
    },
    {
        "content": "<p>And this commit was caused not by any change of mine, but a mathlib bump <a href=\"https://github.com/leanprover-community/mathlib4/compare/72b6e76...d66f29ee\">https://github.com/leanprover-community/mathlib4/compare/72b6e76...d66f29ee</a></p>",
        "id": 388724794,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693685339
    },
    {
        "content": "<p>which includes a lean bump 08-05 -&gt; 08-15 <a href=\"https://github.com/leanprover/lean4/compare/254582c...b5a7367\">https://github.com/leanprover/lean4/compare/254582c...b5a7367</a></p>",
        "id": 388724864,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693685364
    }
]