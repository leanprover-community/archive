[
    {
        "content": "<p>I'm working off <a href=\"https://github.com/leanprover-community/mathlib4/pull/1707\">!4#1707</a>, <span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span>' PR enabling <code>norm_num</code> to recognise scientific notation.  I had thought <code>positivity</code> outsourced all its checks about numerals to <code>norm_num</code>, so I was surprised that this fails:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Positivity</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">25</span><span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">4</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">4</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">positivity</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">25</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">positivity</span> <span class=\"c1\">-- fails</span>\n</code></pre></div>\n<p>Does <code>positivity</code> need some change to handle scientific notation?</p>\n<p>Also tagging <span class=\"user-mention\" data-user-id=\"243791\">@David Renshaw</span> for good measure.</p>",
        "id": 326042088,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1675658679
    },
    {
        "content": "<p>New to the code, but I think the only time <code>norm_num</code> is called from <code>positivity</code> is in <code>normNumPositivity</code>, and that doesn't handle rationals yet (it fails if it sees an <code>.isRat</code> result). <code>positivity</code> seems to get away with <code>1 / 4</code> because it's equipped to handle <code>/</code></p>",
        "id": 326042981,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1675659499
    },
    {
        "content": "<p>I think I can fix it; I'll open a branch/PR</p>",
        "id": 326043005,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1675659517
    },
    {
        "content": "<p>Ok, this should now be fixed by <a href=\"https://github.com/leanprover-community/mathlib4/pull/2103\">!4#2103</a> ! <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span>, let me know if it works when field-tested! :)</p>",
        "id": 326077132,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1675676104
    }
]