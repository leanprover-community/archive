[
    {
        "content": "<p>I think I may have seen a thread on that, but can't find it (searching for <code>nth_rw</code> or <code>nth_rewrite</code> om Zulip seems to ignore the <code>nth_</code> part...).<br>\nThe following certainly does not work as expected.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">â„¤</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"bp\">*</span><span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">nth_rw</span> <span class=\"mi\">2</span> <span class=\"o\">[</span><span class=\"n\">pow_two</span><span class=\"o\">]</span> <span class=\"c1\">-- leaves `x ^ 2 + y ^ 2 = x * x + y * y`</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>It seems that <code>nth_rw n [lemma]</code> finds the first match for the lemma (here <code>x^2</code>) and then rewrites the nth occurrence of <em>that match</em> instead of the nth occurrence of <em>some match</em>.<br>\nIs this a know bug (and if so, is something being done about it)?</p>",
        "id": 398897850,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1698412912
    },
    {
        "content": "<p>Yes, it is known.</p>",
        "id": 398898017,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698412964
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/113488-general/topic/How.20to.20use.20nth_rewrite.20in.20NNG4.3F/near/397991051\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/How.20to.20use.20nth_rewrite.20in.20NNG4.3F/near/397991051</a></p>",
        "id": 398898209,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698413043
    },
    {
        "content": "<p>In particular for anyone coming to this thread later, <a href=\"https://github.com/leanprover/lean4/pull/2539\">lean4#2539</a> is the fix.</p>",
        "id": 399141514,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698576612
    }
]