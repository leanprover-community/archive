[
    {
        "content": "<p>Is there a particular reason we have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Polynomial.divX#doc\">docs#Polynomial.divX</a> and a bunch of lemmas about it rather than just using <code>p /â‚˜ X</code> instead?</p>",
        "id": 382742415,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1691437093
    },
    {
        "content": "<p>I guess it's used somehow in the definition of <code>divByMonic</code>?</p>",
        "id": 382742588,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1691437170
    },
    {
        "content": "<p>No doesn't seem like it, I can rearrange Data.Polynomial.Div.lean so that if I comment out the import to the definition of divX the definition of divByMonic compiles.</p>",
        "id": 382743504,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1691437457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> i think you made this</p>",
        "id": 382743746,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691437559
    },
    {
        "content": "<p>I think I generalized it, not added it; you're thinking of <a href=\"https://github.com/leanprover-community/mathlib3/pull/15905\">mathlib3#15905</a></p>",
        "id": 382750037,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691439547
    },
    {
        "content": "<p>Ahh, I see. it's a shame git blame is harder now :/</p>",
        "id": 382763321,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691443856
    },
    {
        "content": "<p>I promise I'll glue the histories together soon!</p>",
        "id": 382764471,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691444307
    },
    {
        "content": "<p>It feels like it would be better to avoid this definition entirely so that people don't have to deal with multiple APIs. Do people care if I try to remove it? What happens to the mathport process if I remove lemmas that have #align statements near them?</p>",
        "id": 382940919,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1691498285
    },
    {
        "content": "<p>You should replace them by <code>#noalign</code>s</p>",
        "id": 382945553,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1691499153
    },
    {
        "content": "<p>Am I right in claiming that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MvPolynomial.divMonomial#doc\">docs#MvPolynomial.divMonomial</a> is genuinely useful?</p>",
        "id": 382954362,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691500816
    },
    {
        "content": "<p>And it's just the specialization to Polynomial that isn't due to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Polynomial.divByMonic#doc\">docs#Polynomial.divByMonic</a> existing?</p>",
        "id": 382954456,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691500834
    },
    {
        "content": "<p>Oh, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Polynomial.divByMonic#doc\">docs#Polynomial.divByMonic</a> doesn't work on Semirings</p>",
        "id": 382954626,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691500875
    },
    {
        "content": "<p>I suspect that <code>divX</code> plays a useful role in formalizing results.  My guess is that the \"mathematically interesting\" facts will be about <code>divByMonic</code>, but that their proofs will (implicitly or explicitly) rely on many recursive applications of <code>divX</code>.</p>",
        "id": 382987697,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1691506739
    }
]