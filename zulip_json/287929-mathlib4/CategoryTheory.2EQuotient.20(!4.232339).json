[
    {
        "content": "<p>I'm running into some hairy issues in this file...  In particular for the <code>Category</code> instance of <code>Quotient r</code> (<a href=\"https://github.com/leanprover-community/mathlib4/blob/8d73f5377cf58702c63a527863fdf13826c2b18c/Mathlib/CategoryTheory/Quotient.lean#L107\">here</a>) the three properties <code>id_comp</code>, <code>comp_id</code>, and <code>assoc</code> were dispatched by <code>tidy</code> in Lean 3 but aren't solved by <code>aesop_cat</code> in Lean 4.</p>\n<p>I did a little bit of sleuthing in Lean 3, and <code>tidy?</code> suggests that <code>id_comp</code> can be solved by the following:<code>intros X Y f, induction f, work_on_goal 1 { dsimp at *, simp at * }, refl</code>.</p>\n<p>In Lean 4 I immediately run into an error with <code>induction f</code>returning <code>major premise type is not an inductive type</code>.</p>\n<p>This is true, as <code>f</code> has type <code>Quot (CompClosure r)</code>, so it is not actually an inductive type. But Lean 3 is happy to see through the <code>Quot</code> and <code>induction</code> works on the wrapped inductive type <code>CompClosure r</code>. </p>\n<p>Any suggestions would be helpful!</p>",
        "id": 329625060,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1677125021
    },
    {
        "content": "<p>In a similar situation where induction could not see through a quotient, I had to fall back on <code>Quot.ind</code> and its variants.</p>",
        "id": 329627022,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1677126496
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306577\">Matthew Ballard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/CategoryTheory.2EQuotient.20.28!4.232339.29/near/329627022\">said</a>:</p>\n<blockquote>\n<p>In a similar situation where induction could not see through a quotient, I had to fall back on <code>Quot.ind</code> and its variants.</p>\n</blockquote>\n<p>I'll give it a try!</p>",
        "id": 329629097,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1677128623
    },
    {
        "content": "<p>So is this a regression in the induction tactic? Can you minimise?</p>",
        "id": 329655914,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677141702
    },
    {
        "content": "<p>Is it about \"seeing through\" the quotient or doing induction <em>on</em> the quotient?</p>",
        "id": 329656302,
        "sender_full_name": "Reid Barton",
        "timestamp": 1677141789
    },
    {
        "content": "<p>Was <code>induction</code> working on quotients added in community lean?</p>",
        "id": 329657429,
        "sender_full_name": "Reid Barton",
        "timestamp": 1677142171
    },
    {
        "content": "<p>My language was off but it worked before and didn’t after. I was surprised and I asked at the porting meeting it was specially baked into <code> induction </code> before. As far people know it wasn’t</p>",
        "id": 329701333,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1677154210
    },
    {
        "content": "<p>Hey, I took the liberty of commiting fixes to the errors (iirc semorisson encouraged people pitching in on other's PRs somewhere; hope that's OK).</p>",
        "id": 338799704,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1677667705
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455674\">@Matej Penciak</span> are alignment and other things already taken care of? Should I drop the WIP label and request a review?</p>",
        "id": 338802264,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1677668253
    },
    {
        "content": "<p>In the mathlib3 source, they call <code>functor</code> the functor from the category to its quotient, but this is a bit of a confusing name imo. Wouldn't <code>mk</code> or <code>as</code> make more sense? If so, I guess it's not necessarily a good idea to proceed with such a change during porting?</p>",
        "id": 338831511,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1677675495
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461830\">Rémi Bottinelli</span> <a href=\"#narrow/stream/287929-mathlib4/topic/CategoryTheory.2EQuotient.20.28!4.232339.29/near/338802264\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"455674\">Matej Penciak</span> are alignment and other things already taken care of? Should I drop the WIP label and request a review?</p>\n</blockquote>\n<p>I haven't had a chance to look at the PR in a while because I've gotten very busy at work recently. I don't recall doing any checks on the names in comments/alignments, so it's probably a good idea to do that. I'm not sure I'll be able to get back to the file until sometime next week, so anyone should feel free to fix it up (thanks for your help btw!)</p>",
        "id": 338981011,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1677716316
    },
    {
        "content": "<p>OK, I'd like to do <code>path_category</code> next so I'll try and take care of it then</p>",
        "id": 339007606,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1677735491
    },
    {
        "content": "<p>OK, I checked the names and things look to be in order.</p>",
        "id": 339015668,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1677739656
    }
]