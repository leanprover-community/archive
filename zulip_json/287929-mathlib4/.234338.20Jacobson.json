[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> I merged master into this PR, and a pushed a fix for the first error.<br>\nThe remaining errors in <code>quotient_mk_comp_C_isIntegral_of_jacobson</code> look a bit intimidating <span aria-label=\"fear\" class=\"emoji emoji-1f628\" role=\"img\" title=\"fear\">:fear:</span></p>",
        "id": 371904267,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1688371205
    },
    {
        "content": "<p>Thanks! I'm trying to rewrite the last function, that's a nightmare…<br>\nMy impression is that it is due to the two paths from <code>AlgEquiv</code> to <code>RingHom</code>, via <code>AlgHom</code> or via <code>RingEquiv</code>…</p>",
        "id": 371909993,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1688372435
    },
    {
        "content": "<p>I made it!  For <code>quotient_mk_comp_C_isIntegral_of_jacobson</code>, I had to write an auxiliary statement in the language of algebras, and to prove the induction step in a separate proof.</p>",
        "id": 372077050,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1688403563
    },
    {
        "content": "<p>However, one the proofs still requires 300000 heartbeats to compile.</p>",
        "id": 372078139,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1688403778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Great! I'm glad to hear that this file is now error-free.</p>",
        "id": 372078378,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1688403822
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.234338.20Jacobson/near/371909993\">said</a>:</p>\n<blockquote>\n<p>My impression is that it is due to the two paths from <code>AlgEquiv</code> to <code>RingHom</code>, via <code>AlgHom</code> or via <code>RingEquiv</code>…</p>\n</blockquote>\n<p>Yes, I had a similar impression. We should debug this further in a week or two.</p>",
        "id": 372078594,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1688403864
    },
    {
        "content": "<p>Maybe in Leiden? <br>\nIt would be interesting to understand why this packaging things as Algebras lead to a more efficient compilation.<br>\n(I also wonder whether it is interesting/fruitful/efficient to use the Algebra language as much as possible…)</p>",
        "id": 372080318,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1688404188
    },
    {
        "content": "<p>Also, I feel that some lemmas have too many hidden hypotheses (either implicit or instances), and this makes it more complicated to use them than it should be. (Hence the many occurrences of <code>@</code>…)</p>",
        "id": 372080694,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1688404249
    },
    {
        "content": "<p>Unfortunately I have to pack boxes and paint walls, instead of going to Leiden ... but it would be a good occasion to have a group hack on these kinds of issues.</p>",
        "id": 372080852,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1688404273
    },
    {
        "content": "<p>I spent a lot of time looking at ring theory traces when I was unsuccessfully trying to make AdjoinRoot faster, and I'll be in Leiden.</p>",
        "id": 372089954,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1688406376
    },
    {
        "content": "<p>I my opinion one of the main reason is the problem you fixed with... I don't remember what, and the problem Sebastien fixed about <code>field.toDVR</code>. We should modify all these instances before thinking hard about other issues.</p>",
        "id": 372121374,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688414936
    },
    {
        "content": "<p>I am talking about <a href=\"https://github.com/leanprover-community/mathlib4/pull/5266\">#5266</a></p>",
        "id": 372122024,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688415150
    }
]