[
    {
        "content": "<p>As part of <a href=\"https://github.com/leanprover-community/mathlib/pull/17972\">#17972</a> defining the Borel hierarchy, I had included a definition of the first uncountable ordinal <code>ω₁</code>. But after a short discussion during the PR process, we came to the realization that it would be better to have a general definition of the <a href=\"https://en.wikipedia.org/wiki/Von_Neumann_cardinal_assignment#Initial_ordinal_of_a_cardinal\">inital ordinals</a> instead. This would supersede the definition of the former.</p>\n<p>So, my proposal for implementing this definition is the following:</p>\n<ul>\n<li>\n<p>Redefine <code>ordinal.omega</code> as a function,</p>\n<div class=\"codehilite\"><pre><span></span><code>noncomputable def omega (x : ordinal.{u}) : ordinal.{u} := (aleph x).ord\n</code></pre></div>\n\n</li>\n<li>\n<p>If it is required for consistency, also define the corresponding <code>omega'</code> using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal.aleph'\">docs#cardinal.aleph'</a>.</p>\n</li>\n</ul>\n<p><span class=\"user-mention\" data-user-id=\"459227\">@Violeta Hernández</span>  suggested that the original <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ordinal.omega\">docs#ordinal.omega</a> could be renamed to <code>omega_0</code>, in analogy to <code>ℵ₀</code>; I would add setting up <code>omega_1</code> for <code>omega 1</code> (notation: <code>ω₁</code>) since it is very fundamental—I wish it was possible to have subscript arguments, is it? (<span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span>  thinks it's not, perphaps in Lean 4? Adding an underscore to the notation, then?).</p>\n<p>I'm not sure if theorem names involving <code>..._omega</code> need to be renamed to <code>..._omega_0</code>, if older occurrences of ASCII <code>omega</code> are consistently be replaced by <code>ω</code>.</p>\n<p>As suggested during the review, this proposal would be part of separare PR.</p>\n<p>What are your thoughts?</p>",
        "id": 328486855,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1676644982
    },
    {
        "content": "<p>I would suggest leaving <code>omega</code> alone, and adding a new name for the new thing</p>",
        "id": 328487721,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676645197
    },
    {
        "content": "<p>Also, not sure this is a good idea, but <a href=\"https://github.com/forked-from-1kasper/ground_zero/blob/master/GroundZero/Meta/Notation.lean#L39-L70\">this</a> does actually work...</p>",
        "id": 328488038,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676645291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/Defining.20initial.20ordinals/near/328487721\">said</a>:</p>\n<blockquote>\n<p>I would suggest leaving <code>omega</code> alone, and adding a new name for the new thing</p>\n</blockquote>\n<p>Well, it seems that <code>ordinal.initial</code> is available (not that I like it very much <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>). I'll think of alternatives, but I'm open to suggestions.</p>",
        "id": 328490999,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1676646073
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"327749\">Pedro Sánchez Terraf</span> <a href=\"#narrow/stream/116395-maths/topic/Defining.20initial.20ordinals/near/328486855\">said</a>:</p>\n<blockquote>\n<p>I'm not sure if theorem names involving <code>..._omega</code> need to be renamed to <code>..._omega_0</code>, if older occurrences of ASCII <code>omega</code> are consistently be replaced by <code>ω</code>.</p>\n</blockquote>\n<p>In fact, this already happened to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal.aleph_0\">docs#cardinal.aleph_0</a>, so I see no reason to not do the same here.</p>",
        "id": 328491596,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676646228
    },
    {
        "content": "<p>The difference is one writes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">ℵ</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\aleph_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">ℵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, but never <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 328492187,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676646380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/Defining.20initial.20ordinals/near/328492187\">said</a>:</p>\n<blockquote>\n<p>The difference is one writes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">ℵ</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\aleph_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">ℵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, but never <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n</blockquote>\n<p>You are right, though the notation appears in some ancient books. Also, people outside set theory seldom writes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>, at least in that sense</p>",
        "id": 328493402,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1676646691
    },
    {
        "content": "<p>I think that, in the face of inconsistent math conventions, we do have the power to bend things a little for our own convenience</p>",
        "id": 328572216,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1676671778
    },
    {
        "content": "<p>I'm an <code>omega_0</code> supporter</p>",
        "id": 328572243,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1676671789
    },
    {
        "content": "<p>I don't think consistency is a great argument. Because now instead of \"everyone calls it <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>\", we would have \"everyone calls it <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>, except mathlib that calls it <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>\".</p>",
        "id": 328902326,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676875001
    },
    {
        "content": "<p>Thanks for the feedback. Change of plans then:</p>\n<ul>\n<li>Leave <code>omega</code> alone (sic);</li>\n<li>\n<p>Define <code>initial i</code> as the <code>i</code>th initial ordinal (zero-based, as <code>aleph</code>):</p>\n<div class=\"codehilite\"><pre><span></span><code>namespace ordinal\nnoncomputable def initial (x : ordinal.{u}) : ordinal.{u} := (aleph x).ord\nend ordinal\n</code></pre></div>\n\n</li>\n<li>\n<p>Actually, the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>-th initial ordinal is denoted by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> in the literature, so I came up with:</p>\n<div class=\"codehilite\"><pre><span></span><code>localized &quot;notation (name := ordinal.initial) `ω_` := ordinal.initial&quot; in ordinal\n</code></pre></div>\n\n<p>somehow indicating a subscript. E.g.</p>\n<div class=\"codehilite\"><pre><span></span><code>open_locale ordinal\nexample : ω_ 0 = ω := by {unfold initial, simp}\n</code></pre></div>\n\n</li>\n</ul>\n<p>Is the last bullet reasonable? (Is there a way to omit the space, as in <code>ω_0</code>?)</p>",
        "id": 338425902,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1677524587
    },
    {
        "content": "<p>I don't know if it is possible to make it work without the space but I think it would be sort of confusing anyways (given that <code>ω_0</code> is a perfectly valid identifier).</p>",
        "id": 338429530,
        "sender_full_name": "Reid Barton",
        "timestamp": 1677525624
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/Defining.20initial.20ordinals/near/328902326\">said</a>:</p>\n<blockquote>\n<p>I don't think consistency is a great argument. Because now instead of \"everyone calls it <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>\", we would have \"everyone calls it <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>, except mathlib that calls it <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>\".</p>\n</blockquote>\n<p>I'm arguing for internal consistency, not consistency with the literature.</p>",
        "id": 338501846,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1677561535
    },
    {
        "content": "<p>I don't believe <code>omega_0</code> should be all that contentious. We have <code>omega_α</code> for every other ordinal <code>α</code>, after all.</p>",
        "id": 338502025,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1677561642
    },
    {
        "content": "<p>But <code>initial</code> is a fine compromise.</p>",
        "id": 338502052,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1677561669
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459227\">Violeta Hernández</span> <a href=\"#narrow/stream/116395-maths/topic/Defining.20initial.20ordinals/near/338502052\">said</a>:</p>\n<blockquote>\n<p>But <code>initial</code> is a fine compromise.</p>\n</blockquote>\n<p>What should I do now? A different approach to what I suggested during <a href=\"https://github.com/leanprover-community/mathlib/pull/17972#discussion_r1088008174\">my old PR review</a> is to PR <em>just this</em>, wait for it to be merged, and then <code>git merge master borel_hierarchy</code> to update my branch with this change.</p>\n<p>Is this reasonable?</p>",
        "id": 339959973,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1678133779
    }
]