[
    {
        "content": "<p>Here's a structural question: suppose I have a map <code>f</code> say from <code>Z/7</code> to some Type <code>X</code> (it's important for the application to have a cyclic structure for the domain), and I want to make a map <code>g</code> from <code>Z/3</code> to <code>X</code> by setting <code>g 0 = f 2</code>, <code>g 1 = f 4</code>, and <code>g 2 = f 5</code> (or whatever). More generally I want to be able to define maps between finite cyclic (or totally ordered) sets. Does Lean have a good structure for that? Thanks!</p>",
        "id": 348039886,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1681049811
    },
    {
        "content": "<p>You don't say what you mean by Z/7 but if you mean <code>fin 7</code> then there is some API for this; you just need a map from <code>fin 3</code> to <code>fin 7</code> and you can use vector notation for this.</p>",
        "id": 348042852,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681050872
    },
    {
        "content": "<p>I guess \"it is important to have a cyclic structure\" means that it has to be <a href=\"https://leanprover-community.github.io/mathlib_docs/find/zmod\">docs#zmod</a> right?</p>",
        "id": 348043042,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1681050936
    },
    {
        "content": "<p>Fortunately <a href=\"https://leanprover-community.github.io/mathlib_docs/find/zmod\">docs#zmod</a> is (almost always) defeq to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin\">docs#fin</a> so you can do what Kevin says</p>",
        "id": 348043224,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1681050979
    },
    {
        "content": "<p>Oh <code>Fin 7</code> already has the structure of <code>ZMod 7</code>? How can I combine vector notation with abstract things? For example, if <code>f</code> is a map from <code>ZMod n</code> to <code>X</code> and <code>i &lt; j &lt; n</code>, and I want to make a map <code>g</code> from <code>ZMod (j-i)</code> to <code>X</code> by setting <code>g k = f (k+i)</code>, except if <code>k=5</code>, in which case I want it to be <code>f 0</code>. Or something like that. I suppose I answered my own question, as long as I really can replace <code>ZMod</code>'s above with <code>Fin</code>...? Thanks!</p>",
        "id": 348044970,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1681051545
    },
    {
        "content": "<p>You can always use <code>if then else</code>.</p>",
        "id": 348060408,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1681057173
    }
]