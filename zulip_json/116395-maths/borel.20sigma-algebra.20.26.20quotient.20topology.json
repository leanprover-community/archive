[
    {
        "content": "<p>What assumptions do I need on <code>s : Setoid X</code>, where <code>{X : Type _} [TopologicalSpace X]</code> so that <code>(borel X).map (Quotient.mk s) = borel (Quotient s)</code>?</p>",
        "id": 364367653,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686163319
    },
    {
        "content": "<p>E.g., is it true for a (nice) action of a group on a topological space? Is it true for the quotient of a group by a (closed? countable?) subgroup?</p>",
        "id": 364368100,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686163442
    },
    {
        "content": "<p>Doesn't this fail even in really nice scenarios, like projection from R^2 to R?</p>",
        "id": 364405689,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686176455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span></p>",
        "id": 364405788,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686176515
    },
    {
        "content": "<p>I guess this would at least be true if the quotient is a covering map, does that sound right?</p>",
        "id": 364407636,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1686177411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/116395-maths/topic/borel.20sigma-algebra.20.26.20quotient.20topology/near/364405689\">said</a>:</p>\n<blockquote>\n<p>Doesn't this fail even in really nice scenarios, like projection from R^2 to R?</p>\n</blockquote>\n<p>This will hold for any projection <code>p : X × Y → X</code>. The quotient topology on <code>X</code> is the original topology on <code>X</code>. Meanwhile if <code>p^{-1} U = U × Y</code> is Borel in  <code>X × Y</code>, then <code>U × {y}</code> is Borel in <code>X × {y}</code> for your favorite <code>y</code>, so <code>U</code> is Borel in <code>X</code>.</p>",
        "id": 364685741,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686261130
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/116395-maths/topic/borel.20sigma-algebra.20.26.20quotient.20topology/near/364368100\">said</a>:</p>\n<blockquote>\n<p>E.g., is it true for a (nice) action of a group on a topological space? Is it true for the quotient of a group by a (closed? countable?) subgroup?</p>\n</blockquote>\n<p>It's not true for the quotient of R by Q. The quotient topology on R/Q is the indiscrete one, but for example singletons are in the LHS since their preimages in R are countable. I might believe that a quotient by a closed subgroup always works though.</p>\n<p>The same idea applies to the irrational rotation (a Z action on the unit circle) which is about as nice an interesting group action as you can ask for.</p>",
        "id": 364686296,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686261378
    },
    {
        "content": "<p>I'm not confident, but I think this equality holds if <code>X</code> is compact and <code>s</code> is closed as a subset of X^2. The upshot there is that the saturation of a closed set is still closed.</p>",
        "id": 364689801,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686263003
    },
    {
        "content": "<p>What if we require that there exists a fundamental domain? Which definition of a fundamental domain will work?</p>",
        "id": 364693937,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686264939
    },
    {
        "content": "<p>E.g., how can we quickly prove it for the projection from real numbers to the circle?</p>",
        "id": 364694022,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686264977
    },
    {
        "content": "<p>What context have you encountered the map of the sigma-algebra in?  In such contexts I have always worked with the borel sigma-algebras both upstairs and downstairs, and not encountered the pushforward-to-downstairs-of-the-upstairs-borel-sigma-algebra at all.</p>",
        "id": 364695567,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1686265825
    },
    {
        "content": "<p>You temporarily disable the quotient instance for <code>MeasurableSpace</code> in <code>MeasureTheory.Integral.Periodic</code>. IMHO, it's better to reuse the instance and prove <code>BorelSpace</code>.</p>",
        "id": 364696298,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686266181
    },
    {
        "content": "<p>Interesting -- actually I had been meaning to ask at some point whether there's even any point at all in having the quotient instance for <code>MeasurableSpace</code>!  Is it mathematically meaningful in general?</p>",
        "id": 364696577,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1686266359
    },
    {
        "content": "<p>(I don't think it's used in the library, except for well-behaved topological space quotients where there is also the \"borel sigma-algebra of the quotient topology\" available.)</p>",
        "id": 364696693,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1686266414
    },
    {
        "content": "<p>Another approach is to remove it completely ;)</p>",
        "id": 364697055,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686266643
    },
    {
        "content": "<p>AFAIR, I added it some time ago. I don't remember why.</p>",
        "id": 364697103,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686266685
    },
    {
        "content": "<p>(or it was someone else?)</p>",
        "id": 364697133,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686266705
    },
    {
        "content": "<p>Do you know whether you had a textbook reference or invented it yourself?</p>",
        "id": 364697161,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1686266733
    },
    {
        "content": "<p>I definitely didn't have a textbook reference.</p>",
        "id": 364697201,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686266760
    },
    {
        "content": "<p>I just used the existing <code>map</code> operation.</p>",
        "id": 364697286,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686266797
    },
    {
        "content": "<p>It was indeed you, <a href=\"https://github.com/leanprover-community/mathlib/pull/10275\">#10275</a>.</p>",
        "id": 364697327,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1686266825
    },
    {
        "content": "<p>In any case, the statement \"a set on the circle is measurable iff its preimage under projection is measurable\" looks like something we should have.</p>",
        "id": 364697375,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686266865
    },
    {
        "content": "<p>BTW, should we add <code>AddCircle.mk</code> and use it instead of <code>QuotientAddGroup.mk</code> for <code>Coe</code>?</p>",
        "id": 364697723,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686267063
    },
    {
        "content": "<p>Otherwise Lean unfolds <code>AddCircle</code> to the quotient group here and there.</p>",
        "id": 364697750,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686267082
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/116395-maths/topic/borel.20sigma-algebra.20.26.20quotient.20topology/near/364695567\">said</a>:</p>\n<blockquote>\n<p>What context have you encountered the map of the sigma-algebra in?  In such contexts I have always worked with the borel sigma-algebras both upstairs and downstairs, and not encountered the pushforward-to-downstairs-of-the-upstairs-borel-sigma-algebra at all.</p>\n</blockquote>\n<p>I'm not saying it should be an instance, but the pushforward is almost always the correct sigma algebra in the study of Borel equivalence relations. For example, such a relation is called <em>smooth</em> if the pushforward makes the quotient standard Borel, and there are many theorems about <em>smoothness</em> that people find interesting. On the other hand in this setting the quotient topology is often just the indiscrete one.</p>",
        "id": 364700047,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686268503
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"464202\">@Felix Weilacher</span> I have a similar question. If <code>E</code> is a (finite dimensional) real normed space with Borel sigma-algebra, is it true that <code>nnnorm</code> is a quotient map in the sense of sigma-algebras?</p>",
        "id": 365702076,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686612578
    },
    {
        "content": "<p>More precisely, I need the following: if <code>f : ℝ≥0 → V</code> is a function such that <code>f ∘ nnnorm</code> is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.AEStronglyMeasurable#doc\">docs4#MeasureTheory.AEStronglyMeasurable</a>, is it true that <code>f</code> is <code>AEStronglyMeasurable</code>?</p>",
        "id": 365702816,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686612990
    },
    {
        "content": "<p>If yes (I hope, it's \"yes\"), what other functions I can take instead of <code>nnnorm</code> here?</p>",
        "id": 365702851,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686613020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> AFAIR, you learned something similar for your very generic formula about change of variables in an integral.</p>",
        "id": 365702903,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686613056
    },
    {
        "content": "<p>Let X and Y be standard Borel spaces and f:X -&gt; Y a Borel surjection. Let s be a subset of Y with f^{-1}(s) measurable. Let t be the complement of s. Then f^{-1}(t) is also measurable, and since s and t are the images of these preimages, they are both analytic. Therefore s is Borel by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.analytic_set.measurably_separable\">docs#measure_theory.analytic_set.measurably_separable</a>.</p>\n<p>So if I understand what you mean by quotient map (a set in Y measurable iff its preimage is), f is a quotient map.</p>\n<p>The norm is certainly a Borel surjection, so I think the answer is yes.</p>",
        "id": 365715150,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686619910
    },
    {
        "content": "<p>Oh, I guess this also tells you that the original question from this thread has a positive answer if <code>X</code> and <code>Quotient s</code> are both Polish, right? If <code>X</code> is a Polish group and you quotient by a closed subgroup this is the case, for example.</p>",
        "id": 365716263,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686620580
    },
    {
        "content": "<p>What about the <code>AEStronglyMeasurable</code> question?</p>",
        "id": 365724200,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686624855
    },
    {
        "content": "<p>No need to answer</p>",
        "id": 365724823,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686625244
    },
    {
        "content": "<p><code>StronglyMeasurable</code> is the same as <code>Measurable</code> + second countable topology on the range.</p>",
        "id": 365725016,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686625365
    },
    {
        "content": "<p>BTW, does it mean that we can drop measurability assumption on <code>f</code> in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.integral_map\">docs#measure_theory.integral_map</a> for many more maps <code>φ</code>?</p>",
        "id": 365725192,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686625478
    },
    {
        "content": "<p>What do we need? <code>measurable_set (range φ)</code> + <code>measurable_space.map (set.range_factorization φ) _inst1 = subtype.measurable_space</code>?</p>",
        "id": 365725421,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686625651
    },
    {
        "content": "<p>This isn't an area of the library I'm familiar with so let me make sure I'm following; is the suggestion that we don't need to assume any measurability for <code>f</code> because if one side defaults to 0 thanks to f being non-measurable, the other side will as well?</p>",
        "id": 365726285,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686626153
    },
    {
        "content": "<p>Yes.</p>",
        "id": 365726431,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686626213
    },
    {
        "content": "<p>That's the way we drop this assumption if <code>φ</code> is a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measurable_embedding\">docs#measurable_embedding</a> (BTW, I made up this term some time ago; is there a better name?)</p>",
        "id": 365726637,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686626305
    },
    {
        "content": "<p>See <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measurable_embedding.integral_map/src\">src#measurable_embedding.integral_map</a></p>",
        "id": 365726696,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686626338
    },
    {
        "content": "<p>I like the name</p>",
        "id": 365727038,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686626475
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/116395-maths/topic/borel.20sigma-algebra.20.26.20quotient.20topology/near/365725421\">said</a>:</p>\n<blockquote>\n<p>What do we need? <code>measurable_set (range φ)</code> + <code>measurable_space.map (set.range_factorization φ) _inst1 = subtype.measurable_space</code>?</p>\n</blockquote>\n<p>I'm not sure. What if phi is constant?</p>",
        "id": 365727052,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686626488
    },
    {
        "content": "<p>Then this assumption would hold but f phi would be measurable for free even if f was bad right?</p>",
        "id": 365727088,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686626519
    },
    {
        "content": "<p>I will think about it in the morning.</p>",
        "id": 365727186,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686626552
    },
    {
        "content": "<p>We're talking about a.e.-measurability, so we are allowed to change values at a set of measure zero.</p>",
        "id": 365727240,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686626589
    },
    {
        "content": "<p>If <code>φ</code> is a constant, then we just change <code>f</code> to a constant function.</p>",
        "id": 365727263,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686626607
    },
    {
        "content": "<p>i see</p>",
        "id": 365727278,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686626618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> added \"a.e.\" to many definitions so that a function can be integrable on <code>[0, 1]</code> even if it behaves very badly outside of the interval.</p>",
        "id": 365727397,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686626683
    },
    {
        "content": "<p>I think I agree with what you've said, then</p>",
        "id": 365727560,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686626772
    },
    {
        "content": "<p>And if alpha and beta are standard Borel, the second part of your assumption is automatic given <code>measurable_set (range φ)</code> and <code>measurable φ</code></p>",
        "id": 365727611,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686626819
    },
    {
        "content": "<p>Do we need <code>measurable φ</code> or <code>continuous φ</code>? I know almost nothing about the descriptive set theory and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/analytic_set.image_of_continuous\">docs#analytic_set.image_of_continuous</a> requires continuity.</p>",
        "id": 365730111,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686628223
    },
    {
        "content": "<p>measurable is enough by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measurable.exists_continuous\">docs#measurable.exists_continuous</a></p>",
        "id": 365730683,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686628562
    },
    {
        "content": "<p>i.e. Borel images of Borel sets are actually analytic</p>",
        "id": 365730740,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686628590
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 365730843,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686628643
    },
    {
        "content": "<p>BTW, In the near future I'm hoping to add a standard Borel space typeclass which should hopefully make this sort of thing more straightforward by doing away with topologies</p>",
        "id": 365731104,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686628756
    },
    {
        "content": "<p>I guess, this will have to wait till after the port.</p>",
        "id": 365731282,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686628824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"464202\">Felix Weilacher</span> <a href=\"#narrow/stream/116395-maths/topic/borel.20sigma-algebra.20.26.20quotient.20topology/near/365730683\">said</a>:</p>\n<blockquote>\n<p>measurable is enough by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measurable.exists_continuous\">docs#measurable.exists_continuous</a></p>\n</blockquote>\n<p>This gives us a <strong>finer</strong> topology such that <code>φ</code> is continuous. Why <code>s</code> is an analytic set in this topology?</p>",
        "id": 365734025,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686629989
    },
    {
        "content": "<p>s is a subset of the codomain, whose topology does not change</p>",
        "id": 365736604,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686631222
    },
    {
        "content": "<p>Ah, I was thinking about a wrong lemma. Thank you!</p>",
        "id": 365736937,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686631393
    },
    {
        "content": "<p>Hi, I'm stuck again. I have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Measurable.measurable_comp_iff_of_surjective</span>\n    <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">PolishSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">BorelSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">T2Space</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">OpensMeasurableSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">SecondCountableTopology</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hsurj</span> <span class=\"o\">:</span> <span class=\"n\">Surjective</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Y</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">Measurable</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n</code></pre></div>\n<p>but when I try to prove</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Measurable.aemeasurable_map_iff_of_surjective</span>\n    <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">PolishSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">BorelSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">T2Space</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">OpensMeasurableSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">SecondCountableTopology</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hsurj</span> <span class=\"o\">:</span> <span class=\"n\">Surjective</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Y</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">AEMeasurable</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"n\">f</span> <span class=\"n\">μ</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">AEMeasurable</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">μ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">↦</span> <span class=\"n\">h.comp_measurable</span> <span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">gf</span><span class=\"o\">,</span> <span class=\"n\">hgfm</span><span class=\"o\">,</span> <span class=\"n\">hgf</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>I get a measurable function <code>gf : X → α</code> that is a.e.-equal to <code>g ∘ f</code> and I need to find a measurable function <code>Y → α</code>that is <code>(map f μ)</code>-a.e. equal to <code>g</code>.</p>",
        "id": 365959595,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686681371
    },
    {
        "content": "<p>So, there are two issues:</p>\n<ol>\n<li>The function <code>gf</code> is not guaranteed to factor through <code>f</code>.</li>\n<li>Even if it factors through <code>f</code>, the image of the set <code>{x | gf x ≠ g (f x)}</code> can be non-measurable and have positive outer measure (at least I can't prove otherwise yet).</li>\n</ol>",
        "id": 365960065,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686681506
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"464202\">@Felix Weilacher</span> <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 365961341,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686681794
    },
    {
        "content": "<p>This is very sketchy... don't take my word that it's all correct or optimal</p>\n<p>Assume <code>μ</code> is sigma-finite. </p>\n<ul>\n<li>\n<p>Suppose <code>s : set Y</code> is such that <code>f⁻¹(s)</code> is <strong>null-measurable</strong> w.r.t. <code>μ</code>. Let <code>b ⊆ f⁻¹(s)</code> be Borel such that <code>f⁻¹(s) ∖ b</code> is <code>μ</code>-null. Let <code>b ⊆ a ⊆ f⁻¹ s</code> be the set of <code>x : X</code> such that <code>f(x) = f(x')</code> for some <code>x' ∈ b</code>. Then <code>a</code> is analytic and <code>f</code>-invariant (a union of fibers). </p>\n</li>\n<li>\n<p>Now <code>f '' a ⊆ s </code> is still analytic, so since the pushforward is a sigma-finite Borel measure, it is null-measurable (!). Let <code>c ⊆ f '' a</code> be Borel such that the <code>f '' a ∖ c</code> is pushforward-null. </p>\n</li>\n<li>\n<p>Since <code>a</code> was <code>f</code>-invariant. The preimage of this set, which is <code>μ</code>-null, is <code>a ∖ f⁻¹(c)</code>. Chaining, we get that <code>f⁻¹(s) \\setminus f⁻¹(c)</code> is <code>μ</code>-null. Thus <code>s ∖ c</code> is pushforward null. <code>c</code> was Borel, so <code>s</code> is null-measurable. </p>\n</li>\n<li>\n<p>So this shows <code>f</code> is a quotient map for the null-measurable sigma algebras. Since our spaces are second countable, this should be equivalent to what you want. </p>\n</li>\n</ul>\n<p>Unfortunately the fact (!) that analytic sets are null-measurable is nontrivial and we don't have it.</p>",
        "id": 365985299,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686688255
    },
    {
        "content": "<p>Oh, maybe the equivalence at the end also requires the measurable space on alpha to be countably generated?</p>",
        "id": 365985512,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686688321
    },
    {
        "content": "<p>Where can I find the proof of (!)?</p>",
        "id": 365986238,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686688530
    },
    {
        "content": "<p>Kechris has it as Theorem 21.10. That seems to use other stuff we don't have though. The proof here <a href=\"https://www.personal.psu.edu/jsr25/Spring_11/Lecture_Notes/dst_lecture_notes_2011_Regularity-Analytic.pdf\">https://www.personal.psu.edu/jsr25/Spring_11/Lecture_Notes/dst_lecture_notes_2011_Regularity-Analytic.pdf</a><br>\n(13.5) seems not too bad.</p>",
        "id": 365988443,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1686689146
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"464202\">Felix Weilacher</span> <a href=\"#narrow/stream/116395-maths/topic/borel.20sigma-algebra.20.26.20quotient.20topology/near/365988443\">said</a>:</p>\n<blockquote>\n<p>Kechris has it as Theorem 21.10. That seems to use other stuff we don't have though. </p>\n</blockquote>\n<p>Also 29.C in Kechris provides (the same?) shortcut using covers.</p>",
        "id": 365989263,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1686689405
    },
    {
        "content": "<p>Thank you! I'll have a look tonight.</p>",
        "id": 365990454,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686689807
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/19186\">#19186</a></p>",
        "id": 366031464,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686709247
    },
    {
        "content": "<p>I think that I know a proof that doesn't use \"analytic -&gt; null-measurable\". I'll try to formalize it tonight to see if it works.</p>",
        "id": 397188083,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697580180
    },
    {
        "content": "<p>(I didn't check all the details yet)</p>",
        "id": 397188096,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697580189
    },
    {
        "content": "<p>UPD: no, there was an error. More details after I try to fix it.</p>",
        "id": 397237720,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697609315
    },
    {
        "content": "<p>I tried to use <code>ae_map_iff</code> on a set that was not known to be measurable.</p>",
        "id": 397239240,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697610082
    },
    {
        "content": "<p>In your proof, how do you prove the first step, i.e. that <code>a = f ⁻¹' (f '' s)</code> is an analytic set?</p>",
        "id": 397319443,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697637572
    },
    {
        "content": "<p>That <code>s</code> should be a <code>b</code>. </p>\n<p>It is generally true that the pre-image of an analytic set under a Borel measurable map <code>f: X \\to Y</code> is analytic. But I don't think we have it in mathlib. <br>\nProof:  Let our analytic set be <code>range g</code>, where g is a measurable fn from some Polish space <code>Z</code>. Consider the set of points <code>(x,z)</code> in <code>X \\times Z</code> such that <code>f(x) = g(z)</code>. This is Borel since <code>f</code> and <code>g</code> are. <code>f ⁻¹' (range g)</code> is the image of this set under projection to <code>X</code>, so it is analytic since projection is Borel measurable.</p>",
        "id": 397330982,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1697640864
    },
    {
        "content": "<p>Then I think that I can deduce the theorem from Lusin separation thm. I'll verify once again (much) later tonight.</p>",
        "id": 397358226,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697650681
    },
    {
        "content": "<p>No, I was wrong again. Indeed, this result needs \"analytic -&gt; null-measurable\".</p>",
        "id": 397429034,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697691151
    },
    {
        "content": "<p>I'm slowly reading prerequisites. I'll ask lots of questions here.</p>\n<ol>\n<li>Is \"Cantor scheme\" as in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CantorScheme.inducedMap#doc\">docs#CantorScheme.inducedMap</a> different from Souslin scheme? If not, should we mention one more name in the docs?</li>\n<li>Is there a reason to use a sigma type instead of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=PFun#doc\">docs#PFun</a> ?</li>\n</ol>",
        "id": 397431164,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697692870
    },
    {
        "content": "<ol>\n<li>Indeed, a Souslin Scheme is a <code>CantorScheme</code> with <code>\\beta = nat</code>. I agree that this should be mentioned in the docs. In real life Cantor Scheme usually means <code>\\beta = {0,1}</code>.  (I wanted to call this a <code>Scheme</code> in some namespace, but understandably this was not popular.)</li>\n<li>I'm not sure I can give a good one. I definitely considered using partial functions when writing <code>CantorScheme</code>, but found them more cumbersome.</li>\n</ol>",
        "id": 397530844,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1697729611
    },
    {
        "content": "<p>Btw, Pedro mentioned 29.C in Kechris above, which is also at the link below. I think it would be a good approach.</p>\n<p><a href=\"http://homepages.math.uic.edu/~rosendal/WebpagesMathCourses/MATH511-notes/DST%20notes%20-%20Szpilrajn01.pdf\">http://homepages.math.uic.edu/~rosendal/WebpagesMathCourses/MATH511-notes/DST%20notes%20-%20Szpilrajn01.pdf</a></p>",
        "id": 397530969,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1697729652
    },
    {
        "content": "<p>This shouldn't be too bad to implement given the <code>CantorScheme</code> framework. \"closed under the souslin operation\" just means if <code>A: list nat \\to X</code> is such that each <code>A s</code> is a <code>MeasurableSet</code>, then <code>range (inducedMap A).2</code> is a <code>MeasurableSet</code>.</p>",
        "id": 397532033,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1697730024
    },
    {
        "content": "<p>Huh, there is also 29.16 in Kechris which does not require sigma finiteness</p>",
        "id": 397533107,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1697730393
    },
    {
        "content": "<p>Yes, I'm reading 29.C (and dependencies about Souslin schemes) in Kechris now.</p>",
        "id": 397550246,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697737369
    },
    {
        "content": "<p>I'm going to move parts of the construction that doesn't depend on topology to a new file.</p>",
        "id": 397593931,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697759925
    },
    {
        "content": "<p>which construction?</p>",
        "id": 397608397,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1697767603
    },
    {
        "content": "<p>Cantor scheme, PiNat.res</p>",
        "id": 397614961,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697770583
    }
]