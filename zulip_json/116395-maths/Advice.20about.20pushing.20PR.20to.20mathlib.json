[
    {
        "content": "<p>I need advices about the reasonable way to push to mathlib my work on the Jordan theorem (for symmetric groups), the Iwasawa criterion and simplicity of the alternating group which is at <a href=\"https://github.com/leanprover-community/mathlib/tree/acl-Wielandt\">branch#acl-Wielandt</a> . </p>\n<p>One intermediate result is of independent interest but fairly long (3000 lines), contained in <a href=\"https://github.com/leanprover-community/mathlib/blob/acl-Wielandt/src/acl-sandbox/group_theory/jordan/conj_class_count.lean\">https://github.com/leanprover-community/mathlib/blob/acl-Wielandt/src/acl-sandbox/group_theory/jordan/conj_class_count.lean</a> : it studies the centralizer of a permutation, shows that it is a semi-direct product of a product of symmetric groups (on the cycle factors of given size) by a product of cyclic groups, and, as a consequence, derives the classical formula for the number of permutations of given cycle type. In a second file <a href=\"https://github.com/leanprover-community/mathlib/blob/acl-Wielandt/src/acl-sandbox/group_theory/jordan/conj_class2.lean\">https://github.com/leanprover-community/mathlib/blob/acl-Wielandt/src/acl-sandbox/group_theory/jordan/conj_class2.lean</a>,  I prove the criterion for two alternating permutations of same cycle type to be conjugate in the alternating group (at most one cycle of each length, all odd, and at most one fixed point).</p>\n<p>(I can't find the way do point directly to a theorem of a given branch/fileâ€¦ the counting result is equiv.perm_with_cycle_type_card, at line 3689)</p>",
        "id": 355049471,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1683010926
    },
    {
        "content": "<p>A few comments:</p>\n<ul>\n<li>Your line counts are overestimates, as your files have large sections of comments that presumably will be dropped.</li>\n<li>Nevertheless the files probably each need to be split into several parts.</li>\n<li>You should begin PR'ing the background material. Your section boundaries might be good approximations of how much to PR at a time.</li>\n<li>Your imports are nearly completely ported to mathlib4. You should work out what is missing, and consider just PR'ing directly to mathlib4. You can run your files through mathport \"one shot\" to (optimistically) translate them to Lean 4.</li>\n</ul>",
        "id": 355051896,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683011688
    },
    {
        "content": "<p>Just to stress this: mathlib4 is not open to refactors but will certainly accept PRs which eg add new files</p>",
        "id": 355052295,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1683011827
    },
    {
        "content": "<p>if we're adding new files that are based on existing lean3 files, surely it's just easier to add them to mathlib3 and let them be run through mathport there?</p>",
        "id": 355080239,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1683018265
    },
    {
        "content": "<p>Getting the mathport output is easier, but it means two pull requests for the author to make and for the maintainers to review rather than one</p>",
        "id": 355080984,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1683018418
    },
    {
        "content": "<p>There's no obligation for the author to make the (edit: not forward-) porting PR; and optimistically, all they need to do is run <code>start_port.sh</code> (which generates a PR that is trivial to review)</p>",
        "id": 355081799,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683018597
    },
    {
        "content": "<p>If you can't translate your own code into lean 4 then just run mathport oneshot on it. PRing to mathlib3 adds an unnecessary extra layer</p>",
        "id": 355125309,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1683028383
    },
    {
        "content": "<p>I don't fully agree. The reviewing experience is better for mathlib3 (due to github annotations and <code>lean --json</code> not working in Lean 4), and when someone says \"oh this lemma belongs in another file\" then you don't end up with random lemmas missing from mathlib3</p>",
        "id": 355126054,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683028569
    },
    {
        "content": "<p>Yes, but we <em>really</em> want to close off the mathlib3 PR pipeline sooner rather than later, and I think this outweighs ergonomic issues about reviewing.</p>",
        "id": 355128445,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683029061
    },
    {
        "content": "<p>It's probably a good idea to improve mathlib4 ergonomics anyway, if that's a blocker</p>",
        "id": 355129157,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1683029224
    },
    {
        "content": "<p>IMHO, until we formally declare a deadline for closing mathlib3 for PRs, authors (esp. those who have no experience with PR review etc) are welcome to make PRs to mathlib3 if they want.</p>",
        "id": 360975975,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685001979
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> You may start with small PRs. E.g., a couple of lemmas that were missing in an existing file. Or all your lemmas about <code>cardinal.to_part_enat</code>.</p>",
        "id": 360977286,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685002275
    },
    {
        "content": "<p>Be prepared that reviewers will ask you to rename lemmas, move them to other files, adjust formatting to mathlib style etc.</p>",
        "id": 360977968,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685002436
    },
    {
        "content": "<p>Also be prepared that reviewers will golf your proofs a lot. E.g., your <code>le_stabilizer_iff</code> is just <code>iff.rfl</code>.</p>",
        "id": 360985446,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685004091
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/116395-maths/topic/Advice.20about.20pushing.20PR.20to.20mathlib/near/360977286\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> You may start with small PRs. E.g., a couple of lemmas that were missing in an existing file. Or all your lemmas about <code>cardinal.to_part_enat</code>.</p>\n</blockquote>\n<p>I am completely lost in front of the task and how to do even just that.<br>\nShould I put it in a new file ? otherwise, in which one? <br>\n(Should I write the mathlib4 file ?<br>\nOr shouldn't I convert everything to lean4 now that the port is almost done?)<br>\nWhat if, in a later review, people observe that these lemmas are not so useful?</p>",
        "id": 366126568,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686738287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/116395-maths/topic/Advice.20about.20pushing.20PR.20to.20mathlib/near/360985446\">said</a>:</p>\n<blockquote>\n<p>Also be prepared that reviewers will golf your proofs a lot. E.g., your <code>le_stabilizer_iff</code> is just <code>iff.rfl</code>.</p>\n</blockquote>\n<p>Nobody's ever enough prepared for that, but in this case I'm not sure that this lemma can just be proved by <code>iff.rfl</code>.</p>",
        "id": 366129887,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686738856
    },
    {
        "content": "<blockquote>\n<p>What if, in a later review, people observe that these lemmas are not so useful?</p>\n</blockquote>\n<p>Even if they're not ultimately useful to the end result you're working on (i.e. because you found a shorter proof), usually the sort of helper lemmas you build along the way belong in mathlib anyway; especially if their statements are very simple.</p>",
        "id": 366130055,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686738894
    },
    {
        "content": "<p>OK, so let's try as <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> suggested! <br>\nThe easiest way is to go step by step, open inga new branch with just the intended few files?</p>",
        "id": 366133594,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1686739540
    },
    {
        "content": "<p>yes, even a single file at a time can often be good, because PRs of that form are both easy to review and edit</p>",
        "id": 366135160,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1686739799
    },
    {
        "content": "<p>editing PRs with multiple files that depend on each other can end up being a yellow bar of hell invitation...</p>",
        "id": 366135273,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1686739812
    },
    {
        "content": "<p>(but sometimes unavoidable)</p>",
        "id": 366135349,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1686739833
    }
]