[
    {
        "content": "<p>I need to generalize <code>topological_monoid</code> to <code>topological_semigroup</code>. At this point I do not see why not defining</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">has_continuous_mul</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_mul</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">continuous_mul</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"o\">(</span><span class=\"bp\">λ</span><span class=\"n\">p</span><span class=\"o\">:</span><span class=\"n\">α</span><span class=\"bp\">×</span><span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">))</span>\n</code></pre></div>\n\n\n<p>so, first question: does it still make sense to have topological monoid at this point? It can be obtained just by combining <code>monoid</code> and <code>has_continuous_mul</code>.  I would just delete it. Second question: in case it is a good idea to keep <code>topological_monoid</code>just for psychological reasons, I do not know how to keep it. If I define</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">abbreviation</span> <span class=\"n\">topological_monoid</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">monoid</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"o\">:=</span> <span class=\"n\">topological_semigroup</span> <span class=\"n\">α</span>\n</code></pre></div>\n\n\n<p>then any structure, like semiring, extending <code>topological_monoid</code> breaks. Should I then make structures inherit from <code>has_continuous_mul</code> and manually define coercions to <code>topological_monoid</code>? I mean at this point it looks more logic to delete it and just use <code>has_continuous_mul</code>. If I define it like</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">topological_monoid</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">monoid</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kn\">extends</span> <span class=\"n\">topological_semigroup</span> <span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n</code></pre></div>\n\n\n<p>then, because of protected inheritance, all the files that try to define a <code>topological_monoid</code> with one constructor break. Is there any way to get rid of protected inheritance for this class and make it so that it can be constructed with one constructor? This is the only way I see to try to keep it.</p>",
        "id": 204266915,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1595024965
    },
    {
        "content": "<p>I think you can get rid of <code>topological_monoid</code>. And I'm sure you should get rid of the habit of posting in \"new members\". This question has nothing to do here.</p>",
        "id": 204294367,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1595066782
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/has_continuous_mul\">#new members &gt; has_continuous_mul</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span></p>",
        "id": 204294382,
        "sender_full_name": "Notification Bot",
        "timestamp": 1595066827
    },
    {
        "content": "<p>It might make sense to add <code>has_continuous_inv</code> as well, and make <code>topological_group</code> extend these two classes. Then we'll have <code>has_continuous_inv ennreal</code>. And <code>has_continuous_inv'</code> could be a type class for \"inv is continuous at every nonzero element\"</p>",
        "id": 204305361,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595087214
    }
]