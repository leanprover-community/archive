[
    {
        "content": "<p>My student <span class=\"user-mention\" data-user-id=\"566592\">@FMLJohn</span> just asked me the following question, which has stumped me. He has a graded ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><msub><mo>⊕</mo><mi>i</mi></msub><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A=\\oplus_i A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mbin\">⊕</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and a graded <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>-module <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><msub><mo>⊕</mo><mi>i</mi></msub><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">M=\\oplus_i M_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mbin\">⊕</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (all sums over <code>Nat</code>). Note that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> might be a polynomial ring, it's not literally equal to the direct sum, it's internally graded, and the same is true for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>. Here's how one might set this up:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"bp\">𝒜</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Submodule</span> <span class=\"n\">ℤ</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">GradedRing</span> <span class=\"bp\">𝒜</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">A</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">ℳ</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Submodule</span> <span class=\"n\">ℤ</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">SetLike.GradedSmul</span> <span class=\"bp\">𝒜</span> <span class=\"n\">ℳ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DirectSum.Decomposition</span> <span class=\"n\">ℳ</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Note that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">A_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is a subring of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>. He can put things like \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">A_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>-module$$\" into the typeclass inference system, but he can't put things like \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>⊕</mo><mi>i</mi></msub><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\oplus_iM_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mbin\">⊕</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>-module\" in, because the typeclass inference system can't see <code>𝒜 </code>.  A <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> of a failure:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"bp\">𝒜</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Submodule</span> <span class=\"n\">ℤ</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">GradedRing</span> <span class=\"bp\">𝒜</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">A</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">ℳ</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Submodule</span> <span class=\"n\">ℤ</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">SetLike.GradedSmul</span> <span class=\"bp\">𝒜</span> <span class=\"n\">ℳ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DirectSum.Decomposition</span> <span class=\"n\">ℳ</span><span class=\"o\">]</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Module</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"bp\">⨁</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">ℳ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">GradedModule.isModule</span> <span class=\"bp\">𝒜</span> <span class=\"n\">ℳ</span>\n</code></pre></div>\n<p>The (expected) error is <code>cannot find synthesization order...all remaining arguments have metavariables</code></p>\n<p>Does this mean that there should be some typeclass <code>HasGrading A</code> which carries <code>𝒜</code> around? John would like to make things like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>⊕</mo><mrow><mi>i</mi><mo>≥</mo><mi>t</mi></mrow></msub><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\oplus_{i\\geq t}M_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9285em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mbin\">⊕</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≥</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> into an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>-module, for example. This comes up in the theory of <a href=\"https://en.wikipedia.org/wiki/Hilbert%E2%80%93Poincar%C3%A9_series\">Hilbert-Poincar\\'e series</a>.</p>",
        "id": 395264810,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696600360
    },
    {
        "content": "<p>Can you make do by replacing A with the direct sum of its pieces?</p>",
        "id": 395299461,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696611857
    },
    {
        "content": "<p>The problem with <code>HasGrading</code> is that I think it's rare to have a canonical grading</p>",
        "id": 395299508,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696611883
    },
    {
        "content": "<p>I suspect that we can. Is this really what we have to do though? It's going to get really messy when we have an A-module and a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>⊕</mo><mi>i</mi></msub><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\oplus_i A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mbin\">⊕</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>-module and want to consider, say their tensor product. I should say that I don't think that this will happen for the current application though.</p>",
        "id": 395304148,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696614068
    },
    {
        "content": "<p>In our work with Maria Ines,  we had the impression that some basic work on graded stuff is still missing. For example, quotients of submodules,  or graduations which are not indexed by the same thing on the ring and on the module (some action of one on the other would be required, of course ).</p>",
        "id": 395408542,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1696677636
    },
    {
        "content": "<p>In alg geom it's pretty common to have the rings indexed by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> and the modules by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span>.</p>",
        "id": 395411889,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696679725
    },
    {
        "content": "<p>The (non-categorical) graded stuff is still fairly young in mathlib; <span class=\"user-mention\" data-user-id=\"252627\">@Jujian Zhang</span> and I put a few things in, but I haven't seen much other work on it yet.</p>",
        "id": 395425907,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696689466
    },
    {
        "content": "<p>Sounds like for your use case Kevin, the grades should combine with <code>+ᵥ</code> instead of <code>+</code></p>",
        "id": 395426039,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696689546
    },
    {
        "content": "<p>(which would be an easy refactor!)</p>",
        "id": 395426239,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696689672
    },
    {
        "content": "<p>Done in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7573\">#7573</a></p>",
        "id": 395580115,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696803422
    },
    {
        "content": "<p>Great!</p>",
        "id": 395647570,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1696840844
    },
    {
        "content": "<p>There's a long tail here though; I don't think we have the fact that <code>Nat</code> acts additively on <code>Int</code></p>",
        "id": 395654869,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696843324
    },
    {
        "content": "<p>And we certainly don't have the fact that <code>Nat</code> acts additively on any <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddMonoidWIthOne#doc\">docs#AddMonoidWIthOne</a></p>",
        "id": 395654942,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696843340
    },
    {
        "content": "<p>(tangentially, there are some simple results about graded rings in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7574\">#7574</a>/ <a href=\"https://github.com/leanprover-community/mathlib4/pull/7575\">#7575</a>/ <a href=\"https://github.com/leanprover-community/mathlib4/pull/7577\">#7577</a> that would be nice to have)</p>",
        "id": 395655316,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696843461
    },
    {
        "content": "<p>The point is that not only should one have<code>Nat</code> acting on <code>Int</code>, but also <code>Nat ^ n</code> acting on <code>Int ^ n</code>, or, but that would be more natural <code>M</code>acting on <code>N</code> for any <code>M : SubAddMonoid N</code> where <code>AddMonoid N</code>.</p>",
        "id": 395656816,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1696843919
    },
    {
        "content": "<p>Something like that already exists: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddSubmonoid.addAction#doc\">docs#AddSubmonoid.addAction</a>.</p>",
        "id": 395657237,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696844049
    },
    {
        "content": "<p>However, <code>Nat</code> is not a submonoid of <code>Int</code>. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 395657408,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696844117
    },
    {
        "content": "<p>yes, and of course it is not…</p>",
        "id": 395659971,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1696844915
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/116395-maths/topic/submodules.20of.20a.20graded.20module/near/395656816\">said</a>:</p>\n<blockquote>\n<p>but also <code>Nat ^ n</code> acting on <code>Int ^ n</code></p>\n</blockquote>\n<p>This strategy is dangerous; how  does <code>Nat ^ n</code> act on <code>(Nat ^ n) ^ n</code>?</p>",
        "id": 395660667,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696845127
    },
    {
        "content": "<p>(we have the action you ask for already, it's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Pi.vadd%27#doc\">docs#Pi.vadd'</a>; but it's also diamond-inducing)</p>",
        "id": 395660779,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696845162
    },
    {
        "content": "<p>I observe that mathlib's tendency is to have all actions as implicit instances. I don't think that this is how mathematicians work.</p>",
        "id": 395671603,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1696849006
    },
    {
        "content": "<p>I think arguably the actions that mathematicians wouldn't write implicitly (such as <code>Pi.vadd'</code>?) shouldn't be <code>instances</code></p>",
        "id": 395671783,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696849078
    },
    {
        "content": "<p>But presumably you agree that a mathematical would write <code>rv</code> for the multiplicative action of <code>r : R</code> on <code>v : R ^ n</code> with the action implicit?</p>",
        "id": 395671926,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696849125
    },
    {
        "content": "<p>Yes, s·he would, but only within a restricted amount of time would this notation be fixed to some definition, while a mathlib instance is like a Bourbaki definition: it's once and for all, bis ins Ewigkeit.</p>",
        "id": 395691928,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1696855711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/submodules.20of.20a.20graded.20module/near/395654869\">said</a>:</p>\n<blockquote>\n<p>There's a long tail here though; I don't think we have the fact that <code>Nat</code> acts additively on <code>Int</code></p>\n</blockquote>\n<p>I added that a year ago</p>",
        "id": 395692458,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696855888
    },
    {
        "content": "<p>The work of <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> on the change of variable formula (more precisely on Suslin's theorem) shows that it is possible to handle a series of instances (in his case, many topological space structures on the same type), but it becomes complicated to do so when other instances depend on them. Actions are one thing, but there are also assumptions that they commute together, etc.</p>",
        "id": 395692833,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1696855995
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/116395-maths/topic/submodules.20of.20a.20graded.20module/near/395692458\">said</a>:</p>\n<blockquote>\n<p>I added that a year ago</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> Nat, Int, VAdd</p>",
        "id": 395693275,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696856115
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> nothing found</p>",
        "id": 395693279,
        "sender_full_name": "loogle",
        "timestamp": 1696856116
    },
    {
        "content": "<p>it's v0 of the @yael engine, which only says “it exists because I wrote it”.<br>\nwhen zulip has the v1, it will give the precise location.</p>",
        "id": 395693661,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1696856215
    },
    {
        "content": "<p>V0 also occasionally has this bug where they refer to an unmerged Lean 3 PR</p>",
        "id": 395694024,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696856332
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/submodules.20of.20a.20graded.20module/near/395580115\">said</a>:</p>\n<blockquote>\n<p>Done in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7573\">#7573</a></p>\n</blockquote>\n<p>The conversation here has gotten side-tracked a little; it would be great if someone could give this a reivew!</p>",
        "id": 397502720,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697721198
    }
]