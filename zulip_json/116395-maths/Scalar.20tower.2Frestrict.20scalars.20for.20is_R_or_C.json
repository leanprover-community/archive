[
    {
        "content": "<p>If I have <code>[is_R_or_C k] [module k E]</code> what is the correct way to get a compatible instance of <code>[module ℝ E]</code>? explicitly asking for that and <code>[is_scalar_tower ℝ k E]</code> seems a bit stupid because the action is already determined, but the restrict scalars version also seems a bit dangerous since there might be doubled instances.</p>\n<p>This is what I got working:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.normed_space.is_R_or_C</span>\n<span class=\"kd\">@[priority 900]</span>\n<span class=\"kd\">instance</span> <span class=\"n\">module.is_R_or_C_to_real</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">is_R_or_C</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">module</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"n\">restrict_scalars.module</span> <span class=\"n\">ℝ</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span>\n</code></pre></div>",
        "id": 286953849,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1655835114
    },
    {
        "content": "<p><code>[is_scalar_tower ℝ k E]</code> is the way to go. From what I recall this instance you have there is bad because it loops when <code>k</code> is <code>ℝ</code> (I tried it at some point).</p>",
        "id": 286955331,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1655835773
    },
    {
        "content": "<p>ok, thanks</p>",
        "id": 286955969,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1655836108
    }
]