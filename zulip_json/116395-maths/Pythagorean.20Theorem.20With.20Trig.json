[
    {
        "content": "<p>Hello! <br>\nBecause of the recent news story on high schoolers proving the pythagorean theorem I found myself looking at Zimba's proof using trig. I am attempting to formalize part of the argument. I made a lot of progress but I have become very stuck today. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">--Formalization of Part 4 of Zimba's Proof at this URL: https://forumgeom.fau.edu/FG2009volume9/FG200925.pdf</span>\n<span class=\"c1\">--Discovered because of the link from Cut The Knot here: https://www.cut-the-knot.org/pythagoras/TrigProof.shtml#Zimba</span>\n\n\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.trigonometric.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"c1\">-- Define local notation for pi</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">π</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">real.pi</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">cos</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">real.cos</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">sin</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">real.sin</span>\n\n<span class=\"c1\">--establish that if x,y are in the domain of cosine with y less than x then so is x minus y</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">trig_bounds</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">π</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">π</span> <span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">split</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">linarith</span><span class=\"o\">,},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c1\">--apply the subtraction formulas for cosine and sine repeatedly, which are already in Lean</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">subtraction_to_pythag</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">cos</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"n\">rw</span> <span class=\"n\">sub_eq_add_neg</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">),</span>\n      <span class=\"n\">rw</span> <span class=\"n\">neg_eq_neg_one_mul</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">mul_sub</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span><span class=\"o\">,</span>\n    <span class=\"kd\">end</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">real.cos_sub</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">),</span>\n<span class=\"n\">rw</span> <span class=\"n\">real.cos_sub</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">real.sin_sub</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n<span class=\"c1\">--simp \"works\" here to close the goal but it ends up using the pythagorean theorem to do it</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n\n<span class=\"kd\">end</span>\n\n\n<span class=\"c1\">--just need to do some algebra to imply Pythagoras</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">pythag_with_trig</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">cos</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">rw</span> <span class=\"n\">mul_comm</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">self_eq_mul_right.1</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c1\">--connect the above lemma to triangles</span>\n</code></pre></div>\n<p>Here is the feedback from lean:</p>\n<p>invalid apply tactic, failed to unify<br>\n  sin x ^ 2 + cos x ^ 2 = 1<br>\nwith<br>\n  ?m_2 = 1</p>\n<p>Can anyone help? Thanks!</p>",
        "id": 346019221,
        "sender_full_name": "Taylor Belcher",
        "timestamp": 1680284191
    },
    {
        "content": "<p><code>self_eq_mul_right</code> is only valid for groups, while you're in a field. For example, consider your <code>h</code>, what if <code>cos y</code> is always <code>0</code>? Then <code>h</code> is true.</p>",
        "id": 346019652,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1680284320
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> <br>\nThank you, this is helpful. </p>\n<p>It looks like somewhere in the proof I need to confirm that cos y will be in the interval (0,1) because that is what I want for this proof. </p>\n<p>And also I will look for an equivalent version of self_eq_mul_right in a field.</p>",
        "id": 346024405,
        "sender_full_name": "Taylor Belcher",
        "timestamp": 1680285719
    },
    {
        "content": "<p>I've heard mutterings about this, but seen no link to an actual paper. Can someone supply?</p>",
        "id": 346347995,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1680437125
    },
    {
        "content": "<p>This video attempts to reconstruct the proof from an image of the presentation. It's the best I've been able to find.<br>\n<a href=\"https://www.youtube.com/watch?v=nQD6lDwFmCc\">https://www.youtube.com/watch?v=nQD6lDwFmCc</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"nQD6lDwFmCc\" href=\"https://www.youtube.com/watch?v=nQD6lDwFmCc\"><img src=\"https://uploads.zulipusercontent.net/8fb2db44de199e4c4f80150143d8d80bee099b2e/68747470733a2f2f692e7974696d672e636f6d2f76692f6e5144366c4477466d43632f64656661756c742e6a7067\"></a></div>",
        "id": 346422295,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1680475808
    },
    {
        "content": "<p>The Zimba proof I have in the comments in the code is the older one. The recent proof from the two high schoolers I have not seen.</p>",
        "id": 346564717,
        "sender_full_name": "Taylor Belcher",
        "timestamp": 1680527783
    },
    {
        "content": "<p>I found an issue in my code by the way. Lean was using the pythagorean theorem in simp. But I have fixed it. Still working on that issue and the issues from before.</p>",
        "id": 346564865,
        "sender_full_name": "Taylor Belcher",
        "timestamp": 1680527825
    },
    {
        "content": "<p>I find these \"prove true thing X without assuming a proof of true thing Y\" questions very difficult to formalise. I wonder if this is somehow an informal notion, like the Langlands correspondence being canonical</p>",
        "id": 346565507,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680527980
    },
    {
        "content": "<p>I guess it's not exactly what is meant in this Pythagorean theorem example, but reverse math is one way to formalize such questions.</p>",
        "id": 346660052,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1680549860
    },
    {
        "content": "<p>I fixed some issues, but there are still others.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">--Formalization of Part 4 of Zimba's Proof at this URL: https://forumgeom.fau.edu/FG2009volume9/FG200925.pdf</span>\n<span class=\"c1\">--Discovered because of the link from Cut The Knot here: https://www.cut-the-knot.org/pythagoras/TrigProof.shtml#Zimba</span>\n\n\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.trigonometric.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span>\n\n<span class=\"c1\">-- Define local notation for pi</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">π</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">real.pi</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">cos</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">real.cos</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">sin</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">real.sin</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">cos</span> <span class=\"n\">y</span>\n<span class=\"k\">#check</span> <span class=\"n\">sin</span> <span class=\"n\">x</span>\n\n\n\n<span class=\"c1\">--establish that if x,y are in the domain of cosine with y less than x then so is x minus y</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">input_bounds</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">π</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">π</span> <span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">split</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">linarith</span><span class=\"o\">,},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c1\">--establish domain and range of real cos without using the pythagorean theorem</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">cos_range</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">π</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">cos</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">cos</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span>  <span class=\"o\">:=</span>\n<span class=\"c1\">--lean does not appear to be recognizing cos x as a real number</span>\n<span class=\"kd\">begin</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c1\">--establish domain and range of sin without using the pythagorean theorem</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">sin_range</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">π</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sin</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">sin</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span>  <span class=\"o\">:=</span>\n<span class=\"c1\">--lean does not appear to be recognizing sin x as a real number</span>\n<span class=\"kd\">begin</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c1\">--apply the subtraction formulas for cosine and sine repeatedly, which are already in Lean</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">subtraction_to_pythag</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n\n<span class=\"c1\">--I think I need to add an intros here but I am still having issues with pattern matching later.</span>\n<span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n\n\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">cos</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"n\">rw</span> <span class=\"n\">sub_eq_add_neg</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">),</span>\n      <span class=\"n\">rw</span> <span class=\"n\">neg_eq_neg_one_mul</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">mul_sub</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">neg_mul</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">neg_sub_neg</span><span class=\"o\">,</span> <span class=\"n\">add_sub_cancel'_right</span><span class=\"o\">],</span>\n    <span class=\"kd\">end</span><span class=\"o\">,</span>\n<span class=\"n\">conv</span>\n  <span class=\"kd\">begin</span>\n    <span class=\"n\">to_lhs</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">real.cos_sub</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">),</span>\n<span class=\"n\">rw</span> <span class=\"n\">real.cos_sub</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">real.sin_sub</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">mul_add</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">mul_sub</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">add_comm</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n<span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n<span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n<span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n<span class=\"n\">rw</span> <span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n<span class=\"n\">conv</span>\n  <span class=\"kd\">begin</span>\n    <span class=\"n\">to_lhs</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">add_mul</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">pow_two</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">pow_two</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n\n<span class=\"c1\">--just need to do some algebra to imply Pythagoras</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">pythag_with_trig</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n\n<span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">cos</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">begin</span>\n  <span class=\"c1\">--exact subtraction_to_pythag,</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c1\">--connect the above lemma to triangles</span>\n</code></pre></div>",
        "id": 346888314,
        "sender_full_name": "Taylor Belcher",
        "timestamp": 1680621254
    }
]