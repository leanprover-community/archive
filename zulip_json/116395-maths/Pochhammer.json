[
    {
        "content": "<p>I just discussed with <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> about the Pochhammer polynomial. In mathlib we now have two variants, the ascending Pochhammer polynomial and the descending Pochhammer polynomial. I think it is possible to unify them.</p>\n<p>We can have <code>pochhammer (n : A) : R[X]</code> where:</p>\n<ul>\n<li><code>R</code> is a semiring</li>\n<li><code>A</code> is a locally finite linearly ordered additive monoid</li>\n<li>there is a coercion from <code>A</code> to <code>R</code></li>\n</ul>\n<p>Then <code>pochhammer n</code> can be defined as the product of <code>X + (i:R)</code> where <code>i</code> ranges over <code>(Finset.uIcc 0 n).erase n</code>.<br>\nFor <code>n : \\Z</code> negative, this recovers the descending version, and for <code>n : \\N</code> this recovers the ascending version. I think <code>\\N</code> and <code>\\Z</code> are the only values of <code>A</code> that we care about, but who knows... we've been surprised before.</p>\n<p>Interested to hear feedback about this proposed refactor. cc <span class=\"user-mention\" data-user-id=\"313038\">@Moritz Firsching</span></p>",
        "id": 390991352,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1694713776
    },
    {
        "content": "<p>I think you only need:</p>\n<ul>\n<li><code>R</code> is a semiring</li>\n<li><code>A</code> is a locally finite lattice with a <code>0</code></li>\n<li>there is a coercion from <code>A</code> to <code>R</code></li>\n</ul>\n<p>But I doubt it widens the applications.</p>",
        "id": 390992089,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694714044
    },
    {
        "content": "<p><code>A</code> needs a <code>0</code>, but yes, I guess you're right that we don't need the addition.</p>",
        "id": 390992563,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1694714257
    },
    {
        "content": "<p>I guess this can be done. I'm not entirely sure what the benefit over the status quo. At least it would probably be convenient to keep some names for both variants, since some other theorems might involve one or the other, or one could just get used to <code>pochhammer n</code> for negative n. Should this be in sync with  <code>Nat.ascFactorial</code> and <code>Nat.descFactorial</code>?</p>\n<p>In any case, no matter what the definition is, we should add the relations</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mi>n</mi></msub><mo>=</mo><msup><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>n</mi></msup><mo stretchy=\"false\">(</mo><mo>−</mo><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">{(x)}_n = {(x-n+1)}^{(n)} = (-1)^n (-x)^{(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0017em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2779em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0279em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>and </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mi>n</mi></msub><mo>=</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>n</mi></msup><mo stretchy=\"false\">(</mo><mo>−</mo><mi>x</mi><msub><mo stretchy=\"false\">)</mo><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x^{(n)} = {(x+n-1)}_{n} = (-1)^n (-x)_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.938em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0017em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>",
        "id": 390996343,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1694715911
    },
    {
        "content": "<p>One benefit is that some lemmas get deduplicated.</p>",
        "id": 390996895,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1694716144
    },
    {
        "content": "<p>makes sense</p>",
        "id": 390997233,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1694716274
    },
    {
        "content": "<p>I doubt <code>Nat.descFactorial</code> can fit in this picture because of the lack of map <code>ℤ → ℕ</code>. However, we could generalise <code>pochhammer</code> away from <code>Polynomial</code> so that the current <code>pochhammer k</code> becomes <code>pochhammer X k</code> and <code>Nat.ascFactorial n k</code> becomes <code>pochhammer n k</code>.</p>",
        "id": 390997499,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694716392
    },
    {
        "content": "<p>Which, I guess also generalises the <code>pochEval</code> that <span class=\"user-mention\" data-user-id=\"630477\">@Scott Carnahan</span> introduces in his PR on binomial rings.</p>",
        "id": 391005309,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1694719744
    },
    {
        "content": "<p>(<a href=\"https://github.com/leanprover-community/mathlib4/pull/6934\">#6934</a>)</p>",
        "id": 391005936,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694720028
    },
    {
        "content": "<p>Thanks for the pointer, I didn't even see that one</p>",
        "id": 391007453,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1694720679
    },
    {
        "content": "<p>I would be very happy with a generalization of <code>pochhammer</code> that didn't require me to deal with evaluation of polynomials.  This was one reason I introduced <code>pochEval</code>.  The other reason was because <code>Nat.ascFactorial</code> has an annoying shift by one, e.g., <code>Nat.ascFactorial n 1 = n+1</code> instead of <code>n</code>.  I wanted something that would generalize to semirings without occasionally needing to subtract one.</p>",
        "id": 391332235,
        "sender_full_name": "Scott Carnahan",
        "timestamp": 1694842591
    }
]