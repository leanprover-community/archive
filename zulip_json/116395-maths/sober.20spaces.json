[
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Sober_space\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Sober_space\">https://en.wikipedia.org/wiki/Sober_space</a><br>\nA <em>sober space</em> is a topological space in which every irreducible (i.e. nonempty preirreducible) subset <code>Z</code> has a <em>unique</em> generic point: i.e. there is a unique <code>x</code> in <code>Z</code> such that <code>Z</code> is the closure of <code>{x}</code>.</p>\n<p>I'm thinking of introducing <code>sober_space</code> as a class. Should it be a predicate, or should it carry a function that provides the generic point? I think in practice this function will never be computable, so I'm inclided to go for the predicate version.</p>",
        "id": 187478010,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580925524
    },
    {
        "content": "<p>The terminology gave rise to one of my favorite paper titles: <a href=\"https://link.springer.com/chapter/10.1007%2FBFb0089911\" target=\"_blank\" title=\"https://link.springer.com/chapter/10.1007%2FBFb0089911\">https://link.springer.com/chapter/10.1007%2FBFb0089911</a>. \"Scott\" here is Dana Scott, who first told me about it.</p>",
        "id": 187583884,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1581019830
    }
]