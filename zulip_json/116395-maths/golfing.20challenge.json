[
    {
        "content": "<p>This shouldn't be so hard/long/slow...</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">polynomial</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">polynomial</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- The formal derivative of polynomials, as additive homomorphism. -/</span>\n<span class=\"n\">noncomputable</span> <span class=\"n\">def</span> <span class=\"n\">derivative_hom</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span> <span class=\"bp\">→+</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"n\">derivative</span><span class=\"o\">,</span>\n  <span class=\"n\">map_zero&#39;</span> <span class=\"o\">:=</span> <span class=\"n\">derivative_zero</span><span class=\"o\">,</span>\n  <span class=\"n\">map_add&#39;</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">derivative_add</span> <span class=\"o\">}</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">derivative_neg</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">derivative</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">derivative</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">derivative_hom</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map_neg</span> <span class=\"n\">f</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">derivative_sub</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">derivative</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">-</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">derivative</span> <span class=\"n\">f</span> <span class=\"bp\">-</span> <span class=\"n\">derivative</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">derivative_hom</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map_sub</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">is_coprime_of_is_root_of_eval_derivative_ne_zero</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">is_root</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf&#39;</span> <span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">derivative</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">r</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">is_coprime</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">mul_div_by_monic_eq_iff_is_root</span> <span class=\"n\">at</span> <span class=\"n\">hf</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">hf</span> <span class=\"n\">at</span> <span class=\"n\">hf&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">eval_C</span><span class=\"o\">,</span> <span class=\"n\">eval_X</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span> <span class=\"n\">derivative_X</span><span class=\"o\">,</span> <span class=\"n\">derivative_mul</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">,</span>\n    <span class=\"n\">eval_sub</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">,</span> <span class=\"n\">ne</span><span class=\"bp\">.</span><span class=\"n\">def</span><span class=\"o\">,</span> <span class=\"n\">derivative_sub</span><span class=\"o\">,</span> <span class=\"n\">eval_add</span><span class=\"o\">,</span> <span class=\"n\">eval_mul</span><span class=\"o\">,</span> <span class=\"n\">derivative_C</span><span class=\"o\">,</span> <span class=\"n\">sub_self</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hf&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">is_coprime_of_dvd</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">push_neg</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"k\">assume</span> <span class=\"n\">eqz</span><span class=\"o\">,</span>\n    <span class=\"n\">apply_fun</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">degree</span> <span class=\"n\">at</span> <span class=\"n\">eqz</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">degree_X_sub_C</span> <span class=\"n\">at</span> <span class=\"n\">eqz</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">option</span><span class=\"bp\">.</span><span class=\"n\">no_confusion</span> <span class=\"n\">eqz</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintros</span> <span class=\"n\">a</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"bp\">⟨</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">hab</span><span class=\"bp\">⟩</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"kn\">irreducible</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">irreducible_of_degree_eq_one</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">degree_X_sub_C</span> <span class=\"bp\">_</span> <span class=\"o\">},</span>\n    <span class=\"n\">rcases</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">.</span><span class=\"n\">is_unit_or_is_unit</span> <span class=\"n\">hab</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">ha</span><span class=\"bp\">|⟨</span><span class=\"n\">b</span><span class=\"o\">,</span><span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">h1</span> <span class=\"n\">ha</span> <span class=\"o\">},</span>\n    <span class=\"n\">apply</span> <span class=\"n\">hf&#39;</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"n\">is_root</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">dvd_iff_is_root</span><span class=\"o\">,</span>\n    <span class=\"n\">refine</span> <span class=\"n\">dvd_trans</span> <span class=\"bp\">⟨</span><span class=\"err\">↑</span><span class=\"n\">b</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">units</span><span class=\"bp\">.</span><span class=\"n\">mul_inv_cancel_right</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">polynomial</span>\n</code></pre></div>",
        "id": 196060730,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588439011
    },
    {
        "content": "<p>Probably this can be golfed more, but heres a slightly different proof (I think?) </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">is_coprime_of_is_root_of_eval_derivative_ne_zero</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">is_root</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf&#39;</span> <span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">derivative</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">r</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">is_coprime</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">aa</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"err\">%ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">))</span>  <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">eq_sub_iff_add_eq</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">eq_sub_iff_add_eq&#39;</span><span class=\"o\">,</span> <span class=\"n\">mod_by_monic_eq_sub_mul_div</span><span class=\"o\">],</span>\n    <span class=\"n\">exact</span> <span class=\"n\">monic_X_sub_C</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">apply_fun</span> <span class=\"n\">derivative</span> <span class=\"n\">at</span> <span class=\"n\">aa</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">derivative_X</span><span class=\"o\">,</span> <span class=\"n\">derivative_mul</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">,</span> <span class=\"n\">derivative_sub</span><span class=\"o\">,</span> <span class=\"n\">mod_by_monic_X_sub_C_eq_C_eval</span><span class=\"o\">,</span> <span class=\"n\">derivative_C</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">aa</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">resolve_left</span> <span class=\"o\">(</span><span class=\"n\">dvd_or_coprime</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">irreducible_of_degree_eq_one</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">degree_X_sub_C</span> <span class=\"n\">r</span><span class=\"o\">)))</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">hf&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"n\">derivative</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">aa</span> <span class=\"bp\">▸</span> <span class=\"o\">(</span><span class=\"n\">dvd_add</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">dvd</span><span class=\"bp\">.</span><span class=\"n\">intro</span> <span class=\"o\">(</span><span class=\"n\">derivative</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">)))</span> <span class=\"n\">rfl</span><span class=\"o\">)),</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">dvd_iff_mod_by_monic_eq_zero</span> <span class=\"o\">(</span><span class=\"n\">monic_X_sub_C</span> <span class=\"bp\">_</span><span class=\"o\">),</span> <span class=\"n\">mod_by_monic_X_sub_C_eq_C_eval</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">apply_fun</span> <span class=\"n\">coeff</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">congr_fun</span> <span class=\"n\">this</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">coeff_C_zero</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 196063662,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1588443322
    },
    {
        "content": "<p>Thanks... it's certainly shorter than what I had.</p>",
        "id": 196069265,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588452132
    },
    {
        "content": "<p>Feel free to turn this into a kata.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">choose</span>\n\n<span class=\"c1\">-- Generalise this to arbitrary property that is respected by addition/multiplication:</span>\n<span class=\"c1\">-- example applications: sum_pos, sum_neg, ... others?</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">dvd_sum</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">let</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"n\">replace</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"err\">⊆</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">subset</span><span class=\"bp\">.</span><span class=\"n\">refl</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"n\">revert</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"n\">classical</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">{</span><span class=\"n\">simp</span><span class=\"o\">},</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">s&#39;</span> <span class=\"n\">ha</span> <span class=\"n\">IH</span> <span class=\"n\">hs&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">insert_subset</span> <span class=\"n\">at</span> <span class=\"n\">hs&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hs&#39;</span> <span class=\"k\">with</span> <span class=\"n\">has</span> <span class=\"n\">hs&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">,</span> <span class=\"n\">dvd_add</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">coe_nat_dvd</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"err\">∣</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">refine</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_cast</span><span class=\"bp\">⟩</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">dvd_sub_pow_of_dvd_sub</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">prime</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">k</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">ih</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span> <span class=\"o\">},</span> <span class=\"n\">clear</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ_eq_add_one</span><span class=\"o\">],</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">ih</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">hc</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">sub_eq_iff_eq_add&#39;</span> <span class=\"n\">at</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n  <span class=\"n\">replace</span> <span class=\"n\">hc</span> <span class=\"o\">:=</span> <span class=\"n\">congr_arg</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">pow_mul</span><span class=\"o\">,</span> <span class=\"n\">add_pow</span><span class=\"o\">,</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_range_succ</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">choose_self</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">cast_one</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">,</span>\n    <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">sub_self</span><span class=\"o\">,</span> <span class=\"n\">pow_zero</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n  <span class=\"n\">conv</span> <span class=\"o\">{</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">skip</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_succ</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_eq_pow</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hc</span><span class=\"o\">,</span> <span class=\"n\">pow_mul</span><span class=\"o\">,</span> <span class=\"n\">add_sub_cancel&#39;</span><span class=\"o\">],</span> <span class=\"n\">clear</span> <span class=\"n\">hc</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">dvd_sum</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">i</span> <span class=\"n\">hi</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">mem_range</span> <span class=\"n\">at</span> <span class=\"n\">hi</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mul_pow</span><span class=\"o\">,</span>\n  <span class=\"n\">conv</span> <span class=\"o\">{</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">skip</span><span class=\"o\">,</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">skip</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">mul_comm</span> <span class=\"o\">},</span>\n  <span class=\"n\">repeat</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">dvd_mul_of_dvd_right</span> <span class=\"o\">},</span> <span class=\"n\">clear</span> <span class=\"n\">c</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"n\">norm_cast</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">coe_nat_dvd</span><span class=\"o\">,</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">subst</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n    <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">^</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simpa</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_mul</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_dvd_pow</span><span class=\"o\">,</span>\n    <span class=\"n\">refine</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">add_le_add_left&#39;</span> <span class=\"err\">$</span> <span class=\"n\">le_add_left</span> <span class=\"err\">$</span> <span class=\"n\">le_refl</span> <span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">refine</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_eq</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mul_le_mul_left</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"o\">(</span><span class=\"n\">hp</span><span class=\"bp\">.</span><span class=\"n\">two_le</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">p</span><span class=\"o\">)),</span>\n    <span class=\"n\">rw</span> <span class=\"n\">mul_two</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">i_pos</span> <span class=\"o\">:=</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pos_of_ne_zero</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">clear</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_succ</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_dvd_mul</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">generalize</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">sub_pos_of_lt</span> <span class=\"n\">hi</span><span class=\"o\">,</span>\n    <span class=\"n\">conv</span> <span class=\"o\">{</span><span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_one</span> <span class=\"n\">b</span><span class=\"o\">},</span>\n    <span class=\"n\">apply</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_dvd_pow</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">prime</span><span class=\"bp\">.</span><span class=\"n\">dvd_choose</span> <span class=\"n\">i_pos</span> <span class=\"n\">hi</span> <span class=\"err\">‹</span><span class=\"bp\">_</span><span class=\"err\">›</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 196989334,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589027111
    },
    {
        "content": "<p>Currently it takes so long on my machine that I'm worried codewars wouldn't accept it.</p>",
        "id": 196989346,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589027134
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/golfing.20challenge/near/196989334\" title=\"#narrow/stream/116395-maths/topic/golfing.20challenge/near/196989334\">said</a>:</p>\n<blockquote>\n<p>Feel free to turn this into a <del>kata</del> mathlib PR.</p>\n</blockquote>",
        "id": 196989400,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589027188
    },
    {
        "content": "<p>Only after it's fast enough to be a kata</p>",
        "id": 196989418,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589027214
    },
    {
        "content": "<p>The generalization of the first theorem is <code>is_add_submonoid.sum_mem</code>. Whether that's a good way to state it I don't know.</p>",
        "id": 196990008,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1589028227
    },
    {
        "content": "<p>But it might be a good way to prove it.</p>",
        "id": 196990061,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589028292
    },
    {
        "content": "<p>On the other hand, the other suggestions don't really follow from <code>sum_mem</code>, I guess. Things like <code>sum_pos</code> and <code>sum_neg</code></p>",
        "id": 196990080,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589028327
    },
    {
        "content": "<p>Well, they do, but I don't think the relevant submonoids have been set up.</p>",
        "id": 196990127,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589028363
    },
    {
        "content": "<p><code>sum_pos</code> and <code>sum_neg</code> actually need <code>is_add_subsemigroup.sum_mem_of_ne_empty</code> which doesn't exist.</p>",
        "id": 196991420,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1589030394
    },
    {
        "content": "<p><code>sum_nonpos</code> and <code>sum_nonneg</code>...</p>",
        "id": 196991463,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589030417
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">choose</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">geom_sum</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">ideals</span>\n\n<span class=\"c1\">-- Generalise this to arbitrary property that is respected by addition/multiplication:</span>\n<span class=\"c1\">-- example applications: sum_pos, sum_neg, ... others?</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">dvd_sum</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">classical</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">dvd_zero</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">has</span> <span class=\"n\">ih</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">forall_mem_insert</span> <span class=\"n\">at</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_insert</span> <span class=\"n\">has</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">dvd_add</span> <span class=\"n\">H</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"n\">H</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">coe_nat_dvd</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"err\">∣</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">refine</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_cast</span><span class=\"bp\">⟩</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"o\">(</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk_hom</span> <span class=\"n\">I</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mk_eq_mk_hom</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">I</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk_hom</span> <span class=\"n\">I</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"n\">rfl</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_geom_series₂</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→+*</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">geom_series₂</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">geom_series₂</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">geom_series₂_def</span><span class=\"o\">,</span> <span class=\"n\">geom_series₂_def</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_hom</span> <span class=\"bp\">_</span> <span class=\"n\">f</span><span class=\"o\">],</span>\n    <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">map_mul</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">map_pow</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">geom_series₂_self</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">geom_series₂</span> <span class=\"n\">x</span> <span class=\"n\">x</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">calc</span>  <span class=\"o\">(</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">))</span>\n    <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">)))</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">pow_add</span><span class=\"o\">]</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_congr</span> <span class=\"n\">rfl</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"n\">hi</span><span class=\"o\">,</span> <span class=\"n\">congr_arg</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">add_sub_cancel&#39;</span> <span class=\"err\">$</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_pred_of_lt</span> <span class=\"err\">$</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">mem_range</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">hi</span><span class=\"o\">)</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">add_monoid</span><span class=\"bp\">.</span><span class=\"n\">smul</span> <span class=\"o\">(</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_const</span> <span class=\"bp\">_</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">card_range</span><span class=\"o\">,</span> <span class=\"n\">add_monoid</span><span class=\"bp\">.</span><span class=\"n\">smul_eq_mul</span><span class=\"o\">]</span>\n\n\n<span class=\"kn\">lemma</span> <span class=\"n\">dvd_sub_pow_of_dvd_sub</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">prime</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">k</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">ih</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">pow_one</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_zero</span><span class=\"o\">,</span> <span class=\"n\">pow_one</span><span class=\"o\">,</span> <span class=\"n\">pow_one</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">pow_mul</span><span class=\"o\">,</span> <span class=\"n\">pow_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">geom_sum₂_mul</span><span class=\"o\">,</span> <span class=\"n\">pow_succ</span><span class=\"o\">],</span>\n  <span class=\"n\">refine</span> <span class=\"n\">mul_dvd_mul</span> <span class=\"bp\">_</span> <span class=\"n\">ih</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mem_span_singleton</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">eq</span><span class=\"o\">,</span> <span class=\"n\">mk_eq_mk_hom</span><span class=\"o\">,</span> <span class=\"n\">mk_eq_mk_hom</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mem_span_singleton</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">eq_zero_iff_mem</span><span class=\"o\">,</span> <span class=\"n\">mk_eq_mk_hom</span><span class=\"o\">,</span>\n      <span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_geom_series₂</span><span class=\"o\">,</span> <span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">geom_series₂_self</span><span class=\"o\">,</span>\n      <span class=\"err\">←</span> <span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">add_monoid</span><span class=\"bp\">.</span><span class=\"n\">smul_eq_mul</span><span class=\"o\">],</span>\n  <span class=\"n\">erw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"o\">(</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk_hom</span> <span class=\"o\">(</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">span</span> <span class=\"o\">({</span><span class=\"n\">p</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">R</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">to_add_monoid_hom</span><span class=\"bp\">.</span><span class=\"n\">map_smul</span><span class=\"o\">,</span>\n      <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">eq_zero_iff_mem</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_monoid</span><span class=\"bp\">.</span><span class=\"n\">smul_eq_mul</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mul_mem_right</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mem_span_singleton</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"err\">$</span> <span class=\"n\">dvd_refl</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">))</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 196993221,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589033244
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> the trick is to use <code>geom_series\\2</code> and quotient ring</p>",
        "id": 196993237,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589033280
    }
]