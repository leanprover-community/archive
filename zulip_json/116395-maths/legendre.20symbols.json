[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">legendre_sym_mul</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fact</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">prime</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">legendre_sym</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">legendre_sym</span> <span class=\"n\">a</span> <span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">legendre_sym</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">legendre_sym_hom_apply</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">cast_mul</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">legendre_sym_hom</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map_mul</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p><a href=\"https://github.com/leanprover-community/mathlib/blob/legendre-sym-mul/src/number_theory/quadratic_reciprocity.lean#L562\" title=\"https://github.com/leanprover-community/mathlib/blob/legendre-sym-mul/src/number_theory/quadratic_reciprocity.lean#L562\">https://github.com/leanprover-community/mathlib/blob/legendre-sym-mul/src/number_theory/quadratic_reciprocity.lean#L562</a></p>",
        "id": 195294382,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1587835598
    },
    {
        "content": "<p>Which leads to</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">legendre_sym</span> <span class=\"mi\">43</span> <span class=\"mi\">29</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">prime</span> <span class=\"mi\">29</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">prime</span>  <span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"o\">(</span><span class=\"mi\">29</span> <span class=\"err\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"o\">(</span> <span class=\"mi\">7</span> <span class=\"err\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"n\">legendre_sym</span> <span class=\"mi\">43</span> <span class=\"mi\">29</span> <span class=\"bp\">=</span> <span class=\"n\">legendre_sym</span> <span class=\"mi\">14</span> <span class=\"mi\">29</span> <span class=\"o\">:</span>\n                            <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">legendre_sym_mod</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"mi\">43</span> <span class=\"err\">%</span> <span class=\"mi\">29</span> <span class=\"bp\">=</span> <span class=\"mi\">14</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n                      <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">legendre_sym</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"mi\">29</span> <span class=\"o\">:</span>\n                            <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"mi\">14</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"mi\">7</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n                      <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">legendre_sym</span> <span class=\"mi\">2</span> <span class=\"mi\">29</span> <span class=\"bp\">*</span> <span class=\"n\">legendre_sym</span> <span class=\"mi\">7</span> <span class=\"mi\">29</span> <span class=\"o\">:</span>\n                            <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">legendre_sym_mul</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n                      <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">legendre_sym</span> <span class=\"mi\">7</span> <span class=\"mi\">29</span> <span class=\"o\">:</span>\n                            <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">legendre_sym_two</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span><span class=\"err\">^</span><span class=\"o\">(</span><span class=\"mi\">29</span><span class=\"bp\">/</span><span class=\"mi\">4</span> <span class=\"bp\">+</span> <span class=\"mi\">29</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">],</span>\n                                 <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">neg_one_mul</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n                      <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">legendre_sym</span> <span class=\"mi\">29</span> <span class=\"mi\">7</span> <span class=\"o\">:</span>\n                            <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">legendre_sym_swap</span> <span class=\"mi\">7</span> <span class=\"mi\">29</span> <span class=\"n\">dec_trivial</span><span class=\"o\">],</span>\n                                 <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"o\">(</span><span class=\"mi\">7</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">29</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n                      <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">legendre_sym</span> <span class=\"mi\">1</span> <span class=\"mi\">7</span> <span class=\"o\">:</span>\n                            <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">legendre_sym_mod</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"mi\">29</span> <span class=\"err\">%</span> <span class=\"mi\">7</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n                      <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span>\n                            <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">legendre_sym_one</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 195294394,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1587835615
    },
    {
        "content": "<p>But I think that we might want to refactor this a bit. Because currently we cannot talk about the Legendre symbol of <code>x : Z_[p]</code> with respect to <code>p</code>.</p>",
        "id": 195294408,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1587835666
    },
    {
        "content": "<p>I was thinking exactly the same thing last week! Legendre needs a little love, but it would be cool to generalize to kronecker symbols too</p>",
        "id": 195295622,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1587837436
    },
    {
        "content": "<p>One of the codewars questions would be a whole lot easier if we had Kronecker symbols.</p>",
        "id": 195295767,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587837629
    }
]