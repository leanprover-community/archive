[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> has marked this topic as resolved.</p>",
        "id": 279782854,
        "sender_full_name": "Notification Bot",
        "timestamp": 1650607285
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/279555886\">said</a>:</p>\n<blockquote>\n<p>Perhaps we should copy that across to normed_algebra's docs</p>\n</blockquote>\n<p>Done in <a href=\"https://github.com/leanprover-community/mathlib/pull/13605\">#13605</a></p>",
        "id": 279804513,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650623037
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/279580317\">said</a>:</p>\n<blockquote>\n<p>|1|&lt;=1 is an axiom in one of the canonical references for nonarchimedean normed rings.</p>\n</blockquote>\n<p>Revisiting this, did we decide whether we should be adding this axiom to <code>normed_ring</code>? Or do we have existings <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_ring\">docs#normed_ring</a> instances that don't otherwise satisfy <a href=\"https://leanprover-community.github.io/mathlib_docs/find/norm_one_class\">docs#norm_one_class</a>?</p>",
        "id": 344833323,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679916011
    },
    {
        "content": "<p>In the nonarchimedean world it's hard to imagine such instances existing. I'll let the archimedean people speak for themselves.</p>",
        "id": 344833721,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679916140
    },
    {
        "content": "<p>Do you mean instances that don't satisfy |1| &lt;= 1 or that don't satisfy |1| = 1?</p>",
        "id": 344834410,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679916362
    },
    {
        "content": "<p>I guess I mean the former, since the title of this thread is an example of the latter</p>",
        "id": 344836472,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679916912
    },
    {
        "content": "<p>I was trying to ask Kevin, but I guess we're all on the same page.</p>",
        "id": 344845228,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679919204
    },
    {
        "content": "<p>The context for my question is messages like</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/279580377\">said</a>:</p>\n<blockquote>\n<p>Is \\k a field? If so then this looks promising.</p>\n</blockquote>\n<p>and</p>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/279555425\">said</a>:</p>\n<blockquote>\n<p>Right, but <code>normed_space</code> only exists for fields at the moment anyway</p>\n</blockquote>\n<p>and a desire to talk about normed modules rather than normed vector spaces, so that we can reuse lemmas about normed modules on normed rings without having to prove them twice</p>",
        "id": 344846806,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679919596
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_module\">docs#normed_module</a> appears to generalize pretty straighforwardly, but <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_algebra\">docs#normed_algebra</a> seems to have very few useful properties without either assuming a base field or a norm-one-le-one ring</p>",
        "id": 344847053,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679919660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/344845228\">said</a>:</p>\n<blockquote>\n<p>I was trying to ask Kevin, but I guess we're all on the same page.</p>\n</blockquote>\n<p>Oh I've just realised I misunderstood. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/norm_one_class\">docs#norm_one_class</a> has ||1||=1 which I've always argued is too strong because in Bosch-Lutkebohmert-Raynaud they allow the zero k-algebra. The empty set is definitely an affinoid rigid space! In the nonarch world I think the correct axiom is ||1||&lt;=1, and it's not hard to deduce that ||1||=1 from this if the k-algebra is nonzero.</p>",
        "id": 344856641,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679921997
    },
    {
        "content": "<p>In my view the correct axioms are clear: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">‚à£</mi><mi mathvariant=\"normal\">‚à£</mi><mn>1</mn><mi mathvariant=\"normal\">‚à£</mi><mi mathvariant=\"normal\">‚à£</mi><mo>‚â§</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">||1|| \\le 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">‚à£‚à£1‚à£‚à£</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚â§</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> for a normed ring or algebra, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">‚à£</mi><mi mathvariant=\"normal\">‚à£</mi><mi>r</mi><mi>v</mi><mi mathvariant=\"normal\">‚à£</mi><mi mathvariant=\"normal\">‚à£</mi><mo>‚â§</mo><mi mathvariant=\"normal\">‚à£</mi><mi mathvariant=\"normal\">‚à£</mi><mi>r</mi><mi mathvariant=\"normal\">‚à£</mi><mi mathvariant=\"normal\">‚à£</mi><mo>‚ãÖ</mo><mi mathvariant=\"normal\">‚à£</mi><mi mathvariant=\"normal\">‚à£</mi><mi>v</mi><mi mathvariant=\"normal\">‚à£</mi><mi mathvariant=\"normal\">‚à£</mi></mrow><annotation encoding=\"application/x-tex\">||rv|| \\le ||r|| \\cdot ||v||</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">‚à£‚à£</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">‚à£‚à£</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚â§</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">‚à£‚à£</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">‚à£‚à£</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">‚ãÖ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">‚à£‚à£</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">‚à£‚à£</span></span></span></span> for a normed module. Under mild additional assumptions these imply the corresponding equalities, but not always.<br>\nWhether these axioms actually hold in examples from analysis, I'm also not qualified to answer.</p>",
        "id": 344865471,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679923855
    },
    {
        "content": "<p>I guess the easiest way to find out if anything relies on the old axioms is to just try it and see; <a href=\"https://github.com/leanprover-community/mathlib/pull/18672\">#18672</a></p>",
        "id": 344884840,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679927867
    },
    {
        "content": "<p>In normed algebras (over archimedean fields, I know nothing about non-archimedean things), the standard first thing to do is always to take a normed algebra (<em>without</em> the requirement that <code>‚Äñ1‚Äñ ‚â§ 1</code>) and re-norm it with an equivalent norm that <em>does</em> satisfy this condition, which is always possible: for <code>a : A</code>, define <code>‚Äña‚Äñ := ‚Äñcontinuous_linear_map.mul ùïú A a‚Äñ</code>. See for instance, Remark 5.2 <a href=\"https://www.math.ksu.edu/~nagy/real-an/2-05-b-alg.pdf\">here</a></p>",
        "id": 344906118,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679932662
    },
    {
        "content": "<p>As metric spaces, this of course means they are bilipschitz equivalent. In general, I always take this renormed version, and many authors, after establishing the existence of this equivalent norm in all situations, simply assume that all unital Banach algebras satisfy <code>‚Äñ1‚Äñ ‚â§ 1</code>.</p>",
        "id": 344907142,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679932888
    },
    {
        "content": "<p>This renorming approach also stops working if you don't have a field available</p>",
        "id": 344908288,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679933129
    },
    {
        "content": "<p>Or at least, I assume it does, and the reference you give assumes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span></p>",
        "id": 344908366,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679933148
    },
    {
        "content": "<p>Yes, and you also sometimes have to be careful if the module has elements whose norm is a number which isn't the norm of any element of the field. The archimedean people don't have this problem.</p>",
        "id": 344908805,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679933251
    },
    {
        "content": "<p>Again you have to renormalise a little.</p>",
        "id": 344908883,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679933269
    },
    {
        "content": "<p>As a natural normed algebra which doesn't satisfy <code>‚Äñ1‚Äñ ‚â§ 1</code>, you can consider matrices of size <code>n x n</code> with the Hilbert-Schmidt norm. For this one, the norm of the identity is <code>n</code>, and renormalizing is not so natural.</p>",
        "id": 344910144,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1679933567
    },
    {
        "content": "<p>Indeed, that's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.frobenius_nnnorm_one\">docs#matrix.frobenius_nnnorm_one</a></p>",
        "id": 344912103,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679934066
    },
    {
        "content": "<p>To emphasize why renorming isn't natural in that case, in the infinite dimensional setting (operators on a Hilbert space), you can still take the Hilbert-Schmidt norm of elements for which the norm is finite, and what you end up with is a two-sided ideal (with <em>lots</em> of nice properties). So the issue is basically something like: bilipschitz equivalence isn't preserved under direct limits (unless the bilipschitz bounds are uniformly bounded), or something to this effect.</p>",
        "id": 344928792,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679938472
    },
    {
        "content": "<p>Is this indicating that the normed algebra is sort of \"accidentally\" unital?</p>",
        "id": 344929372,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679938651
    },
    {
        "content": "<p>Are we using \"unital normed algebra\" to mean \"has a 1\" or \"has a 1 with norm 1 = 1\"?</p>",
        "id": 344929565,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679938702
    },
    {
        "content": "<p>Reid, I don't understand your question, can you rephrase?</p>",
        "id": 344929909,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679938819
    },
    {
        "content": "<p>Like in the finite-dimensional case the identity of the algebra happens to lie in this ideal on which the norm lives, and as a result the norm is defined on the whole algebra, which is unital. But the general picture is that you have a unital algebra, with a nonunital subalgebra (ideal), on which there is a norm.</p>",
        "id": 344929949,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679938834
    },
    {
        "content": "<p>So then if you adopt ||1|| &lt;= 1 as an axiom for a \"normed unital algebra\" then the finite-dimensional picture is the same, there is a unital algebra, and a normed algebra, they happen to live on the same set, but it's not a normed unital algebra.</p>",
        "id": 344930787,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679939111
    },
    {
        "content": "<p>In <code>H ‚ÜíL[‚ÑÇ] H</code> (<code>H</code> a Hilbert space), there is the operator norm, with respect to which this is a (complete) normed algebra (even with <code>‚Äñ1‚Äñ = 1</code>), but the study of the (two-sided) ideals of this object is tremendously fruitful. There is only one ideal which is closed, the ideal of compact operators, and this contains all other (necessarily non-closed) ideals. However, these ideals often have natural norms with respect to which they are Banach spaces (and sometimes even better than that). A large class of examples come in the form of what are called <em>symmetrically normed ideals</em>, which are basically ideals whose norm is given by applying an especially nice function to the sequence of singular values. (I have no idea if I actually answered any part of your question. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span>)</p>",
        "id": 344931086,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679939194
    },
    {
        "content": "<p>This is mostly going over my head; but I think the summary is that adding <code>norm_one : norm (1 : Œ±) ‚â§ 1</code> to<code>normed_ring Œ±</code> is a bad idea after all? (and probably we concluded that last year and I forgot...)</p>",
        "id": 344931314,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679939259
    },
    {
        "content": "<p>I think so, but maybe we do want the constructor which builds the equivalently normed unital algebra. This might be convenient sometimes.</p>",
        "id": 344931441,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679939291
    },
    {
        "content": "<p>I considered adding it in order to refactor some things involving the spectrum, but then decided there were better ways to go about it.</p>",
        "id": 344931592,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679939335
    },
    {
        "content": "<p>By which you mean a type alias that \"fixes\" the norm via an operator norm as you suggested <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/344906118\">earlier</a>?</p>",
        "id": 344931611,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679939340
    },
    {
        "content": "<p>I'm not planning to add it until it's actually necessary though. However, I <em>think</em> I am in favor of Kevin's suggestion to refactor <code>norm_one_class</code> so that it says <code>‚Äñ1‚Äñ ‚â§ 1</code> (maybe rename to <code>norm_le_one_class</code>)? Then we can just have a theorem that says <code>[normed_ring Œ±] [norm_le_one_class Œ±] [nontrivial Œ±] : ‚Äñ1‚Äñ = 1 := sorry</code>.</p>",
        "id": 344932315,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679939590
    },
    {
        "content": "<p>Although now that I say it I seem to recall Eric mentioning to me before that this is a bad idea for some reason.</p>",
        "id": 344932400,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679939625
    },
    {
        "content": "<p>The only argument I can think of against it is that the current typeclass lets you talk about a seminormed_ring with <code>norm 1 = 1</code>, whereas your variant doesn't</p>",
        "id": 344932649,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679939686
    },
    {
        "content": "<p>I scrolled up and found the thing I was thinking of: <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/279585446\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/279585446</a>, but that was about type class instances.</p>",
        "id": 344932978,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679939798
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20Is.20the.20zero.20algebra.20normed.3F/near/344932649\">said</a>:</p>\n<blockquote>\n<p>The only argument I can think of against it is that the current typeclass lets you talk about a seminormed_ring with <code>norm 1 = 1</code>, whereas your variant doesn't</p>\n</blockquote>\n<p>That's certainly annoying, and maybe enough of a reason to avoid it. The only real upside in my mind is allowing the zero ring to satisfy <code>norm_le_one_class</code>, but probably it doesn't actually solve any pain (because you would still need to get <code>nontrivial Œ±</code> in order to get <code>‚Äñ1‚Äñ &gt; 0</code>).</p>",
        "id": 344933264,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679939903
    },
    {
        "content": "<p>The mixin <code>norm_le_one_class</code> might be called <code>normed_unital</code> if I understand Reid's comment correctly.</p>",
        "id": 344935074,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1679940469
    },
    {
        "content": "<p>It's also not very clear to me what the concrete effects of these decisions are. I mean, you can still write <code>||x||</code> to mean whatever you want, and you can pass <code>(h : ||1|| = 1)</code> to a lemma if it helps.</p>",
        "id": 344935760,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679940673
    },
    {
        "content": "<p>But sometimes it really matters what definitions you pick, e.g. in algebraic geometry it would be impossible to set up schemes if you don't consider the zero ring a ring, since the zero ring is the value of the structure sheaf on the empty set</p>",
        "id": 344935953,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679940724
    },
    {
        "content": "<p>I assume something similar would happen with normed rings in the adic world but I don't really know</p>",
        "id": 344936038,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679940755
    },
    {
        "content": "<p>(Another time specific definitions are important is if there's a widely agreed-upon meaning for the term, but it sounds like that's not really the case here)</p>",
        "id": 344936231,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679940825
    },
    {
        "content": "<p>The meaning matters in analysis too, it's just that many times it's fine to re-norm with an equivalent norm. For example, we currently have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/spectrum.norm_le_norm_mul_of_mem\">docs#spectrum.norm_le_norm_mul_of_mem</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/spectrum.norm_le_norm_of_mem\">docs#spectrum.norm_le_norm_of_mem</a>, and the former would be redundant if we change the definition of <code>normed_ring</code>.</p>",
        "id": 344937282,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679941150
    },
    {
        "content": "<p>I (virtually) never want to have a lemma that takes <code>‚Äñ1‚Äñ = 1</code> as an argument. I want there to be typeclasses that can handle this sort of thing.</p>",
        "id": 344937562,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679941229
    },
    {
        "content": "<p>I'm not sure what the <span aria-label=\"thumbs down\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"thumbs down\">:thumbs_down:</span> is supposed to mean -- these are just facts</p>",
        "id": 344937582,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679941235
    },
    {
        "content": "<p>Sorry, I was trying to explain. It wasn't meant as \"this is a bad / wrong idea,\" only \"I don't want to do this.\"</p>",
        "id": 344937622,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679941251
    }
]