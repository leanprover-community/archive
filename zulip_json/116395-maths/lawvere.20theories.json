[
    {
        "content": "<p>Hey all! I'm new to LEAN, but I have a student who wants to formalize something and this seems like a great excuse for me to learn.</p>\n<p>He's interested in category theory, and I noticed that there's no lawvere theories (confirmed by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>). Do you know roughly how hard it would be to formalize some of the definitions and prove a few theorems (for instance, categories of models always have limits/colimits, etc)? Does that sound like a good first topic (for both me and the student)?</p>",
        "id": 329277750,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677008891
    },
    {
        "content": "<p>Implementing Lawvere theories involves a lot of important design decisions at the very beginning (and we can certainly help with all that here on zulip). Once the basic definitions are set up, proving things like existence of (co)limits sounds like a nice project.</p>",
        "id": 329278035,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677008996
    },
    {
        "content": "<p>Fantastic! What kinds of design decisions are you forseeing? Or maybe it makes more sense to ask that after I've read more of MIL?</p>",
        "id": 329278624,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677009182
    },
    {
        "content": "<p>Well, you need to decide whether to define your type of objects to be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> or something less evil. Also, the mathlib philosophy is to define things in the appropriate level of generality, and presumably this means that one should define multi-sorted Lawvere theories and specialize to the case of a single sort if needed</p>",
        "id": 329279063,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677009318
    },
    {
        "content": "<p>Finally, there is the issue of relating the abstract categorical situation to concrete categories like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Group\">docs#Group</a> and to theories as defined in model theory (which we have in mathlib)</p>",
        "id": 329279500,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677009443
    },
    {
        "content": "<p>Aaaah, gotcha. Yeah, I see that we already have bicategories implemented. So my (very rough) plan was to define the bicategory of finite product categories/finite product functors/natural transformations, and define a (Set)-model to be a fp-functor into Set. That's the right level of generality, imo, since it's the level that lets us prove lawvere duality (the 2-equivalence between canonical theories and models).</p>",
        "id": 329279873,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677009559
    },
    {
        "content": "<p>And yeah, I wouldn't even know how to start relating these things to concrete categories like Group... I would need a ton of advice on doing that, haha</p>",
        "id": 329279953,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677009588
    },
    {
        "content": "<p>Sorry, what is a \"finite product category\" in this context?</p>",
        "id": 329280660,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677009809
    },
    {
        "content": "<p>Categories which admit finite products, and functors which preserve them. The \"classical\" case is where there's a single generator X and every object is a finite product of copies of X. The \"multisorted\" case is where there's some family of generators, {X_i}, and every object is a finite product of the X_i, but the theory goes through in any category with finite products</p>",
        "id": 329281612,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677010111
    },
    {
        "content": "<p>Ok I see. So what is a \"canonical theory\"?</p>",
        "id": 329282139,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677010283
    },
    {
        "content": "<p>I'm just trying to tease out the relevant parts of the definition :)</p>",
        "id": 329282198,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677010306
    },
    {
        "content": "<p>No worries at all! I'm very literally here to ask about making all this stuff precise, haha. I'm sure your questions are nothing next to the detail I'll have to give LEAN :P</p>",
        "id": 329282461,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677010396
    },
    {
        "content": "<p>It turns out you can have two inequivalent fp-categories A and B with equivalent categories of models (fp functors into Set). So we have no hope of recovering the theory from the category of models in this level of generality. Buuuut, any two such A and B have equivalent \"cauchy completions\", and we _can_ recover a cauchy complete theory from the category of models. With this in mind, we call a cauchy complete finite product category a \"canonical theory\". Then we get a 2-equivalence</p>\n<p>{canonical theories, fp functors, natural transformations} &lt;--&gt; {algebraic categories, algebraic functors, natural transformations}</p>",
        "id": 329283563,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677010759
    },
    {
        "content": "<p>sorry (again)... what does \"cauchy complete\" mean here?</p>",
        "id": 329283731,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677010818
    },
    {
        "content": "<p>We can avoid this by working with finite limit (lex) theories instead. So our theories are categories with all finite limits, and our models are finite limit functors into Set. Then since every finite limit category is already cauchy complete, we don't have this issue. So we get a nice clean 2-equivalence</p>\n<p>{finite limit categories, finite limit functors, natural transformations} &lt;--&gt; {locally presentable categories, functors preserving limits and filtered colimits, natural transformations}</p>\n<p>This is \"Gabriel-Ulmer Duality\", and we still get something of independent interest. Where finite product theories agree with classical equational theories in algebra, the finite limit theories agree with \"essentially algebraic\" theories (algebraic theories where we allow operations to be partially defined).</p>",
        "id": 329284229,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677010986
    },
    {
        "content": "<p>So Gabriel-Ulmer duality is slightly easier in that we don't have to restrict to canonical theories, but it feels a bit odd to start there instead of lawvere theories (at least imo)</p>",
        "id": 329284358,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677011040
    },
    {
        "content": "<p>And no worries (again) :P. \"Cauchy Complete\" has two (equivalent) definitions:</p>\n<ol>\n<li>C is cauchy complete if it has all absolute colimits</li>\n<li>C is cauchy complete if every idempotent splits (an idempotent is an arrow e with ee = e, see here <a href=\"https://ncatlab.org/nlab/show/idempotent\">https://ncatlab.org/nlab/show/idempotent</a>)</li>\n</ol>",
        "id": 329284869,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677011226
    },
    {
        "content": "<p>And does \"algebraic category\" mean a category with limits and filtered colimits which is concrete and the forgetful functor reflects isos, preserves limits and filtered colimits, or something else?</p>",
        "id": 329285972,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677011624
    },
    {
        "content": "<p>anyway, if I understand correctly, there is some 2-categorical adjunction between what you call \"finite product categories\" and \"algebraic categories\" which is \"cauchy completion\" when you go from fpcat to alg-cats back to fpcats and which is isomorphic to the identity when you go from alg-cat to fpcats and back. This would be a nice way to formulate things.</p>",
        "id": 329286679,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677011874
    },
    {
        "content": "<p>In case your theory has a single sort, then yes. In case you have S many sorts, you want the forgetful functor to be valued in Set^S. For a general finite product theory, the definition is slightly more involved and I don't remember it off the top of my head. It's something like \"cocomplete with a set G of objects so that every object is a sifted colimit of objects in G\". I can look it up in Adamek et al's \"Algebraic Theories\".</p>",
        "id": 329287304,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677012080
    },
    {
        "content": "<p>oh yeah I had in mind the single-sorted case</p>",
        "id": 329287398,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1677012111
    },
    {
        "content": "<p>I usually do too, haha</p>",
        "id": 329287491,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677012130
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/116395-maths/topic/lawvere.20theories/near/329286679\">said</a>:</p>\n<blockquote>\n<p>anyway, if I understand correctly, there is some 2-categorical adjunction between what you call \"finite product categories\" and \"algebraic categories\" which is \"cauchy completion\" when you go from fpcat to alg-cats back to fpcats and which is isomorphic to the identity when you go from alg-cat to fpcats and back. This would be a nice way to formulate things.</p>\n</blockquote>\n<p>Yeah, this is morally right. </p>\n<p>To a finite product category T you associate an algebraic category [T,Set] of finite product functors T --&gt; Set.</p>\n<p>To an algebraic category A you associate a finite product category \"the opposite of the category of 'perfectly presentable' (read: generalized free) objects\"</p>\n<p>Then you can show that <br>\nA --&gt; A_pp^op --&gt; [A_pp^op, Set] <br>\nis an equivalence of categories, and moreover<br>\nT --&gt; [T,Set] --&gt; [T,Set]_pp^op<br>\nis the cauchy completion of T</p>\n<p>So if we restrict attention to theories which are cauchy complete, this gives us a 2-equivalence.</p>",
        "id": 329288425,
        "sender_full_name": "Chris Grossack (they/them)",
        "timestamp": 1677012442
    }
]