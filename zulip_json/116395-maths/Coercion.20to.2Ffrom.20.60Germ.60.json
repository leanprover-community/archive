[
    {
        "content": "<p>Currently, two parts of <code>Mathlib</code> have different approaches to coercions to/from <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.Germ#doc\">docs#Filter.Germ</a></p>\n<ul>\n<li>generic <code>Filter.Germ</code> code defines coercions from <code>α → β</code> and <code>β</code> to <code>Germ l β</code>;</li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.AEEqFun#doc\">docs#MeasureTheory.AEEqFun</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.Lp#doc\">docs#MeasureTheory.Lp</a> defines a coercion from an a.e.-defined function (a.k.a. <code>Germ μ.ae _</code>) to functions and no coercion in the other direction.</li>\n</ul>\n<p>Should we unify these approaches? One way to deal with it is to</p>\n<ul>\n<li>rename all theorems about coercion of <code>α → β</code> to <code>Germ l β</code> to use <code>mk</code> instead of <code>coe</code>;</li>\n<li>same with coercion of <code>β</code> to <code>Germ l β</code> and <code>const</code>;</li>\n<li>move these <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> two coercions to a scope.</li>\n</ul>\n<p>Note that we can't generalize the <code>AEEqFun</code> coercion because it chooses a measurable representative.</p>",
        "id": 380446115,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1690827026
    },
    {
        "content": "<p>Of course, another approach is to leave everything as is.</p>",
        "id": 380446262,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1690827057
    }
]