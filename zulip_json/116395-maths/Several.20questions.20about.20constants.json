[
    {
        "content": "<p>Hello,</p>\n<p>I have several questions.</p>\n<p>What is the difference between these different writings? When to use one or the other?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">constant</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n<span class=\"kd\">constant</span> <span class=\"n\">a'</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">):</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n<span class=\"kd\">constant</span> <span class=\"n\">a''</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n</code></pre></div>\n<p>Why can't I write it like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">constant</span> <span class=\"n\">a'''</span> <span class=\"o\">:</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n</code></pre></div>\n<p>But it works when I define a function. (the different writings all work with the keyword def)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n</code></pre></div>\n<p>\\\\<br>\nA constant and an axiom are the same thing. <br>\nSo I can do this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">constant</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<p>Why can't I do </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">constant</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"mi\">2</span> <span class=\"c1\">--error</span>\n</code></pre></div>\n<p>'a' is a proposition though, so I should be able to put it as a hypothesis.</p>\n<p>Last question, what is really the difference between a constant and a variable?</p>\n<p>Sorry for all the questions.</p>\n<p>Thanks</p>",
        "id": 329730135,
        "sender_full_name": "tica",
        "timestamp": 1677161881
    },
    {
        "content": "<p>Note that <code>a</code> is not a proposition. The proposition is <code>Π n, n + 2 = 7</code> and <code>a</code> is a proof of it.</p>",
        "id": 329734801,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1677162930
    },
    {
        "content": "<p>I mean, a proof you suppose to have.</p>",
        "id": 329738631,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1677163735
    },
    {
        "content": "<p>ok thanks it works like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">hq</span><span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span><span class=\"o\">):</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">apply</span> <span class=\"n\">hq</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>so 'a' is only usable as a theorem.</p>\n<p>Do you have an idea for my other questions?</p>",
        "id": 329744486,
        "sender_full_name": "tica",
        "timestamp": 1677165159
    },
    {
        "content": "<p><code>\\lambda</code> and <code>\\Pi</code> simply mean different things. The former lets you build elements of the latter.</p>",
        "id": 329750870,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1677166662
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"570115\">tica</span> <a href=\"#narrow/stream/116395-maths/topic/Several.20questions.20about.20constants/near/329730135\">said</a>:</p>\n<blockquote>\n<p>What is the difference between these different writings? When to use one or the other?</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">constant</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n<span class=\"kd\">constant</span> <span class=\"n\">a'</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">):</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n<span class=\"kd\">constant</span> <span class=\"n\">a''</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>They are all the same. You can use <code>#check a</code> to see that.</p>",
        "id": 329751022,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1677166693
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"570115\">tica</span> <a href=\"#narrow/stream/116395-maths/topic/Several.20questions.20about.20constants/near/329730135\">said</a>:</p>\n<blockquote>\n<p>Why can't I write it like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">constant</span> <span class=\"n\">a'''</span> <span class=\"o\">:</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n</code></pre></div>\n<p>But it works when I define a function. (the different writings all work with the keyword def)</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>The right hand side of the <code>:</code> must always be a type or sort. In your example, <code> λ n: ℕ, n + 2 = 7</code> is a function, which is not a type. <code>λ</code> creates functions. <code>Π</code> creates a function type.</p>",
        "id": 329752775,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1677167107
    },
    {
        "content": "<p>Note that this is not a constant vs def issue. This will give the same error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 329753583,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1677167290
    },
    {
        "content": "<p>But why can I use \\Pi as a function if it is only a type ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">constant</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<p>Everything that is declared constant is always true?<br>\n<code>constant P: Prop</code> means that P must be considered true?<br>\nSo that's the difference with variables?</p>",
        "id": 329755569,
        "sender_full_name": "tica",
        "timestamp": 1677167734
    },
    {
        "content": "<p>No, you're confusing types and their terms. <code>\\Pi n, n + 2 = 7</code> is a proposition (if you <code>#check</code> it, you will see it has type <code>Prop). </code>\\la n, n + 2 = 7<code>, is a predicate on the naturals, aka a function </code>nat -&gt; Prop`.</p>",
        "id": 329762063,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1677169262
    },
    {
        "content": "<p><code>constant P : Prop</code> declares a new proposition you don't know anything about. In particular, you have no idea whether it is true or false. The way to make <code>P</code> be considered true would be to have <code>constant h : P</code>, that is that you have a proof of <code>P</code>.</p>",
        "id": 329762592,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1677169384
    },
    {
        "content": "<p>Oh ok, thanks you</p>",
        "id": 336433851,
        "sender_full_name": "tica",
        "timestamp": 1677231728
    }
]