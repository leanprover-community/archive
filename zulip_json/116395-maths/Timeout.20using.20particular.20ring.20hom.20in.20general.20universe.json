[
    {
        "content": "<p>Hi - could someone help me understand why this times out when the universe is general <code>u</code>? I also get an excessive memory consumption error if I replace <code>Scheme.Spec_map</code> with <code>quiver.hom.op</code>. Feel free to move this to new members if the answer is easy, wasn't sure where to put it.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebraic_geometry.Scheme</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.tensor_product</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.polynomial.laurent</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"kd\">universes</span> <span class=\"n\">u</span>\n<span class=\"kn\">open</span> <span class=\"n\">algebraic_geometry</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">tensor_product</span>\n\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"n\">R</span><span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">T</span><span class=\"bp\">;</span><span class=\"n\">T</span><span class=\"bp\">⁻¹</span><span class=\"o\">]</span><span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">9000</span> <span class=\"o\">:=</span> <span class=\"n\">laurent_polynomial</span> <span class=\"n\">R</span>\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span> <span class=\"bp\">→+*</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">T</span><span class=\"bp\">;</span><span class=\"n\">T</span><span class=\"bp\">⁻¹</span><span class=\"o\">]</span> <span class=\"bp\">⊗</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">T</span><span class=\"bp\">;</span><span class=\"n\">T</span><span class=\"bp\">⁻¹</span><span class=\"o\">])</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">comultiplication</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">T</span><span class=\"bp\">;</span><span class=\"n\">T</span><span class=\"bp\">⁻¹</span><span class=\"o\">]</span> <span class=\"bp\">→+*</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">T</span><span class=\"bp\">;</span><span class=\"n\">T</span><span class=\"bp\">⁻¹</span><span class=\"o\">]</span> <span class=\"bp\">⊗</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">T</span><span class=\"bp\">;</span><span class=\"n\">T</span><span class=\"bp\">⁻¹</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"bp\">@</span><span class=\"n\">is_localization.lift</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">laurent_polynomial.is_localization</span> <span class=\"n\">f</span> <span class=\"gr\">sorry</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Scheme.Spec_map</span> <span class=\"o\">(</span><span class=\"n\">CommRing.of_hom</span> <span class=\"bp\">$</span> <span class=\"n\">comultiplication</span> <span class=\"n\">R</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 329616433,
        "sender_full_name": "Amelia Livingston",
        "timestamp": 1677117974
    },
    {
        "content": "<p>Again, here <code>#check Scheme.Spec_map (CommRing.of_hom $ by apply comultiplication R f)</code> works in an instant.</p>",
        "id": 329631392,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1677130550
    }
]