[
    {
        "content": "<p>We have <code>OrderedAddCommMonoid</code> which is certainly meaningful.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Order.Monoid.Lemmas</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.BoundedOrder</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">OrderedAddCommMonoid</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">AddCommMonoid</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">PartialOrder</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n  <span class=\"sd\">/-- Addition is monotone in an `OrderedAddCommMonoid`. -/</span>\n  <span class=\"kn\">protected</span> <span class=\"n\">add_le_add_left</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>Would the following class make any (mathematical) sense?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Order.Monoid.Lemmas</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.BoundedOrder</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">OrderedAddMonoid</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">AddMonoid</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">PartialOrder</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n  <span class=\"kn\">protected</span> <span class=\"n\">add_le_add_left</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">b</span>\n  <span class=\"kn\">protected</span> <span class=\"n\">add_le_add_right</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span>\n</code></pre></div>",
        "id": 397850308,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697894918
    },
    {
        "content": "<p>Or <code>OrderedMonoid</code> rather.</p>",
        "id": 397850574,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697895194
    },
    {
        "content": "<p>What's your use case?</p>",
        "id": 397850787,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697895391
    },
    {
        "content": "<p>They are certainly people who study non-commutative orders, but those are pretty niche and we won't support them until they show up here.</p>",
        "id": 397850836,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697895455
    },
    {
        "content": "<p>I don't have a use case, but I was thinking about lexicographical orderings on lists of ordered things.</p>",
        "id": 397851079,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697895684
    },
    {
        "content": "<p>Actually no:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"bp\">&lt;</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">]</span> <span class=\"bp\">&gt;</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 397851116,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697895722
    },
    {
        "content": "<p>Non-commutative orders do exist but they are pretty niche.</p>",
        "id": 397851167,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697895747
    },
    {
        "content": "<p>And the best ones involve <code>star</code> <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 397858581,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697902109
    },
    {
        "content": "<p>Even then, addition is still commutative!</p>",
        "id": 397859205,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1697902590
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/116395-maths/topic/OrderedAddMonoid/near/397851167\">said</a>:</p>\n<blockquote>\n<p>Non-commutative orders do exist but they are pretty niche.</p>\n</blockquote>\n<p>In case of groups, they're not niche at all. For instance, the orderability of the braid group is an important theorem.</p>",
        "id": 397867870,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1697911393
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Ordinal#doc\">docs#Ordinal</a> is an example.</p>",
        "id": 397972160,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1698008761
    }
]