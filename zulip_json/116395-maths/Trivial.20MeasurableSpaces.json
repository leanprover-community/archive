[
    {
        "content": "<p>While working on the Polynomial Freiman-Ruzsa project, I was mildly annoyed that I had to explicitly create an instance of <code>[MeasurableSub₂]</code> for a finite measure space where everything's measurable.</p>",
        "id": 403857524,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1700775716
    },
    {
        "content": "<p>It wasn't hard to prove - the assumptions are all there to use <code>measurable_of_countable _</code>, but given that in, say, combinatorics, people often care about finite regimes where measurability is trivial, would it be useful to create a typeclass for such measure spaces?</p>",
        "id": 403857671,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1700775838
    },
    {
        "content": "<p>This would have solved my particular use-case, because <code>[MeasurableSpace X] [Fintype X] [MeasurableSingletonClass X]</code> could be shown to imply <code>[TrivialMeasurableSpace (X × X)]</code> or whatever we want to call it, and that would imply <code>[MeasurableSub₂ X]</code>.</p>",
        "id": 403857832,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1700775963
    },
    {
        "content": "<p>Surely the name should rather be <code>DiscreteMeasurableSpace</code>?</p>",
        "id": 403859219,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1700777045
    },
    {
        "content": "<p>I think that makes sense. We have <code>DiscreteTopology</code>.</p>",
        "id": 403859236,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1700777095
    },
    {
        "content": "<p>I'm trying it out over at <a href=\"https://github.com/leanprover-community/mathlib4/pull/8859\">#8859</a>.</p>",
        "id": 406403652,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1701903505
    },
    {
        "content": "<p>I'd appreciate some help resolving some heartbeat issues, if anyone wants to take a look.</p>",
        "id": 406409712,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1701906407
    },
    {
        "content": "<p>FYI, <a href=\"https://github.com/leanprover-community/mathlib4/pull/8859\">#8859</a> is ready for review. This is one of the early prerequisites for PFR.</p>",
        "id": 406616134,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1701981081
    }
]