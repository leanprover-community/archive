[
    {
        "content": "<p>Here <a href=\"https://github.com/vbeffara/RMT4/blob/main/RMT4/Lift.lean\">https://github.com/vbeffara/RMT4/blob/main/RMT4/Lift.lean</a> is the proof of the existence of lifts of continuous paths through coverings, namely:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">X</span><span class=\"o\">)}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">lift</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">IsCoveringMap</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hγ</span> <span class=\"o\">:</span> <span class=\"n\">γ</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"bp\">Γ</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">E</span><span class=\"o\">),</span> <span class=\"bp\">Γ</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∘</span> <span class=\"bp\">Γ</span> <span class=\"bp\">=</span> <span class=\"n\">γ</span>\n</code></pre></div>\n<p>I would like to PR it, but in fact I am wondering whether it is at the right level of generality. Indeed, some intermediate lemmas (but not all) don't use the fact that neighborhoods can be chosen uniformly along the fibers, and the discreteness of the fibers appears nowhere at all. What to do?</p>",
        "id": 397296582,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697630298
    },
    {
        "content": "<p>(I misclicked, this probably belongs in #maths but I can't move it now.)</p>",
        "id": 397300665,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697631712
    },
    {
        "content": "<p>Didn’t <span class=\"user-mention\" data-user-id=\"253861\">@Thomas Browning</span> say he was working on that too?</p>",
        "id": 397301344,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1697631929
    },
    {
        "content": "<p>Oops, I didn't catch that <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span></p>",
        "id": 397302241,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697632215
    },
    {
        "content": "<p>I am pretty worried by that <code>C(I, X)</code>. Why aren't you working with function defined on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>?</p>",
        "id": 397310613,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697634882
    },
    {
        "content": "<p>Mostly to make life more difficult because of all the coercions, in retrospect. (And to use <code>ConnectedSpace</code> on it but that is minor.) What worries you about it?</p>",
        "id": 397312006,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697635314
    },
    {
        "content": "<p>I'm worried it will be difficult to use, because of all the coercions.</p>",
        "id": 397314140,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697635949
    },
    {
        "content": "<p>On the other hand we have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path#doc\">docs#Path</a> which you could use here (and in that case you indeed end up having a function only defined on <code>I</code>)</p>",
        "id": 397329985,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1697640536
    },
    {
        "content": "<p>My thoughts on this, FWIW, is that the interval is an important enough object that we should develop as much API around <code>I</code> as possible anyway, so it's probably okay to use <code>I</code> in such statements.</p>",
        "id": 397330415,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1697640687
    },
    {
        "content": "<p>I agree with Adam here, we won’t get far if we have to avoid the interval all the time.</p>",
        "id": 397338505,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1697643128
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397301344\">said</a>:</p>\n<blockquote>\n<p>Didn’t <span class=\"user-mention silent\" data-user-id=\"253861\">Thomas Browning</span> say he was working on that too?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"306638\">@Jordan Brown</span> and I were working towards this on <a href=\"https://github.com/leanprover-community/mathlib4/tree/jlc_branch\">branch#jlc_branch</a> at the same level of generality. We already have uniqueness, but if you've got existence finished, I think you might as well PR it.</p>",
        "id": 397349292,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1697646932
    },
    {
        "content": "<p>If you want a supergeneral path lifting theorem, Bourbaki's Topologie Générale has one, but for coverings, one crucial point is you have uniqueness of such a lifting, and this is that result that is to formalize here. (Anyway, I would recommend the treatment there. The result is then extended to cubes and ultimately to all simply connected spaces, in the sense that all of their coverings are trivial, and from the case of intervals, the case of convex subsets of R^n (or of a real topological vector space) follows.</p>",
        "id": 397349435,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1697646979
    },
    {
        "content": "<p>“Supergeneral” means: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\"> I  </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> is a real interval, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is a non-empty Hausdorff topological space, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>X</mi><mo>→</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\"> f \\colon X \\to I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> is a continuous map which is <em>open</em>, <em>proper</em>, and whose fibers are totally discontinuous. Then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> admits a continuous section. (Topologie Générale, chap. III, §2, n°10, th. 3.)<br>\nInteresting applications are: lifting of roots of a continuous family of polynomials, or lifting of a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>→</mo><mi>X</mi><mi mathvariant=\"normal\">/</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">I \\to X/G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">G</span></span></span></span>, when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> is a discrete group acting properly on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.</p>",
        "id": 397381109,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1697661845
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>I</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\"> f : I \\rightarrow X </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>?</p>",
        "id": 397385863,
        "sender_full_name": "Flo (Florent Schaffhauser)",
        "timestamp": 1697664631
    },
    {
        "content": "<p>The proof of that one is much more involved though, and if I understand it right it is not strictly more general because of the compactness assumptions (e.g. in my initial motivation which is integrating holomorphic functions along continuous paths, the fibers are the complex plane equipped with the discrete topology).</p>",
        "id": 397385914,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697664668
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"513540\">Flo (Florent Schaffhauser)</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397385863\">said</a>:</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>I</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\"> f : I \\rightarrow X </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>?</p>\n</blockquote>\n<p>No, there is a trick in the proof of the Corollaire of Théorème 3, it is indeed <code>f : X -&gt; I</code> (the way to get path lifting from the statement is not obvious).</p>",
        "id": 397386090,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697664781
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"242586\">Vincent Beffara</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397385914\">said</a>:</p>\n<blockquote>\n<p>The proof of that one is much more involved though, and if I understand it right it is not strictly more general because of the compactness assumptions (e.g. in my initial motivation which is integrating holomorphic functions along continuous paths, the fibers are the complex plane equipped with the discrete topology).</p>\n</blockquote>\n<p>Indeed, coverings are continuous and open maps, but those with infinite fibers are not proper.</p>",
        "id": 397389318,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1697666787
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397310613\">said</a>:</p>\n<blockquote>\n<p>I am pretty worried by that <code>C(I, X)</code>. Why aren't you working with function defined on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>?</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path#doc\">docs#Path</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousMap.Homotopy#doc\">docs#ContinuousMap.Homotopy</a> etc. are all defined in terms of the unit interval I, so the current statement is well connected to the homotopy API and I wouldn't worry about it. <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.IccExtend#doc\">docs#Set.IccExtend</a> is the way to extend to a path to a function on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> and has extensive API as well.</p>\n<blockquote>\n<p>but for coverings, one crucial point is you have uniqueness of such a lifting</p>\n</blockquote>\n<p>Actually uniqueness also holds under a <a href=\"https://github.com/vbeffara/RMT4/blob/ed7b19c0ba63558313ac596032e8e96cde04ea93/HomotopyLifting.lean#L26\">more general condition</a> (basically: every point upstairs has a neighborhood that is clopen in the preimage of its image, and on which the map is injective).</p>\n<blockquote>\n<p>Didn’t @Thomas Browning say he was working on that too?<br>\nOops, I didn't catch that <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span></p>\n</blockquote>\n<p>I <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/winding.20number/near/392712903\">saw</a> that they were working on homotopy lifting and later I <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/winding.20number/near/394581953\">shared my work</a> with them but did not get a response. I found a <a href=\"https://github.com/leanprover-community/mathlib/compare/covering2\">mathlib3 branch</a> but not a mathlib4 one. Glad that they finally shared the mathlib4 branch! I like the generality of working with connectedComponent and will probably adapt my more general version of uniqueness to work with that too. And I'll try the approach of defining the lift step by step using a <a href=\"https://gist.github.com/alreadydone/c88265c99c73fa822d48e1abfd01282f#file-homotopylifting-lean-L52\">finite partition</a> of the interval and see if it leads to a shorter proof. Maybe I could even work in the generality of IsCoveringMapOn.</p>",
        "id": 397425752,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1697688853
    },
    {
        "content": "<p>The next step would be proving the <a href=\"http://www.homepages.ucl.ac.uk/~ucahjde/tg/html/gal-01.html\">lifting criterion</a>; the fundamental group condition is trivial for a map from a simply connected space, so you can get a branch of the square root on a simply connected domain as required for the proof of RMT. Given that the quotient map ℝ → ℝ/ℤ and n-fold cover ℝ/ℤ → ℝ/ℤ have been shown to be covering maps in my PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/7596\">#7596</a> (I should probably make them FiberBundles ...), we may utilize the homeomorphism between ℂ \\ {0} and  ℝ/ℤ × ℝ to show exp and the nth power map are covering maps on ℂ \\ {0}. We'd need to show that the product of a covering map with id (or another covering map) is also a covering map, and that composition with homeomorphisms preserves covering maps (there is already <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Trivialization.compHomeomorph#doc\">docs#Trivialization.compHomeomorph</a> but not a version that changes the base, apparently). In addition to RMT, exp being a covering map would also allow defining the winding number.</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7596\">#7596</a> also adds some reasonably convenient constructors for IsCoveringMap, which should be useful for showing the etale space associated to a locally exact form is a covering space. I looked into <a href=\"https://github.com/vbeffara/RMT4/blob/main/RMT4/Bunch.lean\">Bunch.lean</a> and Covering.lean in <span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span>'s repo and it seems the proof that it's a covering space is sorry-free. I think for mathlib we'd probably take a more principled approach though, which is to define etale spaces of presheaves, prove general properties of them, and then specialize to our situation (sheaf of functions such that any two functions agree on an open set, with a group action on the sections that is free and transitive on the stalks). I've started working on this with PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/7655\">#7655</a> adding lemmas for local homeomorphisms.</p>",
        "id": 397426902,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1697689567
    },
    {
        "content": "<p>Yes this <code>Bunch</code> to covering is sorry free but it does feel like a special case of something more general. I wanted to run towards this contour integral definition ... and the usage of it in <code>Covering.lean</code> is really wrong because I am just picking one local primitive above each point rather than using all of them (the outcome is the same up to homeomorphism anyway, so better not to use choice).</p>",
        "id": 397489676,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697716591
    },
    {
        "content": "<p>I wanted to use partitions initially (and then glue pieces together using the <code>Path</code> API) but in the end just using connexity was easier, at least for path lifting.</p>",
        "id": 397489814,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697716650
    },
    {
        "content": "<p>Is it true in general that if <code>p</code> is a covering then <code>f \\mapsto p \\circ f</code> is a covering on <code>C(I, X)</code>?</p>",
        "id": 397489951,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697716694
    },
    {
        "content": "<p>(For uniqueness of lifting along a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f \\colon X \\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, the natural hypothesis is that the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\"> f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is separated: the diagonal map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>X</mi><msub><mo>×</mo><mi>Y</mi></msub><mi>X</mi></mrow><annotation encoding=\"application/x-tex\"> X \\to X \\times_Y X </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\"><span class=\"mbin\">×</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is a closed immersion.)</p>",
        "id": 397493341,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1697717924
    },
    {
        "content": "<blockquote>\n<p>we may utilize the homeomorphism between ℂ \\ {0} and ℝ/ℤ × ℝ to show exp and the nth power map are covering maps on ℂ \\ {0}</p>\n</blockquote>\n<p>Actually, it's probably much easier to show the properly discontinuous condition ... which is trivial when the group that acts is finite, and for the case of exp, a translation by a large enough integer certainly separates two compact sets.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397493341\">said</a>:</p>\n<blockquote>\n<p>(For uniqueness of lifting along a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f \\colon X \\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, the natural hypothesis is that the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\"> f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is separated: the diagonal map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>X</mi><msub><mo>×</mo><mi>Y</mi></msub><mi>X</mi></mrow><annotation encoding=\"application/x-tex\"> X \\to X \\times_Y X </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\"><span class=\"mbin\">×</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is a closed immersion.)</p>\n</blockquote>\n<p>Thanks! By <a href=\"https://stacks.math.columbia.edu/tag/0CY0\">stacks#0CY0</a> it's equivalent to that every two points of Y with the same image in X has disjoint neighborhoods in Y, which is more succinct and more general than what I had. (Actually f doesn't have to be continuous.) You still need local injectivity though, otherwise there are examples like the projection from R^2 to R, or the horizontal projection from the letter Y to the letter I.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"242586\">Vincent Beffara</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397489951\">said</a>:</p>\n<blockquote>\n<p>Is it true in general that if <code>p</code> is a covering then <code>f \\mapsto p \\circ f</code> is a covering on <code>C(I, X)</code>?</p>\n</blockquote>\n<p>Not sure what the motivation is, but looks like a fun question!</p>",
        "id": 397561396,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1697742116
    },
    {
        "content": "<p>The motivation would be to get homotopy lifting for paths on X as path lifting on <code>C(I, X)</code>.</p>",
        "id": 397566107,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697744198
    },
    {
        "content": "<p>My proof of <a href=\"https://gist.github.com/alreadydone/c88265c99c73fa822d48e1abfd01282f#file-homotopylifting-lean-L248-L249\">IsCoveringMap.lift_path</a> is 33 lines using what I already have. For homotopy lifting, the usual proof is to lift each horizontal path and show they combine to form a continuous map on <code>I × I</code> using <a href=\"https://gist.github.com/alreadydone/c88265c99c73fa822d48e1abfd01282f#file-homotopylifting-lean-L223\">IsLocallyHomeomorph.continuous_lift</a>. I've also changed my gist to use SeparatedMap as suggested by <span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span>.</p>",
        "id": 397648903,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1697787380
    },
    {
        "content": "<p>OK I had in mind to show the covering property of <code>f \\mapsto p \\circ f</code> using <code>continuous_lift</code> or something similar, overall it would amount to roughly the same thing.</p>\n<p>Besides using compactness and Lebesgue number vs connexity, we are doing roughly the same. Definitely there should be somewhere in the API a lemma to glue partial paths like we have to do, without the pain of going through <code>frontier_Iic_subset</code>, <code>closure_le_eq</code>,  <code>closure_lt_subset_le</code> and so on, but more along the lines of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Continuous.if_le#doc\">docs#Continuous.if_le</a> for <code>ContinuousOn</code>. That would certainly be useful in other parts of mathlib as well. Essentially <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path.trans#doc\">docs#Path.trans</a> but without going back to the unit interval.</p>",
        "id": 397653736,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1697789226
    },
    {
        "content": "<p>There should be things in the sphere eversion project.</p>",
        "id": 397701735,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697805808
    },
    {
        "content": "<blockquote>\n<p>Definitely there should be somewhere in the API a lemma to glue partial paths like we have to do, without the pain of going through frontier_Iic_subset, closure_le_eq, closure_lt_subset_le and so on, but more along the lines of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Continuous.if_le#doc\">docs#Continuous.if_le</a> for ContinuousOn.</p>\n</blockquote>\n<p>Yeah, a ContinuousOn version of Continuous.if_le would be convenient. Maybe we can furthermore extract something for extending step by step, maybe specific to the unit interval, but let's sure it also applies in the product situation as in IsLocallyHomeomorph.exists_lift_nhds.</p>\n<p>BTW the only lemma I used for homotopy lifting about SeparatedMap is separatedMap_iff_nhds, and the rest are just me formalizing <a href=\"https://stacks.math.columbia.edu/tag/0CY0\">stacks#0CY0</a> :)</p>",
        "id": 397707882,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1697807837
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397561396\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>we may utilize the homeomorphism between ℂ \\ {0} and ℝ/ℤ × ℝ to show exp and the nth power map are covering maps on ℂ \\ {0}</p>\n</blockquote>\n<p>Actually, it's probably much easier to show the properly discontinuous condition ... which is trivial when the group that acts is finite, and for the case of exp, a translation by a large enough integer certainly separates two compact sets.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397493341\">said</a>:</p>\n<blockquote>\n<p>(For uniqueness of lifting along a map $f \\colon X \\to Y$, the natural hypothesis is that the map $ f$ is separated: the diagonal map $ X \\to X \\times_Y X $ is a closed immersion.)</p>\n</blockquote>\n<p>Thanks! By <a href=\"https://stacks.math.columbia.edu/tag/0CY0\">stacks#0CY0</a> it's equivalent to that every two points of Y with the same image in X has disjoint neighborhoods in Y, which is more succinct and more general than what I had. (Actually f doesn't have to be continuous.) You still need local injectivity though, otherwise there are examples like the projection from R^2 to R, or the horizontal projection from the letter Y to the letter I.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"242586\">Vincent Beffara</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397489951\">said</a>:</p>\n<blockquote>\n<p>Is it true in general that if <code>p</code> is a covering then <code>f \\mapsto p \\circ f</code> is a covering on <code>C(I, X)</code>?</p>\n</blockquote>\n<p>Not sure what the motivation is, but looks like a fun question!</p>\n</blockquote>\n<p>Bourbaki's Topologie algebrique is full of stuff like that. Probably with I replaced with any locally compact space (compactly generated topology should suffice).</p>",
        "id": 397748637,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1697821479
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"242586\">Vincent Beffara</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397653736\">said</a>:</p>\n<blockquote>\n<p>OK I had in mind to show the covering property of <code>f \\mapsto p \\circ f</code> using <code>continuous_lift</code> or something similar, overall it would amount to roughly the same thing.</p>\n<p>Besides using compactness and Lebesgue number vs connexity, we are doing roughly the same. Definitely there should be somewhere in the API a lemma to glue partial paths like we have to do, without the pain of going through <code>frontier_Iic_subset</code>, <code>closure_le_eq</code>,  <code>closure_lt_subset_le</code> and so on, but more along the lines of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Continuous.if_le#doc\">docs#Continuous.if_le</a> for <code>ContinuousOn</code>. That would certainly be useful in other parts of mathlib as well. Essentially <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path.trans#doc\">docs#Path.trans</a> but without going back to the unit interval.</p>\n</blockquote>\n<p>What is needed is glueing continuous functions for a locally closed covering. Then use closed intervals joined at their extremities.</p>",
        "id": 397748849,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1697821572
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/116395-maths/topic/Path.20lifting/near/397426902\">said</a>:</p>\n<blockquote>\n<p>The next step would be proving the <a href=\"http://www.homepages.ucl.ac.uk/~ucahjde/tg/html/gal-01.html\">lifting criterion</a>; the fundamental group condition is trivial for a map from a simply connected space, so you can get a branch of the square root on a simply connected domain as required for the proof of RMT. Given that the quotient map ℝ → ℝ/ℤ and n-fold cover ℝ/ℤ → ℝ/ℤ have been shown to be covering maps in my PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/7596\">#7596</a> (I should probably make them FiberBundles ...), we may utilize the homeomorphism between ℂ \\ {0} and  ℝ/ℤ × ℝ to show exp and the nth power map are covering maps on ℂ \\ {0}. We'd need to show that the product of a covering map with id (or another covering map) is also a covering map, and that composition with homeomorphisms preserves covering maps (there is already <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Trivialization.compHomeomorph#doc\">docs#Trivialization.compHomeomorph</a> but not a version that changes the base, apparently). In addition to RMT, exp being a covering map would also allow defining the winding number.</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7596\">#7596</a> also adds some reasonably convenient constructors for IsCoveringMap, which should be useful for showing the etale space associated to a locally exact form is a covering space. I looked into <a href=\"https://github.com/vbeffara/RMT4/blob/main/RMT4/Bunch.lean\">Bunch.lean</a> and Covering.lean in <span class=\"user-mention silent\" data-user-id=\"242586\">Vincent Beffara</span>'s repo and it seems the proof that it's a covering space is sorry-free. I think for mathlib we'd probably take a more principled approach though, which is to define etale spaces of presheaves, prove general properties of them, and then specialize to our situation (sheaf of functions such that any two functions agree on an open set, with a group action on the sections that is free and transitive on the stalks). I've started working on this with PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/7655\">#7655</a> adding lemmas for local homeomorphisms.</p>\n</blockquote>\n<p>I'm going to comment on <a href=\"https://github.com/leanprover-community/mathlib4/pull/7596\">#7596</a> soon <span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span> but I just want to mention that at some point I (or someone else) will probably remove <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ProperlyDiscontinuousSMul#doc\">docs#ProperlyDiscontinuousSMul</a> and replace it by <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ProperSMul#doc\">docs#ProperSMul</a> (with an extra <code>DiscreteTopology</code>)</p>",
        "id": 397773880,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1697834697
    },
    {
        "content": "<p>You may want to consult <a href=\"https://mathoverflow.net/questions/360706/when-a-free-action-gives-rise-to-a-g-principal-bundle\">https://mathoverflow.net/questions/360706/when-a-free-action-gives-rise-to-a-g-principal-bundle</a> when you got to do that ...</p>\n<p>The homotopy lifting property is now proved <a href=\"https://gist.github.com/alreadydone/c88265c99c73fa822d48e1abfd01282f#file-homotopylifting-lean-L281-L285\">here</a> but there's still some glue missing to show that covering maps are injective on fundamental group.</p>",
        "id": 397818985,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1697867081
    },
    {
        "content": "<p>Okay it's a bit more convoluted than I thought but I've now <a href=\"https://gist.github.com/alreadydone/c88265c99c73fa822d48e1abfd01282f#file-homotopylifting-lean-L393-L401\">shown the injectivity</a>. Mathlib doesn't yet have a def for the MonoidHom between fundamental groups induced by a continuous map, but there is the (universe non-polymorphic) <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FundamentalGroupoid.fundamentalGroupoidFunctor#doc\">docs#FundamentalGroupoid.fundamentalGroupoidFunctor</a>. I think I'll extract the functor between groupoids from that and define the MonoidHom using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Functor.mapEnd#doc\">docs#CategoryTheory.Functor.mapEnd</a>, since I think it's indispensable to work with groups rather than groupoids to develop further theory.</p>\n<p><code>liftPath</code> can be used to define the winding number, and <code>liftPath_apply_one_eq_of_homotopicRel</code> shows it's independent of the homotopy class (rel endpoints) of the path.</p>\n<p>I think I'll build on <a href=\"https://github.com/leanprover-community/mathlib4/pull/7596\">#7596</a> and develop some theory for Galois coverings next, and compute the fundamental group of circle. In the meantime, <a href=\"https://github.com/leanprover-community/mathlib4/pull/7848\">#7848</a> simplifies the definition of HomotopyRel.</p>",
        "id": 398015100,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698040685
    },
    {
        "content": "<p>The separated map PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/7911\">#7911</a> is ready for review! A revelation is that locally injectivity is exactly the dual notion of separatedness (just replace all \"closed\" by \"open\"), so I built some API around <code>Pullback</code> to treat both unify the treatment of both.</p>\n<p>I've now also created a <a href=\"https://github.com/orgs/leanprover-community/projects/13/views/2\">project</a>.</p>",
        "id": 398404939,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698206337
    },
    {
        "content": "<p>Your project is not public :-(</p>",
        "id": 398471786,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1698235887
    },
    {
        "content": "<p>15 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/github.20projects\">#mathlib4 &gt; github projects</a> by <span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span>.</p>",
        "id": 398686526,
        "sender_full_name": "Notification Bot",
        "timestamp": 1698326042
    }
]