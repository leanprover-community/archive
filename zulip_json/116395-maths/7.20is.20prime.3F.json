[
    {
        "content": "<p>In the following example from the book <em>Mathematics in Lean</em>, why is <code>norm_num</code> unable to determine the primality of 7?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"mi\">4</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"bp\">‚àß</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">‚àß</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">10</span> <span class=\"bp\">‚àß</span> <span class=\"n\">Nat.Prime</span> <span class=\"n\">m</span> <span class=\"bp\">‚àß</span> <span class=\"n\">Nat.Prime</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">use</span> <span class=\"mi\">5</span>\n  <span class=\"n\">use</span> <span class=\"mi\">7</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 371587048,
        "sender_full_name": "Geno Racklin Asher",
        "timestamp": 1688252416
    },
    {
        "content": "<p>Ah, apparently I needed to <code>import Mathlib.Tactic.NormNum.Prime</code> as well as just the base tactic.</p>",
        "id": 371587499,
        "sender_full_name": "Geno Racklin Asher",
        "timestamp": 1688252724
    },
    {
        "content": "<p>(Mathematics in Lean needs to be updated here. The book was ported to Lean 4 recently, and the <code>Prime</code> norm num extension was ported at about the same time, but it was put in a different module from where it used to be. I <a href=\"https://github.com/avigad/mathematics_in_lean_source/issues/83\">created an issue</a> to track this.)</p>",
        "id": 371589057,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688253649
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"623879\">@Geno Racklin Asher</span> just <code>import Mathlib.Tactic</code> if you want to get all the useful tactics.</p>",
        "id": 371615407,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1688267414
    },
    {
        "content": "<p>I'm sorry about this inconvenience. I just added <code>import Mathlib.Tactic</code> on top of every file in the book.</p>",
        "id": 371661444,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688288255
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> this has broken the book. For example in chapter 7 section 1 the local notation <code>notation \"ùüô\" =&gt; One‚ÇÅ.one\n</code> conflicts with category theory notation, and in chapter 3 section 4 <code>Import Tactic</code> makes <code>norm_num</code> better and it closes a goal too early.</p>",
        "id": 371921220,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1688374796
    },
    {
        "content": "<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> we really need proper CI for this project... I'm sorry</p>",
        "id": 371921829,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688374905
    },
    {
        "content": "<p>That being said, I really understand why important Mathlib.Tactic needs category theory...</p>",
        "id": 371922434,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688375014
    },
    {
        "content": "<p>And category theory also takes <code>ùü≠</code></p>",
        "id": 371923051,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688375129
    },
    {
        "content": "<p>We really need to get rid of the habit of putting such notations in the root namespace.</p>",
        "id": 371923120,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688375150
    },
    {
        "content": "<p>If you just remove <code>import Mathlib.Tactic</code> from those two files, it compiles again.</p>",
        "id": 371929995,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1688376504
    },
    {
        "content": "<p>I pushed fixes already.</p>",
        "id": 371932237,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688376893
    },
    {
        "content": "<p>And I'm currently recompiling mathlib4 with the proper fix.</p>",
        "id": 371932360,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688376911
    },
    {
        "content": "<p>If you PR a change putting the category theory notations in a namespace and open this namespace in the relevant files, I am sure category theory people will be happy to merge it.</p>",
        "id": 371932425,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1688376924
    },
    {
        "content": "<p>Yes, I'm simply adding <code>scoped</code> at the beginning of a couple of lines in <code>CategoryTheory.Category.Basic</code>. And so far I found only one file where you need to add <code>open CategoryTheory</code> (the sheafify file).</p>",
        "id": 371933206,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688377084
    },
    {
        "content": "<p>I opened  <a href=\"https://github.com/leanprover-community/mathlib4/pull/5685\">#5685</a>. The final count is that two files needed an extra <code>open CategoryTheory</code>.</p>",
        "id": 371936465,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688377743
    }
]