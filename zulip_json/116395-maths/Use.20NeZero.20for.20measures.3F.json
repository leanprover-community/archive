[
    {
        "content": "<p>What do you think about using <code>[NeZero μ]</code> instead of <code>μ ≠ 0</code> for measures? Then some lemmas like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.Measure.measure_ne_zero#doc\">docs#MeasureTheory.Measure.measure_ne_zero</a> can become instances (and Lean will find this instance, e.g., for <code>volume</code> on a topological group).</p>",
        "id": 377281585,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689942423
    },
    {
        "content": "<p>Don't we already have a standard way to say that a measure is nonzero, with <code>[μ.ae.NeBot]</code>?</p>",
        "id": 377287333,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1689943485
    },
    {
        "content": "<p>So should we replace <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.Measure.measure_ne_zero#doc\">docs#MeasureTheory.Measure.measure_ne_zero</a> with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"n\">measure_ne_zero</span> <span class=\"o\">[</span><span class=\"n\">Nonempty</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">μ.ae.NeBot</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>and maybe also add:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">[</span><span class=\"n\">NeZero</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">μ.ae.NeBot</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">NeZero.ne</span> <span class=\"n\">μ</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>?</p>",
        "id": 377289457,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1689943881
    },
    {
        "content": "<p>In fact I think that the current <code>[μ.ae.NeBot]</code> is rather ugly. I'd rather use <code>[NeZero μ]</code> systematically, and instances between <code>[NeZero μ]</code> and <code>[μ.ae.NeBot]</code> (since cycles are not harmful any more, if I understand correctly).</p>",
        "id": 377290797,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1689944115
    },
    {
        "content": "<p>So we should:</p>\n<ol>\n<li>change existing uses of <code>μ.ae.NeBot</code> to <code>NeZero μ</code>,</li>\n<li>create a (cyclic!) pair of  instances between these two,</li>\n<li>turns <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.Measure.measure_ne_zero#doc\">docs#MeasureTheory.Measure.measure_ne_zero</a> into an instance of <code>NeZero μ</code> (as Yury suggests).</li>\n</ol>",
        "id": 377291892,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1689944306
    },
    {
        "content": "<p>Would you like me to do this?</p>",
        "id": 377291917,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1689944311
    },
    {
        "content": "<p>I would be in favor of that, but we should wait for other people's reaction before embarking on this change. <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>,  for instance, what do you think?</p>",
        "id": 377292737,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1689944468
    },
    {
        "content": "<p>BTW has anyone actually tested this \"cycles no longer considered harmful\" claim in the wild?</p>",
        "id": 377301549,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689946140
    },
    {
        "content": "<p>I myself came last week to the conclusion that we should replace <code>μ.ae.ne_bot</code> with <code>ne_zero μ</code>. This is what I'm doing in <a href=\"https://github.com/leanprover-community/mathlib/pull/18506\">!3#18506</a>.</p>",
        "id": 377304352,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1689946700
    },
    {
        "content": "<p>I thought !3 was considered harmful?</p>",
        "id": 377305681,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689946955
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> doesn't like Lean 4 and <a href=\"https://github.com/leanprover-community/mathlib/pull/18506\">!3#18506</a> is <code>not-too-late</code>.</p>",
        "id": 377315678,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689948745
    },
    {
        "content": "<p>Only because they changed the tag ;-) (but apparently for a valid reason!)</p>",
        "id": 377317283,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689949035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> I don't see <code>ne_zero</code> in <a href=\"https://github.com/leanprover-community/mathlib/pull/18506\">!3#18506</a></p>",
        "id": 377324721,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689950427
    },
    {
        "content": "<p>Ah sorry, must be in the Bergelson intersectivity one instead</p>",
        "id": 377324978,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1689950483
    },
    {
        "content": "<p>Was it PRed?</p>",
        "id": 377334510,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689952252
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span> Why do we need the instance <code>[μ.ae.neBot] : NeZero μ</code>?</p>",
        "id": 377334635,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689952277
    },
    {
        "content": "<p>It's hard to think of when we would need this (if ever) but if it does no harm, then it's free to add it. Nevertheless, I wouldn't mind leaving it out.</p>",
        "id": 377335191,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1689952395
    },
    {
        "content": "<p>We have &lt;30 matches to either <code>ae.*NeBot</code> or <code>NeBot.*ae</code> in the library (and some of them are false positives). I can prepare a PR tonight.</p>",
        "id": 377335590,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689952468
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6048\">#6048</a> (should not be merged before the <code>port-complete</code> tag is there)</p>",
        "id": 377416478,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689970020
    }
]