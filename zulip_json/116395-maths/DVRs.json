[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">class</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">principal_ideal_domain</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">unique_nonzero_max_ideal</span> <span class=\"o\">:</span> <span class=\"bp\">∃!</span> <span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">is_prime</span> <span class=\"bp\">∧</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> what do you think?</p>",
        "id": 188142696,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581622973
    },
    {
        "content": "<p>Well, we already have <code>local_ring</code></p>",
        "id": 188143009,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581623171
    },
    {
        "content": "<p>So maybe you should <code>extend</code> that</p>",
        "id": 188143031,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581623187
    },
    {
        "content": "<p>and then add one extra condition saying that it's not a field</p>",
        "id": 188143061,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581623203
    },
    {
        "content": "<p>but a general local ring isn't a PID so I need to add that somehow, right?</p>",
        "id": 188143208,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581623312
    },
    {
        "content": "<p>You are already extending that, right?</p>",
        "id": 188143260,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581623368
    },
    {
        "content": "<p>I meant, in addition, extend local ring</p>",
        "id": 188143271,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581623376
    },
    {
        "content": "<p>I wonder whether we'll be happy with <code>[dvr R]</code> and <code>[pid R]</code>, etc... Or that we'd rather have <code>[comm_ring R] [is_dvr R]</code> and <code>[comm_ring R] [is_pid R]</code> etc...</p>",
        "id": 188143412,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581623492
    },
    {
        "content": "<p>The first version has more chances to lead to diamonds, I think</p>",
        "id": 188143445,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581623513
    },
    {
        "content": "<p>I never know if I'm allowed to extend PID and local ring because perhaps I just defined two different multiplications or something? I really have no understanding of this stuff and don't know a place where it's all written up coherently. I occasionally half-understand it for a while and then I just forget it all again.</p>",
        "id": 188143550,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581623566
    },
    {
        "content": "<p>Aha, I think it's fine, but maybe you need to switch on the <code>old_structure_cmd</code></p>",
        "id": 188143877,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581623687
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"n\">class</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">principal_ideal_domain</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n  <span class=\"n\">local_ring</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">pseudouniformiser</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span> <span class=\"n\">is_unit</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 188145502,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581624630
    },
    {
        "content": "<p>Yeah, that seems fine. Although I would maybe not call the condition <code>pseudouniformiser</code></p>",
        "id": 188146043,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581624975
    },
    {
        "content": "<p><code>exists_nonzero_nonunit</code>?</p>",
        "id": 188146075,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581625001
    }
]