[
    {
        "content": "<p>Does anyone have any advice on how to prove extensionality for the category structure with seven entries? See <code>CatExt</code> here. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">reflexivity</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">Eq.refl</span> <span class=\"n\">x</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">symmetry</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span>  <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Eq.symm</span> <span class=\"n\">p</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">transitivity</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Eq.trans</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">extensionality</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"n\">funext</span> <span class=\"n\">p</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">equal_arguments</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">congrArg</span> <span class=\"n\">f</span> <span class=\"n\">p</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">equal_functions</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f₁</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f₂</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">f₁</span> <span class=\"bp\">=</span> <span class=\"n\">f₂</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f₁</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f₂</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">congrFun</span> <span class=\"n\">p</span> <span class=\"n\">x</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">pairwise</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a₁</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a₂</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b₁</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b₂</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">a₁</span> <span class=\"bp\">=</span> <span class=\"n\">a₂</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">b₁</span> <span class=\"bp\">=</span> <span class=\"n\">b₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">,</span><span class=\"n\">b₁</span><span class=\"o\">)</span><span class=\"bp\">=</span><span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">,</span><span class=\"n\">b₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">congr</span> <span class=\"o\">((</span><span class=\"n\">congrArg</span> <span class=\"n\">Prod.mk</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"n\">q</span><span class=\"o\">)</span>\n\n\n<span class=\"c1\">-- A category C consists of:</span>\n<span class=\"kd\">structure</span> <span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">u₀</span><span class=\"o\">,</span><span class=\"n\">v₀</span><span class=\"o\">}</span> <span class=\"n\">where</span>\n  <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₀</span>\n  <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">v₀</span>\n  <span class=\"n\">Idn</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">X</span>\n  <span class=\"n\">Cmp</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span>\n  <span class=\"n\">Id₁</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Idn</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">Id₂</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">Ass</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">W</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">h</span>\n\n\n\n\n\n\n<span class=\"c1\">-- Notation for the identity map:</span>\n<span class=\"kd\">def</span> <span class=\"n\">identity_map</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.Idn</span> <span class=\"n\">X</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"𝟙_(\"</span> <span class=\"n\">C</span> <span class=\"s2\">\")\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">identity_map</span> <span class=\"n\">C</span>\n\n\n\n<span class=\"c1\">-- Notation for composition which infers the objects:</span>\n<span class=\"kd\">def</span> <span class=\"n\">composition</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span> <span class=\"o\">:=</span> <span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n<span class=\"kd\">notation</span> <span class=\"n\">g</span> <span class=\"s2\">\"∘_(\"</span> <span class=\"n\">C</span> <span class=\"s2\">\")\"</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">composition</span> <span class=\"n\">C</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Id₁</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">𝟙</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">X</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">C.Id₂</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Id₂</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"mi\">𝟙</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">Y</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">C.Id₁</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Ass</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"o\">((</span><span class=\"n\">h</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">C.Ass</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n\n\n<span class=\"n\">macro</span> <span class=\"s2\">\"cat\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">repeat</span> <span class=\"o\">(</span><span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Id₁</span><span class=\"o\">])</span> <span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"o\">(</span><span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Id₂</span><span class=\"o\">])</span> <span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"o\">(</span><span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Ass</span><span class=\"o\">]))</span>\n<span class=\"n\">macro</span> <span class=\"s2\">\"CAT\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">repeat</span> <span class=\"o\">(</span><span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">category.Id₁</span><span class=\"o\">])</span> <span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"o\">(</span><span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">category.Id₂</span><span class=\"o\">])</span> <span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"o\">(</span><span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">category.Ass</span><span class=\"o\">]))</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">}</span>\n          <span class=\"o\">{</span><span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span>\n          <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span>\n          <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span>\n          <span class=\"o\">{</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span>\n          <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">}</span>\n          <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">}</span>\n          <span class=\"o\">{</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">}</span>\n          <span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Z</span> <span class=\"n\">W</span><span class=\"o\">}:</span>\n     <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">𝟙</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">W</span><span class=\"o\">)))</span> <span class=\"o\">))</span>\n  <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">i</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span>  <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"mi\">𝟙</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">g</span><span class=\"o\">))</span> <span class=\"bp\">∘</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">cat</span>\n\n\n<span class=\"c1\">-- obtaining a morphism from an equality</span>\n<span class=\"kd\">def</span> <span class=\"n\">Map</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">subst</span> <span class=\"n\">p</span>\n<span class=\"n\">exact</span> <span class=\"mi\">𝟙</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">X</span>\n\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"Map_(\"</span> <span class=\"n\">C</span> <span class=\"s2\">\")\"</span> <span class=\"n\">p</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Map</span> <span class=\"n\">C</span> <span class=\"n\">p</span>\n\n\n\n<span class=\"c1\">-- definition of an isomorphism from X to Y</span>\n<span class=\"kd\">structure</span> <span class=\"n\">isomorphism</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">Fst</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span>\n  <span class=\"n\">Snd</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">X</span>\n  <span class=\"n\">Id₁</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">X</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">C.Idn</span> <span class=\"n\">X</span>\n  <span class=\"n\">Id₂</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">C.Cmp</span> <span class=\"n\">Y</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Snd</span> <span class=\"n\">Fst</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">C.Idn</span> <span class=\"n\">Y</span>\n\n\n<span class=\"c1\">-- notation for isomorphisms from X to Y (≅)</span>\n<span class=\"kd\">notation</span> <span class=\"n\">X</span> <span class=\"s2\">\"≅_(\"</span> <span class=\"n\">C</span> <span class=\"s2\">\")\"</span> <span class=\"n\">Y</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">isomorphism</span> <span class=\"n\">C</span> <span class=\"n\">X</span> <span class=\"n\">Y</span>\n\n\n<span class=\"c1\">-- defining the inverse of an isomorphism between objects X and Y</span>\n<span class=\"kd\">def</span> <span class=\"n\">inverse</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">≅</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Y</span> <span class=\"bp\">≅</span><span class=\"n\">_</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">Fst</span> <span class=\"o\">:=</span> <span class=\"n\">f.Snd</span><span class=\"o\">,</span> <span class=\"n\">Snd</span> <span class=\"o\">:=</span> <span class=\"n\">f.Fst</span><span class=\"o\">,</span> <span class=\"n\">Id₁</span> <span class=\"o\">:=</span> <span class=\"n\">f.Id₂</span><span class=\"o\">,</span> <span class=\"n\">Id₂</span> <span class=\"o\">:=</span> <span class=\"n\">f.Id₁</span><span class=\"o\">}</span>\n\n\n<span class=\"c1\">-- notation for inverse : isos from X to Y to isos from Y to X</span>\n<span class=\"kd\">notation</span> <span class=\"n\">f</span> <span class=\"s2\">\"⁻¹\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">inverse</span> <span class=\"n\">f</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">SetObj</span> <span class=\"o\">:=</span> <span class=\"kt\">Type</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">SetHom</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">SetIdn</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">SetHom</span> <span class=\"n\">X</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">SetCmp</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">SetHom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">SetHom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">SetHom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">SetId₁</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">SetHom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">SetCmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">SetIdn</span> <span class=\"n\">Y</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">SetId₂</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">SetHom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">SetCmp</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">SetIdn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">SetAss</span> <span class=\"o\">(</span><span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">SetObj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">SetHom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">SetHom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">SetHom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">SetCmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">SetCmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">SetCmp</span> <span class=\"n\">W</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">SetCmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">Set</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"n\">SetObj</span><span class=\"o\">,</span> <span class=\"n\">Hom</span> <span class=\"o\">:=</span> <span class=\"n\">SetHom</span><span class=\"o\">,</span> <span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"n\">SetIdn</span><span class=\"o\">,</span> <span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"n\">SetCmp</span><span class=\"o\">,</span> <span class=\"n\">Id₁</span> <span class=\"o\">:=</span> <span class=\"n\">SetId₁</span><span class=\"o\">,</span> <span class=\"n\">Id₂</span> <span class=\"o\">:=</span> <span class=\"n\">SetId₂</span><span class=\"o\">,</span> <span class=\"n\">Ass</span> <span class=\"o\">:=</span> <span class=\"n\">SetAss</span><span class=\"o\">}</span>\n\n\n<span class=\"c1\">-- definition of a functor</span>\n<span class=\"kd\">structure</span> <span class=\"n\">functor</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n   <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"n\">D.Obj</span>\n   <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"n\">D.Hom</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n   <span class=\"n\">Idn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"o\">(</span><span class=\"n\">C.Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">D.Idn</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n   <span class=\"n\">Cmp</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">),</span>\n   <span class=\"n\">D.Cmp</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">FunRfl</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"n\">F.Obj</span><span class=\"o\">,</span> <span class=\"n\">Hom</span> <span class=\"o\">:=</span> <span class=\"n\">F.Hom</span><span class=\"o\">,</span> <span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"n\">F.Idn</span><span class=\"o\">,</span> <span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"n\">F.Cmp</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">rfl</span>\n\n<span class=\"c1\">-- def FunOut (C : category) (D : category )</span>\n\n<span class=\"c1\">-- definition of the identity functor on objects</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatIdnObj</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"n\">X</span>\n\n<span class=\"c1\">-- definition of the identity functor on morphisms</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatIdnMor</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"n\">f</span>\n\n<span class=\"c1\">-- proving the identity law for the identity functor</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatIdnIdn</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">C.Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- proving the compositionality law for the identity functor</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatIdnCmp</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n\n\n<span class=\"c1\">-- defining the identity functor</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatIdn</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">C</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"n\">CatIdnObj</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">Hom</span> <span class=\"o\">:=</span> <span class=\"n\">CatIdnMor</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"n\">CatIdnIdn</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"n\">CatIdnCmp</span> <span class=\"n\">C</span><span class=\"o\">}</span>\n\n\n<span class=\"c1\">-- defining the composition G ∘_(Cat) F on objects</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatCmpObj</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">D</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"o\">(</span><span class=\"n\">G.Obj</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">))</span>\n\n<span class=\"c1\">-- defining the composition G ∘_(Cat) F on morphisms</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatCmpHom</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">D</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"o\">(</span><span class=\"n\">G.Hom</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n\n\n<span class=\"c1\">-- proving the identity law for the composition G ∘_(Cat) F</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatCmpIdn</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">D</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"n\">Eq.trans</span> <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">G.Hom</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">F.Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G.Idn</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">))</span>\n\n\n<span class=\"c1\">-- proving the compositionality law for the composition G ∘_(Cat) F</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatCmpCmp</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">D</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"o\">((</span><span class=\"n\">Eq.trans</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">G.Cmp</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">G.Hom</span>  <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">Z</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">F.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)))</span>\n\n\n<span class=\"c1\">-- defining the composition in the category Cat</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatCmp</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">D</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"n\">CatCmpObj</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">Hom</span> <span class=\"o\">:=</span> <span class=\"n\">CatCmpHom</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">G</span><span class=\"o\">,</span><span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"n\">CatCmpIdn</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"n\">CatCmpCmp</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">G</span><span class=\"o\">}</span>\n\n\n<span class=\"c1\">-- proving Cat.Id₁</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatId₁</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">CatCmp</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">CatIdn</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Eq.refl</span> <span class=\"n\">F</span>\n\n<span class=\"c1\">-- Proof of Cat.Id₂</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatId₂</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">CatCmp</span> <span class=\"n\">C</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">CatIdn</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Eq.refl</span> <span class=\"n\">F</span>\n\n<span class=\"c1\">-- Proof of Cat.Ass</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatAss</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">category</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">functor</span> <span class=\"n\">D</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">G</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">CatCmp</span> <span class=\"n\">B</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">F</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">G</span> <span class=\"n\">H</span><span class=\"o\">))</span>\n\n\n<span class=\"c1\">-- The category of categories</span>\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n<span class=\"kd\">universe</span> <span class=\"n\">v</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Cat</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">},</span> <span class=\"n\">Hom</span> <span class=\"o\">:=</span> <span class=\"n\">functor</span><span class=\"o\">,</span> <span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"n\">CatIdn</span><span class=\"o\">,</span> <span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"n\">CatCmp</span><span class=\"o\">,</span> <span class=\"n\">Id₁</span><span class=\"o\">:=</span> <span class=\"n\">CatId₁</span><span class=\"o\">,</span> <span class=\"n\">Id₂</span><span class=\"o\">:=</span> <span class=\"n\">CatId₂</span><span class=\"o\">,</span> <span class=\"n\">Ass</span> <span class=\"o\">:=</span> <span class=\"n\">CatAss</span><span class=\"o\">}</span>\n\n<span class=\"c1\">-- def equal {A : Type u} {B }</span>\n<span class=\"kd\">def</span> <span class=\"n\">MorCatObj</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">D.Obj</span> <span class=\"bp\">=</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">D.Obj</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">p</span><span class=\"o\">]</span>\n<span class=\"n\">exact</span> <span class=\"n\">X</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MorCatHom</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">D.Obj</span> <span class=\"bp\">=</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">D.Hom</span> <span class=\"o\">(</span><span class=\"n\">MorCatObj</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MorCatObj</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"c1\">-- def MorCatIdn (C : Cat.Obj) (D : Cat.Obj) (X : C)</span>\n\n<span class=\"c1\">-- def MorCatCmp</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">CatRfl</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"n\">C.Obj</span><span class=\"o\">,</span> <span class=\"n\">Hom</span> <span class=\"o\">:=</span> <span class=\"n\">C.Hom</span><span class=\"o\">,</span> <span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"n\">C.Idn</span><span class=\"o\">,</span> <span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"n\">C.Cmp</span><span class=\"o\">,</span> <span class=\"n\">Id₁</span> <span class=\"o\">:=</span> <span class=\"n\">C.Id₁</span><span class=\"o\">,</span> <span class=\"n\">Id₂</span> <span class=\"o\">:=</span> <span class=\"n\">C.Id₂</span><span class=\"o\">,</span> <span class=\"n\">Ass</span> <span class=\"o\">:=</span> <span class=\"n\">C.Ass</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">rfl</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">CatExt</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">p₁</span> <span class=\"o\">:</span> <span class=\"n\">D.Obj</span> <span class=\"bp\">=</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">p₂</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"bp\">=</span> <span class=\"n\">D.Hom</span> <span class=\"o\">(</span><span class=\"n\">MorCatObj</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p₁</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MorCatObj</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p₁</span> <span class=\"n\">Y</span><span class=\"o\">))</span>\n          <span class=\"o\">(</span><span class=\"n\">X₁</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">X₂</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">X₃</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">f₁</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X₁</span> <span class=\"n\">X₂</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">f₂</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X₂</span> <span class=\"n\">X₃</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">p₃</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">MorCatHom</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p₁</span> <span class=\"n\">X₁</span> <span class=\"n\">X₃</span> <span class=\"o\">(</span><span class=\"n\">C.Cmp</span> <span class=\"n\">X₁</span> <span class=\"n\">X₂</span> <span class=\"n\">X₃</span> <span class=\"n\">f₁</span> <span class=\"n\">f₂</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">D.Cmp</span> <span class=\"o\">(</span><span class=\"n\">MorCatObj</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p₁</span> <span class=\"n\">X₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MorCatObj</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p₁</span> <span class=\"n\">X₂</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MorCatObj</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p₁</span> <span class=\"n\">X₃</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MorCatHom</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p₁</span> <span class=\"n\">X₁</span> <span class=\"n\">X₂</span> <span class=\"n\">f₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">MorCatHom</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">p₁</span> <span class=\"n\">X₂</span> <span class=\"n\">X₃</span> <span class=\"n\">f₂</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">=</span> <span class=\"n\">D</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">CatRfl</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">CatRfl</span> <span class=\"n\">D</span><span class=\"o\">]</span>\n<span class=\"n\">simp</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 381243467,
        "sender_full_name": "Dean Young",
        "timestamp": 1690997514
    },
    {
        "content": "<p><a href=\"#narrow/stream/116395-maths/topic/Proving.20extentionality.20for.20a.20category.20structure/near/381243467\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/shortcut.20for.20.02klzzwxh.3A0000.03.3F\">#mathlib4 &gt; shortcut for <code>Seminorm.instMulAction</code>?</a> by <span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span>.</p>",
        "id": 381243677,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690997554
    },
    {
        "content": "<p>Sorry for not tagging the question correctly</p>",
        "id": 381245593,
        "sender_full_name": "Dean Young",
        "timestamp": 1690997979
    },
    {
        "content": "<p>That statement is clearly false. Your p₂ and p₃ arguments need to be foralls.</p>",
        "id": 381331139,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691027590
    },
    {
        "content": "<p>I changed it to a structure, \"equal categories\":</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- def equal {A : Type u} {B }</span>\n<span class=\"kd\">def</span> <span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">obj</span> <span class=\"o\">:</span> <span class=\"n\">D.Obj</span> <span class=\"bp\">=</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">D.Obj</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">obj</span><span class=\"o\">]</span>\n<span class=\"n\">exact</span> <span class=\"n\">X</span>\n\n<span class=\"c1\">-- def equal {A : Type u} {B }</span>\n<span class=\"kd\">def</span> <span class=\"n\">ℍ</span><span class=\"bp\">𝕠𝕞</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">obj</span> <span class=\"o\">:</span> <span class=\"n\">D.Obj</span> <span class=\"bp\">=</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hom</span> <span class=\"o\">:</span> <span class=\"n\">D.Hom</span> <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">D.Hom</span> <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hom</span><span class=\"o\">]</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">category.mk</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">equal_categories</span> <span class=\"n\">where</span>\n  <span class=\"n\">Fst</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span>\n  <span class=\"n\">Snd</span> <span class=\"o\">:</span> <span class=\"n\">Cat.Obj</span>\n  <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"n\">Snd.Obj</span> <span class=\"bp\">=</span> <span class=\"n\">Fst.Obj</span>\n  <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">Fst.Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n      <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">Fst.Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n      <span class=\"n\">Snd.Hom</span>\n      <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span> <span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span> <span class=\"n\">Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n      <span class=\"bp\">=</span>\n      <span class=\"n\">Fst.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span>\n  <span class=\"n\">Cmp</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">Fst.Obj</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n      <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Fst.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n      <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Fst.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n      <span class=\"o\">(</span><span class=\"n\">ℍ</span><span class=\"bp\">𝕠𝕞</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span> <span class=\"n\">Obj</span> <span class=\"n\">X</span> <span class=\"n\">Z</span>\n      <span class=\"o\">(</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">Fst.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">))</span>\n      <span class=\"bp\">=</span>\n      <span class=\"n\">Snd.Cmp</span>\n      <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span> <span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span> <span class=\"n\">Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"bp\">𝕆𝕓𝕛</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span> <span class=\"n\">Obj</span> <span class=\"n\">Z</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">ℍ</span><span class=\"bp\">𝕠𝕞</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span> <span class=\"n\">Obj</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">ℍ</span><span class=\"bp\">𝕠𝕞</span> <span class=\"n\">Fst</span> <span class=\"n\">Snd</span> <span class=\"n\">Obj</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 381351804,
        "sender_full_name": "Dean Young",
        "timestamp": 1691037513
    },
    {
        "content": "<p>Could you <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> a bit? This is not really a sensible thing to be trying to do.</p>",
        "id": 381353526,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691038371
    },
    {
        "content": "<p>I need this extensionality result for the categories to be able to show that two categories are equal. So it's my main goal right now (as well as an extensionality result for functors), but... it's come up whenever I have a structure with dependent types in it. </p>\n<p>In general I want something like <code>a = b → f a = f b</code> for <em>dependent</em> f,i.e.<code> f x</code> might not be the same type as <code>f y</code> for <code>x, y : X</code>, and yet <code> f a</code> does have the same type as <code>f b</code> when <code>a = b</code>, and <code>f a = f b</code> should somehow be able to be expressed and proven. That may be a critical feature of equality for me.</p>",
        "id": 381354285,
        "sender_full_name": "Dean Young",
        "timestamp": 1691038773
    },
    {
        "content": "<p>So, if I had such a feature I think I could prove <code>category.mk C.Obj = category.mk D.Obj</code>, then <code>categorylmk C.Obj C.Hom = category.mk D.Obj D.Hom</code></p>",
        "id": 381354732,
        "sender_full_name": "Dean Young",
        "timestamp": 1691038995
    },
    {
        "content": "<p>Categories aren't equal. They are rarely even isomorphic. Usually they are only equivalent. Ignoring this is in invitation to suffering in dependent type theory hell. :-)</p>",
        "id": 381355215,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691039210
    },
    {
        "content": "<p>Similarly, functors are rarely equal. Have a look in Mathlib how we handle this --- we have an extensionality theorem for functors, but use it exceptionally rarely.</p>",
        "id": 381355326,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691039246
    },
    {
        "content": "<p>Even if you do the dependent type theory suffering, you only prove a result that encourages you to do more things \"the wrong way\".</p>",
        "id": 381355407,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691039283
    },
    {
        "content": "<p>Ok, I'll take your advice. </p>\n<p>Categories | Equivalence<br>\nFunctors | Isomorphism<br>\nNatural transformations | Equality</p>",
        "id": 381359010,
        "sender_full_name": "Dean Young",
        "timestamp": 1691040844
    },
    {
        "content": "<p>How does Lean handle extensionality of natural transformations?</p>",
        "id": 381369749,
        "sender_full_name": "Dean Young",
        "timestamp": 1691044928
    },
    {
        "content": "<p>Do you mean Mathilb? See <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.NatTrans.ext#doc\">docs#CategoryTheory.NatTrans.ext</a></p>",
        "id": 381390243,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691050030
    },
    {
        "content": "<p>Take a look at this structure:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"n\">where</span>\n   <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n  <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n  <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"n\">Y</span>\n</code></pre></div>\n<p>I want to fill in the sorry here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">foo</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">foo</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">a.X</span> <span class=\"bp\">=</span>  <span class=\"n\">b.X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">a.Y</span> <span class=\"bp\">=</span> <span class=\"n\">b.Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>When I try a rewrite tactic it says \"motive is not type correct\".</p>\n<p>In general I still need a way of proving <code>R : x = y → A x = A y</code> for dependent <code>A</code>. Right now I have several such situations where the extensionality feature is hard to get because of dependent <code>A</code>. Is there a name for <code>R</code>?</p>",
        "id": 381596607,
        "sender_full_name": "Dean Young",
        "timestamp": 1691092464
    },
    {
        "content": "<p>your <code>foo</code> doesn't compile</p>",
        "id": 381596922,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1691092563
    },
    {
        "content": "<p>Oops let's do this then:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"n\">where</span>\n  <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"n\">Y</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">foo</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">foo</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">a.X</span> <span class=\"bp\">=</span>  <span class=\"n\">b.X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">a.Y</span> <span class=\"bp\">=</span> <span class=\"n\">b.Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 381597161,
        "sender_full_name": "Dean Young",
        "timestamp": 1691092625
    },
    {
        "content": "<p>Just so you know, equality of types is evil. But in any case, here's a proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"n\">where</span>\n  <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">foo</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">foo</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">a.X</span> <span class=\"bp\">=</span> <span class=\"n\">b.X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">a.Y</span> <span class=\"bp\">=</span> <span class=\"n\">b.Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">a</span>\n  <span class=\"n\">cases</span> <span class=\"n\">b</span>\n  <span class=\"n\">congr</span>\n</code></pre></div>",
        "id": 381597529,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1691092722
    },
    {
        "content": "<p>Tag it with <code>@[ext]</code></p>",
        "id": 381597606,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691092743
    },
    {
        "content": "<p>yep, that would work as well.</p>",
        "id": 381597706,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1691092778
    },
    {
        "content": "<p>Thanks those worked well for my natural transformation extensionality.</p>",
        "id": 381598832,
        "sender_full_name": "Dean Young",
        "timestamp": 1691093103
    },
    {
        "content": "<p>If you're going through all this as an exercise, then that's great. But it's worthwhile to mention that mathlib4 has a very extensive category theory library. If you want to <em>use</em> category theory for something, it's probably better to learn how to use that part of the library instead of reinventing the wheel.</p>",
        "id": 381599096,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1691093211
    }
]