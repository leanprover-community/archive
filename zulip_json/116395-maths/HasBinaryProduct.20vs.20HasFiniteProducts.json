[
    {
        "content": "<p>Disclaimer: I'm <strong>very far</strong> from being a category theory expert.</p>\n<p>We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Limits.HasBinaryProduct#doc\">docs#CategoryTheory.Limits.HasBinaryProduct</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Limits.HasFiniteProducts#doc\">docs#CategoryTheory.Limits.HasFiniteProducts</a>. What do you think about replacing the latter with <code>[âˆ€ X Y : C, HasBinaryProduct X Y]</code> and proving by induction the current definition?</p>",
        "id": 370091847,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687876997
    },
    {
        "content": "<p>That's very different, since it doesn't give you an empty product.</p>",
        "id": 370115686,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1687880858
    },
    {
        "content": "<p>Thank you for the explanation. Then should there be a constructor from a universal object and <code>HasBinaryProduct</code>?</p>",
        "id": 370130647,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687883479
    },
    {
        "content": "<p>(or better a lemma saying <code>iff</code>?)</p>",
        "id": 370130789,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687883515
    },
    {
        "content": "<p>Yeah, once I'm not on my phone I was going to check if that <code>iff</code> was missing since I noticed it wasn't in that module, before mentioning that we should have it</p>",
        "id": 370135070,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1687884286
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.hasFiniteProducts_of_has_binary_and_terminal#doc\">docs#CategoryTheory.hasFiniteProducts_of_has_binary_and_terminal</a></p>",
        "id": 370184086,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1687894355
    },
    {
        "content": "<p>just in case that's what you wanted Yuri.</p>",
        "id": 370184203,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1687894384
    },
    {
        "content": "<p>The converse is there as well in terms of instances IIRC, but I don't think we have an iff statement.</p>",
        "id": 370184451,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1687894443
    },
    {
        "content": "<p>This stuff could definitely use a refactor and cleanup, it is rather old code. But I think keeping the two typeclasses is correct.</p>",
        "id": 370220243,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687904876
    }
]