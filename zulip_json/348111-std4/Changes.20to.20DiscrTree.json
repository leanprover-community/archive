[
    {
        "content": "<p>We have some changes coming to the implementation of <code>DiscrTree</code>. <a href=\"https://github.com/leanprover/std4/pull/316\">std4#316</a> is the Std bump for this; I'd appreciate some skeptical eyes on this one!</p>",
        "id": 397982587,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698020699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span>, I've made Aesop compile again at <a href=\"https://github.com/leanprover-community/aesop/pull/79\">https://github.com/leanprover-community/aesop/pull/79</a>. If you could give it a skeptical look, and then make any changes you'd like, that would be great!</p>",
        "id": 397984017,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698021655
    },
    {
        "content": "<p>Oh, are we getting rid of the <code>simpleReduce</code> flag? What's the rationale?</p>",
        "id": 397992395,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698026664
    },
    {
        "content": "<p>the changes themselves seem fine</p>",
        "id": 397992464,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698026719
    },
    {
        "content": "<p>Instead of the <code>simpleReduce</code> flag, all the <code>DiscrTree</code> functions now take <code>WhnfCoreConfig</code> argument. <code>simpleReduce := false</code> is <code>{}</code>, and <code>simpleReduce := true</code> is (I think?) <code>{ iota := false, proj := .no }</code>.</p>",
        "id": 398001693,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698031523
    },
    {
        "content": "<p>If you merge <a href=\"https://github.com/leanprover/std4/pull/285\">https://github.com/leanprover/std4/pull/285</a> first, then more (but not all) of the refactoring is contained to std4, as it moves some operations on DiscrTrees scattered throughout mathlib and Aesop to std4. But maybe that's too distracting at this point, and I can update my PR afterwards as well, of course.</p>",
        "id": 398020423,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1698043291
    },
    {
        "content": "<p>Whatever is most easiest. Maybe <a href=\"https://github.com/leanprover/std4/pull/316\">std4#316</a> could just move the operations to std since it's already touching all the code.</p>",
        "id": 398020653,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1698043403
    },
    {
        "content": "<p>I don't particularly mind the ordering these happen in, but I would prefer to keep the migration and update steps in separate PRs.</p>",
        "id": 398028478,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698046620
    },
    {
        "content": "<p>Fair enough, then better just go ahead with your update, and I'll continue with the migration afterwards.</p>",
        "id": 398030481,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1698047354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Thanks for fixing up Aesop! I've reviewed the PR and made some trivial changes.</p>",
        "id": 398064919,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1698060802
    }
]