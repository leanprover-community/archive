[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, I foolishly slightly changed the statement of <code>List.zipWith_map_left/right</code>while upstreaming them in <a href=\"https://github.com/leanprover/std4/pull/288\">std4#288</a>, and have now fixed them in <a href=\"https://github.com/leanprover/std4/pull/296\">std4#296</a>.</p>",
        "id": 396743135,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367461
    },
    {
        "content": "<p>It would be good to fix this so I can proceed with the Mathlib bump.</p>",
        "id": 396743203,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367487
    },
    {
        "content": "<p>hm, this makes me slightly sad, I liked your revision</p>",
        "id": 396743234,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697367516
    },
    {
        "content": "<p>Ah, okay.</p>",
        "id": 396743244,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367528
    },
    {
        "content": "<p>It does look like it is only one proof in Mathlib that breaks.</p>",
        "id": 396743255,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367539
    },
    {
        "content": "<p>I can probably rewrite it.</p>",
        "id": 396743261,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367542
    },
    {
        "content": "<p>those compositions usually have to be simped away explicitly</p>",
        "id": 396743272,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697367553
    },
    {
        "content": "<p>In this case they somehow helped.</p>",
        "id": 396743288,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367574
    },
    {
        "content": "<p>Some simp lemma liked the composition. I didn't stop to look too hard.</p>",
        "id": 396743303,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367587
    },
    {
        "content": "<p>So... keep the new statement, or revert for the sake of not having to touch Mathlib?</p>",
        "id": 396743482,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367711
    },
    {
        "content": "<p>I'm happy either way.</p>",
        "id": 396743487,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697367716
    },
    {
        "content": "<p>I vote for keeping it</p>",
        "id": 396743712,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697367849
    },
    {
        "content": "<p>Okay! There is a <code>simpa</code> proof on <a href=\"https://github.com/leanprover-community/mathlib4/tree/bump_std\">branch#bump_std</a> that is <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6523731614/job/17714658377\">broken</a>, and I'm not seeing how to ungolf it immediately. If anyone would like to look at it that would be lovely.</p>",
        "id": 396745031,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697368910
    },
    {
        "content": "<p>Done.</p>",
        "id": 396746504,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1697370158
    }
]