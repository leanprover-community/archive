[
    {
        "content": "<p>Can we put</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--</span>\n<span class=\"sd\">Term elaborator that retrieves the current `SearchPath`.</span>\n\n<span class=\"sd\">This can only be used in files that are compiled locally.</span>\n<span class=\"sd\">(That is, if used in an imported file it will embed the search path from whichever machine</span>\n<span class=\"sd\">compiled the `.olean`.)</span>\n<span class=\"sd\">-/</span>\n<span class=\"n\">elab</span> <span class=\"s2\">\"compileTimeSearchPath%\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"n\">return</span> <span class=\"n\">toExpr</span> <span class=\"o\">(</span><span class=\"bp\">‚Üê</span> <span class=\"n\">searchPathRef.get</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>in Std? I want it in multiple locations (and it was being duplicated in Mathlib), so upstreaming seems natural.</p>",
        "id": 385848716,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692345356
    },
    {
        "content": "<p>it should be snake cased</p>",
        "id": 385975576,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692386832
    },
    {
        "content": "<p>Okay, this is in <a href=\"https://github.com/leanprover/std4/pull/222\">std4#222</a>, but that is stacked on top of <a href=\"https://github.com/leanprover/std4/pull/221\">std4#221</a>.</p>",
        "id": 386193219,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692514629
    }
]