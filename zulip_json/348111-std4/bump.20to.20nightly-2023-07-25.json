[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, would you be able to have a quick look at <a href=\"https://github.com/leanprover/std4/pull/202\">https://github.com/leanprover/std4/pull/202</a>, and see how you feel about having to split out these <code>rw</code>s into separate statements. It feels like a bad regression to me, and that we should ask for <a href=\"https://github.com/leanprover/lean4/pull/2317\">https://github.com/leanprover/lean4/pull/2317</a> to be reverted.</p>",
        "id": 379345760,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690511860
    },
    {
        "content": "<p>It is an annoying regression! There's a lot of code I'll need to patch! Perhaps it can be revised so that prior elaborations saved and tried before attempting to elaborate again.</p>",
        "id": 379346315,
        "sender_full_name": "Fran√ßois G. Dorais",
        "timestamp": 1690512199
    },
    {
        "content": "<p>Pinging <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span>, too.</p>",
        "id": 379348760,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690513646
    },
    {
        "content": "<p>I propose making a revert PR, and then trying again with a solution that either tries to reuse elaborations first, or only has this behaviour on <code>at *</code>.</p>",
        "id": 379348911,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690513719
    },
    {
        "content": "<p>I agree. An alternative implementation strategy for <a href=\"https://github.com/leanprover/lean4/pull/2317\">lean4#2317</a> is to reassign the metavariables created during elaboration of the term</p>",
        "id": 379349638,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690514155
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/2366\">lean4#2366</a> is the revert PR.</p>",
        "id": 379374264,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690526441
    },
    {
        "content": "<p>My mistake, sorry. I should have tested mathlib more with this change. I just didn't forsee that breakage was even possible.</p>",
        "id": 379395231,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1690531112
    },
    {
        "content": "<p>Though Mario's suggestion might be quite easy to implement? Unfortunately I'm at a conference today so can't really look into this myself.</p>",
        "id": 379395723,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1690531190
    }
]