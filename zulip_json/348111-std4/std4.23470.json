[
    {
        "content": "<p><a href=\"https://github.com/leanprover/std4/pull/470\">std4#470</a> is the PR containing <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>'s fix to Std for the <code>nightly-2023-12-19</code> toolchain (changes from <a href=\"https://github.com/leanprover/lean4/pull/2973\">lean4#2973</a>). This is a PR to the <code>bump/v4.5.0</code> branch.</p>\n<p>If <span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span> or <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> could review and merge this soon that would be great, so we can make the corresponding update on Mathlib's <code>bump/v4.5.0</code> branch, and then be all ready for <code>v4.5.0</code> in two days time! :-)</p>",
        "id": 409066218,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703039141
    },
    {
        "content": "<p>Scott, could you remind us where we can find the explanations about the release process?</p>",
        "id": 409071641,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703040683
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, <a href=\"https://leanprover-community.github.io/contribute/tags_and_branches.html\">https://leanprover-community.github.io/contribute/tags_and_branches.html</a></p>",
        "id": 409071707,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703040706
    },
    {
        "content": "<p>Criticisms / suggestions / rewriting of that document very welcome!</p>",
        "id": 409071875,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703040745
    },
    {
        "content": "<p>There's a diagram at the bottom.</p>",
        "id": 409071978,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703040775
    },
    {
        "content": "<p>Thanks. The motivation here was to check that now is the right time to beg for a PR merge in the Lean 4 repo so that Mathlib gets good stuff in a couple of days instead of one month later (assuming there is only one release candidate). This is correct right?</p>",
        "id": 409072130,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703040821
    },
    {
        "content": "<p>The PRs I have in mind are the widget ones.</p>",
        "id": 409072476,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703040917
    },
    {
        "content": "<p>Yes, today is definitely the day. :-)</p>",
        "id": 409072480,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703040921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> <span aria-label=\"pleading face\" class=\"emoji emoji-1f97a\" role=\"img\" title=\"pleading face\">:pleading_face:</span></p>",
        "id": 409072515,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703040930
    },
    {
        "content": "<p>By the way, is there an official explanation of the will-merge-soon label?</p>",
        "id": 409072649,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703040973
    },
    {
        "content": "<p>I don't think so.</p>",
        "id": 409072688,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703040990
    },
    {
        "content": "<p>It appears for instance on <a href=\"https://github.com/leanprover/lean4/pull/3054\">lean4#3054</a></p>",
        "id": 409072690,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703040991
    },
    {
        "content": "<p>I think it shouldn't be there: my understanding of the intent is that only people with permission to merge should be putting it on PRs.</p>",
        "id": 409072899,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041065
    },
    {
        "content": "<p>It should indicate that they intend to come back soon and merge it themselves if there are no objections.</p>",
        "id": 409072937,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041082
    },
    {
        "content": "<p>And thus implicitly that it's okay to ping them if it hasn't been merged after a few days.</p>",
        "id": 409073000,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041096
    },
    {
        "content": "<p>But Wojciech has permission to merge that, right?</p>",
        "id": 409073054,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703041115
    },
    {
        "content": "<p>And probably that others with permission to merge should free invited to merge if there is reason to do so.</p>",
        "id": 409073070,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041121
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/blob/master/CODEOWNERS#L21\">https://github.com/leanprover/lean4/blob/master/CODEOWNERS#L21</a></p>",
        "id": 409073130,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703041140
    },
    {
        "content": "<p>Indeed! I had missed that, and wasn't sure.</p>",
        "id": 409073187,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041161
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/3054\">lean4#3054</a> looks fine to me, so it would be great if it can go in soon. The cutoff is essentially <time datetime=\"2023-12-21T07:00:00Z\">2023-12-21T18:00:00+11:00</time> for <code>v4.5.0-rc1</code>. But obviously the sooner the better so things can be tested against Mathlib and still have time to put out fires.</p>",
        "id": 409074442,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041547
    },
    {
        "content": "<p>The other PR that you are after, <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, is presumably <a href=\"https://github.com/leanprover/lean4/pull/2964\">lean4#2964</a>. This looks like it is still breaking Mathlib, so there is work to do if we want this in <code>v4.5.0-rc1</code>.</p>",
        "id": 409074623,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041609
    },
    {
        "content": "<p>The Mathilb failures look to be not the fault of that PR, however, which is bad news (for me, as this isn't meant to happen anymore). I'll investigate.</p>",
        "id": 409074750,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041668
    },
    {
        "content": "<p>Yes, that one is probably too late <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 409074757,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703041670
    },
    {
        "content": "<p>The PR description mentions a missing Mathlib PR.</p>",
        "id": 409074825,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703041696
    },
    {
        "content": "<p>I'm still fixing the latest Std bump (which is needed to get <code>nightly-testing</code> working again): <a href=\"https://github.com/leanprover-community/mathlib4/pull/9155\">#9155</a></p>",
        "id": 409074973,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041771
    },
    {
        "content": "<p>Once that is done I can investigate whether we can get <a href=\"https://github.com/leanprover/lean4/pull/2964\">lean4#2964</a> over the line.</p>",
        "id": 409075006,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703041789
    },
    {
        "content": "<p>I'm afraid I can't really do anything. <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> will need to rebase <a href=\"https://github.com/leanprover/lean4/pull/2964\">lean4#2964</a> onto Lean's <code>nightly-with-mathlib</code> before I can do much to get Mathlib CI working. Unfortunately this PR is based off a quite old version of Lean, even the <code>lakefile.lean</code> in Mathlib won't parse with <a href=\"https://github.com/leanprover/lean4/pull/2964\">lean4#2964</a>.</p>",
        "id": 409078097,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703043009
    },
    {
        "content": "<p>Ah scratch that, I was mislead by the fact that our CI setup no longer builds toolchains for all platforms unless you add the <code>full-ci</code> label, and so I was running on an ancient toolchain generated for <a href=\"https://github.com/leanprover/lean4/pull/2964\">lean4#2964</a>.</p>",
        "id": 409084356,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703045515
    },
    {
        "content": "<p>Unfortunately Github won't build while there is a merge conflict with master, so this will have to wait for <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>.</p>",
        "id": 409090694,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703048961
    },
    {
        "content": "<p>I put <a href=\"https://github.com/leanprover/lean4/pull/3054\">lean4#3054</a> on the merge queue.</p>",
        "id": 409126472,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703063750
    },
    {
        "content": "<p>As for <a href=\"https://github.com/leanprover/lean4/pull/2964\">lean4#2964</a>, for the mathlib4 fix I was pushing commits to <a href=\"https://github.com/leanprover-community/mathlib4/compare/nightly-testing...lean-pr-testing-2964\">lean-pr-testing-2964</a> as per an earlier recommendation. However, that build eventually started to <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7235539061/job/19713125332#step:10:10\">fail</a> with some errors that seemed completely unrelated. 2964 <em>does</em> break mathlib, and the commits are meant to fix that, but it seemed difficult to test them in isolation so I gave up temporarily. I can try rebasing the lean4 PR branch to see if it helps with those unrelated failures.</p>",
        "id": 409126945,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703063917
    },
    {
        "content": "<p>Yes, rebasing is going to be essential at this point.</p>",
        "id": 409127018,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703063949
    },
    {
        "content": "<p>Make sure you rebase onto a commit corresponding to a nightly release, ideally rebase onto <code>nightly-with-mathlib</code>, which is the most recent nightly for which Mathlib CI completed successfully (usually, but not always, the most recent nightly!)</p>",
        "id": 409127184,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703064004
    },
    {
        "content": "<p>That's what I was doing! I did get caught by the lack of CI, e.g. <a href=\"https://github.com/leanprover-community/ProofWidgets4/actions/runs/7227769738/job/19696017872?pr=36\">the Windows PW4 build</a> failed. Is adding the <code>full-ci</code> label sufficient to get all platforms?</p>",
        "id": 409127405,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703064089
    },
    {
        "content": "<p>Uh, the diff between master and nightly-with-mathlib includes stage0 updates, and I also have one in this PR. I don't think you can just merge them, you have to run the whole pipeline (build Lean, rewrite the <code>stage0/</code> folder). But then a merge conflict with master seems unavoidable so long as I rebase on nightly-with-mathlib.</p>",
        "id": 409128320,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703064363
    },
    {
        "content": "<p>Oh, that is unfortunate.</p>",
        "id": 409128512,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703064426
    },
    {
        "content": "<p>We have just had a longer than usual delay getting an update for nightly-with-mathlib.</p>",
        "id": 409128574,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703064451
    },
    {
        "content": "<p>I can skip the stage0 changes in this PR and make them on the master branch later: they are not essential.</p>",
        "id": 409128595,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703064462
    },
    {
        "content": "<p>I'm hoping that in about an hours time <code>nightly-with-mathlib</code> will advance successfully.</p>",
        "id": 409128603,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703064466
    },
    {
        "content": "<p>Oh! Definitely do that then.</p>",
        "id": 409128624,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703064475
    },
    {
        "content": "<p>There is actually a bot that will do it for you now.</p>",
        "id": 409128641,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703064482
    },
    {
        "content": "<p>(The bot will do the stage0 update, that is.)</p>",
        "id": 409128737,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703064504
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/348111-std4/topic/std4.23470/near/409072480\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>The motivation here was to check that now is the right time to beg for a PR merge in the Lean 4 repo</p>\n</blockquote>\n<p>Yes, today is definitely the day. :-)</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover/lean4/pull/3060\">lean4#3060</a> would be particularly nice to get in from my perspective :)</p>",
        "id": 409141391,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1703067619
    },
    {
        "content": "<p>What is this one affecting?</p>",
        "id": 409148397,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703069061
    },
    {
        "content": "<p>This indirectly makes <code>~q</code> matching more effective</p>",
        "id": 409149553,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1703069296
    },
    {
        "content": "<p>As you can now write <code>match u, t, e with | 0, ~q(Nat), ~q($x + $y)</code> in <code>norm_num</code> and <code>positivity</code> extensions, which would previously give an unhelpful error</p>",
        "id": 409149741,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1703069336
    },
    {
        "content": "<p>How can I merge newer mathlib into <a href=\"https://github.com/leanprover-community/mathlib4/compare/nightly-testing...lean-pr-testing-2964\">lean-pr-testing-2964</a>? Essentially I would like to add another \"Trigger CI\" commit.</p>",
        "id": 409150282,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703069434
    },
    {
        "content": "<p>I recommend either:</p>\n<ul>\n<li>merge <code>nightly-testing-YYYY-MM-DD</code> for whichever is the latest Lean nightly in your PRs history</li>\n<li>or push an actual empty commit</li>\n</ul>",
        "id": 409150509,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703069485
    },
    {
        "content": "<p>(Merging <code>nightly-testing-YYYY-MM-DD</code> is meant to happen automatically, but we broke it a few days ago. The fix in the Lean merge queue now!)</p>",
        "id": 409150760,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703069527
    },
    {
        "content": "<p>How can I determine which is the latest nightly in my PRs history? I rebased it on nightly-with-mathlib, but the commits there don't seem to be tagged with versions.</p>",
        "id": 409151938,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703069741
    },
    {
        "content": "<p>There used to be a script for precisely this, but <span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span> recently inlined it into the github workflow. :-)</p>",
        "id": 409152622,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703069870
    },
    {
        "content": "<p>Well, I found it by looking at <a href=\"https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2023-12-18\">nightly releases</a> :)</p>",
        "id": 409152816,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703069902
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">remote</span> <span class=\"n\">add</span> <span class=\"n\">nightly</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">nightly.git</span>\n<span class=\"n\">git</span> <span class=\"n\">fetch</span> <span class=\"n\">nightly</span> <span class=\"bp\">'+</span><span class=\"n\">refs</span><span class=\"bp\">/</span><span class=\"n\">tags</span><span class=\"bp\">/</span><span class=\"n\">nightly</span><span class=\"bp\">-*</span><span class=\"o\">:</span><span class=\"n\">refs</span><span class=\"bp\">/</span><span class=\"n\">tags</span><span class=\"bp\">/</span><span class=\"n\">nightly</span><span class=\"bp\">-*'</span>\n<span class=\"n\">git</span> <span class=\"n\">tag</span> <span class=\"c1\">--merged HEAD --list \"nightly-*\" | sort -rV | head -n 1</span>\n</code></pre></div>\n<p>does the job, but it pollutes your local checkout with all the tags from <code>lean4-nightly</code>.</p>",
        "id": 409153248,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703069986
    },
    {
        "content": "<p>If someone know how to run that step without fetching the tags, please let me know!</p>",
        "id": 409153471,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703070019
    },
    {
        "content": "<p>You can fetch the tags without adding nightly as a remote, then the next normal fetch will remove them again, I think. Not pretty.</p>",
        "id": 409156305,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703070501
    }
]