[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Logic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hP</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">hP.choose</span> <span class=\"o\">:=</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>How can I prove it?</p>",
        "id": 401020683,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1699476605
    },
    {
        "content": "<p>Is it <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Exists.choose_spec#doc\">docs#Exists.choose_spec</a> ?</p>",
        "id": 401020924,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1699476723
    },
    {
        "content": "<p><code>hP.choose_spec</code></p>",
        "id": 401021029,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699476764
    },
    {
        "content": "<p>I don't know why I couldn't find it on my own and I'm feeling embarrassed. Sorry for the spamming.</p>\n<p>PS: Even more embarrassingly, it was not the first time I had this problem.<br>\n<a href=\"#narrow/stream/270676-lean4/topic/Classical.2Echoose.20problem\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Classical.2Echoose.20problem</a></p>",
        "id": 401021226,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1699476851
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 401021234,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699476853
    },
    {
        "content": "<p>Out of curiosity, I tried <a href=\"https://www.moogle.ai/search/raw?q=%60%60%60%0Aimport%20Std.Logic%0A%0Aexample%20%7BA%20%3A%20Type%7D%20%7BP%20%3A%20A%20%E2%86%92%20Prop%7D%20(hP%20%3A%20%E2%88%83%20a%20%3A%20A%2C%20P%20a)%20%3A%20P%20hP.choose%20%3A%3D%0A%20%20sorry%0A%60%60%60%0AHow%20can%20I%20prove%20it%3F\">Moogle</a> and <code>choose_spec</code> is the second theorem.</p>",
        "id": 401026628,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1699479166
    },
    {
        "content": "<p>Moogle is the one I haven't learnt to use yet.</p>",
        "id": 401027249,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1699479444
    },
    {
        "content": "<p>I suppose <code>exact?</code> can't find this because there is no way to index the lemma because the head symbol is an arbitrary predicate? Or am I missing something?</p>",
        "id": 401028237,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1699479895
    },
    {
        "content": "<p>For some reason Martin has split this discussion into two threads (please don't do that), and I already explained this to him in the other one.</p>",
        "id": 401028515,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699480042
    },
    {
        "content": "<p>Aha, sorry, I didn't check the other thread.</p>",
        "id": 401028697,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1699480118
    },
    {
        "content": "<p>I wish I hadn't done it. The problem is that I had the same problem for the second time and I didn't remember the first time. The other thing is that the first time I asked in the <code>lean4</code> stream even though it probably belonged here.</p>",
        "id": 401028703,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1699480121
    }
]