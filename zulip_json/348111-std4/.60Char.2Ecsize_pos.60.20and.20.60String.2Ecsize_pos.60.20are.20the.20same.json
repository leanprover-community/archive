[
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/Std/Data/Char.html#Char.csize_pos\"><code>Char.csize_pos</code></a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Char.html#String.csize_pos\"><code>String.csize_pos</code></a> are the same. The former is in Std4, and the latter is in Mathilb4. Is it okay if I delete the latter?</p>",
        "id": 357346939,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1683735692
    },
    {
        "content": "<p>Why is the def called <code>String.csize</code> and not <code>Char.size</code> or <code>Char.utf8ByteSize</code> (to match <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=String.utf8ByteSize#doc\">docs4#String.utf8ByteSize</a>)?</p>",
        "id": 357349861,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683736382
    },
    {
        "content": "<p>Based on the current name of the def, <code>String.csize_pos</code> is the right name for the lemma</p>",
        "id": 357350108,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683736444
    },
    {
        "content": "<p>After I wake up, I'll remove the theorem in Mathlib4 and change the name of the one in Std4.</p>",
        "id": 357350525,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1683736561
    },
    {
        "content": "<p>GitHub PR: <a href=\"https://github.com/leanprover/std4/pull/134\">std4#134</a></p>",
        "id": 357423725,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1683763129
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.Char</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">String.csize_pos</span> <span class=\"bp\">=</span> <span class=\"n\">String.one_le_csize</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p><code>String.csize_pos</code> is in <code>Std.Data.Char</code>, and <code>String.one_le_csize</code> is in <code>Init.Data.String.Extra</code>. Should we remove the former?</p>",
        "id": 361940816,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1685364123
    },
    {
        "content": "<p>I would guess, based on the names, that they look different?</p>",
        "id": 361952226,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685366937
    },
    {
        "content": "<p>with one saying <code>0 &lt; csize c</code> and the other saying <code>1 &lt;= csize c</code></p>",
        "id": 361952348,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685366966
    },
    {
        "content": "<p>if so, then it's okay that they are defeq. There are of course quite a lot of theorems in mathlib that are defeq to <code>rfl</code></p>",
        "id": 361952452,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685367000
    },
    {
        "content": "<p>Also, I think that in general it should be okay for a std lemma to exactly match a lemma from init with a different name, because sometimes this is done to correct some questionable naming sense in the core library, which is not maintained as actively as std on these matters</p>",
        "id": 361957398,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685368230
    },
    {
        "content": "<p>although this should be done consciously</p>",
        "id": 361957589,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685368282
    },
    {
        "content": "<p>Yes: if you delete a lemma in Std with a good name in favor of one in core with a worse name, then a mathlib user will end up PRing it to mathlib because they couldn't find the lemma at all after looking for the good name</p>",
        "id": 361957751,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685368326
    },
    {
        "content": "<p>someone should really migrate the <code>alias</code> command to std, this is what it was originally designed for</p>",
        "id": 361957980,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685368381
    }
]