[
    {
        "content": "<p>If <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> or <span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span> could take a look at <a href=\"https://github.com/leanprover/std4/pull/350\">https://github.com/leanprover/std4/pull/350</a>, this would be very helpful to me.</p>\n<p>We already have an automated <code>nightly-testing</code> branch on Std (just like on Mathlib), and this adds something we've already added on Mathlib: whenever we get successful CI on the <code>nightly-testing</code> branch, we create/update the <code>nightly-testing-YYYY-MM-DD</code> branch for the relevant nightly release.</p>\n<p>This ensures that <code>nightly-testing-YYYY-MM-DD</code>, when it exists, should always be a \"good\" version of Std that compiles with the given nightly. Having this invariant available makes it much saner to create <code>lean-pr-testing-NNNN</code> branches that actually work...</p>",
        "id": 400347094,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699150213
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I am 100% okay with you approving and merging commits regarding the CI process on your own</p>",
        "id": 400355724,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699156207
    },
    {
        "content": "<p>I see you understand the \"whoever touched it last\" principle regarding CI. :-)</p>",
        "id": 400360447,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699160381
    }
]