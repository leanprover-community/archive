[
    {
        "content": "<p>Could we have <code>rcases?</code> again? I found it very helpful navigating <code>rcases</code>.</p>",
        "id": 347975849,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681027323
    },
    {
        "content": "<p>My current pain point is just translating</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic.rcases</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">L</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">rfl</span> <span class=\"bp\">|</span> <span class=\"n\">m</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>into Lean 4... I know the definition of <code>List.Mem</code> is new and different, but surely I should be able to use <code>rcases</code> somehow? I can't find any pattern that works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Tactic.RCases</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.LeftRight</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">L</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">m</span>    <span class=\"c1\">-- not this!</span>\n  <span class=\"bp\">·</span> <span class=\"n\">left</span>\n    <span class=\"n\">rfl</span>\n  <span class=\"bp\">·</span> <span class=\"n\">right</span>\n    <span class=\"n\">exact</span> <span class=\"n\">m</span>\n</code></pre></div>",
        "id": 347976083,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681027421
    },
    {
        "content": "<p>What happens if you just do <code>cases' h</code>, then edit to <code>cases' h with &lt;stuff&gt;</code>, then <code>cases' &lt;whatever just appeared&gt;</code> etc etc</p>",
        "id": 347976990,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681027719
    },
    {
        "content": "<p><code>rcases h with _ | ⟨_, m⟩</code></p>",
        "id": 347977733,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1681028005
    }
]