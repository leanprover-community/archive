[
    {
        "content": "<p>I'm finishing up <a href=\"https://github.com/leanprover/std4/pull/215\">std4#215</a>, which adds a \"Try these:\" widget for lists of \"Try this:\" suggestions.</p>\n<p>I was wondering: is it alright to use <code>&lt;span&gt;</code> instead of <code>&lt;a&gt;</code> for the links? The <code>href</code> field is not used; everything is handled by <code>onclick</code>. The built-in vs code <code>a:hover</code> style interferes with styling on hover in certain cases (causing an unsightly flash to blue). Does switching from <code>a</code> to <code>span</code> interfere with, say, accessibility via screen readers, though? Or anything else? Just trying to anticipate any issues.</p>",
        "id": 389300029,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1693956085
    },
    {
        "content": "<p>Btw, <a href=\"https://github.com/EdAyers/ProofWidgets4/blob/44e6673a20fc0449d003983d1e1f472df40f7107/ProofWidgets/Component/OfRpcMethod.lean\">this recent addition</a> to ProofWidgets4 means that you should (I believe!) be able to write the entire PR in Lean with no JavaScript. It's understandable if you don't want to rewrite it though! For the clickable button you could use <a href=\"https://github.com/EdAyers/ProofWidgets4/blob/44e6673a20fc0449d003983d1e1f472df40f7107/ProofWidgets/Component/MakeEditLink.lean\">MakeEditLink</a> which currently uses <code>&lt;a&gt;</code>. I observed no flashes with that component, though if you see any it could be switched to a <code>&lt;span&gt;</code>.</p>\n<p>The accessibility story is pretty tragic in the infoview atm, but fwiw <code>&lt;a&gt;</code> (semantic tag) is better for that than <code>&lt;span&gt;</code> (styling tag).</p>",
        "id": 389959731,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1694213316
    },
    {
        "content": "<p>Oh wow, that's extremely cool! I'd definitely need to look into it though—I haven't written anything in <code>RequestM</code> yet, for example—and that would probably delay this PR even further. :)</p>\n<p>Also, does <code>MakeEditLink</code> allow styling of the link? I couldn't see it in the fields or arguments, and that's a crucial part of this PR (for the LLMStep project). (That's the context in which using <code>&lt;a&gt;</code> is an issue: when you hover over it, it flashes back to blue.)</p>",
        "id": 390377303,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1694461620
    },
    {
        "content": "<p>So, seeing as this PR has been on the vine for a while, I think we ought to refactor it later, after merging (but we should definitely eventually refactor it)! :)</p>\n<p>Btw, re: the PR itself: I noticed that a merge conflict label was added 3 days ago, and I've now cleared that. :)</p>",
        "id": 390377705,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1694461819
    },
    {
        "content": "<blockquote>\n<p>Also, does MakeEditLink allow styling of the link? </p>\n</blockquote>\n<p>Ah, no, but I can easily add that. Good idea!</p>",
        "id": 390430295,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1694484896
    },
    {
        "content": "<p>(Note that std does not depend on ProofWidgets, so any fanciness here would have to be inlined into std to be used in TryThis)</p>",
        "id": 390430463,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694484996
    },
    {
        "content": "<p>Oh, I misread this as a mathlib4 PR. In that case indeed, it may not use PW.</p>",
        "id": 390431071,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1694485384
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span>, <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, I hope <a href=\"https://github.com/leanprover/std4/pull/215\">std4#215</a> can be merged soon. <span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span> has just done some more updates, but it has been <code>awaiting-review</code> for over a month now, with a number of external users (LLMStep, LeanInfer, also loogle and the <code>hint</code> tactic) all eager to make use of it. :-)</p>",
        "id": 398041509,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698051777
    }
]