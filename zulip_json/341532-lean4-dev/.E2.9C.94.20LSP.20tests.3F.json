[
    {
        "content": "<p>I've been working on getting the Lean LSP server to support position encoding negotiation a la LSP  3.17, and I'm at the \"updating the tests\" stage. I'd like to set it up so that the tests in <code>tests/lean/interactive</code> are all run in all three supporting position encodings, but I am having a hard time reverse engineering where these tests are actually run. </p>\n<p><code>CMakeLists.txt</code> seems to be invoking <code>test_single.sh</code>, which itself just calls Lean on the test. I can't find any script that's firing up the LSP server, parsing the <code>--v</code> and <code>--^</code> comments, or anything like that. Does anyone have a pointer?</p>",
        "id": 395703793,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1696859417
    },
    {
        "content": "<p>I'm totally new to <code>cmake</code> and the associated tooling, so I suspect that I'm missing something that's obvious to more experienced developers</p>",
        "id": 395703923,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1696859463
    },
    {
        "content": "<p>And of course I stare at it for 15 minutes, write up a question, and then figure it out immediately afterwards. My bad - sorry for the noise. It's <code>run.lean</code> in <code>tests/lean/interactive</code>.</p>",
        "id": 395704285,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1696859575
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"354934\">David Thrane Christiansen</span> has marked this topic as resolved.</p>",
        "id": 395704295,
        "sender_full_name": "Notification Bot",
        "timestamp": 1696859577
    },
    {
        "content": "<p>Out of curiosity, might this mean that we will be able to drop UTF-16 translation code (or at least not use it in the server) in the future? That would be exciting!</p>",
        "id": 395739758,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1696871975
    },
    {
        "content": "<p>This does not have this effect, unfortunately - LSP still mandates the use of UTF-16, it merely now allows UTF-8 and UTF-32 as well. I hope that this restriction may be lifted in a future revision, but I don't think that'd have a time horizon of under a decade, so it's not really relevant. This makes life harder for our server, but easier for clients who want to make nice tools in the future.</p>",
        "id": 395879814,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1696943260
    }
]