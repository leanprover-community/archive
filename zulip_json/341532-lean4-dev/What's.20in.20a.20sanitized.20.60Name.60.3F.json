[
    {
        "content": "<p>I discovered something that could use clarification while debugging an issue that blew up the <a href=\"https://github.com/leanprover-community/mathlib4/pull/7260\">new <code>calc</code> widget</a>. I went into it expecting <code>Name</code>s to always faithfully represent internal data, in particular that a name with macro scopes would have a form such as <code>`foo._@.Module._hyg.1</code>, and that tombstones would only appear in types that represent pretty-printed output such as as <code>String</code> or <code>Format</code>. However, that is not what happens. We have <a href=\"https://github.com/leanprover/lean4/blob/ca0e6b0522e2948e8d819886be1e8fc106354947/src/Lean/LocalContext.lean#L438\"><code>sanitizeNames</code></a> which rewrites the <code>userName</code> field of local hypotheses to be <code>Name.str .anonymous \"blah‚úù\"</code>.</p>\n<p>Then in the server code, we put these into <code>names : Array Name</code> <a href=\"https://github.com/leanprover/lean4/blob/ca0e6b0522e2948e8d819886be1e8fc106354947/src/Lean/Widget/InteractiveGoal.lean#L21\">here</a>. This works fine for displaying in the infoview, but if we try to <em>deserialize</em> an <code>InteractiveHypothesisBundle</code> inside an RPC method for widget purposes, the <code>FromJson Name</code> instance blows up in <code>String.toName</code>.</p>\n<p>I think my preferred solution is to, rather than 'fix' <code>String.toName</code> to accept these names with tombstones, stop pretending that they are actual <code>Name</code>s and re-type <code>InteractiveHypothesisBundle : Array String</code>. This should be a backwards-compatible change as the JSON representation is a string in either case. But I am posting here in case the dev team has other feedback. Is a PR welcome?</p>",
        "id": 395780575,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1696898116
    },
    {
        "content": "<p>Sounds good to me!</p>",
        "id": 395816710,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1696919752
    }
]