[
    {
        "content": "<p>Following the documentation at <a href=\"https://lean-lang.org/lean4/doc/dev/index.html#dev-setup-using-elan\">https://lean-lang.org/lean4/doc/dev/index.html#dev-setup-using-elan</a> I have set up <code>lean overrides</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">~/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">src</span> <span class=\"bp\">$</span> <span class=\"n\">elan</span> <span class=\"n\">override</span> <span class=\"n\">list</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jojo</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lean4</span>                 <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">stage1</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jojo</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">src</span>             <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">stage0</span>\n<span class=\"bp\">~/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">src</span> <span class=\"bp\">$</span> <span class=\"n\">elan</span> <span class=\"n\">which</span> <span class=\"n\">lean</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jojo</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">stage0</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span>\n</code></pre></div>\n<p>This used to work fine, but since a week or two, the VS code extension, when started in <code>code src</code>, complains </p>\n<blockquote>\n<p>Opened folder is not a valid Lean 4 project folder because it does not contain a 'lean-toolchain' file. However, a valid Lean 4 project folder was found in one of the parent directories at '/home/jojo/build/lean/lean4'. Open this project instead?</p>\n</blockquote>\n<p>and also</p>\n<blockquote>\n<p>Cannot determine Lean version: no default toolchain</p>\n</blockquote>\n<p>What should I do differently?</p>\n<p>It helps to run</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">echo</span> <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">stage0</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">~/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span>\n</code></pre></div>\n<p>but this seems wrong. Is it simply a infelicity of the VS code extension that it doesn’t take <code>elan override</code> into account?</p>",
        "id": 400107381,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699008075
    },
    {
        "content": "<p>You can disable the message by unsetting <code>Lean4: Show Invalid Project Warnings</code>.</p>",
        "id": 400107784,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1699008224
    },
    {
        "content": "<p>But it’s not just the message, it says <code>Waiting for Lean server to start...</code> instead of starting lean, it seems.</p>",
        "id": 400108011,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699008301
    },
    {
        "content": "<p>Does it go away after restarting the server?</p>",
        "id": 400108166,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1699008358
    },
    {
        "content": "<p>It does! Thanks</p>",
        "id": 400108908,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699008623
    },
    {
        "content": "<blockquote>\n<p>Is it simply a infelicity of the VS code extension that it doesn’t take elan override into account?</p>\n</blockquote>\n<p>Having some version of Lean available is unfortunately not sufficient to ensure that new users do not get stuck with broken setups. We need to ensure that they are in the right folder. The Lean 4 core directory is a bit of a special case, so there is a hack to detect it, but not for the <code>src</code> directory. I suppose I could add one for it as well :-)</p>",
        "id": 400109038,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1699008675
    },
    {
        "content": "<p>Either that, or simply document it at <a href=\"https://lean-lang.org/lean4/doc/dev/index.html#dev-setup-using-elan\">https://lean-lang.org/lean4/doc/dev/index.html#dev-setup-using-elan</a>, either is fine with me.</p>",
        "id": 400109134,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699008703
    },
    {
        "content": "<p>Although arguably if there is an <code>elan override</code> for a directory, then the user isn’t a new user and the code extension could just use that?</p>",
        "id": 400109254,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699008733
    },
    {
        "content": "<p>I don't think we want to add any special handling for <code>override</code>, especially since Sebastian wants to get rid of it anyways</p>",
        "id": 400109449,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1699008802
    },
    {
        "content": "<p>... This made me notice <a href=\"https://github.com/leanprover-community/vscode-lean4/pull/351\">vscode-lean4#351</a> though, which is good to fix regardless :)</p>",
        "id": 400111409,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1699009509
    }
]