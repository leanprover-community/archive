[
    {
        "content": "<p>What am I doing wrong here?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"test_sage_output\"</span> <span class=\"o\">(</span><span class=\"bp\">&amp;</span><span class=\"s2\">\" only\"</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">(</span><span class=\"s2\">\" [\"</span> <span class=\"n\">term</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"s2\">\"]\"</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"create_sage_output_test\"</span> <span class=\"o\">(</span><span class=\"bp\">&amp;</span><span class=\"s2\">\" only\"</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">(</span><span class=\"s2\">\" [\"</span> <span class=\"n\">term</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"s2\">\"]\"</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n\n<span class=\"n\">elab_rules</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">create_sage_output_test</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"n\">only</span><span class=\"bp\">%$</span><span class=\"n\">onlyTk</span><span class=\"o\">]</span><span class=\"bp\">?</span> <span class=\"bp\">$</span><span class=\"o\">[[</span><span class=\"bp\">$</span><span class=\"n\">hypsStx</span><span class=\"o\">,</span><span class=\"bp\">*</span><span class=\"o\">]]</span><span class=\"bp\">?</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"k\">let</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">test_sage_output</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"n\">only</span><span class=\"bp\">%$</span><span class=\"n\">onlyTk</span><span class=\"o\">]</span><span class=\"bp\">?</span> <span class=\"bp\">$</span><span class=\"o\">[[</span><span class=\"bp\">$</span><span class=\"n\">hypsStx</span><span class=\"o\">,</span><span class=\"bp\">*</span><span class=\"o\">]]</span><span class=\"bp\">?</span> <span class=\"gr\">sorry</span><span class=\"o\">)</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I want <code>foo</code> to be exacty the same syntax but with the first token replaced and the <code>sorry</code> token appended</p>",
        "id": 395728715,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696867239
    },
    {
        "content": "<p>Is the syntax for pattern matching syntax different to the syntax for building syntax quotations?</p>",
        "id": 395728795,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696867267
    },
    {
        "content": "<p>And if so, is there a cheat-sheet for translating between one and the other?</p>",
        "id": 395729025,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696867356
    },
    {
        "content": "<p>A syntax quotation term is a monadic value, you need to bind it</p>",
        "id": 395729722,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1696867505
    }
]