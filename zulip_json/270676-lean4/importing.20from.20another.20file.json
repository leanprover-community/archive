[
    {
        "content": "<p>Can someone link me to an example of how to import a lean 4 file from elsewhere on my computer in a MacOSX directory?</p>",
        "id": 329050721,
        "sender_full_name": "Dean Young",
        "timestamp": 1676919937
    },
    {
        "content": "<p>Import into your project? What do you refer to?</p>",
        "id": 329052532,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676920630
    },
    {
        "content": "<p>Yeah, I've got a Main.lean and Project.lean file which I compile from the terminal.</p>",
        "id": 329055247,
        "sender_full_name": "Dean Young",
        "timestamp": 1676921868
    },
    {
        "content": "<p>Elsewhere on my Mac I have another Main.lean and Project.lean file (and the other files that lake projects automatically make)</p>",
        "id": 329055416,
        "sender_full_name": "Dean Young",
        "timestamp": 1676921922
    },
    {
        "content": "<p>You need the file to be either in the same Lake project or in a Lake project you use as a dependency</p>",
        "id": 329062205,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1676924891
    },
    {
        "content": "<p>What about imports like Mathlib? How do you make a library?</p>",
        "id": 329063468,
        "sender_full_name": "Dean Young",
        "timestamp": 1676925546
    },
    {
        "content": "<p>Mathlib files only import other files from the same project or from the projects it depends on (<code>Std</code>, <code>Qq</code>, <code>Aesop</code>)</p>",
        "id": 329065267,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1676926398
    },
    {
        "content": "<p>I think there's some noise in the communication. What are you trying to do exactly?</p>",
        "id": 329065320,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1676926432
    },
    {
        "content": "<p>I'd say that the easiest way to create a Lean package is using Lake: <a href=\"https://github.com/leanprover/lake/#creating-and-building-a-package\">https://github.com/leanprover/lake/#creating-and-building-a-package</a></p>",
        "id": 329066107,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1676926757
    },
    {
        "content": "<p>I have one file with the definition of the category of categories:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Init.Data.ToString.Basic</span>\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n<span class=\"kd\">universe</span> <span class=\"n\">v</span>\n<span class=\"kd\">structure</span> <span class=\"n\">Cat</span> <span class=\"n\">where</span>\n  <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n  <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span>\n  <span class=\"n\">Idn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">X</span>\n  <span class=\"n\">Cmp</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">),</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span>\n  <span class=\"n\">Id1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),(</span><span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Idn</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">Id2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),(</span><span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">Ass</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">W</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">),(</span><span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">Cmp</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">h</span>\n<span class=\"kd\">def</span> <span class=\"n\">Cmp</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n<span class=\"kd\">notation</span> <span class=\"n\">g</span> <span class=\"s2\">\"∘\"</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Cmp</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Hom</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span>\n<span class=\"c1\">--notation X \"➔\" Y =&gt; Hom X Y</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Idn</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.Idn</span> <span class=\"n\">X</span>\n<span class=\"c1\">--notation \"𝟙\" X =&gt; Idn X</span>\n<span class=\"kd\">structure</span> <span class=\"n\">Fun</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n   <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"n\">D.Obj</span>\n   <span class=\"n\">Mor</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"n\">D.Hom</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n   <span class=\"n\">Idn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"n\">Mor</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"o\">(</span><span class=\"n\">C.Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">D.Idn</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n   <span class=\"n\">Cmp</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">),</span><span class=\"n\">D.Cmp</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Obj</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Mor</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Mor</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Mor</span> <span class=\"n\">X</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">))</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatIdn</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Fun</span> <span class=\"n\">C</span> <span class=\"n\">C</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Mor</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">C.Idn</span> <span class=\"n\">X</span><span class=\"o\">),</span><span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">C.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)}</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatCmp</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Fun</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">Fun</span> <span class=\"n\">D</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Fun</span> <span class=\"n\">C</span> <span class=\"n\">E</span><span class=\"o\">):=</span>\n<span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"o\">(</span><span class=\"n\">G.Obj</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)),</span><span class=\"n\">Mor</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"o\">(</span><span class=\"n\">G.Mor</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">F.Mor</span><span class=\"o\">)</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">),</span><span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span> <span class=\"o\">((</span><span class=\"n\">Eq.trans</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">G.Mor</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">F.Idn</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G.Idn</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">))),</span><span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"k\">fun</span><span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span><span class=\"o\">((</span><span class=\"n\">Eq.trans</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G.Cmp</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Mor</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Mor</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">G.Mor</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.Obj</span> <span class=\"n\">Z</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">F.Cmp</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)))}</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatId1</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Fun</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">CatCmp</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">CatIdn</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Eq.refl</span> <span class=\"n\">F</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatId2</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Fun</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">CatCmp</span> <span class=\"n\">C</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">CatIdn</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Eq.refl</span> <span class=\"n\">F</span>\n<span class=\"kd\">def</span> <span class=\"n\">CatAss</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Fun</span> <span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">Fun</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">Fun</span> <span class=\"n\">D</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">G</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">CatCmp</span> <span class=\"n\">B</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">F</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">CatCmp</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">G</span> <span class=\"n\">H</span><span class=\"o\">))</span>\n<span class=\"kd\">def</span> <span class=\"n\">Cats</span> <span class=\"o\">:</span> <span class=\"n\">Cat</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">Obj</span> <span class=\"o\">:=</span> <span class=\"n\">Cat</span><span class=\"o\">,</span><span class=\"n\">Hom</span> <span class=\"o\">:=</span> <span class=\"n\">Fun</span><span class=\"o\">,</span><span class=\"n\">Idn</span> <span class=\"o\">:=</span> <span class=\"n\">CatIdn</span><span class=\"o\">,</span><span class=\"n\">Cmp</span> <span class=\"o\">:=</span> <span class=\"n\">CatCmp</span><span class=\"o\">,</span><span class=\"n\">Id1</span> <span class=\"o\">:=</span> <span class=\"n\">CatId1</span><span class=\"o\">,</span><span class=\"n\">Id2</span> <span class=\"o\">:=</span> <span class=\"n\">CatId2</span><span class=\"o\">,</span><span class=\"n\">Ass</span> <span class=\"o\">:=</span> <span class=\"n\">CatAss</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">¬</span><span class=\"n\">p</span>\n<span class=\"kd\">def</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">):</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Elephant</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"bp\">→</span> <span class=\"n\">T</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">prop_elephant</span> <span class=\"o\">:</span> <span class=\"n\">Elephant</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"n\">fn</span> <span class=\"o\">:=</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">int_elephant</span> <span class=\"o\">:</span> <span class=\"n\">Elephant</span> <span class=\"n\">Nat</span> <span class=\"n\">where</span>\n  <span class=\"n\">fn</span> <span class=\"o\">:=</span> <span class=\"n\">g</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">elephant</span> <span class=\"o\">{</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">Elephant</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">E.fn</span> <span class=\"n\">t</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">elephant</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">elephant</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n<span class=\"k\">#eval</span> <span class=\"n\">elephant</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">elephant</span> <span class=\"n\">True</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">elephant</span> <span class=\"n\">True</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">elephant</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"𓃰\"</span> <span class=\"n\">t</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">elephant</span> <span class=\"n\">t</span>\n<span class=\"k\">#eval</span> <span class=\"bp\">𓃰</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:=</span> <span class=\"n\">IO.println</span> <span class=\"s2\">\"\"</span>\n</code></pre></div>\n<p>This went in the Main.lean file in a lake project. Now I want to store that in its own file and import it as a ... package, I guess. I don't know anything about packages so I'll read up on the link you sent.</p>",
        "id": 329068910,
        "sender_full_name": "Dean Young",
        "timestamp": 1676928176
    },
    {
        "content": "<p>If I understand correctly, you want them to be not just separate files but in different projects.<br>\nThen this is probably relevant: <a href=\"https://github.com/leanprover/lake/#syntax-of-require\">https://github.com/leanprover/lake/#syntax-of-require</a></p>",
        "id": 329069221,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676928340
    },
    {
        "content": "<p>I'm not convinced that another project is the structure intended by the OP <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> <br>\nI suspect Kind Bubble just wants to factor out part of the code to a dedicated file</p>",
        "id": 329069423,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1676928455
    },
    {
        "content": "<p>Oh right, yes different projects. Sorry I wasn't clear about that.</p>",
        "id": 329069519,
        "sender_full_name": "Dean Young",
        "timestamp": 1676928494
    },
    {
        "content": "<p>--Dean</p>",
        "id": 329069533,
        "sender_full_name": "Dean Young",
        "timestamp": 1676928500
    },
    {
        "content": "<p>Are you <span class=\"user-mention\" data-user-id=\"559197\">@Kind Bubble</span> aware that you can have more than just two files <code>Main.lean</code> and <code>Project.lean</code> in the same project?</p>",
        "id": 329069572,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676928521
    },
    {
        "content": "<p>Oh good question, that reminds me to explain what I'm after here:</p>\n<p>I am looking to finish my first project and I want to put it away for a while. But ultimately, I would like to treat some files as libraries which I can import from elsewhere on the computer, in a different project entirely.</p>",
        "id": 329069875,
        "sender_full_name": "Dean Young",
        "timestamp": 1676928673
    },
    {
        "content": "<p>It seems to me that Lake is not really intuitive to use. Are there any plans on expanding the VS Code plugin with \"Add dependency\" GUI?</p>",
        "id": 329070597,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676928973
    },
    {
        "content": "<p>I also wanted to make .lean files that my friends can import and use in their projects, and so they'd necessarily be different projects. I prefer running lean from the terminal in general. But you could be right that there's interest in that.</p>",
        "id": 329072679,
        "sender_full_name": "Dean Young",
        "timestamp": 1676930211
    },
    {
        "content": "<p>The only sensible way to distribute Lean files is as projects. A standalone Lean file cannot explain which version of Lean it works with; the point of a project is to do precisely this.</p>",
        "id": 329073070,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1676930465
    },
    {
        "content": "<p>What files should a project contain? I wanted to make my own version of lake new and lake build.</p>\n<p>Edit: I meant lean 4</p>",
        "id": 329073212,
        "sender_full_name": "Dean Young",
        "timestamp": 1676930546
    },
    {
        "content": "<p><a href=\"http://www.linearlibrary.net\">linearlibrary.net</a></p>\n<p>I am building something here which I'm going to get to run lean 4.</p>",
        "id": 329073388,
        "sender_full_name": "Dean Young",
        "timestamp": 1676930651
    },
    {
        "content": "<p>Running Lean4 in-browser <em>and</em> dealing with multiple packages in the absence of a real filesystem sounds like a big project of questionable utility. A glance at the source for your site suggests it has nothing relevant to that task so far, and we already have <a href=\"https://lean.math.hhu.de/\">https://lean.math.hhu.de/</a> so the niche feels somewhat filled.</p>",
        "id": 329074885,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676931614
    },
    {
        "content": "<p>When I set out with this question I wanted a simple way to import the materials of a different project, but that looks impossible. So what is a package? Can someone explain how to create and import a package?</p>",
        "id": 329078605,
        "sender_full_name": "Dean Young",
        "timestamp": 1676933907
    },
    {
        "content": "<ol>\n<li>Push your project to Github</li>\n<li>On the downstream project, <a href=\"https://github.com/leanprover/lake/#adding-dependencies\">add the other project as a dependency</a></li>\n</ol>",
        "id": 329079689,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1676934658
    },
    {
        "content": "<p>Ok thanks!</p>",
        "id": 329079903,
        "sender_full_name": "Dean Young",
        "timestamp": 1676934830
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/270676-lean4/topic/importing.20from.20another.20file/near/329079689\">said</a>:</p>\n<blockquote>\n<ol>\n<li>Push your project to Github</li>\n<li>On the downstream project, <a href=\"https://github.com/leanprover/lake/#adding-dependencies\">add the other project as a dependency</a></li>\n</ol>\n</blockquote>\n<p>you can also just do it <a href=\"https://github.com/leanprover/lake/#syntax-of-require\">locally</a>, without having to upload to github:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">foo</span> <span class=\"k\">from</span> <span class=\"s2\">\"path\"</span><span class=\"bp\">/</span><span class=\"s2\">\"to\"</span><span class=\"bp\">/</span><span class=\"s2\">\"local\"</span><span class=\"bp\">/</span><span class=\"s2\">\"package\"</span> <span class=\"k\">with</span> <span class=\"n\">NameMap.empty</span>\n</code></pre></div>",
        "id": 329652296,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1677140293
    }
]