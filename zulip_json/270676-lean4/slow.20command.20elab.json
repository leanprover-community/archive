[
    {
        "content": "<p>Fair warning: I'm generating these declarations automatically, so they're not super pretty, but why does this take a few seconds to compile?</p>\n<p>EDIT: cleaned up version that shows the exponential slowdown</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">profiler.threshold</span> <span class=\"mi\">2</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">oops</span>\n  <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x1</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x2</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x3</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x4</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x5</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x6</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x7</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x8</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">x9</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">y0</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">y1</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">y2</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span>  <span class=\"n\">List</span> <span class=\"n\">String</span>\n  <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">x0</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x0</span>\n  <span class=\"k\">let</span> <span class=\"n\">x1</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x1</span>\n  <span class=\"k\">let</span> <span class=\"n\">x2</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x2</span>\n  <span class=\"k\">let</span> <span class=\"n\">x3</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x3</span>\n  <span class=\"k\">let</span> <span class=\"n\">x4</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x4</span>\n  <span class=\"k\">let</span> <span class=\"n\">x5</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x5</span>\n  <span class=\"k\">let</span> <span class=\"n\">x6</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x6</span>\n  <span class=\"k\">let</span> <span class=\"n\">x7</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x7</span>\n  <span class=\"k\">let</span> <span class=\"n\">x8</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x8</span>\n  <span class=\"k\">let</span> <span class=\"n\">x9</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">x9</span>\n  <span class=\"k\">let</span> <span class=\"n\">y0</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">y0</span>\n  <span class=\"k\">let</span> <span class=\"n\">y1</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">y1</span>\n  <span class=\"k\">let</span> <span class=\"n\">y2</span> <span class=\"o\">:=</span> <span class=\"n\">Option.map</span> <span class=\"n\">toString</span> <span class=\"n\">y2</span>\n  <span class=\"n\">List.filterMap</span>  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">))</span>\n    <span class=\"o\">[</span> <span class=\"n\">x0.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x0\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x1.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x1\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x2.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x2\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x3.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x3\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x4.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x4\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x5.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x5\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x6.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x6\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x7.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x7\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x8.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x8\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"n\">x9.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"x9\"</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n  <span class=\"c1\">--, y0.map (fun s =&gt; \"y0\" ++ s)</span>\n  <span class=\"c1\">--, y1.map (fun s =&gt; \"y1\" ++ s)</span>\n  <span class=\"c1\">--, y2.map (fun s =&gt; \"y2\" ++ s)</span>\n    <span class=\"o\">]</span>\n</code></pre></div>\n<p>This is simplified from what I'm auto-generating. The <code>Option.map</code> lines are idempotent, but if you remove them it speeds up. It also speeds up if you remove some elements from the list.</p>",
        "id": 395177894,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1696571043
    },
    {
        "content": "<p>I'm guessing this is over-eager optimization passes? The compiler traces are generating some truly absurd terms that seem to be from inlining all the option operations.</p>",
        "id": 395178122,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1696571156
    },
    {
        "content": "<p>with profiler on, threshold 5ms:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">compilation</span> <span class=\"n\">new</span> <span class=\"n\">took</span> <span class=\"mi\">22</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"n\">ms</span>\n<span class=\"n\">compilation</span> <span class=\"n\">of</span> <span class=\"n\">security</span><span class=\"bp\">-</span><span class=\"n\">advisories</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">-</span><span class=\"n\">global</span><span class=\"bp\">-</span><span class=\"n\">advisories</span> <span class=\"n\">took</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">99</span><span class=\"n\">s</span>\n<span class=\"n\">elaboration</span> <span class=\"n\">took</span> <span class=\"mi\">17</span><span class=\"bp\">.</span><span class=\"mi\">8</span><span class=\"n\">ms</span>\n</code></pre></div>\n<p>Does this mean it is entirely the old compiler?</p>",
        "id": 395179072,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1696571488
    },
    {
        "content": "<p>Inlining the <code>Option.map</code> lines also makes it fast again. odd :) going to sleep now, I've reached the limits of my knowledge for how to poke at the compiler.</p>",
        "id": 395182660,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1696572862
    },
    {
        "content": "<p>(edited MWE to show the exponential slowdown -- as you uncomment each line, it goes from a few seconds to not finishing in any reasonable time)</p>",
        "id": 395304144,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1696614067
    }
]