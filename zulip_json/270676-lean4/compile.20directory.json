[
    {
        "content": "<p>I have a repository containing many directories called things like <code>Chapter37</code> and subdirectories containing files such as statements and solutions to exercises in this chapter. How do I use lake to build all the Lean files in a subdirectory of a repo? Do I have to make an analogue of <code>Mathlib.lean</code>?</p>",
        "id": 375998660,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689595851
    },
    {
        "content": "<p>Unfortunately you need to create a file that imports everything you want compiled, or do some shell scripting...</p>",
        "id": 375998914,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689595908
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"315577\">@Mac</span> fixed it.</p>",
        "id": 375999315,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689595983
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">find</span> <span class=\"n\">M1FExplained</span><span class=\"bp\">/</span><span class=\"n\">Chapter01</span><span class=\"bp\">/</span><span class=\"n\">Exercises</span><span class=\"bp\">/*.</span><span class=\"n\">lean</span>\n<span class=\"n\">M1FExplained</span><span class=\"bp\">/</span><span class=\"n\">Chapter01</span><span class=\"bp\">/</span><span class=\"n\">Exercises</span><span class=\"bp\">/</span><span class=\"n\">Exercise01.lean</span>\n<span class=\"n\">M1FExplained</span><span class=\"bp\">/</span><span class=\"n\">Chapter01</span><span class=\"bp\">/</span><span class=\"n\">Exercises</span><span class=\"bp\">/</span><span class=\"n\">Exercise02.lean</span>\n<span class=\"n\">M1FExplained</span><span class=\"bp\">/</span><span class=\"n\">Chapter01</span><span class=\"bp\">/</span><span class=\"n\">Exercises</span><span class=\"bp\">/</span><span class=\"n\">Exercise05.lean</span>\n<span class=\"n\">M1FExplained</span><span class=\"bp\">/</span><span class=\"n\">Chapter01</span><span class=\"bp\">/</span><span class=\"n\">Exercises</span><span class=\"bp\">/</span><span class=\"n\">Exercise06.lean</span>\n<span class=\"n\">M1FExplained</span><span class=\"bp\">/</span><span class=\"n\">Chapter01</span><span class=\"bp\">/</span><span class=\"n\">Exercises</span><span class=\"bp\">/</span><span class=\"n\">Exercise07.lean</span>\n</code></pre></div>\n<p>That's about the limit of my scripting skills and even that looks a bit dubious. Now I need some regex to turn the output into something Lake can understand with <code>.</code>s instead of <code>/</code>s and no <code>.lean</code> at th eend?</p>",
        "id": 375999829,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689596078
    },
    {
        "content": "<p>If you are on <code>leanprover/lean4:nightly-2023-07-12</code> you can do it like I did:<br>\n<a href=\"https://github.com/madvorak/chomsky/blob/main/lakefile.lean\">https://github.com/madvorak/chomsky/blob/main/lakefile.lean</a></p>",
        "id": 376000277,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689596156
    },
    {
        "content": "<p>You will probably want something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">Exercises</span><span class=\"bp\">»</span> <span class=\"o\">{</span>\n  <span class=\"n\">globs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"bp\">.</span><span class=\"n\">submodules</span> <span class=\"bp\">`</span><span class=\"n\">M1FExplained</span><span class=\"o\">]</span>\n  <span class=\"n\">moreLeanArgs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-DautoImplicit=false\"</span><span class=\"o\">]</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>However, I am not sure what to do if <code>Chapter01</code> and so on are directly in the project directory.</p>",
        "id": 376001042,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689596313
    },
    {
        "content": "<p>The above works if the project directory contains <code>M1FExplained</code> and that contains <code>Chapter01</code> and so on.</p>",
        "id": 376001378,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689596376
    }
]