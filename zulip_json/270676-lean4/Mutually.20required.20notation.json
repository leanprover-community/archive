[
    {
        "content": "<p>Is there a way to setup a syntax where two disjoint pieces are optional such as with <code>?</code>, but if one occurs the other must occur as well? For example something like  <code>syntax (\"foo \" term)? \"baz \" term  (\"bar \" term)? : term</code> where if either the <code>foo</code> term or <code>bar</code> term appears, the other must appear or it would be considered invalid? </p>\n<p>Also, as a quick aside I'm trying to log in an elaborator and nothing is appearing. For example, I updated <code>Elab.Term.elabForIn</code> to always include a log, but it is not printing anything when I eval a for loop. I suspect this has to do with files not getting rebuilt properly, but <code>lake build</code> and <code>refresh file dependencies</code> don't seem to work. Any ideas on this? Thanks!</p>",
        "id": 378944863,
        "sender_full_name": "Zach Battleman",
        "timestamp": 1690405183
    },
    {
        "content": "<p>Also, in an elaborator, why can I not provide names to optional arguments? For example, I can do <br>\n<code>elab \"for'\" itr:ident \" in \" ...</code>, but I cannot do <code>elab \"for'\" (itr:ident \")? in\" ... </code></p>",
        "id": 378950969,
        "sender_full_name": "Zach Battleman",
        "timestamp": 1690407250
    },
    {
        "content": "<p>for your last question, you can do <code>elab \"for'\" itr:(ident)? \" in \" ...</code></p>",
        "id": 378952258,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690407823
    },
    {
        "content": "<p>ah great thanks! Sorry last thing, in an <code>elab</code>, how do I get the equivalent of the option type argument as seen here </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[term_elab myterm1]</span>\n<span class=\"kd\">def</span> <span class=\"n\">myTerm1Impl</span> <span class=\"o\">:</span> <span class=\"n\">TermElab</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">stx</span> <span class=\"n\">type</span><span class=\"bp\">?</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Ah I think the <code>&lt;= t =&gt;</code> notation does it?</p>",
        "id": 378953949,
        "sender_full_name": "Zach Battleman",
        "timestamp": 1690408406
    }
]