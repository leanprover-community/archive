[
    {
        "content": "<p>I know Lean has <a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/System/Mutex.html#IO.Mutex\">IO.Mutex</a>, but does it have anything resembling a read/write lock?</p>",
        "id": 339057970,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677752967
    },
    {
        "content": "<p>If not, how feasible/easy would it be to implement a version of it?</p>",
        "id": 339058255,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677753021
    },
    {
        "content": "<p>If we're just shooting for something like <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\">https://doc.rust-lang.org/std/sync/struct.RwLock.html</a> that relies on the underlying OS implementation, seems doable</p>",
        "id": 339209391,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1677792964
    },
    {
        "content": "<p>Coming from Rust, that's exactly what I had in mind <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 339233165,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677804374
    },
    {
        "content": "<p>So if I understand this correctly there would be some C code / OS hook involved</p>",
        "id": 339235058,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677805332
    },
    {
        "content": "<p>My understanding is that in this case, that should be in core since std4 does not feature such low-level code</p>",
        "id": 339235110,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677805367
    },
    {
        "content": "<p>And <code>Mutex</code> is already there</p>",
        "id": 339235121,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677805377
    },
    {
        "content": "<p>Is that correct? <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span></p>",
        "id": 339235145,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677805394
    },
    {
        "content": "<p>I would be interested in taking a shot at contributing <code>RwLock</code>, especially since there's already code for <code>Mutex</code> so even I might be able to do it</p>",
        "id": 339235277,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677805454
    },
    {
        "content": "<p>I think it's pretty straightforward to build a (non-reentrant) read-write mutex using regular mutexes and condition variables (which we both have).</p>",
        "id": 339238533,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1677807367
    },
    {
        "content": "<p>Interesting, and would you say it'd be better putting that in std if it's pure Lean?</p>",
        "id": 339240103,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1677808330
    },
    {
        "content": "<p>I have no idea if Mario wants to have extra mutex stuff in std, but there's no need for such an implementation to be in core.</p>",
        "id": 339241480,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1677809484
    },
    {
        "content": "<p>If there is a good API for it and core doesn't want it I don't see any issue with putting it in std</p>",
        "id": 339242540,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677810334
    }
]