[
    {
        "content": "<p>Consider this MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">conv</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">left</span><span class=\"bp\">;</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span>\n</code></pre></div>\n<p>After typing this, the goal state is still</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">1</span> <span class=\"n\">goal</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>as in conv mode, and not yet</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">⊢</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"bp\">?</span><span class=\"n\">m.104</span>\n</code></pre></div>\n<p>as I would expect. That goal shows up after typing <code>{</code> or any tactic like <code>skip</code>.</p>\n<p>Can this be tweaked? Other tactics-block-opening things like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>do show the right goal right after <code>by</code>.</p>",
        "id": 379313257,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1690496049
    },
    {
        "content": "<p>this is a common issue, that empty tacticSeqs are not syntactically correct</p>",
        "id": 379329368,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690504442
    },
    {
        "content": "<p>as a result, the parser inserts <code>missing</code> in unpredictable places and does not parse the rest of the command, sometimes leading to funny elaboration results</p>",
        "id": 379329503,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690504485
    },
    {
        "content": "<p>What I couldn't figure out yet is why it works in some cases (<code>tacticSeqGtIntendation</code>, or after <code>suffice … by</code>).</p>",
        "id": 379372419,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1690525769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> has marked this topic as resolved.</p>",
        "id": 379410973,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690533726
    }
]