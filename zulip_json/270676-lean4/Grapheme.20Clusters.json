[
    {
        "content": "<p>Does Lean have a way of accessing a <code>String</code>'s grapheme clusters?<br>\nAfter reading this lovely <a href=\"https://tonsky.me/blog/unicode/\">blog post</a> on Unicode, I tried the following example given in the post:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span> <span class=\"s2\">\"ü§¶üèº‚Äç‚ôÇÔ∏è\"</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"c1\">-- 5</span>\n</code></pre></div>\n<p>From the definition of <code>String.length</code>, <code>String</code> and <code>Char</code> I take that we're counting <em>Unicode Scalar Values</em>, i.e. codepoints which aren't surrogates. What if I want to count the number of <em>grapheme clusters</em> in <code>\"ü§¶üèº‚Äç‚ôÇÔ∏è\"</code>, though? Is there a way of doing this in Lean?</p>",
        "id": 394425416,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1696252163
    },
    {
        "content": "<p>I am not an expert, but I presume this is quite difficult.  Mature languages have entire libraries dedicated to Unicode subtleties like this, since what \"really\" counts as a grapheme / grapheme cluster is dependent on language, location etc.</p>\n<p>I had a canonical reference discussing the issues, but I cannot find it now.  The following thread on reddit is illuminating:<br>\n<a href=\"https://www.reddit.com/r/programming/comments/d1dhq9/its_not_wrong_that_length_7/\">https://www.reddit.com/r/programming/comments/d1dhq9/its_not_wrong_that_length_7/</a></p>\n<p>I think the best Lean can do now is add bindings to a mature Unicode library, if possible.</p>",
        "id": 394432815,
        "sender_full_name": "Ioannis Konstantoulas",
        "timestamp": 1696253853
    },
    {
        "content": "<p>I must add that I don't think this makes Unicode a bad design, like some people in that thread conclude.  Unicode does have serious problems (Han unification) and less serious problems (some letters are subscripts, some are not); but overall, Unicode is a good design for a monumental task:  digitize human languages, current and historical, and written symbols.  Those are inherently messy and ill-defined;  the complexities of Unicode merely reflect this fact.</p>",
        "id": 394438975,
        "sender_full_name": "Ioannis Konstantoulas",
        "timestamp": 1696255026
    },
    {
        "content": "<p>Add a feature request to <a href=\"https://github.com/fgdorais/lean4-unicode-basic\">https://github.com/fgdorais/lean4-unicode-basic</a></p>\n<p>The grapheme cluster algorithm is a bit tricky but definitely within reach. I don't know when I would get around to it but a PR would be welcome.</p>",
        "id": 394458770,
        "sender_full_name": "Fran√ßois G. Dorais",
        "timestamp": 1696260104
    }
]