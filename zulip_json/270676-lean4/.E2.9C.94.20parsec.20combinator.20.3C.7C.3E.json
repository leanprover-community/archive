[
    {
        "content": "<p>How to write a parser combinator can produce an Sum type? Is it  possible?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">parseVar</span> <span class=\"o\">:</span> <span class=\"n\">Parsec</span> <span class=\"n\">Var</span> <span class=\"o\">:=</span> <span class=\"k\">do</span> <span class=\"bp\">...</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">parseQuotedString</span> <span class=\"o\">:</span> <span class=\"n\">Parsec</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"k\">do</span> <span class=\"bp\">...</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">parseValue</span> <span class=\"o\">:</span> <span class=\"n\">Parsec</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">Sum</span> <span class=\"n\">Var</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n <span class=\"k\">let</span> <span class=\"n\">v</span> <span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"n\">parseVar</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">parseQuotedString</span><span class=\"o\">)</span> <span class=\"bp\">&lt;*</span> <span class=\"n\">parseSpace</span>\n <span class=\"k\">match</span> <span class=\"n\">v</span> <span class=\"k\">with</span>\n   <span class=\"bp\">...</span>\n</code></pre></div>",
        "id": 404701166,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1701199001
    },
    {
        "content": "<p>I didn't test it, but you could probably write <code>(Sum.inl &lt;$&gt; parseVar) &lt;|&gt; (Sum.inr &lt;$&gt; parseQuotedString)</code> instead of <code>parseVar &lt;|&gt; parseQuotedString</code></p>",
        "id": 404703549,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701199767
    },
    {
        "content": "<p>Great! it worked.</p>",
        "id": 404704880,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1701200316
    },
    {
        "content": "<p>thank you</p>",
        "id": 404704889,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1701200320
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121542\">Alexandre Rademaker</span> has marked this topic as resolved.</p>",
        "id": 404714476,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701204103
    }
]