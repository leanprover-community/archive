[
    {
        "content": "<p>I'm trying to modify Lean 4 CI, with the intention of making it easier to create releases, and for a bot to give feedback on PRs about whether the changes will break Std / Mathlib.</p>\n<p>However I'm failing at a very simple step, and rather than beat my head against it, hopefully someone who knows Github workflow files better can help.</p>\n<p>I just want to know the PR number --- and I need to know this for every push to the PR, not just the event that creates the PR.</p>\n<p>In Mathlib we do this, and we use the <code>8BitJonny/gh-get-current-pr@2.2.0</code> action. However when I try to use this in Lean 4 CI, I don't get any information back.</p>\n<p>Here is the <a href=\"https://github.com/semorrison/lean4/pull/1/files#diff-b803fcb7f17ed9235f1e5cb1fcd2f5d3b2838429d4368ae4c57ce4436577f03fR286\">diff</a> (most of the changes are just commenting out parts of CI so I can run experiments faster). Here's a <a href=\"https://github.com/semorrison/lean4/actions/runs/5874512808/job/15929799603\">sample run</a> where you can see that both of my attempts to determine the PR number are just returning empty strings.</p>\n<p>Any advice?</p>",
        "id": 385336960,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692160710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> If you look at the <a href=\"https://pipelines.actions.githubusercontent.com/serviceHosts/e5c7c4d7-46c1-4a93-9d1d-480a9d0a980c/_apis/pipelines/1/runs/338/signedlogcontent/19?urlExpires=2023-08-16T05%3A44%3A40.2312581Z&amp;urlSigningMethod=HMACV1&amp;urlSignature=iFnjeUcg0kYxUq54sajQZLstVY5VljwBfFZKnlvvDYs%3D\">raw logs</a>, there is this error at the bottom:</p>\n<blockquote>\n<p>could not determine current branch: failed to run git: not on any branch</p>\n</blockquote>",
        "id": 385344917,
        "sender_full_name": "Mac Malone",
        "timestamp": 1692164705
    },
    {
        "content": "<p>Comparing the raw logs of your lean PR with the <a href=\"https://pipelines.actions.githubusercontent.com/serviceHosts/fc707f0c-2642-48fc-9cae-ec8daf0a5e96/_apis/pipelines/1/runs/225456/signedlogcontent/8?urlExpires=2023-08-16T05%3A50%3A03.7487728Z&amp;urlSigningMethod=HMACV1&amp;urlSignature=W917uAVutKDwYEFNF%2FeRcF8JSxgBiK9puMBshVwVDKw%3D\">raw logs</a> of my previous mathlib PR, the key difference appears to the be absence or presence of <code>-B</code> in the checkout line:</p>\n<blockquote>\n<p>/usr/bin/git checkout --progress --force <strong>-B master</strong> refs/remotes/origin/master (my PR)<br>\n/usr/bin/git checkout --progress --force refs/remotes/pull/1/merge (your PR)</p>\n</blockquote>\n<p>Your PR is checked out in a <code>detached HEAD</code> state with no branch whereas the mathlib PR is checked out as a branch. Given the above error, it is likely the get PR actions need a branch to properly infer the PR, thus the 'detached HEAD' state makes this impossible.</p>",
        "id": 385346322,
        "sender_full_name": "Mac Malone",
        "timestamp": 1692165263
    },
    {
        "content": "<p>Just an idea - export the context vars as env vars</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>      <span class=\"bp\">-</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">Report</span> <span class=\"n\">pull</span> <span class=\"n\">request</span> <span class=\"n\">number</span>\n        <span class=\"n\">env</span><span class=\"o\">:</span>\n          <span class=\"n\">PR_NUMBER_ATTEMPT_1</span><span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"o\">{{</span> <span class=\"n\">steps.pr</span><span class=\"bp\">-</span><span class=\"n\">number</span><span class=\"bp\">-</span><span class=\"n\">attempt</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"n\">outputs.number</span> <span class=\"o\">}}</span>\n          <span class=\"n\">PR_NUMBER_ATTEMPT_2</span><span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"o\">{{</span> <span class=\"n\">steps.pr</span><span class=\"bp\">-</span><span class=\"n\">number</span><span class=\"bp\">-</span><span class=\"n\">attempt</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"n\">outputs.number</span> <span class=\"o\">}}</span>\n        <span class=\"n\">run</span><span class=\"o\">:</span> <span class=\"bp\">|</span>\n          <span class=\"n\">echo</span> <span class=\"s2\">\"gh client reported: $PR_NUMBER_ATTEMPT_1\"</span>\n          <span class=\"n\">echo</span> <span class=\"s2\">\"gh-get-current-pr reported: $PR_NUMBER_ATTEMPT_2\"</span>\n</code></pre></div>",
        "id": 385346330,
        "sender_full_name": "Denis Gorbachev",
        "timestamp": 1692165274
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> My suspicious for difference in checkout behavior is that it has to do with one of these being a branch within a repo vs a branch outside of a repo. See this the old <a href=\"https://github.com/actions/checkout/pull/6\">actions/checkout#6</a> issue for some discussion and possible workarounds.</p>",
        "id": 385346742,
        "sender_full_name": "Mac Malone",
        "timestamp": 1692165591
    },
    {
        "content": "<p>There is also a number of new issues and PRs with similar problems (<a href=\"https://github.com/actions/checkout/pull/1325\">actions/checkout#1325</a>, <a href=\"https://github.com/actions/checkout/pull/1108\">actions/checkout#1108</a>,  <a href=\"https://github.com/actions/checkout/pull/138\">actions/checkout#138</a>).</p>",
        "id": 385347151,
        "sender_full_name": "Mac Malone",
        "timestamp": 1692165801
    },
    {
        "content": "<p>In fact, I'm confused why Lean 4 CI even runs on pushes to branches. The top of <code>.github/workflows/build.yml</code> in Mathlib reads:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">on</span><span class=\"o\">:</span>\n  <span class=\"n\">push</span><span class=\"o\">:</span>\n    <span class=\"n\">branches</span><span class=\"bp\">-</span><span class=\"n\">ignore</span><span class=\"o\">:</span>\n      <span class=\"bp\">#</span> <span class=\"n\">ignore</span> <span class=\"n\">tmp</span> <span class=\"n\">branches</span> <span class=\"n\">used</span> <span class=\"kd\">by</span> <span class=\"n\">bors</span>\n      <span class=\"bp\">-</span> <span class=\"bp\">'</span><span class=\"n\">staging.tmp</span><span class=\"bp\">*'</span>\n      <span class=\"bp\">-</span> <span class=\"bp\">'</span><span class=\"n\">trying.tmp</span><span class=\"bp\">*'</span>\n      <span class=\"bp\">-</span> <span class=\"bp\">'</span><span class=\"n\">staging</span><span class=\"bp\">*.</span><span class=\"n\">tmp'</span>\n      <span class=\"bp\">-</span> <span class=\"bp\">'</span><span class=\"n\">nolints'</span>\n      <span class=\"bp\">#</span> <span class=\"n\">ignore</span> <span class=\"n\">staging</span> <span class=\"n\">branch</span> <span class=\"n\">used</span> <span class=\"kd\">by</span> <span class=\"n\">bors</span><span class=\"o\">,</span> <span class=\"n\">this</span> <span class=\"n\">is</span> <span class=\"n\">handled</span> <span class=\"kd\">by</span> <span class=\"n\">bors.yml</span>\n      <span class=\"bp\">-</span> <span class=\"bp\">'</span><span class=\"n\">staging'</span>\n</code></pre></div>\n<p>and I see that as running on pushes to most branches.</p>\n<p>However the <code>.github/workflows/ci.yml</code> has</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">CI</span>\n<span class=\"n\">on</span><span class=\"o\">:</span>\n  <span class=\"n\">push</span><span class=\"o\">:</span>\n    <span class=\"n\">branches</span><span class=\"o\">:</span>\n      <span class=\"bp\">-</span> <span class=\"bp\">'</span><span class=\"n\">master'</span>\n    <span class=\"n\">tags</span><span class=\"o\">:</span>\n      <span class=\"bp\">-</span> <span class=\"sc\">'*'</span>\n  <span class=\"n\">pull_request</span><span class=\"o\">:</span>\n    <span class=\"n\">branches</span><span class=\"o\">:</span>\n      <span class=\"bp\">-</span> <span class=\"n\">master</span>\n  <span class=\"n\">schedule</span><span class=\"o\">:</span>\n    <span class=\"bp\">-</span> <span class=\"n\">cron</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"mi\">0</span> <span class=\"mi\">7</span> <span class=\"bp\">*</span> <span class=\"bp\">*</span> <span class=\"bp\">*'</span>  <span class=\"bp\">#</span> <span class=\"mi\">8</span><span class=\"n\">AM</span> <span class=\"n\">CET</span><span class=\"bp\">/</span><span class=\"mi\">11</span><span class=\"n\">PM</span> <span class=\"n\">PT</span>\n</code></pre></div>\n<p>which seems like it should be triggered only by pushes to master or pushes that create/modify a tag, or to new PRs to master.</p>\n<p>What in there is triggering when I push something to an existing PR branch?</p>",
        "id": 385351353,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692167635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/270676-lean4/topic/Finding.20the.20PR.20number.20during.20github.20CI/near/385346742\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> My suspicious for difference in checkout behavior is that it has to do with one of these being a branch within a repo vs a branch outside of a repo. See this the old <a href=\"https://github.com/actions/checkout/pull/6\">actions/checkout#6</a> issue for some discussion and possible workarounds.</p>\n</blockquote>\n<p>I don't understand here. In the example run I linked to above, we're looking at a push to a branch on my fork, which is part of a PR to <code>master</code> also on my fork. There's no cross-repo stuff going on anyway?</p>",
        "id": 385351502,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692167706
    },
    {
        "content": "<p>The <code>pull_request ... master</code> event is triggered for any push to a PR targeting master</p>",
        "id": 385363864,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692170942
    },
    {
        "content": "<p>According to <a href=\"https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads?actionType=synchronize#pull_request\">https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads?actionType=synchronize#pull_request</a>, <code>github.event.number</code> should hold the PR number when triggered by <code>pull_request</code>? Not sure I'm missing any intermediary objects.</p>",
        "id": 385366323,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692171228
    },
    {
        "content": "<p><code>github.event.number</code> indeed has the information I'm after!</p>",
        "id": 385406124,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692174347
    }
]