[
    {
        "content": "<p>I'm running into an issue with FFI-ing to Rust, which I don't understand. When I call a Rust-function (via Lean's FFI to C) at runtime (i.e. from the <code>main</code> function), it works as expected. But when I do the same thing at compile time (from an <code>elab</code>), the function returns a different (incorrect) result.<br>\nI'm trying to reduce it to an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> right now, but might there be a high-level reason why this is happening? (Side note: the Rust code depends on another crate).</p>\n<hr>\n<p>Or how might one debug-print from Rust code? Then I could inspect the values there as well.</p>",
        "id": 405344350,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1701431101
    },
    {
        "content": "<p>you can call <code>lean_dbg_trace</code> from rust</p>",
        "id": 405440833,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701466178
    },
    {
        "content": "<p>Thanks, that helped me find the problem! I had to <code>lake clean</code> <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 405517918,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1701510387
    }
]