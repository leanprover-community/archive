[
    {
        "content": "<p>I remember seeing a diagram some time ago describing the relationship between the various monads in lean4 core (<code>CommandElabM</code>, <code>TermElabM</code>, etc.). But I can't seem to find it right now. Does anyone have this handy? Is it still relevant?</p>",
        "id": 350047330,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1681506706
    },
    {
        "content": "<p>Perhaps <a href=\"https://leanprover-community.github.io/lt2021/slides/leo-LT2021-meta.pdf\">https://leanprover-community.github.io/lt2021/slides/leo-LT2021-meta.pdf</a> ?</p>",
        "id": 350057984,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1681511907
    },
    {
        "content": "<p>Yeah! That's it (on page 5)</p>",
        "id": 350060015,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1681512743
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 350060019,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1681512745
    },
    {
        "content": "<p>Maybe that diagram should be added to the metaprogramming book <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 355175421,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1683039018
    },
    {
        "content": "<p>We also need a \"cheat sheet\" of all the <code>run</code> functions that let you move the \"unnatural\" directions in the monad diagram, by providing the additional state manually.</p>",
        "id": 355288267,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683073141
    },
    {
        "content": "<p>I made a zulip post about that a while ago</p>",
        "id": 355298760,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1683079322
    },
    {
        "content": "<p><a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20monads/near/275880681\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Lean.204.20monads/near/275880681</a></p>",
        "id": 355298989,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1683079483
    },
    {
        "content": "<p>I just tried to do it:</p>\n<div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code><span class=\"k\">\\documentclass</span><span class=\"nb\">{</span>standalone<span class=\"nb\">}</span>\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>tikz<span class=\"nb\">}</span>\n\n<span class=\"k\">\\begin</span><span class=\"nb\">{</span>document<span class=\"nb\">}</span>\n<span class=\"k\">\\begin</span><span class=\"nb\">{</span>tikzpicture<span class=\"nb\">}</span>[auto, scale=.5]\n  <span class=\"k\">\\node</span> (TacticM)      at (10, 0)   <span class=\"nb\">{</span>TacticM<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (TermElabM)    at (10, 5)   <span class=\"nb\">{</span>TermElabM<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (MetaM)        at (10,10)   <span class=\"nb\">{</span>MetaM<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (CoreM)        at (10, 15)  <span class=\"nb\">{</span>CoreM<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (EIO)          at (10, 20)  <span class=\"nb\">{</span>EIO<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (MacroM)       at (0,20) <span class=\"nb\">{</span>MacroM<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (UnexpandM)    at (0,15) <span class=\"nb\">{</span>UnexpandM<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (CommandElabM) at (30,5)   <span class=\"nb\">{</span>CommandElabM<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (IO)           at (20,20)  <span class=\"nb\">{</span>IO<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (SimpM)        at (0,10) <span class=\"nb\">{</span>SimpM<span class=\"nb\">}</span>;\n  <span class=\"k\">\\node</span> (FrontendM)    at (30,20)  <span class=\"nb\">{</span>FrontendM<span class=\"nb\">}</span>;\n\n  <span class=\"k\">\\draw</span> [-&gt;] (TacticM) to (TermElabM);\n  <span class=\"k\">\\draw</span> [-&gt;] (TermElabM) to (MetaM);\n  <span class=\"k\">\\draw</span> [-&gt;] (MetaM) to (CoreM);\n  <span class=\"k\">\\draw</span> [-&gt;] (CoreM) to (EIO);\n  <span class=\"k\">\\draw</span> [-&gt;, dashed, bend right, swap] (TermElabM) to node <span class=\"nb\">{</span>Lean.Elab.Tactic.run<span class=\"nb\">}</span> (TacticM);\n  <span class=\"k\">\\draw</span> [-&gt;, dashed, bend right, swap] (CoreM) to node <span class=\"nb\">{</span>MetaM.run<span class=\"nb\">}</span> (MetaM);\n  <span class=\"k\">\\draw</span> [-&gt;, dashed, bend right, swap] (EIO)   to node <span class=\"nb\">{</span>CoreM.run<span class=\"nb\">}</span> (CoreM);\n  <span class=\"k\">\\draw</span> [-&gt;, dashed] (CommandElabM) to node <span class=\"nb\">{</span>runTermElabM<span class=\"nb\">}</span> node[swap]<span class=\"nb\">{</span>liftTermElabM<span class=\"nb\">}</span> (TermElabM);\n  <span class=\"k\">\\draw</span> [-&gt;, dashed, sloped] (CommandElabM) to node <span class=\"nb\">{</span>liftCoreM<span class=\"nb\">}</span> (CoreM);\n  <span class=\"k\">\\draw</span> [-&gt;] (CommandElabM) to (EIO);\n  <span class=\"k\">\\draw</span> [-&gt;, dashed, sloped, swap, pos=.2] (IO) to node <span class=\"nb\">{</span>MetaM.toIO<span class=\"nb\">}</span> (MetaM);\n  <span class=\"k\">\\draw</span> [-&gt;, dashed, sloped, pos=0.35] (IO) to node <span class=\"nb\">{</span>CoreM.toIO<span class=\"nb\">}</span> (CoreM);\n  <span class=\"k\">\\draw</span> [-&gt;] (IO) to (EIO);\n  <span class=\"k\">\\draw</span> [-&gt;] (SimpM) to (MetaM);\n  <span class=\"k\">\\draw</span> [-&gt;, dashed] (FrontendM) to node <span class=\"nb\">{</span>runCommandElabM<span class=\"nb\">}</span> (CommandElabM);\n  <span class=\"k\">\\draw</span> [-&gt;] (FrontendM) to (IO);\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>tikzpicture<span class=\"nb\">}</span>\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>document<span class=\"nb\">}</span>\n</code></pre></div>\n<p>The result is <a href=\"/user_uploads/3121/IXNy9FJWimg-CSRvM2bdSN_R/monads.pdf\">monads.pdf</a>. I used the same arrow direction convention as in Leo's slides but it does look a bit weird that <code>MetaM.toIO</code> goes from <code>IO</code> to <code>MetaM</code> for instance. Anyway, anyone should feel free to steal that code, improve it and put it somewhere useful.</p>",
        "id": 355375891,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1683106700
    },
    {
        "content": "<p>I would definitely reverse the arrows! Then the solid arrows become \"if you have X, you can freely use it when you need Y\", while the dashed arrows are \"you can turn X into Y, but only if you know what you're doing (=have appropriate state/context)\".</p>",
        "id": 355382892,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683108194
    },
    {
        "content": "<p>yeah, the base of the monad hierarchy should be the root of the tree</p>",
        "id": 355396949,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1683111352
    },
    {
        "content": "<p>I started a wiki page at <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Monad-map\">https://github.com/leanprover-community/mathlib4/wiki/Monad-map</a></p>",
        "id": 395960853,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696972041
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span>, <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>: it would be great to have some support for text-based diagrams along these lines within the docs pages, though I imagine you have plenty of other more valuable docs improvements in mind as well</p>",
        "id": 396976441,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697490000
    },
    {
        "content": "<p>(bonus points if they can be generated from source code to ensure they stay up to date)</p>",
        "id": 396976587,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697490046
    },
    {
        "content": "<p>This is great! I'll definitely be referring to this from time to time. :) Would it be ok to reverse the arrows though, for the reasons mentioned? (I can do the edit if it's helpful)</p>",
        "id": 396988095,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1697496576
    },
    {
        "content": "<p>There is a missing solid arrow from CoreM to IO</p>",
        "id": 396989107,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697497110
    },
    {
        "content": "<p>Feel free to edit: that was the reason for me making it a wiki page</p>",
        "id": 397101436,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697546918
    },
    {
        "content": "<p>So, feel free to revert my edit if we don't like it, but:</p>\n<p>I thought it would be a lot clearer if the map went from bottom to top, but mermaid doesn't currently support backwards arrows (which go against the overall direction of the graph without messing up the rankings). So, I sacrificed the arrows on the dotted lines, and explained that dotted lines going downward from <code>B</code> to <code>A</code> let you run <code>A</code> inside <code>B</code>. It's not perfect, but, tradeoffs.</p>\n<p>I also added <code>RequestM</code> and <code>DelabM</code>, since those are pretty important. I also closed the loop for <code>SimpM</code> to show how you would actually use it while metaprogramming. There are of course a lot of even more niche monads which might not belong here, like <code>MkBindingM</code>—the diagram looks complex enough! :) So I put a note at the bottom explaining that <code>SimpM</code> was used as an example of those.</p>",
        "id": 397919201,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1697958992
    },
    {
        "content": "<p>I'm confused by your comment about backwards arrows messing with the ranking; why didn't they cause the original version any issues?</p>",
        "id": 397920958,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697960992
    },
    {
        "content": "<p>Also, is Simp.M a typo?</p>",
        "id": 397921032,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697961064
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Map.20of.20Lean's.20monads/near/397920958\">said</a>:</p>\n<blockquote>\n<p>I'm confused by your comment about backwards arrows messing with the ranking; why didn't they cause the original version any issues?</p>\n</blockquote>\n<p>Honestly, I don't know. But in the version right before I edited, there was no coherent ranking—<code>IO</code> was somewhere in the middle right, for example.</p>",
        "id": 397922040,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1697961810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Map.20of.20Lean's.20monads/near/397921032\">said</a>:</p>\n<blockquote>\n<p>Also, is Simp.M a typo?</p>\n</blockquote>\n<p>Nope! We have <code>SimpM</code> and <code>Simp.M</code>. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 397922067,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1697961830
    },
    {
        "content": "<p>Re: ranking, this is what I see on the revision right before my edit. Is it the same for you?<br>\n<a href=\"/user_uploads/3121/kAbceFZszN6GnQW31wdG1rei/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/kAbceFZszN6GnQW31wdG1rei/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/kAbceFZszN6GnQW31wdG1rei/image.png\"></a></div>",
        "id": 397922428,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1697962004
    },
    {
        "content": "<p>Maybe this is technically ok ranking-wise despite looking odd? But in any case, if you simply <em>reverse</em> all of those arrows (which I tried first), problems start to arise.</p>",
        "id": 397923104,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1697962234
    },
    {
        "content": "<p>If you can restore the arrowheads without changing the bottom-to-top flow though, please do, ofc! I couldn't get it to work even after a good deal of fiddling.</p>",
        "id": 397923983,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1697962561
    },
    {
        "content": "<p>docs</p>\n<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/270676-lean4/topic/Map.20of.20Lean's.20monads/near/397922067\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Map.20of.20Lean's.20monads/near/397921032\">said</a>:</p>\n<blockquote>\n<p>Also, is Simp.M a typo?</p>\n</blockquote>\n<p>Nope! We have <code>SimpM</code> and <code>Simp.M</code>. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>\n</blockquote>\n<p>I say this because the link on the wiki doesn't go anywhere. Maybe <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Simp.M#doc\">docs#Simp.M</a> works.</p>",
        "id": 397934386,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697971206
    }
]