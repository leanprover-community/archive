[
    {
        "content": "<p>I want to use <code>exfalso</code> in lean4, but I can't seem to get it working.</p>\n<p>Here is my <code>Playground.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"bp\">«</span><span class=\"n\">Playground</span><span class=\"bp\">».</span><span class=\"n\">Basic</span>\n<span class=\"c1\">-- import Mathlib</span>\n<span class=\"kn\">import</span> <span class=\"n\">Std.Tactic.Basic</span>\n<span class=\"c1\">-- import Mathlib.Logic.Basic</span>\n<span class=\"c1\">-- import Mathlib.Tactic.LibrarySearch</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">explosion</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span><span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">):</span> <span class=\"n\">r</span> <span class=\"o\">:=</span>\n  <span class=\"n\">exfalso</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I don't seem to be able to find a way to use exfalso, even when VSCode recognizes the location of the source file. I couldn't find documentation on how to include the Std package, but I tried copying what importing <code>mathlib</code> did to <code>lakefile.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"c1\">-- add any package configuration options here</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n\n\n<span class=\"n\">require</span> <span class=\"n\">std4</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"c1\">-- added this line</span>\n  <span class=\"s2\">\"https://github.com/leanprover/std4.git\"</span>\n</code></pre></div>\n<p>These are the toolchains I am using:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elan</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">cdb40bff5</span> <span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">09</span><span class=\"bp\">-</span><span class=\"mi\">08</span><span class=\"o\">)</span>\n<span class=\"n\">Lake</span> <span class=\"n\">version</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">baa4b68</span> <span class=\"o\">(</span><span class=\"n\">Lean</span> <span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span><span class=\"o\">)</span>\n\n<span class=\"n\">installed</span> <span class=\"n\">toolchains</span>\n<span class=\"c1\">--------------------</span>\n<span class=\"n\">stable</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span> <span class=\"o\">(</span><span class=\"n\">default</span><span class=\"o\">)</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.3.0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span>\n\n<span class=\"n\">active</span> <span class=\"n\">toolchain</span>\n<span class=\"c1\">----------------</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.3.0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span> <span class=\"o\">(</span><span class=\"n\">overridden</span> <span class=\"kd\">by</span> <span class=\"bp\">&lt;</span><span class=\"n\">path</span><span class=\"bp\">&gt;</span><span class=\"o\">)</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"n\">baa4b68a7192</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 402495972,
        "sender_full_name": "SaNoy SaKnoi",
        "timestamp": 1700148431
    },
    {
        "content": "<p>You're missing a <code>by</code> after the <code>:=</code> to enter tactic mode.</p>",
        "id": 402496441,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700148558
    },
    {
        "content": "<p>Thank you, that seems to be the issue. Can you tell me what the mode that I am currently in? I was only referring to the examples in \"Propositions  and Proofs\"(<a href=\"https://lean-lang.org/theorem_proving_in_lean4/propositions_and_proofs.html\">https://lean-lang.org/theorem_proving_in_lean4/propositions_and_proofs.html</a>), where many of the examples didn't use the <code>by</code> keyword, yet are still able to solve the theorem.</p>",
        "id": 402498505,
        "sender_full_name": "SaNoy SaKnoi",
        "timestamp": 1700149132
    },
    {
        "content": "<p>You can prove a theorem either by providing a \"term\" (which doesn't use <code>by</code>) or by providing the keyword <code>by</code> followed a sequence of tactics (which is basically a way to create a term without having to write it out explicitly)</p>",
        "id": 402500170,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1700149579
    },
    {
        "content": "<p><code>exfalso</code> is a tactic, not a term</p>",
        "id": 402500235,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1700149597
    },
    {
        "content": "<p>I see, thanks for clarifying!</p>",
        "id": 402503285,
        "sender_full_name": "SaNoy SaKnoi",
        "timestamp": 1700150480
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"667038\">SaNoy SaKnoi</span> has marked this topic as resolved.</p>",
        "id": 402503294,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700150482
    }
]