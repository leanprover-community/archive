[
    {
        "content": "<p>Say I've explored an <code>InfoTree</code> and found a <code>t : TacticInfo</code> that I'm interested in, along with the enclosing <code>ctx : ContextInfo</code>. I'd like to pretty print one of the goals <code>g ∈ t.goalsBefore</code>. </p>\n<p>I'd hope that I could write <code>ctx.runMetaM {} (do ppExpr (← t.goalsBefore.head!.getType))</code>.</p>\n<p>However this prints something like: <code>Subtype.restrict _uniq.6454 (fun x =&gt; _uniq.6455 x) _uniq.6457 _uniq.6456 _uniq.6458 = _uniq.6456 _uniq.6458.val</code>, with all the local variables missing. This is perhaps not so surprising, as in the <code>runMetaM</code> call above I passed an empty <code>{} : LocalContext</code>.</p>\n<p>Where can I find the relevant <code>LocalContext</code>? A <code>TermInfo</code> contains a <code>LocalContext</code>, but a <code>TacticInfo</code> doesn't.</p>\n<p>(Apologies for the lack of <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>; I can try to produce one if no one sees off the bat what I'm doing wrong.)</p>",
        "id": 350701835,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681805364
    },
    {
        "content": "<p>The local context is part of the mvar context, see e.g. <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Elab.TacticInfo.format#doc\">docs4#Lean.Elab.TacticInfo.format</a></p>",
        "id": 350708074,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1681807058
    },
    {
        "content": "<p>You have to make sure to set the metavariable context too. Untested, but this should be close: <code>Meta.withMCtx t.mctxBefore &lt;| t.goalsBefore.head!.withContext &lt;| do ppExpr (&lt;- t.goalsBefore.head!.getType)</code>. (Don't forget the <code>do</code>, otherwise the arrow will be lifted out of the expression into a place where the contexts have not been set! This might not be a problem in this particular case, but this can make for some hard to debug issues.)</p>",
        "id": 350719631,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1681809829
    },
    {
        "content": "<p>Thanks, got this working.</p>",
        "id": 350751272,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681817965
    }
]