[
    {
        "content": "<p>Anyone see what is going on in:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- (kernel) declaration has free variables 'O.mk.injEq'</span>\n<span class=\"kd\">structure</span> <span class=\"n\">O</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"bp\">=</span> <span class=\"n\">False</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n</code></pre></div>\n<p>This came up in <a href=\"https://github.com/leanprover-community/mathlib4/pull/3072\">!4#3072</a></p>",
        "id": 348172947,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681119584
    },
    {
        "content": "<p>A very strange workaround:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">genInjectivity</span> <span class=\"n\">false</span> <span class=\"k\">in</span>\n<span class=\"kd\">structure</span> <span class=\"n\">O</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"bp\">=</span> <span class=\"n\">False</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">gen_injective_theorems</span><span class=\"bp\">%</span> <span class=\"n\">O</span>\n</code></pre></div>",
        "id": 348176353,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1681120603
    },
    {
        "content": "<p>Thanks! Reported as <a href=\"https://github.com/leanprover/lean4/issues/2188\">https://github.com/leanprover/lean4/issues/2188</a></p>",
        "id": 348185407,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681123784
    },
    {
        "content": "<p>Heh, presumably now the injectivity lemma is missing?</p>",
        "id": 348191029,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681125682
    },
    {
        "content": "<p>No, in Mario's suggestion there is a <code>gen_injective_theorems% O</code> command afterwards, which apparently successfully generates them! I</p>",
        "id": 348193211,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681126367
    }
]