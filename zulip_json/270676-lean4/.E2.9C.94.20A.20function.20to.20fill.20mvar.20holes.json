[
    {
        "content": "<p>Is there a function that given an expression, it eagerly substitutes in assigned metavariables until it reaches a deadend?</p>\n<p>For example, suppose we have a bunch of mvars in the environment</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">?</span><span class=\"n\">m1</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">?</span><span class=\"n\">m2</span>\n<span class=\"bp\">?</span><span class=\"n\">m2</span> <span class=\"o\">:=</span> <span class=\"bp\">?</span><span class=\"n\">m3</span> <span class=\"bp\">+</span> <span class=\"bp\">?</span><span class=\"n\">m4</span>\n<span class=\"bp\">?</span><span class=\"n\">m3</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>so this hypothetical function, when applied to <code>(‚Üê getMCtx).eAssignment.find? mvarId</code> with <code>mvarId</code> being <code>?m1</code>, would output</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"bp\">?</span><span class=\"n\">m4</span>\n</code></pre></div>",
        "id": 398405894,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1698206743
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.instantiateMVars#doc\">docs#Lean.instantiateMVars</a> :)</p>",
        "id": 398406871,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1698207294
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"599027\">Leni Aniva</span> has marked this topic as resolved.</p>",
        "id": 398407664,
        "sender_full_name": "Notification Bot",
        "timestamp": 1698207833
    }
]