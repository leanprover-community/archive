[
    {
        "content": "<p>In <span class=\"user-mention\" data-user-id=\"130575\">@Siddharth Bhat</span>'s example from the metaprogramming book I noticed that <code>Lean.Elab.admitGoal</code> doesn't trigger any alert that a theorem was accepted by the kernel without a proper proof. Is this intentional?</p>\n<p><a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean.Elab.Tactic</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"custom_sorry_2\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">goal</span> <span class=\"bp\">←</span> <span class=\"n\">Lean.Elab.Tactic.getMainGoal</span>\n  <span class=\"k\">let</span> <span class=\"n\">goal_declaration</span> <span class=\"bp\">←</span> <span class=\"n\">Lean.Meta.getMVarDecl</span> <span class=\"n\">goal</span>\n  <span class=\"k\">let</span> <span class=\"n\">goal_type</span> <span class=\"o\">:=</span> <span class=\"n\">goal_declaration.type</span>\n  <span class=\"n\">Lean.Elab.admitGoal</span> <span class=\"n\">goal</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">wrong_2</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">custom_sorry_2</span> <span class=\"c1\">-- no warning. `lake build` terminates silently</span>\n</code></pre></div>",
        "id": 284073165,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1653606637
    },
    {
        "content": "<p>We have the following issue: <a href=\"https://github.com/leanprover/lean4/issues/1163\">https://github.com/leanprover/lean4/issues/1163</a><br>\nI will try to address it soon. Tactic support may provide better position information for the warning message.</p>",
        "id": 284074567,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1653607797
    },
    {
        "content": "<p>Glad to know it's already tracked, thanks!</p>",
        "id": 284074802,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1653607957
    }
]