[
    {
        "content": "<p>I was preparing for a Cloud Release, which is <code>lake upload &lt;tag&gt;</code> in CI, but this simple command <a href=\"https://github.com/utensil/ginac-lean/actions/runs/6546161873/job/17776075874\">doesn't work for Ubuntu CI</a> due to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">lake</span> <span class=\"n\">upload</span> <span class=\"n\">v0.0.1</span><span class=\"bp\">-</span><span class=\"n\">alpha.2</span>\n  <span class=\"n\">shell</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">bash</span> <span class=\"bp\">-</span><span class=\"n\">e</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span>\n  <span class=\"n\">env</span><span class=\"o\">:</span>\n    <span class=\"n\">pythonLocation</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">hostedtoolcache</span><span class=\"bp\">/</span><span class=\"n\">Python</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"n\">x64</span>\n    <span class=\"n\">PKG_CONFIG_PATH</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">hostedtoolcache</span><span class=\"bp\">/</span><span class=\"n\">Python</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"n\">x64</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">pkgconfig</span>\n    <span class=\"n\">Python_ROOT_DIR</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">hostedtoolcache</span><span class=\"bp\">/</span><span class=\"n\">Python</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"n\">x64</span>\n    <span class=\"n\">Python2_ROOT_DIR</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">hostedtoolcache</span><span class=\"bp\">/</span><span class=\"n\">Python</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"n\">x64</span>\n    <span class=\"n\">Python3_ROOT_DIR</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">hostedtoolcache</span><span class=\"bp\">/</span><span class=\"n\">Python</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"n\">x64</span>\n    <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">hostedtoolcache</span><span class=\"bp\">/</span><span class=\"n\">Python</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"n\">x64</span><span class=\"bp\">/</span><span class=\"n\">lib</span>\n    <span class=\"n\">GH_TOKEN</span><span class=\"o\">:</span> <span class=\"bp\">***</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">tar</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">-</span><span class=\"n\">z</span> <span class=\"c1\">--exclude=*.tar.gz --exclude=*.tar.gz.trace -f ./build/linux-64.tar.gz -C ./build .</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">tar</span><span class=\"o\">:</span> <span class=\"bp\">.</span><span class=\"o\">:</span> <span class=\"n\">file</span> <span class=\"n\">changed</span> <span class=\"n\">as</span> <span class=\"n\">we</span> <span class=\"n\">read</span> <span class=\"n\">it</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">tar</span><span class=\"bp\">`</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">code</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>It works fine for <a href=\"https://github.com/utensil/ginac-lean/actions/runs/6546161873/job/17776076097\">my Mac CI</a>.</p>\n<p>I understand that lake will modified *.trace, and it's already excluded, tar should not observe any modification.</p>\n<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> Do you have some idea why this is happening? I could not find another projects running CI for Cloud Release for reference. Thanks!</p>",
        "id": 397291255,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697628538
    },
    {
        "content": "<p>It's confirmed locally that a raw <code>tar</code> doesn't fail, but <code>lake upload</code> fails at <code>tar</code>. </p>\n<p>Running variants of <code>strace -ff -e file lake upload v0.0.1-alpha.2</code>and <code>strace -ff lake upload v0.0.1-alpha.2 2&gt;&amp;1 | grep -E 'open|write'|grep -v 'write resumed'|grep -v 'write(4'|grep -v 'write(1'|grep -v 'write(2'</code> gives me no clue on what lake might be writing to.</p>",
        "id": 397296282,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697630207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20upload.20for.20Cloud.20Release/near/397296282\">said</a>:</p>\n<blockquote>\n<p>It's confirmed locally that a raw <code>tar</code> doesn't fail, but <code>lake upload</code> fails at <code>tar</code>. </p>\n</blockquote>\n<p>So, you are saying running the exact same <code>tar</code> commands works when run directly on the CI, but fails when Lake runs it?</p>",
        "id": 397356280,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697649766
    },
    {
        "content": "<p>That is very weird. Did you try running lake with <code>-v</code> to get the full verbose output of Lake's tar to see where it is failing?</p>",
        "id": 397356611,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697649955
    },
    {
        "content": "<p>Yes, that's what I mean, and I can reproduce it very time as CI fails consistently multiple times.</p>",
        "id": 397405325,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697678038
    },
    {
        "content": "<p><code>lake upload v0.0.1-alpha.2 -v</code> just gives files names, still no clue. This is the end of it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">./</span><span class=\"n\">cln</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">base</span><span class=\"bp\">/</span><span class=\"n\">digit</span><span class=\"bp\">/.</span><span class=\"n\">dirstamp</span>\n<span class=\"bp\">./</span><span class=\"n\">cln</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">base</span><span class=\"bp\">/</span><span class=\"n\">cl_d0_exception.lo</span>\n<span class=\"bp\">./</span><span class=\"n\">ginac</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"n\">tar.bz2</span>\n<span class=\"bp\">./</span><span class=\"n\">cln</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"n\">tar.bz2</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">man</span><span class=\"bp\">/</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">man</span><span class=\"bp\">/</span><span class=\"n\">man1</span><span class=\"bp\">/</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">man</span><span class=\"bp\">/</span><span class=\"n\">man1</span><span class=\"bp\">/</span><span class=\"n\">pi.1</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">man</span><span class=\"bp\">/</span><span class=\"n\">man1</span><span class=\"bp\">/</span><span class=\"n\">ginsh.1</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">man</span><span class=\"bp\">/</span><span class=\"n\">man1</span><span class=\"bp\">/</span><span class=\"n\">viewgar.1</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">info</span><span class=\"bp\">/</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">info</span><span class=\"bp\">/</span><span class=\"n\">cln.info</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">info</span><span class=\"bp\">/</span><span class=\"n\">ginac.info</span>\n<span class=\"bp\">./</span><span class=\"n\">share</span><span class=\"bp\">/</span><span class=\"n\">info</span><span class=\"bp\">/</span><span class=\"n\">ginac</span><span class=\"bp\">-</span><span class=\"n\">examples.info</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">tar</span><span class=\"o\">:</span> <span class=\"bp\">.</span><span class=\"o\">:</span> <span class=\"n\">file</span> <span class=\"n\">changed</span> <span class=\"n\">as</span> <span class=\"n\">we</span> <span class=\"n\">read</span> <span class=\"n\">it</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">tar</span><span class=\"bp\">`</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">code</span> <span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 397405427,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697678099
    },
    {
        "content": "<p><code>.dirstamp</code> looks suspicious but it belongs to make, not lake.</p>",
        "id": 397405588,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697678197
    },
    {
        "content": "<p>Also, there's nothing suspicious in the lake code, all the call chain seems to be free of anything modifying other files or asynchronous. I'll bypass this by raw tar calls for now and revisit when there's more ideas or clues.</p>",
        "id": 397406893,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697679083
    },
    {
        "content": "<p>OK, I have identified the source and will file an issue.</p>\n<p>The issue lies in the way lake calls tar, the archive it generates is inside <code>build</code> which changes the modified time of directory <code>build</code>, I previously ruled out this because I thought the check also excludes the exclude patterns, but it turns out to be not the case for GNU tar after <a href=\"https://git.savannah.gnu.org/cgit/tar.git/tree/src/create.c\">reading its source code</a>, it fails at checking the mtime of the dir, without taking the exclude patterns into account.</p>\n<p>Now I can bypass this 100% by generating the archive elsewhere, but the issue doesn't happen if tar takes too short to finish, and I have 100M+ to tar.</p>",
        "id": 397436219,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697695834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20upload.20for.20Cloud.20Release/near/397436219\">said</a>:</p>\n<blockquote>\n<p>The issue lies in the way lake calls tar, the archive it generates is inside <code>build</code> which changes the modified time of directory <code>build</code>, I previously ruled out this because I thought the check also excludes the exclude patterns, but it turns out to be not the case for GNU tar after <a href=\"https://git.savannah.gnu.org/cgit/tar.git/tree/src/create.c\">reading its source code</a></p>\n</blockquote>\n<p>That is interesting. When I original wrote this code I stumble upon a <a href=\"https://stackoverflow.com/a/37993307\">StackOverflow answer like this one</a> (I am not sure if it was the same question or a similar one) which suggested that <code>--exclude</code> should work. I am surprised the behavior you are seeing here never was raised there. Do you think creating an empty file in the directory with the proper name would be enough to avoid this error (since the directory should not be modified then since no files were added or removed)?</p>",
        "id": 397438192,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697696742
    },
    {
        "content": "<p>Maybe solution 1 in the SO answer would suffice, but now the command changes into <code>build</code> so there is no extra level of directory. Solution 2 might work, as my experience is indeed that if the archive was created and errored, the second time tar would succeed. But both solution sounds too subtle to me, need to check against the source code.</p>",
        "id": 397439798,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697697684
    },
    {
        "content": "<p>Both solution confirms to work well after repeated local tests. Nothing in the code explicitly excludes these 2 cases, but I assume they prevent the modified time of the dir  to change, as creating a file is an event that changes the modified time of the direct parent directory of that file.</p>",
        "id": 397444342,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697700073
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/2713\">lean4#2713</a></p>",
        "id": 397466487,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697707942
    },
    {
        "content": "<p>Thanks for researching this! I have also observed it.</p>",
        "id": 397791623,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1697847610
    }
]