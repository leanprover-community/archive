[
    {
        "content": "<p>Kind of curious, is there a reason there's lemmas split between <code>Mathlib.a.b.c</code> and <code>Std.a.b.c</code>? For example <code>Mathlib.Data.List.Basic</code> and <code>Std.Data.List.Basic</code>. Not really an actual issue but it's a bit counterintuitive + makes imports a lil confusing. Is it just to make the std library lighter?</p>",
        "id": 384107454,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1691794346
    },
    {
        "content": "<p>In Lean 3, we moved almost everything to <code>mathlib</code>.</p>",
        "id": 384109958,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1691795734
    },
    {
        "content": "<p>Now we're gradually moving stuff that doesn't need definitely-non-std stuff like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Monoid#doc\">docs#Monoid</a> to Std.</p>",
        "id": 384110068,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1691795781
    },
    {
        "content": "<p>is this going to be breaking changes? or will you maintain two copies, one in Std and one in Mathlib? (or is this process written up somewhere ig)</p>",
        "id": 384110374,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1691795965
    },
    {
        "content": "<p>This is going to be breaking changes.</p>",
        "id": 384110943,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691796269
    },
    {
        "content": "<p>Why is it breaking? <code>Mathlib.Data.List.Basic</code> imports <code>Std.Data.List.Basic</code>, so if your code imported <code>Mathlib.Data.List.Basic</code>, then moving a lemma to <code>Std</code> doesn't break your code.</p>",
        "id": 384111531,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1691796595
    },
    {
        "content": "<p>But sometimes we change API while moving (e.g., this happens a lot to <code>Fin</code> defs and lemmas).</p>",
        "id": 384111665,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1691796633
    }
]