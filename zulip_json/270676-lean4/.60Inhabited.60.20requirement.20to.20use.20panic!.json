[
    {
        "content": "<p>Just curious about this but why does a function's return type require an <code>Inhabited</code> instance if it contains a <code>panic!</code> within it? is it something to do with the compiled C code?</p>",
        "id": 380810545,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1690916401
    },
    {
        "content": "<p>It's so you can use it inside functions you prove things about. You can't have functions that don't return a value in Lean (i.e., no partially defined functions). The compiled C code generates an exception, but mathematically the value of <code>panic! \"...\"</code> is equal to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Inhabited.default#doc\">docs#Inhabited.default</a></p>\n<p>If you didn't need <code>Inhabited</code>, then you could write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">bad</span> <span class=\"o\">:</span> <span class=\"n\">Empty</span> <span class=\"o\">:=</span> <span class=\"n\">panic</span><span class=\"bp\">!</span> <span class=\"s2\">\"there is no value of Empty\"</span>\n</code></pre></div>\n<p>and then using <code>bad : Empty</code> you can easily prove <code>False</code>.</p>",
        "id": 380813033,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1690916995
    },
    {
        "content": "<p>It is also worth noting that unless the lean options to abort on panic or exit on panic are set to true, a panic does not actually interrupt control flow, but instead simply prints the error and returns <code>Inhabited.default</code>.</p>",
        "id": 380813762,
        "sender_full_name": "Mac Malone",
        "timestamp": 1690917174
    },
    {
        "content": "<p>oh that's interesting. That makes a lot more sense, I was under the assumption it just exited. Is there a reason it doesn't abort by default?</p>",
        "id": 380816541,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1690917957
    },
    {
        "content": "<p>there are threads discussing the option, but I think Lake and the compiler may rely on panic not aborting to output info about more than just one error? I tend to turn it on (to make GDB debugging easier)</p>",
        "id": 380818715,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1690918552
    }
]