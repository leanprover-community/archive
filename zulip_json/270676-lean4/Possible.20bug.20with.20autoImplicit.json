[
    {
        "content": "<p>Hi all, I think I may have found a bug in Lean 4. The MRE is below, using the most recent version of Lean 4. I discovered it while trying to eliminate unnecessary Mathlib imports in my project. When the import providing <code>IsAssociative</code> was eliminated, line 1 did NOT produce an error, because of auto bound implicit arguments. However, the final line errors with the message <code>(kernel) declaration has free variables 'isAtom'</code>. Interestingly, disabling <code>autoImplicit</code> after the variable declaration, but before the declaration of <code>isAtom</code>, will prevent the error, even though neither <code>op</code> nor <code>assc</code> are used in <code>isAtom</code>. Replacing the custom notation with <code>(@Test α)</code> will also prevent the error, as will importing <code>Mathlib.Init.Algebra.Classes</code> or deleting the declaration of <code>assc</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">op</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">assc</span> <span class=\"o\">:</span> <span class=\"n\">IsAssociative</span> <span class=\"n\">α</span> <span class=\"n\">op</span><span class=\"o\">}</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">Test</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">atom</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Test</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">quotPrecheck</span> <span class=\"n\">false</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"n\">max</span> <span class=\"s2\">\"T\"</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">Test</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- set_option autoImplicit false</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">isAtom</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">True</span>\n</code></pre></div>",
        "id": 357722482,
        "sender_full_name": "Luke West",
        "timestamp": 1683851852
    },
    {
        "content": "<p>I suspect that the problem is that <code>@Test</code> is being hygienically transformed into an unused identifier which is being auto-implicited.</p>",
        "id": 358133035,
        "sender_full_name": "Mac Malone",
        "timestamp": 1683993603
    },
    {
        "content": "<p>Huh, I don't really know what that means - why would that transformation happen? And if <code>@Test</code> is the issue, why does commenting out <code>assc</code> fix it? Thanks for taking a look, btw</p>",
        "id": 358165342,
        "sender_full_name": "Luke West",
        "timestamp": 1684010977
    },
    {
        "content": "<p>Also, do you know what's the usual best procedure for bug reports on Lean 4? I was thinking I'd post here first to make sure it really is a bug, but maybe I should skip right to making a Github issue</p>",
        "id": 358165492,
        "sender_full_name": "Luke West",
        "timestamp": 1684011080
    },
    {
        "content": "<p>it usually is good to post here (people are more likely to see it here, and the devs are currently overwhelmed and will probably not get to the issue for a while)</p>",
        "id": 358214004,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1684050120
    },
    {
        "content": "<p>in this case I would probably post it on github now that no one seems to know exactly what's up</p>",
        "id": 358214723,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1684050647
    },
    {
        "content": "<p><del>I suspect it's because auto implicit is too greedy to use that variable T. It sounds like it's more an issue with the parser, as your notation should be delaborated before autoimplicit kicks in?</del> Maybe <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> can shed some light on this?</p>",
        "id": 358215034,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1684050831
    },
    {
        "content": "<p>Some very weird interaction between section variables, auto implicits, and quotation preresolution for sure. The three riders of the bugpocalypse.</p>",
        "id": 358227998,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684057901
    },
    {
        "content": "<p>Note that after removing <code>assc</code>, the dubious <code>quotPrecheck false</code> isn't necessary anymore</p>",
        "id": 358228309,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684058033
    }
]