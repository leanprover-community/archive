[
    {
        "content": "<p>Is there any way to prove that an inductive proposition is false because proving it is true would require an infinite proof? That's how I would argue informally at least. Concretely, consider something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">MyProp</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Bool</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero_false</span> <span class=\"o\">:</span> <span class=\"n\">MyProp</span> <span class=\"mi\">0</span> <span class=\"n\">false</span>\n  <span class=\"bp\">|</span> <span class=\"n\">n_true</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">MyProp</span> <span class=\"n\">n</span> <span class=\"n\">true</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false_false</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">MyProp</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">false</span> <span class=\"bp\">→</span> <span class=\"n\">MyProp</span> <span class=\"n\">n</span> <span class=\"n\">false</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">one_not_false</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">MyProp</span> <span class=\"mi\">1</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">false_false</span> <span class=\"n\">_</span> <span class=\"n\">hn</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- hn : MyProp (1 + 1) false</span>\n</code></pre></div>\n<p>Here, I could continue to destruct the proofs infinitely building larger and larger proofs, but there's never going to be a proof of it</p>",
        "id": 389858613,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1694170612
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 389858630,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1694170622
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 389858658,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1694170633
    },
    {
        "content": "<p>I want to say that you have to use <code>noConfusion</code> or something of the like but I'm stumped</p>",
        "id": 389861811,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694172006
    },
    {
        "content": "<p>We use infinite proofs all the time, it's <code>induction</code></p>",
        "id": 389867788,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694174335
    },
    {
        "content": "<p>But you need to generalize first to the point that Lean allows you to use the induction tactic:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">one_not_false</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">MyProp</span> <span class=\"mi\">1</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">false</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">MyProp</span> <span class=\"n\">n</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">Nat.one_ne_zero</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">intro</span> <span class=\"n\">n</span> <span class=\"n\">b</span> <span class=\"n\">hn</span> <span class=\"n\">hb</span> <span class=\"n\">h</span>\n  <span class=\"n\">induction</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero_false</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">hn</span> <span class=\"n\">rfl</span>\n  <span class=\"bp\">|</span> <span class=\"n\">n_true</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">hb</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false_false</span> <span class=\"n\">n</span> <span class=\"n\">_hn</span> <span class=\"n\">ih</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">ih</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ_ne_zero</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 389867847,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694174356
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/389867788\">said</a>:</p>\n<blockquote>\n<p>We use infinite proofs all the time, it's <code>induction</code></p>\n</blockquote>\n<p>point taken! although induction is not an infinite proof ofc (by infinite proof I mean an infinite term in Lean's underlying type theory)</p>",
        "id": 389868821,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1694174690
    },
    {
        "content": "<p>You could argue that induction is a way to <em>avoid</em> such a proof</p>",
        "id": 389868905,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694174720
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/389867847\">said</a>:</p>\n<blockquote>\n<p>But you need to generalize first to the point that Lean allows you to use the induction tactic:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">one_not_false</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">MyProp</span> <span class=\"mi\">1</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">false</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">MyProp</span> <span class=\"n\">n</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">Nat.one_ne_zero</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">intro</span> <span class=\"n\">n</span> <span class=\"n\">b</span> <span class=\"n\">hn</span> <span class=\"n\">hb</span> <span class=\"n\">h</span>\n  <span class=\"n\">induction</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero_false</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">hn</span> <span class=\"n\">rfl</span>\n  <span class=\"bp\">|</span> <span class=\"n\">n_true</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">hb</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false_false</span> <span class=\"n\">n</span> <span class=\"n\">_hn</span> <span class=\"n\">ih</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">ih</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ_ne_zero</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">rfl</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>that makes a lot of sense, thank you!</p>",
        "id": 389869572,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1694174972
    },
    {
        "content": "<p>When teaching induction (just on naturals) to mathematicians, I like to point out that if you know P(0) and that P(n) implies P(n+1), then for any given number t you can prove P(t), but clearly as t gets bigger the proof term gets bigger, and proofs are supposed to be finite, so it's not at all clear that \"for all t, P(t)\" has a finite proof. Once a student told me after one such lecture that they came into it understanding induction very well and left it totally confused, a comment which I took as a huge compliment.</p>",
        "id": 389886205,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694181050
    },
    {
        "content": "<p>Peano arithmetic states it as an axiom. This axiom is not redundant.</p>\n<p>Technically speaking, it is infinitely many axioms, but...</p>",
        "id": 389886593,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1694181198
    },
    {
        "content": "<p>Yes exactly: the argument I present is evidence that some kind of magic is needed, and then I explain that it's OK because induction is an axiom in mathematics. The example is an explanation of why a common \"proof\" of induction fails. Basically every proof of induction uses induction somehow.</p>",
        "id": 389887064,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694181358
    },
    {
        "content": "<p>The proof terms for different <code>n</code> don't need to get bigger for this Kevin, they only need to be distinct. So, I'm not sure this is particularly convincing to me. I'm not saying you don't need induction.</p>",
        "id": 389887555,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1694181534
    },
    {
        "content": "<p>Let <code>P</code> be a unary relation on <code>ℕ</code>.<br>\nLet <code>P(0)</code> and <code>∀ n, P(n) =&gt; P(n+1)</code> hold.</p>\n<p>Now, if you don't have the axiom(s) of induction, then...<br>\nFor each <code>n</code>, you can have a proof of <code>P(n)</code>.<br>\nHowever, you cannot have a proof of <code>∀ n, P(n)</code>.</p>",
        "id": 389888262,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1694181775
    },
    {
        "content": "<p>reminds me of one of Paige's HoTTEST lectures where they talked about how much of HoTT is motivated by the desire to internalize meta-reasoning...</p>",
        "id": 389888409,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1694181832
    },
    {
        "content": "<p>Martin, are you sure? What you're describing sounds more like generalisation. <code>Int</code> is a model of Peano arithmetic without induction/recursion, so losing induction is losing basically everything.</p>",
        "id": 389893691,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1694183753
    },
    {
        "content": "<p>Are you talking about integers? They are not a model of Robinson arithmetic.</p>",
        "id": 389894545,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1694184032
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/389888262\">said</a>:</p>\n<blockquote>\n<p>Without the axiom(s) of induction:</p>\n<p>For each <code>n</code>, you can have a proof of <code>P(n)</code>.<br>\nHowever, you cannot have a proof of <code>∀ n, P(n)</code>.</p>\n</blockquote>\n<p>An instance of this phenomenon is <a href=\"https://en.wikipedia.org/wiki/Goodstein%27s_theorem\">Goodstein's theorem</a>. The proof terms not only grow with <code>n</code>, but the problem is that they do not do so <em>uniformly</em>. So you state it in Peano Arithmetic but not prove it there.</p>",
        "id": 389913431,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1694190470
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"327749\">Pedro Sánchez Terraf</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/389913431\">said</a>:</p>\n<blockquote>\n<p>An instance of this phenomenon is <a href=\"https://en.wikipedia.org/wiki/Goodstein%27s_theorem\">Goodstein's theorem</a>. The proof terms not only grow with <code>n</code>, but the problem is that they do not do so <em>uniformly</em>. So you state it in Peano Arithmetic but not prove it there.</p>\n</blockquote>\n<p>That is a different phenomenon. I was talking about the necessity of the induction scheme, i.e., how Peano arithmetic differs from Robinson arithmetic.</p>",
        "id": 389917698,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1694192263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/389887555\">said</a>:</p>\n<blockquote>\n<p>The proof terms for different <code>n</code> don't need to get bigger for this Kevin, they only need to be distinct. So, I'm not sure this is particularly convincing to me. I'm not saying you don't need induction.</p>\n</blockquote>\n<p>if you use induction they do have to be different right? I think Kevin means in the case that P(x+1) depends on P(x) explicitly.</p>",
        "id": 389917966,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694192370
    },
    {
        "content": "<p>Of course. My issue is necessarily informal. Let me try to explain.</p>\n<ol>\n<li>I agree that the proof terms for <code>P(n)</code> for different <code>n</code> are growing (and distinct) for different values of <code>n</code>.</li>\n<li>I realize that some form of induction is necessary (whether proven from other principles or as an axiom)</li>\n</ol>\n<p>My point had basically two parts: (1) Kevin's argument that you need induction because otherwise the proof is infinite doesn't require that the terms be growing, only that they are distinct. (2) Even for a statement like <code>∀ n : ℕ, n + 2 = (n + 1) + 1</code> where <code>P : ℕ → Prop</code> is the predicate, then the proof terms of <code>P 0</code> and <code>P 1</code> ... are all distinct because <code>n</code> varies. And yet, because they are just <code>add_assoc 0 1 1</code>, <code>add_assoc 1 1 1</code>, ... , we can just prove the above with <code>fun n ↦ add_assoc n 1 1</code>.  (Of course, I realize that <code>add_assoc</code> uses induction under the hood, but that's beside the point.)</p>\n<p>So my argument is essentially that just because one way to write a proof doesn't work because it would be infinitely long doesn't mean that there's no way to write it without appealing to magic (i.e., induction). In this case, I <em>agree</em> that induction is necessary, but I would not have been convinced by Kevin's argument were I a student in his class.</p>",
        "id": 389922894,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1694194525
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/389922894\">said</a>:</p>\n<blockquote>\n<p>Of course, I realize that <code>add_assoc</code> uses induction under the hood, but that's beside the point.)</p>\n</blockquote>\n<p>Isn't that precisely the point, though? At some level, to prove any of these things requires induction.</p>\n<blockquote>\n<p>So my argument is essentially that just because one way to write a proof doesn't work because it would be infinitely long doesn't mean that there's no way to write it without appealing to magic (i.e., induction).</p>\n</blockquote>\n<p>And since they require induction at some level, their soundness rests on the soundness of the induction axiom within the theory (and thus requires appealing to its magic). Some forms of finitism are born from those who find this magic deficient in some way. One such interesting example is elementary finite arithmetic, which prohibits unbounded induction (e.g.,<code>∀ n, P(n)</code>), but is still able to prove a significant subsection of mathematics.</p>",
        "id": 389978116,
        "sender_full_name": "Mac Malone",
        "timestamp": 1694224884
    },
    {
        "content": "<p>You can remove the <code>add_assoc</code> use of induction in my example though just by adding it as a hypothesis and my argument stands. </p>\n<p>Again, I'm not arguing against the actual need for induction, only against the specifics of Kevin's argument about why it's necessary.</p>",
        "id": 389979554,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1694225762
    },
    {
        "content": "<p>I don't tell them this story to convince them, I tell it to confuse them :-)</p>",
        "id": 389999944,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694240079
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/389978116\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/389922894\">said</a>:</p>\n<blockquote>\n<p>Of course, I realize that <code>add_assoc</code> uses induction under the hood, but that's beside the point.)</p>\n</blockquote>\n<p>Isn't that precisely the point, though? At some level, to prove any of these things requires induction.</p>\n<blockquote>\n<p>So my argument is essentially that just because one way to write a proof doesn't work because it would be infinitely long doesn't mean that there's no way to write it without appealing to magic (i.e., induction).</p>\n</blockquote>\n<p>And since they require induction at some level, their sounds rests on the soundness of the induction axiom within the theory (and thus requires appealing to its magic). Some forms of finitism are born from those who find this magic deficient in some way. One such interesting example is elementary finite arithmetic, which prohibits unbounded induction (e.g.,<code>∀ n, P(n)</code>), but is still able to prove a significant subsection of mathematics.</p>\n</blockquote>\n<p>oh interesting, so essentially people build a sort of mathematics without infinite objects whatsoever? I'm curious, do you what is the relationship between the axiom of infinity in ZFC and the induction principle?</p>",
        "id": 390114614,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1694332125
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Ultrafinitism\">https://en.wikipedia.org/wiki/Ultrafinitism</a> this article is a lovely ride</p>",
        "id": 390114784,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1694332265
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315434\">Andrés Goens</span> <a href=\"#narrow/stream/270676-lean4/topic/proof.20of.20impossibility.20of.20infinite.20proofs/near/390114614\">said</a>:</p>\n<blockquote>\n<p>I'm curious, do you what is the relationship between the axiom of infinity in ZFC and the induction principle?</p>\n</blockquote>\n<p>As the <a href=\"https://en.wikipedia.org/wiki/Mathematical_induction#Formalization\">Wikipedia page</a> on the formalization of Mathematical inductions states, the induction principle is a theorem of ZFC. Perhaps surprisingly, strong induction does not necessarily require the axiom of infinity, and Peano arithmetic and ZF without infinity are <a href=\"https://math.stackexchange.com/questions/2850064/does-countable-induction-over-mathbb-n-require-the-axiom-of-infinity\">much the same</a>. For example, it can be proved with just the axioms of foundation and the axiom schema of restricted comprehension (see this <a href=\"https://www.reddit.com/r/math/comments/7in9x8/comment/dr04yrp\">Reddit post</a> for a proof sketch). What the axiom of infinity gets ZF is that class of the (infinite) natural numbers is a set within ZF rather than just a class. In fact, this distinction is also related to the distinction between a classic and strict finitist. A classic finitist just denies infinite sets (i.e., the axiom of infinity), whereas a strict finitist would also deny potential infinites (i.e., the principle of induction). At least, that is how I understand it.</p>",
        "id": 390120331,
        "sender_full_name": "Mac Malone",
        "timestamp": 1694336194
    }
]