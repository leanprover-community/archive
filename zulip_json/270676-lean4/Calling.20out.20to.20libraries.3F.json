[
    {
        "content": "<p>Is it (yet) common for authors of Lean 4 applications to use libraries that aren't specifically designed for Lean? If so, how is it usually done? It looks like you can do it using the FFI without terrible trouble; just write a C wrapper around the library that makes it use simple types, then write a Lean wrapper around the C wrapper that provides a nice Lean-friendly interface.</p>\n<p>Another option, of course, is to just use stdin and stdout to communicate with something.</p>",
        "id": 378255923,
        "sender_full_name": "Tanner Swett",
        "timestamp": 1690228445
    },
    {
        "content": "<p>Well...if FFI is possible there isnt really a reason to not use FFI (apart from being lazy)</p>",
        "id": 378256770,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1690228705
    },
    {
        "content": "<p>Yup. I guess I was hoping there was some magical alternative option.</p>\n<p>\"Oh, you haven't heard of LeaPyn, the Lean library that lets you import Python libraries?\" <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 378263404,
        "sender_full_name": "Tanner Swett",
        "timestamp": 1690230935
    },
    {
        "content": "<p>I mean you can FFI with cpython to call python libraries if you want</p>",
        "id": 378270109,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1690231484
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"627517\">Tanner Swett</span> <a href=\"#narrow/stream/270676-lean4/topic/Calling.20out.20to.20libraries.3F/near/378263404\">said</a>:</p>\n<blockquote>\n<p>Yup. I guess I was hoping there was some magical alternative option.</p>\n<p>\"Oh, you haven't heard of LeaPyn, the Lean library that lets you import Python libraries?\" <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>\n</blockquote>\n<p>This is kind of what my library <a href=\"https://github.com/tydeu/lean4-alloy\">Alloy</a> tries to do for C (apologies for the shameless self-plug). A similar approach for Python would be quite cool.</p>",
        "id": 379660238,
        "sender_full_name": "Mac Malone",
        "timestamp": 1690589229
    },
    {
        "content": "<p>Does alloy let one (easily) use a C library? For example C API of tensorflow?</p>",
        "id": 379673382,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1690595300
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> It should be relatively easy. You just do the normal <code>extern_lib</code>/<code>moreLinkArgs</code> linking configuration as for any Lean FFI and then <code>alloy c include</code> the relevant C headers (as e.g. the <code>S</code> example <a href=\"https://github.com/tydeu/lean4-alloy/blob/334407dc09c10c84549242dc73f9d364886267d1/examples/S/S.lean#L12\">does</a> for std headers).</p>",
        "id": 379689546,
        "sender_full_name": "Mac Malone",
        "timestamp": 1690605719
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> One missing feature is that you cannot currently customize the server include path, so the server features (e.g., autocomplete, go-to def, hover) will not be available for the C library at the moment (if the library is not part of the system include path). However, you can still customize the build include path via the usual <code>moreLeancArgs</code>).</p>",
        "id": 379689901,
        "sender_full_name": "Mac Malone",
        "timestamp": 1690605957
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> Also, if you decide to give Alloy a shot for some project, I would greatly appreciate it if you would report any bugs / missing features you encounter. I would love to make alloy the best it could be!</p>",
        "id": 379690296,
        "sender_full_name": "Mac Malone",
        "timestamp": 1690606177
    },
    {
        "content": "<p>Sure</p>",
        "id": 379690351,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1690606202
    }
]