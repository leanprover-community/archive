[
    {
        "content": "<p>How to  create executable binary files with tab autocompletion?<br>\n(I'm wondering how to create Lean cli apps with autocompletion)</p>",
        "id": 269813127,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643409505
    },
    {
        "content": "<p>If by autocompletion you are referrring to stuff like getting the <code>ls</code> options when typing <code>ls -&lt;TAB&gt;</code> that's the job of your shell and has to be set up in a shell dependent way for all programs. If you are talking about autocompletion in for example a REPL like program, that would be handled by readline stuff.</p>",
        "id": 269815597,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643411040
    },
    {
        "content": "<p>I'll try to explain with an example. Suppose I want <code>lake</code> to autocomplete \"build\" for me when I type <code>lake b&lt;TAB&gt;</code>. How does that wiring work?</p>",
        "id": 269815846,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643411176
    },
    {
        "content": "<p>That is shell specific setup, you binary cant control this.</p>",
        "id": 269817201,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643412030
    },
    {
        "content": "<p>In zsh this might for example look like this: <a href=\"https://mrigank11.github.io/2018/03/zsh-auto-completion/\">https://mrigank11.github.io/2018/03/zsh-auto-completion/</a></p>",
        "id": 269817237,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643412066
    },
    {
        "content": "<p>oh, thanks!!<br>\nI was having a hard time finding a source for this</p>",
        "id": 269817524,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643412270
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> has marked this topic as resolved.</p>",
        "id": 269817531,
        "sender_full_name": "Notification Bot",
        "timestamp": 1643412277
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> one approach I see often is to have a special CLI option to have the executable generate the shell completion. So the completion is always in sync with the actual CLI. Ideally, it would be great to have a reusable CLI library that would automatically generate this based on the CLI options.</p>",
        "id": 269831055,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1643423086
    },
    {
        "content": "<p>Also c.f. <a href=\"https://twistedmatrix.com/documents/current/api/twisted.python._shellcomp.html\">https://twistedmatrix.com/documents/current/api/twisted.python._shellcomp.html</a> (where similarly if you've used the right runtime object for argparsing you're basically done, and it jst does the completion at tab-time)</p>",
        "id": 269868329,
        "sender_full_name": "Julian Berman",
        "timestamp": 1643467583
    }
]