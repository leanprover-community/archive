[
    {
        "content": "<p>In the same project as with the <code>autoImplicit</code> issue, I just ran into this puzzle. In the MRE below, when <code>val</code> is annotated with <code>reducible</code>, <code>rewrite</code> can NOT reduce <code>val</code> in the first branch of <code>not_reducing</code>. When the annotation is removed, <code>rewrite</code> succeeds.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Test</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">atom</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Test</span>\n<span class=\"bp\">|</span> <span class=\"n\">app</span> <span class=\"o\">:</span> <span class=\"n\">Test</span> <span class=\"bp\">→</span> <span class=\"n\">Test</span>\n\n<span class=\"kd\">@[reducible]</span>\n<span class=\"kd\">def</span> <span class=\"n\">val</span> <span class=\"o\">:</span> <span class=\"n\">Test</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Test.atom</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Test.app</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">val</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">not_reducing</span> <span class=\"o\">(</span><span class=\"n\">a0</span> <span class=\"n\">a1</span> <span class=\"o\">:</span> <span class=\"n\">Test</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">Nat.add</span> <span class=\"o\">(</span><span class=\"n\">val</span> <span class=\"n\">a0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">val</span> <span class=\"n\">a1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"k\">match</span> <span class=\"n\">a0</span><span class=\"o\">,</span> <span class=\"n\">a1</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">Test.atom</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">val</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- rewrite fails</span>\n<span class=\"bp\">|</span> <span class=\"n\">Test.atom</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">val</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- rewrite works</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 357773088,
        "sender_full_name": "Luke West",
        "timestamp": 1683875114
    }
]