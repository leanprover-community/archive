[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> in your plans to use reservoir to host build artifacts, did you think about the permissions issue? Currently Mathlib uses a very weird workflow where we very strongly encourage people to open PRs from branches of the main repo instead of forks, because we want CI to build PRs and we don't want that everyone can push to our olean server. Fixing this weirdness would be very nice.</p>",
        "id": 396772820,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697392377
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> What kind of fix are you looking for here? To fix the specific issue you mentioned, one option (just with GitHub) would be to build the repository using a <code>pull_request</code> workflow, upload the build result as an artifact, and then spawn another workflow via <a href=\"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run\"><code>workflow_run</code></a> to download the artfiact and upload to it to olean server. As the <code>workflow_run</code> event always runs from the main repo's default branch, it could use a user whitelist to determine which build artifacts should be cached without being compromised by PRs from arbitrary users.</p>",
        "id": 396779844,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697399917
    },
    {
        "content": "<p>I don't know actually, I was never involved in this CI stuff, but I tried to reproduce the explanation of our weird workflow that CI aware people always give.</p>",
        "id": 396780779,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697401042
    },
    {
        "content": "<p>Mac's solution sounds pretty good to me, if someone wants to try it.</p>\n<p>As a related example, I recently added a <code>workflow_run</code> job at Mathlib to post to zulip about the nightly-testing branch, and there are several examples of using this on the lean4 repo.</p>",
        "id": 396791670,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697413993
    }
]