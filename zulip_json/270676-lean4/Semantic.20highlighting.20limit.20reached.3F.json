[
    {
        "content": "<p>Could someone else confirm that syntax highlighting stops about <a href=\"https://github.com/leanprover/std4/blob/main/Std/Data/List/Lemmas.lean#L1522\">here</a> when you open <code>Std.Data.List.Lemmas</code>?</p>",
        "id": 359967532,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684623376
    },
    {
        "content": "<p>I suspect the issue is that an upper bound on the number of tokens is being reached</p>",
        "id": 359967563,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684623412
    },
    {
        "content": "<p>it's on line 1523, which is big but not <em>that</em> big, so I think we might need to bump the limit if that is the issue</p>",
        "id": 359967608,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684623453
    },
    {
        "content": "<p>there are 75 files in mathlib which are longer than that</p>",
        "id": 359967842,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684623613
    },
    {
        "content": "<p>for a mathlib example, highlighting peters out on line 1833 of <code>Mathlib.Data.Fin.Basic</code>. (mathlib uses its tokens a bit more sparingly than std because of the <code>#align</code> lines)</p>",
        "id": 359968173,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684623849
    },
    {
        "content": "<p>I see most syntax highlighting still, but around that line I can confirm that variables stop being blue (and deleting declarations to move things earlier causes their variables to become blue).</p>",
        "id": 359968471,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1684624066
    },
    {
        "content": "<p>right, that's the semantic highlighting</p>",
        "id": 359968765,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684624285
    },
    {
        "content": "<p>the basic syntax highlighting is regex based and not supplied by the lean server</p>",
        "id": 359968778,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684624317
    },
    {
        "content": "<p>I tried stressing the semantic highlighting by making many copies of</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">x</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>(which should have 40 tokens if I counted correctly) but I was able to make over 4000 lines of that without losing semantic highlighting, so maybe something else is at work</p>",
        "id": 359968906,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1684624424
    },
    {
        "content": "<p>Can repro in both vscode and neovim.</p>",
        "id": 359976478,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1684631285
    },
    {
        "content": "<p>65 kilobytes should be enough for everyone.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">handleSemanticTokensFull</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">SemanticTokensParams</span><span class=\"o\">)</span>\n    <span class=\"o\">:</span> <span class=\"n\">RequestM</span> <span class=\"o\">(</span><span class=\"n\">RequestTask</span> <span class=\"n\">SemanticTokens</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">handleSemanticTokens</span> <span class=\"mi\">0</span> <span class=\"o\">‚ü®</span><span class=\"mi\">1</span> <span class=\"bp\">&lt;&lt;&lt;</span> <span class=\"mi\">16</span><span class=\"o\">‚ü©</span>\n</code></pre></div>",
        "id": 359976491,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1684631306
    },
    {
        "content": "<p>Now with special extended support for up to 2GB</p>",
        "id": 360011950,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684657187
    },
    {
        "content": "<p>Yeah just changing that value to something bigger fixes it.</p>",
        "id": 360014901,
        "sender_full_name": "Max Nowak üêâ",
        "timestamp": 1684658601
    },
    {
        "content": "<p>I... may have gotten carried away at one point and improved the semantic highlighting (I know, should have asked whether a PR is desired first..). You can easily add more cases in the code for <code>handleSemanticTokens</code>, and you can distinguish propositions from types, check whether something is structure-like or a projection function or not, etc etc etc.</p>",
        "id": 360015917,
        "sender_full_name": "Max Nowak üêâ",
        "timestamp": 1684659067
    },
    {
        "content": "<p>Also whenever you add/remove imports, the semantic highlighting just stops and you have to close&amp;open the vscode tab.</p>",
        "id": 360021890,
        "sender_full_name": "Max Nowak üêâ",
        "timestamp": 1684661600
    }
]