[
    {
        "content": "<p>What's the trick to give me access to <code>lemma2</code> within the <code>foo</code> namespace?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">foo</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">bar</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">lemma1</span> <span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"bp\">=</span><span class=\"mi\">4</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">bar</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">foo</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">bar</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">lemma2</span> <span class=\"o\">:</span> <span class=\"mi\">3</span><span class=\"bp\">+</span><span class=\"mi\">3</span><span class=\"bp\">=</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">bar</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">foo</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">bar</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">lemma1</span> <span class=\"c1\">-- fine</span>\n<span class=\"k\">#check</span> <span class=\"n\">lemma2</span> <span class=\"c1\">-- not fine</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">_root_.bar</span> <span class=\"c1\">-- no</span>\n\n<span class=\"c1\">-- gaargh</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">foo</span>\n</code></pre></div>\n<p>In the real world example <a href=\"https://github.com/leanprover-community/mathlib4/pull/4522\">!4#4522</a> , <code>foo := AlgebraicGeometry</code> and <code>bar := PrimeSpectrum</code>. Is the only option to <code>open bar</code> before <code>namespace foo</code>?</p>",
        "id": 362537281,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685557059
    },
    {
        "content": "<p>That probably won't work when there is also <code>bar.foo</code> ...</p>",
        "id": 362547620,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1685559744
    },
    {
        "content": "<p>The only way I could find to do this is the ridiculous </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">end</span> <span class=\"n\">foo</span> <span class=\"kn\">open</span> <span class=\"n\">bar</span> <span class=\"kn\">namespace</span> <span class=\"n\">foo</span> <span class=\"kn\">open</span> <span class=\"n\">bar</span>\n</code></pre></div>\n<p>instead of <code>open bar</code> on line 19 :-/</p>",
        "id": 362555513,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685562052
    },
    {
        "content": "<p>How common in this in practice?</p>",
        "id": 362555980,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685562199
    },
    {
        "content": "<p>Presumably it's not too common, and using <code>bar.lemma2</code> would be reasonable?</p>",
        "id": 362556024,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685562215
    },
    {
        "content": "<p>I'm surprised <code>open _root_.bar</code> doesn't work. That might be a bug, since I think it is intended to work.</p>",
        "id": 362556119,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1685562239
    },
    {
        "content": "<p><code>open _root_.bar</code> is a late lean 3 addition, it might need to be added to lean 4 as well</p>",
        "id": 362567187,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685565596
    },
    {
        "content": "<blockquote>\n<p>How common is this in practice?</p>\n</blockquote>\n<p>If you look at the diff (autoporter v HEAD) in the PR I linked to you'll see that <code>PrimeSpectrum.lemma2</code> is all over it :-( Somehow solving the problem now would mean that Jujian has to revert a bunch of changes but maybe in the long term that's ok ...</p>",
        "id": 362570360,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685566564
    }
]