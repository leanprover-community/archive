[
    {
        "content": "<p>In the October community meeting, Leo talked about plans for the parser to support custom dialects of Lean using the <code>#lang</code> keyword.  (See <a href=\"https://www.youtube.com/watch?v=jaibFnoMDSw\">the recording</a> at about 23:26.). Are there any more details about this currently available?</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"jaibFnoMDSw\" href=\"https://www.youtube.com/watch?v=jaibFnoMDSw\"><img src=\"https://uploads.zulipusercontent.net/ab64df7a7b5bfd99d79f42946bad6c5c7d515444/68747470733a2f2f692e7974696d672e636f6d2f76692f6a616962466e6f4d4453772f64656661756c742e6a7067\"></a></div><p>Leo mentioned education as a use case, and this is compelling to me.  For example, I have a book chapter where I'd like to enforce that everything is supposed to be done using only <code>ring</code> and <code>rw</code> (this <a href=\"#narrow/stream/113489-new-members/topic/Division.20in.20calc/near/401633856\">came up today on new-members</a>), and <span class=\"user-mention\" data-user-id=\"496406\">@Assaf Kfoury</span> was telling me today that he wished he could enforce that his students not use <code>tauto</code> for their propositional logic exercises.</p>",
        "id": 401674052,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1699844709
    },
    {
        "content": "<p>I suspect this (restricting tactics) is actually a bit more finegrained than what <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> has in mind for #lang.</p>\n<p>For these applications I would be writing linters.</p>",
        "id": 401694213,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699855409
    },
    {
        "content": "<p>I agree - the use case for <code>#lang</code> in education is more something along the lines of presenting the logic in ever-increasing amounts of power. For instance, a class could start with a language that's just propositional logic, where the tactics don't do all that much but give truly excellent feedback. Then this could be extended to predicate logic and natural numbers, and from there to full Lean.</p>\n<p>The idea is that very expressive languages, like Lean, make it difficult to reverse-engineer what the user was doing, which makes it more difficult to provide good error messages. While there's a lot of room to improve our current error messages, there is a fundamental limit imposed by the sheer expressive capability of our type theory. Simpler languages make it easier to give good feedback.</p>",
        "id": 401696131,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1699856536
    },
    {
        "content": "<p>Thanks for the reply! Can you say a bit more, specifically, about how it would work? Would it limit the set of declarations that can be invoked? Or the syntax that is valid?</p>",
        "id": 401697051,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1699857124
    },
    {
        "content": "<p>A specific point I don't understand: if it would be possible to enforce a dialect comprising only propositional logic tactics, wouldn't it also be possible to enforce a dialect comprising only <code>rw</code> and <code>ring</code>?</p>",
        "id": 401697646,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1699857489
    },
    {
        "content": "<p><code>#lang</code> for teaching is reminding me of <a href=\"https://docs.racket-lang.org/drracket/htdp-langs.html\">Racket's teaching dialects</a>, which has an aim similar to what <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> is describing.</p>\n<p>In Racket (formerly DrScheme), I recall that the languages can extend one another -- perhaps if Lean's will be similar in this way, Heather's dialect could be implemented by overriding <code>by</code> syntax to only accept a <code>rw</code>/<code>ring</code> language?</p>",
        "id": 401753648,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699878964
    },
    {
        "content": "<p>Racket was the direct inspiration for this line of thought!</p>",
        "id": 401762833,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1699882153
    },
    {
        "content": "<p>Despite this discussion I'm still not very clear on what <code>#lang</code> will do or how it would work ... I guess the first step will be a RFC?  I'll look out for that.</p>",
        "id": 401798963,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1699891858
    }
]