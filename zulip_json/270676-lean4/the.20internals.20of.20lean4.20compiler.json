[
    {
        "content": "<p>I am compiler engineer but new to lean4 compiler, and I wanna study it in details. Therefore, I wonder if there is any documents or resources about the internals of lean4 compiler or so. Any help would be appreciated. <span aria-label=\"thank you\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"thank you\">:thank_you:</span></p>",
        "id": 407375391,
        "sender_full_name": "Keith",
        "timestamp": 1702353405
    },
    {
        "content": "<p>For one,  <a href=\"https://lean-lang.org/papers/thesis-sebastian.pdf\">An Extensible Theorem Proving Frontend</a>, probably the best source besides <a href=\"https://github.com/leanprover-community/lean4-metaprogramming-book\">lean4-metaprogramming-book</a>, <a href=\"https://github.com/digama0/lean-type-theory/releases/tag/v1.0\">#leantt</a> , source code (lean4 and <a href=\"https://github.com/digama0/lean4lean\">lean4lean</a>), and Zulip. Some interesting details can also be found in another thesis <a href=\"https://voidma.in/assets/papers/23nawrocki_user_interfaces_computer_assisted_mathematics.pdf\">User interfaces for computer-assisted mathematics</a>.</p>\n<p>These are all about the frontend part of the lean4 compiler, the backend is LLVM (Clang), using C as IR.</p>\n<p><a href=\"https://github.com/tydeu/lean4-alloy\">lean4-alloy</a> makes use of many lean 4 frontend features and worth studying, and it has also potential for C++ code generation etc. <a href=\"https://github.com/tydeu/lean4-partax\">lean4-partax</a> is a library of tools for manipulating Lean syntax and parser definitions. There is also <a href=\"https://github.com/lurk-lab/Megaparsec.lean\">Megaparsec</a> in this area. (Lean 4 also has a <a href=\"#narrow/stream/236449-Program-verification/topic/.E2.9C.94.20Using.20Parsec/near/407490626\"><code>Parsec</code></a> in its own code base.)</p>\n<p><a href=\"https://github.com/SchrodingerZhu/LeanGccBackend\">LeanGccBackend</a> has some interesting work based on GccJit . <a href=\"#narrow/stream/270676-lean4/topic/Lean.20Backend\">thread</a>.</p>",
        "id": 407382781,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702356217
    },
    {
        "content": "<p>cool, thx. I will check out what you mentioned. <span aria-label=\"thank you\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"thank you\">:thank_you:</span></p>",
        "id": 407392020,
        "sender_full_name": "Keith",
        "timestamp": 1702360483
    }
]