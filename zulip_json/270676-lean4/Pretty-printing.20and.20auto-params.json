[
    {
        "content": "<p>Hi, here is an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">macro</span> <span class=\"s2\">\"id_tac\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">first</span> <span class=\"bp\">|</span> <span class=\"n\">exact</span> <span class=\"n\">id</span><span class=\"o\">))</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">id_tac</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">3</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 364107369,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686082790
    },
    {
        "content": "<p>Lean shows both assumption and the goal as <code>f 3</code></p>",
        "id": 364107502,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686082818
    },
    {
        "content": "<p>You should still be able to see g's value if you hover over the expressions in the lean infoview.</p>",
        "id": 364109992,
        "sender_full_name": "Jeremy Salwen",
        "timestamp": 1686083643
    },
    {
        "content": "<p>But why <code>auto_param</code> arguments should be hidden? Arguments with default values aren't hidden.</p>",
        "id": 364116778,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686086162
    },
    {
        "content": "<p>I think they are being considered as a kind of implicit argument</p>",
        "id": 364120069,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686087558
    }
]