[
    {
        "content": "<p>I would like to prove that the set of numbers below 2 is in bijection with itself.</p>\n<p>My code is pretty complicated, but I did it that way as a smallest reproducible example of a similar problem</p>\n<p>In the following, I want to prove that f composed with g reduces to identity.</p>\n<p>without changing the definitions of f and g, how can I do it ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Bijection</span> <span class=\"o\">(</span><span class=\"n\">E</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">F</span>\n  <span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">E</span>\n  <span class=\"n\">prop</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">x</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Range</span> <span class=\"o\">(</span><span class=\"n\">N</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">prop</span><span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">N</span>\n\n<span class=\"kd\">example</span><span class=\"o\">:</span> <span class=\"n\">Bijection</span> <span class=\"o\">(</span><span class=\"n\">Range</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Range</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">r₁</span><span class=\"o\">:</span> <span class=\"n\">Range</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">Range.mk</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">Nat.lt.step</span> <span class=\"o\">(</span><span class=\"n\">Nat.lt.base</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n  <span class=\"k\">let</span> <span class=\"n\">r₂</span> <span class=\"o\">:</span> <span class=\"n\">Range</span> <span class=\"mi\">2</span><span class=\"o\">:=</span> <span class=\"n\">Range.mk</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">Nat.lt.base</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n  <span class=\"k\">let</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">Range</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"n\">r.n</span><span class=\"o\">,</span> <span class=\"n\">r.prop</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">r₁</span>\n    <span class=\"bp\">|</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">r₂</span>\n\n  <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">Range</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"n\">r.n</span><span class=\"o\">,</span> <span class=\"n\">r.prop</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">r₂</span>\n    <span class=\"bp\">|</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">r₂</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">bij</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">Range</span> <span class=\"mi\">2</span><span class=\"o\">):</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">r.n</span><span class=\"o\">,</span> <span class=\"n\">r.prop</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span> <span class=\"c1\">-- error</span>\n    <span class=\"bp\">|</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span> <span class=\"c1\">-- error</span>\n\n  <span class=\"n\">Bijection.mk</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">bij</span>\n</code></pre></div>",
        "id": 328080750,
        "sender_full_name": "rambip",
        "timestamp": 1676485985
    },
    {
        "content": "<p>You should match on <code>r</code>, not on its fields.</p>",
        "id": 328081457,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676486232
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">have</span> <span class=\"n\">bij</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">Range</span> <span class=\"mi\">2</span><span class=\"o\">):</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">r</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span><span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n    <span class=\"bp\">|</span><span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 328081522,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676486256
    },
    {
        "content": "<p>Did you mean for <code>g</code> to map <code>0</code> to <code>r₁</code>, not <code>r₂</code>?</p>",
        "id": 328310020,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1676572896
    }
]