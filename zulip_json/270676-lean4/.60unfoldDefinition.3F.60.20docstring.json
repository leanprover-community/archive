[
    {
        "content": "<p>The current docstring of <code>unfoldDefinition?</code> is 'Unfold definition using \"smart unfolding\" if possible.', but this is very confusing since it does not explain what smart unfolding is. Can someone update this?</p>",
        "id": 407084420,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1702225835
    },
    {
        "content": "<p>My current understanding is that smart unfolding allows the unfolding of match expressions that appear in the unfolded definition.</p>",
        "id": 407249260,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1702304199
    },
    {
        "content": "<p>My understanding of smart unfolding is that it lets the unfolding skip intermediate implementation details, ones that are just from how the definition was compiled by the equation compiler into a term.</p>\n<p>There are some hints about this in the Lean 3 codebase.</p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/lean/blob/f91b574c40ad862c5134d48995ad083fe48e4cd4/doc/changes.md?plain=1#L1135\">https://github.com/leanprover-community/lean/blob/f91b574c40ad862c5134d48995ad083fe48e4cd4/doc/changes.md?plain=1#L1135</a></li>\n<li>Testing it: <a href=\"https://github.com/leanprover-community/lean/blob/f91b574c40ad862c5134d48995ad083fe48e4cd4/tests/lean/smart_unfolding.lean\">smart_unfolding.lean</a> with its <a href=\"https://github.com/leanprover-community/lean/blob/f91b574c40ad862c5134d48995ad083fe48e4cd4/tests/lean/smart_unfolding.lean.expected.out#L4\">expected output</a>, note the incomprehensible mess</li>\n</ul>\n<p>I thought I remembered a longer explanation somewhere, but I can't find it.</p>",
        "id": 407280530,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702313578
    },
    {
        "content": "<p>Oh, just found it: <a href=\"https://github.com/leanprover-community/lean/blob/master/src/library/type_context.h#L427\">https://github.com/leanprover-community/lean/blob/master/src/library/type_context.h#L427</a></p>",
        "id": 407280750,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702313651
    }
]