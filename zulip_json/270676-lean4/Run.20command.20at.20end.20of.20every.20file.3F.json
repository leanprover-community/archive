[
    {
        "content": "<p>I would like to register a command to run at the end of every (subsequent) file, or alternatively to run after each new declaration is added to the environment. Are either of these possible?</p>\n<p>In particular, I'd like explore building the <code>library_search</code> cache incrementally, using a persistent environment extension. (I would either just persist the state as an <code>Array (Name × Array (DiscrTree.Key))</code>, and then build the actual <code>DiscrTree</code> when <code>library_search</code> is used, or possibly persist the state as an actual <code>DiscrTree</code>, and provide a function <code>Array DiscrTree → DiscrTree</code> to merge the saved states from multiple imports.)</p>",
        "id": 341934872,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1678840923
    },
    {
        "content": "<p>You could register a linter.  They are run after every top-level command.</p>",
        "id": 341935386,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1678841181
    },
    {
        "content": "<p>FYI I already wrote functions for merging <code>DiscrTree</code>s. They should be in <code>std</code>.</p>",
        "id": 342057403,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1678887006
    }
]