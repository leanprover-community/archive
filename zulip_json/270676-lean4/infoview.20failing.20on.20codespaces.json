[
    {
        "content": "<p>I just gave a tutorial on Lean4 and mathlib4 using Github Codespaces, and it worked well for most participants, but 2 participants ran into the following issue:<br>\nAfter Lean finished loading, the syntax highlighting, and mouse-over pop-ups would work correctly, but the infoview would show nothing, not even \"No info found.\"<br>\nI tried the following, but none of them fixed the issue</p>\n<ul>\n<li>running <code>Lean 4: Restart Server</code></li>\n<li>closing the infoview, and reopening with <code>Lean 4 Infoview: Toggle</code>.</li>\n<li>closing the tab, stopping the codespace instance, restarting the codespace instance and opening it up</li>\n</ul>\n<p>Since the mouse-over pop-ups work, Lean is definitely doing something, and I don't actually know if this is an issue with Lean, codespaces, or an internet connection issue. <br>\nDoes anyone have any ideas of things to try to fix this issue? I have the second part of the tutorial tomorrow, and it would be nice if I can fix it  then on the affected laptops (if it didn't resolve by itself).</p>",
        "id": 364247736,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686137554
    },
    {
        "content": "<p>Is codespaces being accessed via a web browser? You could first ask them to try a different browser, and if not ask them to open the browser console and see if there are any obvious error messages there?</p>",
        "id": 364261621,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1686140657
    },
    {
        "content": "<p>Yes, it is indeed accessed via a browser. Checking the browser console is a good idea.</p>\n<p>One potentially important tidbit: for one of the participants initially everything worked fine, but after a while the infoview stopped working. I don't know what they did in the meantime.</p>",
        "id": 364263902,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686141219
    },
    {
        "content": "<p>I just demand that my students install lean locally to avoid issues like this, although of course it would be great if we could get to the bottom of issues like this so that I wouldn't have to demand it :-)</p>",
        "id": 364265597,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686141619
    },
    {
        "content": "<p>I would have expected way more people to struggle / fail on the installation instructions, so I'm happy I didn't choose that for a tutorial that is 3 hours or less.</p>",
        "id": 364267763,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686142094
    },
    {
        "content": "<p>I thought that Lean 4 was supposed to Just Work -- I guess the issue is mathlib oleans</p>",
        "id": 364268521,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686142273
    },
    {
        "content": "<p>I had 1 participant actually installing Lean on their own machine, and he ran into the issue that <code>lake</code> was not in the PATH.<br>\nAre the Lean 4 installation (quickstart) instructions supposed to add  Lean to your PATH automatically?</p>",
        "id": 364277226,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686144099
    },
    {
        "content": "<p><a href=\"http://elan-init.sh\">elan-init.sh</a> should do that</p>",
        "id": 364277635,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686144178
    },
    {
        "content": "<p>and this is run if you hit \"Install Lean using Elan\" after getting the Lean4 VSCode extension?<br>\nIs there anything I can ask them to debug what went wrong for them?</p>",
        "id": 364279053,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686144459
    },
    {
        "content": "<p>Does it also update the path, or just update <code>.profile</code>?</p>",
        "id": 364279763,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686144611
    },
    {
        "content": "<p>I seem to remember having to <code>source .profile</code> at some point after installing elan, but maybe thatâ€™s just my imagination</p>",
        "id": 364280094,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686144683
    },
    {
        "content": "<p>The VS Code extension is not actually dependent on <code>PATH</code>, it dfaults to <code>$HOME/.elan/bin</code>. So if the extension didn't work, that would be quite weird.</p>",
        "id": 364281380,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686144928
    },
    {
        "content": "<p>the extension worked, AFAIK. The problem was running <code>lake exe cache get</code> in the terminal.</p>",
        "id": 364281662,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1686144980
    },
    {
        "content": "<p>In the VS Code terminal?</p>",
        "id": 364281883,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1686145033
    },
    {
        "content": "<p>I don't think the extension affects the VS Code terminal. And indeed the elan installation log (which you might not see when installing from inside VS Code...?) tells you to use <code>source</code> or log out and in again. <a href=\"https://github.com/leanprover/elan/blob/933ff726aa5dcfc38f9155c8ee85f303fb7d317d/src/elan-cli/self_update.rs#L123-L127\">https://github.com/leanprover/elan/blob/933ff726aa5dcfc38f9155c8ee85f303fb7d317d/src/elan-cli/self_update.rs#L123-L127</a></p>",
        "id": 364282869,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686145233
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/infoview.20failing.20on.20codespaces/near/364268521\">said</a>:</p>\n<blockquote>\n<p>I thought that Lean 4 was supposed to Just Work -- I guess the issue is mathlib oleans</p>\n</blockquote>\n<p>I can tell you it Just Doesn't Work. We had a two hours long install party here in MSRI and it was a nightmare.</p>",
        "id": 364323718,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1686153158
    },
    {
        "content": "<p>To be clear, I consider Lean 4 installed when you can edit files depending on Mathlib without having recompiled Mathlib on your machine.</p>",
        "id": 364326714,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1686153728
    },
    {
        "content": "<p>what stage of the process went wrong?</p>",
        "id": 364328602,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686154118
    },
    {
        "content": "<p>in theory, it should be install <code>elan</code> -&gt; <code>lake new foo math</code> -&gt; <code>lake exe cache get</code> -&gt; <code>lake build</code> -&gt; profit</p>",
        "id": 364328764,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686154169
    },
    {
        "content": "<p>the process is more complicated if the user has a pre-existing install, e.g. an old <code>lake</code></p>",
        "id": 364329366,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686154304
    },
    {
        "content": "<p>So that's not Lean not working, it sounds like that's <em>mathlib</em>'s infrastructure not working.</p>",
        "id": 364339859,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686156551
    },
    {
        "content": "<p>Mario, first your theory is not what the official instructions say. They say to install the VSCode extension and then try to open a lean file to have the extension download lean. And then the answer to your question is that we have seen all stages failing randomly. But clearly the worst kind of failure is when <code>lake exe cache get</code> seems to work but Lean still recompiles everything as soon as you open a Lean file.</p>",
        "id": 364341553,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1686156915
    },
    {
        "content": "<p>what is \"the official instructions\"? The mathlib4 readme?</p>",
        "id": 364346533,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686158046
    },
    {
        "content": "<p>Most lean 4 docs from <code>leanprover</code> org don't set you up to use mathlib very well, so I would assume that in a tutorial for mathematicians you would not use those instructions</p>",
        "id": 364346750,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686158106
    },
    {
        "content": "<p>Yes the official instructions are at <a href=\"https://github.com/leanprover/lean4/blob/master/doc/quickstart.md\">https://github.com/leanprover/lean4/blob/master/doc/quickstart.md</a> and they are indeed not suitable.</p>",
        "id": 364350063,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1686158961
    },
    {
        "content": "<p>Does <code>lake exe cache get!</code> help fix the recompile issue? There might be something dirty in the cache that a redownload will fix...</p>",
        "id": 364436798,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686197030
    },
    {
        "content": "<p>Why doesn't lake (and whatever the extension uses) use a lock?</p>",
        "id": 364484400,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1686213842
    },
    {
        "content": "<p>I have not had any problems with cache corruption and rebuilding in two months because I always run the project set up steps in a terminal before opening vscode. The only issues I had before that happened when I ran cache inside the vscode terminal or opened vscode too soon. It seems a lot of problems are caused when vscode is open while cache is running, one way or another.</p>",
        "id": 364486386,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1686214306
    },
    {
        "content": "<p>But it seems this issue would be better handled if there was a lockfile and all tools using touching lake-packages and/or build had to acquire a lock first.</p>",
        "id": 364486908,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1686214422
    },
    {
        "content": "<p>The other kind of rebuild problems happen when the mathlib version is updated with <code>lake update </code>, but the project lean-toolchain file doesn't get updated. But this was discussed in a different thread recently.</p>",
        "id": 364487779,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1686214620
    },
    {
        "content": "<p>Lake used to have a lockfile, but it was removed. I believe the reason was that <code>lake print-paths</code> in the server cannot fail or the worker for a file would stop. Thus, if anything else had the lock while a file was loading all interactivity features would be disabled without a manual restart. I also believe that there was some problem with the fact that the lean server spawns multiple workers and they would end up locking each other out essentially all the time.</p>",
        "id": 364498909,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686217106
    },
    {
        "content": "<p>But it has been a long time, so I may be misremembering and/or things may have been fixed to allow locking to work in the interim.</p>",
        "id": 364499083,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686217142
    },
    {
        "content": "<p>As far as I remember, the leanpkg4 lockfile did not make leanpkg fail but wait. Was there any reason for changing that?</p>",
        "id": 364507970,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686219079
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> by wait, you mean busy waiting until the lockfile is deleted?</p>",
        "id": 364697460,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686266901
    },
    {
        "content": "<p>I honestly do not remember what the reason for changing the lock file was. I only have some vague feeling there was some problem that necessitated it, but I may be mistaken. For all I know, it may have just been a causality of the rewrite from using make to the using in-Lean building.</p>",
        "id": 364697904,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686267152
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span> <a href=\"#narrow/stream/270676-lean4/topic/infoview.20failing.20on.20codespaces/near/364697460\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> by wait, you mean busy waiting until the lockfile is deleted?</p>\n</blockquote>\n<p>Yes: <a href=\"https://github.com/leanprover/lean4/commit/343036cf00e2944a7729f510f83755650f5b3613\">https://github.com/leanprover/lean4/commit/343036cf00e2944a7729f510f83755650f5b3613</a></p>",
        "id": 364769958,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686299095
    },
    {
        "content": "<p>Ah. Yeah, I probably should I have just looked at the old code instead of asking. <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span></p>",
        "id": 364944485,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686336896
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Working on this today, I did discover one reason why code can no longer exists -- \"wx\" is no longer a supported file mode for <code>IO.FS.Handle.mk</code>. I plan on adding it back, but it is interesting to note it would have broken at some point.</p>",
        "id": 381624009,
        "sender_full_name": "Mac Malone",
        "timestamp": 1691102416
    }
]