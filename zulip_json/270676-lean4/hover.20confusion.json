[
    {
        "content": "<p>In the below code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">MyNat</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">MyNat</span>\n<span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"o\">:</span> <span class=\"n\">MyNat</span> <span class=\"bp\">→</span> <span class=\"n\">MyNat</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">is_zero</span> <span class=\"o\">:</span> <span class=\"n\">MyNat</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">MyNat.zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">True</span>\n<span class=\"bp\">|</span> <span class=\"n\">MyNat.succ</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">False</span>\n\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">is_zero</span> <span class=\"o\">(</span><span class=\"n\">MyNat.zero</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">is_zero</span>\n  <span class=\"c\">/-</span>\n<span class=\"cm\">  ⊢ (match MyNat.zero with</span>\n<span class=\"cm\">    | MyNat.zero =&gt; True              &lt;---------- hover over that `MyNat.zero`</span>\n<span class=\"cm\">    | MyNat.succ a =&gt; False) =</span>\n<span class=\"cm\">    True</span>\n<span class=\"cm\">  -/</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>just before the <code>sorry</code>, if I hover over the <code>MyNat.zero</code> in the <code>MyNat.zero =&gt; True</code> line (not the one in the <code>match</code> line), Lean reports <code>MyNat.succ a : MyNat</code>. Is this expected? I certainly didn't expect it.</p>",
        "id": 398685977,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1698325813
    },
    {
        "content": "<p>I was not expecting that either, but it seems systematic: if you replace your definition of <code>is_zero</code> with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">is_zero</span> <span class=\"o\">:</span> <span class=\"n\">MyNat</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">MyNat.zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">True</span>\n<span class=\"bp\">|</span> <span class=\"n\">MyNat.succ</span> <span class=\"n\">MyNat.zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">False</span>\n<span class=\"bp\">|</span> <span class=\"n\">MyNat.succ</span> <span class=\"o\">(</span><span class=\"n\">MyNat.succ</span> <span class=\"n\">MyNat.zero</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">False</span>\n<span class=\"bp\">|</span> <span class=\"n\">MyNat.succ</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">False</span>\n</code></pre></div>\n<p>hovering on <em>all</em> the match arms displays the information of the last one.</p>",
        "id": 398689682,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698327046
    },
    {
        "content": "<p>In fact, if you make <code>MyNat.zero =&gt; True</code> be the last match, it seems that you always get info of the <em>last</em> arm.</p>",
        "id": 398689992,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698327149
    },
    {
        "content": "<p>can confirm</p>",
        "id": 398704017,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698331141
    }
]