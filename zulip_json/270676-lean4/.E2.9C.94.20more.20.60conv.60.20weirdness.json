[
    {
        "content": "<p>another conv oddity: <code>repeat</code> appears to discharge all goals instead of applying the tactic multiple times. Using the same example as before:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">â†’</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">conv</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"bp\">âˆ€</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span><span class=\"o\">]</span>\n    <span class=\"c1\">-- â–¶ goals accomplished ðŸŽ‰</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>as compared to if you run the tactic multiple times:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">â†’</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">conv</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"bp\">âˆ€</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"bp\">âˆ€</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span><span class=\"o\">]</span>\n    <span class=\"c1\">--â–¶ 1 goal</span>\n    <span class=\"c1\">--f g : Nat â†’ Nat</span>\n    <span class=\"c1\">--âŠ¢ 1 * g 1 = 3</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>both leave the expression in the same state after the <code>conv</code> block.</p>",
        "id": 378561577,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1690307612
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/2357\">lean4#2357</a></p>",
        "id": 378567881,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690309066
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"382349\">Calvin Lee</span> has marked this topic as resolved.</p>",
        "id": 378578698,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690311579
    }
]