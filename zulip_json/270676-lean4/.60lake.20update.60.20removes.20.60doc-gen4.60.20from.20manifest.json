[
    {
        "content": "<p>A new lake subtlety, here are what happened:</p>\n<ol>\n<li>A (me) set up lakefile to have</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"k\">if</span> <span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">env</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"s2\">\"dev\"</span> <span class=\"k\">then</span>\n<span class=\"n\">require</span> <span class=\"bp\">«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover/doc-gen4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>\n<p>A ran <code>lake -R -Kenv=dev update «doc-gen4»</code> to ensure <code>doc-gen4</code> in manifest, and committed this to Github</p>\n</li>\n<li>\n<p>B (a mathematician) wanted to bump mathlib, ran <code>lake update</code> and committed, and CI is broken because <code>lake update</code> sees no <code>-Kenv=dev </code> and removed <code>doc-gen4</code> from manifest</p>\n</li>\n<li>\n<p>CI failed with a prompt: </p>\n</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">dependency</span> <span class=\"bp\">'«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»'</span> <span class=\"n\">not</span> <span class=\"k\">in</span> <span class=\"n\">manifest</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">update</span> <span class=\"bp\">«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»`</span> <span class=\"n\">to</span> <span class=\"n\">add</span> <span class=\"n\">it</span>\n</code></pre></div>\n<p>so B runs <code>lake update «doc-gen4»</code>, and the manifest doesn't change;</p>\n<ol start=\"5\">\n<li>A has to run <code>lake -R -Kenv=dev update «doc-gen4»</code> and commit.</li>\n</ol>",
        "id": 408109767,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702614958
    },
    {
        "content": "<p>So I want to write some instructions to prevent this, is the following OK?</p>\n<h2>Bump Mathlib version</h2>\n<p>To bump the Mathlib version, run <code>lake -R update mathlib</code>, don't run <code>lake update</code> as this might mess with other dependencies.</p>\n<p>If there are errors related to Lean or Lake, make sure your <code>lean-toolchain</code> is the same as <code>.lake/packages/mathlib/lean-toolchain</code>, i.e. pointing to the same Lean version.</p>\n<p>If there are errors related to <code>doc-gen4</code>, try run <code>lake -R -Kenv=dev update «doc-gen4»</code>.</p>\n<p>If there are still errors, search the error message on <a href=\"https://leanprover.zulipchat.com/\">Zulip</a> and ask for help.</p>",
        "id": 408109896,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702615035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> , and also CC <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> as Yaël is doing this a lot lately. Thanks!</p>",
        "id": 408110017,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702615112
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/270676-lean4/topic/.60lake.20update.60.20removes.20.60doc-gen4.60.20from.20manifest/near/408109767\">said</a>:</p>\n<blockquote>\n<ol start=\"4\">\n<li>CI failed with a prompt: </li>\n</ol>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">dependency</span> <span class=\"bp\">'«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»'</span> <span class=\"n\">not</span> <span class=\"k\">in</span> <span class=\"n\">manifest</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">update</span> <span class=\"bp\">«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»`</span> <span class=\"n\">to</span> <span class=\"n\">add</span> <span class=\"n\">it</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>I am confused as to how this occurred. What is CI doing to get this message?</p>",
        "id": 408111430,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702616090
    },
    {
        "content": "<p>Is the CI running with <code>-Kenv=dev</code>?</p>",
        "id": 408111465,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702616125
    },
    {
        "content": "<p>Overall, though, yes this all a major paper-cut I hope to smooth out early next year.</p>",
        "id": 408111576,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702616196
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/270676-lean4/topic/.60lake.20update.60.20removes.20.60doc-gen4.60.20from.20manifest/near/408111465\">said</a>:</p>\n<blockquote>\n<p>Is the CI running with <code>-Kenv=dev</code>?</p>\n</blockquote>\n<p>CI needs <code>-Kenv=dev</code> for <code>doc-gen4</code> in this setup.</p>",
        "id": 408111654,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702616275
    },
    {
        "content": "<p>Ah, yeah, make sense. That explains the error.</p>",
        "id": 408111814,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702616396
    },
    {
        "content": "<p>One thing I noticed is that, in this case, <code>-R</code> isn't really the problem here. Everything would still function like this even if the file was elaborated on each run (i.e., this workflow has always been a paper-cut). This needs <code>require ... if</code> (i.e., Lake needs to store the dependency in the manifest even if it is not enabled).</p>",
        "id": 408112151,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702616511
    },
    {
        "content": "<p>My understanding is that without <code>-R</code>, <code>-Kenv=dev</code> might not be effective. As this is a low frequency operation and there is a potential risk of residual state issue, I added <code>-R</code>.</p>",
        "id": 408113261,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702617257
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> You are correct, and that was wise. Sadly, this issue occurs regardless.</p>",
        "id": 408113310,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702617304
    },
    {
        "content": "<p>It indeed would be nice if</p>\n<blockquote>\n<p>Lake needs to store the dependency in the manifest even if it is not enabled</p>\n</blockquote>\n<p>Or better, provides a mechanism like in other languages, declaring development and test dependencies. I've been using similar feature since Ruby, and later in Python, Julia and Rust.</p>",
        "id": 408113682,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702617601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> The goal of <code>if</code> is to be a generalization of that where the user can choose how to split them, rather than creating a set of fixed categories.</p>",
        "id": 408113796,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702617669
    },
    {
        "content": "<p>The problem right now is simply only one set (the last used one) is stored in the manifest.</p>",
        "id": 408113839,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702617713
    },
    {
        "content": "<p>Yes, if other sets are also stored in the manifest, and the use of such a general mechanism has an idiomatic convention in practice, it would achieve the same result.</p>",
        "id": 408114295,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702618033
    },
    {
        "content": "<p>Yes, the setup is currently a big trap for anyone who wishes to bump PFR.</p>",
        "id": 408129447,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702624897
    }
]