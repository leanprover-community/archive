[
    {
        "content": "<p>Is there bash/csh/zsh/whatever file that enables shell completion for <code>lake</code>? I'm specifically interested in completing existing targets for <code>lake build</code>. If there is no such file, is there a <code>lean</code>/<code>lake</code> command that prints all available targets or the best option is to run <code>find . -name lake-packages -prune -name *.lean | sed ...</code>?</p>",
        "id": 360958058,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1684997022
    },
    {
        "content": "<p>I wrote a POC one for zsh in my dotfiles <a href=\"https://github.com/Julian/dotfiles/blob/main/.config/zsh/completions/_lake\">here</a>. I don't know if there's a more complete one someone's written at this point.</p>",
        "id": 361140395,
        "sender_full_name": "Julian Berman",
        "timestamp": 1685040227
    },
    {
        "content": "<p>(It's very very barebones, and came up only when there was some discussion over completing lean modules vs filenames -- but it should be pretty easily extensible if you find nothing better.)</p>",
        "id": 361140544,
        "sender_full_name": "Julian Berman",
        "timestamp": 1685040264
    },
    {
        "content": "<p>Does it complete <code>lake build ...</code>?</p>",
        "id": 361169262,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685049937
    },
    {
        "content": "<p>No it's mostly just the zsh skeleton -- I don't immediately see a way to list all the possible targets from the command line, it looks like one would have to call into some Lake internals from within Lean, maybe like <code>getWorkspace</code> and  then the various <code>*facetConfig</code> fields are them (though certainly I'm no Lake expert). I'm not sure I'll have any time to try to figure it out on the Lean side but if it's any use once it's clear what to run  I'm happy to plumb it into that completion script.</p>",
        "id": 361171727,
        "sender_full_name": "Julian Berman",
        "timestamp": 1685051054
    }
]