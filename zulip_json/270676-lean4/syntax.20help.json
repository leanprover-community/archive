[
    {
        "content": "<p>Sorry, I just can't remember the squiggles for decomposing <code>Syntax</code>. Can someone fill in this <code>sorry</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">syntax</span> <span class=\"n\">forbidden</span> <span class=\"o\">:=</span> <span class=\"s2\">\" [\"</span> <span class=\"o\">(</span><span class=\"s2\">\"-\"</span> <span class=\"n\">ident</span><span class=\"o\">,</span><span class=\"bp\">*</span><span class=\"o\">,</span><span class=\"bp\">?</span><span class=\"o\">)</span> <span class=\"s2\">\"]\"</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"tac\"</span> <span class=\"o\">(</span><span class=\"n\">forbidden</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab.Tactic</span> <span class=\"n\">Elab</span> <span class=\"n\">Tactic</span> <span class=\"k\">in</span>\n<span class=\"n\">elab_rules</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">|</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">tac</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">forbidden</span><span class=\"o\">]</span><span class=\"bp\">?</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"k\">let</span> <span class=\"n\">forbidden</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">Name</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 397677491,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697797294
    },
    {
        "content": "<p>Not sure if this is exactly what you want but</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">syntax</span> <span class=\"n\">forbidden</span> <span class=\"o\">:=</span> <span class=\"s2\">\" [\"</span> <span class=\"o\">(</span><span class=\"s2\">\"-\"</span> <span class=\"n\">ident</span><span class=\"o\">,</span><span class=\"bp\">*</span><span class=\"o\">,</span><span class=\"bp\">?</span><span class=\"o\">)</span> <span class=\"s2\">\"]\"</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"tac\"</span> <span class=\"o\">(</span><span class=\"n\">forbidden</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab.Tactic</span> <span class=\"n\">Elab</span> <span class=\"n\">Tactic</span> <span class=\"k\">in</span>\n<span class=\"n\">elab_rules</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">|</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">tac</span> <span class=\"o\">[</span> <span class=\"bp\">-$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">a</span><span class=\"o\">],</span><span class=\"bp\">*</span> <span class=\"o\">]</span> <span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"k\">let</span> <span class=\"n\">forbidden</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">Name</span> <span class=\"o\">:=</span>\n        <span class=\"n\">a.map</span> <span class=\"o\">(</span><span class=\"n\">Syntax.getId</span><span class=\"o\">)</span>\n      <span class=\"n\">logInfo</span> <span class=\"o\">(</span><span class=\"n\">toString</span> <span class=\"n\">forbidden</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">tac</span> <span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 397681620,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697798516
    },
    {
        "content": "<p>Alternative that may be more what you were trying to do originally</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">syntax</span> <span class=\"n\">forbidden</span> <span class=\"o\">:=</span> <span class=\"s2\">\" [\"</span> <span class=\"o\">((</span><span class=\"s2\">\"-\"</span> <span class=\"n\">ident</span><span class=\"o\">),</span><span class=\"bp\">*</span><span class=\"o\">,</span><span class=\"bp\">?</span><span class=\"o\">)</span> <span class=\"s2\">\"]\"</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"tac\"</span> <span class=\"o\">(</span><span class=\"n\">forbidden</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab.Tactic</span> <span class=\"n\">Elab</span> <span class=\"n\">Tactic</span> <span class=\"k\">in</span>\n<span class=\"n\">elab_rules</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">|</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">tac</span> <span class=\"o\">[</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">-$</span><span class=\"n\">a</span><span class=\"o\">],</span><span class=\"bp\">*</span> <span class=\"o\">]</span> <span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"k\">let</span> <span class=\"n\">forbidden</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">Name</span> <span class=\"o\">:=</span>\n        <span class=\"n\">a.map</span> <span class=\"o\">(</span><span class=\"n\">Syntax.getId</span><span class=\"o\">)</span>\n      <span class=\"n\">logInfo</span> <span class=\"o\">(</span><span class=\"n\">toString</span> <span class=\"n\">forbidden</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">tac</span> <span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 397681894,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697798601
    },
    {
        "content": "<p>Perfect, thank you <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span>.</p>",
        "id": 397683936,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697799358
    }
]