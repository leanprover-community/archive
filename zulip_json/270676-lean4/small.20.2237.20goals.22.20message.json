[
    {
        "content": "<p>In Lean 3 there was a little message at the top of the tactic state saying the number of goals currently in the infoview, if there was more than one. Can I turn that option on in Lean 4?</p>",
        "id": 352555317,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1682433204
    },
    {
        "content": "<p>I miss this too.</p>",
        "id": 352555617,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682433268
    },
    {
        "content": "<p>While we're on infoview tweaks: I'd love to have options to adjust the infoview by</p>\n<ol>\n<li>hiding the autogenerated \"case names\" for the goals</li>\n<li>leaving a fair bit of whitespace between the different goals</li>\n<li>hiding the \"expected type\"</li>\n</ol>\n<p>Do these already exist?<br>\n<a href=\"/user_uploads/3121/LA0P59CkGTfDXBnUzT_UIu_p/Screen-Shot-2023-04-25-at-10.38.15-AM.png\">Screen-Shot-2023-04-25-at-10.38.15-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/LA0P59CkGTfDXBnUzT_UIu_p/Screen-Shot-2023-04-25-at-10.38.15-AM.png\" title=\"Screen-Shot-2023-04-25-at-10.38.15-AM.png\"><img src=\"/user_uploads/3121/LA0P59CkGTfDXBnUzT_UIu_p/Screen-Shot-2023-04-25-at-10.38.15-AM.png\"></a></div>",
        "id": 352556904,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682433550
    },
    {
        "content": "<p>Maybe even</p>\n<ol start=\"4\">\n<li>make the text of the subsequent goals smaller than the text of the current goal.</li>\n</ol>",
        "id": 352557091,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682433597
    },
    {
        "content": "<p>Sounds like you have the same issue I have with finding the current goal - maybe it would be possible to auto-collapse all but the first goal states</p>",
        "id": 352557645,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1682433719
    },
    {
        "content": "<p>Not so much me as my poor students :). I'd rather not autocollapse it, because I think that would confuse them further, but I think the tweaks I proposed would make it clearer.</p>",
        "id": 352558905,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682433917
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/270676-lean4/topic/small.20.2237.20goals.22.20message/near/352556904\">said</a>:</p>\n<blockquote>\n<ol start=\"3\">\n<li>hiding the \"expected type\"</li>\n</ol>\n</blockquote>\n<p>Not that if you collapse any part of the info view, it should stay collapsed for the current session. Is this visually sufficient? Should it persist across sessions? Adjustable in your project's <code>.vscode</code> file?</p>",
        "id": 352560248,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1682434214
    },
    {
        "content": "<blockquote>\n<p>Adjustable in your project's <code>.vscode</code> file?</p>\n</blockquote>\n<p>I think that would work, yes -- I'd rather my students never see this at all.</p>",
        "id": 352561330,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682434448
    },
    {
        "content": "<p>But you want them to see the number of goals, right? :-)</p>",
        "id": 352561765,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1682434547
    },
    {
        "content": "<p>Yes -- it's the \"expected type\" that I want them to never encounter. I do want them to see all the goals, and I'd love for them to see a count of the number of goals.</p>",
        "id": 352561888,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682434570
    },
    {
        "content": "<p>(See the picture I included as an illustration of why \"expected type\" can be confusing.)</p>",
        "id": 352561936,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682434585
    },
    {
        "content": "<p>It would be even better to make the active goal clearly designated than being on top.</p>",
        "id": 352563611,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1682434947
    },
    {
        "content": "<p>Yes, maybe it could even have a lightly coloured background instead of/in addition to</p>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/270676-lean4/topic/small.20.2237.20goals.22.20message/near/352557091\">said</a>:</p>\n<blockquote>\n<ol start=\"4\">\n<li>make the text of the subsequent goals smaller than the text of the current goal.</li>\n</ol>\n</blockquote>",
        "id": 352563995,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682435023
    },
    {
        "content": "<p>Oops, I missed your 4th item. But this shows I had the same wish (although I don't know which display trick would be the most suitable).</p>",
        "id": 352564952,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1682435209
    },
    {
        "content": "<p>For what it's worth, for cases like above where presumably the expected type is the type of the surrounding <code>by</code> block, we probably shouldn't <em>ever</em> show an expected type. As everywhere, there is so much more that could be tweaked and improved, but an option to collapse the item by default would be a sensible start.</p>",
        "id": 352565991,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1682435444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/small.20.2237.20goals.22.20message/near/352563611\">said</a>:</p>\n<blockquote>\n<p>It would be even better to make the active goal clearly designated than being on top.</p>\n</blockquote>\n<p>\"active goal<strong>s</strong>\". There can be several active goals, right?</p>",
        "id": 352566178,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1682435495
    },
    {
        "content": "<p>I guess students don't use much <code>;</code> (<code>&lt;;&gt;</code> is the Lean 4 equivalent, I think?), but it would still be helpful to display all the goals the next tactic will run on.</p>",
        "id": 352566457,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1682435573
    },
    {
        "content": "<p>Sorry for hijacking your thread, Kevin.  I agree about the importance of the \"37 goals\" message, too.</p>",
        "id": 352566838,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682435665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> I'd be happy to open issues for these, totally understanding that they are lower priority for the devs than work on the core product and these issues would just be a record.  But could you give a run-down of which repo each of these ideas (my 1-4 and Kevin's \"number of goals\") would require changes to?  Are they all VS Code-extension only, or do some require changes to core too?</p>",
        "id": 352567481,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1682435808
    },
    {
        "content": "<p>I just opened <a href=\"https://github.com/leanprover/lean4/issues/2202\">https://github.com/leanprover/lean4/issues/2202</a>, I believe everything else can be done in the extension, including a setting to collapse the expected type by default</p>",
        "id": 352569048,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1682436115
    },
    {
        "content": "<p>Yaël's refinement may need some coordination between language server and extension, in which case I would default to opening it in the lean4 repo</p>",
        "id": 352569475,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1682436189
    },
    {
        "content": "<p>And yes, right now I don't think anyone is directly looking into working on issues like these in either repo, but recording them is still useful</p>",
        "id": 352569863,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1682436252
    },
    {
        "content": "<p>I opened <a href=\"https://github.com/leanprover/vscode-lean4/pull/300\">https://github.com/leanprover/vscode-lean4/pull/300</a> which seems to be the easiest vscode-lean4 issue to fix.</p>",
        "id": 358138410,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1683995808
    },
    {
        "content": "<p>I was wishing for this only today, after it had taken a while to dawn on me that an <code>apply</code> in a porting file was creating two goals in lean 4 and only one in lean 3</p>",
        "id": 358140721,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1683996822
    },
    {
        "content": "<p>There is a failing test but I have no idea what it's telling me.</p>",
        "id": 358152028,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1684002680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I will review. The failing test says nothing, the tests have been broken for ages.</p>",
        "id": 358333458,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1684110053
    },
    {
        "content": "<p>Thanks to two TGV rides between Paris and Lyon, I found time to work on <a href=\"https://github.com/leanprover/vscode-lean4/pull/302\">https://github.com/leanprover/vscode-lean4/pull/302</a> which tries to implement all suggestions from <a href=\"https://github.com/leanprover/vscode-lean4/issues/299\">Heather's VSCode wishlist</a>. However I'm facing some React issues. I added some config options <a href=\"https://github.com/leanprover/vscode-lean4/pull/302/files#diff-93d8677c7a2d3521b77b7dc86579ced3d628a6bd06b3ec73878cfce4adf52fc5R82-R85\">here</a> which are made available <a href=\"https://github.com/leanprover/vscode-lean4/pull/302/files#diff-ece3fe1d415234d756ba9dd601f6701bb51c6bed1e5d07ecc0ac4ec4796e6e57R584-R587\">here</a> using what I understand to be the standard procedure in this extension. Then they are read for instance <a href=\"https://github.com/leanprover/vscode-lean4/pull/302/files#diff-b84ebdeee602db842c742119194fb99de0e85e4321f8635703d24b66dade16c5R206\">here</a> and some of them are used as the initial state of some React state, for instance <a href=\"https://github.com/leanprover/vscode-lean4/pull/302/files#diff-b84ebdeee602db842c742119194fb99de0e85e4321f8635703d24b66dade16c5R218\">here</a>. That doesn't work. I think what happens is the config passing mechanism is asynchronous and the react component state is initialized before the config goes through. And then it's too late. Please feel free to fix that or give me hints <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>  <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>  <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span></p>",
        "id": 361330228,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1685108205
    },
    {
        "content": "<p>Also I apologize for implementing four different features in the same PR, but writing all four at the same time was much easier for me since the work is mostly threading variables through all layers, so working one layer at a time is easier than one variable at a time. Of course I can try to split the PR if this is really too annoying.</p>",
        "id": 361330613,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1685108282
    },
    {
        "content": "<p>Once the config vs state issue is resolved we will of course be able to enjoy some bikeshedding about the changes of margins and font-size, and the default keybindings.</p>",
        "id": 361330940,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1685108348
    },
    {
        "content": "<p>Thanks! I will try to look at this tonight.</p>",
        "id": 361517694,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1685179387
    }
]