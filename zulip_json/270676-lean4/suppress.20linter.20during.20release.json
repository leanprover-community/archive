[
    {
        "content": "<p>I am testing a version of Lean whose only purpose is to benchmark against mathlib. I would like the GitHub CI to release a toolchain for this modified version. </p>\n<p>It expectedly trips the unused variable linter causing the stage 2 portion of the Linux build to fail. This can be fixed but would take a bit more effort. I would like to see if such effort would be worth it, in terms of speed improvements to mathlib, before undertaking it. </p>\n<p>Is there a way to suppress the error from this and complete the release process?</p>",
        "id": 385086156,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692098343
    },
    {
        "content": "<p>I would like this too, but it would be a substantial refactor of the CI.</p>",
        "id": 385109571,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692103454
    },
    {
        "content": "<p>I'm guessing you want speedcenter results here, and can't do your benchmarking with an <code>elan override</code> toolchain (which is much quicker to obtain, and doesn't care about the tests).</p>",
        "id": 385109770,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692103504
    },
    {
        "content": "<p>I took the brutish approach to <code>ci.yml</code> but then noticed there were switches to turn off stage 3 and the benchmarking for the linux build. </p>\n<p>I would love to be able to know how to use <code>elan override</code> with the benchmarking server. Due to my MacOS woes, I have been using a tiny linux box with <code>elan override</code> for quicker iterations. But I was not aware of being able to point the benchmark server to an overriding toolchain</p>",
        "id": 385110954,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692103799
    }
]