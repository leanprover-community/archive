[
    {
        "content": "<p>I have a goal like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">none</span> <span class=\"bp\">!=</span>\n    <span class=\"k\">match</span> <span class=\"n\">h</span> <span class=\"bp\">==</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"n\">h</span>\n    <span class=\"bp\">|</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span> <span class=\"bp\">=</span>\n  <span class=\"n\">true</span>\n</code></pre></div>\n<p><code>h : α</code> where there is a <code>BEq</code> instance for <code>α</code>. How do i resolve the match statement to just <code>some h</code>? Thanks!</p>",
        "id": 372674031,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1688579615
    },
    {
        "content": "<p>This is only true if it's <code>LawfulBEq</code> I think. Once that's in context the simp lemmas should clean it up?</p>",
        "id": 372674708,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1688579777
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> <a href=\"#narrow/stream/270676-lean4/topic/resolve.20match.20trivially.20to.20one.20arm/near/372674708\">said</a>:</p>\n<blockquote>\n<p>This is only true if it's <code>LawfulBEq</code> I think. Once that's in context the simp lemmas should clean it up?</p>\n</blockquote>\n<p>Ahh i don't have that instance, that makes sense. Thanks :)</p>",
        "id": 372674965,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1688579853
    },
    {
        "content": "<p>btw, you might find it more ergonomic to just use <code>DecidableEq</code> instead of <code>BEq</code>. You can usually auto-derive DecidableEq for new types.</p>",
        "id": 372687041,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1688583052
    },
    {
        "content": "<p>That is what I decided to do! Unfortunately I can't autoderive, I <a href=\"#narrow/stream/113488-general/topic/.60DecidableEq.60.20instance/near/372687290\">need to use my own definition</a> and I think that's where most of my problems are stemming from (even with the BEq stuff)</p>",
        "id": 372688119,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1688583319
    }
]