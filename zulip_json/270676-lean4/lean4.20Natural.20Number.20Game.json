[
    {
        "content": "<p>I'm doing the lean4 Natural Number Game. In the Implication World, level 9 in the final step, it says \"You have not unlocked the lemma/definition 'MyNat.zero_ne_succ' yet!\", but I suppose the lemma should be given as Peano as I see no level where it could be proved beforehand. Is this a known bug?</p>",
        "id": 397670814,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697795083
    },
    {
        "content": "<p>No it's not, it's a new bug. I will not have time to look at this before the weekend but this weekend I will be adding new worlds to the game so I will also try and fix this. Thanks for reporting.</p>",
        "id": 397687619,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697800689
    },
    {
        "content": "<p>Thanks for letting me know!</p>",
        "id": 397688691,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697801049
    },
    {
        "content": "<p>I fixed this today, and the new version is already live. Looks like I've been sloppy with another fix I made yesterday, sorry. (thx for the PR!)</p>",
        "id": 397751452,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1697822986
    },
    {
        "content": "<p>Great, thanks! I have a question of which I'm not sure whether it's related to the NumberGame or lean4 in general: in the ImplicationWorld one uses, for example, \"apply h2 at h1\", applying something to a hypothesis. I don't get this to work in my own example in VSCode, where it shows a syntax error at the \"at\" (and tries to resolve the rhs of my implication axiom with the goal rather than the lhs with the hypothesis). After DuckDuckGoing for several hours now, I could not find a general method for applying rules to hypotheses in tactics mode. Any suggestion where I could look or what I'm doing wrong?</p>",
        "id": 397842971,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697888040
    },
    {
        "content": "<p><code>apply at</code> is a tactic that was added to NNG but hasn't made it to mathlib yet. cc <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 397843154,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697888184
    },
    {
        "content": "<p><code>apply h₂ at h₁</code> is (roughly) the same as <code>replace h₁ := h₂ h₁</code> though.</p>",
        "id": 397843189,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697888228
    },
    {
        "content": "<p>OK, thanks for the quick help! I'll try that. First steps are pretty hard...</p>",
        "id": 397843224,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697888276
    },
    {
        "content": "<p>I have no idea why our community did not implement <code>apply at</code> in lean years ago. I've been using it time and time again in NNG and I love it. If you have a GitHub account then please give the mathlib issue a thumbs up :-) I am well aware that having a difference between NNG lean and real lean is confusing and I am very clear about the best way to fix this :-) It's <a href=\"https://github.com/leanprover-community/mathlib4/pull/7527\">#7527</a></p>",
        "id": 397843411,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697888462
    },
    {
        "content": "<p>I have an account and will do that. Last Q for today: Since my \"h2\" is an axiom, how do I get that into my hypotheses before doing the replace?</p>",
        "id": 397843540,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697888557
    },
    {
        "content": "<p>you don't need to</p>",
        "id": 397843551,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697888580
    },
    {
        "content": "<p>you just refer to it by name</p>",
        "id": 397843558,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697888587
    },
    {
        "content": "<p>It's also brought up <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/How.20to.20write.20proofs.20without.20knowing.20conclusions.20in.20advance.3F/near/397770877\">here</a>. It would be great to have more forward-reasoning tactics.</p>",
        "id": 397843578,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697888614
    },
    {
        "content": "<p>only <code>h1</code> needs to be a hypothesis in that example, <code>h2</code>  can also be something like <code>And.left</code> or some other implication theorem</p>",
        "id": 397843659,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697888678
    },
    {
        "content": "<p>Ah, I see. Thx</p>",
        "id": 397843666,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697888685
    },
    {
        "content": "<p>You are one of the first people to be playing NNG4 and I'm very happy to hear any other feedback you have. When it's at feature parity with NNG3 the plan is to deprecate NNG3 and start promoting NNG4 on eg social media (I already have ideas for a \"how to make a lean game\" video) but until then I'm very grateful for any beta testing.</p>",
        "id": 397843934,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697888885
    },
    {
        "content": "<p>Well, after doing the the current version of NNG4 (up to the implication world), what helped me with my own little exercise, was the Cheatsheet and learning about convert_to, so it would of course be great to have these items in an interactive learning tool like NNG4 ( I just started at looking at lean, so I didn't do NNG3 and don't know what's in there...). Besides that, NNG4 so far was really of great help for me, even after reading the docs pretty extensively!</p>",
        "id": 397844757,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697889605
    },
    {
        "content": "<p>In NNG4 there is tension between \"learn as many tactics as possible so you become better at lean\" and \"learn as few tactics as possible so the game doesn't become confusing\". In particular I encourage people towards power world and claim the \"final boss\" is there precisely because I discovered (to my shock!) that you could prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>x</mi><mi>y</mi><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">(x+y)^2=x^2+2xy+y^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> knowing only three tactics (<code>induction</code>, <code>rw</code>, <code>rfl</code>).</p>",
        "id": 397848925,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697893553
    },
    {
        "content": "<p>maybe you need \"tactic world\" :)</p>",
        "id": 397849594,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697894150
    },
    {
        "content": "<p>Oh that's an interesting idea! There are some worlds in the pipeline introducing <code>simp</code>, <code>have</code> etc but I could just have an optional world which is a showcase of many tactics (one per level).</p>",
        "id": 397850934,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697895552
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lean4.20Natural.20Number.20Game/near/397849594\">said</a>:</p>\n<blockquote>\n<p>maybe you need \"tactic world\" :)</p>\n</blockquote>\n<p>Or make it a second game which assumes you know the content of the NNG. That way NNG keeps a very slick inventory with less than 10 tactics all in all.</p>",
        "id": 397851522,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1697896118
    },
    {
        "content": "<p>I think it's better not too change the scope of NNG too much since people liked the previous version so much.</p>",
        "id": 397852539,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697897057
    },
    {
        "content": "<p>In fact I've noticed this in other games -- they have the problem that they might need to assume the user knows 0 tactics, so the problem of the game writer is to (a) teach some tactics and (b) also teach the maths thing which they want to teach. One could really imagine making \"the tactic game\"! It just assumes you know some basic maths, imports all of mathlib, and then each world takes some group of tactics and showcases their usage via some simple levels.</p>",
        "id": 397852542,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697897062
    },
    {
        "content": "<p>And here of course you really don't start changing the rules to make it easier for the user, you teach exactly the Lean/mathlib tactics as they are so that people can transfer their skills directly to lean/mathlib after playing.</p>",
        "id": 397852581,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697897124
    },
    {
        "content": "<blockquote>\n<p>I have no idea why our community did not implement <code>apply at</code> in lean years ago.</p>\n</blockquote>\n<p>Oh didn't know about this tactic in NNG3/4, I think it's <em>the absence</em> of precisely this tactic that was confusing to me re:forward-proofs VS backwards-proofs when I was starting to write proofs. Being able to apply the \"theorem puzzle piece\" to the goal &amp; not being able to apply the exact same \"theorem puzzle piece\" to hypotheses felt asymmetric/confusing.</p>",
        "id": 397918584,
        "sender_full_name": "Evgenia Karunus",
        "timestamp": 1697958198
    },
    {
        "content": "<p>this was so fun!  but i want to play more..  \"Congratulations! You've finished Algorithm World. These algorithms will be helpful for you in Even-Odd World.\" <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span> i guess it's not actually implemented?</p>",
        "id": 406194506,
        "sender_full_name": "Jeff Wu",
        "timestamp": 1701827246
    },
    {
        "content": "<p>Not on your computer, no :-) I have a big NNG backlog because I've been distracted by a Diophantine equation. Will try to get to it!</p>",
        "id": 406273060,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1701857399
    },
    {
        "content": "<p>i'd be interested in help dev for fun in my spare time (though i don't have much spare time <em>and</em> i'm completely new to proof assistants.. so probably a terrible candidate).  at any rate, i'm interested in getting it set up locally maybe just so i can play it :)</p>",
        "id": 406371366,
        "sender_full_name": "Jeff Wu",
        "timestamp": 1701890705
    },
    {
        "content": "<p>Code is here: <a href=\"https://github.com/leanprover-community/NNG4\">https://github.com/leanprover-community/NNG4</a></p>",
        "id": 406372548,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1701891206
    },
    {
        "content": "<p>And the docs on how to use it locally are here: <a href=\"https://github.com/leanprover-community/lean4game#creating-a-game\">https://github.com/leanprover-community/lean4game#creating-a-game</a></p>\n<p>You'll probably have more fun creating your own game building on things in the NNG.</p>\n<p>And dont hesitate to ask me if you get stuck on any bugs, its all not completely stable yet :)</p>",
        "id": 406406095,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1701904543
    },
    {
        "content": "<p>The experimental even/odd levels are here <a href=\"https://github.com/leanprover-community/NNG4/blob/cdbce04722a5e9af1e139c7faa2be50e9177a39a/Game/Levels/EvenOdd/even.lean\">https://github.com/leanprover-community/NNG4/blob/cdbce04722a5e9af1e139c7faa2be50e9177a39a/Game/Levels/EvenOdd/even.lean</a> but they need some work to make them less painful.</p>",
        "id": 406569143,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1701963631
    },
    {
        "content": "<p>I wonder if it is worth implementing \"certificates of achievement\" for completing (or partially completing) the game (possibly with some statistics).   Ideally displaying an optional user name that one can select before playing the game.  This could open up the possibility of using levels in this game (or similar game) as some sort of extra credit homework or something.</p>",
        "id": 406582964,
        "sender_full_name": "Terence Tao",
        "timestamp": 1701967755
    },
    {
        "content": "<p>One comment on using the games as credit homeworks, etc.: All the user data is stored in the user's browser and nothing on the server. This means besides modifying it directly in your browser dev-tools, you can also download your progress as JSON, modify it arbitrarily and upload it again (which uploads it to your browser's local storage, not the server). For example, you could just set \"completed\" as true for each level and after uploading it will show you that you've completed everything, even though you didn't do any proofs.</p>\n<p>And there is no intend to move any of this to the server, as then you need to think about GDPR. Nevertheless, it would totally be possible to implement nicer achievements/statistics on the client's side!</p>",
        "id": 406589187,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1701969803
    },
    {
        "content": "<p>The big thing that will need to be done at some point will be integration with learning platforms such as moodle and canvas. This is totally doable but a non-trivial amount of not fun engineering work.</p>",
        "id": 406607559,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1701977270
    }
]