[
    {
        "content": "<p>I see that there aren't much theorems directly  about Char in Lean/Init/Std/Mathlib. <br>\nI understand that Fin/Nat properties are not far (Char.val_of ...) but still I am stuck in trying to prove <br>\nthe following:</p>\n<div class=\"codehilite\" data-code-language=\"lean4\"><pre><span></span><code>x y: Char\nH1: ¬x &lt; y\nH2: ¬x &gt; y\n⊢ x = y\n</code></pre></div>\n<p>The closest I am able to reach is :</p>\n<div class=\"codehilite\" data-code-language=\"lean4\"><pre><span></span><code>x y: Char\nH: x.val.val = y.val.val\n⊢ x.val = y.val\n</code></pre></div>\n<p>and then I'm stuck ...</p>\n<p>(sorry if this appears to be unimportant ...  formalizing String algorithms is maybe a more convincing context)</p>",
        "id": 406337674,
        "sender_full_name": "Frederic Peschanski",
        "timestamp": 1701878698
    },
    {
        "content": "<p>Ok, I found my own answer...</p>\n<div class=\"codehilite\" data-code-language=\"lean4\"><pre><span></span><code>show ⟨x.val.val⟩ = (⟨y.val.val⟩ : UInt32)\nsimp [H]\n</code></pre></div>",
        "id": 406340409,
        "sender_full_name": "Frederic Peschanski",
        "timestamp": 1701879595
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"506086\">Frederic Peschanski</span> has marked this topic as resolved.</p>",
        "id": 406340490,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701879608
    }
]