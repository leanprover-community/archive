[
    {
        "content": "<p>After updating the VS Code extension to 0.0.60, my Lean files no longer automatically refresh. I have to restart the lean server for changes to take effect. At first I thought there's  been some sneaky option change, but there are errors being reported by the extension:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span> <span class=\"o\">[</span><span class=\"n\">ERR_STREAM_WRITE_AFTER_END</span><span class=\"o\">]:</span> <span class=\"n\">write</span> <span class=\"n\">after</span> <span class=\"kd\">end</span>\n    <span class=\"n\">at</span> <span class=\"n\">Socket.Writable.write</span> <span class=\"o\">(</span><span class=\"n\">internal</span><span class=\"bp\">/</span><span class=\"n\">streams</span><span class=\"bp\">/</span><span class=\"n\">writable.js</span><span class=\"o\">:</span><span class=\"mi\">292</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">)</span>\n    <span class=\"n\">at</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\...\\.</span><span class=\"n\">vscode</span><span class=\"bp\">\\</span><span class=\"n\">extensions</span><span class=\"bp\">\\</span><span class=\"n\">leanprover.lean4</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">60</span><span class=\"bp\">\\</span><span class=\"n\">out</span><span class=\"bp\">\\</span><span class=\"n\">extension.js</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">552346</span>\n    <span class=\"n\">at</span> <span class=\"n\">new</span> <span class=\"n\">Promise</span> <span class=\"o\">(</span><span class=\"bp\">&lt;</span><span class=\"n\">anonymous</span><span class=\"bp\">&gt;</span><span class=\"o\">)</span>\n    <span class=\"n\">at</span> <span class=\"n\">l.write</span> <span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\...\\.</span><span class=\"n\">vscode</span><span class=\"bp\">\\</span><span class=\"n\">extensions</span><span class=\"bp\">\\</span><span class=\"n\">leanprover.lean4</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">60</span><span class=\"bp\">\\</span><span class=\"n\">out</span><span class=\"bp\">\\</span><span class=\"n\">extension.js</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">552264</span><span class=\"o\">)</span>\n    <span class=\"n\">at</span> <span class=\"n\">g.doWrite</span> <span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\...\\.</span><span class=\"n\">vscode</span><span class=\"bp\">\\</span><span class=\"n\">extensions</span><span class=\"bp\">\\</span><span class=\"n\">leanprover.lean4</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">60</span><span class=\"bp\">\\</span><span class=\"n\">out</span><span class=\"bp\">\\</span><span class=\"n\">extension.js</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">541871</span><span class=\"o\">)</span>\n    <span class=\"n\">at</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\...\\.</span><span class=\"n\">vscode</span><span class=\"bp\">\\</span><span class=\"n\">extensions</span><span class=\"bp\">\\</span><span class=\"n\">leanprover.lean4</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">60</span><span class=\"bp\">\\</span><span class=\"n\">out</span><span class=\"bp\">\\</span><span class=\"n\">extension.js</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">541766</span>\n</code></pre></div>",
        "id": 270093917,
        "sender_full_name": "Franti코ek Silv치코i 游불",
        "timestamp": 1643658741
    },
    {
        "content": "<p>Might be worth adding that I can peruse existing states in proofs and such just fine, but adding new definitions / theorems / proofs / interactive #evals, etc. does nothing unless I explicitly restart the server.</p>",
        "id": 270094524,
        "sender_full_name": "Franti코ek Silv치코i 游불",
        "timestamp": 1643658963
    },
    {
        "content": "<p>Don't worry, I can reproduce the bug.</p>",
        "id": 270094650,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643658999
    },
    {
        "content": "<p>0.0.61 is out.  Can you check if that fixes the issue?</p>",
        "id": 270095220,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643659199
    },
    {
        "content": "<p>Sure, give me a second.</p>",
        "id": 270095402,
        "sender_full_name": "Franti코ek Silv치코i 游불",
        "timestamp": 1643659240
    },
    {
        "content": "<p>Works like a charm, that was quick, thanks &lt;3.</p>",
        "id": 270095833,
        "sender_full_name": "Franti코ek Silv치코i 游불",
        "timestamp": 1643659413
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"364929\">Franti코ek Silv치코i</span> has marked this topic as resolved.</p>",
        "id": 270131655,
        "sender_full_name": "Notification Bot",
        "timestamp": 1643675823
    },
    {
        "content": "<p>PS: I'm not sure the document selector was causing Error [ERR_STREAM_WRITE_AFTER_END]: write after end.  This error is caused by known bugs in the 7.1.1 version of the extension api.  Moving to 8.0 solves those problems.</p>",
        "id": 270132888,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1643676647
    },
    {
        "content": "<p>Ah alright that's my bad then, I just didn't run into said issue beforehand and only then did I check the error log.</p>",
        "id": 270140539,
        "sender_full_name": "Franti코ek Silv치코i 游불",
        "timestamp": 1643681697
    },
    {
        "content": "<p>Might be related to the plugin updates: is anyone else experiencing strange CPU work even though the IDE is idle?<br>\nI took this screenshot with nothing else open. I checked the processes workload and VSCode was in fact the one consuming the CPU<br>\nMore info: I had Mathlib4 open<br>\n<a href=\"/user_uploads/3121/h1U3xAnAsN12iGjJjkBHQcIy/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/h1U3xAnAsN12iGjJjkBHQcIy/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/h1U3xAnAsN12iGjJjkBHQcIy/image.png\"></a></div>",
        "id": 270144981,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643685296
    },
    {
        "content": "<blockquote>\n<p>Ah alright that's my bad then,</p>\n</blockquote>\n<p>You didn't do anything wrong.  The two issues are unrelated, I believe.  \"Not showing diagnostics\" is a critical issue and needs to be fixed quickly, so I didn't even look at the warning you posted.  We should still fix the warning at some point though.</p>",
        "id": 270173579,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643706620
    },
    {
        "content": "<blockquote>\n<p>I checked the processes workload and VSCode was in fact the one consuming the CPU</p>\n</blockquote>\n<p>Was Lean doing anything?  Updating diagnostics, etc., will all cause vscode to use a bit of CPU.  150% CPU is a tad excessive though.  Does it still happen if you close all Lean files?</p>",
        "id": 270173925,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643706817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20VS.20Code.200.2E0.2E60.20-.20Manual.20refresh.20necessary/near/270173925\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I checked the processes workload and VSCode was in fact the one consuming the CPU</p>\n</blockquote>\n<p>Was Lean doing anything?  Updating diagnostics, etc., will all cause vscode to use a bit of CPU.  150% CPU is a tad excessive though.  Does it still happen if you close all Lean files?</p>\n</blockquote>\n<p>Okay I'm able to reproduce it consistently. In the file <code>Mathlib/Tactic/Basic.lean</code>, I hold CTRL and hover basically anything here:<br>\n<code>elab (name := workOnGoal) \"work_on_goal \" n:num ppSpace seq:tacticSeq : tactic</code>. Then a big block glows blue, including the docstring. A small popup prompts saying \"Checking Lean setup\" or something and disappears really quickly. And after that my CPU is taken to those peaks and stays there. It stays there even if I close all Lean files and also the Lean Infoview.</p>",
        "id": 270208493,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643722058
    },
    {
        "content": "<p>Actually, CTRL+hovering almost anything seems to trigger this</p>",
        "id": 270209556,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643722523
    },
    {
        "content": "<p>Extra side-effect: if I close VS Code when this happens, my escaping hotkey is reset to the default (<code>\\</code>) when I open it again</p>",
        "id": 270376101,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643805321
    },
    {
        "content": "<p>I'm having the same issue. It seems to happen only when control hovering prelude functions. It does not happen when control hovering my own functions. After a few mins of control hovering, vscode eats up all CPU cores, and my computer becomes loud. Thanks a lot in advance for looking into this.</p>",
        "id": 270393128,
        "sender_full_name": "Michael Jam",
        "timestamp": 1643812626
    },
    {
        "content": "<blockquote>\n<p>It seems to happen only when control hovering prelude functions.</p>\n</blockquote>\n<p>Thanks, I can reproduce this now.</p>",
        "id": 270393753,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643812839
    },
    {
        "content": "<p>That is, functions with many references perhaps?</p>",
        "id": 270394194,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643812991
    },
    {
        "content": "<p>Anything from the std library files. It looks like I cannot even control click stuff in prelude.lean anymore</p>",
        "id": 270394411,
        "sender_full_name": "Michael Jam",
        "timestamp": 1643813072
    },
    {
        "content": "<p>When I open a std lib file,  I notice that lean server or whatever is restarting at the bottom right corner which does not look normal</p>",
        "id": 270394555,
        "sender_full_name": "Michael Jam",
        "timestamp": 1643813141
    },
    {
        "content": "<p>It's like crashing and some vscode thread gets stuck in an infinite loop, so it restarts a new server every time. But after a few threads get stuck in infinite loops vscode.exe uses high cpu. I'm using WSL vscode by the way.</p>",
        "id": 270394873,
        "sender_full_name": "Michael Jam",
        "timestamp": 1643813272
    },
    {
        "content": "<p>0.0.62 is out.  Can you check again please?</p>",
        "id": 270398442,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643814514
    },
    {
        "content": "<p>Seems like it was solved for me, thanks!</p>",
        "id": 270401414,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643815520
    },
    {
        "content": "<p>Hm, now it's crashing a lot and the connection with the server is closing. I'll try to reproduce it consistently</p>",
        "id": 270401839,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643815651
    },
    {
        "content": "<p>I'm not being able to make it crash again, but it's acting a bit weird when opening new files. It looks unresponsive for a few seconds and then starts loading up</p>",
        "id": 270403488,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643816224
    },
    {
        "content": "<p>I've edited the topic name :).</p>",
        "id": 270407259,
        "sender_full_name": "Franti코ek Silv치코i 游불",
        "timestamp": 1643817460
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"364929\">Franti코ek Silv치코i</span> has marked this topic as unresolved.</p>",
        "id": 270408321,
        "sender_full_name": "Notification Bot",
        "timestamp": 1643817766
    },
    {
        "content": "<p>0.0.63 is out. Can you check again please?</p>",
        "id": 270414746,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643819852
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/270676-lean4/topic/VS.20Code.200.2E0.2E6x.20-.20Goofin'/near/270414746\">said</a>:</p>\n<blockquote>\n<p>0.0.63 is out. Can you check again please?</p>\n</blockquote>\n<p>Looks smooth for now! Thanks again!<br>\nWill report back if I find anything strange</p>\n<p>BTW: did you address anything that could be related to the escape hotkey reset? (I use <code>;</code> instead of <code>\\</code>)</p>",
        "id": 270416548,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643820471
    },
    {
        "content": "<blockquote>\n<p>BTW: did you address anything that could be related to the escape hotkey reset? (I use ; instead of \\)</p>\n</blockquote>\n<p>I don't think so.  But I wouldn't know how that could happen in the first place.</p>\n<p>If you tell me how to reproduce, I'll fix it.</p>",
        "id": 270418492,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643821077
    },
    {
        "content": "<p>Yeah, I will need to tweak it some more before I can reproduce it consistently</p>",
        "id": 270419428,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643821347
    },
    {
        "content": "<blockquote>\n<p>That is, functions with many references perhaps?</p>\n</blockquote>\n<p>In case anybody was wondering what actually happened:</p>\n<p>When vscode opens a hover with a source code snippet, it opens the corresponding file as a text document.  From the extension side this kind of document looks exactly like a file the user opened intentionally.  But if we told the Lean server that a file was opened, it would start a Lean worker process for that file.  It would start a Lean process every time you hover!  Clearly this must be avoided.</p>\n<p>So we've put in a hack that prevents the vscode LSP library from sending the didOpen notification.  Instead, we subscribe to the onDidChangeVisibleTextEditors event and manually send didOpen notification only for these visible text editors.</p>\n<p>There's a second complication: to support installing both the Lean 3 and Lean 4 extension at the same time, the Lean 4 extensions needs to change the language id of a file to <code>lean4</code> after it's opened.  This also used to be triggered by the visible editors event.  (Changing the language id closes and reopens the text document.  IIRC, the hover doesn't like that and opens the file again.)</p>\n<p>The recent multi-root workspace PR <a href=\"https://github.com/leanprover/vscode-lean4/pull/104\">https://github.com/leanprover/vscode-lean4/pull/104</a> inadvertently duplicated the setTextDocumentLanguage call and also triggered it when a document was opened.  From what I can tell, changing the language id of the hovered file makes the hover open the file again, sending it into an endless loop.  Setting the language id twice resulting in one of the calls failing, printing endless error messages on the console (thankfully, this made diagnosing the issue trivial).</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"434989\">@Chris Lovett</span></p>",
        "id": 270435266,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643826734
    },
    {
        "content": "<p>IOW 'just move on to Lean 4 already'! <span aria-label=\"stuck out tongue closed eyes\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue closed eyes\">:stuck_out_tongue_closed_eyes:</span></p>",
        "id": 270438482,
        "sender_full_name": "Franti코ek Silv치코i 游불",
        "timestamp": 1643828125
    },
    {
        "content": "<p>Do you want to help porting the 700K lines of mathlib3? Once they're all done I'm moving immediately!</p>",
        "id": 270480844,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1643847696
    },
    {
        "content": "<p>Just found another issue that's easy to replicate: when doing <code>#check Nat</code> and ctrl+clicking on it, it opens <code>Prelude.lean</code> but I can't ctrl+click anything there</p>",
        "id": 270832042,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644074420
    },
    {
        "content": "<p>That is because once you are in the compiler you would need a seperate configuration for that to work out properly (the development guide goes into detail about how to set that up) its not the fault of the plugin</p>",
        "id": 270832068,
        "sender_full_name": "Henrik B칬ving",
        "timestamp": 1644074467
    },
    {
        "content": "<p>No, there is no inherent problem with browsing the Lean part of the stdlib taken from a release without further setup, and in fact it just works in Emacs. But that is because lsp-mode will automatically open a workspace (or ask you about it) when you enter a separate project, while in VS Code opening a workspace is always an explicit action afaik.</p>",
        "id": 270837647,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644080680
    },
    {
        "content": "<p>I have (vague) memories of being able to do it a few weeks ago</p>",
        "id": 270837852,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644080961
    },
    {
        "content": "<p>Yes, I accidentally opened a VS Code copy with an older extension version and it worked for me as well</p>",
        "id": 270837911,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644081030
    },
    {
        "content": "<p>There have been quite a few fundamental changes in the extension in the recent past, some breakage is to be expected</p>",
        "id": 270837928,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644081083
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/vscode-lean4/issues/115\">https://github.com/leanprover/vscode-lean4/issues/115</a></p>",
        "id": 270838002,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644081190
    }
]