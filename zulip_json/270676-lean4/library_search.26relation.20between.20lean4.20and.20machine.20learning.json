[
    {
        "content": "<p>Hello, I am almost new to lean. I have tried some mathematical proof with lean4. I am interested in \"library_search\", could someone tell me the principle of \"library_search\", when and for which questions it can work?(only maths questions?) What's more, I want to learn something of lean about machine learning.For example,  I have heard that we can use lean4 can formalized linear regression algorithm, but I don't know how to write the code and why it will  be helpful for machine learning.  Could someone just give me a simple code or just explain something about the relation between lean4 and machine learning. Thank you!</p>",
        "id": 392148911,
        "sender_full_name": "Langze YE",
        "timestamp": 1695225733
    },
    {
        "content": "<p>The library search tactic has actually been renamed to <code>exact?</code> in current Mathlib. (That is, it is a tactic for asking: \"how can I solve this goal use <code>exact &lt;term&gt;</code>.)</p>\n<p>It is fairly simple in scope: it tries calling <code>apply</code> on the goal with every declaration in the library (there is some clever indexing here to only try feasible declarations). For any declaration that successfully applies to the goal, we then use \"backwards reasoning\" (in particular, the <code>solve_by_elim</code>) tactic to try to discharge any subgoals by recursively applying hypotheses from the local context.</p>",
        "id": 392219521,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695251188
    },
    {
        "content": "<p>For learning about the connections between Lean4 and machine learning, I suggest you spend a day reading the <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving\">Machine Learning for Theorem Proving</a> stream.</p>",
        "id": 392219554,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695251228
    }
]