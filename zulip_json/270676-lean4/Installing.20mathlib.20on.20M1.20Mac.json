[
    {
        "content": "<p>After installing the mathlibtools, what is one supposed to do in order to use the library?</p>\n<p>For example, this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.array.lemmas</span>\n</code></pre></div>\n<p>produces an error response:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">file</span> <span class=\"bp\">'</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">array</span><span class=\"bp\">/</span><span class=\"n\">lemmas'</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">search</span> <span class=\"n\">path</span>\n<span class=\"n\">Use</span> <span class=\"bp\">'</span><span class=\"n\">lean</span> <span class=\"c1\">--path' to see where lean is looking, or https://leanprover-community.github.io/file-not-found.html for more</span>\n</code></pre></div>\n<p>under lean --path, I get this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">{</span>\n  <span class=\"s2\">\"is_user_leanpkg_path\"</span><span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">,</span>\n  <span class=\"s2\">\"leanpkg_path_file\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/Users/edeany/.lean/leanpkg.path\"</span><span class=\"o\">,</span>\n  <span class=\"s2\">\"path\"</span><span class=\"o\">:</span> <span class=\"o\">[</span>\n    <span class=\"s2\">\"/Users/edeany/.elan/toolchains/stable/bin/../library\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"/Users/edeany/.elan/toolchains/stable/bin/../lib/lean/library\"</span>\n  <span class=\"o\">]</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>Which doesn't seem to include mathlibtools where data resides.</p>",
        "id": 301750689,
        "sender_full_name": "Dean Young",
        "timestamp": 1664581136
    },
    {
        "content": "<p>oh hold on I just saw the link - I'll go complete the steps there</p>",
        "id": 301750956,
        "sender_full_name": "Dean Young",
        "timestamp": 1664581336
    },
    {
        "content": "<p>If you're talking about mathlib then just to note that this is a lean 3 library and you're posting in the lean 4 stream</p>",
        "id": 301751024,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1664581402
    },
    {
        "content": "<p>hold on ... i've got lean 4 ... does this mean I have to switch to lean 3 for the lib to work?</p>",
        "id": 301751465,
        "sender_full_name": "Dean Young",
        "timestamp": 1664581768
    },
    {
        "content": "<p>Yes for the time being, since mathlib is still being ported to Lean 4. But if you created your project with <code>leanproject new</code> (I'm assuming you're working on a project which depends on mathlib and not on mathlib itself), then there should be a <code>leanpkg.toml</code> file at the project root which instructs the elan you already have to fetch and use a Lean 3 build.</p>",
        "id": 301751820,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1664582059
    },
    {
        "content": "<p>If your default elan toolchain is Lean 4, <code>leanproject new</code> might throw an error like <code>error: toolchain 'leanprover/lean4:nightly' does not have the binary \".../.elan/toolchains/leanprover--lean4---nightly/bin/leanpkg\"</code>. This is an unfortunate consequence of the fact that <code>leanpkg</code> no longer exists in Lean 4, but it only affects creating new projects and fetching them, not day-to-day use. </p>\n<p>You can work around it by setting the default toolchain to Lean 3 by running <code>elan default leanprover-community/lean:stable</code> before running <code>leanproject new</code>. I don't know if there's a better workaround.</p>",
        "id": 301752033,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1664582273
    },
    {
        "content": "<p>Hello, I'm having some trouble installing lean and mathlib on my Macbook Air with an M2 chip. I've been following these instructions: <a href=\"https://leanprover-community.github.io/install/macos.html\">https://leanprover-community.github.io/install/macos.html</a></p>",
        "id": 360338291,
        "sender_full_name": "Stavan Jain",
        "timestamp": 1684777376
    },
    {
        "content": "<p>After completing step 4, I get this error message: <br>\n<a href=\"/user_uploads/3121/xBYRMsgKMuJX977834m368Ru/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/xBYRMsgKMuJX977834m368Ru/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/xBYRMsgKMuJX977834m368Ru/image.png\"></a></div>",
        "id": 360338420,
        "sender_full_name": "Stavan Jain",
        "timestamp": 1684777415
    },
    {
        "content": "<p>Please don't double-post, this won't help anything.</p>",
        "id": 360338449,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1684777428
    },
    {
        "content": "<p>I apologize, I thought I posted in the wrong place, so i decided to post here as well</p>",
        "id": 360338870,
        "sender_full_name": "Stavan Jain",
        "timestamp": 1684777535
    },
    {
        "content": "<p>You are posting in the lean4 channel, but the instructions you posted are for Lean 3</p>",
        "id": 360342143,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684778376
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"619297\">@Stavan Jain</span> Lean 3 does not have native M1 builds, you have to install brew under Rosetta (and run all installation commands inside the Rosetta shell).</p>\n<p>That being said, are you sure you don't want Lean 4? It is not backwards compatible, but a significant portion of the mathematics library has already been ported to Lean 4 and the porting process should be finished in a few months. It is highly dependent on what your immediate use for Lean is. If you just want to explore, Lean 4 is a good option.</p>",
        "id": 360358962,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1684783712
    },
    {
        "content": "<p>I just added homebrew arm64 distribution for elan-init, so everything should be fine if you just run <code>brew install elan-init</code> and use the Lean 4 version pinned by mathlib4.</p>",
        "id": 360394785,
        "sender_full_name": "rami3l",
        "timestamp": 1684798300
    },
    {
        "content": "<p>Lean 3 will probably be deprecated in the near future when Lean 4 reaches parity.</p>",
        "id": 360394907,
        "sender_full_name": "rami3l",
        "timestamp": 1684798381
    },
    {
        "content": "<p>Did you check we have ARM64 builds being built? The reason I didn't add <code>elan-init</code> for ARM previously was because we did not previously, which is worse behavior, someone then can install <code>elan</code> but immediately gets errors when they try to install toolchains.</p>",
        "id": 360536777,
        "sender_full_name": "Julian Berman",
        "timestamp": 1684849585
    },
    {
        "content": "<p>Ah nice, it looks like there indeed are <code>darwin_aarch64</code> builds in the <code>lean4-nightly</code> repo.</p>",
        "id": 360537037,
        "sender_full_name": "Julian Berman",
        "timestamp": 1684849647
    },
    {
        "content": "<p>Thank you for the responses! My research group is using Lean 3 so needed to install that. Will suggest lean 4 though. Everything is working as it should now.</p>",
        "id": 360853275,
        "sender_full_name": "Stavan Jain",
        "timestamp": 1684949347
    }
]