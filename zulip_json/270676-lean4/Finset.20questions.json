[
    {
        "content": "<p>In the Mathlib source code doc comments, <code>Finset</code> says it has both <code>insert</code> and <code>Finset.cons</code> which is the same but also requires <code>a âˆ‰ S</code>. I want something like <code>insert</code> where I can add an element and I don't care if it was already there or not. <code>Finset.cons</code> exists but not <code>Finset.insert</code> nor <code>Finset.union</code>. But I did find a workaround and used <code>Union.union fs {value}</code>. Then I thought maybe <code>Insert.insert fs value</code> would work but it doesn't.</p>\n<p>So <code>Union.union</code> can do what I want but it's a little ugly. I guess I have a few questions.</p>\n<ul>\n<li>Why is <code>Finset.cons</code> the only insertion operation included as a def on Finset?</li>\n<li>How is <code>insert</code> supposed to work? The code docs make it seem like it's trivial but I don't get it.</li>\n</ul>",
        "id": 402620291,
        "sender_full_name": "Alex Sweeney",
        "timestamp": 1700200033
    },
    {
        "content": "<p>To use <code>insert value fs</code> (note the argument order, it's opposite of what you have in your message) you need to make sure you have a <code>DecidableEq</code> instance</p>",
        "id": 402622288,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700201123
    }
]