[
    {
        "content": "<p>In Lean 4, if you use <code>rw [foo] at *</code> then it rewrites <code>foo</code> alongside with the remaining stuff. In this example (please ignore that it cannot be proved)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hac</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">d</span>  <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hab</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"bp\">*</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I think that <code>rw [hab] at *</code> should rewrite <code>a</code> only in <code>hac</code> and the goal (which is what it used to do in Lean 3). Unfortunately, it also rewrites itself, resulting in <code>hab : b = b</code> which is totally useless in case I want to use <code>hab</code> again.</p>\n<p>Is it intentional?</p>",
        "id": 374657411,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689175238
    },
    {
        "content": "<p>Probably not: presumably there is just an extra epicycle in the Lean 3 implementation of <code>rw</code> that guards against this, that wasn't carried across. I think it would be reasonable to open an issue (and helpful if you can identify either or both of: where this is prevented in Lean 3, and where the corresponding code would have to go in Lean 4).</p>",
        "id": 374778617,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689210679
    },
    {
        "content": "<p>I opened an issue:<br>\n<a href=\"https://github.com/leanprover/lean4/issues/2320\">https://github.com/leanprover/lean4/issues/2320</a><br>\nI did not identify the code that causes it because I don't understand metaprogramming.</p>",
        "id": 374878793,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689244237
    },
    {
        "content": "<p>Coincidentally, I was looking into how rewrite is implemented recently, the relevant function is <code>withLocation</code>. I'll add a more detailed description to the issue</p>",
        "id": 374896391,
        "sender_full_name": "Alex Keizer",
        "timestamp": 1689247890
    }
]