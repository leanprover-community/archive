[
    {
        "content": "<p>Hi, all. I'm moving to lean4 in time for AOC, and trying to run through some examples, and right now I\"m with this gem: </p>\n<p>def double (y : ℤ) :ℤ := <br>\n    y + y  </p>\n<p>Which complains of this: <br>\n16:4: <br>\nfailed to synthesize instance<br>\n  HAdd ℤ ℤ ?m.2742</p>\n<p>Do we need to import preludes or something to get started?</p>",
        "id": 401629152,
        "sender_full_name": "Omri Schwarz",
        "timestamp": 1699811039
    },
    {
        "content": "<p>I think the notation is introduced in Std or mathlib. What happens if you replace <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> with <code>Int</code>?</p>",
        "id": 401629308,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1699811177
    },
    {
        "content": "<p>Also <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a></p>",
        "id": 401629312,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1699811192
    },
    {
        "content": "<p>Yup, that was the issue. Thanks!</p>",
        "id": 401629417,
        "sender_full_name": "Omri Schwarz",
        "timestamp": 1699811333
    },
    {
        "content": "<p>You may want to add <code>set_option autoImplicit false</code> at the beginning of the file as well.</p>",
        "id": 401629420,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1699811338
    },
    {
        "content": "<p>Also, to actually stay true to the topic question: </p>\n<p>```omri.schwarz@ARL-DYCPQTJJHN Advent % ls ~/.elan/toolchains/*/bin<br>\n/Users/omri.schwarz/.elan/toolchains/leanprover--lean4---nightly/bin:<br>\nclang       lake        ld64.lld    lean        leanc       leanmake    llvm-ar</p>\n<p>/Users/omri.schwarz/.elan/toolchains/leanprover--lean4---stable/bin:<br>\nclang       lake        ld64.lld    lean        leanc       leanmake    llvm-ar</p>\n<p>/Users/omri.schwarz/.elan/toolchains/stable/bin:<br>\nclang       lake        ld64.lld    lean        leanc       leanmake    llvm-ar<br>\nomri.schwarz@ARL-DYCPQTJJHN Advent % </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Is</span> <span class=\"n\">leanpkg</span> <span class=\"n\">not</span> <span class=\"n\">part</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">tooling</span> <span class=\"n\">for</span> <span class=\"n\">Lean</span> <span class=\"mi\">4</span><span class=\"bp\">?</span>\n</code></pre></div>",
        "id": 401807231,
        "sender_full_name": "Omri Schwarz",
        "timestamp": 1699893960
    },
    {
        "content": "<p>The tooling for Lean 4 is elan and lake.</p>",
        "id": 401807338,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699893989
    },
    {
        "content": "<p>If you read documentation that led you to believe <code>leanpkg</code> would be there, can you link us to it so that we can correct it?</p>",
        "id": 401807426,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699894018
    },
    {
        "content": "<p>This was in a mess of crashed browser tabs, so finding won't be easy, but I'm rechecking all the live docs and will flag anything I find</p>",
        "id": 401811155,
        "sender_full_name": "Omri Schwarz",
        "timestamp": 1699895317
    },
    {
        "content": "<p>Perhaps archiving a few more repositories in the leanprover-community org would be a good idea at this point. (In particular <code>lean</code> and <code>doc-gen</code>? Maybe others.) Specifically it'd make searches like <a href=\"https://github.com/search?q=org%3Aleanprover-community+leanpkg+NOT+is%3Aarchived&amp;type=code\">https://github.com/search?q=org%3Aleanprover-community+leanpkg+NOT+is%3Aarchived&amp;type=code</a> a bit more useful.</p>",
        "id": 401811972,
        "sender_full_name": "Julian Berman",
        "timestamp": 1699895650
    },
    {
        "content": "<p>I never even thought of using <code>NOT is:archived</code> in a search, so I'm not convinced we gain anything by optimizing for that case</p>",
        "id": 401812322,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699895774
    },
    {
        "content": "<p>Given that this is the third or fourth time that someone has complained that <code>leanpkg</code> is missing, and no one can ever tell us why they expected it in the first place, maybe the toolchain should just come with a <code>leanpkg</code> that prints an error message and a link to the lake docs</p>",
        "id": 401812739,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699895920
    },
    {
        "content": "<p>I created <a href=\"https://github.com/leanprover/lean4/pull/2872\">lean4#2872</a></p>",
        "id": 401813697,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699896284
    }
]