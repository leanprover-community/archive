[
    {
        "content": "<p>[sorry - posted to wrong stream- I have reposted in mathlib4 but can't move or delete from here]</p>\n<p>I was reading through the Rat source, and noticed that it defines <code>isInt</code> but then seems to not use it much of anywhere. Is this to avoid needing to constantly unfold the definition? Could this be \"fixed\" by marking it as simp? While playing about, I also proved the following trivial things that I couldn't see in the library but which I may have overlooked. Are they worth adding, potentially as simp rules? Not sure if I've followed the naming convention or style guide.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--!</span>\n<span class=\"sd\">Some theorems describing cases where ℚ corresponds to ℤ.</span>\n<span class=\"sd\">-/</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">isInt_ofInt</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Rat.ofInt</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">isInt</span> <span class=\"bp\">=</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Rat.isInt</span><span class=\"o\">,</span> <span class=\"n\">Rat.ofInt</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">floor_eq_self_if_isInt</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a.isInt</span> <span class=\"bp\">→</span> <span class=\"n\">a.floor</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Rat.isInt</span><span class=\"o\">,</span> <span class=\"n\">Nat.beq_eq_true_eq</span><span class=\"o\">,</span> <span class=\"n\">Rat.floor</span><span class=\"o\">,</span> <span class=\"n\">Int.cast_ite</span><span class=\"o\">]</span>\n    <span class=\"n\">intro</span> <span class=\"n\">ha1</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">ha1</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">den_eq_one_iff</span> <span class=\"n\">a</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">ceil_eq_self_if_isInt</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a.isInt</span> <span class=\"bp\">→</span> <span class=\"n\">a.ceil</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Rat.isInt</span><span class=\"o\">,</span> <span class=\"n\">Nat.beq_eq_true_eq</span><span class=\"o\">,</span> <span class=\"n\">Rat.ceil</span><span class=\"o\">,</span> <span class=\"n\">Int.cast_ite</span><span class=\"o\">,</span> <span class=\"n\">Int.cast_add</span><span class=\"o\">,</span> <span class=\"n\">Int.cast_one</span><span class=\"o\">]</span>\n    <span class=\"n\">intro</span> <span class=\"n\">ha1</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">ha1</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">den_eq_one_iff</span> <span class=\"n\">a</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">sum_isInt</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a.isInt</span> <span class=\"bp\">→</span> <span class=\"n\">b.isInt</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">isInt</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Rat.isInt</span><span class=\"o\">,</span> <span class=\"n\">Nat.beq_eq_true_eq</span><span class=\"o\">,</span> <span class=\"n\">Rat.add_def</span><span class=\"o\">]</span>\n    <span class=\"n\">intro</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">Nat.cast_one</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">,</span> <span class=\"n\">ha</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Rat.normalize</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">sub_isInt</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a.isInt</span> <span class=\"bp\">→</span> <span class=\"n\">b.isInt</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">isInt</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Rat.isInt</span><span class=\"o\">,</span> <span class=\"n\">Nat.beq_eq_true_eq</span><span class=\"o\">,</span> <span class=\"n\">Rat.sub_def</span><span class=\"o\">]</span>\n    <span class=\"n\">intro</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">Nat.cast_one</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">,</span> <span class=\"n\">ha</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Rat.normalize</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_isInt</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a.isInt</span> <span class=\"bp\">→</span> <span class=\"n\">b.isInt</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">isInt</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Rat.isInt</span><span class=\"o\">,</span> <span class=\"n\">Nat.beq_eq_true_eq</span><span class=\"o\">,</span> <span class=\"n\">Rat.mul_def</span><span class=\"o\">]</span>\n    <span class=\"n\">intro</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Rat.normalize</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 391379640,
        "sender_full_name": "Matthew Pocock",
        "timestamp": 1694871948
    }
]