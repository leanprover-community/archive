[
    {
        "content": "<p>Has anyone setup their Lean4 with Doom Emacs?<br>\nI would highly appreciate a guide to setting it up.</p>",
        "id": 224676882,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612142632
    },
    {
        "content": "<p>I haven't had time to play with lean4 in a few weeks, so things may (and probably have) changed. In any case, this worked for me </p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">dash</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">flycheck</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">dash-functional</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">f</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">s</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">lsp-mode</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">lean4-mode</span> <span class=\"nb\">:recipe</span>\n  <span class=\"p\">(</span><span class=\"nb\">:host</span> <span class=\"nv\">github</span>\n   <span class=\"nb\">:repo</span> <span class=\"s\">\"leanprover/lean4\"</span>\n   <span class=\"nb\">:files</span> <span class=\"p\">(</span><span class=\"s\">\"lean4-mode/*.el\"</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>located in <code>packages.el</code></p>",
        "id": 224678160,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612144446
    },
    {
        "content": "<p>Thanks a lot for the tip <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> - though I can't seem to get the \"proof goals\" window to pop up.</p>",
        "id": 234168724,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618237803
    },
    {
        "content": "<p>Concretely, when placing my cursor on the <code>intro h</code> line here</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ex1</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">inl</span> <span class=\"n\">h1</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Or.inr</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n  <span class=\"bp\">|</span> <span class=\"n\">inr</span> <span class=\"n\">h2</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Or.inl</span>\n    <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>I get the following error to show up in my breadcrumb bar:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span> <span class=\"k\">in</span> <span class=\"n\">post</span><span class=\"bp\">-</span><span class=\"n\">command</span><span class=\"bp\">-</span><span class=\"n\">hook</span> <span class=\"o\">(</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">info</span><span class=\"bp\">-</span><span class=\"n\">buffer</span><span class=\"bp\">-</span><span class=\"n\">redisplay</span><span class=\"o\">):</span>\n<span class=\"o\">(</span><span class=\"n\">wrong</span><span class=\"bp\">-</span><span class=\"n\">type</span><span class=\"bp\">-</span><span class=\"n\">argument</span> <span class=\"n\">listp</span> <span class=\"bp\">#</span><span class=\"n\">s</span><span class=\"o\">(</span><span class=\"n\">hash</span><span class=\"bp\">-</span><span class=\"n\">table</span> <span class=\"n\">size</span> <span class=\"mi\">4</span> <span class=\"n\">test</span> <span class=\"n\">equal</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">size</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">threshold</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8125</span> <span class=\"n\">data</span>\n<span class=\"o\">(</span><span class=\"s2\">\"source\"</span> <span class=\"s2\">\"Lean 4 server\"</span> <span class=\"s2\">\"severity\"</span> <span class=\"mi\">3</span> <span class=\"s2\">\"range\"</span> <span class=\"bp\">#</span><span class=\"n\">s</span><span class=\"o\">(</span><span class=\"n\">hash</span><span class=\"bp\">-</span><span class=\"n\">table</span> <span class=\"n\">size</span> <span class=\"mi\">2</span> <span class=\"n\">test</span> <span class=\"n\">equal</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">size</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">threshold</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8125</span> <span class=\"n\">data</span>\n<span class=\"o\">(</span><span class=\"s2\">\"start\"</span> <span class=\"bp\">#</span><span class=\"n\">s</span><span class=\"o\">(</span><span class=\"n\">hash</span><span class=\"bp\">-</span><span class=\"n\">table</span> <span class=\"n\">size</span> <span class=\"mi\">2</span> <span class=\"n\">test</span> <span class=\"n\">equal</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">size</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">threshold</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8125</span> <span class=\"n\">data</span> <span class=\"o\">(</span><span class=\"s2\">\"line\"</span> <span class=\"mi\">0</span> <span class=\"s2\">\"character\"</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n <span class=\"s2\">\"end\"</span> <span class=\"bp\">#</span><span class=\"n\">s</span><span class=\"o\">(</span><span class=\"n\">hash</span><span class=\"bp\">-</span><span class=\"n\">table</span> <span class=\"n\">size</span> <span class=\"mi\">2</span> <span class=\"n\">test</span> <span class=\"n\">equal</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">size</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">threshold</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8125</span> <span class=\"n\">data</span> <span class=\"o\">(</span><span class=\"s2\">\"line\"</span> <span class=\"mi\">0</span> <span class=\"s2\">\"character\"</span> <span class=\"mi\">6</span><span class=\"o\">))))</span>\n <span class=\"s2\">\"message\"</span> <span class=\"s2\">\"id : ?m.2 → ?m.2\"</span><span class=\"o\">)))</span>\n</code></pre></div>",
        "id": 234173306,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618239360
    },
    {
        "content": "<p>Sorry, it has now been even longer since I played with lean4, so I can't help with this. BTW as <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> mentioned, the last line of the above code might be sufficient.</p>",
        "id": 234173365,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618239369
    },
    {
        "content": "<p>Oh, I just saw you were redirecting me here <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> , thanks a lot <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> .<br>\nI think If I can get the goals to show, I will be a very happy camper and most of my needs will be met for now.</p>",
        "id": 234177548,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618240568
    },
    {
        "content": "<p>Last time I tried, the \"next error\" buffer was working with C-c C-n, as usual. Does lean4+emacs have a goal window now?</p>",
        "id": 234177862,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618240672
    },
    {
        "content": "<p>My goal window opens up, but doesn't show anything and I get the error I posted above.</p>",
        "id": 234178159,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618240721
    },
    {
        "content": "<p>Do you have both lean3-mode and lean4-mode installed? If so I think you need to manually activate lean4-mode</p>",
        "id": 234178444,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618240821
    },
    {
        "content": "<p>Assuming lean3 is the default</p>",
        "id": 234178491,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618240836
    },
    {
        "content": "<p>(And again, I'm probably completely wrong since I've been out of the lean4 loop for a while)</p>",
        "id": 234178642,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618240903
    },
    {
        "content": "<p>yes, I think I deactivated lean3 - lemme double check.</p>",
        "id": 234179211,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618241104
    },
    {
        "content": "<p>This might be a version issue with lsp-mode, they changed data structures at some point. I can take a closer look later.</p>",
        "id": 234180363,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1618241565
    },
    {
        "content": "<p>Thanks a bunch <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> , I appreciate it.</p>",
        "id": 234181919,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618242092
    },
    {
        "content": "<p>I've upgraded to the latest Doom Emacs</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">New</span> <span class=\"n\">revision</span><span class=\"o\">:</span> <span class=\"n\">ce65645fb8</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"n\">weeks</span> <span class=\"n\">ago</span><span class=\"o\">)</span>\n<span class=\"bp\">...</span>\n    <span class=\"bp\">✓</span> <span class=\"o\">(</span><span class=\"mi\">91</span><span class=\"bp\">/</span><span class=\"mi\">172</span><span class=\"o\">)</span> <span class=\"n\">lsp</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"n\">updated</span> <span class=\"o\">(</span><span class=\"n\">db385a4</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">eda51c2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>and it seems to still work</p>",
        "id": 234232233,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1618261890
    },
    {
        "content": "<p>K, will try.</p>",
        "id": 234233897,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618262750
    },
    {
        "content": "<p>Thanks for the follow up!</p>",
        "id": 234233957,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618262766
    },
    {
        "content": "<p>How should lean4 be install for Doom Emacs to pick it up?</p>",
        "id": 234236616,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264330
    },
    {
        "content": "<p>Oh, right, at the end of <a href=\"https://leanprover.github.io/lean4/doc/make/index.html\">https://leanprover.github.io/lean4/doc/make/index.html</a></p>",
        "id": 234236886,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264503
    },
    {
        "content": "<p>will try</p>",
        "id": 234236891,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264505
    },
    {
        "content": "<p>It also works with <code>emacs-dev</code>, which is how I use it. It will just ignore the lean4-mode coming with that, so you need the <code>package!</code> decl instead.</p>",
        "id": 234237051,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1618264594
    },
    {
        "content": "<p>Not gonna lie, but I struggle a lot with the nix setup.</p>",
        "id": 234237204,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264689
    },
    {
        "content": "<p>(I'm assuming you are referencing the <code>emacs-dev</code> as an extension of the <code>nix-shell</code>. For some reason it doesn't play nice with my <code>fish</code> shell and that complicates it a bit.</p>",
        "id": 234237253,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264741
    },
    {
        "content": "<p>OK I just saw your tweet about the course with Nix + CI combo and that does sound neat.</p>",
        "id": 234237500,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264897
    },
    {
        "content": "<p>Note that we don't actually advertise using Nix for the course :) <a href=\"https://github.com/IPDSnelting/tba-2021#tba-2021\">https://github.com/IPDSnelting/tba-2021#tba-2021</a></p>",
        "id": 234238756,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1618265652
    },
    {
        "content": "<p>Oh neat.</p>",
        "id": 234239630,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618266222
    },
    {
        "content": "<p>So does this mean that I have to download a new <code>nix build</code> for every project that I want to use Lean4 in ?</p>",
        "id": 234239647,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618266239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Emacs works with the nix build now! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 234242674,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618268313
    },
    {
        "content": "<p>Thanks a lot.</p>",
        "id": 234242678,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618268316
    },
    {
        "content": "<p>I setup Lean3 with the mathlib stuff and Lean4 with emacs so I guess this works for me well enough.</p>",
        "id": 234242990,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618268509
    },
    {
        "content": "<p>It seems that the (very brief) doom emacs instructions from the lean4-mode readme no longer works. I made a pull request with a fix: <a href=\"https://github.com/leanprover/lean4-mode/pull/26\">https://github.com/leanprover/lean4-mode/pull/26</a></p>",
        "id": 319876175,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1673045172
    },
    {
        "content": "<p>After updating my emacs, lean-input doesn't seem to work anymore. The <a href=\"https://github.com/leanprover/lean4-mode/commit/2c6ef33f476fdf5eb5e4fa4fa023ba8b11372440\">last commit</a> seems to be related, but I'm not sure, since doom emacs doesn't use package.el AFAIU. Did anyone else here have an issue with this?</p>",
        "id": 341824930,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1678806931
    },
    {
        "content": "<p>Yeah I havent been using emacs with lean but when I tried I ran into the same issue.</p>",
        "id": 341825309,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678807001
    },
    {
        "content": "<p>Would the following (in config.el) work as a temporary fix?</p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">use-package!</span><span class=\"w\"> </span><span class=\"nv\">lean4-mode</span>\n<span class=\"w\">  </span><span class=\"nb\">:hook</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nv\">lean4-input-setup</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 341834834,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678808755
    },
    {
        "content": "<p>The answer is no :(</p>",
        "id": 341835196,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678808840
    },
    {
        "content": "<p>But surely an elisp guru would be able to immediately give us the right recipe to make such a workaround actually work.</p>",
        "id": 341835818,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678808993
    },
    {
        "content": "<p>Unfortunately, I am not that guru</p>",
        "id": 341835916,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678809005
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/270676-lean4/topic/Doom.20Emacs.20setup/near/341825309\">said</a>:</p>\n<blockquote>\n<p>Yeah I havent been using emacs with lean but when I tried I ran into the same issue.</p>\n</blockquote>\n<p>it's reassuring to know that at least it's not just me <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> maybe it's a good dabble into some elisp <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 341842628,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1678810317
    },
    {
        "content": "<p>ok, so one thing that does work is manually calling <code>M-x set-input-method</code> and then choosing <code>Lean</code> there</p>",
        "id": 341847377,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1678811407
    },
    {
        "content": "<p>What does \"doesn't seem to work anymore\" mean specifically?</p>",
        "id": 341848271,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1678811641
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> at least for me, writing <code>\\to</code> doesn't give me the unicode arrow, for example.</p>",
        "id": 341848425,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678811673
    },
    {
        "content": "<p>I don't know if there are other issues outside of the unicode input support</p>",
        "id": 341848510,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678811703
    },
    {
        "content": "<p>But after the above command or <code>M-x toggle-input-method</code> (<code>C-\\</code>) it works?</p>",
        "id": 341848640,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1678811735
    },
    {
        "content": "<p>let me try</p>",
        "id": 341849610,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678811950
    },
    {
        "content": "<p>yes! that does it <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span></p>",
        "id": 341850007,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678812051
    },
    {
        "content": "<p>to be precise, I tried <code>toggle-input-method</code> and that made things okay again. I assume <code>set-input-method</code> also works as Andres mentioned, but I didn't check myself.</p>",
        "id": 341850652,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678812211
    },
    {
        "content": "<p>I'm pretty sure this started after a doom update for me. And this stack trace isn't looking great... <a href=\"/user_uploads/3121/0BAHy8FYLcQKxGluHJAkMbwF/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/0BAHy8FYLcQKxGluHJAkMbwF/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/0BAHy8FYLcQKxGluHJAkMbwF/image.png\"></a></div>",
        "id": 341850738,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1678812232
    },
    {
        "content": "<p>Just curious, has anyone been able to find a usable workaround for this issue?</p>",
        "id": 341920611,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1678834578
    },
    {
        "content": "<p>I'm trying to use Doom Emacs for Lean 4 development, but I can't see type information or proof goals. I get the error that says <a href=\"/user_uploads/3121/FapPOetkhtXYIikNEo-R9RdO/Screenshot_20230606_222707.png\">\"lean get info: (json-readtable-error 47).\"</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/FapPOetkhtXYIikNEo-R9RdO/Screenshot_20230606_222707.png\" title=\"&quot;lean get info: (json-readtable-error 47).&quot;\"><img src=\"/user_uploads/3121/FapPOetkhtXYIikNEo-R9RdO/Screenshot_20230606_222707.png\"></a></div>",
        "id": 364008083,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1686059088
    },
    {
        "content": "<p>This does sound like Lean 3 mode is being activated instead. Try setting <code>(setq lean4-autodetect-lean3 t)</code> (and perhaps loading <code>lean4-mode</code> after <code>lean-mode</code>) to make the two modes coexist peacefully.</p>",
        "id": 364010378,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1686059597
    },
    {
        "content": "<p>It didn't work out. Here are some parts of my <code>init.el</code>, <code>config.el</code>, and <code>packages.el</code>:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>init.el</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">doom!</span><span class=\"w\"> </span><span class=\"nb\">:completion</span>\n<span class=\"w\">       </span><span class=\"nv\">company</span><span class=\"w\">           </span><span class=\"c1\">; the ultimate code completion backend</span>\n\n<span class=\"w\">       </span><span class=\"nb\">:tools</span>\n<span class=\"w\">       </span><span class=\"nv\">lookup</span><span class=\"w\">              </span><span class=\"c1\">; navigate your code and its documentation</span>\n<span class=\"w\">       </span><span class=\"nv\">lsp</span><span class=\"w\">               </span><span class=\"c1\">; M-x vscode</span>\n<span class=\"w\">       </span><span class=\"nv\">magit</span><span class=\"w\">             </span><span class=\"c1\">; a git porcelain for Emacs</span>\n<span class=\"w\">       </span><span class=\"nv\">pdf</span><span class=\"w\">               </span><span class=\"c1\">; pdf enhancements</span>\n<span class=\"w\">       </span><span class=\"nv\">tree-sitter</span><span class=\"w\">       </span><span class=\"c1\">; syntax and parsing, sitting in a tree...</span>\n\n<span class=\"w\">       </span><span class=\"nb\">:lang</span>\n<span class=\"w\">       </span><span class=\"nv\">emacs-lisp</span><span class=\"w\">        </span><span class=\"c1\">; drown in parentheses</span>\n<span class=\"w\">       </span><span class=\"nv\">latex</span><span class=\"w\">             </span><span class=\"c1\">; writing papers in Emacs has never been so fun</span>\n<span class=\"w\">       </span><span class=\"nv\">lean</span><span class=\"w\">              </span><span class=\"c1\">; for folks with too much to prove</span>\n<span class=\"w\">       </span><span class=\"nv\">markdown</span><span class=\"w\">          </span><span class=\"c1\">; writing docs for people to ignore</span>\n<span class=\"w\">       </span><span class=\"nv\">org</span><span class=\"w\">               </span><span class=\"c1\">; organize your plain life in plain text</span>\n<span class=\"w\">       </span><span class=\"nv\">sh</span><span class=\"w\">                </span><span class=\"c1\">; she sells {ba,z,fi}sh shells on the C xor</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n</div></div>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>config.el</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nf\">user-full-name</span><span class=\"w\"> </span><span class=\"s\">\"Bulhwi Cha\"</span>\n<span class=\"w\">      </span><span class=\"nv\">user-mail-address</span><span class=\"w\"> </span><span class=\"s\">\"chabulhwi@semmalgil.com\"</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">doom-font</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">font-spec</span><span class=\"w\"> </span><span class=\"nb\">:family</span><span class=\"w\"> </span><span class=\"s\">\"Victor Mono\"</span><span class=\"w\"> </span><span class=\"nb\">:size</span><span class=\"w\"> </span><span class=\"mi\">35</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"nv\">doom-variable-pitch-font</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">font-spec</span><span class=\"w\"> </span><span class=\"nb\">:family</span><span class=\"w\"> </span><span class=\"s\">\"Noto Sans CJK KR\"</span><span class=\"w\"> </span><span class=\"nb\">:size</span><span class=\"w\"> </span><span class=\"mi\">35</span><span class=\"p\">))</span>\n<span class=\"w\">      </span><span class=\"nv\">doom-big-font</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">font-spec</span><span class=\"w\"> </span><span class=\"nb\">:family</span><span class=\"w\"> </span><span class=\"s\">\"Victor Mono\"</span><span class=\"w\"> </span><span class=\"nb\">:size</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">doom-theme</span><span class=\"w\"> </span><span class=\"ss\">'doom-one</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">display-line-numbers-type</span><span class=\"w\"> </span><span class=\"no\">t</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">org-directory</span><span class=\"w\"> </span><span class=\"s\">\"~/org/\"</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">lean4-autodetect-lean3</span><span class=\"w\"> </span><span class=\"no\">t</span><span class=\"p\">)</span>\n</code></pre></div>\n</div></div>\n<p><code>packages.el</code>:</p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">package!</span><span class=\"w\"> </span><span class=\"nv\">lean4-mode</span><span class=\"w\"> </span><span class=\"nb\">:recipe</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nb\">:host</span><span class=\"w\"> </span><span class=\"nv\">github</span>\n<span class=\"w\">   </span><span class=\"nb\">:repo</span><span class=\"w\"> </span><span class=\"s\">\"leanprover/lean4-mode\"</span>\n<span class=\"w\">   </span><span class=\"nb\">:files</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"*.el\"</span><span class=\"w\"> </span><span class=\"s\">\"data\"</span><span class=\"p\">)))</span>\n</code></pre></div>",
        "id": 364018236,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1686061279
    },
    {
        "content": "<p>I didn't include <code>lean-mode</code> in my <code>packages.el</code> file.</p>",
        "id": 364020500,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1686061781
    },
    {
        "content": "<p>This issue was already reported: <a href=\"https://github.com/leanprover/lean4-mode/pull/39\">leanprover/lean4-mode#39</a>.</p>",
        "id": 364035022,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1686064709
    },
    {
        "content": "<p>It does look like lean4-mode expects to be loaded after lean-mode. If you look at <code>auto-mode-alist</code>, I assume you will see the Lean 3 extension first</p>",
        "id": 364037772,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686065201
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/Doom.20Emacs.20setup/near/364037772\">said</a>:</p>\n<blockquote>\n<p>If you look at <code>auto-mode-alist</code>, I assume you will see the Lean 3 extension first</p>\n</blockquote>\n<p>Sorry, I'm not sure how to do it. But installing <code>lean-mode</code> and <code>company-lean</code> didn't solve the issue.</p>",
        "id": 364051293,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1686068076
    },
    {
        "content": "<p>Let me take a step back, do you actually intend to use both Lean 3 and Lean 4? If not, you should not list the <code>lean</code> module in your <code>init.el</code> or otherwise install <code>lean-mode</code></p>",
        "id": 364052603,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686068372
    },
    {
        "content": "<p>I just want to use Lean 4. That's all.</p>",
        "id": 364053068,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1686068479
    },
    {
        "content": "<p>Then don't use anything <code>lean</code> that's not followed by <code>4</code> :)</p>",
        "id": 364053515,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686068575
    },
    {
        "content": "<p><del>Well, it's still not working:</del></p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>init.el</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">doom!</span><span class=\"w\"> </span><span class=\"nb\">:completion</span>\n<span class=\"w\">       </span><span class=\"nv\">company</span><span class=\"w\">           </span><span class=\"c1\">; the ultimate code completion backend</span>\n\n<span class=\"w\">       </span><span class=\"nb\">:tools</span>\n<span class=\"w\">       </span><span class=\"nv\">lookup</span><span class=\"w\">              </span><span class=\"c1\">; navigate your code and its documentation</span>\n<span class=\"w\">       </span><span class=\"nv\">lsp</span><span class=\"w\">               </span><span class=\"c1\">; M-x vscode</span>\n<span class=\"w\">       </span><span class=\"nv\">magit</span><span class=\"w\">             </span><span class=\"c1\">; a git porcelain for Emacs</span>\n<span class=\"w\">       </span><span class=\"nv\">pdf</span><span class=\"w\">               </span><span class=\"c1\">; pdf enhancements</span>\n<span class=\"w\">       </span><span class=\"nv\">tree-sitter</span><span class=\"w\">       </span><span class=\"c1\">; syntax and parsing, sitting in a tree...</span>\n\n<span class=\"w\">       </span><span class=\"nb\">:lang</span>\n<span class=\"w\">       </span><span class=\"nv\">emacs-lisp</span><span class=\"w\">        </span><span class=\"c1\">; drown in parentheses</span>\n<span class=\"w\">       </span><span class=\"nv\">latex</span><span class=\"w\">             </span><span class=\"c1\">; writing papers in Emacs has never been so fun</span>\n<span class=\"w\">       </span><span class=\"c1\">;;lean              ; for folks with too much to prove</span>\n<span class=\"w\">       </span><span class=\"nv\">markdown</span><span class=\"w\">          </span><span class=\"c1\">; writing docs for people to ignore</span>\n<span class=\"w\">       </span><span class=\"nv\">org</span><span class=\"w\">               </span><span class=\"c1\">; organize your plain life in plain text</span>\n<span class=\"w\">       </span><span class=\"nv\">sh</span><span class=\"w\">                </span><span class=\"c1\">; she sells {ba,z,fi}sh shells on the C xor</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n</div></div>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>config.el</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nf\">user-full-name</span><span class=\"w\"> </span><span class=\"s\">\"Bulhwi Cha\"</span>\n<span class=\"w\">      </span><span class=\"nv\">user-mail-address</span><span class=\"w\"> </span><span class=\"s\">\"chabulhwi@semmalgil.com\"</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">doom-font</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">font-spec</span><span class=\"w\"> </span><span class=\"nb\">:family</span><span class=\"w\"> </span><span class=\"s\">\"Victor Mono\"</span><span class=\"w\"> </span><span class=\"nb\">:size</span><span class=\"w\"> </span><span class=\"mi\">35</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"nv\">doom-variable-pitch-font</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">font-spec</span><span class=\"w\"> </span><span class=\"nb\">:family</span><span class=\"w\"> </span><span class=\"s\">\"Noto Sans CJK KR\"</span><span class=\"w\"> </span><span class=\"nb\">:size</span><span class=\"w\"> </span><span class=\"mi\">35</span><span class=\"p\">))</span>\n<span class=\"w\">      </span><span class=\"nv\">doom-big-font</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">font-spec</span><span class=\"w\"> </span><span class=\"nb\">:family</span><span class=\"w\"> </span><span class=\"s\">\"Victor Mono\"</span><span class=\"w\"> </span><span class=\"nb\">:size</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">doom-theme</span><span class=\"w\"> </span><span class=\"ss\">'doom-one</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">display-line-numbers-type</span><span class=\"w\"> </span><span class=\"no\">t</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">setq</span><span class=\"w\"> </span><span class=\"nv\">org-directory</span><span class=\"w\"> </span><span class=\"s\">\"~/org/\"</span><span class=\"p\">)</span>\n</code></pre></div>\n</div></div>\n<p><code>packages.el</code>:</p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">package!</span><span class=\"w\"> </span><span class=\"nv\">lean4-mode</span><span class=\"w\"> </span><span class=\"nb\">:recipe</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nb\">:host</span><span class=\"w\"> </span><span class=\"nv\">github</span>\n<span class=\"w\">   </span><span class=\"nb\">:repo</span><span class=\"w\"> </span><span class=\"s\">\"leanprover/lean4-mode\"</span>\n<span class=\"w\">   </span><span class=\"nb\">:files</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"*.el\"</span><span class=\"w\"> </span><span class=\"s\">\"data\"</span><span class=\"p\">)))</span>\n</code></pre></div>",
        "id": 364055965,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1686069128
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/opga9cRxh1vrDTfk1dyTS13z/Screenshot_20230607_014501.png\">It works now!</a> Thanks for your help. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/opga9cRxh1vrDTfk1dyTS13z/Screenshot_20230607_014501.png\" title=\"It works now!\"><img src=\"/user_uploads/3121/opga9cRxh1vrDTfk1dyTS13z/Screenshot_20230607_014501.png\"></a></div>",
        "id": 364057083,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1686069419
    },
    {
        "content": "<p>my apologies for bumping this thread. I created a doom emacs module for Lean 4 and opened a <a href=\"https://github.com/doomemacs/doomemacs/pull/7439\">PR in the doomemacs repo</a>.</p>",
        "id": 391578078,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1694987912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599027\">@Leni Aniva</span> Very cool! Might it be better to add it to the existing lean module with a +lean4 flag? I just wonder if changes to modules are reviewed faster than entirely new modules</p>",
        "id": 393544126,
        "sender_full_name": "Joey Eremondi",
        "timestamp": 1695837660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"384488\">Joey Eremondi</span> <a href=\"#narrow/stream/270676-lean4/topic/Doom.20Emacs.20setup/near/393544126\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"599027\">Leni Aniva</span> Very cool! Might it be better to add it to the existing lean module with a +lean4 flag? I just wonder if changes to modules are reviewed faster than entirely new modules</p>\n</blockquote>\n<p>I don't think any PRs will go through before this finishes: <a href=\"https://discourse.doomemacs.org/t/do-not-pr/2406\">https://discourse.doomemacs.org/t/do-not-pr/2406</a>. Also if <code>lean4</code> is added as a flag it would make it impossible to install lean 3 and 4 side by side.</p>",
        "id": 394536290,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1696294907
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"384488\">Joey Eremondi</span> <a href=\"#narrow/stream/270676-lean4/topic/Doom.20Emacs.20setup/near/393544126\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"599027\">Leni Aniva</span> Very cool! Might it be better to add it to the existing lean module with a +lean4 flag? I just wonder if changes to modules are reviewed faster than entirely new modules</p>\n</blockquote>\n<p>This would make sense if we have some sort of mechanism to allow lean 3 and 4 to coexist and automatically determine whether its 3 or 4 from reading the project structure or by reading a <code>.dir-local.el</code>, but I think its better to put this on hold before the doom emacs modules are separated out into their own repository.</p>",
        "id": 395628803,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1696833567
    }
]