[
    {
        "content": "<p>Currently the extension seems to periodically call the elaborator and kernel and show results on the infoview. Thus we get a live update on the infoview for whatever we type in. This is awesome in many ways.</p>\n<p>At the same time it might be nice to have an option that only runs lean on a file when the file is saved. Sometimes, when I am typing in some annoyingly long statement with sets/finsets etc, the extension gets stuck on some issue (such as typeclass inferences) even before I am done typing in everything. Sometimes it is just an incomplete import statement that I would have finished typing in a second. As I have pointed out in a thread or two before, some of these lean threads don't stop running until the extension is started, and my machine heats up. Currently the default value for <code>Lean4: Elaboration Delay</code> settings is 200 ms, so the extension starts 5 times before I am done typing a long import. Changing this setting to a higher value is a quick fix, but not ideal.</p>",
        "id": 369728325,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1687790408
    },
    {
        "content": "<p>Note that the elaboration delay counter resets on every keypress, so if you type something in with less than 200ms (or whatever you set it to) between every keypress, elaboration should only run once. But maybe you already knew that! In any case update-on-save sounds like a useful feature, perhaps especially when the infoview is paused; could you make a feature request on the vscode-lean4 repo?</p>",
        "id": 369774282,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1687798599
    },
    {
        "content": "<p>Okay. Will do</p>",
        "id": 369802545,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1687805213
    },
    {
        "content": "<p>I think I have been told about the way elaboration timer resets (or read it somewhere) but, at least on macOS, there are spurious processes that continue to run in the background even after the relevant code is removed.</p>",
        "id": 369803019,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1687805343
    },
    {
        "content": "<p>But that's a different problem altogether</p>",
        "id": 369803413,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1687805453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20extension.20feature.20request/near/369803019\">said</a>:</p>\n<blockquote>\n<p>I think I have been told about the way elaboration timer resets (or read it somewhere) but, at least on macOS, there are spurious processes that continue to run in the background even after the relevant code is removed.</p>\n</blockquote>\n<p>Ah, yes, if you change <code>import</code>s, this will launch a process running <code>lake print-paths</code>. This process may continue to run for a while even when it is no longer needed because the file changed again. There are potentially some improvements to be made to the server and/or Lake to clean this up better.</p>",
        "id": 369811875,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1687807660
    },
    {
        "content": "<p>an update-on-save feature might at least give users control over when these processes are triggered</p>",
        "id": 369820199,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1687809599
    },
    {
        "content": "<p>It is not only with imports. This issue arises when writing statements that involve membership or subset relationship in finsets, fintypes (and possibly other places). No clue why.</p>",
        "id": 369821903,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1687810017
    },
    {
        "content": "<p>These are not quite the same issue. One is runaway processes, the other runaway elaboration threads</p>",
        "id": 369822404,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1687810159
    },
    {
        "content": "<p>(and we should solve both of them, but the runaway processes will probably be solved first)</p>",
        "id": 369822489,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1687810193
    },
    {
        "content": "<p>Okay. But on the whole, especially on weaker machines, an optional \"update on save\" feature would be nice to have. When chosen, both elaborator re-run and and infoview updates happen when the file is saved. Of course, when autosave is turned on, this automatically translates to the present behaviour.</p>",
        "id": 369823178,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1687810377
    },
    {
        "content": "<p>Github issue : <a href=\"https://github.com/leanprover/vscode-lean4/issues/305\">https://github.com/leanprover/vscode-lean4/issues/305</a></p>",
        "id": 369823868,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1687810587
    }
]