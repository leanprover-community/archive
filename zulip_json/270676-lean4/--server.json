[
    {
        "content": "<p>How hard would it be to reimplement Lean 3's <code>lean --server</code> interface for Lean 4?</p>",
        "id": 364187107,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686122941
    },
    {
        "content": "<p>What is the significant difference between Lean 3's <code>lean --sever</code> and Lean 4's <code>lean --server</code> you would like to see reimplemented?</p>",
        "id": 364191862,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686124174
    },
    {
        "content": "<p>The former is compatible with <a href=\"https://github.com/leanprover/lean-mode\">https://github.com/leanprover/lean-mode</a>.</p>",
        "id": 364192041,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124204
    },
    {
        "content": "<p>And the later is compatible with <a href=\"https://github.com/leanprover/lean4-mode\">https://github.com/leanprover/lean4-mode</a>.</p>",
        "id": 364192131,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686124235
    },
    {
        "content": "<p>i.e. I am a bit confused as to what you are looking for here</p>",
        "id": 364192306,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686124281
    },
    {
        "content": "<p>lean4-mode basically doesn't work for me, so I would prefer to use lean-mode.</p>",
        "id": 364192389,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124311
    },
    {
        "content": "<p>In brief, lean-mode works too well!</p>",
        "id": 364192675,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124382
    },
    {
        "content": "<p>Ah, if I recall correctly, both <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> and Leo use Emacs and lean4-mode to develop Lean 4,s o I imagine they may be able to help debug any problems you may be having and/or advise in reimplementing any lost features from the transition (or explain why they were left out).</p>",
        "id": 364192967,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686124463
    },
    {
        "content": "<p>I think most of my lean4-mode issues are results of its being built on top of Emacs's lsp-mode, so I don't have a lot of hope for fixing them</p>",
        "id": 364192970,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124464
    },
    {
        "content": "<p>Oh, I imagine that would be hard to fix considering how intimately the Lean 4 server and thus the language's interactivity features are tied into the LSP protocol.</p>",
        "id": 364193115,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686124514
    },
    {
        "content": "<p>hence why I wanted to at least consider the option of starting with something that already works great (<code>lean-mode</code>) and sidestepping LSP entirely</p>",
        "id": 364193331,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124565
    },
    {
        "content": "<p>Leo has switched to vscode by now, I also do emacs and lean4-mode, haven't really had issues in months. If you just tell us your issue I would imagine we could find a fix</p>\n<p>Diverging from a standard like LSP just to accommodate conpatabolity with a software that we have a replacement for doesn't seems sensible to me</p>",
        "id": 364193391,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686124578
    },
    {
        "content": "<p>There are many issues. Here is one: <a href=\"#narrow/stream/270676-lean4/topic/emacs/near/323963581\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/emacs/near/323963581</a></p>",
        "id": 364193534,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124617
    },
    {
        "content": "<p>Another is that messages in the minibuffer tend to appear for about 30 ms only, or flicker continuously</p>",
        "id": 364193650,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124654
    },
    {
        "content": "<p>I had to disable some parts of <code>lsp-mode</code> just to get something usable at all.</p>",
        "id": 364193720,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124671
    },
    {
        "content": "<p>The issues in that thread are mostly people installing lean mode and lean4 mode at the same time or weird Unicode stuff that is fixable no?</p>\n<p>The minibufger thing I can definitely not reproduce, works perfectly fine ootb for me.</p>",
        "id": 364194143,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686124791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>  As to your our original question, you would likely have to rewrite most of the Lean 4 server code to work with whatever protocol <code>lean-mode</code> was using. You would also likely have difficulty in porting many new interactive features like Widgets, which heavily exploit the LSP protocol structure to function.</p>",
        "id": 364194373,
        "sender_full_name": "Mac Malone",
        "timestamp": 1686124840
    },
    {
        "content": "<p>then there are a number of more minor functionality/predictability issues that I'm not sure whether to attribute to Lean 4 or to lsp-mode, e.g., error messages for unknown tactics are reported on the second character of the tactic name and so on</p>",
        "id": 364194441,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686124865
    },
    {
        "content": "<p>I feel that lsp-mode tends to block emacs on server interactions much more than lean-mode did</p>",
        "id": 364195119,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686125055
    },
    {
        "content": "<p>but again some of this might be difficult to separate from the Lean 3 vs Lean 4 difference</p>",
        "id": 364195175,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686125074
    },
    {
        "content": "<p>How about you give us your config and point to files where you are having issues so we can work towards a fix, because the default experience is really not anywhere close to as bad as you are describing.</p>",
        "id": 364195316,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1686125114
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/270676-lean4/topic/--server/near/364193650\">said</a>:</p>\n<blockquote>\n<p>Another is that messages in the minibuffer tend to appear for about 30 ms only, or flicker continuously</p>\n</blockquote>\n<p>I can confirm this when the info view is open, haven't investigated it yet. It's hard not to think of time spent on Emacs as wasted time given the dearth of users</p>",
        "id": 364196227,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686125344
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/--server/near/364194143\">said</a>:</p>\n<blockquote>\n<p>The issues in that thread are mostly people installing lean mode and lean4 mode at the same time or weird Unicode stuff that is fixable no?</p>\n</blockquote>\n<p>The Unicode stuff may be fixable but meanwhile it means I cannot edit files that contain non-BMP characters, e.g., all category theory files.</p>",
        "id": 364196244,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686125347
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/--server/near/364196227\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/270676-lean4/topic/--server/near/364193650\">said</a>:</p>\n<blockquote>\n<p>Another is that messages in the minibuffer tend to appear for about 30 ms only, or flicker continuously</p>\n</blockquote>\n<p>I can confirm this when the info view is open, haven't investigated it yet.</p>\n</blockquote>\n<p>Aha, I hadn't figured out that this is connected--of course I've got the info view open a lot of the time.</p>",
        "id": 364197908,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686125824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/--server/near/364195316\">said</a>:</p>\n<blockquote>\n<p>How about you give us your config and point to files where you are having issues so we can work towards a fix, because the default experience is really not anywhere close to as bad as you are describing.</p>\n</blockquote>\n<p>I guess the experience depends a lot on what you are doing: writing a program, or doing a stand-alone formalization, or working on mathlib. I did AoC in December in Lean 4 and I don't remember having any issues with lean4-mode. I also wasn't using fancy unicode characters, the info view, or anything that took more than 1 second to typecheck.</p>",
        "id": 364247634,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686137529
    },
    {
        "content": "<p>There were a few requests on the lean4-mode issue tracker about supporting eglot in addition to(/instead of?) lsp-mode. I have no idea how they compare, but it might be worth a look given that is part of Emacs 29.</p>",
        "id": 364249441,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686137936
    },
    {
        "content": "<p>I haven't used eglot but from what I could learn about it, it looks closer to my preferences.</p>",
        "id": 364261397,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686140597
    },
    {
        "content": "<p>One drastic option that nevertheless seems viable is to use emacs for editing only, and also open the file in VS Code. VS Code automatically rereads the file when it changes and sends the new contents to Lean.</p>",
        "id": 364261914,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686140734
    },
    {
        "content": "<p>I guess you could then run emacs inside a terminal pane inside VScode?</p>",
        "id": 364262311,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686140847
    },
    {
        "content": "<p>should be possible provided VS Code doesn't steal any keybindings</p>",
        "id": 364262570,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686140906
    },
    {
        "content": "<p>yeah, I won't make any claims about that <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 364262663,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686140929
    }
]