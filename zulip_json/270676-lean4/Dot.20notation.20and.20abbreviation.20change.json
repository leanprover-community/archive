[
    {
        "content": "<p>Is the difference in pretty printing for dot notation on abbreviations a known problem? MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"n\">V'</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Foo</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">V'</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">V</span> <span class=\"bp\">→</span> <span class=\"n\">V'</span> <span class=\"bp\">→</span> <span class=\"n\">K</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">Bar</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Foo</span> <span class=\"n\">V</span> <span class=\"n\">V</span> <span class=\"n\">K</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Bar.val</span> <span class=\"o\">[</span><span class=\"n\">Inhabited</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Bar</span> <span class=\"n\">V</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"o\">:=</span> <span class=\"n\">C</span> <span class=\"n\">default</span> <span class=\"n\">default</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">[</span><span class=\"n\">Inhabited</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Bar</span> <span class=\"n\">V</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">C.val</span> <span class=\"bp\">=</span> <span class=\"n\">C.val</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The goal here looks like <code>Bar.val C = Bar.val C</code>, whereas in Lean 3 it looks like <code>C.val = C.val</code></p>",
        "id": 400183000,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1699034564
    },
    {
        "content": "<p>I think the <code>abbrev</code> is a distraction here, even using <code>Foo</code> alone results in no dot notation</p>",
        "id": 400183941,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699034904
    },
    {
        "content": "<p>Oh true, I didn't realise that!</p>",
        "id": 400184728,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1699035258
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">Foo</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">V</span> <span class=\"bp\">→</span> <span class=\"n\">K</span>\n<span class=\"kd\">def</span> <span class=\"n\">Foo.val</span> <span class=\"o\">[</span><span class=\"n\">Inhabited</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"n\">V</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"o\">:=</span> <span class=\"n\">C</span> <span class=\"n\">default</span>\n<span class=\"kd\">example</span> <span class=\"o\">[</span><span class=\"n\">Inhabited</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"n\">V</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">C.val</span> <span class=\"bp\">=</span> <span class=\"n\">C.val</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>So this version also doesn't use dot notation in the goal, whereas the Lean 3 version does</p>",
        "id": 400184877,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1699035324
    },
    {
        "content": "<p>I think there's a delaborator for this? But it should be automatic imo</p>",
        "id": 400189512,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1699037530
    },
    {
        "content": "<p>You now need to tag definitions which you want to be displayed with dot notation using <code>@[pp_dot]</code> rather than the ones you don't want using <code>@[pp_no_dot]</code>.</p>",
        "id": 400198125,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699041722
    },
    {
        "content": "<p>Whether that's the correct default is arguable (spoiler: it's not)</p>",
        "id": 400198232,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699041747
    }
]