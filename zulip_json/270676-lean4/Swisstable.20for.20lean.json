[
    {
        "content": "<p>Long ago, I ported Rust's hashbrown to Lean as a POC. It recently got updated. (Since people are working on HTTP, I guess higher thrput HashMap/HashSet will matter in some cases).</p>\n<p>I have several questions:</p>\n<ol>\n<li>Do we have an existing stateful hash interface similar to <a href=\"https://github.com/SchrodingerZhu/hashbrown4lean/blob/main/lean/HashBrown/HashState.lean\">the one here</a>?</li>\n<li>What are the conventional class instances for containers like <code>HashMap</code>? (I mean <code>Inhabited</code>/<code>EmptyCollection</code>/etc)?</li>\n<li>General suggestions (<a href=\"https://github.com/SchrodingerZhu/hashbrown4lean\">repo</a>).</li>\n</ol>",
        "id": 391528119,
        "sender_full_name": "Schrodinger ZHU Yifan",
        "timestamp": 1694965474
    },
    {
        "content": "<ol>\n<li>The closest I know of is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=RandomGen#doc\">docs#RandomGen</a> which is not quite the same</li>\n<li>There is no consistency among the interfaces for containers or maplike structures. This is a big missing component of Std.</li>\n</ol>",
        "id": 391553956,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1694975586
    },
    {
        "content": "<p>I'm not sure that's true. There is consistency, it's just that is to not use interfaces (except for <code>Inhabited</code> and <code>EmptyCollection</code>)</p>",
        "id": 391554499,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694975963
    }
]