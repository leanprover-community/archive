[
    {
        "content": "<p>Hi, found <code>ByteArray.copySlice</code> behavior inconsistent with its def when <code>srcOff + len &gt; src.size</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--</span>\n<span class=\"sd\">@[extern \"lean_byte_array_copy_slice\"]</span>\n<span class=\"sd\">def copySlice (src : @&amp; ByteArray) (srcOff : Nat) (dest : ByteArray) (destOff len : Nat) (exact : Bool := true) : ByteArray :=</span>\n<span class=\"sd\">  ⟨dest.data.extract 0 destOff ++ src.data.extract srcOff (srcOff + len) ++ dest.data.extract (destOff + len) dest.data.size⟩</span>\n<span class=\"sd\">-/</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">some_func</span> <span class=\"o\">(</span><span class=\"n\">src</span> <span class=\"o\">:</span> <span class=\"bp\">@&amp;</span> <span class=\"n\">ByteArray</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">srcOff</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">dest</span> <span class=\"o\">:</span> <span class=\"n\">ByteArray</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">destOff</span> <span class=\"n\">len</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">exact</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ByteArray</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"n\">dest.data.extract</span> <span class=\"mi\">0</span> <span class=\"n\">destOff</span> <span class=\"bp\">++</span> <span class=\"n\">src.data.extract</span> <span class=\"n\">srcOff</span> <span class=\"o\">(</span><span class=\"n\">srcOff</span> <span class=\"bp\">+</span> <span class=\"n\">len</span><span class=\"o\">)</span> <span class=\"bp\">++</span> <span class=\"n\">dest.data.extract</span> <span class=\"o\">(</span><span class=\"n\">destOff</span> <span class=\"bp\">+</span> <span class=\"n\">len</span><span class=\"o\">)</span> <span class=\"n\">dest.data.size</span><span class=\"o\">⟩</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">some_func</span> <span class=\"o\">⟨</span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">]⟩</span> <span class=\"mi\">1</span> <span class=\"o\">⟨</span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"mi\">6</span><span class=\"o\">,</span> <span class=\"mi\">7</span> <span class=\"o\">,</span> <span class=\"mi\">8</span> <span class=\"o\">,</span> <span class=\"mi\">9</span><span class=\"o\">,</span> <span class=\"mi\">10</span><span class=\"o\">,</span> <span class=\"mi\">11</span><span class=\"o\">,</span> <span class=\"mi\">12</span><span class=\"o\">,</span> <span class=\"mi\">13</span><span class=\"o\">]⟩</span> <span class=\"mi\">0</span> <span class=\"mi\">6</span> <span class=\"c1\">-- [2, 3, 10, 11, 12, 13]</span>\n<span class=\"k\">#eval</span> <span class=\"n\">ByteArray.copySlice</span> <span class=\"o\">⟨</span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">]⟩</span> <span class=\"mi\">1</span> <span class=\"o\">⟨</span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"mi\">6</span><span class=\"o\">,</span> <span class=\"mi\">7</span> <span class=\"o\">,</span> <span class=\"mi\">8</span> <span class=\"o\">,</span> <span class=\"mi\">9</span><span class=\"o\">,</span> <span class=\"mi\">10</span><span class=\"o\">,</span> <span class=\"mi\">11</span><span class=\"o\">,</span> <span class=\"mi\">12</span><span class=\"o\">,</span> <span class=\"mi\">13</span><span class=\"o\">]⟩</span> <span class=\"mi\">0</span> <span class=\"mi\">6</span> <span class=\"c1\">-- [2, 3, 6, 7, 8, 9, 10, 11, 12, 13]</span>\n</code></pre></div>",
        "id": 404333830,
        "sender_full_name": "ZHAO Jiecheng",
        "timestamp": 1701060499
    },
    {
        "content": "<p>Opened an Issue <a href=\"https://github.com/leanprover/lean4/issues/2966\">https://github.com/leanprover/lean4/issues/2966</a></p>",
        "id": 404334991,
        "sender_full_name": "ZHAO Jiecheng",
        "timestamp": 1701061194
    },
    {
        "content": "<p>Fixed at <a href=\"https://github.com/leanprover-community/lean/pull/2967\">lean#2967</a></p>",
        "id": 404353309,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1701071057
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>  sorry, but I guess this is not the ticket you what to commented on.</p>",
        "id": 404353540,
        "sender_full_name": "ZHAO Jiecheng",
        "timestamp": 1701071140
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/270676-lean4/topic/ByteArray.2EcopySlice.20behavior.20inconsistent.20with.20its.20def/near/404353309\">said</a>:</p>\n<blockquote>\n<p>Fixed at <a href=\"https://github.com/leanprover-community/mathlib4/pull/2967\">#2967</a></p>\n</blockquote>\n<p>Sorry again.  I found the pr. Thank you for your help. I think the link is not so correct. It pointed to a mathlib fix.</p>",
        "id": 404354132,
        "sender_full_name": "ZHAO Jiecheng",
        "timestamp": 1701071293
    },
    {
        "content": "<p>Fixed at <a href=\"https://github.com/leanprover/lean4/pull/2967/checks\">https://github.com/leanprover/lean4/pull/2967/checks</a></p>",
        "id": 404355178,
        "sender_full_name": "ZHAO Jiecheng",
        "timestamp": 1701071753
    }
]