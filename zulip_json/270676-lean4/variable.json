[
    {
        "content": "<p>The following doesn't work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Nonempty</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">h</span> <span class=\"o\">[</span><span class=\"n\">Nonempty</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">h</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>while the following works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Nonempty</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">h</span> <span class=\"o\">[</span><span class=\"n\">Nonempty</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">h</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 324541939,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675064516
    },
    {
        "content": "<p>Noticed this as well when porting.  The issue seems to be that <code>variable</code> seems to either change visibility of existing variables OR introduce new one but not both?</p>",
        "id": 324585580,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1675078932
    },
    {
        "content": "<p>If the behavior of performing one action or the other but not both is deliberate, should the two actions have different spellings? (eg <code>variable</code> vs <code>variable update</code>)</p>",
        "id": 324620325,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675088894
    },
    {
        "content": "<p>This discussion should be moved to <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a></p>",
        "id": 324633601,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1675091858
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/variable\">#mathlib4 &gt; variable</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 324636581,
        "sender_full_name": "Notification Bot",
        "timestamp": 1675092478
    },
    {
        "content": "<p>It complains that it can't find <code>[Nonempty α]</code>, so probably the issue is that <code>(x : h α)</code> is evaluated in a context that does not include previously defined (in a <code>variable</code>) instances.</p>",
        "id": 324639038,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1675093057
    }
]