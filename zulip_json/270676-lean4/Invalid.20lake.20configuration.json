[
    {
        "content": "<p>I am getting the following error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">boltonbailey</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.3.0/bin/lake print-paths Init FormalSnarksProject.Models.AGMProofSystemInstantiation Mathlib.Data.Polynomial.Div --no-build` failed:</span>\n\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">compiled</span> <span class=\"n\">configuration</span> <span class=\"n\">is</span> <span class=\"n\">invalid</span><span class=\"bp\">;</span> <span class=\"n\">run</span> <span class=\"k\">with</span> <span class=\"bp\">`-</span><span class=\"n\">R</span><span class=\"bp\">`</span> <span class=\"n\">to</span> <span class=\"n\">reconfigure</span>\n<span class=\"n\">Invalid</span> <span class=\"n\">Lake</span> <span class=\"n\">configuration.</span>  <span class=\"n\">Please</span> <span class=\"n\">restart</span> <span class=\"n\">the</span> <span class=\"n\">server</span> <span class=\"n\">after</span> <span class=\"n\">fixing</span> <span class=\"n\">the</span> <span class=\"n\">Lake</span> <span class=\"n\">configuration</span> <span class=\"n\">file.</span>\n</code></pre></div>\n<p>My lakefile.lean looks like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">«</span><span class=\"n\">formalSnarksProject</span><span class=\"bp\">»</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add any package configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">FormalSnarksProject</span><span class=\"bp\">»</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add any library configuration options here</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 405617092,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1701591035
    },
    {
        "content": "<p>Which seems the same as what I get from <code>lake new test math</code>. What is going on?</p>",
        "id": 405617136,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1701591079
    },
    {
        "content": "<p>Furthermore, if I look in the lake --help, I see there is an -R option, but then it tells me it's missing the command?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">eduroamprvnat</span><span class=\"bp\">-</span><span class=\"mi\">172</span><span class=\"bp\">-</span><span class=\"mi\">16</span><span class=\"bp\">-</span><span class=\"mi\">41</span><span class=\"bp\">-</span><span class=\"mi\">159</span> <span class=\"n\">FormalSnarksProject</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"c1\">--help</span>\n<span class=\"n\">Lake</span> <span class=\"n\">version</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"mi\">8</span><span class=\"n\">e5cf64</span> <span class=\"o\">(</span><span class=\"n\">Lean</span> <span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"n\">USAGE</span><span class=\"o\">:</span>\n  <span class=\"n\">lake</span> <span class=\"o\">[</span><span class=\"n\">OPTIONS</span><span class=\"o\">]</span> <span class=\"bp\">&lt;</span><span class=\"n\">COMMAND</span><span class=\"bp\">&gt;</span>\n\n<span class=\"n\">COMMANDS</span><span class=\"o\">:</span>\n  <span class=\"n\">new</span> <span class=\"bp\">&lt;</span><span class=\"n\">name</span><span class=\"bp\">&gt;</span> <span class=\"bp\">&lt;</span><span class=\"n\">temp</span><span class=\"bp\">&gt;</span>     <span class=\"n\">create</span> <span class=\"n\">a</span> <span class=\"n\">Lean</span> <span class=\"n\">package</span> <span class=\"k\">in</span> <span class=\"n\">a</span> <span class=\"n\">new</span> <span class=\"n\">directory</span>\n  <span class=\"n\">init</span> <span class=\"bp\">&lt;</span><span class=\"n\">name</span><span class=\"bp\">&gt;</span> <span class=\"bp\">&lt;</span><span class=\"n\">temp</span><span class=\"bp\">&gt;</span>    <span class=\"n\">create</span> <span class=\"n\">a</span> <span class=\"n\">Lean</span> <span class=\"n\">package</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">current</span> <span class=\"n\">directory</span>\n  <span class=\"n\">build</span> <span class=\"bp\">&lt;</span><span class=\"n\">targets</span><span class=\"bp\">&gt;...</span>    <span class=\"n\">build</span> <span class=\"n\">targets</span>\n  <span class=\"n\">exe</span> <span class=\"bp\">&lt;</span><span class=\"n\">exe</span><span class=\"bp\">&gt;</span> <span class=\"bp\">&lt;</span><span class=\"n\">args</span><span class=\"bp\">&gt;...</span>   <span class=\"n\">build</span> <span class=\"n\">an</span> <span class=\"n\">exe</span> <span class=\"n\">and</span> <span class=\"n\">run</span> <span class=\"n\">it</span> <span class=\"k\">in</span> <span class=\"n\">Lake's</span> <span class=\"n\">environment</span>\n  <span class=\"n\">clean</span>                 <span class=\"n\">remove</span> <span class=\"n\">build</span> <span class=\"n\">outputs</span>\n  <span class=\"n\">env</span> <span class=\"bp\">&lt;</span><span class=\"n\">cmd</span><span class=\"bp\">&gt;</span> <span class=\"bp\">&lt;</span><span class=\"n\">args</span><span class=\"bp\">&gt;...</span>   <span class=\"n\">execute</span> <span class=\"n\">a</span> <span class=\"n\">command</span> <span class=\"k\">in</span> <span class=\"n\">Lake's</span> <span class=\"n\">environment</span>\n  <span class=\"n\">update</span>                <span class=\"n\">update</span> <span class=\"n\">dependencies</span> <span class=\"n\">and</span> <span class=\"n\">save</span> <span class=\"n\">them</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">manifest</span>\n  <span class=\"n\">upload</span> <span class=\"bp\">&lt;</span><span class=\"n\">tag</span><span class=\"bp\">&gt;</span>          <span class=\"n\">upload</span> <span class=\"n\">build</span> <span class=\"n\">artifacts</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">GitHub</span> <span class=\"n\">release</span>\n  <span class=\"n\">script</span>                <span class=\"n\">manage</span> <span class=\"n\">and</span> <span class=\"n\">run</span> <span class=\"n\">workspace</span> <span class=\"n\">scripts</span>\n  <span class=\"n\">scripts</span>               <span class=\"n\">shorthand</span> <span class=\"n\">for</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">script</span> <span class=\"n\">list</span><span class=\"bp\">`</span>\n  <span class=\"n\">run</span> <span class=\"bp\">&lt;</span><span class=\"n\">script</span><span class=\"bp\">&gt;</span>          <span class=\"n\">shorthand</span> <span class=\"n\">for</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">script</span> <span class=\"n\">run</span><span class=\"bp\">`</span>\n  <span class=\"n\">serve</span>                 <span class=\"n\">start</span> <span class=\"n\">the</span> <span class=\"n\">Lean</span> <span class=\"n\">language</span> <span class=\"n\">server</span>\n\n<span class=\"n\">OPTIONS</span><span class=\"o\">:</span>\n  <span class=\"c1\">--version             print version and exit</span>\n  <span class=\"c1\">--help, -h            print help of the program or a command and exit</span>\n  <span class=\"c1\">--dir, -d=file        use the package configuration in a specific directory</span>\n  <span class=\"c1\">--file, -f=file       use a specific file for the package configuration</span>\n  <span class=\"c1\">--quiet, -q           hide progress messages</span>\n  <span class=\"c1\">--verbose, -v         show verbose information (command invocations)</span>\n  <span class=\"c1\">--lean=cmd            specify the `lean` command used by Lake</span>\n  <span class=\"bp\">-</span><span class=\"n\">K</span> <span class=\"n\">key</span><span class=\"o\">[</span><span class=\"bp\">=</span><span class=\"n\">value</span><span class=\"o\">]</span>        <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">configuration</span> <span class=\"n\">file</span> <span class=\"n\">option</span> <span class=\"n\">named</span> <span class=\"n\">key</span>\n  <span class=\"c1\">--old                 only rebuild modified modules (ignore transitive deps)</span>\n  <span class=\"c1\">--rehash, -H          hash all files for traces (do not trust `.hash` files)</span>\n  <span class=\"c1\">--update, -U          update manifest before building</span>\n  <span class=\"c1\">--reconfigure, -R     elaborate configuration files instead of using OLeans</span>\n\n<span class=\"n\">See</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">help</span> <span class=\"bp\">&lt;</span><span class=\"n\">command</span><span class=\"bp\">&gt;`</span> <span class=\"n\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span> <span class=\"n\">on</span> <span class=\"n\">a</span> <span class=\"n\">specific</span> <span class=\"n\">command.</span>\n<span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">eduroamprvnat</span><span class=\"bp\">-</span><span class=\"mi\">172</span><span class=\"bp\">-</span><span class=\"mi\">16</span><span class=\"bp\">-</span><span class=\"mi\">41</span><span class=\"bp\">-</span><span class=\"mi\">159</span> <span class=\"n\">FormalSnarksProject</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">R</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">missing</span> <span class=\"n\">command</span>\n</code></pre></div>",
        "id": 405617278,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1701591202
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/O4axqQ1o3KBPAlgdS6pcfYIG/Screenshot-2023-12-03-at-2.20.51-AM.png\">Screenshot-2023-12-03-at-2.20.51-AM.png</a><br>\nWhy are there two mathlibs?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/O4axqQ1o3KBPAlgdS6pcfYIG/Screenshot-2023-12-03-at-2.20.51-AM.png\" title=\"Screenshot-2023-12-03-at-2.20.51-AM.png\"><img src=\"/user_uploads/3121/O4axqQ1o3KBPAlgdS6pcfYIG/Screenshot-2023-12-03-at-2.20.51-AM.png\"></a></div>",
        "id": 405617809,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1701591670
    },
    {
        "content": "<p>Is it safe to just delete the <code>.lean</code> folder and start again?</p>",
        "id": 405617824,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1701591688
    },
    {
        "content": "<p>If you were running <code>lake build</code>, you'll need to run <code>lake -R build</code>, the same applies to other commands</p>",
        "id": 405618179,
        "sender_full_name": "Utensil Song",
        "timestamp": 1701591985
    },
    {
        "content": "<p>Ok like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">eduroamprvnat</span><span class=\"bp\">-</span><span class=\"mi\">172</span><span class=\"bp\">-</span><span class=\"mi\">16</span><span class=\"bp\">-</span><span class=\"mi\">41</span><span class=\"bp\">-</span><span class=\"mi\">159</span> <span class=\"n\">FormalSnarksProject</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">clean</span> <span class=\"bp\">-</span><span class=\"n\">R</span>\n<span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">eduroamprvnat</span><span class=\"bp\">-</span><span class=\"mi\">172</span><span class=\"bp\">-</span><span class=\"mi\">16</span><span class=\"bp\">-</span><span class=\"mi\">41</span><span class=\"bp\">-</span><span class=\"mi\">159</span> <span class=\"n\">FormalSnarksProject</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"n\">b1cd52acffa53bca04a33ddc14a40b2a62ed4308'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">leanOptions'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.PackageConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">has</span> <span class=\"n\">errors</span>\n<span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">eduroamprvnat</span><span class=\"bp\">-</span><span class=\"mi\">172</span><span class=\"bp\">-</span><span class=\"mi\">16</span><span class=\"bp\">-</span><span class=\"mi\">41</span><span class=\"bp\">-</span><span class=\"mi\">159</span> <span class=\"n\">FormalSnarksProject</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">update</span> <span class=\"bp\">-</span><span class=\"n\">R</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">leanOptions'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.PackageConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">has</span> <span class=\"n\">errors</span>\n<span class=\"n\">boltonbailey</span><span class=\"bp\">@</span><span class=\"n\">eduroamprvnat</span><span class=\"bp\">-</span><span class=\"mi\">172</span><span class=\"bp\">-</span><span class=\"mi\">16</span><span class=\"bp\">-</span><span class=\"mi\">41</span><span class=\"bp\">-</span><span class=\"mi\">159</span> <span class=\"n\">FormalSnarksProject</span> <span class=\"bp\">%</span>\n</code></pre></div>",
        "id": 405618211,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1701592025
    },
    {
        "content": "<p>Seems to be still having incompatible lake versions, possibly related to <a href=\"https://github.com/leanprover/lean4/pull/2858\">lean4#2858</a></p>",
        "id": 405618639,
        "sender_full_name": "Utensil Song",
        "timestamp": 1701592381
    },
    {
        "content": "<p>I'm on my phone and can't debug or properly search for now, but removing .lake and start from scratch is safe.</p>",
        "id": 405618768,
        "sender_full_name": "Utensil Song",
        "timestamp": 1701592520
    },
    {
        "content": "<p>And maybe try to update to lean 4.4.0-rc1 as Mathlib master is using it already</p>",
        "id": 405618902,
        "sender_full_name": "Utensil Song",
        "timestamp": 1701592646
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> <a href=\"#narrow/stream/270676-lean4/topic/Invalid.20lake.20configuration/near/405617809\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/3121/O4axqQ1o3KBPAlgdS6pcfYIG/Screenshot-2023-12-03-at-2.20.51-AM.png\">Screenshot-2023-12-03-at-2.20.51-AM.png</a><br>\nWhy are there two mathlibs?</p>\n</blockquote>\n<p>The 2nd mathlib looks like a manual copy by accident, removing it should also help. As it's redundant and would be kept incompatible hower you update with command line</p>",
        "id": 405619093,
        "sender_full_name": "Utensil Song",
        "timestamp": 1701592830
    },
    {
        "content": "<p>I also hit this issue in mathport. <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> This seems to be a drawback of moving the <code>lean-toolchain</code> copy into <code>lake update</code>: When the lakefile syntax changes, old lake can't process the new lakefile in the updated dependency, so it can't run the update script that says to copy the <code>lean-toolchain</code> and try again</p>",
        "id": 405628534,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701596633
    },
    {
        "content": "<p>This is going to hit every project that depends on mathlib and uses <code>lake update</code></p>",
        "id": 405628692,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701596686
    },
    {
        "content": "<p>and it will happen again every time mathlib's lakefile uses a new lake feature</p>",
        "id": 405628948,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701596776
    },
    {
        "content": "<p>The options for mitigating this on mathlib's side seem very limited. In lake, one way to address this would be to show an additional error message if there is a problem processing the lakefile of a dependency and the <code>lean-toolchain</code>s don't match, suggesting either a direct <code>cp</code> invocation or some new <code>lake</code> option like <code>lake update --toolchain</code> which copies the toolchain of failing dependencies.</p>\n<p>Also, the <code>require mathlib</code> could have a <code>trackToolchain := true</code> option which would allow you to know to do this in advance of processing the dependency's lakefile. This seems like a better long-term solution.</p>",
        "id": 405629772,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701597211
    },
    {
        "content": "<hr>\n<p>To people stumbling on this issue: If you get an error like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"n\">b1cd52acffa53bca04a33ddc14a40b2a62ed4308'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">leanOptions'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.PackageConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">has</span> <span class=\"n\">errors</span>\n</code></pre></div>\n<p>the fix is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cp</span> <span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span> <span class=\"bp\">.</span>\n<span class=\"n\">lake</span> <span class=\"n\">update</span> <span class=\"bp\">-</span><span class=\"n\">R</span>\n</code></pre></div>",
        "id": 405630149,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701597546
    },
    {
        "content": "<p>Except of course it could be <code>cp lake-packages/mathlib/lean-toolchain .</code> depending on how much your project is synchronized with random lake changes.</p>",
        "id": 405844239,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1701702365
    },
    {
        "content": "<p>One weird trick that worked for me twice last week is to use <code>lake update</code> twice.</p>",
        "id": 405847687,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701703293
    },
    {
        "content": "<p>Only twice? You are really lucky!</p>",
        "id": 405847829,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1701703328
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Invalid.20lake.20configuration/near/405629772\">said</a>:</p>\n<blockquote>\n<p>.<br>\nAlso, the <code>require mathlib</code> could have a <code>trackToolchain := true</code> option which would allow you to know to do this in advance of processing the dependency's lakefile. This seems like a better long-term solution.</p>\n</blockquote>\n<p><del>Isn't this toolchain matching requirement coming from cache? We don't have to match toolchains with Std or Qq. Only mathlib. Will this change as cache is generalised?</del> NVM: just learnt  that this is a lake versioning issue.</p>",
        "id": 405849171,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701703696
    },
    {
        "content": "<p>Would it help if elan managed lake installations separately like rustup does with cargo, and lake warns you that the next version of &lt;insert package&gt; requires you to update lake through elan first?</p>",
        "id": 405849815,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701703915
    },
    {
        "content": "<p>Or does lake remove support for old syntax and make it impossible to compile older Lakefiles from newer versions?</p>",
        "id": 405849981,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701703954
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Invalid.20lake.20configuration/near/405849981\">said</a>:</p>\n<blockquote>\n<p>Or does lake remove support for old syntax and make it impossible to compile older Lakefiles from newer versions?</p>\n</blockquote>\n<p>Eventually, yes, deprecated syntax is removed. But the aim is for each stable release to be backwards compatible with at least the prior stable.</p>",
        "id": 405884497,
        "sender_full_name": "Mac Malone",
        "timestamp": 1701713016
    },
    {
        "content": "<p>Notably, the fact that a package in general is neither necessarily forward- or backwards-compatible with other Lean toolchains is what makes an principled, automated solution to <a href=\"https://github.com/leanprover/lean4/pull/2582\">lean4#2582</a> complex.</p>",
        "id": 405884929,
        "sender_full_name": "Mac Malone",
        "timestamp": 1701713184
    },
    {
        "content": "<p>Then maybe a stepped update could be applied in the suggestion I describe above?</p>",
        "id": 405886982,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701713961
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Invalid.20lake.20configuration/near/405847687\">said</a>:</p>\n<blockquote>\n<p>One weird trick that worked for me twice last week is to use <code>lake update</code> twice.</p>\n</blockquote>\n<p>I recently confirmed with <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> that there is indeed a second bug and <code>lake update</code> may not work after the toolchain copy, and using <code>lake update</code> twice in a row will sometimes work but <code>lake update -R</code> seems to be the most reliable way to fix this. I have updated the instructions above.</p>",
        "id": 406717198,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702026542
    }
]