[
    {
        "content": "<p>Since we are discussing VSCode improvements, I would really love to see work on auto-indentation. It would be really nice if VSCode could automatically insert correct indentation after a focusing center dot. I see many students writing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">constructor</span>\n<span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">x</span>\n<span class=\"n\">exact...</span>\n</code></pre></div>\n<p>thinking <code>exact ...</code>  is continuing the proof started by <code>intro x</code>, and getting very confused by Lean being very confused. The crucial point is that hitting the Return key at the end of the <code>· intro x</code> line does <em>not</em> put the cursor in the correct position.</p>",
        "id": 392195409,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1695238336
    },
    {
        "content": "<p>This should be possible with the right <code>onEnterRules</code> setting in the language configuration.</p>",
        "id": 392196219,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1695238734
    },
    {
        "content": "<p>Would it be helpful if I started a PR to the extension with some rules for indentation on enter? This seems pretty straightforward, and I've got this rule working (and, unrelatedly, have wanted a chance to get used to the extension development workflow for other reasons) :)</p>",
        "id": 392220200,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1695251695
    },
    {
        "content": "<p>The basic version (focus blocks only) is now at <a href=\"https://github.com/leanprover-community/vscode-lean4/pull/328\">vscode-lean4#328</a>. I'm exploring indentation after certain tokens like <code>by</code>, <code>do</code> etc. in the draft PR <a href=\"https://github.com/leanprover-community/vscode-lean4/pull/329\">vscode-lean4#329</a>.</p>",
        "id": 392233073,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1695263920
    },
    {
        "content": "<p>However, I'm not sure when we would want to use <code>onEnterRules</code>, and when we would want to use <code>indentationRules</code>. The <a href=\"https://code.visualstudio.com/api/language-extensions/language-configuration-guide#indentation-rules\">documentation</a> seems to describe an overlapping use case with <code>onEnterRules</code>, but says it also applies to \"when you type, paste, and move lines\". It doesn't detail what exactly the consequences of a line matching an <code>increaseIndentPattern</code> are. Some googling suggests it also needs a <code>decreaseIndentPattern</code>, which often isn't uniformly definable in lean.</p>",
        "id": 392233262,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1695264144
    },
    {
        "content": "<p>Also, I was wondering—can indentation-on-enter be performed in a language-aware way instead of using regexes? It seems like it'd be much better to indent in a manner based on full knowledge of the parsed syntax and infotree instead of just relying on hardcoded, fragile regexes! :) I did some googling but couldn't find anything.</p>",
        "id": 392233419,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1695264311
    },
    {
        "content": "<p>I would guess it has to be regex based for performance</p>",
        "id": 392271546,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695284423
    },
    {
        "content": "<p>Ah, that makes sense—you don't want to hit enter and then have to wait for elaboration to finish before your keystroke has an effect.</p>",
        "id": 392272694,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1695284816
    },
    {
        "content": "<p>Waiting just for parsing though could be very reasonable! <del>Which however the server architecture does not support yet</del> We already do some parsing-only tasks, this may or may not be a good fit as well</p>",
        "id": 392281532,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1695287827
    },
    {
        "content": "<p>I think the LaTeX workshop extension does something comparable, I think it sometimes tries to format the line I'm on once I press enter, and it takes about a second to process.</p>",
        "id": 392298994,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1695294485
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/270676-lean4/topic/VSCode.20indentation/near/392233262\">said</a>:</p>\n<blockquote>\n<p>However, I'm not sure when we would want to use <code>onEnterRules</code>, and when we would want to use <code>indentationRules</code>. The <a href=\"https://code.visualstudio.com/api/language-extensions/language-configuration-guide#indentation-rules\">documentation</a> seems to describe an overlapping use case with <code>onEnterRules</code>, but says it also applies to \"when you type, paste, and move lines\". It doesn't detail what exactly the consequences of a line matching an <code>increaseIndentPattern</code> are. Some googling suggests it also needs a <code>decreaseIndentPattern</code>, which often isn't uniformly definable in lean.</p>\n</blockquote>\n<p><code>onEnterRules</code> seems to be preferable. </p>\n<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/270676-lean4/topic/VSCode.20indentation/near/392233419\">said</a>:</p>\n<blockquote>\n<p>Also, I was wondering—can indentation-on-enter be performed in a language-aware way instead of using regexes? It seems like it'd be much better to indent in a manner based on full knowledge of the parsed syntax and infotree instead of just relying on hardcoded, fragile regexes! :) I did some googling but couldn't find anything.</p>\n</blockquote>\n<p>You can do this using the LSP <code>textDocument/onTypeFormatting</code> request, but <a href=\"https://github.com/neovim/neovim/issues/21191\">NeoVim doesn't support it</a> and <a href=\"https://github.com/emacs-lsp/lsp-mode/issues/1971\">Emacs' implementation seems to be somewhat broken</a>. So even disregarding the added latency, it may not be a good idea to use it instead of <code>onEnterRules</code>.</p>",
        "id": 392311288,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1695299194
    }
]