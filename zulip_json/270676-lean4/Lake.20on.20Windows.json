[
    {
        "content": "<p>On Windows, in a newly created project or after deleting \".lake\", <code>lake update</code> works as expected. Subsequent runs of  <code>lake update</code> print \"error: no error (error code: 0)\" and exit with error code 1.</p>",
        "id": 405193754,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701375151
    },
    {
        "content": "<p>Do you have a MWE?</p>",
        "id": 405229796,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701388582
    },
    {
        "content": "<p>something like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">new</span> <span class=\"n\">foo</span>\n<span class=\"n\">cd</span> <span class=\"n\">foo</span>\n<span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">lake</span> <span class=\"n\">update</span>\n</code></pre></div>\n<p>?</p>",
        "id": 405229841,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701388615
    },
    {
        "content": "<p>Yep, that should do it. I'll test</p>",
        "id": 405229880,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701388642
    },
    {
        "content": "<p>what version of lean/lake are you using?</p>",
        "id": 405229885,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701388647
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Lean (version 4.3.0, commit 8e5cf6466061, Release)\nLake version 5.0.0-8e5cf64 (Lean version 4.3.0)\n</code></pre></div>",
        "id": 405230041,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701388708
    },
    {
        "content": "<p>Ah, I think I see. It seems that starting Lake as a language server in the project is also a necessary part of the recipe, so the solution is to stop the language server before updating.</p>",
        "id": 405231368,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701389209
    },
    {
        "content": "<p>In earlier versions of Lake, <code>lake update</code> would run, but it was always a bad idea, since <code>lake exe cache get</code> would make a mess when it couldn't overwrite oleans open in Lean. This is actually an improvement, but maybe a slightly less amusing error message would be nice.</p>",
        "id": 405231657,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701389330
    },
    {
        "content": "<p>Certainly! Identifying were the <code>error: no error (error code: 0)</code> is coming from is key. That seems like a serious bug somewhere (an error code of 0 should not be producing an error).</p>",
        "id": 405235375,
        "sender_full_name": "Mac Malone",
        "timestamp": 1701390966
    },
    {
        "content": "<p>I was not able to reproduce this on windows or linux</p>",
        "id": 405244225,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701393923
    },
    {
        "content": "<p>On my new Windows laptop (mostly using MacBook previously), I'm getting errors like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\...\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"mi\">52322</span><span class=\"n\">cf9463d4500.ltar</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">process</span> <span class=\"n\">cannot</span> <span class=\"n\">access</span> <span class=\"n\">the</span> <span class=\"n\">file</span> <span class=\"n\">because</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">being</span> <span class=\"n\">used</span> <span class=\"kd\">by</span> <span class=\"n\">another</span> <span class=\"n\">process.</span> <span class=\"o\">(</span><span class=\"n\">os</span> <span class=\"n\">error</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">leantar</span> <span class=\"n\">failed</span> <span class=\"k\">with</span> <span class=\"n\">error</span> <span class=\"n\">code</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>when running <code>lake exe cache get</code> if the Lean server is also running in the same directory (e.g. Lake is building dependencies of a file open in VSCode).</p>\n<p>(It also appears that cache doesn't work consistently on Windows. Initially when installing git I mistakenly selected \"checkout Windows-style\" (CRLF), and cache didn't work. Then I set <code>git config --global core.autocrlf input</code> (recommended <a href=\"https://leanprover-community.github.io/install/windows.html#installing-git\">here</a>) and re-checked out mathlib4 branches but Lake is still building from scratch, and I noticed that .lake/packages/std etc. still contain .lean files with CRLF in them. I then cloned the mathlib4 repo again, and finally cache works, but sometimes after I check out a different branch and run <code>cache get</code>, Lake still build from scratch. Cloning a new copy of the repo seems to always work initially. I'll report if the problem persists and if I could find some patterns ...)</p>",
        "id": 405264950,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1701402095
    },
    {
        "content": "<p>I think there isn't anything that can be done about this, windows really doesn't like concurrent modification of files that are being read</p>",
        "id": 405267631,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701402813
    },
    {
        "content": "<p>cache should work with CRLF files</p>",
        "id": 405267908,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701402873
    },
    {
        "content": "<p>it normalizes line endings</p>",
        "id": 405267931,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701402878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Lake.20on.20Windows/near/405244225\">said</a>:</p>\n<blockquote>\n<p>I was not able to reproduce this on windows or linux</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>lake new foo math\ncd foo\nlake update\nREM start language server in Foo.lean, make coffee\nlake update\n</code></pre></div>",
        "id": 405345538,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701431606
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"400544\">@Richard Copley</span>, this does not repro for me on Windows.</p>\n<ul>\n<li>For your comment \"start language server\", I assume you mean you are opening the <code>foo</code> folder in VSCode, and then clicking on <code>Foo.lean</code></li>\n<li>For me that then takes a few seconds, and then a \"Imports are out of data and must be rebuilt; use the 'Restart File' command in your editor.\" message appears.</li>\n<li>Because that wasn't mentioned in your instructions, I didn't click that, but went back to the command line to run the final</li>\n<li><code>lake update</code> then runs without errors, in a few seconds.</li>\n</ul>",
        "id": 405466609,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1701479531
    },
    {
        "content": "<p>(and then clicking the button is VSCode prompting to rebuilt imports succeeds, and I can edit <code>Foo.lean</code> as  expected)</p>",
        "id": 405466710,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1701479594
    },
    {
        "content": "<p>Ok, many thanks <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> and <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>. I use Emacs. I will try to understand and explain what it is I'm seeing. In the next few days, if I have time.</p>",
        "id": 405467485,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701479993
    },
    {
        "content": "<p>Oh! VSCode is the supported editor.</p>",
        "id": 405468526,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1701480264
    },
    {
        "content": "<p>I do get the same error if I run <code>lake update</code> in the command line while VSCode is running. In your experiment, the language server wasn't running due to the error you describe. If you get the project up and running in the usual way, so the info view is responding properly, then run <code>lake update</code> in the command line, you should see it too.</p>",
        "id": 405517098,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701509649
    }
]