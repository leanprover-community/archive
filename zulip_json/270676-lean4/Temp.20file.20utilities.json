[
    {
        "content": "<p>I am in need of utilities for writing temp files in a threadsafe/atomic way. It also seems like something Lake would use. IMO there should be an API in <code>IO.FS</code> namespace for handling temp files.</p>\n<p>Unix has a dedicated API for this; windows is a more complicated story. It seems like there is an atomic system call to create a new <em>directory</em> and fail if that directory already exists: <a href=\"https://stackoverflow.com/a/70958667\">https://stackoverflow.com/a/70958667</a> which we could make work</p>",
        "id": 342140969,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678906164
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> <a href=\"#narrow/stream/270676-lean4/topic/how.20to.20run.20.60lake.20exe.20cache.20get.60.20while.20in.20VSCode/near/342139674\">said</a>:</p>\n<blockquote>\n<p>and it looks like windows doesnt even have an API for atomically getting a unique temp file</p>\n</blockquote>\n<p>The standard way to solve this problem is to use randomness. If you just stick a random string on the end of the temp file name then it will almost certainly not collide with an existing file</p>",
        "id": 342220162,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678945574
    }
]