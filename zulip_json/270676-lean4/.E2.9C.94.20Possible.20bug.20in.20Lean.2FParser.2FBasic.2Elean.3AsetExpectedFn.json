[
    {
        "content": "<p>I was reading the source of Lean 4 and ran into this function:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">setExpectedFn</span> <span class=\"o\">(</span><span class=\"n\">expected</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ParserFn</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ParserFn</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">c</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"k\">match</span> <span class=\"n\">p</span> <span class=\"n\">c</span> <span class=\"n\">s</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">s'</span><span class=\"bp\">@</span><span class=\"o\">{</span> <span class=\"n\">errorMsg</span> <span class=\"o\">:=</span> <span class=\"n\">some</span> <span class=\"n\">msg</span><span class=\"o\">,</span> <span class=\"bp\">..</span> <span class=\"o\">}</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">{</span> <span class=\"n\">s'</span> <span class=\"k\">with</span> <span class=\"n\">errorMsg</span> <span class=\"o\">:=</span> <span class=\"n\">some</span> <span class=\"o\">{</span> <span class=\"n\">msg</span> <span class=\"k\">with</span> <span class=\"n\">expected</span> <span class=\"o\">:=</span> <span class=\"o\">[]</span> <span class=\"o\">}</span> <span class=\"o\">}</span>\n    <span class=\"bp\">|</span> <span class=\"n\">s'</span>                              <span class=\"bp\">=&gt;</span> <span class=\"n\">s'</span>\n</code></pre></div>\n<p>I'm thinking it should be this instead:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">setExpectedFn</span> <span class=\"o\">(</span><span class=\"n\">expected</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ParserFn</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ParserFn</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">c</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"k\">match</span> <span class=\"n\">p</span> <span class=\"n\">c</span> <span class=\"n\">s</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">s'</span><span class=\"bp\">@</span><span class=\"o\">{</span> <span class=\"n\">errorMsg</span> <span class=\"o\">:=</span> <span class=\"n\">some</span> <span class=\"n\">msg</span><span class=\"o\">,</span> <span class=\"bp\">..</span> <span class=\"o\">}</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">{</span> <span class=\"n\">s'</span> <span class=\"k\">with</span> <span class=\"n\">errorMsg</span> <span class=\"o\">:=</span> <span class=\"n\">some</span> <span class=\"o\">{</span> <span class=\"n\">msg</span> <span class=\"k\">with</span> <span class=\"n\">expected</span> <span class=\"o\">:=</span> <span class=\"n\">expected</span><span class=\"o\">}</span> <span class=\"o\">}</span>\n    <span class=\"bp\">|</span> <span class=\"n\">s'</span>                              <span class=\"bp\">=&gt;</span> <span class=\"n\">s'</span>\n</code></pre></div>\n<p>as the expected to the left of the \":=\" is just telling the field of the Error structure that is to be changed. <br>\nCurrently it appears that the \"expected\" parameter is not used.</p>\n<p>I'm relatively new to Lean so thought I'd raise the issue here before taking any other action, like a pull request.</p>\n<p>Thanks</p>\n<p>P.S. I just checked on the uses of this function. It is only referenced from <code>setExpected</code>, and setExpected is always called (currently) with \"[]\" for expected. That would explain why this was not noticed before now. There are some other setExpected functions in the PrettyPrinter that seem to be related, but I'm not sure how.</p>",
        "id": 273818676,
        "sender_full_name": "Richard L Ford",
        "timestamp": 1646233091
    },
    {
        "content": "<p>Thanks! It doesn't look like it was every called with anything other than <code>[]</code>, but I fixed it nonetheless.</p>",
        "id": 273823756,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1646234965
    },
    {
        "content": "<p>Thanks. I'm sure that is less overhead than a pull request.</p>",
        "id": 273828108,
        "sender_full_name": "Richard L Ford",
        "timestamp": 1646236536
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296262\">Richard L Ford</span> has marked this topic as resolved.</p>",
        "id": 273828473,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646236668
    }
]