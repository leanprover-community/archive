[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">pthomas</span><span class=\"bp\">@</span><span class=\"n\">PC</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">Desktop</span><span class=\"bp\">/</span><span class=\"n\">github</span><span class=\"bp\">/</span><span class=\"n\">mathport</span><span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">mathport</span> <span class=\"c1\">--make config-project.json Project::all</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">Error</span> <span class=\"n\">decoding</span> <span class=\"n\">JSON</span><span class=\"o\">:</span> <span class=\"n\">Mathport.Config.dubiousMsg</span><span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"n\">expected</span>\n</code></pre></div>",
        "id": 362057986,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685412167
    },
    {
        "content": "<p>This is after following the instructions for <a href=\"https://github.com/leanprover-community/mathport#running-on-a-project-other-than-mathlib\">https://github.com/leanprover-community/mathport#running-on-a-project-other-than-mathlib</a></p>",
        "id": 362058129,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685412246
    },
    {
        "content": "<p>The previous steps worked, except I had to <code>sudo apt install libgmp3-dev</code> instead of <code>gmp gmp-devel</code>.</p>",
        "id": 362058263,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685412346
    },
    {
        "content": "<p>This is a new configuration option that was added after those instructions were written</p>",
        "id": 362112103,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685436268
    },
    {
        "content": "<p>I guess <a href=\"https://github.com/leanprover/lean4/pull/2225\">lean4#2225</a> is probably to blame for it not being optional</p>",
        "id": 362112372,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685436342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"139442\">@Kayla Thomas</span>, thanks for the error report. I've updated the instructions at <a href=\"https://github.com/leanprover-community/mathport/pull/239\">https://github.com/leanprover-community/mathport/pull/239</a>.</p>",
        "id": 362326121,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685495726
    },
    {
        "content": "<p>If you don't want to wait for that PR, you just need to copy across the three new configuration options from <code>config.json</code> to <code>config-project.json</code>.</p>",
        "id": 362326211,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685495786
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 362337223,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685504383
    },
    {
        "content": "<p>I am getting a build error for mathport after pulling the most recent version:</p>\n<p>[1885/1940] Building Mathport.Syntax.Translate.Tactic.Mathlib.Apply<br>\nerror: &gt; LEAN_PATH=./build/lib:./lake-packages/mathlib/build/lib:./lake-packages/Qq/build/lib:./lake-packages/aesop/build/lib:./lake-packages/std/build/lib LD_LIBRARY_PATH=./build/lib:./build/lib /home/pthomas/.elan/toolchains/leanprover--lean4---nightly-2023-05-31/bin/lean ./././Mathport/Syntax/Translate/Command.lean -R ././. -o ./build/lib/Mathport/Syntax/Translate/Command.olean -i ./build/lib/Mathport/Syntax/Translate/Command.ilean -c ./build/ir/Mathport/Syntax/Translate/Command.c --load-dynlib=./build/lib/libleanffi.so<br>\nerror: stdout:<br>\n./././Mathport/Syntax/Translate/Command.lean:533:60: error: unknown parser <code>notation3Item\n./././Mathport/Syntax/Translate/Command.lean:537:29: error: expected '[', 'binder_predicate', 'elab', 'elab_rules', 'infix', 'infixl', 'infixr', 'instance', 'macro', 'macro_rules', 'notation', 'notation3', 'postfix', 'prefix', 'syntax' or 'unif_hint'\n./././Mathport/Syntax/Translate/Command.lean:549:68: error: expected ':'\n./././Mathport/Syntax/Translate/Command.lean:570:80: error: expected '(', identifier or string literal\n./././Mathport/Syntax/Translate/Command.lean:572:4: error: IR check failed at 'Mathport.Translate.trNotationCmd._lambda_8', error: unknown declaration '_private.Mathport.Syntax.Translate.Command.0.Mathport.Translate.trNotation3'\n./././Mathport/Syntax/Translate/Command.lean:650:4: error: failed to compile definition, consider marking it as 'noncomputable' because it depends on 'Mathport.Translate.trNotationCmd', and it does not have executable code\nerror: external command </code>/home/pthomas/.elan/toolchains/leanprover--lean4---nightly-2023-05-31/bin/lean` exited with code 1</p>",
        "id": 363347282,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685811062
    },
    {
        "content": "<p>After running <code>elan update</code>:<br>\npthomas@PC:~/Desktop/github/mathport$ lake exe cache get<br>\nNo files to download<br>\nDecompressing 2887 file(s)<br>\npthomas@PC:~/Desktop/github/mathport$ make build<br>\nlake build<br>\n[1854/1940] Building Mathport.Syntax.Translate.Command<br>\nerror: &gt; LEAN_PATH=./build/lib:./lake-packages/mathlib/build/lib:./lake-packages/Qq/build/lib:./lake-packages/aesop/build/lib:./lake-packages/std/build/lib LD_LIBRARY_PATH=./build/lib:./build/lib /home/pthomas/.elan/toolchains/leanprover--lean4---nightly-2023-05-31/bin/lean ./././Mathport/Syntax/Translate/Command.lean -R ././. -o ./build/lib/Mathport/Syntax/Translate/Command.olean -i ./build/lib/Mathport/Syntax/Translate/Command.ilean -c ./build/ir/Mathport/Syntax/Translate/Command.c --load-dynlib=./build/lib/libleanffi.so<br>\nerror: stdout:<br>\n./././Mathport/Syntax/Translate/Command.lean:533:60: error: unknown parser <code>notation3Item\n./././Mathport/Syntax/Translate/Command.lean:537:29: error: expected '[', 'binder_predicate', 'elab', 'elab_rules', 'infix', 'infixl', 'infixr', 'instance', 'macro', 'macro_rules', 'notation', 'notation3', 'postfix', 'prefix', 'syntax' or 'unif_hint'\n./././Mathport/Syntax/Translate/Command.lean:549:68: error: expected ':'\n./././Mathport/Syntax/Translate/Command.lean:570:80: error: expected '(', identifier or string literal\n./././Mathport/Syntax/Translate/Command.lean:572:4: error: IR check failed at 'Mathport.Translate.trNotationCmd._lambda_8', error: unknown declaration '_private.Mathport.Syntax.Translate.Command.0.Mathport.Translate.trNotation3'\n./././Mathport/Syntax/Translate/Command.lean:650:4: error: failed to compile definition, consider marking it as 'noncomputable' because it depends on 'Mathport.Translate.trNotationCmd', and it does not have executable code\nerror: external command </code>/home/pthomas/.elan/toolchains/leanprover--lean4---nightly-2023-05-31/bin/lean` exited with code 1<br>\nmake: *** [Makefile<img alt=\":37:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18469.png\" title=\"37\"> build] Error 1<br>\npthomas@PC:~/Desktop/github/mathport$</p>",
        "id": 363347992,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685811337
    },
    {
        "content": "<p>should be fixed</p>",
        "id": 363354198,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1685813831
    },
    {
        "content": "<p>Yep. Thank you!</p>",
        "id": 363355413,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685814319
    },
    {
        "content": "<p>Hello, I'm trying to port a lean 3 project to lean 4 following the instructions on the <a href=\"https://github.com/leanprover-community/mathport\">mathport README</a>. I got to the point of running <code>./build/bin/mathport --make config-project.json Project::all</code>, but this gives me the error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">port</span> <span class=\"n\">Project</span><span class=\"o\">:</span><span class=\"n\">MyProject.SolveGoals</span> <span class=\"k\">with</span> <span class=\"n\">imports</span> <span class=\"o\">[</span><span class=\"n\">Leanbin.Init.Default</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.Tactic.Default</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.Data.List.Defs</span><span class=\"o\">]:</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathbin.Order.Lattice</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">environment</span> <span class=\"n\">already</span> <span class=\"n\">contains</span> <span class=\"bp\">'</span><span class=\"n\">MonotoneOn.map_sup'</span> <span class=\"k\">from</span> <span class=\"n\">Mathlib.Order.Lattice</span>\n</code></pre></div>\n<p>Any idea what this is?</p>",
        "id": 394406437,
        "sender_full_name": "Rishi Mehta",
        "timestamp": 1696247478
    },
    {
        "content": "<p>I think it is caused by the missing aligns, but maybe someone can confirm this. I opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/7529\">#7529</a>.</p>",
        "id": 395089055,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1696526785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>, is this an incomplete forward-port?</p>",
        "id": 395117557,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696539335
    },
    {
        "content": "<p>Yes exactly. You were the one asking for a pre-forward port PR.</p>",
        "id": 395123725,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696542545
    },
    {
        "content": "<p>I think this is more a reminder that #out-of-sync is an obstacle to mathport</p>",
        "id": 395124501,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696542926
    },
    {
        "content": "<p>(at least, if you don't use the <code>port-complete</code> tag and just hope that master of both will be fine)</p>",
        "id": 395124750,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696543071
    },
    {
        "content": "<p>I am getting this mathport error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">port</span> <span class=\"n\">Project</span><span class=\"o\">:</span><span class=\"n\">Galois</span> <span class=\"k\">with</span>\n<span class=\"n\">imports</span> <span class=\"o\">[</span><span class=\"n\">Leanbin.Init.Default</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.FieldTheory.KrullTopology</span><span class=\"o\">,</span>\n<span class=\"n\">Mathbin.FieldTheory.IsAlgClosed.AlgebraicClosure</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.GroupTheory.Abelianization</span><span class=\"o\">]:</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathbin.Algebra.Order.Ring.Canonical</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">environment</span> <span class=\"n\">already</span> <span class=\"n\">contains</span>\n<span class=\"bp\">'</span><span class=\"n\">CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddMonoid'</span>\n<span class=\"k\">from</span> <span class=\"n\">Mathlib.Algebra.Order.Ring.Canonical</span>\n</code></pre></div>\n<p>I think this may have been caused by the name change in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7503\">#7503</a>; is the solution to add this align?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"n\">align</span> <span class=\"n\">canonically_ordered_comm_semiring.to_canonically_ordered_add_monoid</span> <span class=\"n\">CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid</span>\n</code></pre></div>",
        "id": 395707931,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1696860609
    },
    {
        "content": "<p><del>I think that line is a bad idea, because <a href=\"https://leanprover-community.github.io/mathlib_docs/find/canonically_ordered_comm_semiring.to_canonically_ordered_add_monoid\">docs3#canonically_ordered_comm_semiring.to_canonically_ordered_add_monoid</a> doesn't exist</del></p>",
        "id": 395708067,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696860659
    },
    {
        "content": "<p>Sorry, got my PRs crossed. Yes, that align is good, but I think we should wait for <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>'s opinion on why things break without it</p>",
        "id": 395708339,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696860740
    },
    {
        "content": "<p>As I mentioned in another thread, this error is generally an indication that you have two incompatible versions of mathlib4 in use, and the usual way to fix it is to make sure everything is at the latest version (rerun the <code>make</code> commands)</p>",
        "id": 395731180,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696868090
    },
    {
        "content": "<p>The presence or non-presence of aligns does not cause this error. The only way you can legitimately get this error is if you have two definitions with the same name in different files that don't import each other, but this would fail anyway in mathlib CI because <code>Mathlib.lean</code> would not be able to build</p>",
        "id": 395731406,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696868183
    },
    {
        "content": "<p>Do I need to download mathport again? I have repeated all the steps <a href=\"https://github.com/leanprover-community/mathport#running-on-a-project-other-than-mathlib\">here</a>, starting from the <code>lake exe cache get</code>, and I am still getting the same error.</p>",
        "id": 395733937,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1696869268
    },
    {
        "content": "<p>you should also <code>git pull</code> if it's not a new clone of mathport</p>",
        "id": 395734729,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696869518
    },
    {
        "content": "<p>Ah ok, thanks!</p>",
        "id": 395734784,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1696869535
    },
    {
        "content": "<p>I'm presuming this thread is for miscellaneous errors in mathport - are naming errors when using mathport expected, or should I try to make an issue / isolate what's happening?</p>",
        "id": 397993004,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1698027091
    },
    {
        "content": "<p>What are the circumstances?</p>",
        "id": 397993425,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698027364
    },
    {
        "content": "<p>Unfortunately yes, there are some cases in which mathport will not perform renames it knows about when the identifier is used in certain positions (most notably after dot notation and in some tactics)</p>",
        "id": 397993505,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698027415
    },
    {
        "content": "<p>That was one of my cases - <code>simple_graph.adj.ne</code> used in dot notation changed <code>.ne</code> to <code>.Ne</code> for some reason. I also had some rewrites not get renamed, and a different thing where mathport chose the name but then didn't use the new name later on</p>",
        "id": 397993635,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1698027491
    },
    {
        "content": "<p>yeah those are basically both known issues</p>",
        "id": 397993711,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698027555
    },
    {
        "content": "<p>(the reason it renamed <code>.ne</code> to <code>.Ne</code> was because it doesn't have the type information to know what declaration is being referred to there so it makes its best guess based on other declarations and dot notation things it has seen)</p>",
        "id": 397993896,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698027642
    }
]