[
    {
        "content": "<p>Should this be possible? What is involved in <code>Meta.isDefEq.assign</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">Meta.isDefEq.assign</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">784801</span><span class=\"n\">s</span><span class=\"o\">]</span> <span class=\"bp\">âœ…</span> <span class=\"bp\">?</span><span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 364042118,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686066117
    },
    {
        "content": "<p>Are there no child nodes? Is this with <code>trace.profiler</code>?</p>",
        "id": 364044383,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1686066606
    },
    {
        "content": "<p>It was, yeah</p>",
        "id": 364044498,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686066637
    },
    {
        "content": "<p>No displayed child nodes</p>",
        "id": 364044540,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686066645
    },
    {
        "content": "<p>The parent node was solving some <code>refl p =?= (x = x)</code> problem and all the time was spent in this node</p>",
        "id": 364044855,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686066722
    },
    {
        "content": "<p>Inside <code>simp</code> inside <code>aesop_cat</code>, I think</p>",
        "id": 364045044,
        "sender_full_name": "Reid Barton",
        "timestamp": 1686066756
    },
    {
        "content": "<p>the only expensive thing I can think of in <code>assign</code> is the occurs-check</p>",
        "id": 364046653,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686067113
    }
]