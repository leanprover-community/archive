[
    {
        "content": "<p>The case atom n has been done. But I Really do not know how to solve the case impl since the substitution p here is in Nat. Here is my code. The picture shows the problem.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">form</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">atom</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">form</span>\n<span class=\"bp\">|</span> <span class=\"n\">impl</span> <span class=\"o\">:</span> <span class=\"n\">form</span> <span class=\"bp\">→</span> <span class=\"n\">form</span> <span class=\"bp\">→</span> <span class=\"n\">form</span>\n<span class=\"bp\">|</span> <span class=\"n\">neg</span> <span class=\"o\">:</span> <span class=\"n\">form</span> <span class=\"bp\">→</span> <span class=\"n\">form</span>\n<span class=\"bp\">|</span> <span class=\"n\">id</span> <span class=\"o\">:</span> <span class=\"n\">form</span> <span class=\"bp\">→</span> <span class=\"n\">form</span> <span class=\"bp\">→</span> <span class=\"n\">form</span>\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"#\"</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">form.atom</span> <span class=\"n\">n</span>\n<span class=\"kd\">notation</span> <span class=\"n\">p</span> <span class=\"s2\">\"⇒\"</span> <span class=\"n\">q</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">form.impl</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"~\"</span> <span class=\"n\">p</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">form.neg</span> <span class=\"n\">p</span>\n<span class=\"kd\">notation</span> <span class=\"n\">p</span> <span class=\"s2\">\"≡\"</span> <span class=\"n\">q</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">form.id</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n<span class=\"bp\">``````</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">proof</span> <span class=\"o\">:</span> <span class=\"n\">form</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">ax1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">⇒</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">⇒</span> <span class=\"n\">p</span><span class=\"o\">))</span>\n<span class=\"bp\">|</span> <span class=\"n\">ax2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">proof</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">⇒</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">⇒</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">⇒</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">⇒</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">⇒</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">⇒</span> <span class=\"n\">r</span><span class=\"o\">)))</span>\n<span class=\"bp\">|</span> <span class=\"n\">ax3</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">~~</span><span class=\"n\">p</span> <span class=\"bp\">⇒</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">ax4</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">⇒</span> <span class=\"bp\">~~</span><span class=\"n\">p</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">ax5</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">proof</span> <span class=\"o\">((</span><span class=\"bp\">~</span> <span class=\"n\">p</span> <span class=\"bp\">⇒</span> <span class=\"bp\">~</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">⇒</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">⇒</span> <span class=\"n\">p</span><span class=\"o\">))</span>\n<span class=\"bp\">|</span> <span class=\"n\">ax6</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">≡</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">ax7</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">proof</span> <span class=\"o\">(((</span><span class=\"bp\">#</span><span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">≡</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">⇒</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">⇒</span> <span class=\"n\">r</span> <span class=\"o\">[</span><span class=\"n\">p</span> <span class=\"bp\">↦</span> <span class=\"n\">q</span> <span class=\"o\">]</span> <span class=\"o\">))</span>\n<span class=\"c1\">-- p is a Nat</span>\n<span class=\"bp\">|</span> <span class=\"n\">mp</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">proof</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">⇒</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">proof</span> <span class=\"n\">q</span>\n\n\n<span class=\"kd\">inductive</span> <span class=\"n\">tV</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">tV</span>\n<span class=\"bp\">|</span> <span class=\"n\">two</span> <span class=\"o\">:</span> <span class=\"n\">tV</span>\n<span class=\"bp\">|</span> <span class=\"n\">three</span> <span class=\"o\">:</span> <span class=\"n\">tV</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">model</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">interpretation</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">tV</span><span class=\"o\">)</span>\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">tV.neg</span> <span class=\"o\">:</span> <span class=\"n\">tV</span> <span class=\"bp\">→</span> <span class=\"n\">tV</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.one</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.two</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.one</span>\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">tV.impl</span> <span class=\"o\">:</span> <span class=\"n\">tV</span> <span class=\"bp\">→</span> <span class=\"n\">tV</span> <span class=\"bp\">→</span> <span class=\"n\">tV</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.one</span><span class=\"o\">,</span> <span class=\"n\">tV.two</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.two</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.one</span><span class=\"o\">,</span> <span class=\"n\">tV.three</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.two</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.one</span>\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">tV.id</span> <span class=\"o\">:</span> <span class=\"n\">tV</span> <span class=\"bp\">→</span> <span class=\"n\">tV</span> <span class=\"bp\">→</span> <span class=\"n\">tV</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.one</span><span class=\"o\">,</span> <span class=\"n\">tV.one</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.one</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.two</span><span class=\"o\">,</span> <span class=\"n\">tV.two</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.one</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.three</span><span class=\"o\">,</span> <span class=\"n\">tV.three</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.one</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.three</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">tV.form.substitution2</span> <span class=\"o\">(</span><span class=\"n\">src</span> <span class=\"o\">:</span> <span class=\"n\">tV</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">tV</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tV</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">src</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.one</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.one</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.two</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.two</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tV.three</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tV.three</span>\n<span class=\"kd\">def</span> <span class=\"n\">sublemma</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span><span class=\"n\">tV</span><span class=\"o\">):</span>\n  <span class=\"n\">tV.impl</span> <span class=\"o\">(</span><span class=\"n\">tV.id</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">tV.impl</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">tV.one</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">cases</span> <span class=\"n\">p</span><span class=\"bp\">;</span> <span class=\"n\">cases</span> <span class=\"n\">q</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">rfl</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">cases</span> <span class=\"n\">q</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">reflemma</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">tV</span><span class=\"o\">):</span> <span class=\"n\">tV.impl</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">tV.one</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">cases</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">idlemma</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span><span class=\"n\">tV</span><span class=\"o\">):</span>\n  <span class=\"n\">tV.impl</span> <span class=\"n\">p</span> <span class=\"n\">tV.one</span> <span class=\"bp\">=</span> <span class=\"n\">tV.one</span><span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">cases</span> <span class=\"n\">p</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">subsublemma</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">n</span><span class=\"o\">:</span><span class=\"n\">tV</span><span class=\"o\">):</span>\n  <span class=\"n\">tV.impl</span> <span class=\"o\">(</span><span class=\"n\">tV.id</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">tV.impl</span> <span class=\"n\">n</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">tV.one</span>\n  <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">reflemma</span><span class=\"o\">]</span>\n     <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">idlemma</span><span class=\"o\">]</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ax7_valid</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">model.valid</span> <span class=\"o\">(((</span><span class=\"bp\">#</span><span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">≡</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">⇒</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">⇒</span> <span class=\"n\">r</span> <span class=\"o\">[</span><span class=\"n\">p</span> <span class=\"bp\">↦</span> <span class=\"n\">q</span> <span class=\"o\">]</span> <span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n<span class=\"n\">intro</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"n\">m</span>\n<span class=\"n\">cases</span> <span class=\"n\">r</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"n\">atom</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">em</span> <span class=\"o\">((</span><span class=\"bp\">#</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">#</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">inl</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n             <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"n\">p</span><span class=\"o\">)[</span><span class=\"n\">p</span><span class=\"bp\">↦</span><span class=\"n\">q</span><span class=\"o\">]</span><span class=\"bp\">=</span><span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n             <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h1</span><span class=\"o\">]</span>\n             <span class=\"n\">apply</span> <span class=\"n\">sublemma</span>\n  <span class=\"bp\">|</span> <span class=\"n\">inr</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">=</span><span class=\"n\">n</span><span class=\"o\">):=</span> <span class=\"kd\">by</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h1</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">h</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">rfl</span>\n             <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"n\">n</span><span class=\"o\">)[</span><span class=\"n\">p</span><span class=\"bp\">↦</span><span class=\"n\">q</span><span class=\"o\">]</span><span class=\"bp\">=#</span><span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h2</span><span class=\"o\">]</span>\n             <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h3</span><span class=\"o\">]</span>\n             <span class=\"n\">apply</span> <span class=\"n\">subsublemma</span>\n\n<span class=\"bp\">|</span> <span class=\"n\">impl</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">em</span> <span class=\"o\">((</span><span class=\"n\">p</span><span class=\"bp\">⇒</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n\n<span class=\"bp\">|</span> <span class=\"n\">neg</span> <span class=\"n\">p</span> <span class=\"bp\">=&gt;</span>  <span class=\"gr\">sorry</span>\n<span class=\"bp\">|</span> <span class=\"n\">id</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">=&gt;</span>  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/3121/SAluX3UhuALWQ7AYCK_VaIgY/Impl-cases-1.png\">Impl-cases-1.png</a><br>\n<a href=\"/user_uploads/3121/KNhCqA5MvhuAj_kX6NJ-jBqG/impl-cases-2.png\">impl-cases-2.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/SAluX3UhuALWQ7AYCK_VaIgY/Impl-cases-1.png\" title=\"Impl-cases-1.png\"><img src=\"/user_uploads/3121/SAluX3UhuALWQ7AYCK_VaIgY/Impl-cases-1.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/KNhCqA5MvhuAj_kX6NJ-jBqG/impl-cases-2.png\" title=\"impl-cases-2.png\"><img src=\"/user_uploads/3121/KNhCqA5MvhuAj_kX6NJ-jBqG/impl-cases-2.png\"></a></div>",
        "id": 408881259,
        "sender_full_name": "MarcusArelius",
        "timestamp": 1702980818
    }
]