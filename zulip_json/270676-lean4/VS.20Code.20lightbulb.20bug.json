[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyp</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hyp</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Now I press Quick Fix:<br>\n<a href=\"/user_uploads/3121/8o_RfDBh84lATqEp6yFlnRtP/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/8o_RfDBh84lATqEp6yFlnRtP/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/8o_RfDBh84lATqEp6yFlnRtP/image.png\"></a></div><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyp</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hyp</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n  <span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n  <span class=\"bp\">|</span> <span class=\"n\">inl</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n  <span class=\"bp\">|</span> <span class=\"n\">inr</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The generated code isn't desirable.</p>",
        "id": 392351871,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1695312016
    },
    {
        "content": "<p>This is a recent bug. I can reproduce on Mathlib master but not in MIL.</p>",
        "id": 392352782,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1695312264
    },
    {
        "content": "<p>And it has nothing to do with Mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.CodeAction</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyp</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hyp</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 392353444,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1695312423
    },
    {
        "content": "<p>Thanks for the minimization! I didn't know what the necessary import was.</p>",
        "id": 392353637,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1695312485
    },
    {
        "content": "<p>FYI it seems to be fine on the newest toolchain.</p>",
        "id": 393291328,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1695749851
    },
    {
        "content": "<p>Still broken for me in the web editor</p>",
        "id": 393293023,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695750391
    },
    {
        "content": "<p>The lightbulb on the <code>sorry</code> works, but not on the <code>cases</code></p>",
        "id": 393293118,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695750420
    },
    {
        "content": "<p>this is fixed on master</p>",
        "id": 393293217,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695750448
    },
    {
        "content": "<p>std master, not mathlib master</p>",
        "id": 393293273,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695750468
    },
    {
        "content": "<p>Dependency bump incoming at <a href=\"https://github.com/leanprover-community/mathlib4/pull/7393\">#7393</a>, looks promising locally.</p>",
        "id": 393343146,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695768719
    }
]