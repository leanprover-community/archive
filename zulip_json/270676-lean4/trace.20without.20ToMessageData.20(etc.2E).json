[
    {
        "content": "<p>Is there a way to just print \"the expression\" for debugging (in <code>trace[...] \"{a}\"</code>, <code>dbg_trace a</code>, or via some other method)? Often I get a message like \"failed to synthesize instance of <code>ToMessageData ...</code>\" (or <code>ToString ...</code>).</p>\n<p>Often I just want to see a simple  structure instance or an inductive type constructor application, so I feel there must be a (uniform) way.</p>",
        "id": 328355743,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1676589761
    },
    {
        "content": "<blockquote>\n<p>Is there a way to just print \"the expression\"</p>\n</blockquote>\n<p>The \"expression\" doesn't exist at runtime.  You only have the memory representation (which is like <code>ctor_0(0, ctor_2(1, \"abc\"))</code>) and we don't have a generic way to print in-memory objects.</p>",
        "id": 328372549,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1676599629
    },
    {
        "content": "<p>Hmm…do you think it would at all be possible (or even a good idea) to create e.g. a low-priority default instance of <code>ToMessageData</code>/<code>ToString</code> for all structure instances and inductive types, which just prints them “as you’d expect” (and ofc relied on similar instances for its field values/arguments)? It would make debugging a lot more convenient.</p>",
        "id": 328389399,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1676613150
    },
    {
        "content": "<p>Or is there a better way to debug when in this situation?</p>",
        "id": 328389409,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1676613164
    },
    {
        "content": "<p>It would indeed be nice to have a <code>deriving ToMessageData, Repr, ToString</code>.</p>",
        "id": 328389855,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1676613370
    }
]