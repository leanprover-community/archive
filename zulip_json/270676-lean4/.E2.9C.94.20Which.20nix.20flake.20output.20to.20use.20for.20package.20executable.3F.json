[
    {
        "content": "<p>I've a lean package that builds an executable, and I have a <code>flake.nix</code> file inside of it:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"ss\">description =</span> <span class=\"s2\">\"Toy\"</span><span class=\"p\">;</span>\n\n  <span class=\"ss\">inputs =</span> <span class=\"p\">{</span>\n    nixpkgs<span class=\"o\">.</span><span class=\"ss\">url =</span> <span class=\"s2\">\"github:nixos/nixpkgs/nixos-unstable\"</span><span class=\"p\">;</span>\n    flake-parts<span class=\"o\">.</span><span class=\"ss\">url =</span> <span class=\"s2\">\"github:hercules-ci/flake-parts\"</span><span class=\"p\">;</span>\n    lean<span class=\"o\">.</span><span class=\"ss\">url =</span> <span class=\"s2\">\"github:leanprover/lean4?ref=v4.1.0\"</span><span class=\"p\">;</span>\n  <span class=\"p\">};</span>\n\n  <span class=\"ss\">outputs =</span> inputs <span class=\"p\">@</span> <span class=\"p\">{</span>\n    self<span class=\"p\">,</span>\n    nixpkgs<span class=\"p\">,</span>\n    flake-parts<span class=\"p\">,</span>\n    lean<span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">}</span> <span class=\"p\">:</span> flake-parts<span class=\"o\">.</span>lib<span class=\"o\">.</span>mkFlake <span class=\"p\">{</span> <span class=\"k\">inherit</span> inputs<span class=\"p\">;</span> <span class=\"p\">}</span> <span class=\"p\">{</span>\n      <span class=\"ss\">flake =</span> <span class=\"p\">{</span>\n      <span class=\"p\">};</span>\n      <span class=\"ss\">systems =</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"x86_64-linux\"</span>\n        <span class=\"s2\">\"x86_64-darwin\"</span>\n      <span class=\"p\">];</span>\n      <span class=\"ss\">perSystem =</span> <span class=\"p\">{</span> system<span class=\"p\">,</span> pkgs<span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}:</span> <span class=\"k\">let</span>\n        <span class=\"ss\">leanPkgs =</span> lean<span class=\"o\">.</span>packages<span class=\"o\">.</span><span class=\"err\">$</span><span class=\"p\">{</span>system<span class=\"p\">};</span>\n        <span class=\"ss\">project =</span> leanPkgs<span class=\"o\">.</span>buildLeanPackage <span class=\"p\">{</span>\n          <span class=\"ss\">name =</span> <span class=\"s2\">\"Toy\"</span><span class=\"p\">;</span>\n          <span class=\"ss\">src =</span> <span class=\"o\">.</span><span class=\"l\">/.</span><span class=\"p\">;</span>\n        <span class=\"p\">};</span>\n      <span class=\"k\">in</span> <span class=\"k\">rec</span> <span class=\"p\">{</span>\n        <span class=\"ss\">packages =</span> project <span class=\"o\">//</span> <span class=\"p\">{</span>\n          <span class=\"k\">inherit</span> <span class=\"p\">(</span>leanPkgs<span class=\"p\">)</span> lean<span class=\"p\">;</span>\n          <span class=\"ss\">default =</span> packages<span class=\"o\">.</span>modRoot<span class=\"p\">;</span>\n        <span class=\"p\">};</span>\n        devShells<span class=\"o\">.</span><span class=\"ss\">default =</span> pkgs<span class=\"o\">.</span>mkShell <span class=\"p\">{</span>\n          <span class=\"ss\">buildInputs =</span> leanPkgs<span class=\"p\">;</span>\n        <span class=\"p\">};</span>\n      <span class=\"p\">};</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This builds (<code>nix build</code>) without problem. However when I use it as a dependency inside another flake the problem pops up:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code><span class=\"ss\">inputs =</span> <span class=\"p\">{</span>\n  <span class=\"o\">...</span>\n  toy<span class=\"o\">.</span><span class=\"ss\">url =</span> <span class=\"s2\">\"git+...\"</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n<span class=\"ss\">outputs =</span> inputs<span class=\"p\">@{</span> toy<span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">}</span> <span class=\"p\">:</span> flake-parts<span class=\"o\">.</span>lib<span class=\"o\">.</span>mkFlake <span class=\"p\">{</span> <span class=\"k\">inherit</span> inputs<span class=\"p\">;</span> <span class=\"p\">}</span> <span class=\"p\">{</span>\n  <span class=\"ss\">perSystem =</span> <span class=\"o\">...</span>\n  <span class=\"p\">{</span>\n    devShells<span class=\"o\">.</span><span class=\"ss\">default =</span> pkgs<span class=\"o\">.</span>mkShell <span class=\"p\">{</span>\n          <span class=\"ss\">buildInputs =</span> <span class=\"p\">[</span>toy<span class=\"o\">.</span>packages<span class=\"o\">.</span><span class=\"err\">$</span><span class=\"p\">{</span>system<span class=\"p\">}</span><span class=\"o\">.</span>executable<span class=\"p\">];</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n</code></pre></div>\n<p>When I use <code>nix develop</code>, the <code>toy</code> executable is actually <code>lake</code> and not the build executable from the package. What should I use instead of <code>toy.packages.${system}.executable</code> here to ensure that the build target is accessible?</p>",
        "id": 397763995,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1697829546
    },
    {
        "content": "<p>Also I could not execute <code>nix run</code> in the <code>Toy</code> repository:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unable</span> <span class=\"n\">to</span> <span class=\"n\">execute</span> <span class=\"bp\">'/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">q0ksl91jj58a56lr0pyv1a530kd12hs0</span><span class=\"bp\">-</span><span class=\"n\">Toy</span><span class=\"bp\">-</span><span class=\"n\">depRoot</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">Toy</span><span class=\"bp\">-</span><span class=\"n\">depRoot'</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n</code></pre></div>\n<p>where as <code>nix run .#executable</code> gives <code>lake</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">nix</span> <span class=\"n\">run</span> <span class=\"bp\">.#</span><span class=\"n\">executable</span>\n<span class=\"n\">Lake</span> <span class=\"n\">version</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">src</span> <span class=\"o\">(</span><span class=\"n\">Lean</span> <span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"n\">USAGE</span><span class=\"o\">:</span>\n  <span class=\"n\">lake</span> <span class=\"o\">[</span><span class=\"n\">OPTIONS</span><span class=\"o\">]</span> <span class=\"bp\">&lt;</span><span class=\"n\">COMMAND</span><span class=\"bp\">&gt;</span>\n<span class=\"bp\">...</span>\n</code></pre></div>",
        "id": 397764830,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1697829965
    },
    {
        "content": "<p>I found out about the problem. The main function was placed in <code>Main.lean</code> and everything else was in <code>Toy.lean</code> and <code>Toy/</code>. I was able to get things working by adding this to <code>buildLeanPackage</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code><span class=\"ss\">root =</span> <span class=\"p\">[</span> <span class=\"s2\">\"Main\"</span> <span class=\"s2\">\"Toy\"</span> <span class=\"p\">];</span>\n</code></pre></div>",
        "id": 397767062,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1697831047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"599027\">Leni Aniva</span> has marked this topic as resolved.</p>",
        "id": 397767069,
        "sender_full_name": "Notification Bot",
        "timestamp": 1697831051
    }
]