[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.List.Count</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">l.count</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">∈</span> <span class=\"n\">l</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">List.count_pos_iff_mem</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Why does the second rw fail here? I'd expect the two BEq instances on Nat here to be the same</p>",
        "id": 389186859,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1693919620
    },
    {
        "content": "<p>Related: <a href=\"https://github.com/leanprover/lean4/pull/2041\">https://github.com/leanprover/lean4/pull/2041</a> <a href=\"https://github.com/leanprover/lean4/pull/2038\">https://github.com/leanprover/lean4/pull/2038</a></p>",
        "id": 389188098,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1693919960
    },
    {
        "content": "<p>Ah thanks for those references. Would be great to see progress on this</p>",
        "id": 389188301,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1693920023
    },
    {
        "content": "<p>The fact that this rewrite fails seems undesirable:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.List.Count</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">l.count</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">∈</span> <span class=\"n\">l</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">List.count_pos_iff_mem</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>This came up in LftCM, and I thought I reported it earlier but I can't find it anywhere now, so I'm making a new thread.</p>",
        "id": 392531731,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1695393073
    },
    {
        "content": "<p>Oops - found the thread: <a href=\"#narrow/stream/270676-lean4/topic/Boolean.20equality.20on.20nat.20mismatch\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Boolean.20equality.20on.20nat.20mismatch</a>. Doesn't seem to have much progress since January though, unfortunately...</p>",
        "id": 392532756,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1695393331
    },
    {
        "content": "<p>Should we merge the threads?</p>",
        "id": 392533482,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695393512
    },
    {
        "content": "<p><code>attribute [-instance] instBEqNat</code> is a workaround for your issue</p>",
        "id": 392533527,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695393522
    },
    {
        "content": "<p>4 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/DecidableEq.20Nat.20mismatch\">#lean4 &gt; DecidableEq Nat mismatch</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 392537076,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695394455
    }
]