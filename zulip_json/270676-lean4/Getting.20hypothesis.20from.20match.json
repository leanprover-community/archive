[
    {
        "content": "<p>How can I get the match as a hypothesis when pattern matching? I.e. what can replace the <code>sorry</code> in this mwe?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">MyStructure</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">MyStructure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">x.s</span> <span class=\"bp\">=</span> <span class=\"o\">[])</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">MyStructure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">x.s</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">have</span> <span class=\"n\">proof</span> <span class=\"o\">:</span> <span class=\"n\">x.s</span> <span class=\"bp\">=</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n    <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">proof</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">false</span>\n</code></pre></div>\n<p>For <code>if</code> there is the <code>if h : x.s = []</code> syntax, but this doesn't work here, since <code>α</code> might not have a decidable <code>=</code>.</p>",
        "id": 396966028,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1697484791
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">MyStructure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x.s</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">have</span> <span class=\"n\">proof</span> <span class=\"o\">:</span> <span class=\"n\">x.s</span> <span class=\"bp\">=</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span> <span class=\"n\">h</span>\n    <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">proof</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">false</span>\n</code></pre></div>",
        "id": 396967809,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1697485693
    },
    {
        "content": "<p>no need for <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span> I think most people don't know that this is an option... it's not used very often.</p>",
        "id": 396968306,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1697485929
    },
    {
        "content": "<p>Perhaps I'm missing it, but I don't think this is documented in TPiL or in FPiL? I've also needed this in practice, so I believe it's worth being documented somewhere</p>",
        "id": 396968625,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1697486080
    },
    {
        "content": "<p>This will certainly be in the reference manual at some point. <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span></p>",
        "id": 396968706,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697486122
    },
    {
        "content": "<p>It's not in the <a href=\"https://lean-lang.org/reference/declarations.html?highlight=match#match-expressions\">Match expressions section of the reference manual</a></p>",
        "id": 396968969,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1697486230
    }
]