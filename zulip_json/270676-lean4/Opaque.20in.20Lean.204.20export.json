[
    {
        "content": "<p>Continuing with my trepplein 4 adventures, the next failure I encounter seems to be that an opaque definition with an <code>implementedBy</code> seems to not be exported (at least before its use). Concretely, the bit which is needed is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[</span><span class=\"n\">implemented_by</span> <span class=\"n\">TSyntaxArray.rawImpl</span><span class=\"kd\">]</span>\n<span class=\"n\">opaque</span> <span class=\"n\">TSyntaxArray.raw</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"o\">:</span> <span class=\"n\">TSyntaxArray</span> <span class=\"n\">ks</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">Syntax</span> <span class=\"o\">:=</span> <span class=\"n\">Array.empty</span>\n</code></pre></div>\n<p>and this is called by <code>Lean.Syntax.mkApp</code>. </p>\n<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> is this a bug in the exporter? Or is there another undocumented case in the export format? Or is it a problem with trepplein?</p>\n<p>Meanwhile a partial update - I have implemented (following <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>) the nested inductives and they seem okay but bugs will only turn up in larger tests.</p>",
        "id": 398277138,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1698149858
    },
    {
        "content": "<p>I don't see how that attribute could affect the exporter but it's been some time since I looked at the code</p>",
        "id": 398277413,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1698149942
    },
    {
        "content": "<p>There does seem to be a case where opaque is treated differently:<br>\n<a href=\"https://github.com/leanprover/lean4export/blob/f1d507ff8c8ba2df2316e78c0186a84c6791305f/Export.lean#L99\">https://github.com/leanprover/lean4export/blob/f1d507ff8c8ba2df2316e78c0186a84c6791305f/Export.lean#L99</a></p>",
        "id": 398278514,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1698150359
    },
    {
        "content": "<p>Oh, that would certainly explain it</p>",
        "id": 398279269,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1698150634
    },
    {
        "content": "<p>I have PRed the change. This fixes that error in trepplein but bugs remain (either created by mean or due to Lean 3 vs Lean 4).</p>",
        "id": 398292858,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1698155213
    },
    {
        "content": "<p>Status update: the next bugs are because inequalities and operations on literal naturals need to be overridden.</p>",
        "id": 398307785,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1698159885
    }
]