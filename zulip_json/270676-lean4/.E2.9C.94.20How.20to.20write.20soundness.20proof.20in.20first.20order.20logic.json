[
    {
        "content": "<p>I am a master's student working on formalizing first-order logic within an institutional setting, where the semantics are defined under a Kripke model. This work is part of my writing sample. Currently, I am writing about the soundness aspect, but I am unsure how to proceed. Below is my code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Formula</span> <span class=\"n\">Definition</span><span class=\"o\">:</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">formula</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Signature</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">atomic_formula</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">σ.relation_symbols</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">σ.arity'</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"n\">σ</span> <span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">conjunction</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">disjunction</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">existential_quantification</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">universal_quantification</span> <span class=\"o\">:</span>  <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">implication</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">bottom</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">negation</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n</code></pre></div>\n<p>Syntatic part: (by natural deduction)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">proof</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Signature</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">formula</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">ref</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">∈</span> <span class=\"bp\">Γ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">A</span>\n<span class=\"bp\">|</span> <span class=\"n\">introI</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ∪</span><span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span> <span class=\"n\">B</span><span class=\"o\">)):</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">→ᵢ</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">elimI</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span> <span class=\"n\">Q</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">→ᵢ</span> <span class=\"n\">B</span><span class=\"o\">)))(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">proof</span> <span class=\"n\">Q</span> <span class=\"n\">A</span><span class=\"o\">)):</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"bp\">∪</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"n\">B</span>\n<span class=\"bp\">|</span> <span class=\"n\">introA</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span> <span class=\"n\">Q</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">A</span><span class=\"o\">)(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"n\">Q</span> <span class=\"n\">B</span><span class=\"o\">):</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"bp\">∪</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">∧ᵢ</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">elimA1</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">∧ᵢ</span> <span class=\"n\">B</span><span class=\"o\">)):</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">A</span>\n<span class=\"bp\">|</span> <span class=\"n\">elimA2</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">∧ᵢ</span> <span class=\"n\">B</span><span class=\"o\">)):</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">B</span>\n<span class=\"bp\">|</span> <span class=\"n\">introO1</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">A</span><span class=\"o\">):</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">∨ᵢ</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">introO2</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">B</span><span class=\"o\">):</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">∨ᵢ</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">elimO</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span> <span class=\"n\">Q</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">∨ᵢ</span> <span class=\"n\">B</span><span class=\"o\">))(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span> <span class=\"n\">C</span><span class=\"o\">)(</span><span class=\"n\">h3</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">B</span><span class=\"o\">})</span> <span class=\"n\">C</span><span class=\"o\">):</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"bp\">∪</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"n\">C</span>\n<span class=\"bp\">|</span> <span class=\"n\">introN</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span> <span class=\"n\">Q</span><span class=\"o\">}{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">}(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ∪</span><span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span> <span class=\"n\">B</span><span class=\"o\">)(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"n\">Q</span><span class=\"bp\">∪</span><span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span> <span class=\"o\">(</span><span class=\"bp\">¬ᵢ</span><span class=\"n\">B</span><span class=\"o\">)):</span><span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"bp\">∪</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">¬ᵢ</span><span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">ine</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">}(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">A</span><span class=\"o\">)(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span>  <span class=\"o\">(</span><span class=\"bp\">¬ᵢ</span><span class=\"n\">A</span><span class=\"o\">)):</span><span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">B</span>\n<span class=\"bp\">|</span> <span class=\"n\">introF</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}{</span><span class=\"n\">A</span><span class=\"o\">}(</span><span class=\"n\">h1</span><span class=\"o\">:</span><span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">A</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℤ</span> <span class=\"o\">)(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∉</span> <span class=\"o\">(</span><span class=\"n\">free_variables_set</span> <span class=\"bp\">Γ</span><span class=\"o\">)):</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"bp\">∀ᵢ</span> <span class=\"o\">(</span><span class=\"n\">formula_subsitution</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">term.free_variable</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">term.free_variable</span> <span class=\"o\">(</span><span class=\"n\">depth</span> <span class=\"n\">A</span><span class=\"o\">))))</span>\n<span class=\"bp\">|</span> <span class=\"n\">elimF</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}{</span><span class=\"n\">A</span><span class=\"o\">}(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"bp\">∀ᵢ</span> <span class=\"n\">A</span><span class=\"o\">))(</span><span class=\"n\">τ</span><span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"n\">σ</span><span class=\"o\">):</span><span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">formula_lift</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">formula_subsitution</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">term.free_variable</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">term_lift</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"n\">τ</span><span class=\"o\">)))</span>\n<span class=\"bp\">|</span> <span class=\"n\">introE</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span><span class=\"o\">}{</span><span class=\"n\">A</span><span class=\"o\">}(</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"n\">σ</span><span class=\"o\">)(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"n\">A</span> <span class=\"o\">):</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"bp\">∃ᵢ</span> <span class=\"n\">formula_subsitution</span> <span class=\"n\">A</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"n\">term.free_variable</span> <span class=\"o\">(</span><span class=\"n\">depth</span> <span class=\"n\">A</span><span class=\"o\">)))</span>\n<span class=\"bp\">|</span> <span class=\"n\">elimE</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span> <span class=\"n\">Q</span><span class=\"o\">}{</span><span class=\"n\">A</span><span class=\"o\">}(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"bp\">∃ᵢ</span> <span class=\"n\">A</span><span class=\"o\">))(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span> <span class=\"n\">B</span><span class=\"o\">):</span> <span class=\"n\">proof</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"bp\">∪</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"n\">B</span>\n</code></pre></div>\n<p>Semantic part:（by Kripkle model)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">model</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Signature</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">W</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">world</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"n\">world</span> <span class=\"bp\">→</span> <span class=\"n\">world</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">D</span><span class=\"o\">:</span> <span class=\"n\">world</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">obj</span> <span class=\"o\">)</span> <span class=\"c1\">-- Domain</span>\n<span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">w</span><span class=\"o\">:</span><span class=\"n\">world</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">σ.relation_symbols</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">σ.arity'</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">β</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">w</span><span class=\"o\">:</span><span class=\"n\">world</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"c1\">--Nat is the index of Constant</span>\n<span class=\"o\">(</span><span class=\"n\">refl</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">w</span> <span class=\"bp\">∈</span> <span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">w</span> <span class=\"n\">w</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">trans</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">w</span> <span class=\"bp\">∈</span> <span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">v</span> <span class=\"bp\">∈</span> <span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">u</span> <span class=\"bp\">∈</span> <span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">w</span> <span class=\"n\">v</span> <span class=\"bp\">→</span> <span class=\"n\">R</span> <span class=\"n\">v</span> <span class=\"n\">u</span> <span class=\"bp\">→</span> <span class=\"n\">R</span> <span class=\"n\">w</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mono</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">u</span> <span class=\"bp\">∈</span> <span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">v</span> <span class=\"bp\">∈</span> <span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">⊂</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">v</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">natural_transfer</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">:</span> <span class=\"n\">world</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">R</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">v</span><span class=\"o\">))</span> <span class=\"c1\">--transfer obj in Du to Dv</span>\n<span class=\"o\">(</span><span class=\"n\">mono_R</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">u</span> <span class=\"bp\">∈</span> <span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">v</span> <span class=\"bp\">∈</span> <span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">r</span><span class=\"o\">:</span><span class=\"n\">σ.relation_symbols</span> <span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">args</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">σ.arity'</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">u</span><span class=\"o\">)),</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">u</span> <span class=\"n\">r</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"bp\">→</span>  <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">v</span> <span class=\"n\">r</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">q</span><span class=\"o\">:</span><span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">σ.arity'</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">natural_transfer</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">args</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"o\">)))</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">force_form</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Signature</span><span class=\"o\">}:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">w</span><span class=\"o\">:</span><span class=\"n\">world</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"n\">model</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">term</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">M.D</span> <span class=\"n\">w</span><span class=\"o\">))</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">formula.atomic_formula</span> <span class=\"n\">r</span> <span class=\"n\">ts</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span><span class=\"k\">fun</span> <span class=\"n\">w</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">M</span><span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">v</span><span class=\"bp\">=&gt;</span> <span class=\"n\">M.α</span> <span class=\"n\">w</span> <span class=\"n\">r</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">index</span><span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">term_lift</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">ts</span> <span class=\"n\">index</span><span class=\"o\">))))</span>\n<span class=\"bp\">|</span> <span class=\"n\">formula.bottom</span> <span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">_</span>  <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">false</span>\n<span class=\"bp\">|</span> <span class=\"n\">formula.negation</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span><span class=\"k\">fun</span> <span class=\"n\">n</span><span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">w</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">M</span><span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">v</span><span class=\"bp\">=&gt;</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">u</span><span class=\"o\">:</span><span class=\"n\">world</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">M.R</span> <span class=\"n\">w</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">force_form</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"n\">u</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">t</span><span class=\"bp\">=&gt;</span> <span class=\"n\">M.natural_transfer</span> <span class=\"n\">w</span> <span class=\"n\">u</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">t</span><span class=\"o\">))</span>\n<span class=\"bp\">|</span> <span class=\"n\">formula.implication</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span> <span class=\"bp\">=&gt;</span><span class=\"k\">fun</span> <span class=\"n\">n</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">w</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">M</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">v</span><span class=\"bp\">=&gt;∀</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">world</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">M.R</span> <span class=\"n\">w</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">force_form</span> <span class=\"n\">f1</span> <span class=\"n\">n</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">force_form</span> <span class=\"n\">f2</span> <span class=\"n\">n</span> <span class=\"n\">u</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">t</span><span class=\"bp\">=&gt;</span> <span class=\"n\">M.natural_transfer</span> <span class=\"n\">w</span> <span class=\"n\">u</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">t</span><span class=\"o\">)))</span>\n<span class=\"bp\">|</span> <span class=\"n\">formula.conjunction</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span> <span class=\"bp\">=&gt;</span><span class=\"k\">fun</span> <span class=\"n\">n</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">w</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">M</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">v</span><span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">force_form</span> <span class=\"n\">f1</span> <span class=\"n\">n</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">force_form</span> <span class=\"n\">f2</span> <span class=\"n\">n</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">formula.disjunction</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span> <span class=\"bp\">=&gt;</span><span class=\"k\">fun</span> <span class=\"n\">n</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">w</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">M</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">v</span><span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">force_form</span> <span class=\"n\">f1</span> <span class=\"n\">n</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">force_form</span> <span class=\"n\">f2</span> <span class=\"n\">n</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">formula.existential_quantification</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span><span class=\"k\">fun</span> <span class=\"n\">n</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">w</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">M</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">v</span><span class=\"bp\">=&gt;</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">M.D</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"n\">force_form</span> <span class=\"o\">(</span><span class=\"n\">formula_subsitution</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">term.free_variable</span> <span class=\"o\">(</span><span class=\"n\">depth</span> <span class=\"n\">f</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">term.free_variable</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">modify_value_function</span> <span class=\"n\">M</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">formula.universal_quantification</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span><span class=\"k\">fun</span> <span class=\"n\">n</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">w</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">fun</span> <span class=\"n\">M</span><span class=\"bp\">=&gt;</span>  <span class=\"k\">fun</span> <span class=\"n\">v</span><span class=\"bp\">=&gt;</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">M.D</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"n\">force_form</span> <span class=\"o\">(</span><span class=\"n\">formula_subsitution</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">term.free_variable</span> <span class=\"o\">(</span><span class=\"n\">depth</span> <span class=\"n\">f</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">term.free_variable</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">modify_value_function</span> <span class=\"n\">M</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- force_form : the formula is correct under world w and value function v.</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">semantic_consequence</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Signature</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">formula</span> <span class=\"n\">σ</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">model</span> <span class=\"n\">σ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">world</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">M.D</span> <span class=\"n\">w</span><span class=\"o\">)),</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span><span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"o\">),</span><span class=\"n\">f</span> <span class=\"bp\">∈</span> <span class=\"bp\">Γ</span> <span class=\"bp\">→</span>  <span class=\"n\">force_form</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">force_form</span> <span class=\"n\">A</span> <span class=\"mi\">0</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span>\n</code></pre></div>\n<p>For the soundness proof, I need to demonstrate that (Q ⊢ A) implies (Q ⊧ A). I am now employing \"cases with\" to conduct an inductive proof on formula f.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">soundness</span> <span class=\"o\">{</span><span class=\"n\">σ</span><span class=\"o\">:</span> <span class=\"n\">Signature</span><span class=\"o\">}{</span><span class=\"n\">Q</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"o\">)}{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span> <span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"bp\">⊢</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"bp\">⊧</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">intro</span> <span class=\"n\">h</span>\n<span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"n\">ref</span> <span class=\"n\">hp</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">intro</span> <span class=\"n\">M</span> <span class=\"n\">w</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n            <span class=\"n\">apply</span> <span class=\"n\">h2</span>\n            <span class=\"n\">assumption</span>\n<span class=\"bp\">|</span> <span class=\"n\">introI</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">intro</span> <span class=\"n\">M</span> <span class=\"n\">w</span> <span class=\"n\">v</span> <span class=\"n\">hf</span>\n                  <span class=\"k\">have</span> <span class=\"n\">h2</span><span class=\"o\">:(</span><span class=\"n\">Q</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span><span class=\"bp\">⊧</span><span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"n\">soundness</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>In my Lean infoview, I have reached the following point:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">case</span> <span class=\"n\">introI</span>\n<span class=\"n\">σ</span><span class=\"o\">:</span> <span class=\"n\">Signature</span>\n<span class=\"n\">Q</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">formula</span> <span class=\"n\">σ</span><span class=\"o\">)</span>\n<span class=\"n\">AB</span><span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span>\n<span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span><span class=\"bp\">⊢</span><span class=\"n\">B</span>\n<span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">model</span> <span class=\"n\">σ</span>\n<span class=\"n\">w</span><span class=\"o\">:</span> <span class=\"n\">world</span>\n<span class=\"n\">v</span><span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">model.D</span> <span class=\"n\">M</span> <span class=\"n\">w</span><span class=\"o\">)</span>\n<span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">σ</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"bp\">∈</span> <span class=\"n\">Q</span> <span class=\"bp\">→</span> <span class=\"n\">force_form</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span>\n<span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span><span class=\"bp\">⊧</span><span class=\"n\">B</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">force_form</span> <span class=\"o\">(</span><span class=\"n\">A</span><span class=\"bp\">→ᵢ</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"mi\">0</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span>\n</code></pre></div>\n<p>I am seeking guidance on how to construct </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">force_form</span> <span class=\"o\">(</span><span class=\"n\">A</span><span class=\"bp\">→ᵢ</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"mi\">0</span> <span class=\"n\">w</span> <span class=\"n\">M</span> <span class=\"n\">v</span>\n</code></pre></div>\n<p>The tactic \"constructor\" did not work, as it failed with the message </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">target</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">an</span> <span class=\"kd\">inductive</span> <span class=\"n\">datatype</span>\n</code></pre></div>\n<p>Tactics like \"simp\" and \"unfold\" were also unsuccessful. </p>\n<p>I am considering whether I need to define another function to construct the force_form. My hypothesis is that I have only defined the properties of force_form but not its constructor, meaning the definition relates only to the 'if' part of 'if and only if'. Therefore, should I define another function for constructing the force_form?</p>\n<p><a href=\"/user_uploads/3121/51y2dopHXda5Sm_PzS2M0K1y/IFOL.lean\">IFOL.lean</a></p>",
        "id": 402874523,
        "sender_full_name": "Dongheng Chen",
        "timestamp": 1700312455
    },
    {
        "content": "<p>I can't answer your question but please read <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>  and then edit your post, it will make it more readable that way :-)</p>",
        "id": 402874778,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700312601
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20write.20soundness.20proof.20in.20first.20order.20logic/near/402874778\">said</a>:</p>\n<blockquote>\n<p>I can't answer your question but please read <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>  and then edit your post, it will make it more readable that way :-)</p>\n</blockquote>\n<p>Thanks! I have modified them.</p>",
        "id": 402874960,
        "sender_full_name": "Dongheng Chen",
        "timestamp": 1700312762
    },
    {
        "content": "<p>I've taken the liberty of making the file slightly more comfortable to read<br>\n<a href=\"/user_uploads/3121/uuC2_QhwfYyZz2BzUgJOYCdk/IFOL2.lean\">IFOL2.lean</a><br>\nAs for your question, I don't think you'll be able to prove anything regarding <code>force_form</code> until you manage to prove its termination, so this should probably be your main focus.</p>",
        "id": 402880687,
        "sender_full_name": "Arthur Adjedj",
        "timestamp": 1700317230
    },
    {
        "content": "<p>And here is a file with a proven termination:<br>\n<a href=\"/user_uploads/3121/sN6CPVksJbHMm8Zrw0nJPQjK/IFOL3.lean\">IFOL3.lean</a></p>",
        "id": 402882551,
        "sender_full_name": "Arthur Adjedj",
        "timestamp": 1700318619
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"432410\">Arthur Adjedj</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20write.20soundness.20proof.20in.20first.20order.20logic/near/402882551\">said</a>:</p>\n<blockquote>\n<p>And here is a file with a proven termination:<br>\n<a href=\"/user_uploads/3121/sN6CPVksJbHMm8Zrw0nJPQjK/IFOL3.lean\">IFOL3.lean</a></p>\n</blockquote>\n<p>！！！！ Thank you ！！！<br>\nI can learn a lot from your proof of termination!!!<br>\nThanks again!</p>",
        "id": 402882719,
        "sender_full_name": "Dongheng Chen",
        "timestamp": 1700318765
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"432410\">Arthur Adjedj</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20write.20soundness.20proof.20in.20first.20order.20logic/near/402882551\">said</a>:</p>\n<blockquote>\n<p>And here is a file with a proven termination:<br>\n<a href=\"/user_uploads/3121/sN6CPVksJbHMm8Zrw0nJPQjK/IFOL3.lean\">IFOL3.lean</a></p>\n</blockquote>\n<p>Oh! I can use intro now!<br>\nThanks!!!</p>",
        "id": 402882873,
        "sender_full_name": "Dongheng Chen",
        "timestamp": 1700318921
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481327\">Dongheng Chen</span> has marked this topic as resolved.</p>",
        "id": 402882883,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700318938
    }
]