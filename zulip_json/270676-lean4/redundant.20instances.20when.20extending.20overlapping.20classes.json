[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean.Meta.Instances</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">A</span>\n<span class=\"kd\">class</span> <span class=\"n\">B</span>\n<span class=\"kd\">class</span> <span class=\"n\">C</span> <span class=\"kd\">extends</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">B</span>\n<span class=\"kd\">class</span> <span class=\"n\">D</span> <span class=\"kd\">extends</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">C</span>\n<span class=\"kd\">structure</span> <span class=\"n\">E</span> <span class=\"kd\">extends</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">C</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">Lean.Meta.getInstancePriority</span><span class=\"bp\">?</span> <span class=\"bp\">`</span><span class=\"n\">D.toB</span> <span class=\"c1\">-- some 1000</span>\n<span class=\"k\">#eval</span> <span class=\"n\">Lean.Meta.getInstancePriority</span><span class=\"bp\">?</span> <span class=\"bp\">`</span><span class=\"n\">E.toB</span> <span class=\"c1\">-- some 1000</span>\n</code></pre></div>\n<p>It seems like Lean generates instances for all instance parameters from ancestor classes in <code>*.mk</code>.</p>",
        "id": 402549716,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1700166126
    },
    {
        "content": "<p>I didn't see this message, but as you saw, filed <a href=\"https://github.com/leanprover/lean4/pull/2905\">lean4#2905</a> with a similar example</p>",
        "id": 402808073,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700269146
    }
]