[
    {
        "content": "<p>I'm trying to use mathport to migrate a project. I followed the steps in the README and got to the place run <code>./build/bin/mathport --make config-project.json Project::all</code>. However, that command throws errors and nothing is put out.</p>\n<p>I tried to remove all <code>import</code> from <code>all.lean</code> except a test file:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">test</span>\n</code></pre></div>\n<p>With <code>test.lean</code> containing (taken from project setup docs)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.basic</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">topological_space</span>\n</code></pre></div>\n<p>Which produces the following (modulo the specific <code>.olean</code> file):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Project\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">all</span> <span class=\"o\">}</span>\n<span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Leanbin\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">init.default</span> <span class=\"o\">}</span>\n<span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Project\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">test</span> <span class=\"o\">}</span>\n<span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Leanbin\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">init.default</span> <span class=\"o\">}</span>\n<span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Mathbin\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">topology.basic</span> <span class=\"o\">}</span>\n<span class=\"n\">porting</span> <span class=\"n\">Test</span>\n\n<span class=\"o\">[</span><span class=\"n\">mathport</span><span class=\"o\">]</span> <span class=\"n\">START</span> <span class=\"n\">test</span>\n\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">port</span> <span class=\"n\">Project</span><span class=\"o\">:</span><span class=\"n\">Test</span> <span class=\"k\">with</span> <span class=\"n\">imports</span> <span class=\"o\">[</span><span class=\"n\">Leanbin.Init.Default</span><span class=\"o\">,</span> <span class=\"n\">Mathbin.Topology.Basic</span><span class=\"o\">]:</span>\n<span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"kn\">open</span> <span class=\"bp\">'./</span><span class=\"n\">Outputs</span><span class=\"bp\">/</span><span class=\"n\">oleans</span><span class=\"bp\">/</span><span class=\"n\">mathbin</span><span class=\"bp\">/</span><span class=\"n\">Mathbin</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">GroupWithZero</span><span class=\"bp\">/</span><span class=\"n\">Semiconj.olean'</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">allocate</span> <span class=\"n\">memory</span>\n<span class=\"n\">Failed</span> <span class=\"n\">to</span> <span class=\"n\">port</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Project\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">test</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>I am running this in a Linux VM. It has a bit less than 8 GiB of free RAM before running the command.</p>",
        "id": 394961226,
        "sender_full_name": "Naruyoko",
        "timestamp": 1696479400
    },
    {
        "content": "<p>It's possible you need more RAM than that. If you tell me a branch that I can check out and then run a single command to test for you, I'm happy to run it on a larger machine.</p>",
        "id": 394970703,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1696486119
    },
    {
        "content": "<p>Thanks, I have it <a href=\"https://github.com/Naruyoko/googology/tree/mathport-test/misc/lean/googology3\">here</a>. The stuff outside the directory is unrelated to the Lean project.</p>\n<p>I wonder how much RAM is needed to run <code>mathport</code>. I guess it's loading all of <code>mathlib</code>.</p>",
        "id": 395076396,
        "sender_full_name": "Naruyoko",
        "timestamp": 1696522182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Hello, I'm just checking in. Can you try <code>mathport</code> from your computer?<br>\nI removed the unrelated files from the branch.</p>",
        "id": 397587263,
        "sender_full_name": "Naruyoko",
        "timestamp": 1697755425
    },
    {
        "content": "<p>Can you tell me exactly what you'd like me to run? Ideally a code block with terminal commands that I can run in an empty directory. :-) I'm a bit busy today to work out the details otherwise.</p>",
        "id": 397591300,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697758107
    },
    {
        "content": "<p>Thanks, I'll do so in a moment.</p>",
        "id": 397593943,
        "sender_full_name": "Naruyoko",
        "timestamp": 1697759931
    },
    {
        "content": "<p>I am now getting a different error... Now, if I have any <code>import</code>s besides <code>import test</code>, then I get the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">libc</span><span class=\"bp\">++</span><span class=\"n\">abi</span><span class=\"o\">:</span> <span class=\"n\">terminating</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">uncaught</span> <span class=\"n\">exception</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">evaluate</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">init</span><span class=\"o\">]</span><span class=\"bp\">`</span> <span class=\"n\">declaration</span> <span class=\"bp\">'</span><span class=\"n\">Lean.pp.beta'</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"n\">module</span>\n</code></pre></div>\n<p><a href=\"https://gist.github.com/Naruyoko/391d40a9297cc85a7c7c3f6d36268f79\">Here is a script</a></p>",
        "id": 397631848,
        "sender_full_name": "Naruyoko",
        "timestamp": 1697779517
    },
    {
        "content": "<p>As now more people would try to port to Lean 4, maybe mathport as a docker image or a more lightweight bundle is easier to use across environments, or even better, a Github actions that produces a lean4 branch for the repo.</p>",
        "id": 397634482,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697781347
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"579192\">@Naruyoko</span> sorry, this was due to a problem that we've just fixed in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7774\">#7774</a>. Can you make sure everything is using the very lastest Mathlib master, and try again?</p>",
        "id": 397638855,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697783237
    },
    {
        "content": "<p>Oh, unfortunate timing... I'll try it again.</p>",
        "id": 397639504,
        "sender_full_name": "Naruyoko",
        "timestamp": 1697783501
    },
    {
        "content": "<p>It appears mathport master is broken as of today due to the same issue: <a href=\"https://github.com/leanprover-community/mathport/actions/runs/6583820317/job/17887403829\">https://github.com/leanprover-community/mathport/actions/runs/6583820317/job/17887403829</a></p>",
        "id": 397641843,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697784455
    },
    {
        "content": "<p>I tried to use the updated version by adding a <code>sed</code> command to replace the commit hash for <code>mathlib4</code> after cloning <code>mathport</code> like follows:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>sed<span class=\"w\"> </span>-i<span class=\"w\"> </span><span class=\"s2\">\"s|23a69c77985689d9930944c79bbccecf66cffea0|{NEWER HASH}|\"</span><span class=\"w\"> </span>lake-manifest.json\n</code></pre></div>\n<p>Unfortunately, this doesn't work with either <code>3c0fc27</code> or <code>aa0ff04</code>, though this could just be an inappropriate way to update <code>mathlib4</code>.<br>\nAt <code>lake exe cache get</code>, the console gets filled thousands of:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Relation</span><span class=\"bp\">/</span><span class=\"n\">Rfl.lean</span> <span class=\"n\">not</span> <span class=\"n\">found.</span> <span class=\"n\">Skipping</span> <span class=\"n\">all</span> <span class=\"n\">files</span> <span class=\"n\">that</span> <span class=\"n\">depend</span> <span class=\"n\">on</span> <span class=\"n\">it</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Relation</span><span class=\"bp\">/</span><span class=\"n\">Symm.lean</span> <span class=\"n\">not</span> <span class=\"n\">found.</span> <span class=\"n\">Skipping</span> <span class=\"n\">all</span> <span class=\"n\">files</span> <span class=\"n\">that</span> <span class=\"n\">depend</span> <span class=\"n\">on</span> <span class=\"n\">it</span>\n</code></pre></div>\n<p>I guess I'll have to try again tomorrow, thanks for the support.</p>",
        "id": 397644238,
        "sender_full_name": "Naruyoko",
        "timestamp": 1697785340
    },
    {
        "content": "<p>I reran <code>mathport</code> again today, and it worked this time. I was able to put the file in a new Lean 4 project have the language server recognize <code>mathlib</code> imports with a few minor fixes.<br>\nThank you.</p>",
        "id": 397815724,
        "sender_full_name": "Naruyoko",
        "timestamp": 1697864641
    }
]