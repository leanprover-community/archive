[
    {
        "content": "<p>Is there a way to make <code>fromJson</code> respect the default values of fields in a structure? e.g.</p>\n<div class=\"codehilite\" data-code-language=\"lake\"><pre><span></span><code>structure Struct1 where\n  | n: Nat\n  | name: String := \"\"\n  deriving Lean.FromJson\n</code></pre></div>\n<p>which would not parse a dictionary of the form <code>{\"n\": 0}</code> since the <code>name</code> field is not supplied</p>",
        "id": 360099746,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1684691741
    },
    {
        "content": "<p>So by \"respect\" you mean \"ignore the fact they have defaults\"?</p>",
        "id": 360100908,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684692256
    },
    {
        "content": "<p>This seems a bit of an odd thing to want; if you don't want <code>{\"n\": 0}</code> to be legal JSON, do you really still want <code>{n := 0}</code> to be legal Lean?</p>",
        "id": 360101000,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684692311
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Json.20default.20arguments/near/360100908\">said</a>:</p>\n<blockquote>\n<p>So by \"respect\" you mean \"ignore the fact they have defaults\"?</p>\n</blockquote>\n<p>I want the parser to be able to parse <code>{\"n\": 0}</code> instead of giving an error</p>",
        "id": 360103130,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1684693309
    },
    {
        "content": "<p>Oh, you mean it <em>currently</em> does not parse that input, not that you <em>want</em> it to reject that input!</p>",
        "id": 360103226,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684693347
    },
    {
        "content": "<p>I think this is probably just not implemented; we had this feature in Lean 3</p>",
        "id": 360103256,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684693370
    },
    {
        "content": "<p>I've submitted an issue for this one: <a href=\"https://github.com/leanprover/lean4/issues/2225\">https://github.com/leanprover/lean4/issues/2225</a></p>",
        "id": 360135862,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1684715162
    }
]