[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> Now that we have the nice project creation menu, it would be nice to have a dialog showing the lake configuration options, as a series of check-boxes with sensible defaults checked (where sensible depends on whether this is a math project or not). There would be a friendly message saying: \"if you don't know what those options mean then don't modify anything\". Currently my workflow after creating any project is to go the Mathlib lakefile and copy-paste</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">moreServerArgs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span>\n  <span class=\"s2\">\"-Dpp.unicode.fun=true\"</span><span class=\"o\">,</span> <span class=\"c1\">-- pretty-prints `fun a â†¦ b`</span>\n  <span class=\"s2\">\"-Dpp.proofs.withType=false\"</span>\n<span class=\"o\">]</span>\n\n<span class=\"c1\">-- These settings only apply during `lake build`, but not in VSCode editor.</span>\n<span class=\"kd\">def</span> <span class=\"n\">moreLeanArgs</span> <span class=\"o\">:=</span> <span class=\"n\">moreServerArgs</span>\n\n<span class=\"c1\">-- These are additional settings which do not affect the lake hash,</span>\n<span class=\"c1\">-- so they can be enabled in CI and disabled locally or vice versa.</span>\n<span class=\"c1\">-- Warning: Do not put any options here that actually change the olean files,</span>\n<span class=\"c1\">-- or inconsistent behavior may result</span>\n<span class=\"kd\">def</span> <span class=\"n\">weakLeanArgs</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">CI</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">isSome</span> <span class=\"k\">then</span>\n    <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-DwarningAsError=true\"</span><span class=\"o\">]</span>\n  <span class=\"k\">else</span>\n    <span class=\"bp\">#</span><span class=\"o\">[]</span>\n\n<span class=\"n\">package</span> <span class=\"n\">MyProject</span> <span class=\"n\">where</span>\n  <span class=\"n\">moreServerArgs</span> <span class=\"o\">:=</span> <span class=\"n\">moreServerArgs</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_lib</span> <span class=\"n\">MyProject</span> <span class=\"n\">where</span>\n  <span class=\"n\">moreLeanArgs</span> <span class=\"o\">:=</span> <span class=\"n\">moreLeanArgs</span>\n  <span class=\"n\">weakLeanArgs</span> <span class=\"o\">:=</span> <span class=\"n\">weakLeanArgs</span>\n</code></pre></div>",
        "id": 398712899,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698333656
    },
    {
        "content": "<p>Do they already exist in the settings page? It might be nice to have them there too</p>",
        "id": 398715338,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698334311
    },
    {
        "content": "<p>If someone made a mistake, they could fix it.</p>",
        "id": 398715535,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698334352
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> We could have this as the  default for a <code>lake new foo math</code>. I would accept any PRs to that effect.</p>",
        "id": 398716321,
        "sender_full_name": "Mac Malone",
        "timestamp": 1698334567
    },
    {
        "content": "<p>Have we suggested that <code>pp.proofs.withType=false</code> should just be the default? <code>pp.proofs.withType=true</code> is a really nice feature to have as an option, but its a terrible default for verbosity!</p>",
        "id": 398716450,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698334626
    },
    {
        "content": "<p>(and in non-mathematical usage, I can't imagine it being useful either)</p>",
        "id": 398716544,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698334667
    },
    {
        "content": "<p>I assume <code>pp.unicode.fun=true</code> is destined to forever have a software/math split, and is not a hill worth fighting on.</p>",
        "id": 398716689,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698334710
    },
    {
        "content": "<p>Shreyas, what do you call \"the settings page\"?</p>",
        "id": 398716693,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698334710
    },
    {
        "content": "<p>I think Shreyas is suggesting integration between the vscode workspace settings and the lakefile settings</p>",
        "id": 398716787,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698334750
    },
    {
        "content": "<p>But I think this is a no-go because a single workspace can have multiple top-level folders, and the settings can't be per folder</p>",
        "id": 398716925,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698334793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> <a href=\"https://github.com/leanprover/lean4/pull/2770\">lean4#2770</a> as requested.</p>",
        "id": 398718337,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698335232
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/270676-lean4/topic/Project.20configuration.20interface/near/398716321\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> We could have this as the  default for a <code>lake new foo math</code>. I would accept any PRs to that effect.</p>\n</blockquote>\n<p>Can it be an option? Patrick's suggestion could be the  default. It might look like  <code>lake new &lt;project_name&gt; math --&lt;without-some-nicer-settings&gt;</code></p>",
        "id": 398718679,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698335338
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Project.20configuration.20interface/near/398718679\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/270676-lean4/topic/Project.20configuration.20interface/near/398716321\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> We could have this as the  default for a <code>lake new foo math</code>. I would accept any PRs to that effect.</p>\n</blockquote>\n<p>Can it be an option? Patrick's suggestion could be the  default. It might look like  <code>lake new &lt;project_name&gt; math --&lt;without-some-nicer-settings&gt;</code></p>\n</blockquote>\n<p>Too much configuration. Just edit the lakefile.</p>",
        "id": 398784042,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698363950
    },
    {
        "content": "<p>I am not asking for new configuration. The current lakefile for mathlib project doesn't add any options. The new PR adds some options which are great for some projects but get added to all <code>math</code> projects whether the user wants it or not.</p>",
        "id": 398784657,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698364415
    },
    {
        "content": "<p>You are asking for an extra <code>--</code> flag. That's lots of work for something people can easily achieve with an editor.</p>",
        "id": 398785514,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698364902
    },
    {
        "content": "<p>What I ask is a way to maintain current behaviour for those who don't want these options without extra steps.</p>",
        "id": 398785996,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698365094
    },
    {
        "content": "<p>For now it is not a big deal for me. In fact I like the two new options that Patrick has added. So I'll drop this here.</p>\n<p>But in general if default behaviour is being changed it seems unfair to ask users happy with current behaviour to start editing config files to get it back.</p>",
        "id": 398786366,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698365296
    },
    {
        "content": "<p>I think those options are extremely uncontroversial. Note that I didn't include the much more controversial autoImplicit options.</p>",
        "id": 398793188,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698368701
    },
    {
        "content": "<p>And I don't understand why <em>you</em> care about math projects.</p>",
        "id": 398793229,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698368723
    },
    {
        "content": "<p>Patrick I am in agreement with your proposal in the PR.</p>",
        "id": 398793571,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698368869
    },
    {
        "content": "<p>I just noticed this PR, and IMO this makes the math config too long and complicated to be a default. I really want simple projects to have simple lakefiles, and this complexity is tolerable for mathlib itself but way too much for a hello world project for someone who just learned about the existence of lean/mathlib in the past hour.</p>",
        "id": 401594289,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699779941
    },
    {
        "content": "<p>It also needs to be documented better - the existing documentation is appropriate for people poking around the mathlib lakefile but not for newbies trying to make simple modifications e.g. to change options</p>",
        "id": 401594605,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699780066
    },
    {
        "content": "<p>It would be great if the <code>warningAsError</code>-only-in-CI setting did not require any configuration!</p>",
        "id": 401595386,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699780388
    },
    {
        "content": "<p>Can't that live in the CI config? Can you set lean options on the lake command line?</p>",
        "id": 401613120,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699795149
    }
]