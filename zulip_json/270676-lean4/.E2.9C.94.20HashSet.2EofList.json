[
    {
        "content": "<p>Lean's implementations of <code>HashSet.ofArray</code> and <code>HashSet.ofList</code> are currently identical. That is, the parameter to <code>ofList</code> is also an <code>Array</code> (despite the documentation stating otherwise). Is this intended?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--</span>\n<span class=\"sd\">`O(n)`. Obtain a `HashSet` from an array.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">@[inline]</span>\n<span class=\"kn\">protected</span> <span class=\"kd\">def</span> <span class=\"n\">ofArray</span> <span class=\"o\">[</span><span class=\"n\">BEq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Hashable</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">HashSet</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n  <span class=\"n\">HashSet.empty.insertMany</span> <span class=\"n\">as</span>\n\n<span class=\"sd\">/--</span>\n<span class=\"sd\">`O(n)`. Obtain a `HashSet` from a list.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">@[inline]</span>\n<span class=\"kn\">protected</span> <span class=\"kd\">def</span> <span class=\"n\">ofList</span> <span class=\"o\">[</span><span class=\"n\">BEq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Hashable</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">HashSet</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n  <span class=\"n\">HashSet.empty.insertMany</span> <span class=\"n\">as</span>\n</code></pre></div>",
        "id": 388121836,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1693405142
    },
    {
        "content": "<p>That's a copy-and-paste mistake by yours truly. Will fix.</p>",
        "id": 388125216,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1693405948
    },
    {
        "content": "<p>We should lint for \"we have this declaration already\" :-)</p>",
        "id": 388125325,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1693405976
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/std4/pull/236\">std#236</a></p>",
        "id": 388127098,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1693406428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"372804\">Marcus Rossel</span> has marked this topic as resolved.</p>",
        "id": 388141882,
        "sender_full_name": "Notification Bot",
        "timestamp": 1693409840
    }
]