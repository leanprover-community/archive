[
    {
        "content": "<p>I was working on a project with big operators and wanted to use the new notation (I think that they were changed recently in mathlib4 ?). So I decided to try and update mathlib. I ran <code>lake update</code> and then <code>lake exe cache get</code> in the project's root directory (in a terminal, I'm using linux). Now lean gets stucks on the first line of my file (which says <code>import Mathlib.Tactic</code>) with a somewhat intimidating error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">sophie</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-04-11/bin/lake print-paths Init Mathlib.Tactic Mathlib.Init.Algebra.Order Mathlib.Order.Antisymmetrization Mathlib.Order.Zorn Mathlib.Order.UpperLower.Basic Mathlib.Order.Extension.Linear Mathlib.Data.Sum.Order Mathlib.Order.WellFounded Mathlib.Order.RelIso.Basic Mathlib.Order.SuccPred.Basic Mathlib.Order.LocallyFinite Mathlib.Order.SuccPred.LinearLocallyFinite Mathlib.Data.Set.Image` failed:</span>\n\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Linter.UnreachableTactic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Linter.UnnecessarySeqFocus</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">sophie</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-04-11/lib:./build/lib:./lake-packages/mathlib/build/lib:./lake-packages/Qq/build/lib:./lake-packages/aesop/build/lib:./lake-packages/std/build/lib:./lake-packages/std/build/lib /home/sophie/.elan/toolchains/leanprover--lean4---nightly-2023-04-11/bin/lean -DwarningAsError=true -Dlinter.missingDocs=true ./lake-packages/std/././Std/Linter/UnreachableTactic.lean -R ./lake-packages/std/./. -o ./lake-packages/std/build/lib/Std/Linter/UnreachableTactic.olean -i ./lake-packages/std/build/lib/Std/Linter/UnreachableTactic.ilean -c ./lake-packages/std/build/ir/Std/Linter/UnreachableTactic.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Linter</span><span class=\"bp\">/</span><span class=\"n\">UnreachableTactic.lean</span><span class=\"o\">:</span><span class=\"mi\">87</span><span class=\"o\">:</span><span class=\"mi\">45</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"o\">{</span><span class=\"bp\">...</span><span class=\"o\">}</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">...</span><span class=\"o\">)</span>\n  <span class=\"n\">Linter</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">sophie</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-04-11/bin/lean` exited with code 1</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">sophie</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-04-11/lib:./build/lib:./lake-packages/mathlib/build/lib:./lake-packages/Qq/build/lib:./lake-packages/aesop/build/lib:./lake-packages/std/build/lib:./lake-packages/std/build/lib /home/sophie/.elan/toolchains/leanprover--lean4---nightly-2023-04-11/bin/lean -DwarningAsError=true -Dlinter.missingDocs=true ./lake-packages/std/././Std/Linter/UnnecessarySeqFocus.lean -R ./lake-packages/std/./. -o ./lake-packages/std/build/lib/Std/Linter/UnnecessarySeqFocus.olean -i ./lake-packages/std/build/lib/Std/Linter/UnnecessarySeqFocus.ilean -c ./lake-packages/std/build/ir/Std/Linter/UnnecessarySeqFocus.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Linter</span><span class=\"bp\">/</span><span class=\"n\">UnnecessarySeqFocus.lean</span><span class=\"o\">:</span><span class=\"mi\">151</span><span class=\"o\">:</span><span class=\"mi\">47</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"o\">{</span><span class=\"bp\">...</span><span class=\"o\">}</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">...</span><span class=\"o\">)</span>\n  <span class=\"n\">Linter</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">sophie</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2023-04-11/bin/lean` exited with code 1</span>\n</code></pre></div>\n<p>I thought that maybe it was better to use the latest stable release anyway, so I ran <code>elan override set leanprover/lean4:stable</code>. But now I have a problem with the configuration file lakefile.lean. The error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">default_target</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>This is the full file (which I certainly did not write myself):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">«</span><span class=\"n\">tS1</span><span class=\"bp\">»</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add any package configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n\n<span class=\"kd\">@[default_target]</span>\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">TS1</span><span class=\"bp\">»</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add any library configuration options here</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>As you can guess, I am totally confused. Should I use <code>stable</code> or <code>nightly</code> ? Why did updating mathlib break stuff ? (I am even more confused, because I have a second Lean4 project, and yesterday I ran <code>lake update</code> in it without any trouble...)</p>",
        "id": 358438483,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684152076
    },
    {
        "content": "<p>Sorry this update process is currently a mess in Lean 4. I'm not an expert about this, but what works for me is: </p>\n<ul>\n<li>in your project lakefile, indicate a mathlib4 commit as in</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"9ec7de3c06654f18053a390fa05a6db21c36ebd0\"</span>\n</code></pre></div>\n<ul>\n<li>run <code>lake update</code></li>\n<li>run <code>cp lake-packages/mathlib/leantoolchain .</code> to make sure your project uses the same version of Lean as mathlib</li>\n</ul>",
        "id": 358440076,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1684152459
    },
    {
        "content": "<p>Okay, I'm trying this ! For now it's trying to build mathlib.</p>",
        "id": 358440832,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684152685
    },
    {
        "content": "<p>And it failed again. :-(</p>",
        "id": 358440974,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684152724
    },
    {
        "content": "<p>It shouldn't try to build mathlib, you should run <code>lake exe cache get</code> to bypass this step.</p>",
        "id": 358441128,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1684152765
    },
    {
        "content": "<p>Should I use <code>stable</code> or <code>nightly</code> ?</p>",
        "id": 358441333,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684152834
    },
    {
        "content": "<p>I did run <code>lake exe cache get</code>, but it still tried to build stuff...</p>",
        "id": 358441512,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684152869
    },
    {
        "content": "<p>Did you run Patrick's last step? What does <code>elan show</code> say?</p>",
        "id": 358442703,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684153180
    },
    {
        "content": "<p>I tried again Patrick's solution from the start (and ran <code>lake exe cache get!</code> for good measure). It doesn't try to build any more but I still get the same error.<br>\n<code>elan show</code> says:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">installed</span> <span class=\"n\">toolchains</span>\n<span class=\"c1\">--------------------</span>\n\n<span class=\"n\">stable</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">49</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">50</span><span class=\"bp\">.</span><span class=\"mi\">3</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span> <span class=\"o\">(</span><span class=\"n\">default</span><span class=\"o\">)</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">03</span><span class=\"bp\">-</span><span class=\"mi\">31</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">04</span><span class=\"bp\">-</span><span class=\"mi\">11</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">04</span><span class=\"bp\">-</span><span class=\"mi\">20</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">05</span><span class=\"bp\">-</span><span class=\"mi\">06</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span>\n\n<span class=\"n\">active</span> <span class=\"n\">toolchain</span>\n<span class=\"c1\">----------------</span>\n\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span> <span class=\"o\">(</span><span class=\"n\">directory</span> <span class=\"n\">override</span> <span class=\"n\">for</span> <span class=\"bp\">'/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">sophie</span><span class=\"bp\">/</span><span class=\"n\">Lean4</span><span class=\"bp\">/</span><span class=\"n\">TS1'</span><span class=\"o\">)</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">04</span><span class=\"bp\">-</span><span class=\"mi\">11</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"mi\">8</span><span class=\"n\">a302e6135bc</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 358443340,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684153364
    },
    {
        "content": "<p>(Well, I think it's the same error, it looks very similar. I can copy it again here if needed.)</p>",
        "id": 358443549,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684153425
    },
    {
        "content": "<p>Strange that the active toolchain is not the default one.  I did run <code>elan override set leanprover/lean4:nightly</code> in the project directory, but why did it override to <code>nightly-2023-04-11</code> and not <code>nightly</code> ?</p>",
        "id": 358444109,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684153580
    },
    {
        "content": "<p>Please run <code>elan override unset</code> and try again. You should never use <code>elan override</code> basically.</p>",
        "id": 358444296,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684153634
    },
    {
        "content": "<p>I had a lot of trouble setting up this new computer because I have both Lean3 and Lean4 projects, so that's why I used <code>elan override</code>.</p>",
        "id": 358444389,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684153655
    },
    {
        "content": "<p>You can use something like <code>lake +leanprover/lean4:nightly new math</code> instead of overrides to create a Lean 4 package</p>",
        "id": 358444724,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684153732
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/I.20tried.20to.20update.20mathlib4.20and.20broke.20stuff/near/358444296\">said</a>:</p>\n<blockquote>\n<p>Please run <code>elan override unset</code> and try again. You should never use <code>elan override</code> basically.</p>\n</blockquote>\n<p>Did that and now something new is happening. I trying running <code>lake exe cache get</code> and it actually is building things.</p>",
        "id": 358444770,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684153743
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/I.20tried.20to.20update.20mathlib4.20and.20broke.20stuff/near/358444724\">said</a>:</p>\n<blockquote>\n<p>You can use something like <code>lake +leanprover/lean4:nightly new math</code> instead of overrides to create a Lean 4 package</p>\n</blockquote>\n<p>Okay, I'm bookmarking this thread so I'll remember for next time.</p>",
        "id": 358445085,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684153813
    },
    {
        "content": "<p>We should update the mathlib4 readme with that information as well</p>",
        "id": 358445685,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684153951
    },
    {
        "content": "<p>Well, it's still building here, but that's a good sign because the previous times it failed much earlier. Fingers crossed...</p>",
        "id": 358446149,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684154053
    },
    {
        "content": "<p>It worked ! Thanks so much, Patrick and Sebastian !</p>",
        "id": 358448735,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1684154697
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"318709\">Sophie Morel</span> has marked this topic as resolved.</p>",
        "id": 358501448,
        "sender_full_name": "Notification Bot",
        "timestamp": 1684166099
    },
    {
        "content": "<p>After running lake update, there is a need to explicitly copy the lean-toolchain file from lake-packages/mathlib to the project folder, before running <code>lake exe cache get!</code></p>",
        "id": 358504748,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1684166773
    },
    {
        "content": "<p>Ideally this should be automatic for math projects</p>",
        "id": 358504938,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1684166816
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20I.20tried.20to.20update.20mathlib4.20and.20broke.20stuff/near/358445685\">said</a>:</p>\n<blockquote>\n<p>We should update the mathlib4 readme with that information as well</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4008\">https://github.com/leanprover-community/mathlib4/pull/4008</a></p>",
        "id": 358559324,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1684180561
    },
    {
        "content": "<p>Since I complained often enough in the past, I think that I should say this: Today I tried to update mathlib following the instructions of the link <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4\">https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4</a>, and absolutely nothing went wrong ! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 393308222,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1695755506
    }
]