[
    {
        "content": "<p>What does <code>lean-toolchain</code> specify? Does it determine both the version of Lean 4 and the version of all libraries? Can <code>lakefile.lean</code> override the latter? Does <code>lean-toolchain</code> also influence what Lake commands do?</p>\n<p>When should I create the file? The command <code>lake new foo math</code> gave me a project without the <code>lean-toolchain</code> file.</p>",
        "id": 351520451,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1682058796
    },
    {
        "content": "<p>If you don't get a <code>lean-toolchain</code> file immediately, then <code>lake new foo math</code> is almost certainly using an old version of lake, probably because your default toolchain is either a stable version of Lean 4 or an old nightly. Or maybe you ran <code>lake</code> in a directory affected by a previous <code>elan override</code> command.</p>",
        "id": 351525680,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1682060541
    },
    {
        "content": "<p>Try using <code>elan default</code> to configure your default toolchain</p>",
        "id": 351525742,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1682060574
    },
    {
        "content": "<p><code>lean-toolchain</code> does not determine library versions (that's for the lakefile), but it constrains your choice of libraries/library versions to the ones which work with your chosen toolchain. This is probably what you meant, I just wrote it explicitly for clarification purposes.</p>",
        "id": 351526976,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1682060900
    }
]