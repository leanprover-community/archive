[
    {
        "content": "<p>I'm confused about the square bracket indexing. Usually this notation implies constant time access to elements, but <code>List</code>s are cons lists, for which indexing is usually linear time. Is there some optimization under the hood that makes it constant, or is it actually just linear?</p>",
        "id": 362459734,
        "sender_full_name": "James Sully",
        "timestamp": 1685540179
    },
    {
        "content": "<p>It's linear. If you want constant-time accessing, there's <code>Array</code>, which looks like a <code>List</code> but it actually uses a block of contiguous memory.</p>\n<p>They have different uses and have different runtime characteristics. <code>List</code> is a linked list so it supports sharing when you cons to the front, but <code>Array</code> has constant-time pushing to the end if the runtime detects there's no sharing.</p>",
        "id": 362460108,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1685540267
    },
    {
        "content": "<p>ok, thanks. I was thinking it might be an analogous situation to how <code>Nat</code> is optimized to not be as slow as one would naively assume</p>",
        "id": 362460399,
        "sender_full_name": "James Sully",
        "timestamp": 1685540325
    }
]