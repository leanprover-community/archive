[
    {
        "content": "<p>Right now I am relying GitHub CI to test things which is not ideal. My initial experiments with building Lean locally on my M1 machine have been mixed. For example, a few number of tests from a clone of the master on <code>leanprover/lean4</code> fail. Is this to be expected? </p>\n<p>Does anyone have any experience with local development on apple silicon? Thanks.</p>",
        "id": 383643048,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691677162
    },
    {
        "content": "<p>which ones? Can try to see if I can replicate. I just build with <code>lake build &lt;file I care about&gt;</code> and let CI deal with the tests and stuff later</p>",
        "id": 383645464,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691677496
    },
    {
        "content": "<p><a href=\"https://leanprover.github.io/lean4/doc/make/index.html\">https://leanprover.github.io/lean4/doc/make/index.html</a></p>",
        "id": 383647015,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691677717
    },
    {
        "content": "<p><a href=\"https://leanprover.github.io/lean4/doc/dev/testing.html\">https://leanprover.github.io/lean4/doc/dev/testing.html</a></p>",
        "id": 383647071,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691677725
    },
    {
        "content": "<p>I think I have working builds from make but the tests seem off</p>",
        "id": 383647229,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691677753
    },
    {
        "content": "<p>oh I see this is about Lean4 itself, as opposed to mathlib . I will run this stuff and see if I get any issues</p>",
        "id": 383647882,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691677852
    },
    {
        "content": "<p>I get a bunch of \"no such file\" after <code>leanshared</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span><span class=\"m\">100</span>%<span class=\"o\">]</span><span class=\"w\"> </span>Built<span class=\"w\"> </span>target<span class=\"w\"> </span>leanshared\n<span class=\"o\">[</span><span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span>Building<span class=\"w\"> </span>/Users/ericr/repos/lean4/build/release/stage1/bin/lean\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>/Users/ericr/repos/lean4/build/release/stage1/temp/Leanc.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../../build/release/stage1/lib/temp/Lake/Util/Family.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../../build/release/stage1/lib/temp/Lake/Util/StoreInsts.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../../build/release/stage1/lib/temp/Lake/Util/Opaque.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../../build/release/stage1/lib/temp/Lake/Util/DRBMap.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../../build/release/stage1/lib/temp/Lake/Util/MainM.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../../build/release/stage1/lib/temp/Lake/Util/Binder.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../../build/release/stage1/lib/temp/Lake/Util/Proc.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n</code></pre></div>\n<p>and so on</p>",
        "id": 383659922,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691679674
    },
    {
        "content": "<p>happens twice, actually, this one was earlier:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span><span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span>Building<span class=\"w\"> </span>Init.lean\n<span class=\"o\">[</span><span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span>Building<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/Control.c\n<span class=\"o\">[</span><span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span>Building<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init.c\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Lean/Compiler.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Lean/Class.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Lean/ParserCompiler/Attribute.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Lean/DeclarationRange.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n</code></pre></div>\n<p>and so on</p>",
        "id": 383660141,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691679714
    },
    {
        "content": "<p>think it started at 2% but I didn't spot it:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span><span class=\"w\">  </span><span class=\"m\">2</span>%<span class=\"o\">]</span><span class=\"w\"> </span>Building<span class=\"w\"> </span>CXX<span class=\"w\"> </span>object<span class=\"w\"> </span>library/compiler/CMakeFiles/compiler.dir/init_module.cpp.o\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/Data.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/Core.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/Hints.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/Conv.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/ShareCommon.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/NotationExtra.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/SimpLemmas.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/Util.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n/Users/ericr/repos/lean4/build/release/stage1/bin/../share/lean/lean.mk:110:<span class=\"w\"> </span>../build/release/stage1/lib/temp/Init/Control.depend:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n</code></pre></div>",
        "id": 383660370,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691679749
    },
    {
        "content": "<p>and I get 73 failed tests:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Tests failed</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"w\">    </span><span class=\"m\">1519</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_534.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1520</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_StackOverflow.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1521</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_StackOverflowTask.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1522</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_append.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1523</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_array.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1524</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_arrayMk.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1525</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_array_test.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1526</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_array_test2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1527</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_bigctor.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1528</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_bytearray_bug.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1529</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug1.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1530</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1531</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug3.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1532</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug4.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1533</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug5.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1534</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug6.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1535</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug7.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1536</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug8.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1537</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_escape.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1538</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_expr.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1539</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_extractClosedMutualBlock.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1540</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_float.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1541</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_float_cases_bug.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1542</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_init.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1543</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_initUnboxed.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1544</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_lazylist.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1545</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_link_lake.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1546</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_map_big.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1547</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_overflow1.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1548</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_overflow2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1549</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_overflow3.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1550</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_partial.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1551</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_phashmap.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1552</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_phashmap2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1553</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_phashmap3.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1554</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_print_error.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1555</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_qsortBadLt.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1556</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_rbmap_library.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1557</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_reusebug.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1558</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_str.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1559</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_strictAndOr.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1560</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_strictOrSimp.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1561</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_t1.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1562</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_t2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1563</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_t4.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1564</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_thunk.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1565</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_uint_fold.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1566</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_unreachable.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1567</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_uset.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1569</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_doc_example<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1613</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_binarytrees.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1614</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_const_fold.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1615</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_dag_hassorry_issue.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1616</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_deriv.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1617</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_liasolver.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1618</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_qsort.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1619</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_rbmap.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1620</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_rbmap_checkpoint.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1621</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_unionfind.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1622</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanplugintest_SnakeLinter.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1629</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanpkgtest_user_attr_app<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1700</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_deps<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1701</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_ffi<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1702</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_hello<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1703</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_init<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1704</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_precompile<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1705</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_reverse-ffi<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1707</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_targets<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1710</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_44<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1712</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_62<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1713</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_75<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1714</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_buildArgs<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1715</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_clone<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n</code></pre></div>\n</div></div>",
        "id": 383661216,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691679913
    },
    {
        "content": "<p>That failed test list looks similar</p>",
        "id": 383661618,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691679978
    },
    {
        "content": "<p>I think I get those others too. They whip by fast</p>",
        "id": 383661818,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691680015
    },
    {
        "content": "<p>Can you run one of the comp tests using the <a href=\"http://test-single.sh\">test-single.sh</a> script and show us the output?</p>",
        "id": 383709232,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1691688839
    },
    {
        "content": "<p>I ran the script itself but should I point it at something?</p>",
        "id": 383712455,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691689486
    },
    {
        "content": "<p>Ok I figured out what I should </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>ld64.lld:<span class=\"w\"> </span>warning:<span class=\"w\"> </span>directory<span class=\"w\"> </span>not<span class=\"w\"> </span>found<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>option<span class=\"w\"> </span>-L/Applications/Xcode_14.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/usr/lib\n</code></pre></div>",
        "id": 383717461,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691690638
    },
    {
        "content": "<p>I already had a <code>SnakeLinter.lean.c</code> in there. Deleting it and re-running produces <code>SnakeLinter.so</code> and <code>SnakeLinter.produced.out</code></p>",
        "id": 383718142,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691690799
    },
    {
        "content": "<p>For a compiler test</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>running<span class=\"w\"> </span>C<span class=\"w\"> </span>program...\nrm:<span class=\"w\"> </span>./str.lean.out:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\nld64.lld:<span class=\"w\"> </span>warning:<span class=\"w\"> </span>directory<span class=\"w\"> </span>not<span class=\"w\"> </span>found<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>option<span class=\"w\"> </span>-L/Applications/Xcode_14.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/usr/lib\n../common.sh:<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">42</span>:<span class=\"w\"> </span><span class=\"m\">25062</span><span class=\"w\"> </span>Abort<span class=\"w\"> </span>trap:<span class=\"w\"> </span><span class=\"m\">6</span><span class=\"w\">           </span><span class=\"nv\">LEAN_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"nv\">$@</span><span class=\"s2\">\"</span><span class=\"w\"> </span><span class=\"m\">2</span>&gt;<span class=\"p\">&amp;</span><span class=\"m\">1</span>\n<span class=\"w\">     </span><span class=\"m\">25063</span><span class=\"w\"> </span>Done<span class=\"w\">                    </span><span class=\"p\">|</span><span class=\"w\"> </span>perl<span class=\"w\"> </span>-pe<span class=\"w\"> </span><span class=\"s1\">'s/(\\?(\\w|_\\w+))\\.[0-9]+/\\1/g'</span><span class=\"w\"> </span>&gt;<span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"nv\">$f</span><span class=\"s2\">.produced.out\"</span>\nUnexpected<span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span>code<span class=\"w\"> </span><span class=\"m\">134</span><span class=\"w\"> </span>executing<span class=\"w\"> </span><span class=\"s1\">'./str.lean.out'</span><span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span><span class=\"m\">0</span>.<span class=\"w\"> </span>Output:\ndyld<span class=\"o\">[</span><span class=\"m\">25062</span><span class=\"o\">]</span>:<span class=\"w\"> </span>Library<span class=\"w\"> </span>not<span class=\"w\"> </span>loaded:<span class=\"w\"> </span>@rpath/libc++.1.dylib\n<span class=\"w\">  </span>Referenced<span class=\"w\"> </span>from:<span class=\"w\"> </span>&lt;4C4C4451-5555-3144-A1CF-E3D6AFA1FC9A&gt;<span class=\"w\"> </span>/Users/matt/GitHub/lean4/tests/compiler/str.lean.out\n<span class=\"w\">  </span>Reason:<span class=\"w\"> </span>no<span class=\"w\"> </span>LC_RPATH<span class=\"err\">'</span>s<span class=\"w\"> </span>found\n</code></pre></div>\n<p>so it looks like <code>rpath</code> is not resolving correctly again</p>",
        "id": 383718417,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691690881
    },
    {
        "content": "<p>And I've already forgotten what Sebastian did lol</p>",
        "id": 383718599,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691690919
    },
    {
        "content": "<p>That's fine, so have I</p>",
        "id": 383718877,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1691691000
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/2356/commits/23631eb57d0742195c627f2b08d8ebb76031a3a4\">https://github.com/leanprover/lean4/pull/2356/commits/23631eb57d0742195c627f2b08d8ebb76031a3a4</a></p>",
        "id": 383719126,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691691064
    },
    {
        "content": "<p><code>install_name_tool -id /usr/lib/$lib stage1/lib/libc/$lib</code></p>",
        "id": 383719232,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691691097
    },
    {
        "content": "<p>For the <code>prepare-llvm.macos.sh</code></p>",
        "id": 383719310,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691691117
    },
    {
        "content": "<p>I'm starting to think this is a general LLVM bug/Sonoma incompatibility and I simply worked around it for the release job</p>",
        "id": 383721097,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1691691567
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> what version of MacOS are you on?</p>",
        "id": 383721215,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691691600
    },
    {
        "content": "<p>13.4.1 (c) (22F770820d)</p>",
        "id": 383721789,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691691725
    },
    {
        "content": "<p>14.0 Beta (23A5301h) for me</p>",
        "id": 383721935,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691691758
    },
    {
        "content": "<p>So it's not just Sonoma</p>",
        "id": 383721981,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691691770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> And you get the same test output?</p>",
        "id": 383722386,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1691691870
    },
    {
        "content": "<p>what exact script should I run?</p>",
        "id": 383722512,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691691904
    },
    {
        "content": "<p>I ran <code>./test_single.sh str.lean</code> from <code>./tests/compiler</code></p>",
        "id": 383722628,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691691930
    },
    {
        "content": "<p>as in <code>cd tests/compiler</code>? I didn't get any good output, for some reason my <code>elan</code> default <code>lean</code> is triggering there, and sadly that's some <code>lean3</code></p>",
        "id": 383723358,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691692095
    },
    {
        "content": "<p>I've commandeered my wife's laptop</p>",
        "id": 383724176,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691692313
    },
    {
        "content": "<p>That seems to work, MacOS 13.4.1 (c) also</p>",
        "id": 383725207,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691692526
    },
    {
        "content": "<p>I even nuked <code>.elan</code> and did it from a fresh copy of the repo</p>",
        "id": 383728408,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691693284
    },
    {
        "content": "<p>does this mean my elan is borked and I should reinstall it?</p>",
        "id": 383729260,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691693515
    },
    {
        "content": "<p>Not sure. What is the worst that can happen?</p>",
        "id": 383729602,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691693584
    },
    {
        "content": "<p>I am swallowed in <code>ld64.lld</code> warnings about having too new versions of things (lesser issue)</p>",
        "id": 383729793,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691693630
    },
    {
        "content": "<p>I get these warning too, but for now am on rather old hardware/OS version so haven't been complaining about it hoping it magically goes away soon. :-)</p>",
        "id": 383807911,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691720749
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/local.20development.20on.20apple.20silicon/near/383721097\">said</a>:</p>\n<blockquote>\n<p>I'm starting to think this is a general LLVM bug/Sonoma incompatibility and I simply worked around it for the release job</p>\n</blockquote>\n<p>This still seems to be present in the released version.</p>",
        "id": 393706711,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1695904966
    },
    {
        "content": "<p>These linker warnings will disappear after <a href=\"https://github.com/leanprover/lean4/pull/2598\">lean4#2598</a> is merged, so probably v4.3.0-rc1.</p>",
        "id": 394400604,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1696245990
    },
    {
        "content": "<p>I can’t build Lean on Sonoma.</p>",
        "id": 394409308,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1696248161
    },
    {
        "content": "<p>I thought you were able to get up to the test suite?</p>",
        "id": 394413911,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1696249341
    },
    {
        "content": "<p>(It definitely builds here on Sonoma. Though I have never tried to run the test suite.)</p>",
        "id": 394416404,
        "sender_full_name": "Julian Berman",
        "timestamp": 1696249986
    },
    {
        "content": "<p>It looked like it built but using the toolchain with an override was wonky. The same tests fail. </p>\n<p>Good to know this might be user error! Retrying again on a clean clone.</p>",
        "id": 394420542,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1696251012
    },
    {
        "content": "<p>Building the first 1300 files in mathlib with the toolchain is ok. I will test out the infoview once I has some things from mathlib to poke at. </p>\n<p>Here are my </p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>failed tests </p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>The<span class=\"w\"> </span>following<span class=\"w\"> </span>tests<span class=\"w\"> </span>FAILED:\n<span class=\"w\">    </span><span class=\"m\">1524</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_534.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1525</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_StackOverflow.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1526</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_StackOverflowTask.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1527</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_append.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1528</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_array.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1529</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_arrayMk.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1530</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_array_test.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1531</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_array_test2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1532</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_bigctor.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1533</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_bytearray_bug.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1534</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug1.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1535</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1536</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug3.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1537</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug4.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1538</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug5.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1539</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug6.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1540</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug7.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1541</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_closure_bug8.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1542</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_escape.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1543</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_expr.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1544</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_extractClosedMutualBlock.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1545</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_float.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1546</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_float_cases_bug.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1547</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_init.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1548</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_initUnboxed.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1549</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_lazylist.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1550</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_link_lake.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1551</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_map_big.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1552</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_overflow1.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1553</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_overflow2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1554</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_overflow3.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1555</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_partial.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1556</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_phashmap.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1557</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_phashmap2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1558</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_phashmap3.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1559</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_print_error.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1560</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_qsortBadLt.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1561</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_rbmap_library.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1562</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_reusebug.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1563</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_str.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1564</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_strictAndOr.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1565</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_strictOrSimp.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1566</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_t1.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1567</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_t2.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1568</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_t4.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1569</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_thunk.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1570</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_trie.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1571</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_uint_fold.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1572</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_unreachable.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1573</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_uset.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1575</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leancomptest_doc_example<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1620</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_binarytrees.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1621</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_const_fold.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1622</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_dag_hassorry_issue.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1623</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_deriv.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1624</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_liasolver.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1625</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_qsort.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1626</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_rbmap.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1627</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_rbmap_checkpoint.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1628</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanbenchtest_unionfind.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1629</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanplugintest_SnakeLinter.lean<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1633</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanpkgtest_frontend<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1637</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanpkgtest_user_attr_app<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1708</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_deps<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1709</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_ffi<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1710</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_hello<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1711</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_precompile<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1712</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_reverse-ffi<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1714</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_targets<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1715</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_buildArgs<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1716</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_clone<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1719</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_init<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1723</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_old<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1726</span><span class=\"w\"> </span>-<span class=\"w\"> </span>leanlaketest_rebuild<span class=\"w\"> </span><span class=\"o\">(</span>Failed<span class=\"o\">)</span>\n</code></pre></div>\n</div></div>",
        "id": 394425491,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1696252182
    },
    {
        "content": "<p>Sample from the <code>LastTest.log</code> </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>rm:<span class=\"w\"> </span>./unreachable.lean.out:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\nld:<span class=\"w\"> </span>library<span class=\"w\"> </span><span class=\"s1\">'c++'</span><span class=\"w\"> </span>not<span class=\"w\"> </span>found\nclang:<span class=\"w\"> </span>error:<span class=\"w\"> </span>linker<span class=\"w\"> </span><span class=\"nb\">command</span><span class=\"w\"> </span>failed<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"nb\">exit</span><span class=\"w\"> </span>code<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">(</span>use<span class=\"w\"> </span>-v<span class=\"w\"> </span>to<span class=\"w\"> </span>see<span class=\"w\"> </span>invocation<span class=\"o\">)</span>\nFailed<span class=\"w\"> </span>to<span class=\"w\"> </span>compile<span class=\"w\"> </span>C<span class=\"w\"> </span>file<span class=\"w\"> </span>unreachable.lean.c\n</code></pre></div>",
        "id": 394427379,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1696252692
    },
    {
        "content": "<p>Reran with <a href=\"https://github.com/leanprover/lean4/pull/2598\">lean4#2598</a> in master to the same effect</p>",
        "id": 394435764,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1696254439
    },
    {
        "content": "<p>Allow me to mention: <a href=\"https://github.blog/changelog/2023-10-02-github-actions-apple-silicon-m1-macos-runners-are-now-available-in-public-beta/\">https://github.blog/changelog/2023-10-02-github-actions-apple-silicon-m1-macos-runners-are-now-available-in-public-beta/</a> GitHub Actions: Apple silicon (M1) macOS runners are now available in public beta!</p>",
        "id": 394546630,
        "sender_full_name": "Schrodinger ZHU Yifan",
        "timestamp": 1696300429
    }
]