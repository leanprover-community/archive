[
    {
        "content": "<p>I use Lean 4 in the VC Code plugin. When I have <code>#eval</code> with a long output, a line breaks after each ~120 characters. It is annoying because VS Code automatically wraps the output depending on the width of the Lean Infoview. The result looks like this:<br>\n<a href=\"/user_uploads/3121/EZLCzIVrB-M38dwPprykP1UF/image.png\">image.png</a> <br>\nCan I disable the former line breaks?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/EZLCzIVrB-M38dwPprykP1UF/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/EZLCzIVrB-M38dwPprykP1UF/image.png\"></a></div>",
        "id": 326432990,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675795627
    },
    {
        "content": "<p><code>set_option format.width 99999</code></p>",
        "id": 326433376,
        "sender_full_name": "Reid Barton",
        "timestamp": 1675795750
    },
    {
        "content": "<p>Where can I write it to make it active for all my projects?</p>",
        "id": 326433917,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675795920
    },
    {
        "content": "<p>I don't use VS Code but I guess there is somewhere you can give lean the command line option <code>-Dformat.width=9999</code></p>",
        "id": 326434301,
        "sender_full_name": "Reid Barton",
        "timestamp": 1675796035
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 326434397,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675796064
    },
    {
        "content": "<p>somewhere in the VS Code Lean extension settings I mean</p>",
        "id": 326434404,
        "sender_full_name": "Reid Barton",
        "timestamp": 1675796065
    },
    {
        "content": "<p>What about suggesting it to the VS Code Lean 4 plugin developers to make it default?</p>",
        "id": 326434748,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675796174
    },
    {
        "content": "<p>that will result in much worse pretty printing overall for anything longer than a single line, for example the result of <code>#print</code></p>",
        "id": 326443895,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675799052
    },
    {
        "content": "<p>the better (and much trickier) solution would be to have vscode tell lean or the thing that is doing the webview layout to change the width whenever the viewport size or font size changes</p>",
        "id": 326444075,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675799137
    },
    {
        "content": "<p>Does the infoview output of a tactic state depend on <code>set_option format.width</code> in such a way that, if a term fits into <code>format.width</code> characters, it does not break lines to reflect the term structure?</p>",
        "id": 326447741,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675800414
    },
    {
        "content": "<p>format.width is the line length</p>",
        "id": 326448235,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675800604
    },
    {
        "content": "<p>if you set a huge line length then the formatter will never use newlines</p>",
        "id": 326448287,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675800618
    },
    {
        "content": "<p>vscode will have to insert line breaks manually then, but it will do a much worse job since it can't be syntax-aware or include indentation while doing so</p>",
        "id": 326448399,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675800661
    },
    {
        "content": "<p>So it is the problem the other way now, isn't it? Since my Infoview window is usually narrower than 120 characters, there are still \"arbitrary\" (not syntax-aware) line breaks in the tactic state display, right?</p>",
        "id": 326448649,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675800737
    },
    {
        "content": "<p>right, so you should set the line width to be some approximation of your actual line width</p>",
        "id": 326448851,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675800815
    },
    {
        "content": "<p>(actually that's the same issue, not the \"other way\". In both cases you get bad line breaks because the formatter is not adding enough of its own)</p>",
        "id": 326449067,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675800883
    },
    {
        "content": "<p>if your line width is too short then it should format fine but will not take up as much horizontal space as it could</p>",
        "id": 326449163,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675800915
    },
    {
        "content": "<p>(and things can get weird if the indent starts to get close to the line length)</p>",
        "id": 326449201,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675800933
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/.23eval.20output.20without.20line.20breaks/near/326449067\">said</a>:</p>\n<blockquote>\n<p>(actually that's the same issue, not the \"other way\". In both cases you get bad line breaks because the formatter is not adding enough of its own)</p>\n</blockquote>\n<p>Are you suggesting that, even in the <code>#eval</code> case (letters <code>a</code> to <code>z</code> in my example), I should want Lean to insert line breaks into the output to see it nicely in VS Code and not the VS Code itself?</p>",
        "id": 326450023,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675801198
    },
    {
        "content": "<p>yes, the formatter line length 120 is longer than it should be</p>",
        "id": 326450180,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675801232
    },
    {
        "content": "<p>I have somewhat conflicting opinions. In the tactic state window, I want Lean formatter to insert the line breaks. In the <code>#eval</code> output, I'd prefer VS Code to wrap the lines in the frontend.</p>",
        "id": 326450560,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675801373
    },
    {
        "content": "<p>why?</p>",
        "id": 326450719,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675801432
    },
    {
        "content": "<p>vscode does an objectively worse job of formatting, you can see it even with simple evals like <code>#eval (List.range 13).zip (List.range 13)</code></p>",
        "id": 326450933,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675801493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/.23eval.20output.20without.20line.20breaks/near/326450719\">said</a>:</p>\n<blockquote>\n<p>why?</p>\n</blockquote>\n<p>I resize the Lean Infoview sometimes. The wrapping by VS Code instantly adjust to the current size.</p>",
        "id": 326451238,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675801621
    },
    {
        "content": "<p>that adjustment will always be syntax unaware unless we implement <a href=\"#narrow/stream/270676-lean4/topic/.23eval.20output.20without.20line.20breaks/near/326444075\">my earlier suggestion</a></p>",
        "id": 326451401,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675801683
    },
    {
        "content": "<p>I see. I just cannot imagine how to implement it. Therefore, I am choosing (and you may call it false dichotomy) between syntax-aware window-unaware line breaks by the Lean formatter and syntax-unaware window-aware line wrapping by VS Code. For the <code>#eval</code> output, I prefer the latter.</p>",
        "id": 326451735,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675801813
    },
    {
        "content": "<p>Is the default <code>format.width</code> equal to 120 for Lean 4 in general? Do people usually fit both a 120-char wide code window and a 120-char wide info window on their screen?</p>",
        "id": 326453524,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675802410
    },
    {
        "content": "<p>the default pp width is 120, for ... reasons</p>",
        "id": 326457980,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675803984
    },
    {
        "content": "<p>mathport also had to deal with a bug along these lines, it now manually sets the pp width to 100 to match mathlib</p>",
        "id": 326458043,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675804017
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 326471394,
        "sender_full_name": "Notification Bot",
        "timestamp": 1675809307
    }
]