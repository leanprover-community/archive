[
    {
        "content": "<p>I came across an unexpected \"panic\" issue when working on a project. I've managed to reduce the problem to a mwe</p>\n<ol>\n<li>Set<code>precompileModules</code> to <code>true</code> in <code>lakefile</code> (I'm not sure whether this matters)</li>\n<li>\n<p>Put<br>\n<code>\n   def should_not_panic : Nat := Id.run &lt;| do\n     while true do\n       if 1 &lt; 2 then\n         return 10\n     panic! \"Unexpected error\"\n   </code><br>\n  in <code>A.lean</code></p>\n</li>\n<li>\n<p>Import <code>A.lean</code> from <code>B.lean</code></p>\n</li>\n<li>Open <code>A.lean</code> in VSCode, and the <code>panic</code> in <code>should_not_panic</code> is triggered</li>\n</ol>\n<p>The problem only occurs when the <code>panic</code> is closed. For example the following modification of <code>should_not_panic</code> does not cause the above problem<br>\n<code>\n   def should_not_panic (q : Nat) : Nat := Id.run &lt;| do\n     while true do\n       if 1 &lt; 2 then\n         return 10\n     panic! s!\"Unexpected error when processing {q}\"\n   </code></p>",
        "id": 386751450,
        "sender_full_name": "Yicheng Qian",
        "timestamp": 1692761185
    },
    {
        "content": "<p>The lean version is <code>leanprover/lean4:nightly-2023-08-19</code>.</p>",
        "id": 386751557,
        "sender_full_name": "Yicheng Qian",
        "timestamp": 1692761268
    }
]