[
    {
        "content": "<p>The previously teasered extension features are now ready to be tested! </p>\n<p>As these are quite a lot of changes, it would help me a lot if some of you try out the new version of the extension before it is actually released. You can do so by downloading the <code>.vsix</code>-file below, opening the \"Extensions\" menu in the sidebar, uninstalling your current Lean 4 extension, clicking the icon with three dots at the top and selecting \"Install from VSIX...\". If you want to go back to the old extension version, simply uninstall the extension and re-install it from the marketplace. If VS Code somehow decides to re-install the version of the extension from the VSIX file, make sure to delete <code>~/.config/Code/CachedExtensionVSIXs/leanprover.lean4-0.0.113</code>.</p>\n<p><a href=\"/user_uploads/3121/Be1Mest_T4vbXAxeSiKj_Xph/lean4-0.0.113.vsix\">lean4-0.0.113.vsix</a></p>\n<p>Bugs and suggestions for improvements are all welcome. If nothing major comes up, I intend to release the new version on 2023-10-22. The code can be found <a href=\"https://github.com/leanprover/vscode-lean4/pull/334\">here</a>.</p>\n<h2>New commands</h2>\n<h3>Creating Projects</h3>\n<p>Two new commands to create projects have been added: <code>lean4.project.createStandaloneProject</code> and <code>lean4.project.createMathlibProject</code>.</p>\n<p>Both commands display a file picker to select the location to create the project at, update Elan before creating the project, create the project using <code>lake init</code> and then run <code>lake update</code> to generate the <code>lake-manifest.json</code> file. Standalone projects use <code>leanprover/lean4:stable</code> for their toolchain; mathlib projects use <code>leanprover-community/mathlib4:lean-toolchain</code>.</p>\n<p>After creating a mathlib project, <code>lake exe cache get</code> is called.</p>\n<p>When the project is fully initialized, users are prompted whether they want to open the newly created project.</p>\n<p><a href=\"/user_uploads/3121/3oFAEzP6KIZSLaSnQAWjVkDb/1_NewProject.png\">1_NewProject.png</a><br>\n<a href=\"/user_uploads/3121/d1z7qjgOwHb4Dy68H536nMQL/2_NewProject.png\">2_NewProject.png</a></p>\n<h3>Opening Projects</h3>\n<p>Two new commands to open existing projects have been added: <code>lean4.project.open</code> and <code>lean4.project.clone</code>.</p>\n<p><code>lean4.project.open</code> is intended to prevent users from accidentally opening the wrong folder. It displays a file picker and then checks if the selected folder is a valid Lean 4 project. The heuristic used here is the same as the one that has been used in the extension so far: If it contains a <code>lean-toolchain</code> file it is a valid Lean 4 project. If it contains <code>LICENSE</code> and <code>LICENSES</code> files, as well as a <code>src</code> folder, it is assumed to be Lean 4 itself and can also be opened with the command.  <br>\nIf the selected folder is not a valid Lean 4 project, the command looks through parent folders to see if it can find one there. If it finds one, it suggests to open that one instead.  </p>\n<p><code>lean4.project.clone</code> shows an input that allows users to input a URL to a Git repository. Afterwards, a file picker is opened to select the folder to clone the project to. Then, it clones the project using <code>git clone</code>, attempts to fetch the mathlib cache using <code>lake exe cache get</code> (failing silently if the command is not available) and asks whether the new project should be opened.</p>\n<p><a href=\"/user_uploads/3121/jfdybrqk-pQrIXWUEKFo-T3Y/1_Open.png\">1_Open.png</a><br>\n<a href=\"/user_uploads/3121/7REonF_Ezl7uZ0-uIYNff10f/2_Open.png\">2_Open.png</a><br>\n<a href=\"/user_uploads/3121/4h7cZwjZJE1CGpTUPQ6ddGNs/3_Clone.png\">3_Clone.png</a></p>\n<h3>Lake Commands</h3>\n<p>Four new commands for common Lake operations have been added: <code>lean4.project.build</code>, <code>lean4.project.clean</code>, <code>lean4.project.updateDependency</code> and <code>lean4.project.fetchCache</code>. All of these commands can interfere with the language server, so the Lean client is automatically stopped before running the command and automatically restarted afterwards.</p>\n<p><code>lean4.project.build</code> fetches the mathlib cache if it is available and runs <code>lake build</code> afterwards.</p>\n<p><code>lean4.project.clean</code> displays a confirmation prompt, runs <code>lake clean</code> and then asks the user whether they want to immediately fetch the mathlib cache if <code>lake exe cache</code> is available.</p>\n<p><code>lean4.project.fetchCache</code> simply fetches the mathlib cache if <code>lake exe cache</code> is available.</p>\n<p><code>lean4.updateDependency</code> parses the <code>manifest.json</code> of the project that is currently selected and fetches the current remote revision for each by calling <code>git ls-remote</code> with the input revision designated in the manifest. Dependencies that are still up-to-date are filtered. Then, a selection dialog is displayed to choose the dependency to update, what revision it is currently on and which one it will be updated to.  <br>\nAfter selecting a dependency, if the project is a GitHub project, the current remote <code>lean-toolchain</code> is automatically determined. If it differs from the current <code>lean-toolchain</code> of the project, a prompt is displayed, asking the user if they want to update their <code>lean-toolchain</code> to the remote version. If the project is not a GitHub project, users are asked whether they want to continue with updating the dependency without also updating the toolchain version.  <br>\nFinally, the new toolchain version is written, <code>lake update</code> is called to update the selected dependency and the mathlib cache is fetched if <code>lake exe cache</code> is available.</p>\n<p><a href=\"/user_uploads/3121/9F9cdGCA_QzEWy0YVO4lkMFk/1_Clean.png\">1_Clean.png</a><br>\n<a href=\"/user_uploads/3121/5x0IIlfLf0yS6wy4YgYmYFAA/2_Dependencies.png\">2_Dependencies.png</a><br>\n<a href=\"/user_uploads/3121/YUKT1r4UrhoWGoXC5o9dMTTd/3_Dependencies.png\">3_Dependencies.png</a></p>\n<h3>Elan</h3>\n<p>The command to install elan that used to be only accessible by opening a new Lean 4 file without having Lean installed has also been exposed as a command <code>lean4.setup.installElan</code> now.</p>\n<h2>Command Menu</h2>\n<p>In the top right, a new menu with the âˆ€-quantifier from Lean's logo as an icon has been added. The menu provides access to all user-facing commands that the VS Code extension provides. </p>\n<p>Since the menu can be used to open and create projects, as well as access documentation related to Lean, it is always displayed, even if no Lean 4 project is open. If one finds this annoying, it can be disabled with a new configuration setting. Certain commands are however only displayed when a Lean 4 file is open, e.g. building the project, as we need a file to determine the project that is currently active in multi-root workspaces.</p>\n<p><a href=\"/user_uploads/3121/1kehcZZ4Vn0aZvotZx0Jy0aZ/1_Menu.png\">1_Menu.png</a></p>\n<h2>Walkthrough</h2>\n<p>When the extension is first installed, a platform-specific walkthrough guide is opened that provides information on the following: </p>\n<ul>\n<li>Learning Lean: Links to books, the natural number game and documentation, as well as which target group each resource is intended for.</li>\n<li>Installing dependencies: A short platform-specific guide to get users set-up with Git and curl.</li>\n<li>Installing Elan: A button to install Elan from the walkthrough.</li>\n<li>Projects: A list of buttons that can be pressed to create a new project or obtain an existing one using the aforementioned commands.</li>\n<li>Zulip: An invitation to the Lean Zulip, a short introduction on how to post there and how to post helpful code examples.</li>\n</ul>\n<p>The walkthrough can always be re-opened through the \"Documentation\" submenu in the command menu.</p>\n<p><a href=\"/user_uploads/3121/13Uiw5k0mSM4wI2scZm2wQNe/1_Walkthrough.png\">1_Walkthrough.png</a><br>\n<a href=\"/user_uploads/3121/97Mi6A7ueUSaVnvtiocnyw36/2_Walkthrough.png\">2_Walkthrough.png</a><br>\n<a href=\"/user_uploads/3121/EQeIdaM50y92W-PudViVDTXZ/3_Walkthrough.png\">3_Walkthrough.png</a><br>\n<a href=\"/user_uploads/3121/PxIvgbRWQs5cwO_3gGWD9vOW/4_Walkthrough.png\">4_Walkthrough.png</a><br>\n<a href=\"/user_uploads/3121/MUIVQ61ECJ9eiea2Nwy-OFxS/5_Walkthrough.png\">5_Walkthrough.png</a><br>\n<a href=\"/user_uploads/3121/whV9pXTxsMpBkb88dNzwrRs6/6_Walkthrough.png\">6_Walkthrough.png</a></p>\n<h2>Safeguards</h2>\n<p>If users accidentally open a folder that is not a Lean 4 project using VS Code's regular \"Open Folder\" command and then open a Lean file within it, a notification suggesting that a wrong folder has been opened is displayed. If there is a parent folder that is a valid Lean 4 project, the notification suggests to open that folder instead. </p>\n<p>If users open a single Lean 4 file, a notification is displayed informing them that not all features are available in this mode and that they should open a project instead.</p>\n<p>Both notifications can be disabled with a new configuration setting.</p>\n<p><a href=\"/user_uploads/3121/qs1be8wH_9Xuxk1KJmA9Y3qm/1_Safeguards.png\">1_Safeguards.png</a><br>\n<a href=\"/user_uploads/3121/mvEwxks0mQuFG2mDViXqaDWF/2_Safeguards.png\">2_Safeguards.png</a><br>\n<a href=\"/user_uploads/3121/EFeMpj37HPC0PBMv85XBB5G2/3_Safeguards.png\">3_Safeguards.png</a></p>\n<h2>Other Usability Improvements</h2>\n<ol>\n<li>When selecting to restart the server, a confirmation prompt is displayed beforehand.</li>\n<li>A progress bar is displayed while starting the language server.</li>\n<li>All expensive external commands now display a progress bar. </li>\n<li>The progress bar notification now always contains a link to open the output channel where all command output is dumped for troubleshooting purposes.</li>\n<li>When errors are displayed for any external commands, a button is now displayed to open the command output.</li>\n<li>All external commands for which a progress bar is displayed can be cancelled by pressing the \"Cancel\" button on the progress notification. Doing so will terminate the command process.</li>\n<li>The output channel now also displays the external commands that have been invoked, not just their output.</li>\n<li>The \"Restart File\" command can now be activated using the context menu by right clicking in a file.</li>\n<li>The extension does not ask to install Lean on markdown files anymore.</li>\n</ol>\n<p><a href=\"/user_uploads/3121/INa0JhBqex2y-p2v5VF9xI2p/1_StartClientProgress.png\">1_StartClientProgress.png</a><br>\n<a href=\"/user_uploads/3121/_2lfSs_FhshvlKyLlvA-jFjK/2_CommandProgress.png\">2_CommandProgress.png</a><br>\n<a href=\"/user_uploads/3121/N-CyXWXkXGnAYcXk1ljRCSlS/3_ShowOutput.png\">3_ShowOutput.png</a><br>\n<a href=\"/user_uploads/3121/gzM6lWuqLgqg8LUbV0z9q2KN/4_Output.png\">4_Output.png</a><br>\n<a href=\"/user_uploads/3121/Y4vF01qtvObXMSo-YIbLGUj5/5_RestartContext.png\">5_RestartContext.png</a></p>",
        "id": 396524372,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697209861
    },
    {
        "content": "<p>Perhaps the installation and testing process could be simplified with a pre-release : <a href=\"https://code.visualstudio.com/api/working-with-extensions/publishing-extension#prerelease-extensions\">https://code.visualstudio.com/api/working-with-extensions/publishing-extension#prerelease-extensions</a></p>",
        "id": 396526275,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697210500
    },
    {
        "content": "<p>Thanks a lot for all this work Marc, it's wonderful!</p>",
        "id": 396526868,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697210674
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396526275\">said</a>:</p>\n<blockquote>\n<p>Perhaps the installation and testing process could be simplified with a pre-release : <a href=\"https://code.visualstudio.com/api/working-with-extensions/publishing-extension#prerelease-extensions\">https://code.visualstudio.com/api/working-with-extensions/publishing-extension#prerelease-extensions</a></p>\n</blockquote>\n<p>Yes. I wanted to get this out quickly so I just built the vsix and didn't adjust our release script to also allow using pre-releases. Next time :)</p>",
        "id": 396527041,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697210727
    },
    {
        "content": "<p>I think a crucial difficulty with hiding everything behind a graphical interface is error handling. You should make sure to find out what happens if you pull off the internet cable or electric power in the middle of any of those operations, and then find some to test them from a country censoring part of internet, and many people using all sorts of Windows antiviruses software trying very hard to prevent users from using their computers.</p>",
        "id": 396527297,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697210795
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396527297\">said</a>:</p>\n<blockquote>\n<p>I think a crucial difficulty with hiding everything behind a graphical interface is error handling. You should make sure to find out what happens if you pull off the internet cable or electric power in the middle of any of those operations, and then find some to test them from a country censoring part of internet, and many people using all sorts of Windows antiviruses software trying very hard to prevent users from using their computers.</p>\n</blockquote>\n<p>All command output is dumped to the <code>Lean: Editor</code> output channel, which can be opened by pressing the respective button if there is an error or even while running the command. See the following screenshots from above:<br>\n<a href=\"/user_uploads/3121/HCN93huVxjSKZ0sbztu8692f/2_CommandProgress.png\">2_CommandProgress.png</a><br>\n<a href=\"/user_uploads/3121/nmDRM44PCWKvNg0gi_xlY7zV/3_ShowOutput.png\">3_ShowOutput.png</a><br>\n<a href=\"/user_uploads/3121/duJN-toY_CZK14Vm7moO0UTj/4_Output.png\">4_Output.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/HCN93huVxjSKZ0sbztu8692f/2_CommandProgress.png\" title=\"2_CommandProgress.png\"><img src=\"/user_uploads/3121/HCN93huVxjSKZ0sbztu8692f/2_CommandProgress.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/nmDRM44PCWKvNg0gi_xlY7zV/3_ShowOutput.png\" title=\"3_ShowOutput.png\"><img src=\"/user_uploads/3121/nmDRM44PCWKvNg0gi_xlY7zV/3_ShowOutput.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/duJN-toY_CZK14Vm7moO0UTj/4_Output.png\" title=\"4_Output.png\"><img src=\"/user_uploads/3121/duJN-toY_CZK14Vm7moO0UTj/4_Output.png\"></a></div>",
        "id": 396527716,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697210901
    },
    {
        "content": "<p>But I agree that error reporting for common specific errors could still be improved vs. the command output.</p>",
        "id": 396527922,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697210966
    },
    {
        "content": "<p>Having a way to detect that an antivirus is interfering and suggesting to switch it off would be a huge improvement for students using Windows.</p>",
        "id": 396528254,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697211067
    },
    {
        "content": "<p>I'm not sure if this in particular is easy to detect, but feel free to create an issue for it.</p>",
        "id": 396528525,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697211151
    },
    {
        "content": "<p>I am guessing this depends on what the antivirus does in particular that makes students suffer. An anti virus is typically written in a way that makes it hard to detect or easy to delete in any way other than through the providers' solution. This is so that malware can't do the same. \"Easy\" is the keyword here. </p>\n<p>That being said, if as an example it is simply  blocking access to or downloads from specific sets of URLs, then testing access to them through fake pings might partially help. Antivirus or not, the extension needs to be able to download toolchains and caches from the respective URLs.</p>",
        "id": 396529553,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697211541
    },
    {
        "content": "<p>I have no idea how this all works, I'm not using a user-hostile OS. I simply see people struggling and being utterly confused until they switch off their antivirus, or somehow white-list lake.</p>",
        "id": 396529933,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697211697
    },
    {
        "content": "<p>I get it. Been there done that. The key thing to remember is that antivirus software often behaves like the malware it is defending from, so solutions won't be easy or foolproof.</p>",
        "id": 396530219,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697211800
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> : shall I raise an issue and do a PR over the weekend? The idea is to check access (through lake perhaps?)  to a list of URLs and if denied, then send a notification that \"the lean 4 extension cannot reach the URLs (see output log) to perform &lt;so and so&gt; operation. Please make sure that you are connected to the internet and have disabled your antivirus\"? This then check is then triggered whenever a command that requires the internet is run.</p>",
        "id": 396530903,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697212100
    },
    {
        "content": "<p>Before developing anything, I think a good first step would be to test common anti virus applications and note down how they make the various features of the extension fail (especially with the .vsix above). It may already be possible to provide better error messages purely based on the stderr / error codes of the commands.</p>",
        "id": 396531460,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697212337
    },
    {
        "content": "<p>In some cases, the right place to add the error message may also be in the command itself.</p>",
        "id": 396531587,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697212401
    },
    {
        "content": "<p>My suspicion is that testing even common antivirus software for common failures will be a tall order, and worse, it will have to be repeated periodically as the software changes. There are specific interactions which they interfere with, such as lake making calls to specific (URLs) or accessing some directory (such as ~/.cache). Even if we could give users a heads up that their network connection or firewall might be causing trouble, Patrick's students wouldn't get stuck.</p>",
        "id": 396532977,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697212941
    },
    {
        "content": "<p>Maybe we could link to a doc page online where we collect common antivirus related problems and fixes.</p>",
        "id": 396533726,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697213142
    },
    {
        "content": "<p>Is there a particular antivirus that is causing these problems?  It may be possible to get the AV to adjust it's behavior.   It could also be useful to put the file in question on virustotal to see if other AVs flag it.</p>",
        "id": 396533889,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1697213191
    },
    {
        "content": "<p>There are at least 5 scenarios:</p>\n<ol>\n<li>antivirus intercepts certain network connection activities, like for a domain that has not been authorized yet</li>\n<li>antivirus intercepts executing certain process that's not authorized, like <code>lake</code></li>\n<li>more subtly, antivirus intercepts certain authorized process to initiates external network connections, like <code>lake</code> could be allowed to execute, but it requires extra authorization to connect to network</li>\n<li>certain domains or IPs can't be accessed without a proxy from the user's internet environment</li>\n<li>accessing or writing to certain directories is not permitted</li>\n</ol>\n<p>These scenarios are brittle and difficult to adjust beforehand, and possibly subjected to corporate or regional policies.</p>\n<p>They are all \"detectable\" from what the Lean tool is trying to do and fail. These scenarios are frustrating for users because a Lean tool could depend on multiple commands and multiple domains to work, and the dependency could be in any steps, and even just one of these commands or domains startle the antivirus, a whole smooth process is interrupted.</p>\n<blockquote>\n<p>In some cases, the right place to add the error message may also be in the command itself.</p>\n</blockquote>\n<p>Indeed, but the guide to fix the issue isn't. A general solution to this might be checking the error output for network/command execution/file access patterns, then provide a general troubleshooting guide for the specific command/domain to succeed.</p>\n<p>That said, while it's feasible, it's not really very productive to do, a general troubleshooting guide is probably sufficient.</p>",
        "id": 396534190,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697213309
    },
    {
        "content": "<p>Note we already have some troubleshooting info here: <a href=\"https://leanprover-community.github.io/install/project.html#initializesecuritycontext-error-on-windows\">https://leanprover-community.github.io/install/project.html#initializesecuritycontext-error-on-windows</a></p>",
        "id": 396534376,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697213395
    },
    {
        "content": "<p>Detecting <code>InitializeSecurityContext</code> in the stdout and pointing to that webpage would be the low-hanging fruit</p>",
        "id": 396534482,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697213424
    },
    {
        "content": "<blockquote>\n<p>My suspicion is that testing even common antivirus software for common failures will be a tall order</p>\n</blockquote>\n<p>I don't think we can provide concrete helpful error messages for anti virus applications without testing against them. The broad alternative is to suggest checking the internet connection and antivirus on failure when calling any command that installs anything, accesses remote URLs or certain directories, but I believe that this will be quite unnecessarily noisy.</p>\n<p>It's not like we need perfect anti virus error reporting, it's perfectly acceptable when the ones that cause the most trouble are covered.</p>\n<blockquote>\n<p>it will have to be repeated periodically as the software changes</p>\n</blockquote>\n<p>I would hope that we can resolve new common ones as they come up with students.</p>",
        "id": 396534559,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697213458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396529933\">said</a>:</p>\n<blockquote>\n<p>I have no idea how this all works, I'm not using a user-hostile OS. I simply see people struggling and being utterly confused until they switch off their antivirus, or somehow white-list lake.</p>\n</blockquote>\n<p>Arguably the problem is the user-hostile manufacturers who sideload nasty AV software on windows machines out of the box. Windows defender doesn't break Lean (though it does massively slow it down until you tell it to stop doing so)</p>",
        "id": 396534701,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697213512
    },
    {
        "content": "<p>At LFTCM I think no two users having trouble had the same antivirus</p>",
        "id": 396534986,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697213625
    },
    {
        "content": "<blockquote>\n<p>The broad alternative is to suggest checking the internet connection and antivirus on failure when calling any command that installs anything, accesses remote URLs or certain directories, but I believe that this will be quite unnecessarily noisy.</p>\n</blockquote>\n<p>This is my suggestion. I don't think it is noisy to give error messages when the command is not going to do its job anyway.</p>",
        "id": 396535524,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697213861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396534986\">said</a>:</p>\n<blockquote>\n<p>At LFTCM I think no two users having trouble had the same antivirus</p>\n</blockquote>\n<p>Did they have trouble with the same commands and how did the issues manifest exactly?</p>\n<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396535524\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>The broad alternative is to suggest checking the internet connection and antivirus on failure when calling any command that installs anything, accesses remote URLs or certain directories, but I believe that this will be quite unnecessarily noisy.</p>\n</blockquote>\n<p>This is my suggestion. I don't think it is noisy to give error messages when the command is not going to do its job anyway.</p>\n</blockquote>\n<p>I think it may be OK if we link or include a general troubleshooting guide that goes beyond anti virus applications on errors.</p>",
        "id": 396536058,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697214109
    },
    {
        "content": "<p>Anyway, I guess maybe the antivirus discussion could be moved to a new topic, the new extension experience is overall very nice and smooth, particularly the top-right corner Lean menu (even wish for a bigger button or a whole toolbar).</p>",
        "id": 396536119,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697214125
    },
    {
        "content": "<blockquote>\n<p>I think it may be OK if we link or include a general troubleshooting guide that goes beyond anti virus applications on errors.</p>\n</blockquote>\n<p>That webpage Eric showed or maybe a separate page that documents common painpoints and solutions?</p>",
        "id": 396536454,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697214260
    },
    {
        "content": "<p>One issue is that I'm using <a href=\"https://www.cursor.so/\">Cursor</a> (an AI-based VS Codium variant) so I can't open walkthrough in it (I have switched back to VS Code to try it out):</p>\n<p><a href=\"/user_uploads/3121/yiminaFdY6TfzIEDdsqYwxWg/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/yiminaFdY6TfzIEDdsqYwxWg/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/yiminaFdY6TfzIEDdsqYwxWg/image.png\"></a></div>",
        "id": 396536517,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697214289
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396536454\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think it may be OK if we link or include a general troubleshooting guide that goes beyond anti virus applications on errors.</p>\n</blockquote>\n<p>That webpage Eric showed or maybe a separate page that documents common painpoints and solutions?</p>\n</blockquote>\n<p>The leanprover-community page only covers a single error, and I think I would prefer also including it locally in the extension somehow so that loading the troubleshooting guide itself does not require opening a URL (e.g. using custom webview content).</p>\n<p>In general, I'm not sure which kinds of errors are common with new Lean users, so I'd appreciate any help from people who often interact with new users in collecting common problems.</p>",
        "id": 396537231,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697214570
    },
    {
        "content": "<p>The AV errors I saw at LftCM were either:</p>\n<ul>\n<li>That error, which is when the AV is MitM-ing curl's SSL connection, and curl doesn't like it</li>\n<li>Very high CPU usage due to the AV analyzing every single olean file that Lean opens.</li>\n</ul>",
        "id": 396537847,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697214821
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396536454\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think it may be OK if we link or include a general troubleshooting guide that goes beyond anti virus applications on errors.</p>\n</blockquote>\n<p>That webpage Eric showed or maybe a separate page that documents common painpoints and solutions?</p>\n</blockquote>\n<p>It's really just one of a million errors I've seen. It just happened to be documented. And the real cause, per my understanding, is that the (corperate or antivirus) proxy is doing something similar to the man-in-the-middle attack, using a self-signed certificate to monitor the HTTPS traffic, which can be made to be trusted by many applications, just it's not configured for curl . One thing for sure is that this is a network issue, so the \"an antivirus program that scans each downloaded file\" probably is just a guess and not related ( but related to the CPU slowdown <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> mentioned).</p>",
        "id": 396537959,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697214854
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396527922\">said</a>:</p>\n<blockquote>\n<p>But I agree that error reporting for common specific errors could still be improved vs. the command output.</p>\n</blockquote>\n<p>I suspect that we will just run into these situations organically, we'll find new users who are confused and will learn what works to unconfuse them.</p>",
        "id": 396543499,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697216692
    },
    {
        "content": "<p>While a proper AV-issue specific message would be great, I think we should at least add the stop gap measure of checking network/file access for relevant commands and asking users to turn off their AV/firewall. This would not necessarily hinder the development of better error detection in the long run, and would greatly help new users in the immediate future</p>",
        "id": 396543556,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697216724
    },
    {
        "content": "<p>Adding a web link (or even a link to open the page in the documentation viewer) to a page with common fixes improves this stopgap</p>",
        "id": 396544220,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697217013
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396543556\">said</a>:</p>\n<blockquote>\n<p>While a proper AV-issue specific message would be great, I think we should at least add the stop gap measure of checking network/file access for relevant commands and asking users to turn off their AV/firewall. This would not necessarily hinder the development of better error detection in the long run, and would greatly help new users in the immediate future</p>\n</blockquote>\n<p>Just to be sure: You're suggesting that we should provide better errors in the form of a troubleshooting guide when we run the commands, not that we should predict all the different ways in which commands may access resources and provide errors before we run the command, right?</p>",
        "id": 396544486,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697217140
    },
    {
        "content": "<p>Yes</p>",
        "id": 396544513,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697217158
    },
    {
        "content": "<p>And this is also what I wanted to PR</p>",
        "id": 396544532,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697217176
    },
    {
        "content": "<p>From your previous messages, it sounded like you wanted to send fake-pings before running the command, which is why I was confused.</p>",
        "id": 396544897,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697217354
    },
    {
        "content": "<p>If you want to write the troubleshooting guide covering several common AV or internet connectivity issues and add a button to command error messages to display it, I would gladly review the PR.</p>",
        "id": 396545044,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697217421
    },
    {
        "content": "<p>My initial idea was to write a \"checkAccess\" function. But later I realised that the extension would throw error notifications anyway, and currently all we need is a link to a webpage with common issues+fixes</p>",
        "id": 396545562,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697217656
    },
    {
        "content": "<p>Do I have the rights to PR to the vscode extension. I recall that an invite was needed for mathlib</p>",
        "id": 396546145,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697217939
    },
    {
        "content": "<p>I think you can create a fork of your own and create a pr from there</p>",
        "id": 396547454,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697218466
    },
    {
        "content": "<p>From the description it seems that the extension's commands, for example update dependencies, performs steps that the underlying tools do not do (handling toolchain files), or at least do not do yet. I guess a bit of competition between the CLI  and the GUI tooling is healthy?</p>",
        "id": 396647308,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697286688
    },
    {
        "content": "<p>CLI ultimately determines the upperbound of user experience. If a CLI is fragile to any unexpected situation and silent or even misguided about where went wrong, GUI can do only so much bandage. GUI wraps the normal process nice and smooth, yet the user is dropped to the wild to survive if something derails even a little.  I saw there are some discussions about CLI vs GUI, like where an issue should be better fixed, I would argue that they all should be fixed at the source (i.e. CLI) eventually. If GUI is doing more steps, it clearly indicates something to be improved on the end of CLI (or the program).</p>",
        "id": 396648036,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697287426
    },
    {
        "content": "<p>Utensil : Agreed, specifically with the word <strong>eventually</strong>.  But the changes being proposed are in lake and they are not going to happen right away. This has been discussed before, but the reason GUI changes are proposed is threefold:</p>\n<ol>\n<li>Not load lake with a bunch of shortcut behaviours that will have to be taken into account as lake's dependency and version management get better. It is hard to build a proper dependency management tool even without having such considerations.</li>\n<li>Provide UX functionality where it truly belongs. CLIs are always going to have footguns, because their target audience is the power user who demands flexibility. GUIs provide carefully crafted features for those who don't want to touch the CLI.</li>\n<li>Many feature requests here are specific to mathlib users and need to be met on a more immediate basis. For example math professors teaching students who are new to it all. Most such users are not CLI users.</li>\n</ol>\n<p>As lake eventually stabilises, the machinery under the GUI can be adapted in such a way that non CLI users never notice anything. Until then new CLI-averse users need a set of safe options.</p>",
        "id": 396660331,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697298140
    },
    {
        "content": "<p>Yes, totally agree. It's definitely great to have GUI evolve faster and more flexible and responsive to the need of end users, and keep normal usage as far as possible from footguns. It's also a testbed and part of the feedback loop of how underlying implementation could evolve towards.</p>",
        "id": 396661692,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697299428
    },
    {
        "content": "<p>I have given a quick try and it looks great.</p>\n<p>Any chance that the extension could also take care of installing the dependencies (git/curl)?</p>",
        "id": 396676962,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1697316692
    },
    {
        "content": "<p>On Windows, this is somewhat difficult. I believe that on newer versions of Windows 10, winget is available by default and can install git, though.<br>\nFor Linux, I suppose we could try a bunch of common package managers to install dependencies, though I expect this to be controversial.<br>\nNot sure about Mac, as I'm not a Mac user. It would be nice to get feedback from Mac users on whether the installation procedure suggested in the walkthrough is reasonable.</p>",
        "id": 396721535,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697350395
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396545044\">said</a>:</p>\n<blockquote>\n<p>If you want to write the troubleshooting guide covering several common AV or internet connectivity issues and add a button to command error messages to display it, I would gladly review the PR.</p>\n</blockquote>\n<p>As step 1 for this, I have opened a PR on the leanprover community website repository. I am trying to get the PR reviewed and crowd source some initial issues + fixes. I have created a thread for  collecting these issues.</p>",
        "id": 396738751,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697364077
    },
    {
        "content": "<p>It's under <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> &gt;Troubleshooting Page</p>",
        "id": 396738894,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697364170
    },
    {
        "content": "<p>I welcome any suggestions and issues so that I can add them to the page.</p>",
        "id": 396739246,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697364430
    },
    {
        "content": "<p>About macOS: If the system has homebrew installed, then then installing git is feasible. If the system has xcode installed (which is not unlikely) then every xcode update can potentially mess up the installation. Asking mac users not to install xcode is a big deal since it is an awesome IDE and comes with a lot of other programming utilities.The other question is whether lean's extension should be doing such things as installing an entire package manager. curl is going to be already part of the system.</p>",
        "id": 396741480,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697366196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466334\">@Shreyas Srinivas</span> I don't know much about macOS, what parts can be messed up by an xcode update?</p>",
        "id": 396748128,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697371445
    },
    {
        "content": "<p>(I don't recall any complaints about git from macOS users so far, or Linux for that matter)</p>",
        "id": 396748456,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697371709
    },
    {
        "content": "<p>Until earlier this year, every time xcode got updated you had to run some <code>xcode-select  --install</code>  to get access to git again (among other CLI commands)</p>",
        "id": 396748637,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697371898
    },
    {
        "content": "<p>This would happen each time Mac ran system updates that affected xcode.</p>",
        "id": 396748841,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697372056
    },
    {
        "content": "<p>I know it's a bit cray, but how hard would it be to ship Lean with enough of git to make this work?</p>",
        "id": 396759105,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697380453
    },
    {
        "content": "<p>Git does have a few requirements like perl, OpenSSH, some SSL library that we should <em>really</em> not ship ourselves IMHO. So that rules it out for UNIX style platforms already. I don't know exaclty how the git for windows fork works but I can't imagine it's much better.</p>",
        "id": 396759754,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1697380981
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> If by \"this\" you mean fetching dependencies like mathlib, it's something I've been thinking about before - especially as getting an http archive from GitHub can actually be faster than using git. But that would only get you as far as \"now I actually want to share my code with others\", so the cost/benefit ratio is not clear.</p>",
        "id": 396760083,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697381279
    },
    {
        "content": "<p>I have no idea how software distribution work on OSes that have no package manager. But git is de facto a dependency of Lean. How do other software manage dependencies on Windows?</p>",
        "id": 396761281,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697382099
    },
    {
        "content": "<p>On Linux the model is clear: there should be packages providing elan the normal way (deb, rpm...) with git as a dependency.</p>",
        "id": 396761389,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697382147
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396761281\">said</a>:</p>\n<blockquote>\n<p>I have no idea how software distribution work on OSes that have no package manager. But git is de facto a dependency of Lean. How do other software manage dependencies on Windows?</p>\n</blockquote>\n<p>It is sadly very common to just package up all of the libraries that you need into your installation archive and ship them. But this can easily lead to people using outdated and potentially vulnerable libraries unless you basically force them to update, at which point we are just emulating our own package management.</p>",
        "id": 396761742,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1697382412
    },
    {
        "content": "<p>That was my guess. So indeed it is sad but seems to be the only was to provide the UX that people using Windows or MacOS expect.</p>",
        "id": 396762224,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697382826
    },
    {
        "content": "<p>Here is a <a href=\"https://mac.install.guide/commandlinetools/8.html\">non-official list</a> of xcode CLI tools <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> . All these tools can be affected by the xcode developers making inconvenient decisions, If we want a macOS installer for git</p>",
        "id": 396765874,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697385658
    },
    {
        "content": "<p>I think xcode users breaking their git is the user group I'm least concerned about. They should be interested in fixing it anyway, and they will probably figure out how to.</p>",
        "id": 396769040,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697388610
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> in the new extension, is there a command to update Mathlib (either when working on Mathlib or on a project depending on it)?</p>",
        "id": 396769064,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697388660
    },
    {
        "content": "<p>Now I see it. I think the extension was in a weird state.</p>",
        "id": 396769802,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697389427
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396769040\">said</a>:</p>\n<blockquote>\n<p>I think xcode users breaking their git is the user group I'm least concerned about. They should be interested in fixing it anyway, and they will probably figure out how to.</p>\n</blockquote>\n<p>Xcode is the standard way to install and run these CLI tools. AFAIK, brew packages use the xcode CLI too. This is why I brought it up. There are ways to circumvent xcode, but MacOS goes out of its way to make life painful for external installers.</p>",
        "id": 396771471,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697391128
    },
    {
        "content": "<p>You'll get an error about \"invalid developer path\" or something similar</p>",
        "id": 396771610,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697391285
    },
    {
        "content": "<p>If you are a student who is doing some programming as well as math and lean, it is unlikely that you won't install the xcode CLT.</p>",
        "id": 396772542,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697392143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396769802\">said</a>:</p>\n<blockquote>\n<p>Now I see it. I think the extension was in a weird state.</p>\n</blockquote>\n<p>One possible thing that may be confusing you: Project actions and such are only displayed when the editor language is lean 4, i.e. when you're focussing a Lean 4 editor tab. I have plans to improve this in the future but it's all a bit annoying, so not in this version yet.</p>",
        "id": 396773144,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697392599
    },
    {
        "content": "<p>You menu the âˆ€ menu is there but it contains less items?</p>",
        "id": 396773481,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697392920
    },
    {
        "content": "<p>That would indeed explain my confusion.</p>",
        "id": 396773527,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697392929
    },
    {
        "content": "<p>I also realize another source of confusion is that the âˆ€ menu is displayed in the upper right corner of the currently active panel and not the upper-right corner of VSCode. So it frequently jumps from the editing panel to the infoview panel. But I fear this is a problem with VSCode itself.</p>",
        "id": 396773646,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697393045
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396773481\">said</a>:</p>\n<blockquote>\n<p>You menu the âˆ€ menu is there but it contains less items?</p>\n</blockquote>\n<p>Yes. There are items that are always enabled (opening projects, documentation, etc) and items that are only enabled when we can be sure that we're actually in a Lean 4 context.</p>",
        "id": 396774083,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697393505
    },
    {
        "content": "<p>That said, I'm aware that this is not optimal and it will be improved in the future.</p>",
        "id": 396774374,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697393760
    },
    {
        "content": "<p>I just tried creating a new Lean project ( depending on Mathlib) and VSCode is completely confused between Lean 3 and Lean 4.</p>",
        "id": 396774513,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697393892
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/m3xnPnIyxB_YVHYDSxfUxs_B/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/m3xnPnIyxB_YVHYDSxfUxs_B/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/m3xnPnIyxB_YVHYDSxfUxs_B/image.png\"></a></div>",
        "id": 396774540,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697393936
    },
    {
        "content": "<p>Interesting. You probably have both extensions installed, right? I'll see if I can fix that tomorrow.</p>",
        "id": 396774668,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697394072
    },
    {
        "content": "<p>I have both the Lean 3 extension and your Lean 4 one.</p>",
        "id": 396780839,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697401100
    },
    {
        "content": "<p>I wouldn't worry about linux users (or at least, i would put them on the least priority queue). They are used to instructions that involve running some script in  a terminal.</p>\n<p>My worry is mostly about windows and mac users.</p>\n<p>One more question: I remember seeing an option in the older extension about allowing it to manage elan. Has it dissapeared?</p>",
        "id": 396785507,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1697407019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461731\">Miguel Marco</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396785507\">said</a>:</p>\n<blockquote>\n<p>My worry is mostly about windows and mac users.</p>\n</blockquote>\n<p>macOS won't be easy since they push xcode clt everywhere and this easily messes with other installs (although installing xcode is trivial from the app store). That being said, git offers its GUI installer for both Mac and Windows.</p>",
        "id": 396786742,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697408393
    },
    {
        "content": "<p>Once you have git installed, there are very good git extensions on vscode that already do a splendid job of keeping the CLI away, over and above vscode's inbuilt git integration.</p>",
        "id": 396786823,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697408448
    },
    {
        "content": "<p>I have never experienced this supposed problem with git and xcode, in many years of using both git and xcode.</p>",
        "id": 396791808,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697414128
    },
    {
        "content": "<p><code>which git</code> reports <code>/opt/homebrew/bin/git</code></p>",
        "id": 396791878,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697414171
    },
    {
        "content": "<p>The only problem on Mac M1 I have is <a href=\"#narrow/stream/113489-new-members/topic/M1.20macs/near/390656769\">VS Code Extension can't install elan</a>, I need to figure out that it's actually as simple as <code>brew install elan-init</code> which indicates the binary exists but provided not by elan and VS Code extension hasn't handled such subtleties yet. But I guess it should be addressed from the elan script end?</p>\n<p>I have encountered the git issue once or twice, but it resolved really quick, so I have not much impression, the confusing part I recalled was that it hangs in the terminal then pops out the GUI prompt in the first screen instead of the terminal screen, so I have to notice it only when I went back to the first screen (trying to figure out if the problem is network related).</p>",
        "id": 396803079,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697421137
    },
    {
        "content": "<p>You can see that the drastic drop of experience comes from being dragged to the other UI world:</p>\n<ul>\n<li>when you are using GUI and suddenly you have to figure out what went wrong on the CLI end, </li>\n<li>or you are happily enjoying CLI (or a script/program) on the terminal, and suddenly a GUI blocks it (there are more examples, like login credential helpers, and like first time accessing some file system location from terminal). Another example is apt/rustup/elan and many installers are interactive by default, and one has to supply <code>-s -- -y</code> like stuff to make them work.</li>\n</ul>",
        "id": 396804220,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697421825
    },
    {
        "content": "<p>I seldom use Linux GUI nowadays, mostly I access Linux from terminal or a Web UI, the former gives me total control, and the latter gives me modern experience (i.e. Codespaces or VS Code server or plain docker for working with Lean).</p>\n<p>On Windows, I've fought with many generations of OS/AV or \"security\" policies, became fluent and lost count. It's always a half-baked and restricted world for developers, and the bundle-all one-click install packs are unfortunately the quickest way to get to the real work, so for a rapid involving area like lean (or e.g. LLM), I would avoid using Windows most of the time, or I'll have to going over the setup tweaks frequently, which eats my limited time for the real work.</p>",
        "id": 396806289,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697422990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> : I just found a stackexchange thread <a href=\"https://apple.stackexchange.com/questions/415563/repeatedly-being-asked-to-install-command-line-tools\">about this</a></p>",
        "id": 396847687,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697444249
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> I think the message <br>\n<a href=\"/user_uploads/3121/5XmXCQ4hbEDOZFMUKLVHJxyY/image.png\">image.png</a><br>\nmisses some explanation, or at least the world toolchain (or Lean version).</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/5XmXCQ4hbEDOZFMUKLVHJxyY/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/5XmXCQ4hbEDOZFMUKLVHJxyY/image.png\"></a></div>",
        "id": 396887378,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697457690
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396887378\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> I think the message <br>\n<a href=\"/user_uploads/3121/5XmXCQ4hbEDOZFMUKLVHJxyY/image.png\">image.png</a><br>\nmisses some explanation, or at least the world toolchain (or Lean version).</p>\n</blockquote>\n<p>You're right, I think it should be clearer that we're updating the version of the project, not something else.</p>",
        "id": 396888293,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697458002
    },
    {
        "content": "<p>Maybe I read the message too quickly, but my first reaction was it is not clear enough for beginners.</p>",
        "id": 396888539,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697458107
    },
    {
        "content": "<p>And then after closing this message and waiting, there is a message saying \"Imports are out of date and must be rebuilt; use the \"Restart File\" command in your editor.\". I guess it comes directly from lake and tries to be editor agnostic, but the result is that VSCode using beginners won't know where is the restart file command.</p>",
        "id": 396888709,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697458187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396738751\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396545044\">said</a>:</p>\n<blockquote>\n<p>If you want to write the troubleshooting guide covering several common AV or internet connectivity issues and add a button to command error messages to display it, I would gladly review the PR.</p>\n</blockquote>\n<p>As step 1 for this, I have opened a PR on the leanprover community website repository. I am trying to get the PR reviewed and crowd source some initial issues + fixes. I have created a thread for  collecting these issues.</p>\n</blockquote>\n<p>After discussing this in the <strong>#general &gt; troubleshooting page</strong> topic, I have raised an RFC issue on the lean 4 repo to add this page to the lean manual. If you consider this issue important, it apparently helps if you add a  <span aria-label=\"like\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"like\">:like:</span>  to the issue. Here's the issue: <a href=\"https://github.com/leanprover/lean4/issues/2698\">https://github.com/leanprover/lean4/issues/2698</a></p>\n<p>The PR to add the page will follow once I get approval on the issue. The addition of the troubleshooting link to vscode error messages will follow once we have the troubleshooting page.</p>",
        "id": 396933160,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697471738
    },
    {
        "content": "<p>I am guessing the last part will also have to follow the \"make an RFC issue\" step and then the \"raise a PR\" step.</p>",
        "id": 396933620,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697471888
    },
    {
        "content": "<p>I've incorporated some of Patrick's comments:</p>\n<ul>\n<li>As soon as the extension activates all of its Lean 4 specific features (e.g. the infoview) after opening a Lean 4 file once, the menu will always contain all entries, so it should be less confusing. If an entry cannot be used in a specific situation, the extension will report back with an error.</li>\n<li>Fix the Lean 3 / Lean 4 confusion issue.</li>\n<li>Hopefully make the toolchain update message less confusing.</li>\n</ul>\n<p>You can now try this new version before it is released to everyone using a VS Code pre-release by clicking the following button in the Extensions sidebar menu in VS Code:<br>\n<a href=\"/user_uploads/3121/auvS0Y4SsbyybjUNe5QWcQql/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/auvS0Y4SsbyybjUNe5QWcQql/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/auvS0Y4SsbyybjUNe5QWcQql/image.png\"></a></div><p>Specifically, there is now no need to manually install a .vsix file for testing anymore.</p>",
        "id": 397311097,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697635039
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 397311240,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697635082
    },
    {
        "content": "<p>FYI, I just tried updating an ancient project using the new extension and it totally failed.  That project was a bit more than one year old, hence it didn't include a lake-manifest.json. I think it doesn't make sense to invest a lot of time supporting this, but I thought I would report this anyway.</p>",
        "id": 397362879,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697652701
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/397362879\">said</a>:</p>\n<blockquote>\n<p>FYI, I just tried updating an ancient project using the new extension and it totally failed.  That project was a bit more than one year old, hence it didn't include a lake-manifest.json. I think it doesn't make sense to invest a lot of time supporting this, but I thought I would report this anyway.</p>\n</blockquote>\n<p>If the failure includes any of the new commands, that's to be expected.<br>\nMy current policy is to support all Lean 4 versions from the first stable release onwards for new features, and to not break backwards compatibility for existing features with Lean 4 versions that are less than one year old, including versions pre-stable. Were the pre-update features (e.g. infoview, restart file, etc) still functional in that old project?</p>",
        "id": 397364518,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697653466
    },
    {
        "content": "<p>Yes, only the new stuff seems broken.</p>",
        "id": 397365627,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697653954
    },
    {
        "content": "<p>If you are curious and want to experiment, this is a public project: <a href=\"https://github.com/PatrickMassot/verbose-lean4\">https://github.com/PatrickMassot/verbose-lean4</a></p>",
        "id": 397365714,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697654014
    },
    {
        "content": "<p>When upgrading old Lean 4 projects, it seems to just start over with the meta (tool-chain, lakefile etc.) and incorporate existing contents, usually I have to <code>lake new</code> a new project structure elsewhere then copy things over because <code>lake new</code> doesn't allow override.</p>\n<p>Maybe the extension can do something similar, like detecting the project doesn't even meet the minimal support criteria, then prompt the user to upgrade it completely, then do a <code>lake new</code> override?</p>",
        "id": 397405023,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697677871
    },
    {
        "content": "<p>Is it too late to request a 'paste tactic suggestion' feature like the lean 3 extension had?</p>",
        "id": 397416959,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1697684265
    },
    {
        "content": "<p>This is already supported if you click the tactic suggestion in widgets, it would replace the current tactic.</p>",
        "id": 397421791,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697686704
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/397405023\">said</a>:</p>\n<blockquote>\n<p>When upgrading old Lean 4 projects, it seems to just start over with the meta (tool-chain, lakefile etc.) and incorporate existing contents, usually I have to <code>lake new</code> a new project structure elsewhere then copy things over because <code>lake new</code> doesn't allow override.</p>\n<p>Maybe the extension can do something similar, like detecting the project doesn't even meet the minimal support criteria, then prompt the user to upgrade it completely, then do a <code>lake new</code> override?</p>\n</blockquote>\n<p>I think the benefit of this will diminish considerably over time.</p>",
        "id": 397442714,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697699304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/397421791\">said</a>:</p>\n<blockquote>\n<p>This is already supported if you click the tactic suggestion in widgets, it would replace the current tactic.</p>\n</blockquote>\n<p>Yes, but the lean3 version had a keyboard shortcut.</p>",
        "id": 397484477,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1697714646
    },
    {
        "content": "<p>Ah, that might be tricky. Did it work for multiple tactic suggestions?</p>",
        "id": 397487674,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697715858
    },
    {
        "content": "<p>I don't think I ever tried - but for me the main use was <code>squeeze_simp</code>, after typing which one could press [keyboard shortcut] and have the suggestion appear in the editor. Being able to do this for <code>simp?</code> would be fantastic.</p>",
        "id": 397506879,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1697722568
    },
    {
        "content": "<p><code>Shift-Alt-.</code> or <code>Ctrl-.</code> should work on VS Code, and <code>C-l a a</code> should work on vanilla emacs</p>",
        "id": 397508362,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697722978
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 397508492,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697723023
    },
    {
        "content": "<p>Thanks - but I can't figure out the equivalent on vscode mac</p>",
        "id": 397543756,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1697734554
    },
    {
        "content": "<p>Maybe <code>âŒ˜-.</code>? According to <a href=\"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf\">https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf</a> at least</p>",
        "id": 397544265,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697734801
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 397544430,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1697734856
    },
    {
        "content": "<p>This has been released to everyone now.</p>",
        "id": 398118629,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698077696
    },
    {
        "content": "<p>I don't see a separate project menu, but I can see the commands in the palette.</p>",
        "id": 398119735,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698078134
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/398119735\">said</a>:</p>\n<blockquote>\n<p>I don't see a separate project menu, but I can see the commands in the palette.</p>\n</blockquote>\n<p>Open a file. The title bar menu is unfortunately only displayed when any file has been opened.</p>",
        "id": 398119872,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698078206
    },
    {
        "content": "<p>I am in a lake project</p>",
        "id": 398119897,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698078218
    },
    {
        "content": "<p>For good measure, I closed all vscode windows and restarted them (although this is usually not necessary). Same result.</p>",
        "id": 398120397,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698078409
    },
    {
        "content": "<p>Might I suggest that the menu be called <code>Lean</code> instead of <code>Project</code> which is very generic (it still isn't showing up)?</p>",
        "id": 398121384,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698078801
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/398119872\">said</a>:</p>\n<blockquote>\n<p>Open a file. The title bar menu is unfortunately only displayed when any file has been opened.</p>\n</blockquote>\n<p>I think this is probably an indication that we are mis-using the file-level toolbar, since many of the operations there do not operate on a file level</p>",
        "id": 398124898,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698080258
    },
    {
        "content": "<p>(perfection is the enemy of the good and all that, so I'm glad we have a menu somewhere; but I'm unconvinced that this is the right long-term home for it)</p>",
        "id": 398125138,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698080347
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/398125138\">said</a>:</p>\n<blockquote>\n<p>(perfection is the enemy of the good and all that, so I'm glad we have a menu somewhere; but I'm unconvinced that this is the right long-term home for it)</p>\n</blockquote>\n<p>Unfortunately, VS Code does not let us contribute to the \"right place\" for this kind of menu. The only alternative that extensions are allowed to use is a sidebar menu (also called \"views\" because they're really intended for UIs, not lists of commands), which is somewhat inconvenient because you have to open it and close it again after calling a command.</p>",
        "id": 398126730,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698080989
    },
    {
        "content": "<p>See <a href=\"https://code.visualstudio.com/api/references/contribution-points\">https://code.visualstudio.com/api/references/contribution-points</a></p>",
        "id": 398126808,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698081006
    },
    {
        "content": "<p>It looks like you can contribute to the top-level menu alongside \"file\"</p>",
        "id": 398126968,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698081098
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/398126968\">said</a>:</p>\n<blockquote>\n<p>It looks like you can contribute to the top-level menu alongside \"file\"</p>\n</blockquote>\n<p>With which contribution point?</p>",
        "id": 398127070,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698081130
    },
    {
        "content": "<p>Hmm, I now seem to have lost it. Does <code>explorer/title</code> in <code>contributes.menus</code> work?</p>",
        "id": 398127233,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698081220
    },
    {
        "content": "<p><code>explorer/title</code> is the three dot menu in the explorer sidebar menu, I think</p>",
        "id": 398127384,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698081275
    },
    {
        "content": "<p>It seems it's not supported anyway: <a href=\"https://github.com/microsoft/vscode/issues/108271\">https://github.com/microsoft/vscode/issues/108271</a></p>",
        "id": 398127413,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698081289
    },
    {
        "content": "<p>Could there be a menu on the sidebar instead? like latex-workshop?</p>",
        "id": 398132234,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698083522
    },
    {
        "content": "<p>Here's how to contribute to the explorer menu: <a href=\"https://github.com/eamodio/vscode-toggle-excluded-files/blob/98a87df11afcbd5cb7b9ba23d9704ccbcda376a2/package.json#L138-L150\">https://github.com/eamodio/vscode-toggle-excluded-files/blob/98a87df11afcbd5cb7b9ba23d9704ccbcda376a2/package.json#L138-L150</a></p>",
        "id": 398133179,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698083963
    },
    {
        "content": "<p>That extension adds this center button:</p>\n<p><a href=\"/user_uploads/3121/RMBPBuZp47Y8MUHMwcjyvld3/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/RMBPBuZp47Y8MUHMwcjyvld3/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/RMBPBuZp47Y8MUHMwcjyvld3/image.png\"></a></div>",
        "id": 398133251,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698083998
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/398133251\">said</a>:</p>\n<blockquote>\n<p>That extension adds this center button:</p>\n<p><a href=\"/user_uploads/3121/RMBPBuZp47Y8MUHMwcjyvld3/image.png\">image.png</a></p>\n</blockquote>\n<p>The problem with the explorer menu bar is that it's even more difficult to find than the editor title bar. For the latter you need to open a file, for the former you need to open the right sidebar and then hover your mouse over the explorer sidebar so that the icon is displayed.</p>",
        "id": 398134140,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698084379
    },
    {
        "content": "<p>... And if you somehow happen to collapse the Mathlib4 menu, the icon just disappears altogether</p>",
        "id": 398134830,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698084704
    },
    {
        "content": "<p>Can't we add an icon on the activity bar? once we click on it the extension gets running.</p>",
        "id": 398134836,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698084706
    },
    {
        "content": "<p>The activity bar is always visible by default</p>",
        "id": 398134891,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698084723
    },
    {
        "content": "<p>The activity bar / sidebar contributes views. See a few posts above for why I did not implement a view.</p>",
        "id": 398135034,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698084796
    },
    {
        "content": "<p>I just got the new version of the extension, and while I'm still discovering new things, one thing that I'm not a fan of is that my number 1 most triggered command \"Lean 4: Server: Restart Server\" which I have bound to a key command now has an \"are you sure you want to restart\" dialog which shows up every time. I don't see a need for this, the server is not stateful so the worst consequence of restarting is having to wait for it to get back to your current position</p>",
        "id": 398244576,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698138890
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/398244576\">said</a>:</p>\n<blockquote>\n<p>I just got the new version of the extension, and while I'm still discovering new things, one thing that I'm not a fan of is that my number 1 most triggered command \"Lean 4: Server: Restart Server\" which I have bound to a key command now has an \"are you sure you want to restart\" dialog which shows up every time. I don't see a need for this, the server is not stateful so the worst consequence of restarting is having to wait for it to get back to your current position</p>\n</blockquote>\n<p>Hmmm, I think I agree in hindsight and I doubted myself over whether it's a good idea a couple of times, but since nobody commented on it during the testing phase, I figured that it will be alright. I can remove it again if nobody objects that it should stay.</p>",
        "id": 398275051,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698149070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I would agree that there is no need for the dialog but I'm still curious: why are you restarting the server that often, more often than the file workers?</p>",
        "id": 398277716,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1698150051
    },
    {
        "content": "<p>It may just be force of habit, but when there is corrupt state or other weird debugging stuff it's easier to be sure that restarting the server gets me into a known state</p>",
        "id": 398356912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698179719
    },
    {
        "content": "<p>I will use refresh file dependencies when actually leaning normally</p>",
        "id": 398356947,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698179744
    },
    {
        "content": "<p>This morning I tried to get students using the new version of the extension. But one student had VSCode refusing to upgrade the extension. He would briefly see version 0.0.117 but then after a couple of seconds it rolled back to 0.0.113. He uses macOS version: Ventura 13.2.1. Any idea what could be causing this?</p>",
        "id": 398530252,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698254060
    },
    {
        "content": "<p>One possibility is that their VS Code version is old somehow. The extension update bumped the required VS Code version from 1.70.0 (released in July 2022) to 1.75.0 (released in January 2023).</p>",
        "id": 398544661,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698260354
    },
    {
        "content": "<p>Alternatively, they can also try to uninstall the extension, close VS Code, delete all occurrences of <code>leanprover.lean4-0.0.113</code> in the home folder and then restart and reinstall the extension. I'm not sure where VS Code caches extensions on MacOS, but it should be somewhere in the home folder.</p>",
        "id": 398545374,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1698260594
    },
    {
        "content": "<p>I tried closing VSCode and removing the <code>$HOME/.vscode</code>. I will check the VSCode version. The student should come to my office later today to get some help.</p>",
        "id": 398546348,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698261017
    },
    {
        "content": "<p>We managed to fix it. Indeed his VSCode was too old. The crazy thing is <em>why</em> it was too old. He downloaded VSCode from the website so MacOS put VSCode in the download folder. But the download folder seems to be read-only for everyone but Safari. So VSCode was not able to auto-update. We moved VSCode to the Applications folder and there it auto-updated and then the Lean extension auto-updated. User-hostile OSes are really crazy...</p>",
        "id": 398566227,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698271164
    },
    {
        "content": "<p>Some day in the distant future, when lean can run on wasm, maybe the extension could work on <a href=\"https://vscode.dev/\">https://vscode.dev/</a></p>",
        "id": 398619751,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698301520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> how far are your VSCode extension menus from being the official recommended way of installing Lean? I'm asking because some colleagues just asked me how to install Lean. All the documentation I can find still doesn't refer to your menu.</p>",
        "id": 403445983,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700593805
    },
    {
        "content": "<p>A couple of days. I'm working on updating the manual right now.</p>",
        "id": 403453283,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1700596588
    },
    {
        "content": "<p>Great!</p>",
        "id": 403454879,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700597277
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/403453283\">said</a>:</p>\n<blockquote>\n<p>A couple of days. I'm working on updating the manual right now.</p>\n</blockquote>\n<p>You mean it will be possible to install lean+mathlib just within vscode in windows/mac/linux?</p>",
        "id": 403469816,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1700604190
    },
    {
        "content": "<p>It is already possible (at least when nothing goes wrong). We are discussing the documentation side,</p>",
        "id": 403471012,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700604774
    }
]