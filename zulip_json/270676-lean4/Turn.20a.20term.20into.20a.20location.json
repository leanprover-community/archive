[
    {
        "content": "<p>I'm writing a macro and at some point I have a hypothesis (more precisely, a term which I <code>mkIdent</code> into a hypothesis) which I also want to consider as a location.  How can I do this?</p>\n<p>Example: I want a macro which combines the actions of the two lines <code>foo</code> and <code>bar</code> below.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Replace</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">pow_eq_zero</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Parser</span> <span class=\"n\">Tactic</span>\n\n<span class=\"n\">macro</span> <span class=\"s2\">\"foo \"</span> <span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">location</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span> <span class=\"bp\">|</span> <span class=\"n\">change</span> <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">$</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">location</span><span class=\"o\">)</span>\n\n<span class=\"n\">macro</span> <span class=\"s2\">\"bar \"</span> <span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"k\">let</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"n\">h.raw.getId</span><span class=\"bp\">;</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span> <span class=\"bp\">|</span> <span class=\"n\">replace</span> <span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">mkIdent</span> <span class=\"n\">t</span><span class=\"o\">):</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"n\">pow_eq_zero</span> <span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">mkIdent</span> <span class=\"n\">t</span><span class=\"o\">))</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">foo</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"n\">bar</span> <span class=\"n\">h</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 370999718,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1688101827
    },
    {
        "content": "<p>This should work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro</span> <span class=\"s2\">\"foobar \"</span> <span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">hLoc</span> <span class=\"bp\">‚Üê</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">location</span><span class=\"bp\">|</span> <span class=\"n\">at</span> <span class=\"bp\">$</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"o\">{</span><span class=\"n\">foo</span> <span class=\"bp\">$</span><span class=\"n\">hLoc</span><span class=\"bp\">;</span> <span class=\"n\">bar</span> <span class=\"bp\">$</span><span class=\"n\">h</span><span class=\"o\">})</span>\n</code></pre></div>",
        "id": 371003039,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688102953
    },
    {
        "content": "<p>Or more straightforwardly:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro</span> <span class=\"s2\">\"foobar \"</span> <span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"o\">{</span><span class=\"n\">foo</span> <span class=\"n\">at</span> <span class=\"bp\">$</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"bp\">;</span> <span class=\"n\">bar</span> <span class=\"bp\">$</span><span class=\"n\">h</span><span class=\"o\">})</span>\n</code></pre></div>",
        "id": 371003337,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688103049
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 371007709,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1688104232
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> I actually messed up slightly. I should have used <code>:term</code> rather than the anon ctor. I have updated the examples.</p>",
        "id": 371010754,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688105102
    }
]