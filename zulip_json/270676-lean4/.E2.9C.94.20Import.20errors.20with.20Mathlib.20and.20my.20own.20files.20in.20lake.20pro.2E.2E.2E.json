[
    {
        "content": "<p>Hey there, hoping to get the community's feedback on 2 errors I'm encountering importing libs/files in my simple project. Please let me know if there are suggestions on fixes I can make - I'm not able to find relevant info in the docs. Thank you!</p>\n<p>I am trying out Lean to use it as a proof assistant for a custom language project. Right now, I am building simple proofs in lake projects to learn lean4's syntax and the lake package management experience. </p>\n<p>I am on Arm64 (M1 chip) on Lean (version 4.0.0-nightly-2023-08-18, commit 9d05b5f081c2, Release), Lake version 5.0.0-src (Lean version 4.0.0-nightly-2023-08-18).</p>\n<p>1) I am seeing an error that Mathlib isn't imported correctly when invoked in my Commutative.lean file. As far as I can tell, this looks like the standard import syntax. Mathlib seems to build successfully when I run <code>lake build</code> and the build/ directory looks like successful lean projects that import Mathlib I have found on GitHub. </p>\n<p>2) I am seeing an error that Commutative.lean isn't imported correctly when invoked in my Main.lean file. As far as I can tell, this looks like the standard import syntax in successful lean4 projects I've found on GitHub.</p>\n<p>When I run <code>lean Main.lean</code>, I see the following:<br>\n```(base) MacBook-Pro-3:Commutative mcph$ lean Main.lean<br>\nMain.lean:1:0: error: unknown package 'Commutative'<br>\nYou might need to open '/Users/mcph/code/education/lean' as a workspace in your editor<br>\nMain.lean:4:11: error: unknown constant 'CoeFun'<br>\nMain.lean:4:11: error: unknown constant 'sorryAx'<br>\nMain.lean:5:2: error: invalid field notation, type is not of the form (C ...) where C is a constant<br>\n  io<br>\nhas type<br>\n  x<span aria-label=\"cross\" class=\"emoji emoji-271d\" role=\"img\" title=\"cross\">:cross:</span><br>\nMain.lean:5:2: error: unknown constant 'sorryAx'<br>\nMain.lean:4:22: error: unknown constant 'sorryAx'<br>\nMain.lean:5:71: error: expected command</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>\n</code></pre></div>",
        "id": 386698848,
        "sender_full_name": "Maggie Henry",
        "timestamp": 1692740102
    },
    {
        "content": "<p>You haven't opened the <em>root directory of a Lean project</em> using VS Code's \"Open folder\" functionality. Your screenshot indicates that you've opened a folder called \"Lean\" which contains a folder called \"Commutative\", and you should have opened the latter folder directly.</p>",
        "id": 386699750,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1692740542
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> . I should have clarified that I've spent most of my time in Commutative; I opened Lean in response to an error message suggesting I open Commutative's parent directory (I didn't save the language).</p>\n<p>When I open Commutative, I see an error indicating that I've misimported Mathlib files. I've tried different invocations, but am following what I\"m finding in other projects. Do you see something about how the project is configured that would cause this? Thanks a lot!<br>\nUploading Screenshot 2023-08-22 at 5.48.01 PM.png…()<br>\nUploading Screenshot 2023-08-22 at 5.48.07 PM.png…()</p>",
        "id": 386700621,
        "sender_full_name": "Maggie Henry",
        "timestamp": 1692741002
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 386700668,
        "sender_full_name": "Maggie Henry",
        "timestamp": 1692741015
    },
    {
        "content": "<p>Both error messages are saying that <code>Mathlib.Tactic.Simp</code> doesn't exist</p>",
        "id": 386700931,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692741145
    },
    {
        "content": "<p>if you are trying to get the <code>simp</code> tactic, there is no need; it is available by default even with no imports</p>",
        "id": 386701022,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692741207
    },
    {
        "content": "<p>same thing for <code>Mathlib.Tactic.Rewrite</code>: this file doesn't exist, and <code>rw</code> is available by default even without importing mathlib</p>",
        "id": 386701139,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692741264
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>. I see <code>unknown identifier 'simp'</code> and <code>unknown identifier 'rw'</code> without the imports, but I'll go figure out why that is. Have a good one.</p>",
        "id": 386701248,
        "sender_full_name": "Maggie Henry",
        "timestamp": 1692741330
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"643026\">Maggie Henry</span> has marked this topic as resolved.</p>",
        "id": 386701261,
        "sender_full_name": "Notification Bot",
        "timestamp": 1692741335
    },
    {
        "content": "<p>do you have a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 386701310,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692741356
    },
    {
        "content": "<p>I don't think lean should complain about them being unknown <strong>identifiers</strong>. Do any tactics work in that position? Did you forget a <code>by</code>?</p>",
        "id": 386703841,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1692742350
    }
]