[
    {
        "content": "<p>Is it possible to show warnings in the CLI? I am submitting a work to a conference, and in the artifact evaluation (where reviewers will be in the CLI environment), I would like reviewers to run <code>lake build</code> and get a warning if there is a presence of <code>sorry</code>.  Lean 3 does this by default, but I'm not sure if Lean 4 can do the same.</p>",
        "id": 372170276,
        "sender_full_name": "Sorawee Porncharoenwase",
        "timestamp": 1688440681
    },
    {
        "content": "<p>If you want to demonstrate sorry-freedom, there should be an option to turn warnings into errors.</p>",
        "id": 372222039,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1688459455
    },
    {
        "content": "<p>Maybe Jannis's message is ambiguous: this is not wishful thinking, you can tell lake that any warning should be an error. See an example <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/lakefile.lean#L12\">here</a></p>",
        "id": 372223310,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688459778
    },
    {
        "content": "<p>And to answer the initial question: yes, building a file with <code>sorry</code> is supposed to print a warning. If there is no warning, perhaps the file was already built? Turning the warning into an error would indeed prevent it from being hidden like that.</p>",
        "id": 372224321,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1688460016
    },
    {
        "content": "<p>Also, is there any progress on the issue of asking lake to output something only in case of errors?</p>",
        "id": 372224627,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688460077
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  I believe <code>-q</code>/<code>--quiet</code> should get you what you want.</p>",
        "id": 372227483,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688460734
    },
    {
        "content": "<p>Yes, it seems to work, thanks!</p>",
        "id": 372242181,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1688463850
    },
    {
        "content": "<p>Thank you! <code>-DwarningAsError=true</code> works perfectly :) I will check mark this thread as my primary problem is addressed.</p>\n<blockquote>\n<p>building a file with sorry is supposed to print a warning</p>\n</blockquote>\n<p>If I invoke <code>lean</code> directly, then yes, the warning is printed. But I really can't get <code>lake build</code> to produce the warning even when I run <code>lake clean</code> first.</p>\n<p>It should be noted that if the file has another actual error, the the warning will be printed fine, but if the file does not have an error, no warning will be printed.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- This shows the warning from lake clean; lake build</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">unfinished</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">with_sorry</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- This doesn't shows the warning from lake clean; lake build</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">with_sorry</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 372401215,
        "sender_full_name": "Sorawee Porncharoenwase",
        "timestamp": 1688498701
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"360581\">Sorawee Porncharoenwase</span> has marked this topic as resolved.</p>",
        "id": 372401255,
        "sender_full_name": "Notification Bot",
        "timestamp": 1688498713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"360581\">@Sorawee Porncharoenwase</span> This is because Lake does not print the output of a build if a file does not error. To get that, you need to use <code>-v</code>/<code>--verbose</code>.</p>",
        "id": 372403911,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688499667
    },
    {
        "content": "<p>Lake does not parse the output to determine what are errors, what are warnings, and what are random <code>stderr</code> messages of an external executable (e.g., <code>lean</code>).</p>",
        "id": 372404856,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688500033
    }
]