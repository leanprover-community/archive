[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> <a href=\"https://github.com/github-linguist/linguist/pull/6616\">created a PR to Linguist</a> for the Lean 4 grammar so that we can have Lean 4 syntax highlighting on GitHub.<br>\nAccording to the maintainer of Linguist, there are two issues with a separate Lean 4 grammar:</p>\n<ul>\n<li>Lean 4 still often sufficiently looks like Lean 3 through the lens of the TextMate grammar that Linguist has a hard time differentiating the two.</li>\n<li>We (apparently?) do not meet the contribution requirements for new languages.</li>\n</ul>\n<p>One way to resolve both of these issues is to replace the Lean 3 grammar with the Lean 4 one. The downside is that this will subtly break syntax highlighting for Lean 3 projects on GitHub. The alternative is that we invest a lot of time into updating the Lean 4 TextMate grammar so that it captures more Lean 4 specific syntax.</p>\n<p>What do others think?</p>",
        "id": 403540435,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1700640734
    },
    {
        "content": "<p>I'm all for slightly breaking old stuff FWIW.</p>",
        "id": 403540975,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700640993
    },
    {
        "content": "<p>It's not yet clear to me that we are going to be forced to make a decision here; another option might just be that I:</p>\n<ul>\n<li>fix the technical issues</li>\n<li>wait a few months until we do hit the usage threshold</li>\n</ul>",
        "id": 403541285,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700641120
    },
    {
        "content": "<p>I'm also quite happy to wait until sometime else makes it work</p>",
        "id": 403541417,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700641184
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Syntax.20highlighting.20for.20Lean.204.20on.20GitHub/near/403541285\">said</a>:</p>\n<blockquote>\n<p>It's not yet clear to me that we are going to be forced to make a decision here; another option might just be that I:</p>\n<ul>\n<li>fix the technical issues</li>\n<li>wait a few months until we do hit the usage threshold</li>\n</ul>\n</blockquote>\n<p>My understanding is that Linguist's classification needs to be able to distinguish the two languages to provide the correct highlighting. The standard samples you provided in the PR seem to fail their classification test, so even if we provide other samples, I expect that Linguist may still have a hard time distinguishing the two languages in practice?</p>",
        "id": 403541660,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1700641299
    },
    {
        "content": "<p>Given we have an almost perfect heuristic for determining that, I'd be surprised if it's the case</p>",
        "id": 403544030,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700642223
    },
    {
        "content": "<p>Regarding usage requirements, I updated the issue with a better search query that I think will meet their threshold</p>",
        "id": 403544123,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700642263
    },
    {
        "content": "<p>Ah okay, I may just have misunderstood how Linguist works then based on the review comments :-)</p>",
        "id": 403544543,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1700642419
    },
    {
        "content": "<p>It likely doesn't help that the existing lean 3 training data is actually lean 2</p>",
        "id": 403545409,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700642766
    },
    {
        "content": "<p>I imagine one of the problems we have with the contribution requirements is that many of the major repositories have been moved under <code>leanprover-community</code> (and some under <code>leanprover</code>) which likely hurts the distinct <code>:user/:repo</code> combination metric mentioned in <a href=\"https://github.com/github-linguist/linguist/issues/5756\">linguist#5756</a>.</p>",
        "id": 403550649,
        "sender_full_name": "Mac Malone",
        "timestamp": 1700644626
    },
    {
        "content": "<p>I think the issue was just that my original search query was bad, the new one (for <code>import Mathlib</code>, case sensitive) seems much more promising</p>",
        "id": 403563798,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700648978
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span>, do you know what's going on with <a href=\"https://github.com/github-linguist/linguist/pull/6616/files#r1401634263\">https://github.com/github-linguist/linguist/pull/6616/files#r1401634263</a>? Was leaving the language name as <code>source.lean.markdown</code> instead of <code>source.lean4.markdown</code> a deliberate choice? Or are the two literally identical? (i.e., just markdown with <code>-/</code>-detection)</p>",
        "id": 403568632,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700650674
    },
    {
        "content": "<p>IIRC my thought process back then was that they would be identical, though they seem to have diverged slightly since then.</p>",
        "id": 403569307,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1700650918
    },
    {
        "content": "<p>I certainly didn't have Linguist in mind - I believe I thought that it wouldn't matter whether vscode-lean or vscode-lean4 contribute this grammar.</p>",
        "id": 403569614,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1700651012
    },
    {
        "content": "<p>Maybe we should just change the identifier to <code>lean4</code> now, I don't think it makes a difference?</p>",
        "id": 403569745,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1700651065
    },
    {
        "content": "<p>PR at <a href=\"https://github.com/leanprover-community/vscode-lean4/pull/361\">vscode-lean4#361</a>. I'll leave it up for a bit to see if any of the other vscode-lean4 developers object.</p>",
        "id": 403571835,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1700651898
    },
    {
        "content": "<p>I would imagine it will start diverging more once <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> starts shipping better documentation tools, so I think giving it a new name now is fine</p>",
        "id": 403573122,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700652454
    },
    {
        "content": "<p>(the alternative would be to tell linguist to ignore the file and use the lean3 one, or vice-versa)</p>",
        "id": 403573223,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700652488
    },
    {
        "content": "<p>Once <code>#lang</code> becomes a thing, it can become quite easy to tell. But I don't think the doc tools are relevant here, because those will use the compiler to accurately highlight everything</p>",
        "id": 403573571,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1700652645
    },
    {
        "content": "<p>For the sake of GitHub and other dumb editors (or even just low-resource systems where the lean server is deliberately disabled) it's nice to have some basic highlighting</p>",
        "id": 403575047,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700653161
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Syntax.20highlighting.20for.20Lean.204.20on.20GitHub/near/403563798\">said</a>:</p>\n<blockquote>\n<p>I think the issue was just that my original search query was bad, the new one (for <code>import Mathlib</code>, case sensitive) seems much more promising</p>\n</blockquote>\n<p>This has been confirmed, it sounds like we are over the usage threshold after all <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 403579618,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700654966
    },
    {
        "content": "<p>+1 for just having Lean(4) as a single language (even if it makes Lean 3 look slightly odd). I think in a year's time we really won't be looking at lean 3 code often enough for it to be worth the trouble of ensuring github supports both flawlessly.</p>",
        "id": 403635570,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700673625
    },
    {
        "content": "<p>I don't think it is any trouble to support both, the resolution was for me to delete some files</p>",
        "id": 403673087,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700691456
    },
    {
        "content": "<p>The question is whether we want the language stats to distinguish the two languages</p>",
        "id": 403673157,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700691484
    },
    {
        "content": "<p>To be a little more clear, we have three options:</p>\n<ol>\n<li>Have a single language for highlighting, and a single language for github stats</li>\n<li>Have two languages for highlighting, and two languages for github stats</li>\n<li>Have two languages for highlighting, and one language for github stats</li>\n</ol>\n<p>In my opinion 1 is the worst option, and we should only pick it if it turns out to be more work to support (which I think isn't true). The choice between 2 and 3 is partly up to github, but I think we have some power to sway it if we care. The effect would be seeing \"Lean 4\" and \"Lean\" separately in the language stats for a repo rather than \"Lean\"</p>",
        "id": 403674833,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700692409
    },
    {
        "content": "<p>We definitely <em>do not</em> want separate language stats if they would be listed as \"Lean 4\" and \"Lean\". (If it could be \"Lean\" and \"Lean 3\", then fine, whatever...)</p>",
        "id": 403684356,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700698721
    },
    {
        "content": "<p>Yes I never refer to \"lean 4\" when I'm giving talks (and I give a lot of talks). As far as I'm concerned the message should be that we're using lean (and there was this older version once).</p>",
        "id": 403749373,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700731912
    },
    {
        "content": "<p>Option 3 above is now live on github</p>",
        "id": 407805622,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702499796
    },
    {
        "content": "<p>Does Linguist  automatically regularly update the submodule it dervies the grammar from? For example, if keywords are added/removed from vscode-lean4, will the GitHub highlighting update accoridingly? </p>\n<p>/cc <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> / <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span></p>",
        "id": 408069136,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702598775
    },
    {
        "content": "<p>Part of their release process is to update all the submodules</p>",
        "id": 408070779,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702599529
    },
    {
        "content": "<p>Historically it seems they release every three months or so</p>",
        "id": 408070802,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702599541
    },
    {
        "content": "<p>If this question is about lake keywords, one option might be to have a dedicated lake grammar file (though you'd need to prove that there are 200 separate users publishing lake packages to meet the significance threshold for linguist); and of course you'd still be bound to the same release cycle.</p>",
        "id": 408071166,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702599711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> That sounds great! No, the question was not about Lake -- I kind of assumed that would be a more complex endeavour. It was more about the fact the the Lean grammar is currently still in flux, and I wanted to know whether we would have request the GitHub  to update the module or wether we can just update vscode-lean4 and have that eventually trickle down. The fact the it is the later is great news!</p>",
        "id": 408081868,
        "sender_full_name": "Mac Malone",
        "timestamp": 1702604997
    }
]