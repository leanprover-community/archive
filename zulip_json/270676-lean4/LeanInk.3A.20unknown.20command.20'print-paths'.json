[
    {
        "content": "<p>As I have been using <a href=\"https://github.com/leanprover/LeanInk\">leanprover/LeanInk</a> with Alectryon, I just noticed that after bumping to <code>lean4:v4.4.0-rc1</code>, it fails with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">command</span> <span class=\"bp\">'</span><span class=\"n\">print</span><span class=\"bp\">-</span><span class=\"n\">paths'</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">Using</span> <span class=\"n\">lake</span> <span class=\"n\">failed</span><span class=\"bp\">!</span> <span class=\"n\">Make</span> <span class=\"n\">sure</span> <span class=\"n\">that</span> <span class=\"n\">lake</span> <span class=\"n\">is</span> <span class=\"n\">installed</span><span class=\"bp\">!</span>\n</code></pre></div>\n<p>This can be traced back to its <a href=\"https://github.com/leanprover/LeanInk/blob/main/LeanInk/Analysis/LeanContext.lean\"><code>LeanInk/Analysis/LeanContext.lean</code></a> which relies on <code>print-paths</code> to <code>initializeLakeContext</code>. As this command line option is gone since <a href=\"https://github.com/leanprover/lean4/pull/2858\">lean4#2858</a> , <code>leanprover/LeanInk</code> no longer works.</p>\n<p>doc-gen4 survived because it depends on <a href=\"https://github.com/hargoniX/LeanInk/\">https://github.com/hargoniX/LeanInk/</a> which is 30+ commits behind and doesn't have that file. I can't figure out how Alectryon in Lean 4 repo survived, except maybe because it's in nix workflow.</p>",
        "id": 407194330,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702285308
    },
    {
        "content": "<p>I'm a bit surprised that there are so many downstream users of this supposedly internal command for communication between Lake and the language server.<br>\n<code>print-paths &lt;imports of a file&gt;</code> has been replaced by <code>setup-file &lt;path to the file&gt; &lt;imports of the file&gt;</code>.<br>\nFor some duct-tape; if you are not interested in the per-package server options for the file and you somehow can't find the path of the file, you should also be able to pass a bogus path to <code>setup-file</code>.</p>",
        "id": 407196159,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1702285840
    },
    {
        "content": "<p>The rename of the option is known to break <a href=\"#narrow/stream/287929-mathlib4/topic/speedcenter.20on.20nightly-testing/near/405371037\">nix workflow</a>, <a href=\"#narrow/stream/270676-lean4/topic/Deprecation.20without.20explanations/near/406002555\">mathport</a>, and now LeanInk, and barely missed doc-gen4. These are not exactly downstream projects developed by users but projects of the \"inner-circle\" of Lean ecosystem.</p>",
        "id": 407196857,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702286037
    },
    {
        "content": "<p>It seems that I can't fix LeanInk by a simple replace with <code>setup-file</code> because the extra <code>&lt;imports of the file&gt;</code>.</p>",
        "id": 407197074,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702286106
    },
    {
        "content": "<p>you already have the imports, what is new is the path to the file itself</p>",
        "id": 407197144,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702286127
    },
    {
        "content": "<p>I think <a href=\"https://github.com/leanprover/LeanInk/blob/28ff6cef4fb476886eeb96edc4ef518f98f027b7/LeanInk/Analysis/Analysis.lean#L26\">the name of the file is available</a> though if you pass it through</p>",
        "id": 407197206,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702286151
    },
    {
        "content": "<p>Oh</p>",
        "id": 407197217,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702286154
    },
    {
        "content": "<p>Thanks, I'll try fixing in that way</p>",
        "id": 407197311,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702286181
    },
    {
        "content": "<p>not sure if this is a real file though</p>",
        "id": 407197314,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702286182
    },
    {
        "content": "<p>I'm also not sure if I should use <code>setup-file</code> in LeanInk as it might still be considered as an \"internal command for communication between Lake and the language server\". Is there a more idiomatic way?</p>",
        "id": 407197785,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702286353
    },
    {
        "content": "<p>I think the problem is that lake doesn't currently have any non-internal ways to export information like this</p>",
        "id": 407198017,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702286428
    },
    {
        "content": "<p>so the existing projects are making do with what exists</p>",
        "id": 407198062,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702286446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> said that he was working on a new \"workspace\" file which should contain enough path information to replicate this functionality without otherwise calling lake</p>",
        "id": 407198299,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702286531
    },
    {
        "content": "<p>The output of 'print-paths' has also changed so it took a little longer to make it work.  <a href=\"https://github.com/leanprover/LeanInk/pull/55\">leanprover/LeanInk#55</a> .</p>",
        "id": 407236464,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702299892
    },
    {
        "content": "<p>The subtlety is that maybe I should fix the issue without bumping Lean for LeanInk, because it seems that LeanInk can be built in its old toolchain, then use the new toolchain for the target Lean file.</p>",
        "id": 407237394,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702300243
    },
    {
        "content": "<p>There is no way I can pass the tests for LeanInk. I tried the 2 approaches:</p>\n<ol>\n<li>bumping Lean for LeanInk, so LeanInk itself and the target Lean program are both on v4.4.0, but tests in LeanInk are outdated by this leap of Lean toolchain, causing many failures that I don't intend to fix in this PR (or should I?). (this is now at my <code>fix-print-path-bump</code> branch)</li>\n<li>don't bump Lean for LeanInk, so LeanInk itself is on old Lean (on this PR branch), it works fine for a target Lean program on v4.4.0 (locally), but tests in LeanInk are still failing because now the target Lean programs are the tests in LeanInk on the old Lean toolchain which doesn't play with <code>setup-file</code>.</li>\n</ol>",
        "id": 407393396,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702360984
    },
    {
        "content": "<p>I don't know which approach should I pursue, 1 involves a lot of fixes to LeanInk tests (but potentially worth doing), 2 requires the tests to run on a different toolchain and I don't see how that's possible in the same project.</p>",
        "id": 407393741,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702361074
    },
    {
        "content": "<p>I think 1 is the better long term solution</p>",
        "id": 407401363,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702363550
    },
    {
        "content": "<p>Thanks, I'll see what I can do with 1.</p>",
        "id": 407402846,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702364019
    },
    {
        "content": "<p>I think there is no point investing time in 2 if nobody wants to rescue LeanInk. So 1 is really the only way.</p>",
        "id": 407490301,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1702391689
    },
    {
        "content": "<p>1 is done and CI is green.</p>",
        "id": 407499137,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702393889
    },
    {
        "content": "<p>I've marked a few places that Lean has changed a bit, nothing serious.</p>",
        "id": 407499357,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702393954
    },
    {
        "content": "<p>But I'm not sure this PR should be merged or not, as I don't know which projecs are the major users of <code>leanprover/LeanInk</code> as doc-gen4 is using <span class=\"user-mention\" data-user-id=\"395550\">@Henrik BÃ¶ving</span> 's <code>hargoniX/LeanInk</code> anyway.</p>",
        "id": 407499637,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702394041
    },
    {
        "content": "<p>My guess is that nobody uses LeanInk, which is a shame. It should really be rescued.</p>",
        "id": 407520504,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1702399981
    },
    {
        "content": "<p>I guess when the need for something else rises, it could be incorporated into that.</p>",
        "id": 407731053,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702475546
    }
]