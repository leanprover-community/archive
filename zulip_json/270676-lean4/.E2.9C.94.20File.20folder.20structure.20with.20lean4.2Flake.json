[
    {
        "content": "<p>If I have the following</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">my_project</span>\n<span class=\"bp\">├──</span> <span class=\"n\">functions</span>\n<span class=\"bp\">├──</span> <span class=\"n\">algebra</span>\n<span class=\"bp\">│</span>   <span class=\"bp\">└──</span> <span class=\"n\">groups.lean</span>\n<span class=\"bp\">├──</span> <span class=\"n\">structures</span>\n<span class=\"bp\">│</span>   <span class=\"bp\">├──</span> <span class=\"n\">sets.lean</span>\n<span class=\"bp\">│</span>   <span class=\"bp\">├──</span> <span class=\"n\">natural.lean</span>\n<span class=\"bp\">│</span>   <span class=\"bp\">└──</span> <span class=\"n\">integers.lean</span>\n<span class=\"bp\">└──</span> <span class=\"n\">lakefile.lean</span>\n</code></pre></div>\n<ul>\n<li>How do I import <code>groups.lean</code> from <code>integers.lean</code></li>\n<li>What needs to go in <code>lakefile.lean</code> to do this?</li>\n<li>I have no intention for this to be a reusable package (just want to be able to import things around the project). But is there an alternative structure to use?</li>\n</ul>",
        "id": 392099607,
        "sender_full_name": "Ben",
        "timestamp": 1695210334
    },
    {
        "content": "<p>My understanding is that (capitalising your names to match typical style) you need to have a <code>Algebra.lean</code> file at the root that looks like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Algebra.Groups</span>\n</code></pre></div>\n<p>Similarly for <code>Structures.lean</code>. Then you should be able to <code>import Algebra.Groups</code> in any file.</p>",
        "id": 392101303,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1695210988
    },
    {
        "content": "<p>I think the normal style though is to have all of your project files inside an inner <code>MyProject</code> folder, and have a top-level <code>MyProject.lean</code> file.</p>",
        "id": 392101352,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1695211009
    },
    {
        "content": "<p>In which case, you'd have <code>my_project/MyProject.lean</code> with content</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">MyProject.Functions</span>\n<span class=\"kn\">import</span> <span class=\"n\">MyProject.Algebra</span>\n<span class=\"kn\">import</span> <span class=\"n\">MyProject.Structures</span>\n</code></pre></div>\n<p>and e.g. <code>my_project/MyProject/Algebra.lean</code> with content</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">MyProject.Algebra.Groups</span>\n</code></pre></div>",
        "id": 392101480,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1695211064
    },
    {
        "content": "<p>With the recent lean version, this is already the default.</p>",
        "id": 392109438,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695213812
    },
    {
        "content": "<p>The normal style you are describing</p>",
        "id": 392109449,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695213818
    },
    {
        "content": "<p>Okay, trying this again in a new directory (I think there was a problem with my <code>lakefile</code>). So I have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">my_project</span>\n<span class=\"bp\">├──</span> <span class=\"n\">Algebra</span>\n<span class=\"bp\">│</span>   <span class=\"bp\">├──</span> <span class=\"n\">Groups.lean</span>\n<span class=\"bp\">│</span>   <span class=\"bp\">└──</span> <span class=\"n\">Rings.lean</span>\n<span class=\"bp\">├──</span> <span class=\"n\">MyProject.lean</span>\n<span class=\"bp\">└──</span> <span class=\"n\">lakefile.lean</span>\n</code></pre></div>\n<p>In <code>Rings.lean</code> I am trying to import groups with <code>import project_name.Algebra.Groups</code>. However it gives me the error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">object</span> <span class=\"n\">file</span> <span class=\"bp\">'.\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">\\</span><span class=\"n\">project_name</span><span class=\"bp\">\\</span><span class=\"n\">Algebra</span><span class=\"bp\">\\</span><span class=\"n\">Groups.olean'</span> <span class=\"n\">of</span> <span class=\"n\">module</span> <span class=\"n\">project_name.Algebra.Groups</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"n\">exist</span>\n</code></pre></div>\n<p>any ideas ???</p>",
        "id": 392265271,
        "sender_full_name": "Ben",
        "timestamp": 1695282071
    },
    {
        "content": "<p>Try <code>import Algebra.Groups</code></p>",
        "id": 392265542,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695282170
    },
    {
        "content": "<p>That gives.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Algebra'</span>\n<span class=\"n\">You</span> <span class=\"n\">might</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"kn\">open</span> <span class=\"bp\">'...\\</span><span class=\"n\">Documents</span><span class=\"bp\">\\</span><span class=\"n\">Projects</span><span class=\"bp\">\\</span><span class=\"n\">project_name'</span> <span class=\"n\">as</span> <span class=\"n\">a</span> <span class=\"n\">workspace</span> <span class=\"k\">in</span> <span class=\"n\">your</span> <span class=\"n\">editor</span>\n</code></pre></div>\n<p>and I am pretty sure the <code> workspace in your editor</code> isn't the issue. I just have the <code>project_name</code> folder open in VSCode (no other folders)</p>",
        "id": 392265805,
        "sender_full_name": "Ben",
        "timestamp": 1695282285
    },
    {
        "content": "<p>The way I always set things up is to have the directory, the root file name, and the project name all being the same thing. You talk about the  <code>project_name</code> project, the root <code>MyProject</code> file and maths in the directory <code>Algebra</code>. For mathlib all of these are <code>Mathlib</code>.</p>",
        "id": 392267194,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695282879
    },
    {
        "content": "<p>There are ways around this, but your life will be easier if you do it the recommended way: put everything inside <code>MyProject</code>.</p>",
        "id": 392280022,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695287293
    },
    {
        "content": "<p>Remember these imports are global across projects. Using <code>Algebra</code> as a top-level import is just asking for conflicts.</p>",
        "id": 392280119,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695287328
    },
    {
        "content": "<p>Ah interesting, renaming things to use the <code>ProjectName</code> and putting into a single folder  <code>ProjectName</code> alongside the <code>lakefile.lean</code> seems to have fixed imports</p>",
        "id": 392302221,
        "sender_full_name": "Ben",
        "timestamp": 1695295722
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"457144\">Ben</span> has marked this topic as resolved.</p>",
        "id": 392302238,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695295726
    }
]