[
    {
        "content": "<p>This is currently a wild idea. I'd like to hear public opinion before even trying to implement this. The idea is to have a notation for the default type of implicit variables.</p>\n<p>The problem is summarized in this example extracted from Nat lemmas. This declaration</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">lt_of_add_lt_add_left</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>needs the implicit binders to infer the type (technically <code>{k : Nat}</code> would suffice but that's a bit weird). However, other declarations don't need this because of some random constant in the fold:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">lt_add_of_pos_right</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I would like to be able to write something like the following to specify the default type of all implicit variables.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">lt_of_add_lt_add_left</span> <span class=\"o\">{</span><span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>There is no confusion with implicit variable declaration since <code>Nat</code> is already defined. Better yet, but perhaps wishful thinking, adding <code>variable {Nat}</code> at the start of a section or file to handle default types.</p>\n<p>What do you think? I'm sure I haven't thought about all the possible side effects and issue, I'm also open to other notation since I already see confusion from overusing <code>{_}</code>.</p>",
        "id": 374762024,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1689203165
    },
    {
        "content": "<p>Maybe <code>{_ : Nat}</code> would be clearer notation?</p>",
        "id": 374762173,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1689203253
    },
    {
        "content": "<p>you can write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">lt_of_add_lt_add_left</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>to get the type right while still getting the variable by autoImplicit, which seems sufficient to me</p>",
        "id": 374805780,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689225896
    }
]