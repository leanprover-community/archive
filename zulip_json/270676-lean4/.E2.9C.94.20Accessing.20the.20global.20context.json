[
    {
        "content": "<p>Is there a way to access declarations that only exist on the global level? For instance, how could I make the first call to <code>findFoo</code> in the example below succeed?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab</span> <span class=\"n\">Tactic</span> <span class=\"n\">Meta</span>\n\n<span class=\"n\">syntax</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">findFoo</span><span class=\"o\">)</span> <span class=\"s2\">\"findFoo\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n<span class=\"kd\">@[tactic findFoo]</span> <span class=\"kd\">def</span> <span class=\"n\">evalFindFoo</span> <span class=\"o\">:</span> <span class=\"n\">Tactic</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">stx</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"n\">withMainContext</span> <span class=\"k\">do</span>\n    <span class=\"k\">let</span> <span class=\"n\">ctx</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">getLCtx</span>\n    <span class=\"k\">match</span> <span class=\"n\">ctx.findFromUserName</span><span class=\"bp\">?</span> <span class=\"bp\">`</span><span class=\"n\">foo</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">logInfo</span> <span class=\"s2\">\"none\"</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">logInfo</span> <span class=\"s2\">\"some\"</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">findFoo</span> <span class=\"c1\">-- none</span>\n  <span class=\"n\">exact</span> <span class=\"n\">True.intro</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span>\n  <span class=\"n\">findFoo</span> <span class=\"c1\">-- some</span>\n  <span class=\"n\">exact</span> <span class=\"n\">True.intro</span>\n</code></pre></div>",
        "id": 326874891,
        "sender_full_name": "Tomaz Gomes",
        "timestamp": 1675964262
    },
    {
        "content": "<p>You want to use <code>resolveGlobalConstWithInfo</code> or <code>resolveGlobalConstNoOverloadWithInfo</code> or one of the other <code>resolveGlobal</code>s, depending on which data exactly you want to pass it. <a href=\"https://github.com/leanprover/lean4/blob/223f1073d1d3f9e31bb5476190509b203e1cf920/src/Lean/Elab/InfoTree/Main.lean#L248\">Here</a> one of them is defined.</p>",
        "id": 326895889,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1675969829
    },
    {
        "content": "<p>Also terminological note: the \"global context\" is generally called the \"environment\". We only have \"local context\"s.</p>",
        "id": 326896319,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1675969952
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"360938\">Tomaz Gomes Mascarenhas</span> has marked this topic as resolved.</p>",
        "id": 326945504,
        "sender_full_name": "Notification Bot",
        "timestamp": 1675990633
    }
]