[
    {
        "content": "<p>If I write <code>(some ()) = ()</code>, the right hand side seems to be automatically cast to <code>some ()</code>. What causes this? At what stage is it happening?</p>",
        "id": 403877930,
        "sender_full_name": "Francisco Giordano",
        "timestamp": 1700790695
    },
    {
        "content": "<p>This is the \"coercion\" system in action :-) it's sorta complicated, but basically when there's a type error at some term, the elaborator looks for a <code>Coe A B</code> instance from <code>A</code> (the type of the \"wrong\" term) to <code>B</code> (the expected type), and if it finds one, it applies the coercion where the type error occurred.</p>",
        "id": 403879235,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1700791403
    },
    {
        "content": "<p>Elaboration is the process of going from raw lean <code>Syntax</code> to nice, well-formed lean <code>Expr</code>essions. So these coercions are inserted during that process.</p>",
        "id": 403879336,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1700791455
    },
    {
        "content": "<p>w.r.t. the example you gave, there's a coercion <code>Coe A (Option A)</code> that is implemented as <code>some</code></p>",
        "id": 403879469,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1700791559
    },
    {
        "content": "<p>This is the information I was missing, thanks!</p>",
        "id": 403885708,
        "sender_full_name": "Francisco Giordano",
        "timestamp": 1700794609
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"668081\">Francisco Giordano</span> has marked this topic as resolved.</p>",
        "id": 404009941,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700852563
    },
    {
        "content": "<p>Is there a way to inspect the fully elaborated term?</p>",
        "id": 404151139,
        "sender_full_name": "Francisco Giordano",
        "timestamp": 1700942704
    },
    {
        "content": "<p>You can use <code>set_option pp.all true</code> before your statement and maybe <code>#check blah</code> outside your proof</p>",
        "id": 404162731,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700947740
    }
]