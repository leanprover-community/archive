[
    {
        "content": "<p>If I want to rename my lemma <code>xyzzy_foo</code> to <code>xyzzy.bar</code> in all of mathlib, it would be great if this can be done automatically. And maybe I have a list of decls that should be renamed, and I want to do this in batch mode.<br>\nHow close are we to having such code transformation tools? <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I think you've mentioned some thoughts on this several times... (-;</p>",
        "id": 402141771,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700024080
    },
    {
        "content": "<p>that's <a href=\"https://github.com/leanprover/lean4/pull/2462\">lean4#2462</a></p>",
        "id": 402141881,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1700024142
    },
    {
        "content": "<p>Thanks for the pointer! Did you make any progress on issues 1 and 2 in the review comment?</p>",
        "id": 402142578,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700024453
    },
    {
        "content": "<p>Johan, while waiting for the \"correct\" solution would you be interested in a command-line patch?</p>\n<p>I think that the ilean files contain information of where each declaration is located in the code: I used that to surgically replace every <code>theorem</code> to <code>lemma</code>.  I could look into finding all declaration names as well, if you wanted.</p>",
        "id": 402156023,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700030403
    },
    {
        "content": "<p>Hah, if that works, I would certainly be happy to have it!<br>\nI think it's great if we can have renaming PRs where the diff is generated by invoking such a command. Makes it much easier to review the PRs if you know that's how they're created.</p>",
        "id": 402163519,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700033448
    },
    {
        "content": "<p>And it makes it easier to split PRs into the manual and automatic parts.</p>",
        "id": 402163576,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700033466
    },
    {
        "content": "<p>Ok, I'll look into this: it should be easy, since it seems a slight adaptation of what I already had, but I will have to figure out how to deal with name-spacing.</p>",
        "id": 402164726,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700033890
    },
    {
        "content": "<p>(Also, this will certainly not take care of docs/comments: those names would have to be inspected by a different means than what I have in mind.)</p>",
        "id": 402164856,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700033952
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> has marked this topic as resolved.</p>",
        "id": 402164899,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700033969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> has marked this topic as unresolved.</p>",
        "id": 402164911,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700033974
    },
    {
        "content": "<p>Sorry about the misclick!  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 402164924,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700033985
    },
    {
        "content": "<p>Yeah docs/comments is a good point.</p>",
        "id": 402164933,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700033987
    },
    {
        "content": "<p>Johan, do you have a concrete case where you would like this replacement to happen?</p>\n<p>I have a <em>very</em> preliminary version and it would be good to test it and fix some gross mistakes that it contains!</p>\n<p>Right now, I already know that it will do the wrong thing if the declaration is used in dot-notation and if it is called with <code>@</code>.</p>",
        "id": 402336863,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700086290
    },
    {
        "content": "<p>I'm hoping that <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span>'s documentation plans will leave us with comments that are recognized by the LSP</p>",
        "id": 402341760,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700088790
    },
    {
        "content": "<p>I am testing the replacement <code>Real.tan</code> to <code>Real.Tan</code>.</p>\n<p>Except for the namespacing issues, the only other problem in this case is that I use <code>sed</code> to capture patterns and there are lines where there are more than 9 captures...  <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 402342032,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700088943
    },
    {
        "content": "<p>Related: I just opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/8433\">#8433</a> to figure out which declarations were renamed. It's very pedestrian; it only lists all declarations in changed files and computes the diff.</p>",
        "id": 402342658,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1700089253
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> My question was inspired by <a href=\"https://github.com/leanprover-community/mathlib4/pull/8406\">#8406</a>. A tool like this might make it easier to separate the \"renaming\" and the \"golfing\" parts of such PRs.</p>",
        "id": 402399853,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700118327
    },
    {
        "content": "<p>Ok, I'll test the change</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">isAlgebraic_algebraMap</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">IsAlgebraic.algebraMap</span>\n</code></pre></div>\n<p>and see how it performs.</p>",
        "id": 402403660,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700119915
    },
    {
        "content": "<p>You can see the progress here: <a href=\"https://github.com/leanprover-community/mathlib4/pull/8437\">#8437</a>.</p>\n<p>I may regret this, but I have made more than one rename while testing the tool.</p>",
        "id": 402411488,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700122894
    },
    {
        "content": "<p>This was easy and successful.  In hindsight, the only change that had to be manually made for this PR is protecting one of the renamed theorems.</p>",
        "id": 402419314,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700125655
    },
    {
        "content": "<p>I tried to keep the git history clean and the changes only affect 15 lines, in case you want to take a look at how the renaming of the declaration works.</p>",
        "id": 402419533,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700125711
    },
    {
        "content": "<p>Is there a way to use this script?</p>",
        "id": 406584801,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1701968365
    },
    {
        "content": "<p>I thought that Mario had a version of the renaming tool written in Lean that was merged soon after I used the bash-one.  Otherwise, I can share a version of my string-based one, but likely tomorrow, since I'm no longer at my computer for today.</p>",
        "id": 406608211,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1701977531
    },
    {
        "content": "<p>You should be able to right click on an identifier and select \"Rename symbol\" now.</p>",
        "id": 406611847,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1701979110
    }
]