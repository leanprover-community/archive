[
    {
        "content": "<p>If I introduce some <code>f</code> in tactic mode via <code>let f := ...</code>, how can I at some point \"forget\" the definition of f without changing any further statements in context associated with it? it's fairly complicated and gets unfolded by <code>simp</code> even if it's not useful at all</p>",
        "id": 385277407,
        "sender_full_name": "Uni Marx",
        "timestamp": 1692129273
    },
    {
        "content": "<p><code>clear_value f</code></p>",
        "id": 385277557,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692129344
    },
    {
        "content": "<p>thanks! is there an overall list of somewhat commonly used lean4 tactics somewhere in general?</p>",
        "id": 385278358,
        "sender_full_name": "Uni Marx",
        "timestamp": 1692129720
    },
    {
        "content": "<p>At least for basic tactics, I've been looking <a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/Tactics.html\">here</a>, and with some searching you can get to the more refined <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Tactic/ApplyFun.html\">mathlib tactics</a> too. Personally I've just been using the menu on the left hand side to navigate, and making an educated guess on what the tactic im looking for could be called. Not the most efficient, but it has worked for me :)</p>",
        "id": 385294918,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1692138729
    }
]