[
    {
        "content": "<p>Would it be possible to come up with a solution that would allow lake projects to keep their toolchain fixed to match one specific dependency? (i.e. usually <code>mathlib</code>). It has tripped me and others repeatedly up that the required commands are</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">cp</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span> <span class=\"bp\">./</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span>\n</code></pre></div>\n<p>and honestly at least 70% of my lean4 projects just want to have their <code>lean-toolchain</code> matching exactly the one of a specific dependency. Even if it's not <code>mathlib</code>, I'd probably still want the option to keep the toolchain of a project always in sync with the most fragile/largest dependency, be it <code>std</code> or <code>proofwidgets</code> or whatever is the biggest dependency in my project.</p>",
        "id": 373254288,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1688744551
    },
    {
        "content": "<p>I'm happy to try to work out a proposal, but I'd like some encouragement from the relevant people that such a PR/issue would be welcome <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 373256159,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1688744928
    },
    {
        "content": "<p>my personal hesitation is that it is a brittle fix for a much more complicated problem that we haven't even started to address (managing dependency updates). maybe a nice first step would be for lake to have \"update hooks\" that let you execute scripts as part of <code>lake update</code>? that way you can configure your project to track mathlib toolchain without such a feature being a part of lake?</p>",
        "id": 373257709,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1688745238
    },
    {
        "content": "<p>Actually, the newest version of <code>elan</code> now has sime support for this. See <a href=\"https://github.com/leanprover/elan/pull/99\">elan#99</a>. With the new elan, you can set your toolchain to <code> leanprover-community/mathlib4:lean-toolchain</code> and it will automatically use the latest mathlib toolchain.</p>",
        "id": 373321280,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688761216
    },
    {
        "content": "<p>Oh my, is it already time to regret that feature? It should go without saying, but do <em>not</em> put an unpinned Lean version like that in your <code>lean-toolchain</code>. Really the only correct use of that specifier is in combination with <code>lake new/init</code>.</p>",
        "id": 373338452,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1688767774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Yeah, that fact that it was unpinned occurred to me while I was writing that, but I did not listen to my better angels and wrote it anyway. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 373343058,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688769959
    },
    {
        "content": "<p>on second thought, probably it would completely suffice to have the instructions at</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4\">https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4</a></p>\n<p>bundled into a command like <code>lake exe up</code> that comes shipped with mathlib<span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 373409578,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1688803775
    },
    {
        "content": "<p>I would suggest, given how short it is, to just make a  Lake script that does it (e.g., <code>lake run mathlib/update-toolchain</code>).</p>",
        "id": 373552363,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688844573
    }
]