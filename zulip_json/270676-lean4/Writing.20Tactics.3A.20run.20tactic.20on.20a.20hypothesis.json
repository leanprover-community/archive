[
    {
        "content": "<p>Hey all, I need some help writing a tactic that loops through all the hypotheses and runs some tactic on each of them.</p>\n<p>For example, I want to run <code>cases p</code> on every <code>p: Point</code> in my local context. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean.Elab.Tactic</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">Point</span> <span class=\"o\">:=</span> <span class=\"n\">Int</span> <span class=\"bp\">×</span> <span class=\"n\">Int</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"get_coordinates\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"n\">Lean.Elab.Tactic.withMainContext</span> <span class=\"k\">do</span>\n    <span class=\"k\">let</span> <span class=\"n\">ctx</span> <span class=\"bp\">←</span> <span class=\"n\">Lean.MonadLCtx.getLCtx</span>\n    <span class=\"n\">ctx.forM</span> <span class=\"bp\">$</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">decl</span><span class=\"o\">:</span> <span class=\"n\">Lean.LocalDecl</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"k\">let</span> <span class=\"n\">declExpr</span> <span class=\"o\">:=</span> <span class=\"n\">decl.toExpr</span> <span class=\"c1\">-- Find the expression of the declaration.</span>\n      <span class=\"k\">let</span> <span class=\"n\">declType</span> <span class=\"bp\">←</span> <span class=\"n\">Lean.Meta.inferType</span> <span class=\"n\">declExpr</span> <span class=\"c1\">-- Find the type.</span>\n      <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">Lean.Meta.isExprDefEq</span> <span class=\"n\">declType</span> <span class=\"o\">(</span><span class=\"n\">Lean.Expr.const</span> <span class=\"bp\">``</span><span class=\"n\">Point</span> <span class=\"o\">[]))</span> <span class=\"k\">then</span>\n        <span class=\"n\">dbg_trace</span> <span class=\"n\">f</span><span class=\"bp\">!</span><span class=\"s2\">\"! Point\"</span>\n        <span class=\"c1\">-- TODO run `cases decl`</span>\n    <span class=\"n\">return</span>\n</code></pre></div>\n<p>How do I do this? I was looking through the <a href=\"https://github.com/leanprover-community/lean4-metaprogramming-book\">metaprogramming-book</a>, but couldn't find how to run a tactic on a <code>decl</code> that I have.</p>",
        "id": 380127840,
        "sender_full_name": "Anurudh Peduri",
        "timestamp": 1690749057
    },
    {
        "content": "<p>There's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.MVarId.casesRec#doc\">docs#Lean.MVarId.casesRec</a> for doing cases on everything in the local context that satisfies some condition</p>",
        "id": 380132425,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1690750684
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/blob/b9ec36d0897a7946e990d6fd3640cc856d701f5d/src/Lean/Meta/Tactic/Cases.lean#L293\"><code>Lean.MVarId.substEqs</code></a> is an example usage of it.</p>",
        "id": 380132860,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1690750847
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Elab.Tactic.liftMetaTactic#doc\">docs#Lean.Elab.Tactic.liftMetaTactic</a> is useful in place of <code>withMainContext</code> to get the main goal and to be able to replace it with the results of running <code>casesRec</code></p>",
        "id": 380133883,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1690751286
    },
    {
        "content": "<p>Oh wow, thanks <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>! let me try this out.</p>",
        "id": 380137988,
        "sender_full_name": "Anurudh Peduri",
        "timestamp": 1690753323
    },
    {
        "content": "<p>thank you, it worked. :)</p>",
        "id": 380142893,
        "sender_full_name": "Anurudh Peduri",
        "timestamp": 1690755839
    }
]