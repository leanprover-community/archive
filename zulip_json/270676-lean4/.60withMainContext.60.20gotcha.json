[
    {
        "content": "<p>I just ran into this gotcha, which took an hour or so for me to debug, so I thought I'd share in case anyone in the future runs into it as well and searches through zulip!</p>\n<p>The fact to be aware of is that an inner <code>withMainContext</code> takes precedence over an outer <code>goal.withContext</code>. This means that if the main goal becomes assigned (even to other metavariables) and there are no other goals (as recognized by <code>TacticM</code>), any function which calls <code>withMainContext</code> will fail rather silently. For me, this function was <code>getFVarIds</code>, which I thought would elaborate the fvar id's in the current local context, not the context of the main goal. The message simply says \"no goals to be solved\", which seems vague if you're not anticipating this issue.</p>\n<p>So the responsibility here becomes keeping track of which of your \"automatically contextualized\" functions depend internally on local <em>contexts</em> and which depend (indirectly) on the <em>main goal</em>, which can be decoupled in general.</p>",
        "id": 326752523,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1675930589
    },
    {
        "content": "<p>this is one reason to avoid <code>TacticM</code> except for the outermost part of the tactic. Get what you need and then drop to <code>TermElabM</code> or <code>MetaM</code> for most of the work</p>",
        "id": 326754403,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675931265
    }
]