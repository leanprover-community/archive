[
    {
        "content": "<p>I was trying to build a lean file without <code>lake</code>.<br>\nWhat I got:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lean</span> <span class=\"c1\">--deps EmptyProgram.lean</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">user</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly/lib/lean/Init.olean</span>\n</code></pre></div>",
        "id": 329639591,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1677134948
    },
    {
        "content": "<p>What is that .olean file?</p>",
        "id": 329639626,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1677134968
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515610\">Locria Cyber</span> <a href=\"#narrow/stream/270676-lean4/topic/What's.20ilean.20.26.20olean/near/329639626\">said</a>:</p>\n<blockquote>\n<p>What is that .olean file?</p>\n</blockquote>\n<p>it's the object file, basically a machine-readable version of the file (but it's based on the Lean core language and preserves the types, so it's not the same as the C object file that you get later down the compilation pipeline)</p>",
        "id": 329650426,
        "sender_full_name": "Andr√©s Goens",
        "timestamp": 1677139570
    },
    {
        "content": "<p>It's the data loaded by <code>import</code></p>",
        "id": 329650691,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1677139658
    },
    {
        "content": "<p>What's ilean then?</p>",
        "id": 329734293,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1677162820
    },
    {
        "content": "<p>The <code>.ilean</code> file contains information related to jump-to-definition. For every declaration (or command?) it contains the locations where it is used and where it is defined. You can open it in a text editor to get an idea what is in it.</p>",
        "id": 329758820,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1677168510
    }
]