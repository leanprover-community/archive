[
    {
        "content": "<p>When there are partly downloaded files, <code>lake exe cache get!</code> fails, which defeats its purpose:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Sebastien</span><span class=\"bp\">\\</span><span class=\"n\">Desktop</span><span class=\"bp\">\\</span><span class=\"n\">mathlib4_2</span><span class=\"bp\">&gt;</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span><span class=\"bp\">!</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">3757</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">already</span> <span class=\"n\">exists</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">17</span><span class=\"o\">,</span> <span class=\"n\">file</span> <span class=\"n\">exists</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Sebastien</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">ed2f5f00b2156522.ltar.part</span> <span class=\"n\">and</span><span class=\"bp\">/</span><span class=\"n\">or</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Sebastien</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">ed2f5f00b2156522.ltar</span>\n</code></pre></div>\n<p>Should a run of <code>lake exe cache get</code> erase first all <code>.part</code>files? (Maybe bad if one is doing two runs at the same time on different branches). Or adjust some flags to not fail on creation if the file already exists?</p>",
        "id": 391083452,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1694756244
    },
    {
        "content": "<p>I can't replicate, maybe it is windows-only?</p>",
        "id": 391085314,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694757031
    },
    {
        "content": "<p>This might be a bug introduced by the <code>.part</code> PR. If so, my fault!</p>",
        "id": 391085337,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694757042
    },
    {
        "content": "<p>Strictly speaking we never actually create the <code>part</code> file directly, we put that file name in a config and pass it to curl</p>",
        "id": 391085427,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694757089
    },
    {
        "content": "<p>but the error message seems like some file IO in lean is failing</p>",
        "id": 391085461,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694757107
    },
    {
        "content": "<p>aha, that's an error message coming from the <code>IO.rename</code></p>",
        "id": 391085799,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694757260
    },
    {
        "content": "<p>it is saying that the <code>.ltar</code> file to be overwritten already exists</p>",
        "id": 391085839,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694757283
    },
    {
        "content": "<p>By comparison to <a href=\"https://doc.rust-lang.org/std/fs/fn.rename.html\">https://doc.rust-lang.org/std/fs/fn.rename.html</a> it seems like the best fix is to make <code>IO.FS.rename</code> pass the right flag so that it also automatically replaces the existing file on windows for consistency with other OS's</p>",
        "id": 391086391,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694757551
    },
    {
        "content": "<p>(and that is definitely my fault for not thinking about what would happen in that case!)</p>",
        "id": 391086409,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694757568
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/2546\">lean4#2546</a></p>",
        "id": 391087867,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694758188
    },
    {
        "content": "<p>FWIW, If I have trouble with <code>get!</code> after an \"incident\" (eg getting off a train and losing internet connection last week) my next move is usually <code>rm -rf lake-packages</code> and then <code>get!</code> again.</p>",
        "id": 391090223,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694759220
    },
    {
        "content": "<p>Oh but looking at the error I see I should also be nuking <code>.cache</code> :-)</p>",
        "id": 391090417,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694759300
    },
    {
        "content": "<p>I should remark that although a lot of people seem to think that clearing the <code>lake-packages</code> and/or <code>build</code> directory or getting a clean mathlib installation will fix <code>cache</code> problems, you are clearing the wrong place</p>",
        "id": 391090443,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694759310
    },
    {
        "content": "<p><code>.cache</code> is what you should be nuking</p>",
        "id": 391090487,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694759327
    },
    {
        "content": "<p>I'll add it to the list</p>",
        "id": 391090509,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694759342
    },
    {
        "content": "<p>On Windows, on the latest version of mathlib, unpacking of <code>lake exe cache get</code> is blazingly fast (~200ms, which was ~100x faster than before), but the cache also doesn't work: I still have to recompile mathlib afterwards. I expect the files are not actually getting copied.</p>\n<p>Note: I first got a bunch of errors of the following form, when having VSCode open. That is not a problem, but might have caused the other behavior.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Floris</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">e41550aac102cd35.ltar</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">process</span> <span class=\"n\">cannot</span> <span class=\"n\">access</span> <span class=\"n\">the</span> <span class=\"n\">file</span> <span class=\"n\">because</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">being</span> <span class=\"n\">used</span> <span class=\"kd\">by</span> <span class=\"n\">another</span> <span class=\"n\">process.</span> <span class=\"o\">(</span><span class=\"n\">os</span> <span class=\"n\">error</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 391566616,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1694981372
    },
    {
        "content": "<p>I also got the error in the first message of the thread, and cleared my <code>.cache</code> directory to fix it.</p>",
        "id": 391567578,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1694981959
    },
    {
        "content": "<p>if you get those errors, does it help to re-run the command?</p>",
        "id": 391569214,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694982966
    },
    {
        "content": "<p>sorry for my late response. Re-running does not solve it: some files (presumably the ones that failed to be accessed before) will then not have the correct cache, and opening a Lean file will cause Lean to rebuild some files from Mathlib.</p>",
        "id": 392315020,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1695300629
    },
    {
        "content": "<p>the error at the top of the thread will be fixed when <a href=\"https://github.com/leanprover/lean4/pull/2546\">lean4#2546</a> percolates down to mathlib</p>",
        "id": 392315416,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695300766
    },
    {
        "content": "<p>I ran into this again just now. I had VSCode open at the start and got the error messages. After running <code>lc</code> (short for <code>lake exe cache get</code>) a second time - this time after closing VSCode - it would still rebuild mathlib</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Floris</span><span class=\"bp\">@</span><span class=\"n\">Dell</span><span class=\"bp\">-</span><span class=\"n\">E</span> <span class=\"n\">MINGW64</span> <span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"o\">((</span><span class=\"mi\">9</span><span class=\"n\">ebe3593a...</span><span class=\"o\">))</span>\n<span class=\"bp\">$</span> <span class=\"n\">lc</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">std</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">80089</span><span class=\"n\">ff4cd1808ad1506a62dac557517d9b875ff'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">proofwidgets</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">44</span><span class=\"n\">e6673a20fc0449d003983d1e1f472df40f7107'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"n\">Fetching</span> <span class=\"n\">proofwidgets</span> <span class=\"n\">cloud</span> <span class=\"n\">release</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache.exe</span>\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Floris</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">d77883098349e9eb.ltar</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">process</span> <span class=\"n\">cannot</span> <span class=\"n\">access</span> <span class=\"n\">the</span> <span class=\"n\">file</span> <span class=\"n\">because</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">being</span> <span class=\"n\">used</span> <span class=\"kd\">by</span> <span class=\"n\">another</span> <span class=\"n\">process.</span> <span class=\"o\">(</span><span class=\"n\">os</span> <span class=\"n\">error</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Floris</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"mi\">8</span><span class=\"n\">dc5d51a6e575ab5.ltar</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">process</span> <span class=\"n\">cannot</span> <span class=\"n\">access</span> <span class=\"n\">the</span> <span class=\"n\">file</span> <span class=\"n\">because</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">being</span> <span class=\"n\">used</span> <span class=\"kd\">by</span> <span class=\"n\">another</span> <span class=\"n\">process.</span> <span class=\"o\">(</span><span class=\"n\">os</span> <span class=\"n\">error</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Floris</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"mi\">5379</span><span class=\"n\">c5f98d59e3ce.ltar</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">process</span> <span class=\"n\">cannot</span> <span class=\"n\">access</span> <span class=\"n\">the</span> <span class=\"n\">file</span> <span class=\"n\">because</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">being</span> <span class=\"n\">used</span> <span class=\"kd\">by</span> <span class=\"n\">another</span> <span class=\"n\">process.</span> <span class=\"o\">(</span><span class=\"n\">os</span> <span class=\"n\">error</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"bp\">...</span> <span class=\"n\">many</span> <span class=\"n\">of</span> <span class=\"n\">these</span> <span class=\"n\">lines</span> <span class=\"n\">omitted</span> <span class=\"bp\">...</span><span class=\"o\">]</span>\n<span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Floris</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">dcb8d7b8acb67db2.ltar</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">process</span> <span class=\"n\">cannot</span> <span class=\"n\">access</span> <span class=\"n\">the</span> <span class=\"n\">file</span> <span class=\"n\">because</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">being</span> <span class=\"n\">used</span> <span class=\"kd\">by</span> <span class=\"n\">another</span> <span class=\"n\">process.</span> <span class=\"o\">(</span><span class=\"n\">os</span> <span class=\"n\">error</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n<span class=\"n\">No</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">download</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3765</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n\n\n<span class=\"n\">Floris</span><span class=\"bp\">@</span><span class=\"n\">Dell</span><span class=\"bp\">-</span><span class=\"n\">E</span> <span class=\"n\">MINGW64</span> <span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"o\">((</span><span class=\"mi\">9</span><span class=\"n\">ebe3593a...</span><span class=\"o\">))</span>\n<span class=\"bp\">$</span> <span class=\"n\">lc</span>\n<span class=\"n\">No</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">download</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3765</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">29361</span> <span class=\"n\">ms</span>\n\n<span class=\"n\">Floris</span><span class=\"bp\">@</span><span class=\"n\">Dell</span><span class=\"bp\">-</span><span class=\"n\">E</span> <span class=\"n\">MINGW64</span> <span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"o\">((</span><span class=\"mi\">9</span><span class=\"n\">ebe3593a...</span><span class=\"o\">))</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span><span class=\"bp\">!</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">3765</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">already</span> <span class=\"n\">exists</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">17</span><span class=\"o\">,</span> <span class=\"n\">file</span> <span class=\"n\">exists</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Floris</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">d7e6fffb792190df.ltar.part</span> <span class=\"n\">and</span><span class=\"bp\">/</span><span class=\"n\">or</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Floris</span><span class=\"bp\">\\.</span><span class=\"n\">cache</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\</span><span class=\"n\">d7e6fffb792190df.ltar</span>\n\n<span class=\"n\">Floris</span><span class=\"bp\">@</span><span class=\"n\">Dell</span><span class=\"bp\">-</span><span class=\"n\">E</span> <span class=\"n\">MINGW64</span> <span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"o\">((</span><span class=\"mi\">9</span><span class=\"n\">ebe3593a...</span><span class=\"o\">))</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"o\">[</span><span class=\"mi\">264</span><span class=\"bp\">/</span><span class=\"mi\">3763</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Init.Data.Prod</span>\n<span class=\"o\">[</span><span class=\"mi\">290</span><span class=\"bp\">/</span><span class=\"mi\">3763</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.Rat.Init</span>\n<span class=\"o\">[</span><span class=\"mi\">301</span><span class=\"bp\">/</span><span class=\"mi\">3763</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.WLOG</span>\n<span class=\"o\">[</span><span class=\"mi\">317</span><span class=\"bp\">/</span><span class=\"mi\">3763</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Util.Qq</span>\n<span class=\"o\">[</span><span class=\"mi\">319</span><span class=\"bp\">/</span><span class=\"mi\">3763</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Says</span>\n<span class=\"o\">[</span><span class=\"mi\">320</span><span class=\"bp\">/</span><span class=\"mi\">3763</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.MLList.Dedup</span>\n<span class=\"o\">[</span><span class=\"mi\">322</span><span class=\"bp\">/</span><span class=\"mi\">3763</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Lean.Name</span>\n<span class=\"o\">[</span><span class=\"mi\">339</span><span class=\"bp\">/</span><span class=\"mi\">3763</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.TypeMax</span>\n<span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span> <span class=\"c1\">-- this continues, it is recompiling mathlib</span>\n</code></pre></div>",
        "id": 392315429,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1695300774
    },
    {
        "content": "<p>I have this issue too.</p>",
        "id": 392315450,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695300781
    },
    {
        "content": "<p>I am not running MINGW, but lake update worked for a project with a more recent toolchain. I ran lake update, copied the lean-toolchain, cleared ~/.cache, ran <code>lake exe cache get!</code>. It worked for a project properly yesterday. Today it fails.</p>",
        "id": 392315716,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695300876
    },
    {
        "content": "<p>the cache claimed to work successfully in both instances.</p>",
        "id": 392315811,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695300916
    },
    {
        "content": "<p>note that cache is currently broken on master, <a href=\"https://github.com/leanprover-community/mathlib4/pull/7291\">#7291</a> is a fix</p>",
        "id": 392315881,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695300939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> we need a better way to keep track of a todo list for pending changes that must be done to mathlib before the next lean bump</p>",
        "id": 392316175,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695301035
    },
    {
        "content": "<p>something like a trello board?</p>",
        "id": 392316276,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695301074
    },
    {
        "content": "<p>(I'm on mathlib from 4 days ago)</p>",
        "id": 392316293,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1695301082
    },
    {
        "content": "<p>is it using 4.1.0-rc1?</p>",
        "id": 392316365,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695301096
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20exe.20cache.20get!.20failure/near/392316365\">said</a>:</p>\n<blockquote>\n<p>is it using 4.1.0-rc1?</p>\n</blockquote>\n<p>yes in my case.</p>",
        "id": 392316482,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695301145
    },
    {
        "content": "<p>In my case also, yes</p>",
        "id": 392316776,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1695301236
    },
    {
        "content": "<p>if you are having problems with 4.1.0-rc1, sit tight until <a href=\"https://github.com/leanprover-community/mathlib4/pull/7291\">#7291</a> is merged</p>",
        "id": 392317519,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695301486
    },
    {
        "content": "<p>I have to xD . Powershell 7 is crawling to a standstill with nearly 1100 files left to be built.</p>",
        "id": 392317792,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695301582
    },
    {
        "content": "<p>Is there are a lake command to  revert an update to the previous state (including bringing back the old cache copy in the case of math)?</p>",
        "id": 392318077,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695301694
    },
    {
        "content": "<p>lake doesn't do anything with the cache</p>",
        "id": 392319274,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695302140
    },
    {
        "content": "<p>to undo an update you check out the old version and then <code>lake exe cache get</code></p>",
        "id": 392319371,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695302169
    },
    {
        "content": "<p>Hmm... it would be cool if we could snapshot a project with lake and restore it, build files and everything. OTOH, it might be a big ask, given mathlib handles cache.</p>",
        "id": 392319611,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695302256
    },
    {
        "content": "<p>this is literally what <code>lake exe cache</code> does</p>",
        "id": 392320478,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695302544
    },
    {
        "content": "<p>work to incorporate cache into lake is ongoing and tricky due to the cloud storage requirements</p>",
        "id": 392320571,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695302577
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20exe.20cache.20get!.20failure/near/392320478\">said</a>:</p>\n<blockquote>\n<p>this is literally what <code>lake exe cache</code> does</p>\n</blockquote>\n<p>doesn't lake just store the object files? I am thinking of a full snapshot of the project directory. Config, source, build, and everything. Like a mini backup tool.</p>\n<p>EDIT: To elaborate a bit, here's the usage I have in mind. At a clean working state, I create a checkpoint named, for e.g. Charlie by typing <code>lake checkpoint charlie</code>. Then if I need to return to this state, I type <code>lake revert charlie</code> that restores everything as it was to <code>charlie</code>, calling cache as needed, redownloading/restoring old mathlib4 versions to match the old lean-toolchain, etc, etc</p>",
        "id": 392320707,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695302624
    },
    {
        "content": "<p>I use <code>git worktree</code> to have multiple work trees of mathlib. It makes it very easy to switch between projects. I think that is basically doing what you want.</p>",
        "id": 392320920,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1695302673
    },
    {
        "content": "<p>Okay I'll check it out.</p>",
        "id": 392320992,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695302698
    },
    {
        "content": "<p>(each mathlib project has its own cache and commit)</p>",
        "id": 392321028,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1695302707
    },
    {
        "content": "<p>they share the git history</p>",
        "id": 392321094,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1695302726
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> does <code>lake clean</code> fix things?</p>",
        "id": 392516012,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695388605
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20exe.20cache.20get!.20failure/near/392516012\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> does <code>lake clean</code> fix things?</p>\n</blockquote>\n<p><del>The problem has something to do with the way hashes are computed</del> Cache is broken somehow. I don't see how lake clean will fix it.</p>",
        "id": 392516816,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1695388894
    },
    {
        "content": "<p>Cache is no longer broken on master, but previously <code>lake clean</code> fixed stuff by deleting <code>.hash</code> files which weren't updated by <code>lake exe cache get</code></p>",
        "id": 392537147,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1695394479
    }
]