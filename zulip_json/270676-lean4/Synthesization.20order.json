[
    {
        "content": "<p>What is wrong with this? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">P1</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"mi\">37</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">P2</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"mi\">37</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span><span class=\"o\">)</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P2</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">P1</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"n\">h.p</span><span class=\"o\">⟩</span>\n\n<span class=\"c\">/-</span>\n<span class=\"cm\">cannot find synthesization order for instance foo with type</span>\n<span class=\"cm\">  ∀ (m n : ℕ) [h : P2 m n], P1 n</span>\n<span class=\"cm\">all remaining arguments have metavariables:</span>\n<span class=\"cm\">  P2 ?m n</span>\n<span class=\"cm\">  -/</span>\n</code></pre></div>\n<p><code>foo</code> works fine as a <code>theorem</code>, but can't be an instance apparently. What is the reason typeclass search can't find something like that?</p>",
        "id": 404037893,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1700873597
    },
    {
        "content": "<p>I think it would work if <code>m</code> were an <code>out_param</code> on <code>P2</code>. The problem is that you need to figure out a value of <code>m</code> from <code>n</code> somehow in the <code>foo</code> instance, and <code>P2</code> does not determine <code>m</code> from <code>n</code>.</p>",
        "id": 404044077,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700877435
    }
]