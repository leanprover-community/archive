[
    {
        "content": "<p>I noticed the executables produced by lean are pretty big (~60MB) even for simple programs if I use any of std4. They contain lots of symbols/functions that I wouldn't have thought my programs are using. Is there any way to ask the compiler to produce smaller binaries?</p>",
        "id": 403669696,
        "sender_full_name": "Aiken Cairncross",
        "timestamp": 1700689610
    },
    {
        "content": "<p>You can reduce binary size substantially with <code>strip</code> but not to a really satisfying degree</p>",
        "id": 403681072,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1700696309
    },
    {
        "content": "<p>One issue seems to be that we link in a large part of the lean compiler statically into std4? At least according to the output of <code>nm</code> on a binary with symbols. I think that should be avoidable</p>",
        "id": 403681722,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1700696826
    },
    {
        "content": "<p>Yeah, <code>strip</code> brings it down from ~60MB to ~50MB, so significant but not drastic</p>",
        "id": 403682195,
        "sender_full_name": "Aiken Cairncross",
        "timestamp": 1700697168
    },
    {
        "content": "<p>My understanding is that the new module system (see the <a href=\"https://lean-fro.org/about/roadmap/#11-module-system\">roadmap</a>) may help with this.</p>\n<p>The fundamental problem at the moment is that you use definitions or lemmas from Std that do not require <code>import Lean</code> (or importing any files from Lean), but they <em>use tactics</em> in their proofs which require an <code>import Lean.X.Y.Z</code>.</p>\n<p>Today, we have no way of saying \"this import is only going to be used while running a tactic at compile time\", and hence have no way of knowing that those symbols don't need to be in the binary.</p>\n<p>However this is definitely not my expertise, so <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> may be able to give a better answer!</p>",
        "id": 403685409,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700699594
    }
]