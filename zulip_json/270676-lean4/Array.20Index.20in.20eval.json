[
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"a\"</span><span class=\"o\">,</span> <span class=\"s2\">\"b\"</span><span class=\"o\">,</span> <span class=\"s2\">\"c\"</span><span class=\"o\">]</span>\n<span class=\"k\">#eval</span> <span class=\"n\">test</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"c1\">-- works</span>\n<span class=\"k\">#eval</span> <span class=\"n\">test</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span> <span class=\"c1\">-- crashes my LSP</span>\n</code></pre></div>\n<p>I would expect Lean to refuse the second line based on the fact that it cannot proof <code>3</code> is within bounds. If i were to use this syntax in a function it also does this precise behaviour. It also does not crash if I use ! or ? array access syntax like so:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"n\">test</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>What is special about <code>#eval</code> here? shouldn't it elaborate the term in the same way it would be in the position of a definition body.</p>",
        "id": 342481413,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1679035445
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/1697\">lean4#1697</a></p>",
        "id": 342483688,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1679036649
    }
]