[
    {
        "content": "<p>Hello! I am struggling a bit with using <code>decreasing_by</code> in an inductive definition. What I'm actually using this for is a bit long to write out, so let me illustrate my problem in a simpler example. If I try to do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">is_big</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">false</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">true</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">∃</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"bp\">&lt;</span><span class=\"n\">n</span> <span class=\"bp\">∧</span> <span class=\"n\">is_big</span> <span class=\"n\">i</span>\n  <span class=\"n\">termination_by</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">n</span>\n  <span class=\"n\">decreasing_by</span>\n    <span class=\"n\">simp_wf</span>\n</code></pre></div>\n<p>I get a few goals, but the condition <code>i&lt;n</code> is not in the hypotheses (so the goals are unprovable). How can I get <code>i&lt;n</code> in the hypotheses available after <code>decreasing_by</code>?</p>\n<p>Also, is <code>match</code> what I want to use here?</p>",
        "id": 347722025,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1680891622
    },
    {
        "content": "<p>you should be able to use <code>\\exists h : i &lt; n, is_big i</code> instead of <code>i&lt;n ∧ is_big i</code></p>",
        "id": 347727203,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1680893683
    },
    {
        "content": "<p>Yes, wonderful. Thank you, that works!</p>",
        "id": 347730407,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1680894967
    }
]