[
    {
        "content": "<p>I want to define an inductive relationship on an indexed family. But I get an <code>inductive datatype parameter mismatch</code> . I feel like there is a trick here, that I once knew but have since forgotten <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span>  What's the best way to define this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">InstantVectorType</span> <span class=\"bp\">|</span> <span class=\"n\">scalar</span> <span class=\"bp\">|</span> <span class=\"n\">vector</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">InstantVector</span> <span class=\"o\">:</span> <span class=\"n\">InstantVectorType</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n  <span class=\"bp\">|</span> <span class=\"n\">selector</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">vector</span>\n  <span class=\"bp\">|</span> <span class=\"n\">sub_vector</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">vector</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">vector</span>\n  <span class=\"bp\">|</span> <span class=\"n\">add_scalar_left</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">scalar</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">vector</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">vector</span>\n  <span class=\"bp\">|</span> <span class=\"n\">time</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">scalar</span>\n\n<span class=\"sd\">/-- Subterm is reflexive -/</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">Subterm</span> <span class=\"o\">{</span><span class=\"n\">t</span> <span class=\"n\">t'</span> <span class=\"o\">:</span> <span class=\"n\">InstantVectorType</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">InstantVector</span> <span class=\"n\">t'</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">time</span> <span class=\"o\">:</span> <span class=\"n\">Subterm</span> <span class=\"bp\">.</span><span class=\"n\">time</span> <span class=\"bp\">.</span><span class=\"n\">time</span> <span class=\"c1\">-- Works in the mwe, but in my code I get a similar error as below for this constructor</span>\n  <span class=\"bp\">|</span> <span class=\"n\">sub_vector_left</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">InstantVector</span> <span class=\"n\">vector</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Subterm</span> <span class=\"n\">a</span> <span class=\"n\">v</span>  <span class=\"bp\">→</span> <span class=\"n\">Subterm</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">sub_vector</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">v</span>  <span class=\"c1\">-- error: inductive datatype parameter mismatch \"vector\" expected \"t\"</span>\n<span class=\"c1\">-- ...</span>\n</code></pre></div>",
        "id": 357552818,
        "sender_full_name": "Björn Fischer",
        "timestamp": 1683804597
    },
    {
        "content": "<p>Try to replace <code>vector</code> with <code>t</code> in <code>sub_vector_left</code>. Otherwise you get <code>a : InstantVector vector</code> when it should be <code>InstantVector t</code> according to the type signature of <code>Subterm</code>. If you don't want to fix <code>t</code> and <code>t'</code>, you need to make them <del>parameters</del> indices as well:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Subterm</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">t</span> <span class=\"n\">t'</span> <span class=\"o\">:</span> <span class=\"n\">InstantVectorType</span><span class=\"o\">}</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">InstantVector</span> <span class=\"n\">t</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">InstantVector</span> <span class=\"n\">t'</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span>\n</code></pre></div>",
        "id": 357554264,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1683804945
    },
    {
        "content": "<p>Making <code>t</code> and <code>t'</code> indices solved the problem entirely. Makes total sense. Thanks :)</p>",
        "id": 357565660,
        "sender_full_name": "Björn Fischer",
        "timestamp": 1683807400
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198384\">Björn Fischer</span> has marked this topic as resolved.</p>",
        "id": 357565671,
        "sender_full_name": "Notification Bot",
        "timestamp": 1683807402
    }
]