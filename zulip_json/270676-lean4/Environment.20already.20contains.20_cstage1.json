[
    {
        "content": "<p>Does anyone have a suggestion for how to start diagnosing:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Util.WhatsNew</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">environment</span> <span class=\"n\">already</span> <span class=\"n\">contains</span> <span class=\"bp\">'</span><span class=\"n\">Mathlib.WhatsNew.whatsNew._cstage1'</span> <span class=\"k\">from</span> <span class=\"n\">Mathlib.Util.Whatsnew</span>\n</code></pre></div>",
        "id": 343917645,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679564436
    },
    {
        "content": "<p>Is this a macOS FS case insensitivity issue?</p>",
        "id": 343917899,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1679564513
    },
    {
        "content": "<p>That's it!</p>",
        "id": 343918163,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679564580
    },
    {
        "content": "<p>We should probably take a look at how other languages solve this, if at all</p>",
        "id": 343918484,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1679564678
    },
    {
        "content": "<p>In Haskell a module starts with <code>module A.B.C where</code> so, in a sense, the file name doesn't even matter--what matters is that the declared module name matches the imported module name.</p>",
        "id": 343938758,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679568878
    },
    {
        "content": "<p>So, that's not very helpful for us</p>",
        "id": 343938784,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679568883
    },
    {
        "content": "<p>In the absence of a explicitly declared module name in the file, I guess the only sensible behavior is to treat the filesystem as case-sensitive, by asking the filesystem for the actual path and checking the case is correct (I assume this is possible somehow)</p>",
        "id": 343944495,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679570241
    },
    {
        "content": "<p>Agreed on the \"somehow\" :)</p>",
        "id": 343944705,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1679570278
    },
    {
        "content": "<p>In the worst case, we'll have to traverse the containing directory and check if any filename literally matches the given one</p>",
        "id": 343947627,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1679571025
    },
    {
        "content": "<p>I hope that a case-insensitive filesystem does not allow two files in the same directory whose names differ only in case. Or am I misunderstanding?</p>",
        "id": 343950976,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679571968
    },
    {
        "content": "<p>It definitely shouldn't. If you create such a directory on a case-sensitive filesystem, copying it to a case-insensitive one should fail (or leave you with just one of the files).</p>",
        "id": 343951772,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1679572126
    },
    {
        "content": "<p>In any case I agree the correct implementation of this policy is likely to be tricky and something to avoid reinventing if possible</p>",
        "id": 343951813,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679572138
    },
    {
        "content": "<p>Apparently the Mac file system (APFS) also has the same behavior regarding Unicode normalization--it is normalization-insensitive, but preserving.</p>",
        "id": 345048355,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679988501
    },
    {
        "content": "<p>In mathlib we could just stick to ASCII characters in file names, but in general it seems reasonable to use other characters and then the correct behavior is maybe not as obvious as in the case of, well, case</p>",
        "id": 345048920,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679988702
    }
]