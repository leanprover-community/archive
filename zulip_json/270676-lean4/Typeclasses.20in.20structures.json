[
    {
        "content": "<p>Suppose I want to include a type with a typeclass in a structure like this, and then later use that typeclass</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Field.Basic</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">FooBar</span> <span class=\"n\">where</span>\n  <span class=\"n\">MyType</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n\n  <span class=\"n\">MyFirstTypeFintype</span> <span class=\"o\">:</span> <span class=\"n\">Field</span> <span class=\"n\">MyFirstType</span>\n\n  <span class=\"n\">val1</span> <span class=\"o\">:</span> <span class=\"n\">MyType</span>\n  <span class=\"n\">val2</span> <span class=\"o\">:</span> <span class=\"n\">MyType</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">FooBar.baz</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">FooBar</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n    <span class=\"n\">x.val1</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">x.val2</span> <span class=\"c1\">-- failed to synthesize HMul</span>\n</code></pre></div>\n<p>Is there a way to let the function know to use the typeclass from the struct without passing it in to the function?</p>",
        "id": 404171358,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1700952954
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">Foo</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">default</span> <span class=\"o\">:</span> <span class=\"n\">a</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Box</span> <span class=\"n\">where</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"n\">a</span><span class=\"o\">]</span>\n\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"kd\">instance</span><span class=\"o\">]</span> <span class=\"n\">Box.inst</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">func</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Box</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b.a</span> <span class=\"o\">:=</span> <span class=\"n\">Foo.default</span>\n</code></pre></div>",
        "id": 404171514,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1700953115
    },
    {
        "content": "<p>The <code>[]</code> in the structure declaration makes it such that the argument to the constructor of <code>Box</code> is figured out by the typeclass system, the instance attribute makes the type class search aware of it.</p>",
        "id": 404171547,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1700953155
    },
    {
        "content": "<p>I had tried the square brackets and got excited when it wasn't a syntax error, but I was confused when that alone didn't work. Thanks <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>!</p>",
        "id": 404171742,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1700953275
    },
    {
        "content": "<p>Hmm, I'm wondering, is there a good reason that the brackets don't imply the instance attribute automatically?</p>",
        "id": 404171966,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1700953386
    },
    {
        "content": "<p>If there isn't this just seems like a little UX quirk that we might want to stop happening?</p>",
        "id": 404171994,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1700953412
    }
]