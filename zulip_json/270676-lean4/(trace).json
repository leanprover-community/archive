[
    {
        "content": "<p>When I use a custom trace class, all I see is <code>(trace)</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Test.Basic.lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">initialize</span> <span class=\"n\">Lean.registerTraceClass</span> <span class=\"bp\">`</span><span class=\"n\">foo</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"foo\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"n\">trace</span><span class=\"o\">[</span><span class=\"n\">foo</span><span class=\"o\">]</span> <span class=\"s2\">\"message\"</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Main.lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Test.Basic</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">trace.foo</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">foo</span> <span class=\"c1\">-- shows \"(trace)\"</span>\n</code></pre></div>\n<p>Other examples I've found seem to do nothing different than what I am doing here. What's wrong with my example?</p>",
        "id": 405522394,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1701513613
    },
    {
        "content": "<p>What happens if you put the initialize in a separate file?</p>",
        "id": 405534466,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1701522590
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"346070\">Tomas Skrivan</span> <a href=\"#narrow/stream/270676-lean4/topic/.28trace.29/near/405534466\">said</a>:</p>\n<blockquote>\n<p>What happens if you put the initialize in a separate file?</p>\n</blockquote>\n<p>Same result.</p>",
        "id": 405537730,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1701525738
    },
    {
        "content": "<p>Interestingly, if I <code>lake build</code> it shows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Test.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Test.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Main</span>\n<span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"o\">[</span><span class=\"n\">foo</span><span class=\"o\">]</span> <span class=\"n\">message</span>\n<span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Main</span>\n<span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">test</span>\n</code></pre></div>",
        "id": 405537883,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1701525871
    },
    {
        "content": "<p>this is expected (?). The info hover shows <code>(trace)</code> but the actual trace message is visible in the infoview as another widget-like thing</p>",
        "id": 405560369,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701545346
    },
    {
        "content": "<p>this happens for all trace messages</p>",
        "id": 405560388,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701545363
    },
    {
        "content": "<p>This happens because many traces are huge in practice and you don't want to print them out. That said, the system could print a prefix up to some fixed limit.</p>",
        "id": 405567667,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1701551994
    },
    {
        "content": "<p>why does it even show <code>(trace)</code>? I don't see the point of an info hover that just says <code>(trace) (trace) (trace)</code></p>",
        "id": 405568450,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701552782
    },
    {
        "content": "<p>The output is the same as what you see in the terminal. Should it just not report a message at all?</p>",
        "id": 405569390,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1701553694
    },
    {
        "content": "<p>I don't really understand the mechanism by which the stdout is different from the info hover</p>",
        "id": 405570786,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701555001
    },
    {
        "content": "<p>I only ever see <code>(trace)</code> in hovers</p>",
        "id": 405570839,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1701555016
    },
    {
        "content": "<p>You're right, it is different on the CLI. I spoke too early. The hover is the standard LSP message reported by the server, whereas the interactive trace is an interactive version of the same message. Perhaps they should be more aligned.</p>",
        "id": 405578048,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1701561737
    },
    {
        "content": "<p>I’d love a truncated-after-too-many-characters trace message (ending in <code>…</code>) in hover instead of <code>(trace)</code>. Lots of times, especially when debugging fresh code, traces can be small! :)</p>",
        "id": 405581265,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1701563876
    }
]