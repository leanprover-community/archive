[
    {
        "content": "<p>hello!<br>\nI have problems working with ↑q . What do I have to change, so that I don't get errors?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">LeanCourse.Common</span>\n<span class=\"kn\">import</span> <span class=\"n\">LeanCourse.MIL.C03_Logic.solutions.Solutions_S06_Sequences_and_Convergence</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">linter.unusedVariables</span> <span class=\"n\">false</span>\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span> <span class=\"n\">Real</span> <span class=\"n\">Function</span> <span class=\"n\">Set</span>\n\n\n<span class=\"kd\">lemma</span> <span class=\"o\">:</span> <span class=\"n\">SequentialLimit</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n   <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n   <span class=\"k\">have</span> <span class=\"n\">ha</span><span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">&gt;</span><span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">assumption</span>\n   <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"bp\">⌈</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">a</span><span class=\"bp\">⌉₊</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n   <span class=\"n\">simp</span>\n   <span class=\"n\">intro</span> <span class=\"n\">q</span> <span class=\"n\">w</span>\n   <span class=\"k\">have</span> <span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">q</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">⁻¹|=</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">q</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"gr\">sorry</span>\n   <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 400100345,
        "sender_full_name": "Leni Greco",
        "timestamp": 1699005880
    },
    {
        "content": "<p>Unfortunately this isn't a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> because it uses <code>LeanCourse</code>, which most of us don't have because we're not on your course!</p>",
        "id": 400101770,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1699006367
    },
    {
        "content": "<p>Taking into account what Eric said, you could see if using a type ascription similar to the one you used in the <code>use</code> line and removing the ↑ helps... : smile</p>",
        "id": 400102182,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1699006487
    }
]