[
    {
        "content": "<p>EDIT for TLDR now that a fix is known: <strong>Update to Lean v4.2.0-rc4 ASAP</strong>, and if you were previously on v4.2.0-rc2 or v4.2.0-rc3 and have a project which you built using one of these two versions, you need to <em>delete</em> a file called <code>lakefile.olean</code> in your project directory after adjusting your lean-toolchain to say rc4 <strong>before running anything else</strong>.</p>\n<hr>\n<p>I'm getting a weird looking error from trying to <code>lake build</code> current mathlib HEAD (at the minute seems like that's 512169bb5. Seems to happen even after a <code>lake clean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">git</span> <span class=\"n\">repository</span> <span class=\"n\">on</span> <span class=\"n\">master</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">22</span><span class=\"o\">,</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span><span class=\"bp\">/.</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">git</span> <span class=\"n\">repository</span> <span class=\"n\">on</span> <span class=\"n\">master</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">build</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Qq</span><span class=\"o\">:</span> <span class=\"n\">URL</span> <span class=\"n\">has</span> <span class=\"n\">changed</span><span class=\"bp\">;</span> <span class=\"n\">deleting</span> <span class=\"bp\">'./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq'</span> <span class=\"n\">and</span> <span class=\"n\">cloning</span> <span class=\"n\">again</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">Mathlib'</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"o\">]</span><span class=\"bp\">/./</span><span class=\"n\">Mathlib.lean</span>\n</code></pre></div>\n<p>I'm on macOS in case that's not clear from the path there. Not sure what's up yet, but just in case anyone's seen it already? Will post the explanation when I figure it out if not.</p>",
        "id": 397850852,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697895478
    },
    {
        "content": "<p>Somehow surprisingly to me I'm also noticing that <code>lake clean</code> is not idempotent. Is that expected? E.g. here's me just running it a bunch of times in a row, where it seems to be noticing new things one by one about mathlib4 deps:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">git</span> <span class=\"n\">repository</span> <span class=\"n\">on</span> <span class=\"n\">master</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span> <span class=\"bp\">-</span><span class=\"n\">h</span>                                                                                                                                                                                                                                                                                                    <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">Remove</span> <span class=\"n\">build</span> <span class=\"n\">outputs</span>\n\n<span class=\"n\">USAGE</span><span class=\"o\">:</span>\n  <span class=\"n\">lake</span> <span class=\"n\">clean</span> <span class=\"o\">[</span><span class=\"bp\">&lt;</span><span class=\"n\">package</span><span class=\"bp\">&gt;...</span><span class=\"o\">]</span>\n\n<span class=\"n\">If</span> <span class=\"n\">no</span> <span class=\"n\">package</span> <span class=\"n\">is</span> <span class=\"n\">specified</span><span class=\"o\">,</span> <span class=\"n\">deletes</span> <span class=\"n\">the</span> <span class=\"n\">build</span> <span class=\"n\">directories</span> <span class=\"n\">of</span> <span class=\"n\">every</span> <span class=\"n\">package</span> <span class=\"k\">in</span>\n<span class=\"n\">the</span> <span class=\"n\">workspace.</span> <span class=\"n\">Otherwise</span><span class=\"o\">,</span> <span class=\"n\">just</span> <span class=\"n\">deletes</span> <span class=\"n\">those</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">specified</span> <span class=\"n\">packages.</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">git</span> <span class=\"n\">repository</span> <span class=\"n\">on</span> <span class=\"n\">master</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">22</span><span class=\"o\">,</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/.</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">git</span> <span class=\"n\">repository</span> <span class=\"n\">on</span> <span class=\"n\">master</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">aesop</span><span class=\"o\">:</span> <span class=\"n\">URL</span> <span class=\"n\">has</span> <span class=\"n\">changed</span><span class=\"bp\">;</span> <span class=\"n\">deleting</span> <span class=\"bp\">'./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop'</span> <span class=\"n\">and</span> <span class=\"n\">cloning</span> <span class=\"n\">again</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">22</span><span class=\"o\">,</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">/.</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">git</span> <span class=\"n\">repository</span> <span class=\"n\">on</span> <span class=\"n\">master</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Cli</span><span class=\"o\">:</span> <span class=\"n\">URL</span> <span class=\"n\">has</span> <span class=\"n\">changed</span><span class=\"bp\">;</span> <span class=\"n\">deleting</span> <span class=\"bp\">'./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli'</span> <span class=\"n\">and</span> <span class=\"n\">cloning</span> <span class=\"n\">again</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli</span> <span class=\"n\">to</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">22</span><span class=\"o\">,</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">git</span> <span class=\"n\">repository</span> <span class=\"n\">on</span> <span class=\"n\">master</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">proofwidgets</span><span class=\"o\">:</span> <span class=\"n\">URL</span> <span class=\"n\">has</span> <span class=\"n\">changed</span><span class=\"bp\">;</span> <span class=\"n\">deleting</span> <span class=\"bp\">'./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets'</span> <span class=\"n\">and</span> <span class=\"n\">cloning</span> <span class=\"n\">again</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span> <span class=\"n\">to</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">22</span><span class=\"o\">,</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./.</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lakefile.lean</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lakefile.lean</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lakefile.lean</span>\n\n<span class=\"bp\">~/</span><span class=\"n\">Development</span><span class=\"bp\">/</span><span class=\"n\">Mathlib4</span>\n<span class=\"bp\">⊙</span>  <span class=\"n\">lake</span> <span class=\"n\">clean</span>                                                                                                                                                                                                                                                                                                       <span class=\"n\">julian</span><span class=\"bp\">@</span><span class=\"n\">Mini</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lakefile.lean</span>\n</code></pre></div>",
        "id": 397850970,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697895578
    },
    {
        "content": "<p>Oh boy that's not good! So the reason at the end it now can't find <code>lakefile.lean</code> is... it just deleted my entire mathlib repository contents :/</p>",
        "id": 397851050,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697895631
    },
    {
        "content": "<p>I guess I'm quite happy that's all it did, hopefully it hasn't deleted random other files on my hard drive. Time to check :(</p>",
        "id": 397851087,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697895697
    },
    {
        "content": "<p>This is ... erm... a known feature of <code>lake</code> currently. <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> help!</p>",
        "id": 397851102,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697895709
    },
    {
        "content": "<p>It's all gone so I'm not sure what I can even further share to diagnose. I don't know anything clearly but certainly the \"delete stuff other than build artifacts\" behavior seems pretty concerning. All-in-all as long as I didn't just lose random other files, no big deal personally it's just some random side work -- in case the idea is helpful though maybe just making sure every single place lake touches file paths it uses absolute paths and absolutely refuses to remove relative ones, let alone ones <em>above</em> a know build directory is a thing to look into. I'm hesitant to volunteer though.</p>",
        "id": 397851320,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697895905
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors</a></p>",
        "id": 397851424,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697896021
    },
    {
        "content": "<p>Well... the only thing I can add is <code>lake exe cache get</code> is definitely not related, as I didn't run that, just <code>lake build</code>. I did switch branches, but I don't remember at what point in the sequence. My shell history will maybe remind me. Going to file an issue after reading that thread I guess if no one else did.</p>",
        "id": 397851566,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697896181
    },
    {
        "content": "<p>Remove lakefile.olean</p>",
        "id": 397851642,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697896227
    },
    {
        "content": "<p>At this point, <code>lake clean</code> removed it don't worry :)</p>",
        "id": 397851793,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697896360
    },
    {
        "content": "<p>Of course I did search for <code>./]/</code> before posting but it looks like in that thread that others were getting different versions of the fun corrupted path. Bleh.</p>",
        "id": 397851843,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697896412
    },
    {
        "content": "<p>The takeaway of that topic is that lake runs with the old <code>lakefile.olean</code> even if Lean version and the data structures of Lake are changed, which causes a field shift thus causes issues like yours. And there isn't a simple solution yet because there is no version info in <code>lakefile.olean</code> for detecting that this is happening.</p>",
        "id": 397851904,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697896453
    },
    {
        "content": "<p>For now, if I change something in lakefile or toolchain, or have any trouble with lake,  I'll always run <code>lake -R [the rest of the command]</code> where <code>-R</code> would rebuild lakefile itself and reconfigure lake for the project.</p>",
        "id": 397852277,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697896842
    },
    {
        "content": "<p>Surely the simple solution is \"roll back some changes immediately before something really bad happens to someone\"</p>",
        "id": 397852299,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697896865
    },
    {
        "content": "<p>I mean, arguably, something really bad already happened to two people.</p>",
        "id": 397852320,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697896888
    },
    {
        "content": "<p>(I filed <a href=\"https://github.com/leanprover/lean4/issues/2731\">https://github.com/leanprover/lean4/issues/2731</a> though it's difficult to provide any useful information beyond what's in the other thread, so hopefully Mac or anyone who'll work on it already has a lead)</p>",
        "id": 397852855,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697897343
    },
    {
        "content": "<p>I certainly will personally avoid <code>lake clean</code> until it's fixed, but yeah it does seem like this will cause someone even bigger issues if left unfixed.</p>",
        "id": 397852894,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697897401
    },
    {
        "content": "<p>The best solution so far is to upgrade to lean 4.2.0-rc4 (and delete lakefile.olean if you ever used rc2 or rc3)</p>",
        "id": 397853458,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697897992
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/commit/6c206737370bc41139bb60100d0e69437d39c84d\">https://github.com/leanprover/lean4/commit/6c206737370bc41139bb60100d0e69437d39c84d</a> reverts an ABI change</p>",
        "id": 397853543,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697898063
    },
    {
        "content": "<p>See also the release notes for rc4: <a href=\"https://github.com/leanprover/lean4/releases/tag/v4.2.0-rc4\">https://github.com/leanprover/lean4/releases/tag/v4.2.0-rc4</a></p>",
        "id": 397853616,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697898127
    },
    {
        "content": "<p>This was already after upgrading to rc4 -- though I don't see what in the release notes would hint to this, I don't think anyone will know ABI changes have anything to do with this sort of behavior.</p>",
        "id": 397853760,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697898270
    },
    {
        "content": "<p>I see there's an open PR to make lake clean remove the .olean though.</p>",
        "id": 397853792,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697898282
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build'ing.20mathlib.20HEAD/near/397852299\">said</a>:</p>\n<blockquote>\n<p>Surely the simple solution is \"roll back some changes immediately before something really bad happens to someone\"</p>\n</blockquote>\n<p>This won't help much because the version of <code>lake</code> that gets used is the one that people have in their <code>lean-toolchain</code>, which could point at the broken version.</p>",
        "id": 397854904,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697899192
    },
    {
        "content": "<p>Aah I see. OK well <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span> for everyone...</p>",
        "id": 397855328,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697899672
    },
    {
        "content": "<p>Will an announcement help? The release log says \"Anyone using rc1, rc2, or rc3 should upgrade to rc4\", but most might not be even aware of the issues with rc2 and rc3.</p>\n<p>In addition to the announcement, may be some hints on how to ensure safety with the old tool chain, is replacing all <code>lake</code> commands to <code>lake -R</code> gonna be safe?</p>",
        "id": 397859140,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697902543
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span><br>\nIt's probably not lost. <code>lake build</code> simply checks out a different revision: the revision specified in <code>lake-manifest.json</code>, which comes (via <code>lake update</code>) from the revision specified in the <code>lakefile.lean</code>. To avoid this, use a filesystem path in <code>lakefile.lean</code>, for example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"s2\">\"lake-packages/mathlib\"</span>\n</code></pre></div>\n<p>To recover your commits, assuming that git hasn't garbage-collected them yet:</p>\n<ul>\n<li>Take a copy of the entire repo, so that you can experiment without fear</li>\n<li>In your shell, CD into the copy and type <code>git reflog</code> for a list of recent commits</li>\n<li>Find the commit hash for the commit you want</li>\n<li>Type <code>git reset --hard &lt;commit&gt;</code></li>\n</ul>",
        "id": 397863125,
        "sender_full_name": "Richard Copley",
        "timestamp": 1697906939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"400544\">@Richard Copley</span>  I know about the reflog -- it's lost :) -- lake blew away the <code>.git</code> directory entirely. Also I should say again I was <em>in</em> Mathlib4. Thanks for the idea though!</p>",
        "id": 397863490,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697907387
    },
    {
        "content": "<p>Oh no! Sorry for making assumptions. And I thought <code>lake build</code> doing checkouts was already pretty unexpected!</p>",
        "id": 397864323,
        "sender_full_name": "Richard Copley",
        "timestamp": 1697908236
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build'ing.20mathlib.20HEAD/near/397852299\">said</a>:</p>\n<blockquote>\n<p>Surely the simple solution is \"roll back some changes immediately before something really bad happens to someone\"</p>\n</blockquote>\n<p>The current problem is actually likely due to the rollback.  <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span>  The problem is now likely incompatibility between different old Lean versions (which cannot be fixed with new changes because the old versions will still exist and cause this problem). <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>",
        "id": 397873176,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697916830
    },
    {
        "content": "<p>Is it worth a post in <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> or <a class=\"stream\" data-stream-id=\"113486\" href=\"/#narrow/stream/113486-announce\">#announce</a> warning against using <code>lake clean</code> at all, while we work out what went wrong? It would be a shame for anyone else's work to get deleted.</p>",
        "id": 397873527,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697917233
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build'ing.20mathlib.20HEAD/near/397873527\">said</a>:</p>\n<blockquote>\n<p>Is it worth a post in <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> or <a class=\"stream\" data-stream-id=\"113486\" href=\"/#narrow/stream/113486-announce\">#announce</a> warning against using <code>lake clean</code> at all, while we work out what went wrong? It would be a shame for anyone else's work to get deleted.</p>\n</blockquote>\n<p>Agree, I have also managed to delete an entire repo this way (fortunately it was a fresh checkout of std so nothing lost but it could be really bad for some people)</p>",
        "id": 397874077,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697917845
    },
    {
        "content": "<p>Does this mean you have a repro?</p>",
        "id": 397874215,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697917993
    },
    {
        "content": "<p>(please test it on gitpod or something to avoid deleting anything of value!)</p>",
        "id": 397874223,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697918020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build'ing.20mathlib.20HEAD/near/397873176\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build'ing.20mathlib.20HEAD/near/397852299\">said</a>:</p>\n<blockquote>\n<p>Surely the simple solution is \"roll back some changes immediately before something really bad happens to someone\"</p>\n</blockquote>\n<p>The current problem is actually likely due to the rollback.  <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span>  The problem is now likely incompatibility between different old Lean versions (which cannot be fixed with new changes because the old versions will still exist and cause this problem). <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>\n</blockquote>\n<p>One way to fix this would be to patch the old versions themselves. That is, backport the bugfix to rc2 and rc3, and then update the old releases, meaning that elan will deliver the bugfixed versions of rc2 and rc3 instead of the original ones</p>",
        "id": 397874765,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697918542
    },
    {
        "content": "<p>Either that or just delete the elan releases for rc2 and rc3 entirely and live with the breakage, but I think they have existed for a bit too long to avoid promulgation in the ecosystem so this would break any lean projects that have these versions in the lakefile</p>",
        "id": 397874898,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697918651
    },
    {
        "content": "<p>I did manage to reproduce the bug a second time, but probably not by a normal method: On a working rc1 project, I used <code>elan override set lean4-debug</code> to point to a development version of lean (made some time after rc3), and <code>lake</code> commands were borked.</p>",
        "id": 397875185,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697918961
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Yeah, <code>elan override</code> causing a olean mismatch is to be expected currently.</p>",
        "id": 397875356,
        "sender_full_name": "Mac Malone",
        "timestamp": 1697919139
    },
    {
        "content": "<p>Of course backport bugfixing will <em>also</em> produce more instances of this problem, but at least these problems will be fixed by clearing your elan cache and will not recur</p>",
        "id": 397875437,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697919271
    },
    {
        "content": "<p>Hey all, apologies for any troubles this bug has caused. As has been mentioned, this has been fixed in 4.2.0-rc4 such that switching between it and any stable version is safe. Unfortunately, moving between these versions and rc2/3 in any direction is still unsafe and you should <strong>remove any <code>lakefile.olean</code> manually</strong> in this case (it is always safe to remove as the file is just a cache). We have also updated the release notes for rc2-4 with this information.</p>",
        "id": 397875446,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697919296
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build'ing.20mathlib.20HEAD/near/397874215\">said</a>:</p>\n<blockquote>\n<p>Does this mean you have a repro?</p>\n</blockquote>\n<p>no because everything is gone and its hard to remember exactly which branches I was switching from/ to</p>",
        "id": 397876742,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697921072
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build'ing.20mathlib.20HEAD/near/397873527\">said</a>:</p>\n<blockquote>\n<p>Is it worth a post in <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> or <a class=\"stream\" data-stream-id=\"113486\" href=\"/#narrow/stream/113486-announce\">#announce</a> warning against using <code>lake clean</code> at all, while we work out what went wrong? It would be a shame for anyone else's work to get deleted.</p>\n</blockquote>\n<p>This is now done, thanks <span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span>!</p>",
        "id": 397878208,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697923077
    },
    {
        "content": "<p>In case for whatever reason it's useful to someone, in updating a different package I intentionally didn't delete the .olean file to see whether Lake would again delete the project directory, and it didn't, it segfaulted instead. My reproducer for that (the segfault behavior, here on macOS) is:</p>\n<p><code>versions=(4.2.0-rc3 4.2.0-rc4); mkdir test &amp;&amp; cd test; for version in $versions; do gh release download -R leanprover/lean4 \"v$version\" -p \"lean-$version-darwin_aarch64.tar.zst\" &amp;&amp; tar xf \"lean-$version-darwin_aarch64.tar.zst\" &amp;&amp; rm \"lean-$version-darwin_aarch64.tar.zst\"; done &amp;&amp; mkdir foo &amp;&amp; cd foo &amp;&amp; ../*$versions[1]*/bin/lake init foo &amp;&amp; ../*$versions[1]*/bin/lake build &amp;&amp; ../*$versions[2]*/bin/lake build</code> which if you indeed make the first version 2 or 3 will segfault (1 will not), and produce:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Foo.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Foo.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Foo</span>\n<span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Foo</span>\n<span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Main</span>\n<span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Main</span>\n<span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">foo</span>\n<span class=\"n\">zsh</span><span class=\"o\">:</span> <span class=\"n\">segmentation</span> <span class=\"n\">fault</span>  <span class=\"bp\">../*$</span><span class=\"n\">versions</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span><span class=\"bp\">*/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lake</span> <span class=\"n\">build</span>\n</code></pre></div>\n<p>So, not a reproducer of the original issue, and the fix it sounds like is the same (manually delete the .olean if you were on rc2 or rc3), but figured I may as well post it since it took me 2 or 3 minutes to get the CLI right.</p>",
        "id": 397881673,
        "sender_full_name": "Julian Berman",
        "timestamp": 1697927687
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> I think this case is analogous to the one I reported using <code>elan override</code>. The existing defense against using out of date <code>lakefile.olean</code>s is to check that <code>lean-toolchain</code> has changed; your CLI is just calling two different binaries directly without touching that file, so it doesn't seem representative of what someone would stumble on if they weren't actively hacking lean versions. (BTW if you wanted to reproduce deletion of your project folder you should probably try using <code>lake clean</code> instead of <code>lake build</code>.)</p>",
        "id": 397975020,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1698012434
    }
]