[
    {
        "content": "<p>As asked here <a href=\"https://proofassistants.stackexchange.com/questions/2526/how-to-run-lean4-with-mathlib-manually\">https://proofassistants.stackexchange.com/questions/2526/how-to-run-lean4-with-mathlib-manually</a><br>\nBasically, I have lean isntalled, and mathlib is installed too, but imports don't seem to work? maybe I am doing it wrong?</p>",
        "id": 399960092,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698937504
    },
    {
        "content": "<p>How did you create your project? Did you create a project?</p>",
        "id": 399961688,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1698937807
    },
    {
        "content": "<p>i'm using the already existing project from MIL, shouldn't that work?</p>",
        "id": 399961968,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698937865
    },
    {
        "content": "<p>Can the rest of MIL import mathlib?</p>",
        "id": 399962300,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1698937924
    },
    {
        "content": "<p>how can I test?</p>",
        "id": 399962458,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698937953
    },
    {
        "content": "<p>should I simply try <br>\n<code>lean --run?</code></p>",
        "id": 399962559,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698937971
    },
    {
        "content": "<p>Are you running from vs code or some other way?</p>",
        "id": 399962835,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1698938028
    },
    {
        "content": "<blockquote>\n<p>lean --run .\\MIL\\Common.lean      <br>\n.\\MIL\\Common.lean:1:0: error: unknown package 'Mathlib'</p>\n</blockquote>",
        "id": 399962865,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698938035
    },
    {
        "content": "<p>as I said, I want to run it from the terminal</p>",
        "id": 399962965,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698938046
    },
    {
        "content": "<p>I guess MIL can't import Mathlib when run from <code>lean --run</code> either</p>",
        "id": 399963160,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698938087
    },
    {
        "content": "<p>Try <code>lake build</code></p>",
        "id": 399967671,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1698939022
    },
    {
        "content": "<blockquote>\n<p>lake build&amp;&amp;lean --run MIL/Common.lean<br>\nMIL/Common.lean:1:0: error: unknown package 'Mathlib'</p>\n</blockquote>",
        "id": 399987678,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698944974
    },
    {
        "content": "<p>Not sure why would it be different</p>",
        "id": 399987713,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698944990
    },
    {
        "content": "<p>Start <a href=\"https://leanprover-community.github.io/\">here</a> and click on <a href=\"https://leanprover-community.github.io/install/project.html\">Using Lake (build system)</a> in the  menu on the left. Read the whole page, then follow the instructions in 'Working on an existing project'. The instructions use MIL as their example, so it should be easy to follow the steps and set up the project correctly.</p>\n<p>When you get to the step which says \"Launch VS Code\", do this instead:</p>\n<ul>\n<li>change directory to \"mathematics_in_lean\" and run <code>lake build</code></li>\n</ul>\n<p>That is all. There is no need to <code>run</code> a file of mathematical proofs. (What would it do?)</p>",
        "id": 399992851,
        "sender_full_name": "Richard Copley",
        "timestamp": 1698946909
    },
    {
        "content": "<p><code>lake</code> is responsible for running <code>lean</code> for you. You can do <code>lake build --verbose</code> to see the full command line invocations it runs. It sets up environment variables so that lean can find everything.</p>",
        "id": 399993661,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698947198
    },
    {
        "content": "<p>ahh, I see, well I wanted to use rational numbers in lean, not as a proof, but just import them, to use them, maybe I am doing things wrong?</p>",
        "id": 399998841,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698949400
    },
    {
        "content": "<p>and I want to run this program from the terminal, so vscode doesn't help me much here</p>",
        "id": 399998868,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698949419
    },
    {
        "content": "<p>You can get <code>lake</code> to run programs too. This is how for example <code>lake exe cache</code> works in mathlib. I think <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/lakefile.lean#L61-L62\">this</a> is all mathlib needs to add to the lakefile to get <code>lake</code> to be able to do this.</p>",
        "id": 400000907,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698950230
    },
    {
        "content": "<p>in this case, how to tell lake to run file.lean?</p>",
        "id": 400016501,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698957893
    },
    {
        "content": "<p><code>lake script run file.lean</code> doesn't seem to work</p>",
        "id": 400018697,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698958973
    },
    {
        "content": "<p>Does <code>lake env lean file.lean</code> do what you want?</p>",
        "id": 400031555,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698966365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> <br>\nthe answer was <code>lake env lean --run file.lean</code> thank you so much guyss</p>",
        "id": 400034197,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698968328
    },
    {
        "content": "<p>is there a way to run --verbose with <code>lake env</code>? I don't see the command line invocations of lake in this case</p>",
        "id": 400034280,
        "sender_full_name": "Kreijstal",
        "timestamp": 1698968402
    },
    {
        "content": "<p>If you do <code>lake env</code> by itself at least it will print out the values of all the environment variables it sets</p>",
        "id": 400035368,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698969243
    },
    {
        "content": "<p>And it looks like <code>lake env</code> does not do anything with the verbosity setting. It computes the environment and then just runs the provided command with <code>IO.Process.spawn</code>.</p>",
        "id": 400035686,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698969527
    }
]