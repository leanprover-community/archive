[
    {
        "content": "<p>I know, Std and Mathlib do not always follow the official style (admittedly, neither does Lake in other cases).</p>",
        "id": 370922474,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688071987
    },
    {
        "content": "<p>well, I would phrase it more as lean core not following the default style :)</p>",
        "id": 370922747,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072063
    },
    {
        "content": "<p>The most polished documentation we have on style matters comes from mathlib</p>",
        "id": 370922817,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072089
    },
    {
        "content": "<p>what you are calling \"official style\" is I think closer to \"the house rules of Lean4 repo\"</p>",
        "id": 370923095,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072176
    },
    {
        "content": "<p>Yeah, no. Lean core is the official style as it is the place where the language is defined.</p>",
        "id": 370923133,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688072196
    },
    {
        "content": "<p>But, I do agree that we do not necessarily have to adopt its style.</p>",
        "id": 370923332,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688072264
    },
    {
        "content": "<p>For example, lean4 repo doesn't have line limits (or if it does, I haven't found them)</p>",
        "id": 370923443,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072287
    },
    {
        "content": "<p>Style, in my view, should be a per-project (or group) thing.</p>",
        "id": 370923472,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688072296
    },
    {
        "content": "<p>std/mathlib style absolutely does</p>",
        "id": 370923477,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072297
    },
    {
        "content": "<p>sure, it is per project</p>",
        "id": 370923517,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072306
    },
    {
        "content": "<p>but then you have to clarify when you say \"official style\"</p>",
        "id": 370923556,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072321
    },
    {
        "content": "<p>because lean4 repo does not maintain a style guide</p>",
        "id": 370923589,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072332
    },
    {
        "content": "<p>I though there was some MD document with some style guidelines, but I cannot seem to find it at the moment.</p>",
        "id": 370924032,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688072444
    },
    {
        "content": "<p>std/mathlib style is to put default files consciously, when we actually intend for <code>import This.Folder</code> to mean something. Mathlib generally avoids it because it is a hazard which causes dependency creep and/or cycles in mathlib, and std uses it to make refactoring possible without breaking imports</p>",
        "id": 370924165,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072485
    },
    {
        "content": "<p>in neither case are they just stamped out for every directory</p>",
        "id": 370924368,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688072527
    },
    {
        "content": "<p>As another data point, rustc (the compiler) has a very unusual setup for a rust project, and has lots of repo-specific house rules. It is not something you could easily generalize to a normal rust project in the ecosystem. I think this will be a general trend, the compiler is a big project but also an unusual one, not necessarily representative of the average project. Mathlib is also a big project and not representative of small lean projects, but it is very community-focused, and since the style guides invariably come from big projects since that's where the people are, I think it is a reasonably good prototype for a general use style guide.</p>",
        "id": 370926106,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688073054
    },
    {
        "content": "<p>Which I think is fair. I hold no strong feelings that every directory needs an associated <code>.lean</code> file. I recall that Sebastian did, however, and as one of main designers, I take is word as indicative of official style. I also know that he was big on the no <code>src</code> directory in Lean projects. I stance I personally disagree with (but I have none-the-less adopted).</p>",
        "id": 370933286,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688075379
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370926106\">said</a>:</p>\n<blockquote>\n<p>Mathlib is also a big project and not representative of small lean projects, but it is very community-focused, and since the style guides invariably come from big projects since that's where the people are, I think it is a reasonably good prototype for a general use style guide.</p>\n</blockquote>\n<p>Personally, I just do not think mathlib is a good source for general style as it is attuned to the style of professional mathematicians, which is a very beast from that of the style of a general purpose language. Such differences in audiences among different codebases are one  of the reason why I think strictly enforced style guides beyond a project or group scope are generally a bad idea. However, I  do think code written by languages designers is good for gauging an initial style which subsequent style guides can either embrace or explicitly part ways with.</p>",
        "id": 370934123,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688075717
    },
    {
        "content": "<p>I understand that this is a concern, but clearly the solution then would be to help evolve the style guide in a more domain-agnostic way. Do you actually have any particular style things that you want to point to as mathematician-like?</p>",
        "id": 370934497,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688075873
    },
    {
        "content": "<p>Personally I can't see anything in the mathlib style guide that has clear mathematician bias</p>",
        "id": 370934618,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688075914
    },
    {
        "content": "<p>Here are some stylistic aspects of mathlib, not explicitly in the style guide, which I would call mathematician-biased:</p>\n<ul>\n<li>lots of use of <code>variable</code></li>\n<li>use of the root namespace</li>\n<li>lots of use of <code>notation</code><ul>\n<li>especially unicode notation</li>\n</ul>\n</li>\n</ul>\n<p>Is there anything else that comes to mind? These can just be omitted from a general style guide, and none of them really have to do with code formatting, e.g. 2 space indent, 4 space declaration body hanging indent, etc.</p>",
        "id": 370935452,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688076235
    },
    {
        "content": "<blockquote>\n<p>However, I do think code written by languages designers is good for gauging an initial style which subsequent style guides can either embrace or explicitly part ways with.</p>\n</blockquote>\n<p>We did. The mathlib4 style looks significantly different from mathlib3, because we started with lean4 repo style and adapted it for a general audience. The naming convention is a very obvious example of this: we were mostly fine with the lean 3 naming convention already (partly because mathematician bias is to not care about theorem names), but lean 4 had a new naming convention and we adapted it into a full specification and rolled it out over a million lines of code at great expense.</p>",
        "id": 370935962,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688076428
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I just realized I do not know where official mathlib 4 style guide is located. I have visited links to it before, but do not know how to get to it just from the project github itself.</p>",
        "id": 370937737,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077111
    },
    {
        "content": "<p>Some information is on the porting wiki, e.g. <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki#naming-convention\">https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki#naming-convention</a></p>",
        "id": 370938024,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077201
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370935962\">said</a>:</p>\n<blockquote>\n<p>We did. The mathlib4 style looks significantly different from mathlib3, because we started with lean4 repo style and adapted it for a general audience.</p>\n</blockquote>\n<p>Which is great! I was not asserting mathlib did not take that approach, but simply that I think that approach is a good approach.</p>",
        "id": 370938093,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077209
    },
    {
        "content": "<p>I don't think the rules around indentation are written down, but they are codified in tools like mathport</p>",
        "id": 370938146,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077232
    },
    {
        "content": "<p>We'll be building the lean 4 version of the <a href=\"https://leanprover-community.github.io/\">website</a> soon, and I expect the style guide to live there eventually</p>",
        "id": 370938258,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077276
    },
    {
        "content": "<p>Well, in that case, mathlib style's is about as official as the core's style as core's code style is mostly encoded in the pretty printer. <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 370938306,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077295
    },
    {
        "content": "<p>there is <a href=\"https://leanprover-community.github.io/contribute/style.html\">https://leanprover-community.github.io/contribute/style.html</a> but it is for lean 3</p>",
        "id": 370938314,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077298
    },
    {
        "content": "<p>mathport uses the pretty printer</p>",
        "id": 370938340,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077308
    },
    {
        "content": "<p>and no it isn't, core code differs from the pretty printer</p>",
        "id": 370938427,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077328
    },
    {
        "content": "<p>As I understand it, the pretty printer is a best approximation of core style that can be done with existing tooling.</p>",
        "id": 370938503,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077361
    },
    {
        "content": "<p>okay, but mathlib is a more canonical example of \"core style\" than core is then</p>",
        "id": 370938555,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077383
    },
    {
        "content": "<p>in particular, when there is a style discussion that results in a change to the pretty printer, core code is usually not updated</p>",
        "id": 370938623,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077417
    },
    {
        "content": "<p>(hence the <a href=\"https://github.com/leanprover/lean4/blob/master/tests/lean/Reformat.lean\"><code>Reformat</code></a> test)</p>",
        "id": 370938671,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077441
    },
    {
        "content": "<p>that's testing a very old version of Init.Core</p>",
        "id": 370938763,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077456
    },
    {
        "content": "<p>it's not even demonstrating that the code reformats to itself, only that it reformats to something in particular</p>",
        "id": 370938859,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077498
    },
    {
        "content": "<p>From Gabriel edits/discussions on the pretty printer and that file, that is mostly due to certain limitations in the pretty printer.</p>",
        "id": 370939077,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077582
    },
    {
        "content": "<p>okay, but it's not justifying the claim that lean4 core passes its own formatter</p>",
        "id": 370939124,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077607
    },
    {
        "content": "<p>True, I agree that it does not.</p>",
        "id": 370939180,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077634
    },
    {
        "content": "<p>Because the formatter is sub-optimal style.</p>",
        "id": 370939195,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077646
    },
    {
        "content": "<p>and also lean4 doesn't care about keeping the code format up to date</p>",
        "id": 370939249,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077674
    },
    {
        "content": "<p>It is simply the best machine approximation currently available.</p>",
        "id": 370939250,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077675
    },
    {
        "content": "<p>style change PRs are not welcome, AFAIK</p>",
        "id": 370939328,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077703
    },
    {
        "content": "<p>mathlib4 is lean4 with a more modern version of the lean4 style</p>",
        "id": 370939387,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077741
    },
    {
        "content": "<p>Correct, as Leo more-or-less determines Lean 4 core style and, in fact, has some disagreements with Sebastian on it (e.g. Leo wants parentheses in <code>if (&lt;- x)</code>/<code>match (&lt;- y)</code> and Sebastian is not fond of them), which is why it is not always consistent.</p>",
        "id": 370939502,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077797
    },
    {
        "content": "<p>right, that's a house style</p>",
        "id": 370939624,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077833
    },
    {
        "content": "<p>And my assertion was that all styles are / should be house styles.</p>",
        "id": 370939671,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077857
    },
    {
        "content": "<p>not everyone can be bothered to write their own style guide</p>",
        "id": 370939727,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077878
    },
    {
        "content": "<p>plus there is value in having code look similar across projects, so you don't want too much divergence from a common style</p>",
        "id": 370939788,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077907
    },
    {
        "content": "<p>True, hence why many project style \"guides\" are informal.</p>",
        "id": 370939795,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077910
    },
    {
        "content": "<p>and my claim is that currently the closest thing we have to \"common style\" is some amalgam of lean4 core, std, and mathlib styles</p>",
        "id": 370939982,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688077972
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370939788\">said</a>:</p>\n<blockquote>\n<p>plus there is value in having code look similar across projects</p>\n</blockquote>\n<p>While true, I think the freedom to code as works best for the developer(s) is more valuable.</p>",
        "id": 370939999,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688077981
    },
    {
        "content": "<p>Which, I should note, even the professional mathematicians agree with, given there strong opinions on unicode vs ASCII art and other forms of notation.</p>",
        "id": 370940083,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078019
    },
    {
        "content": "<p>of course you can write code however you like, but not everyone wants to be divergent, and it is helpful to be able to tell people what not being divergent looks like</p>",
        "id": 370940084,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078020
    },
    {
        "content": "<p>True, so they should conform with the style of whatever project they admire / aspire to emulate.</p>",
        "id": 370940210,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078066
    },
    {
        "content": "<p>I am not really sure what the debate is here.</p>",
        "id": 370940358,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078125
    },
    {
        "content": "<p>the original claim was that default files is not \"common style\", it is \"lean4 project style\"</p>",
        "id": 370940473,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078166
    },
    {
        "content": "<p>and you were conflating the two</p>",
        "id": 370940483,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078171
    },
    {
        "content": "<p>I said \"official\", not \"common\".</p>",
        "id": 370940513,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078188
    },
    {
        "content": "<p>I still think that's the wrong word, lean4 does not maintain an official style guide so there is no such thing</p>",
        "id": 370940613,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078242
    },
    {
        "content": "<p>I don't think it ever even claimed to</p>",
        "id": 370940680,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078274
    },
    {
        "content": "<p>The word \"official\"  is defined as \"of or relating to an office or a post of authority.\" Leo is the authority on Lean 4, so his style (and to a lesser extent Sebastian's) is the \"official\" style.</p>",
        "id": 370940810,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078320
    },
    {
        "content": "<p>no that's not how it works</p>",
        "id": 370940831,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078331
    },
    {
        "content": "<p>I guess that is our point of disagreement then?</p>",
        "id": 370940882,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078356
    },
    {
        "content": "<p>lean4 repo is the compiler, it defines the language itself, it also supplies a formatter which is some approximation to common style but isn't that useful as a style guide outside the broad strokes</p>",
        "id": 370940949,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078393
    },
    {
        "content": "<p>a lean4 style guide is not a deliverable of the lean4 repo</p>",
        "id": 370941051,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078425
    },
    {
        "content": "<p>I don't think Leo is interested in being the arbiter of lean4 style</p>",
        "id": 370941071,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078442
    },
    {
        "content": "<p>He has a personal style, and uses that in his project</p>",
        "id": 370941165,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078482
    },
    {
        "content": "<p>You seem to be associating a style with a style guide, which I do not think is necessary.</p>",
        "id": 370941351,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078578
    },
    {
        "content": "<p>If you write code, and you have any preference on one way of writing things over another, you have a style.</p>",
        "id": 370941411,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078605
    },
    {
        "content": "<p>A style guide is simply a written-down consensus of some body on some (not necessarily complete) rules of style.</p>",
        "id": 370941568,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078661
    },
    {
        "content": "<p>At least, that is my view (and a view I would argue fits with the definitions of the words in question).</p>",
        "id": 370941675,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078719
    },
    {
        "content": "<p>sure, but the written-down part is an important aspect of getting consensus</p>",
        "id": 370941800,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078766
    },
    {
        "content": "<p>True. But I am not assuming style needs consensus.</p>",
        "id": 370941839,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078789
    },
    {
        "content": "<p>without it, it's just an idiolect and varies for every person writing code</p>",
        "id": 370941862,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078798
    },
    {
        "content": "<p>True. Though if one adopts another's style (e.g., for contributing to their project), it is no longer and idiolect (as more than one person now uses it)</p>",
        "id": 370942011,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078878
    },
    {
        "content": "<p>Right now, the most actual <em>development</em> on style matters has occurred in mathlib. Lots of people have a style, but mathlib has talked about it and written more about it and come to a broader consensus than other projects</p>",
        "id": 370942016,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078881
    },
    {
        "content": "<p>I am not debating that.</p>",
        "id": 370942097,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078909
    },
    {
        "content": "<p>most of that development has fed back into lean4 repo when it relates to the formatter, so I don't think lean4 core is in disagreement about it</p>",
        "id": 370942163,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688078949
    },
    {
        "content": "<p>I obviously do disagree with it at points, but that is fine (especially as I am not a major player in the space).</p>",
        "id": 370942179,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688078960
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370942011\">said</a>:</p>\n<blockquote>\n<p>True. Though if one adopts another's style (e.g., for contributing to their project), it is no longer and idiolect (as more than one person now uses it)</p>\n</blockquote>\n<p>You would still need to cooperate or coordinate with them in order to use their style, or try to guess at what the style is based on context. Communication is important for making it more than an idiolect and that's why projects get style guides</p>",
        "id": 370942403,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370942163\">said</a>:</p>\n<blockquote>\n<p>most of that development has fed back into lean4 repo when it relates to the formatter, so I don't think lean4 core is in disagreement about it</p>\n</blockquote>\n<p>I am not sure Leo and Sebastian really care hat much about the output of the formatter so If e.g. Leo did have disagreements on style, I doubt he would express them unless they were major.</p>",
        "id": 370942509,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079120
    },
    {
        "content": "<p>exactly, \"lean4 style\" doesn't matter for core because it isn't autoformatting everything</p>",
        "id": 370942646,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079165
    },
    {
        "content": "<p>so it uses its own style and has rules about not gratuitously applying style fixes</p>",
        "id": 370942701,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079187
    },
    {
        "content": "<p>Okay, we agree?</p>",
        "id": 370942907,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079276
    },
    {
        "content": "<p>I am still not sure what you are trying to persuade me of / where we are now disagreeing on facts.</p>",
        "id": 370942978,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079313
    },
    {
        "content": "<p>that \"lean4 style\" does not equate to \"the style of code found in the lean4 repo\" and is actually much closer to \"the style of code found in the mathlib4 repo\"</p>",
        "id": 370943029,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079346
    },
    {
        "content": "<p>with the latter being primarily due to the pervasive use of mathport</p>",
        "id": 370943116,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079371
    },
    {
        "content": "<p>I think that is just a disagreement in definition. I define (official) \"lean4-style\" as \"the style of the [Lean] code found in the lean4 repo\".</p>",
        "id": 370943162,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079400
    },
    {
        "content": "<p>I personally do not care how common or rare that style is.</p>",
        "id": 370943216,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079431
    },
    {
        "content": "<p>Now, if Leo where to develop his own style guide that differed in parts with the Lean 4 repo, then I would concede that that style guide would then be official \"lea4-style\". Or, if control of Lean 4 was handed over to a foundation and they made a style guide, I would conceded similarly. To me, the official style of the language is the style promulgated by the person or institution with control of the language.</p>",
        "id": 370943616,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079623
    },
    {
        "content": "<p>The thing I am talking about by the name \"common style\" or \"official style\" is \"that style for lean4 projects that we recommend to people starting a project for general use\"</p>",
        "id": 370943622,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079631
    },
    {
        "content": "<p>i.e. the thing that would be relevant to <code>lake</code></p>",
        "id": 370943667,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079656
    },
    {
        "content": "<p>Who is \"we\" in this context?</p>",
        "id": 370943689,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079664
    },
    {
        "content": "<p>we the lean4 project + community</p>",
        "id": 370943737,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079688
    },
    {
        "content": "<p>In that case, there would need to be a meeting of all said stakeholders to sit down and formulating a style guide through some process. Which has not occurred and which I am not sure will occur as I am not sure Leo is that interested in it.</p>",
        "id": 370943965,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079777
    },
    {
        "content": "<p>Nor does it seem particularly necessary.</p>",
        "id": 370944013,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079804
    },
    {
        "content": "<p>Right, this has been my impression. Leo is not interested in making his style \"lean4 style\", and I think it would be a mistake to put that kind of responsibility on him</p>",
        "id": 370944085,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079842
    },
    {
        "content": "<p>As mathlib is currently the primary source of new users, it makes sense they would follow mathlib style and use its resources. Also, those users are less likely to be interested in general programming, so the need for a general style there is somewhat lacking.</p>",
        "id": 370944217,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688079881
    },
    {
        "content": "<p>I think it is actually not that unreasonable to have all the people / projects mentioned agree on a \"common style\", especially since it doesn't mean \"the style your project must adhere to\"</p>",
        "id": 370944223,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079885
    },
    {
        "content": "<p>and what I'm saying is that mathlib has a working draft for \"common style\" and if you would like to add your input to counteract some real or imagined mathematician-bias please do so</p>",
        "id": 370944368,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079951
    },
    {
        "content": "<p>just please stop assuming that it is unsuitable just because there are a lot of mathematician users of mathlib</p>",
        "id": 370944501,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688079994
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370944223\">said</a>:</p>\n<blockquote>\n<p>agree on a \"common style\", especially since it doesn't mean \"the style your project must adhere to\"</p>\n</blockquote>\n<p>That is a very unique notion of \"common\". If the stakeholders do not use they style they promulgate, I imagine that would be rather confusing for everyone involved.</p>",
        "id": 370944521,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080007
    },
    {
        "content": "<p>maybe, that's a separate question to be worked on within the context of that project</p>",
        "id": 370944582,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080033
    },
    {
        "content": "<p>\"default style\" is another possible framing</p>",
        "id": 370944613,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080057
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370944501\">said</a>:</p>\n<blockquote>\n<p>just please stop assuming that it is unsuitable just because there are a lot of mathematician users of mathlib</p>\n</blockquote>\n<p>I am not assuming it is unsuitable. I am just asserting I disagree with some of it and I think some of my disagreements would be general CS disagreements, which you have also already pointed out exist. E.g. heavy use of Unicode notation, variables, etc.</p>",
        "id": 370944652,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080080
    },
    {
        "content": "<p>Is that part of the style guide? I don't think it would be</p>",
        "id": 370944743,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080108
    },
    {
        "content": "<p>In general I would expect most projects to diverge from the \"common style\" in some specific points but agree on the rest</p>",
        "id": 370944825,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080145
    },
    {
        "content": "<p>Now I am confused. I thought you were saying that mathlib4 style was the common style and that its style included these features?</p>",
        "id": 370944859,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080158
    },
    {
        "content": "<p>no, that was my example of ways mathlib4 project style differs from \"common style\"</p>",
        "id": 370944917,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080184
    },
    {
        "content": "<p>i.e. aspects of mathlib4 design I would not copy into downstream projects</p>",
        "id": 370945028,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080221
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370944613\">said</a>:</p>\n<blockquote>\n<p>\"default style\" is another possible framing</p>\n</blockquote>\n<p>This is starting to sound like the \"if you design a cockpit to fit the average pilot, you've actually design it to fit no one\" <a href=\"https://www.linkedin.com/pulse/youve-designed-cockpit-fit-average-pilot-actually-one-justin-owings\">story</a>.</p>",
        "id": 370945155,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080284
    },
    {
        "content": "<p>A style guide that no one actually abides by wholly does not strike me as particularly useful.</p>",
        "id": 370945281,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080330
    },
    {
        "content": "<p>Those are two mutually incompatible claims, or rather they only support the nihilistic view that style guides are useless</p>",
        "id": 370945394,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080386
    },
    {
        "content": "<p>Since upon using a project, I have no clue which bits and pieces that have decide to adopt. Thus, this only seems useful if there is a customizable linter to encode a project's style choices.</p>",
        "id": 370945424,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080395
    },
    {
        "content": "<p>the default is to use all of it, until you find a suggestion that personally offends your sensibilities and so you don't do that one</p>",
        "id": 370945499,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080443
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370945394\">said</a>:</p>\n<blockquote>\n<p>Or rather they only support the nihilistic view that style guides are useless</p>\n</blockquote>\n<p>Which was kind of my point, style guides are really only useful at a project level (where they are enforced) and for new users who want a gist of what to write.</p>",
        "id": 370945577,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080471
    },
    {
        "content": "<p>okay, call it a template for making project style guides then</p>",
        "id": 370945698,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080534
    },
    {
        "content": "<p>Sure. And I think mathlib's work on that is valuable.</p>",
        "id": 370945820,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080573
    },
    {
        "content": "<p>I just think the said template will be more mathematician focused and there is not yet a real need (nor a diverse enough userbase to  inform it) to create a more general Lean 4 style guide.</p>",
        "id": 370946001,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080647
    },
    {
        "content": "<p>and <code>lake</code> should implement that template, insofar as it can make explicit recommendations or show by doing</p>",
        "id": 370946006,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080649
    },
    {
        "content": "<p>Why should Lake show by doing more than the Lean 4 core?</p>",
        "id": 370946139,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080703
    },
    {
        "content": "<p>?? <code>lake</code> is a package manager, it is the one responsible for setting up new projects and orienting people in the right direction</p>",
        "id": 370946223,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080740
    },
    {
        "content": "<p>so the default style guide is quite important for it</p>",
        "id": 370946262,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080760
    },
    {
        "content": "<p>although granted, it doesn't exactly write a whole lot of code except the lakefile and hello world project right now</p>",
        "id": 370946315,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080788
    },
    {
        "content": "<p>Yes, which should effect the templates it generates, but does not necessarily need to effect the codebase itself. In the same manner as the Lean 4 pretty printer vs the Lean 4 core code.</p>",
        "id": 370946320,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080794
    },
    {
        "content": "<p>yes, this is emphatically only about the output of the tool, not the codebase itself</p>",
        "id": 370946401,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080814
    },
    {
        "content": "<p>\"show by doing\" here meaning that when lake produces lean code it should be code that conforms to the style guide</p>",
        "id": 370946466,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080861
    },
    {
        "content": "<p>Oh, I was assuming \"show by doing\" meant \"show by doing\" in the codebase as opposed to the \"explicit recommendations\" meaning outputs.</p>",
        "id": 370946504,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080889
    },
    {
        "content": "<p>also module / folder hierarchy setups etc</p>",
        "id": 370946526,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080909
    },
    {
        "content": "<p>Yeah, which is the point of the template system, to make this possible to setup nicely and customize it to what ever style guides end up existing.</p>",
        "id": 370946635,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688080950
    },
    {
        "content": "<p>I don't think there is a huge need for non-default style templates, that sounds like a backup plan if we can't come to some consensus on the default style</p>",
        "id": 370946727,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688080998
    },
    {
        "content": "<p>Any changes to <code>math</code> template to make it more convenient to mathlib users is welcome.</p>",
        "id": 370946764,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081023
    },
    {
        "content": "<p>I severely doubt we will come to a consensus on default style if Leo and Sebastian already do not agree.</p>",
        "id": 370946890,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081071
    },
    {
        "content": "<p>Leo has not expressed any opinion on default style</p>",
        "id": 370946943,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081098
    },
    {
        "content": "<p>you are talking about lean4 project style</p>",
        "id": 370946996,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081126
    },
    {
        "content": "<p>He did express his strong opinion on parentheses for <code>if (&lt;- x)</code> (as opposed to <code>if &lt;- x</code>).</p>",
        "id": 370947008,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081131
    },
    {
        "content": "<p>within the context of code in the lean4 project</p>",
        "id": 370947054,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081160
    },
    {
        "content": "<p>I mean if he his enforcing it there, I suspect he would like that to be the default style.</p>",
        "id": 370947113,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081167
    },
    {
        "content": "<p>that's an unjustified assumption</p>",
        "id": 370947135,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081179
    },
    {
        "content": "<p>(which is why I have also adopted it)</p>",
        "id": 370947154,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081188
    },
    {
        "content": "<p>it is possible to have a style opinion and also not recommend it for everyone</p>",
        "id": 370947184,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081202
    },
    {
        "content": "<p>I mean, yes, that is possible, but it is not very likely.</p>",
        "id": 370947227,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081222
    },
    {
        "content": "<p>I have yet to hear someone assert that their style opinions would be a bad choice for a default style.</p>",
        "id": 370947269,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081244
    },
    {
        "content": "<p>for instance you might not feel comfortable having enough information to make a decision on behalf of others</p>",
        "id": 370947296,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081264
    },
    {
        "content": "<p>less so that it's bad and more that you aren't interested in forcing others to follow you</p>",
        "id": 370947373,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081288
    },
    {
        "content": "<p>That does not me you would not prefer it, simply that you are not confident enough to assert it.</p>",
        "id": 370947410,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081311
    },
    {
        "content": "<p>For example, I love <code>autoImplicit</code> and use it in my code, but I know how to tell when it is doing something bad and others might not feel the same way. So I am okay with mathlib taking a different direction here</p>",
        "id": 370947668,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081430
    },
    {
        "content": "<p>However, I think both you and I are generally confident enough to assert our opinions and generally would prefer if others followed them.</p>",
        "id": 370947717,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081453
    },
    {
        "content": "<p>Some features are more expert-oriented, and I would be more hesitant to use them in a default style than in my style</p>",
        "id": 370947796,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081499
    },
    {
        "content": "<p>Sure, I can agree with (and I share your views on <code>autoImplicit</code>).</p>",
        "id": 370947881,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081525
    },
    {
        "content": "<p>However, I think points of most contention generally are and will be aesthetic choices (and why I believe bikeshedding is so common).</p>",
        "id": 370947975,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081596
    },
    {
        "content": "<p>Individuals notions of aesthetic beauty vary and are generally strongly held.</p>",
        "id": 370948011,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081629
    },
    {
        "content": "<p>Which since, iirc you are a Philosophy PhD, you may have observed if you took a course in Aesthetics in undergrad.</p>",
        "id": 370948182,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081719
    },
    {
        "content": "<p>That's why you have to enter these discussions thinking \"what would I recommend to others\" and not \"what would I use\"</p>",
        "id": 370948192,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081722
    },
    {
        "content": "<p>that helps a lot to lower the heckles</p>",
        "id": 370948307,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081775
    },
    {
        "content": "<p>Yes, but when it comes to aesthetics, \"what would I recommend to others\" usually equals \"what would I use\".</p>",
        "id": 370948335,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081793
    },
    {
        "content": "<p>(I was a Math/CS undergrad)</p>",
        "id": 370948340,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081797
    },
    {
        "content": "<p>And then you become a philosophy PhD?</p>",
        "id": 370948391,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081830
    },
    {
        "content": "<p>CMU is weird</p>",
        "id": 370948399,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081839
    },
    {
        "content": "<p>Sounds like it! <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 370948460,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081882
    },
    {
        "content": "<p>For reference, I double majored in CS and Philosophy, and then when on to a CS PhD as that seemed more useful for future job opportunities.</p>",
        "id": 370948547,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081918
    },
    {
        "content": "<p>I already gave an example where there is an evidence based reason for general recommendation to differ from personal recommendation, because \"I\" am not \"the average person\" (which will hold true for various values of \"I\")</p>",
        "id": 370948555,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688081927
    },
    {
        "content": "<p>Yes, but that, importantly, was not an aesthetic choice.</p>",
        "id": 370948612,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688081971
    },
    {
        "content": "<p>I would qualify <code>autoImplicit</code> as convivence rather than aesthetics.</p>",
        "id": 370948726,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082014
    },
    {
        "content": "<p>there are non-aesthetic reasons you can give for most aspects of formatting</p>",
        "id": 370948785,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082054
    },
    {
        "content": "<p>if that's what you are thinking about</p>",
        "id": 370948808,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082066
    },
    {
        "content": "<p>When I say aesthetics, I would include character choices, naming, indentation, spacing, parentheses, etc.</p>",
        "id": 370948822,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082075
    },
    {
        "content": "<p>yes, all of the above</p>",
        "id": 370948840,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082088
    },
    {
        "content": "<p>Yes, there exist non-aesthetic rationales for some of them, but those are not often enough to choose a specific value / format out of the available options.</p>",
        "id": 370949057,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082206
    },
    {
        "content": "<p>I would expect a default style guide to contain some aesthetic opinions, aggregated over many people, but mostly non-aesthetic rationales like readability, consistency, searchability etc</p>",
        "id": 370949211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082299
    },
    {
        "content": "<p>together with a hefty amount of historical happenstance</p>",
        "id": 370949280,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082338
    },
    {
        "content": "<p>I agree. My argument is simply the \"aesthetic opinions\" part will invariably end up being essentially by fiat<br>\n of whatever the ruling party is (and by that I mean the group with the most sway, not necessarily the one with the most authority if the most authority chooses to delegate to e.g. consensus).</p>",
        "id": 370949495,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082453
    },
    {
        "content": "<p>well, I think it is usually the \"historical happenstance\" part that wins, based ultimately on the opinions of the people who got there first</p>",
        "id": 370949637,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082537
    },
    {
        "content": "<p>Yes, the \"ruling party\" of the time.</p>",
        "id": 370949667,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082554
    },
    {
        "content": "<p>because changing a lot of existing code is hard</p>",
        "id": 370949678,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082564
    },
    {
        "content": "<p>Very true.</p>",
        "id": 370949705,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082581
    },
    {
        "content": "<p>and disruptive</p>",
        "id": 370949710,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082585
    },
    {
        "content": "<p>so you get projects like lean4 repo which have a cross section of slightly different styles across different times in history</p>",
        "id": 370949826,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082629
    },
    {
        "content": "<p>Yep.</p>",
        "id": 370949913,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082676
    },
    {
        "content": "<p>but ultimately, decisions have to be made, so you get as many people together as you can and make a decision</p>",
        "id": 370950030,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082731
    },
    {
        "content": "<p>mathlib4 in particular had issues with this because we were rolling out code rapidly and needed someone to make a decision, and there was no one at the helm doing style work</p>",
        "id": 370950098,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082777
    },
    {
        "content": "<p>I imagine mathport largely decided a lot of that.</p>",
        "id": 370950142,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082797
    },
    {
        "content": "<p>yeah but what should mathport do?</p>",
        "id": 370950157,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082808
    },
    {
        "content": "<p>Whatever you and Daniel  ended up deciding?</p>",
        "id": 370950176,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082822
    },
    {
        "content": "<p>nope, many aspects were tweaked along the way</p>",
        "id": 370950208,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082841
    },
    {
        "content": "<p>Along with probably a bit of outside input when issues came up.</p>",
        "id": 370950266,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082847
    },
    {
        "content": "<p>mathport is a lot better now but it still can't quite get the naming convention right</p>",
        "id": 370950322,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082887
    },
    {
        "content": "<p>(in part because the information is literally not available)</p>",
        "id": 370950358,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370950208\">said</a>:</p>\n<blockquote>\n<p>nope, many aspects were tweaked along the way</p>\n</blockquote>\n<p>The key word here I feel is \"tweaked\". Mathport was thus the origin of the \"default style\" which was tweaked by the users as necessary, which is similar to the manner you suggested style guides be used.</p>",
        "id": 370950413,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688082937
    },
    {
        "content": "<p>but it was an iterative process, where mathport names something weirdly, a discussion ensues, and mathport is fixed or the naming convention updated</p>",
        "id": 370950527,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082972
    },
    {
        "content": "<p>hence \"aggregated aesthetic opinions\"</p>",
        "id": 370950553,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688082988
    },
    {
        "content": "<p>Yeah?</p>",
        "id": 370950584,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688083008
    },
    {
        "content": "<p>but yes, the dominant style was based on early conversations ultimately stemming to the decision to move to camel-case names for functions in lean 4, based on some internal microsoft user opinions and there I lose track of the origin</p>",
        "id": 370950663,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083051
    },
    {
        "content": "<p>for indentation, it's always been 2 space indent in lean as long as I can remember, but the 2 space indent of the body is new in lean 4, and the 4 space indent for the signature was a reaction because of readability issues with the 2 space version</p>",
        "id": 370950868,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083148
    },
    {
        "content": "<p>A \"historical happenstance\" with a very good non-aesthetic post-hoc justification. It makes its much more obvious which things are definitions/algorithms and which things are theorems/notation.</p>",
        "id": 370950912,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688083167
    },
    {
        "content": "<p>indeed</p>",
        "id": 370950958,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083191
    },
    {
        "content": "<blockquote>\n<p>It makes its much more obvious which things are definitions/algorithms and which things are theorems/notation.</p>\n</blockquote>\n<p>actually I'm not sure what you mean by this</p>",
        "id": 370951085,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083220
    },
    {
        "content": "<p>Though, since Lean ends up using all forms of casing style, there really is not an real debate about which to pick, but rather which to use what for.</p>",
        "id": 370951116,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688083235
    },
    {
        "content": "<p>there were some readability issues with the camel case theorem names, although the aesthetic one was also strong</p>",
        "id": 370951245,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370951085\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>It makes its much more obvious which things are definitions/algorithms and which things are theorems/notation.</p>\n</blockquote>\n<p>actually I'm not sure what you mean by this</p>\n</blockquote>\n<p>Now that definitions use camelCase and theorems use snake_case, it makes it easier in e.g. auto-completion to distinguish between them.</p>",
        "id": 370951300,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688083310
    },
    {
        "content": "<p>The one casing convention we don't use is <code>ALL_CAPS</code></p>",
        "id": 370951512,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083400
    },
    {
        "content": "<p>I guess because we don't have statics/constants?</p>",
        "id": 370951538,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083419
    },
    {
        "content": "<p>It also helps with mathlib's theorem naming style as it keeps definitions one word so that <code>fooCase_eq_barCase</code> is clearly two single functions wherase <code>foo_case_eq_bar_case</code> could be <code>foo case = bar case</code>.</p>",
        "id": 370951567,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688083436
    },
    {
        "content": "<p>right, that's the readability issue</p>",
        "id": 370951630,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083447
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20all/near/370951538\">said</a>:</p>\n<blockquote>\n<p>I guess because we don't have statics/constants?</p>\n</blockquote>\n<p>We do have them. But I think it is mostly because constants and functions are not sufficiently distinct in Lean to warrant a naming difference.</p>",
        "id": 370951761,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688083511
    },
    {
        "content": "<p>my favorite example involves the <a href=\"https://github.com/leanprover/std4/blob/d6ac3d1f72551a8fc5c7e72ef74cdb72bc44e129/Std/Data/List/Lemmas.lean#L1194-L1216\">theorems about how <code>map</code>, <code>filter</code> and <code>filter_map</code> interact</a></p>",
        "id": 370951774,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688083517
    },
    {
        "content": "<p>There are a lot of messages here, but I think I read enough to understand the disagreement about \"official style.\" <span class=\"user-mention\" data-user-id=\"315577\">@Mac</span> wants to be able to use the phrase \"official style\" to refer to the style present in Lean 4 core, using an etymology argument from Leo and Sebastian being in a position of authority, but <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> disagrees with calling this \"official style\" because (though he doesn't say it directly) the phrase \"official style\" would imply to anyone who heard it that it's somehow the recommended one. There's also the very good point that mathlib already has put in an incredibly large investment into creating an official style (in both the etymological and common senses) and imposing that style on mathlib.</p>\n<p>(I usually find etymology-based arguments to be a mott-and-bailey tactic: you find a definition of a word that's least objectionable, to get people to admit the word as a proper description, but then you silently switch to another meaning. I'd object to calling it an \"official style\" as well to make sure no one will (un)intentionally use this tactic. If you want, dictionaries themselves are just style guides on what words should mean, to help resolve disagreements.)</p>",
        "id": 371048845,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688113948
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/270676-lean4/topic/official.20style.3F/near/371048845\">said</a>:</p>\n<blockquote>\n<p>If you want, dictionaries themselves are just style guides on what words should mean, to help resolve disagreements.</p>\n</blockquote>\n<p>This is a funny, but largely apt analogy. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 371051304,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688114361
    },
    {
        "content": "<p>I'm not joking <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> But it's amusing</p>",
        "id": 371051467,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688114391
    },
    {
        "content": "<p>I know, but yeah it is amusing.</p>",
        "id": 371051666,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688114420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/270676-lean4/topic/official.20style.3F/near/371048845\">said</a>:</p>\n<blockquote>\n<p>I usually find etymology-based arguments to be a mott-and-bailey tactic: you find a definition of a word that's least objectionable, to get people to admit the word as a proper description, but then you silently switch to another meaning.</p>\n</blockquote>\n<p>I am a strong believer in etymological arguments for word meanings, as I think they are the only thing that can approach a plausible objective  \"correct\" notion of what a word should mean. However, I do concede that they can also be easily manipulated to achieve a desired result through selective rhetoric.</p>",
        "id": 371052445,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688114564
    },
    {
        "content": "<p>Meaning is a negotiation between multiple parties, and meanings of individual words are part of that negotiation. In a public discussion like this, we're negotiating whether \"official\" should apply in this context in this discussion in this community. Using an etymological argument is one sort of argument to support a meaning, and it can seem like it's more objective, but it's in the end still a style/aesthetic/practical argument for using some words to refer to some concept, to try to justify that the words won't refer to some other concept.</p>",
        "id": 371054903,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688115006
    },
    {
        "content": "<p>Don't get me wrong, I like etymologies a lot, and <a href=\"https://www.etymonline.com/\">https://www.etymonline.com/</a> is one of the websites I most frequently visit.</p>",
        "id": 371055052,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688115032
    },
    {
        "content": "<p>I see it mostly as a way to understand how words could possibly have obtained the meanings that they do, rather than trying to undertake some project to restore true meanings of words.</p>",
        "id": 371055620,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688115119
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/270676-lean4/topic/official.20style.3F/near/371054903\">said</a>:</p>\n<blockquote>\n<p>Meaning is a negotiation between multiple parties, and meanings of individual words are part of that negotiation. In a public discussion like this, we're negotiating whether \"official\" should apply in this context in this discussion in this community.</p>\n</blockquote>\n<p>Personally, I disagree with this notion of meaning, which I interpret to be akin to <a href=\"https://en.wikipedia.org/wiki/Philosophical_Investigations#Meaning_as_use\">Wittgenstein's use theory</a>.</p>",
        "id": 371582626,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688249778
    },
    {
        "content": "<p>I'm saying something different I think, which is that meaning takes active maintenance. We can't be certain we've meant anything to anyone unless we put in effort to check.</p>\n<p>Fierce debates about meanings of words are a good thing (it's putting energy into making sure we can be more certain we will be understood). I think it should be thought of as being like working on an API boundary for a network protocol, which can be implemented in clients any number of ways. Getting everyone synchronized can take a whole lot of effort and political will.</p>\n<p>Regarding \"official\", it's had the additional meaning \"authorized by authority\" since at least 1854, so I expect it to be a whole lot of work to get it to once again unambiguously mean \"of or relating to an office or post of authority\", even to just this Zulip.</p>",
        "id": 371594854,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688257069
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/270676-lean4/topic/official.20style.3F/near/371594854\">said</a>:</p>\n<blockquote>\n<p>I'm saying something different I think, which is that meaning takes active maintenance. We can't be certain we've meant anything to anyone unless we put in effort to check.</p>\n</blockquote>\n<p>That I mostly agree with.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/270676-lean4/topic/official.20style.3F/near/371594854\">said</a>:</p>\n<blockquote>\n<p>Regarding \"official\", it's had the additional meaning \"authorized by authority\" since at least 1854, so I expect it to be a whole lot of work to get it to once again unambiguously mean \"of or relating to an office or post of authority\", even to just this Zulip.</p>\n</blockquote>\n<p>Fair enough, but even in that case, there simply would not be an \"official style\", as Leo has yet to authorize one (afaik). Though, I imagine there could by a secondary debate on who qualifies as a Lean \"authority\".</p>",
        "id": 371604680,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688261590
    }
]