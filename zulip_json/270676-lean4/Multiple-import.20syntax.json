[
    {
        "content": "<p>Thoughts on adding built-in syntax for multiple import? something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">MyPackage.Namespace.</span><span class=\"o\">{</span><span class=\"n\">Basic</span><span class=\"o\">,</span><span class=\"n\">NotSoBasic</span><span class=\"o\">,</span><span class=\"n\">Lemmas</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>since we're trying to move away from the default files it seems like a good idea. (has this been discussed before? I feel like it has been, but I couldn't find any relevant threads)</p>",
        "id": 339658455,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678004618
    },
    {
        "content": "<p>can this be done with macros? Like if you first import <code>Std.MultiImport</code> or something and then get multi-import syntax? or is import a special syntax that can't be macro-ified?</p>",
        "id": 339658579,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678004692
    },
    {
        "content": "<p>I don't know the answer, but I do know that <a href=\"https://github.com/leanprover/lean4/blob/badfcdc49f677500d6c3b718204966911617007d/src/Lean/Parser/Module.lean#L39\">this function</a> is responsible for parsing the header, to get the list of modules to import.</p>",
        "id": 339666147,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1678009288
    },
    {
        "content": "<p>The header parser is at the top of the file, and it looks like it's not something you can override as a user:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"bp\">«</span><span class=\"n\">prelude</span><span class=\"bp\">»</span>  <span class=\"o\">:=</span> <span class=\"n\">leading_parser</span> <span class=\"s2\">\"prelude\"</span>\n<span class=\"kd\">def</span> <span class=\"bp\">«</span><span class=\"kn\">import</span><span class=\"bp\">»</span>   <span class=\"o\">:=</span> <span class=\"n\">leading_parser</span> <span class=\"s2\">\"import \"</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">optional</span> <span class=\"s2\">\"runtime\"</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">ident</span>\n<span class=\"kd\">def</span> <span class=\"n\">header</span>     <span class=\"o\">:=</span> <span class=\"n\">leading_parser</span> <span class=\"n\">optional</span> <span class=\"o\">(</span><span class=\"bp\">«</span><span class=\"n\">prelude</span><span class=\"bp\">»</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">ppLine</span><span class=\"o\">)</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">many</span> <span class=\"o\">(</span><span class=\"bp\">«</span><span class=\"kn\">import</span><span class=\"bp\">»</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">ppLine</span><span class=\"o\">)</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">ppLine</span>\n</code></pre></div>",
        "id": 339666703,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1678009568
    },
    {
        "content": "<p>What does <code>import runtime</code> do? I see it sets the module flag <code>runtimeOnly</code> but, after a quick search, I couldn't find where it is actually used.</p>",
        "id": 339762347,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1678065215
    },
    {
        "content": "<p>I found the flag used in <a href=\"https://github.com/leanprover/lean4/blob/3b50410ec0a8b83344d0f61df554a1024bdaf298/src/Lean/Environment.lean#L735\">Lean.importModules</a> where the flag causes it to ignore the import. That's probably the only effect?</p>",
        "id": 339766083,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1678069012
    },
    {
        "content": "<p>it's deprecated</p>",
        "id": 339766576,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678069525
    }
]