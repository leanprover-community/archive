[
    {
        "content": "<p>I am trying to convert a list of goals in <code>MessageData</code> format to a <code>String</code> that can be stored locally. The in-built <code>MessageData.toString</code> function produces outputs such as <code>goal ?_uniq.2199</code> instead of strings like <code>⊢ 1 = 1</code> that reflect the original data. Here is an MWE demonstrating the problem (with the <code>trace_goal_state</code> elaborator) and the expected output (with the <code>trace_goal_state'</code> elaborator).</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab</span> <span class=\"n\">Parser</span> <span class=\"n\">Term</span> <span class=\"n\">Meta</span> <span class=\"n\">Tactic</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"trace_goal_state\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">goals</span> <span class=\"bp\">←</span> <span class=\"n\">getUnsolvedGoals</span>\n  <span class=\"k\">let</span> <span class=\"n\">msg</span> <span class=\"bp\">←</span> <span class=\"n\">MessageData.toString</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">goalsToMessageData</span> <span class=\"n\">goals</span>\n  <span class=\"n\">logInfo</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"[GOAL STATE] {msg}\"</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- unexpected output</span>\n  <span class=\"n\">trace_goal_state</span> <span class=\"c1\">-- [GOAL STATE] goal ?_uniq.2333</span>\n  <span class=\"n\">rfl</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"trace_goal_state'\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">goals</span> <span class=\"bp\">←</span> <span class=\"n\">getUnsolvedGoals</span>\n  <span class=\"k\">let</span> <span class=\"n\">msg</span> <span class=\"o\">:=</span> <span class=\"n\">goalsToMessageData</span> <span class=\"n\">goals</span>\n  <span class=\"n\">logInfo</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">m</span><span class=\"bp\">!</span><span class=\"s2\">\"[GOAL STATE] {msg}\"</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- expected output</span>\n  <span class=\"n\">trace_goal_state'</span> <span class=\"c1\">-- [GOAL STATE] ⊢ 1 = 1</span>\n  <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>I suspected a missing \"environment\"/\"context\", but my attempts at fixing this have failed. I would greatly appreciate help in modifying the above code to produce strings with the goal state data.</p>",
        "id": 350749861,
        "sender_full_name": "Anand Rao Tadipatri",
        "timestamp": 1681817617
    },
    {
        "content": "<p>It looks like the difference is that <code>logInfo</code> inserts a <code>addMessageContext</code> function to add a <code>MessageData.withContext</code> node.</p>\n<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elab</span> <span class=\"s2\">\"trace_goal_state\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">goals</span> <span class=\"bp\">←</span> <span class=\"n\">getUnsolvedGoals</span>\n  <span class=\"k\">let</span> <span class=\"n\">msg</span> <span class=\"bp\">←</span> <span class=\"n\">MessageData.toString</span> <span class=\"bp\">&lt;|</span> <span class=\"bp\">←</span> <span class=\"n\">addMessageContext</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">goalsToMessageData</span> <span class=\"n\">goals</span>\n  <span class=\"n\">logInfo</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"[GOAL STATE] {msg}\"</span>\n</code></pre></div>",
        "id": 350768691,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1681821903
    },
    {
        "content": "<p>What helped me find this is that in the definition of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.MessageData.formatAux#doc\">docs4#Lean.MessageData.formatAux</a> there are two ways that goals are printed, one of which has <code>\"goal \"</code></p>",
        "id": 350769022,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1681821974
    },
    {
        "content": "<p>Thank you very much.</p>",
        "id": 350812017,
        "sender_full_name": "Anand Rao Tadipatri",
        "timestamp": 1681831000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"303675\">Anand Rao</span> has marked this topic as resolved.</p>",
        "id": 350812036,
        "sender_full_name": "Notification Bot",
        "timestamp": 1681831004
    }
]