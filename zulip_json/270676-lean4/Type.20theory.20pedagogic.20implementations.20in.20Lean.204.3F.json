[
    {
        "content": "<p>Hi,<br>\nI have been re-watching <span class=\"user-mention\" data-user-id=\"261512\">@Jonathan Sterling</span> giving a <a href=\"https://youtu.be/DEj-_k2Nx6o?si=WLBAUrnQPnFyuY5H\">presentation on YouTube</a> called How to code your own type theory.  It's fantastic. </p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"DEj-_k2Nx6o\" href=\"https://youtu.be/DEj-_k2Nx6o?si=WLBAUrnQPnFyuY5H\"><img src=\"https://uploads.zulipusercontent.net/445beaead53fa196cb75109c109e655741ed51b8/68747470733a2f2f692e7974696d672e636f6d2f76692f44456a2d5f6b324e78366f2f64656661756c742e6a7067\"></a></div><p>His example code is in OCaml and I wonder if somebody has written something like this in Lean? I'm not looking for a big complex implementation that would actually be useful for some practical purpose (e.g., the Lean 4 source code!). I mean something simple like what Jon shows in the presentation which is geared towards helping people learn the basics of implementing a type theory. </p>\n<p>I also wonder if there are any beginners books or articles on the implementation of type theory. I've read a fair amount of theoretical stuff about lambda calculus and various type systems but they always gloss over the essential nitty gritty that is required to actually write code to do it, or they give code examples that are arcane and incomprehensible (to me at least). </p>\n<p>Thanks again Jon for the great video.</p>",
        "id": 397627734,
        "sender_full_name": "Avi Craimer",
        "timestamp": 1697776667
    },
    {
        "content": "<p>There is a basic type checker example in the lean manual IIRC</p>",
        "id": 397631475,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697779291
    },
    {
        "content": "<p><a href=\"https://lean-lang.org/lean4/doc/examples/tc.lean.html\">https://lean-lang.org/lean4/doc/examples/tc.lean.html</a></p>",
        "id": 397631639,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697779378
    }
]