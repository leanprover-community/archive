[
    {
        "content": "<p>I have often seen pauses of multiple seconds on a white screen before pages like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat#doc\">docs#Nat</a> or <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddMonoidAlgebra.domCongr_single#doc\">docs#AddMonoidAlgebra.domCongr_single</a> show up. What are the possible reasons behind this? How does this link work in the first place?</p>",
        "id": 392216899,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695249529
    },
    {
        "content": "<p>cc: <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span></p>",
        "id": 392217055,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695249625
    },
    {
        "content": "<p>It forwards to the page generated by this snippet: <a href=\"https://github.com/leanprover/doc-gen4/blob/main/DocGen4/Output/Find.lean#L9\">https://github.com/leanprover/doc-gen4/blob/main/DocGen4/Output/Find.lean#L9</a> whose main job it is to call this javascript file: <a href=\"https://github.com/leanprover/doc-gen4/blob/main/static/find/find.js\">https://github.com/leanprover/doc-gen4/blob/main/static/find/find.js</a> so the things it should be spending time on are:</p>\n<ol>\n<li>Downloading declaration-data.bmp if it is not in cache</li>\n<li>parsing the JSON</li>\n<li>searching for the pattern</li>\n</ol>",
        "id": 392217168,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1695249710
    },
    {
        "content": "<p>I see, so any docs link has to download all of mathlib?</p>",
        "id": 392217275,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695249767
    },
    {
        "content": "<p>Not all of mathlib. I did reduce the decl data quite a lot while doing some optimization but it is still significant yes.</p>\n<p>Note that if you open these links in chrome they are basically instant, it is only slow in firefox for me. But I (as so often) know far too little about webdev to be able to make a guess as to why that is the case.</p>",
        "id": 392217353,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1695249835
    },
    {
        "content": "<p>Testing the links again, I seem to consistently get a pause of about 1 second, even after the data file is presumably in cache (on FF)</p>",
        "id": 392217492,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695249919
    },
    {
        "content": "<p>possibly also a useful data point, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/\">https://leanprover-community.github.io/mathlib4_docs/find/</a> also takes about a second to redirect to the 404</p>",
        "id": 392217912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695250201
    },
    {
        "content": "<p>For lean 3 we generated a stub page for every definition, making the redirection pretty instantaneous</p>",
        "id": 392219369,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695251092
    },
    {
        "content": "<p>This was also great for Twitter, since the stub page had meta tags containing the docs for just that declaration</p>",
        "id": 392219395,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695251115
    },
    {
        "content": "<p>It's not slow in Safari too. Seems to be a firefox thing.</p>",
        "id": 392219686,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1695251321
    },
    {
        "content": "<p>I think I found a bug in find.js, when I breakpoint <a href=\"https://github.com/leanprover/doc-gen4/blob/main/static/find/find.js#L52\">here</a> I see that <code>pattern</code> is assigned to <code>\"undefined\"</code>, not <code>undefined</code> which seems to be what the receiving code is expecting (when calling <code>find/</code> with no arguments as above)</p>",
        "id": 392220153,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695251650
    },
    {
        "content": "<p>Also the call to <code>fetchCachedDeclarationData</code> <a href=\"https://github.com/leanprover/doc-gen4/blob/main/static/declaration-data.js#L57\">here</a> is always returning <code>undefined</code>, even though the necessary files are cached</p>",
        "id": 392220804,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695252159
    },
    {
        "content": "<p>oh, maybe this is expected because of <a href=\"https://github.com/leanprover/doc-gen4/pull/133\">doc-gen#133</a></p>",
        "id": 392220974,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695252284
    },
    {
        "content": "<p>fix posted to <a href=\"https://github.com/leanprover/doc-gen4/pull/153\">doc-gen#153</a>, although it is difficult to test locally (a local server shows no slowdown, although I suspect an outdated cache was to blame)</p>",
        "id": 392230019,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695260728
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> it seems to be significantly faster on my firefox now, can you confirm?</p>",
        "id": 392266998,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1695282800
    },
    {
        "content": "<p>yes, all of the links seem to be much faster</p>",
        "id": 392267132,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695282847
    },
    {
        "content": "<p>I didn't test <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat#src\">src#Nat</a> but I think that's just an alias for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat#doc\">docs#Nat</a> now?</p>",
        "id": 392267295,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1695282950
    },
    {
        "content": "<p>yeah right now it is although that is fixable via the 2 step redirect as you suggested</p>",
        "id": 392267398,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1695282986
    }
]