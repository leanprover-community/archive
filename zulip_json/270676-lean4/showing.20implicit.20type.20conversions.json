[
    {
        "content": "<p>Is there a way to highlight instances of or turn off implicit type conversions? For example, the <code>v = x</code> in the <code>forall_</code> case here that I think is being implicitly converted from a <code>Prop</code> to a <code>Bool</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">isBoundIn</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">VarName</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Formula</span> <span class=\"bp\">â†’</span> <span class=\"n\">Bool</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">false</span>\n  <span class=\"bp\">|</span> <span class=\"n\">pred_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">false</span>\n  <span class=\"bp\">|</span> <span class=\"n\">not_</span> <span class=\"n\">phi</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">isBoundIn</span> <span class=\"n\">v</span> <span class=\"n\">phi</span>\n  <span class=\"bp\">|</span> <span class=\"n\">imp_</span> <span class=\"n\">phi</span> <span class=\"n\">psi</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">isBoundIn</span> <span class=\"n\">v</span> <span class=\"n\">phi</span> <span class=\"bp\">||</span> <span class=\"n\">isBoundIn</span> <span class=\"n\">v</span> <span class=\"n\">psi</span>\n  <span class=\"bp\">|</span> <span class=\"n\">forall_</span> <span class=\"n\">x</span> <span class=\"n\">phi</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">||</span> <span class=\"n\">isBoundIn</span> <span class=\"n\">v</span> <span class=\"n\">phi</span>\n</code></pre></div>",
        "id": 363592658,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685929955
    },
    {
        "content": "<p>Does using <code>==</code> work?  This should be the notation for Boolean equality: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=BEq#doc\">docs4#BEq</a>.</p>",
        "id": 363595032,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685931910
    },
    {
        "content": "<p>Both <code>=</code> and <code>==</code> type check fine. I'm sorry, I didn't mean to ask how to fix it, but for a way to highlight implicit coercions in cases like this so that I was better aware that I should have put <code>==</code> there instead of <code>=</code>.</p>",
        "id": 363597195,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685933665
    },
    {
        "content": "<p>I do not know if there is a <code>pp</code>-option to highlight this somehow in the infoview.  This is something that often works for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"kd\">def</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span> <span class=\"bp\">==</span> <span class=\"mi\">0</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">f</span>  <span class=\"c1\">-- def f : Bool := decide (0 = 0)</span>\n<span class=\"k\">#print</span> <span class=\"n\">g</span>  <span class=\"c1\">-- def g : Bool := 0 == 0</span>\n</code></pre></div>\n<p>The presence of <code>decide</code> highlights that Lean is doing some work to convert the <code>Prop</code> to a <code>Bool</code>.</p>",
        "id": 363600930,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685936467
    },
    {
        "content": "<p>Thank you. An option to turn off the implicit conversion might work too. Then I would get an error.</p>",
        "id": 363601072,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685936594
    },
    {
        "content": "<p>I do not know how to do this programmatically, but I suspect that you have a <code>DecidableEq</code> on <code>VarName</code>, maybe?  Disabling that should error on equalities, at least.  Here is an example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"kd\">instance</span><span class=\"o\">]</span> <span class=\"n\">instDecidableEqNat</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">):</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span>  <span class=\"c1\">-- type mismatch</span>\n<span class=\"kd\">def</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span> <span class=\"bp\">==</span> <span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 363603055,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685938138
    },
    {
        "content": "<p>Interesting. Thank you.</p>",
        "id": 363604485,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1685939288
    },
    {
        "content": "<p>I feel that this is only useful after the fact: you should already be aware of which decidable instance you have.  I am not sure how to cripple <code>decide</code>, nor whether there is also something else that might need disabling...  <span aria-label=\"man shrugging\" class=\"emoji emoji-1f937-200d-2642\" role=\"img\" title=\"man shrugging\">:man_shrugging:</span></p>",
        "id": 363604842,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1685939571
    }
]