[
    {
        "content": "<p>I wonder how to what is the code to do induction on k of the type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>:</mo><mi mathvariant=\"double-struck\">N</mi><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">k : \\mathbb{N}+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord mathbb\">N</span><span class=\"mord\">+</span></span></span></span>. In mathematics, we prove for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, and assume the result holds for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">k = j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> and prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mi>j</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k=j+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>. Thank you very much!</p>",
        "id": 387500130,
        "sender_full_name": "Chenyi Li",
        "timestamp": 1693117403
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=PNat.recOn#src\">src#PNat.recOn</a>.</p>",
        "id": 387500663,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693117938
    },
    {
        "content": "<p>Thank you very much! I would try this!</p>",
        "id": 387500717,
        "sender_full_name": "Chenyi Li",
        "timestamp": 1693118009
    },
    {
        "content": "<p>It is marked as <code>@[elab_as_elim]</code>, so I think you can just write <code>induction k</code> in tactic mode.</p>",
        "id": 387500728,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693118019
    },
    {
        "content": "<p>It needs to be tagged as <code>@[eliminator]</code> for that to work, elab as elim just changes the elaboration order.<br>\nFortunately you can just add  <code>attribute [eliminator] PNat.recOn</code> in your own file and it works fine.<br>\nLast I checked mathlib didn't have too many theorems (defs) tagged as eliminator. I'd be happy to see some more!</p>",
        "id": 387529557,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1693142076
    }
]