[
    {
        "content": "<p>When using <code>#check</code> on <code>@List.cons</code> it doesn't turn the implicit argument into an explicit one:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"bp\">@</span><span class=\"n\">List.cons</span> <span class=\"c1\">-- @List.cons : {α : Type u_1} → α → List α → List α</span>\n</code></pre></div>\n<p>The <code>@</code>-prefix seems to get lost during <code>elabTerm</code> and hence <code>inferType</code> has <code>BinderInfo.implicit</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Meta</span> <span class=\"n\">Elab</span> <span class=\"n\">Command</span> <span class=\"n\">Term</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">n</span>\n\n<span class=\"k\">#eval</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">e</span> <span class=\"bp\">←</span> <span class=\"n\">elabTerm</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">f</span><span class=\"o\">))</span> <span class=\"n\">none</span> <span class=\"c1\">-- Expr.const `f []</span>\n  <span class=\"n\">inferType</span> <span class=\"n\">e</span> <span class=\"c1\">-- Lean.Expr.forallE `n (Lean.Expr.const `Nat []) (Lean.Expr.const `Nat []) (Lean.BinderInfo.implicit)</span>\n</code></pre></div>\n<p>Is this a bug?</p>",
        "id": 404899955,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1701273797
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/elabTerm.20on.20.40f\">#lean4 &gt; elabTerm on @f</a> by <span class=\"user-mention silent\" data-user-id=\"372804\">Marcus Rossel</span>.</p>",
        "id": 404900026,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701273812
    },
    {
        "content": "<p><code>@</code> deactivates implicit argument insertion for this specific application, it does not change the resulting type (for which it would have to change the resulting term)</p>",
        "id": 404910016,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1701276882
    }
]