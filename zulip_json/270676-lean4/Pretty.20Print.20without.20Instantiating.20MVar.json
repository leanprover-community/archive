[
    {
        "content": "<p>Is there a way to pretty-print an expression with metavariables left uninstantiated? For example, suppose there is an expression <code>e = ?m</code>, is there a way to let <code>trace[Meta.debug] m!\"{e}\"</code> output <code>?m</code> even after we've instantiated the metavariable <code>?m</code>?<br>\nI've tried using <code>withNewMCtxDepth &lt;| trace[Meta.debug] m!\"{e}</code>, but it doesn't work.<br>\nBy the way, in version <code>lean4:nightly-2022-11-19</code>, <code>trace[Meta.debug] m!\"{e}\"</code> won't instantiate metavariables in <code>e</code> when pretty-printing. However, after updating to <code>lean4:nightly-2023-02-03</code>, the metavariables in <code>e</code> are instantiated.</p>",
        "id": 337938508,
        "sender_full_name": "Yicheng Qian",
        "timestamp": 1677304829
    },
    {
        "content": "<p>If this is for debugging, <code>toString e</code> should work. If you want real pretty-printing (rather than a textual representation of the raw <code>Expr</code>), I don't think there's any function that'll give you that.</p>\n<p>The behaviour you saw in the November version was presumably a bug where someone forgot to <code>instantiateMVars</code>.</p>",
        "id": 337996970,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1677330035
    },
    {
        "content": "<p>I think <code>set_option pp.instantiateMVars false</code> should do the job.</p>",
        "id": 338428568,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1677525355
    },
    {
        "content": "<p>You can <em>probably</em> set the option on an expression by calling <code>e.setOption `pp.instantiateMVars false</code></p>",
        "id": 338428775,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1677525413
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/270676-lean4/topic/Pretty.20Print.20without.20Instantiating.20MVar/near/338428568\">said</a>:</p>\n<blockquote>\n<p>I think <code>set_option pp.instantiateMVars false</code> should do the job.</p>\n</blockquote>\n<p>This does not work for me (also that option is false by default in <code>lean4:nightly-2023-02-03</code>). Finally I used this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">withoutMVarAssignments</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">MetaM</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">mctx</span> <span class=\"bp\">←</span> <span class=\"n\">getMCtx</span>\n  <span class=\"n\">Meta.withMCtx</span> <span class=\"o\">{</span><span class=\"n\">mctx</span> <span class=\"k\">with</span> <span class=\"n\">eAssignment</span> <span class=\"o\">:=</span> <span class=\"o\">{},</span> <span class=\"n\">lAssignment</span> <span class=\"o\">:=</span> <span class=\"o\">{}}</span> <span class=\"n\">m</span>\n</code></pre></div>",
        "id": 341211836,
        "sender_full_name": "Yicheng Qian",
        "timestamp": 1678589523
    }
]