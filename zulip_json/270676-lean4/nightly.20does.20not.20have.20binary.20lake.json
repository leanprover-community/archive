[
    {
        "content": "<p>On Windows, after updating mathlib to latest version, I get the following error.</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Floris@MSI MINGW64 /d/projects/mathlib4 ((41e9d745...))\n$ lake build\nerror: toolchain 'leanprover/lean4:nightly-2023-01-29' does not have the binary `C:\\Users\\Floris\\.elan\\toolchains\\leanprover--lean4---nightly-2023-01-29\\bin\\lake.exe`\n</code></pre></div>\n<p>Is this temporary?</p>",
        "id": 324581811,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1675077848
    },
    {
        "content": "<p>Broken download? Try deleting and reinstalling the toolchain.</p>",
        "id": 324583582,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1675078395
    },
    {
        "content": "<p>I deleted the folder. It didn't seem to contain much (no lake or lean). How do I reinstall the toolchain?</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Floris@MSI MINGW64 /d/projects/mathlib4 (port/Data.Finset.Pointwise)\n$ ls /c/Users/Floris/.elan/toolchains/leanprover--lean4---nightly-2023-01-29/bin -al\ntotal 199728\ndrwxr-xr-x 1 Floris 197121        0 Jan 30 12:19 ./\ndrwxr-xr-x 1 Floris 197121        0 Jan 30 12:19 ../\n-rwxr-xr-x 1 Floris 197121 69604352 Jan 29 08:19 libclang-cpp.dll*\n-rwxr-xr-x 1 Floris 197121 61553664 Jan 29 08:49 libleanshared.dll*\n-rwxr-xr-x 1 Floris 197121 73348608 Jan 29 08:19 libLLVM-15.dll*\n</code></pre></div>",
        "id": 324585166,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1675078819
    },
    {
        "content": "<p>Remove the entire toolchain folder and the corresponding folder in <code>.elan/update-hashes</code>. (This is how it works on Linux at least.)</p>",
        "id": 324594821,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1675081967
    },
    {
        "content": "<p>Ok, it probably was a broken download. After downloading the toolchain folder and the folder in <code>.elan/update-hashes</code> everything is working normally.</p>",
        "id": 324596634,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1675082594
    },
    {
        "content": "<p>Ideally there would be a lake command that forces a redownload of the current toolchain. But it's good to know the current method of deleting two folders.</p>",
        "id": 324596786,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1675082644
    },
    {
        "content": "<p>Maybe a <code>elan</code> command</p>",
        "id": 324597044,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1675082733
    },
    {
        "content": "<p>Ideally elan would detect the broken download! I'm actually surprised the HTTP library doesn't do that for us</p>",
        "id": 324599108,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1675083304
    },
    {
        "content": "<p>I don't understand much about HTTP but I would implement the failure detection with a hash match check. And I wouldn't be surprised if servers didn't compute hashes by default. But that's something that can be done by hand</p>",
        "id": 324599901,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1675083539
    },
    {
        "content": "<p>Just to remark that \"delete the directory and the corresponding file in <code>.elan/update-hashes</code>\" is also the solution to \"I accidentally edited a file in core Lean and now I am in orange bar hell\" which I give to UGs, once they've told me that re-downloading mathlib caches did not solve the problem. There is this rumour that core lean (3)  should be read-only if installed by tooling but apparently this only works for a proper subset of the standard OSs.</p>",
        "id": 324631784,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1675091446
    },
    {
        "content": "<p>That is correct, <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> implemented it for Linux and macOS. In any case, core is never recompiled in Lean 4.</p>",
        "id": 324633632,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1675091864
    },
    {
        "content": "<p>I think what was happening in lean 3 was that students were right clicking on a thing in a file (e.g. a mathlib file), being transported to core Lean and then accidentally pressing the space bar or whatever. I have not had any experience with teaching lean 4 yet (I'm starting in October) so I don't know if this is still a possibility and whether it still has such catastrophic consequences.</p>",
        "id": 324634179,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1675091962
    },
    {
        "content": "<p>I've (intentionally) tried to change something in core Lean 4 once just to see what would happen. No rebuild was triggered <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 324634757,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1675092070
    },
    {
        "content": "<blockquote>\n<p>Ideally elan would detect the broken download!</p>\n</blockquote>\n<p>I think there's two other failure modes where you end up with a broken toolchain:</p>\n<ul>\n<li>If you press ctrl-c while downloading, and</li>\n<li>when more than one elan is started at the same time (e.g. if you open and editor and run <code>lake exe cache get</code> without waiting)</li>\n</ul>",
        "id": 324753234,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1675104707
    }
]