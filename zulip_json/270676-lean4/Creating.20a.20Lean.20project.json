[
    {
        "content": "<p>Is there a reason why <a href=\"https://leanprover-community.github.io/install/project.html\">https://leanprover-community.github.io/install/project.html</a> recommends this particular build?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"bp\">+</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">02</span><span class=\"bp\">-</span><span class=\"mi\">04</span> <span class=\"n\">new</span> <span class=\"n\">my_project</span> <span class=\"n\">math</span>\n</code></pre></div>",
        "id": 385891894,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1692358073
    },
    {
        "content": "<p>The math template was changed after that toolchain. You don't have to use that toolchain strictly speaking. Later toolchains are fine.</p>",
        "id": 385893806,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692358764
    },
    {
        "content": "<p>However asking people to use a toolchain later than so and so, and then call <code>lake new</code> or <code>init</code> is two steps. This way, you get everything in one step, and you have a command that can be copied into the terminal.</p>",
        "id": 385894015,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692358838
    },
    {
        "content": "<p>From a documentation perspective it is less than ideal. For a tutorial/instructions on \"how to get started quickly\" this is more efficient.</p>",
        "id": 385894261,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692358922
    },
    {
        "content": "<p>Cannot I simply do <code>lake new my_project math</code> and obtain the newest version that my installation knows about?<br>\nAfterwards, I'll typically do <code>lake update</code> anyways.</p>",
        "id": 385895722,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1692359410
    },
    {
        "content": "<p>as long as your toolchain is newer than the suggested toolchain this will work.</p>",
        "id": 385896102,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692359538
    },
    {
        "content": "<p>I updated the wiki instructions with the new elan command implemented specifically for this task: <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#in-a-new-project\">https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#in-a-new-project</a><br>\nPlease give it a try and feel free to update the other documentation as well</p>",
        "id": 385896835,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692359798
    },
    {
        "content": "<p>It just says  lean-toolchain, without mentioning a specific toolchain.</p>",
        "id": 385900240,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692361014
    },
    {
        "content": "<p>Why do we need to mention it at all if we don't have to specify the toolchain date</p>",
        "id": 385900295,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692361031
    },
    {
        "content": "<p>I suppose I didn't give enough context there, please see <a href=\"#narrow/stream/270676-lean4/topic/elan/near/371306430\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/elan/near/371306430</a></p>",
        "id": 385901247,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692361424
    },
    {
        "content": "<p>ah okay now I get it. You can specify a path to (EDIT: some not all) lean4 projects and lake reads the lean-toolchain file of that project and installs it.</p>",
        "id": 385912289,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692365111
    },
    {
        "content": "<p>Could we make it work for arbitrary projects? <code>elan toolchain install &lt;project_path&gt;:lean-toolchain</code></p>",
        "id": 385913963,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692365503
    },
    {
        "content": "<p>What's your use case?</p>",
        "id": 385916092,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692365935
    },
    {
        "content": "<p>Dependencies. I have project <code>a</code> and I want to use it in project <code>b</code> and not deal with potential or actual toolchain mismatch hassles. So I would want to default to using the same toolchain in project <code>b</code> as I have in project <code>a</code>.</p>",
        "id": 385930451,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692369238
    },
    {
        "content": "<p>Use <code>cp</code>? <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 385935184,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692370469
    },
    {
        "content": "<p>How to keep the project's <code>lean-toolchain</code> in sync is a related but separate issue; this is specifically about acquiring an initial toolchain in the first place (which ideally is the same one you then use to build the project)</p>",
        "id": 385935736,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692370583
    },
    {
        "content": "<p>Wouldn't the second problem be solved for up to 1 dependency per project if the line in the lean-toolchain could reference the lean toolchain in another project?</p>",
        "id": 385967628,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692383304
    },
    {
        "content": "<p>How would it know the revision of the project? Do you want elan to parse the Lake manifest?</p>",
        "id": 385976709,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692387337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> I think <span class=\"user-mention\" data-user-id=\"466334\">@Shreyas Srinivas</span> is asking if a <code>lean-toolchain</code> file could just contain a file path to another toolchain file to use. For example, in a package depending on mahtlib, the package could just put <code>lake-packages/mathlib</code> or similar (maybe <code>dir:&lt;file-path&gt;</code>?) in the root <code>lean-toolchain</code> to have it delegate to mathlib's <code>lean-toolchain</code>.</p>",
        "id": 386171531,
        "sender_full_name": "Mac Malone",
        "timestamp": 1692496567
    },
    {
        "content": "<p>That can't work as we need the toolchain in order to materialize the dependency in the first place</p>",
        "id": 386196721,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1692517840
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/Creating.20a.20Lean.20project/near/386196721\">said</a>:</p>\n<blockquote>\n<p>That can't work as we need the toolchain in order to materialize the dependency in the first place</p>\n</blockquote>\n<p>Why can't the toolchain be deduced to be that mentioned in the lean-toolchain file in the provided path, and then materialize dependencies according to that toolchain?</p>",
        "id": 386253358,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692561014
    },
    {
        "content": "<p>But you need a version of lake/lean to get the dependency and put it in the right place to then read said file from</p>",
        "id": 386253604,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1692561221
    },
    {
        "content": "<p>Ah, I see. Lake <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊂</mo></mrow><annotation encoding=\"application/x-tex\">\\subset</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">⊂</span></span></span></span> toolchain</p>",
        "id": 386261473,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1692567259
    }
]