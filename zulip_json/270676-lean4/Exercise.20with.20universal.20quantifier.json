[
    {
        "content": "<p>Here's my attempt at the first problem from section 4 in <em>Theorem Proving in Lean 4</em>, using tactic mode.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">q</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Iff.intro</span>\n  <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">h</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">h</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>When I replace <code>sorry</code> by <code>intro y</code>, I get \"tactic 'introN' failed, insufficient number of binders<br>\n\". Any hints on how to proceed? Thanks. <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 370412857,
        "sender_full_name": "Isabel Dahlgren",
        "timestamp": 1687955836
    },
    {
        "content": "<p>Use <code>constructor</code></p>",
        "id": 370413236,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1687955912
    },
    {
        "content": "<p>The goal at this point is not a forall. It's <code>something ∧ something_else</code>, so it doesn't make sense to introduce a variable.</p>",
        "id": 370413403,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1687955949
    },
    {
        "content": "<p>That did it, thanks! <span aria-label=\"ok\" class=\"emoji emoji-1f44c\" role=\"img\" title=\"ok\">:ok:</span></p>",
        "id": 370414739,
        "sender_full_name": "Isabel Dahlgren",
        "timestamp": 1687956211
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"628409\">@Isabel Dahlgren</span>   When I was just starting out I made a tactic cheat sheet saying things like \"if the goal is <code>P ∧ Q</code> then use <code>constructor</code>, and if you want to use a hypothesis <code>h : P ∧ Q</code> then do <code>cases' h with hP hQ</code> (and then a fair few more lines with other common Lean things like <code>P → Q</code> or <code>∃ x, P x</code> etc).</p>",
        "id": 370426332,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687958237
    },
    {
        "content": "<p>Lean 4 version: <a href=\"https://github.com/madvorak/lean4-cheatsheet/blob/main/lean-tactics.pdf\">https://github.com/madvorak/lean4-cheatsheet/blob/main/lean-tactics.pdf</a></p>",
        "id": 370431306,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1687959110
    }
]