[
    {
        "content": "<p>Hi, I upload my work about the formalization of STLC with de Bruijn indices in Lean4 to github. <br>\n<a href=\"https://github.com/ElifUskuplu/Stlc_deBruijn\">https://github.com/ElifUskuplu/Stlc_deBruijn</a> <br>\nThis is the project suggested by <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> in recent SLMATH summer school. My aim is to formalize confluence and normalization in STLC. The work uses de Bruijn indices, and my main reference is the paper \"The Locally Nameless Representation\" by Arthur Chargu´eraud. I mostly used his Coq library. Currently, I'm almost done in confluence, but have not started to normalization. <br>\nI stuck at some point, if you take a look and help me, it would be great. <br>\nIn the <a href=\"https://github.com/ElifUskuplu/Stlc_deBruijn/blob/main/Stlc/confluence.lean\">confluence file</a> , the only missing part is the diamond property of parallel reduction. I have two problems here:</p>\n<p>1) I'm using some recursive calls, but I'm seeing the error <br>\n\"fail to show termination for  para_diamond with errors ... structural recursion cannot be used<br>\nfailed to prove termination, use <code>termination_by</code> to specify a well-founded relation\"  <br>\nHow can I solve this?<br>\n2) I have problems with some of the cases. You can see these in \"sorry\" parts. Any suggestion would be great.</p>",
        "id": 374593796,
        "sender_full_name": "Elif Uskuplu",
        "timestamp": 1689163515
    },
    {
        "content": "<p>The proof is rather long, so I didn't spend time debugging it. But usually the non-termination problem happens when an inductive argument is incorrectly used. I see that you are using the <code>cases</code> tactic. Isn't it likely that you need the induction hypothesis which you can get with <code>induction'</code> instead?</p>",
        "id": 374618909,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689168347
    },
    {
        "content": "<p>I tried to use induction, but induction hypotheses were weird, I couldn't get how I can use them. I'm beginner in Lean4 :) so I don't know which one is better in my case. Btw, is you mean <code>induction</code>, not <code>induction'</code>, right? Is there such a tactic?</p>",
        "id": 374639822,
        "sender_full_name": "Elif Uskuplu",
        "timestamp": 1689172033
    },
    {
        "content": "<p>There is an <code>induction'</code> which I use because it allows me to specify the names of the induction hypothesis</p>",
        "id": 374644187,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689172793
    },
    {
        "content": "<p>That's possible with induction as well though.</p>",
        "id": 374647361,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1689173367
    },
    {
        "content": "<p>It's worth thinking about what you're inducting on exactly, since it looks like you're needing to induct on the complexity of t1 and t2 together. You could set up a strong induction on the sum of their sizes or something like that.</p>",
        "id": 374647586,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689173404
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/270676-lean4/topic/STLC.20with.20de.20Bruijn/near/374647586\">said</a>:</p>\n<blockquote>\n<p>You could set up a strong induction on the sum of their sizes or something like that.</p>\n</blockquote>\n<p>How can I do that? I mean how strong induction works in Lean4?</p>",
        "id": 374653368,
        "sender_full_name": "Elif Uskuplu",
        "timestamp": 1689174450
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"622405\">@Elif Uskuplu</span> Here's a partial example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Prime</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">Nat.Prime</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"n\">using</span> <span class=\"n\">Nat.strongInductionOn</span>\n  <span class=\"n\">rename_i</span> <span class=\"n\">n</span> <span class=\"n\">ih</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Nat.Prime</span> <span class=\"n\">n</span>\n  <span class=\"bp\">·</span> <span class=\"n\">use</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">hp</span>\n  <span class=\"bp\">·</span> <span class=\"c\">/-</span>\n<span class=\"cm\">    n: ℕ</span>\n<span class=\"cm\">    ih: ∀ (m : ℕ), m &lt; n → m ≠ 1 → ∃ p, prime p ∧ p ∣ m</span>\n<span class=\"cm\">    h: n ≠ 1</span>\n<span class=\"cm\">    hp: ¬prime n</span>\n<span class=\"cm\">    ⊢ ∃ p, prime p ∧ p ∣ n</span>\n<span class=\"cm\">    -/</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 374667039,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689176955
    },
    {
        "content": "<p>Another partial one:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Tree</span>\n  <span class=\"bp\">|</span> <span class=\"n\">leaf</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Tree</span>\n  <span class=\"bp\">|</span> <span class=\"n\">node</span> <span class=\"o\">:</span> <span class=\"n\">Tree</span> <span class=\"bp\">→</span> <span class=\"n\">Tree</span> <span class=\"bp\">→</span> <span class=\"n\">Tree</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Tree.numLeaves</span> <span class=\"o\">:</span> <span class=\"n\">Tree</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">leaf</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">node</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">t1.numLeaves</span> <span class=\"bp\">+</span> <span class=\"n\">t2.numLeaves</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Tree.fringe</span> <span class=\"o\">:</span> <span class=\"n\">Tree</span> <span class=\"bp\">→</span> <span class=\"n\">List</span> <span class=\"n\">Nat</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">leaf</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">n</span><span class=\"o\">]</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">node</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">t1.fringe</span> <span class=\"bp\">++</span> <span class=\"n\">t2.fringe</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">Tree</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">t.numLeaves</span> <span class=\"bp\">=</span> <span class=\"n\">t.fringe.length</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">generalize</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">t.numLeaves</span> <span class=\"bp\">=</span> <span class=\"n\">n</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"n\">using</span> <span class=\"n\">Nat.strongInductionOn</span> <span class=\"n\">generalizing</span> <span class=\"n\">t</span>\n  <span class=\"n\">rename_i</span> <span class=\"n\">n</span> <span class=\"n\">ih</span>\n  <span class=\"n\">cases</span> <span class=\"n\">t</span>\n  <span class=\"n\">next</span> <span class=\"n\">v</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h.symm</span>\n  <span class=\"n\">next</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"c\">/-</span>\n<span class=\"cm\">    n : ℕ</span>\n<span class=\"cm\">    ih : ∀ (m : ℕ), m &lt; n → ∀ (t : Tree), Tree.numLeaves t = m → m = List.length (Tree.fringe t)</span>\n<span class=\"cm\">    t1t2 : Tree</span>\n<span class=\"cm\">    h : Tree.numLeaves (Tree.node t1 t2) = n</span>\n<span class=\"cm\">    ⊢ n = List.length (Tree.fringe (Tree.node t1 t2))</span>\n<span class=\"cm\">    -/</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 374671492,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689177755
    },
    {
        "content": "<p>Let me rephrase my termination problem again. You don't need to be familiar with locally nameless representation to get the info below: I'm trying to prove confluence by induction on the complexity of parallel reduction.</p>\n<p>Suppose I have <br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>t</mi><mn>2</mn><mo>→</mo><mi>u</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>u</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">t1 @ t2 \\rightarrow u1 @ u2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">2</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>t</mi><mn>2</mn><mo>→</mo><mi>v</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>v</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">t1 @ t2 \\rightarrow v1 @ v2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span></span></span></span>, <br>\nhere <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">@</mi></mrow><annotation encoding=\"application/x-tex\">@</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">@</span></span></span></span> stands for application <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span></span></span></span> stands for parallel reduction. It means<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>1</mn><mo>→</mo><mi>u</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t1 \\rightarrow u1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">1</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>1</mn><mo>→</mo><mi>v</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t1 \\rightarrow v1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1</span></span></span></span>, and<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>2</mn><mo>→</mo><mi>u</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">t2 \\rightarrow u2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">2</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>2</mn><mo>→</mo><mi>v</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">t2 \\rightarrow v2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span></span></span></span>. <br>\nBy induction, there are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">w1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">1</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">w2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">2</span></span></span></span> such that<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mn>1</mn><mo>→</mo><mi>w</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">u1 \\rightarrow w1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">1</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mn>1</mn><mo>→</mo><mi>w</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">v1 \\rightarrow w1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">1</span></span></span></span>, and<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mn>2</mn><mo>→</mo><mi>w</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">u2 \\rightarrow w2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">2</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mn>2</mn><mo>→</mo><mi>w</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">v2 \\rightarrow w2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">2</span></span></span></span>.  So we get<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>u</mi><mn>2</mn><mo>→</mo><mi>w</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>w</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">u1 @ u2 \\rightarrow w1 @ w2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">2</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>v</mi><mn>2</mn><mo>→</mo><mi>w</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>w</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">v1 @ v2 \\rightarrow w1 @ w2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">2</span></span></span></span>. There is no problem with induction and termination.</p>\n<p>Suppose I have<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mi>t</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>t</mi><mn>2</mn><mo>→</mo><mi>u</mi><msup><mn>1</mn><mrow><mi>u</mi><mn>2</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\lambda t1 @ t2 \\rightarrow u1^{u2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mi>t</mi><mn>1</mn><mi mathvariant=\"normal\">@</mi><mi>t</mi><mn>2</mn><mo>→</mo><mi>v</mi><msup><mn>1</mn><mrow><mi>v</mi><mn>2</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\lambda t1 @ t2 \\rightarrow v1^{v2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1@</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>,<br>\nhere <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> stands for abstraction and power notation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><msup><mn>1</mn><mrow><mi>u</mi><mn>2</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">u1^{u2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span> is an operation on terms called \"opening\". These reductions mean<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><msup><mn>1</mn><mi>x</mi></msup><mo>→</mo><mi>u</mi><msup><mn>1</mn><mi>x</mi></msup></mrow><annotation encoding=\"application/x-tex\">t1^x \\rightarrow u1^x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><msup><mn>1</mn><mi>x</mi></msup><mo>→</mo><mi>v</mi><msup><mn>1</mn><mi>x</mi></msup></mrow><annotation encoding=\"application/x-tex\">t1^x \\rightarrow v1^x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span> for any \"fresh\" variable <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>, and<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>2</mn><mo>→</mo><mi>u</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">t2 \\rightarrow u2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">2</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>2</mn><mo>→</mo><mi>v</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">t2 \\rightarrow v2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span></span></span></span>.<br>\nNOW, as before, I can use induction for the latter reductions, but if I try to use induction on the former, and say that for a fixed variable <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>, there is a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">w1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">1</span></span></span></span> such that<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><msup><mn>1</mn><mi>x</mi></msup><mo>→</mo><mi>w</mi><msup><mn>1</mn><mi>x</mi></msup></mrow><annotation encoding=\"application/x-tex\">u1^x \\rightarrow w1^x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><msup><mn>1</mn><mi>x</mi></msup><mo>→</mo><mi>w</mi><msup><mn>1</mn><mi>x</mi></msup></mrow><annotation encoding=\"application/x-tex\">v1^x \\rightarrow w1^x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span>, Lean4 complains about it.  </p>\n<p>I think the issue here is that Lean4 does not see <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><msup><mn>1</mn><mi>x</mi></msup></mrow><annotation encoding=\"application/x-tex\">t1^x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span> as a \"lower case\" to apply induction hypothesis. I need to apply induction hypotheses of a proposition of terms on \"opened terms\".  Is that possible? Does <code>termination_by</code> relate my problem? If so, how?</p>\n<p>Sorry for such a long (maybe not well-written) question. Thanks in advance.</p>",
        "id": 375081181,
        "sender_full_name": "Elif Uskuplu",
        "timestamp": 1689289050
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"622405\">Elif Uskuplu</span> has marked this topic as resolved.</p>",
        "id": 375642749,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689466039
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"622405\">Elif Uskuplu</span> has marked this topic as unresolved.</p>",
        "id": 375644807,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689467203
    },
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> , with a little trick in the statement of <code>para_diamond</code>, I've proved the proof of confluence fully structural without any <code>termination_by</code> trick. Thanks all for help.</p>",
        "id": 375645300,
        "sender_full_name": "Elif Uskuplu",
        "timestamp": 1689467466
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"622405\">Elif Uskuplu</span> has marked this topic as resolved.</p>",
        "id": 375645404,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689467524
    }
]