[
    {
        "content": "<p>I have a bit of a performance conundrum: an Aesop call which runs quickly (&lt;1s) in the editor but takes a very long time (&gt;30s) when I run <code>lake env lean &lt;testfile&gt;</code>. The culprit seems to be a function which removes certain elements from a <code>DiscrTree</code> which comes from a <code>ScopedPersistentEnvExtension</code>. Before I go on an epic minimisation adventure: any idea where this discrepancy might come from?</p>",
        "id": 348779809,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1681316837
    },
    {
        "content": "<p>I think I can at least say: no, I have never seen something like that before</p>",
        "id": 349029770,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1681372981
    },
    {
        "content": "<p>I've seen performance differences before, but never to this degree.  Like something would time out on the command line, but in the editor you'd need to lower the heartbeats from 200000 to 150000 to get the same exception.</p>",
        "id": 349198438,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1681415152
    },
    {
        "content": "<p>Precompilation is somehow implicated in my case: without precompilation, the server and command line are equally slow; with precompilation, the server is much faster.</p>",
        "id": 349203592,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1681416928
    },
    {
        "content": "<p>I think <code>lake env lean</code> doesn't enable precompilation.</p>",
        "id": 349203637,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1681416946
    },
    {
        "content": "<p>Nice, I guess that explains it. Now the question is just where this humongous performance difference comes from.</p>",
        "id": 349204186,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1681417129
    },
    {
        "content": "<p>Okay, my <code>DiscrTree</code> filtering function was double-accidentally-quadratic. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> Still unsure where the difference between precompilation and no precompilation comes from, but the immediate problem is solved.</p>",
        "id": 349221710,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1681424168
    },
    {
        "content": "<p>I'm not sure I understand, if the server used native code but the cmdline used the interpreter, isn't that a sufficient explanation?</p>",
        "id": 349287872,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1681457380
    },
    {
        "content": "<p>That is probably the explanation, yes. I'm still a bit unsure because the quadraticness was in the construction of large arrays, which presumably is done with compiled (core) functions in either case. So the only code that would benefit from the compilation would be the skeleton which traverses the <code>DiscrTree</code>, and getting a ~60x speedup from this seems weird. But probably I'm just misunderstanding something.</p>",
        "id": 349307605,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1681462601
    }
]