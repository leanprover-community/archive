[
    {
        "content": "<p>It looks like this was secretly fixed in <a href=\"https://github.com/leanprover/lean4/pull/914\">https://github.com/leanprover/lean4/pull/914</a></p>",
        "id": 267563260,
        "sender_full_name": "Chris B",
        "timestamp": 1641897507
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"228466\">Chris B</span> has marked this topic as resolved.</p>",
        "id": 267563273,
        "sender_full_name": "Notification Bot",
        "timestamp": 1641897516
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"228466\">Chris Bailey</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20Derived.20Ord.20instance/near/266143980\">said</a>:</p>\n<blockquote>\n<p>The derive handler for <code>Ord</code> currently compares fields from the bottom up. Is this intended or is it a bug?</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Color</span> <span class=\"n\">where</span>\n  <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Ord</span>\n\n<span class=\"c\">/-</span>\n<span class=\"cm\">[Elab.Deriving.ord]</span>\n<span class=\"cm\">[mutual</span>\n<span class=\"cm\">   private def ordColor✝ (x✝ : @Time.Color) (x✝¹ : @Time.Color) : Ordering✝ :=</span>\n<span class=\"cm\">     match x✝, x✝¹ with</span>\n<span class=\"cm\">     | @Time.Color.mk a✝ a✝¹ a✝², @Time.Color.mk b✝ b✝¹ b✝² =&gt;</span>\n<span class=\"cm\">       match compare✝ a✝² b✝² with</span>\n<span class=\"cm\">       | Ordering.lt✝ =&gt; Ordering.lt✝</span>\n<span class=\"cm\">       | Ordering.gt✝ =&gt; Ordering.gt✝</span>\n<span class=\"cm\">       | Ordering.eq✝ =&gt;</span>\n<span class=\"cm\">         match compare✝ a✝¹ b✝¹ with</span>\n<span class=\"cm\">         | Ordering.lt✝ =&gt; Ordering.lt✝</span>\n<span class=\"cm\">         | Ordering.gt✝ =&gt; Ordering.gt✝</span>\n<span class=\"cm\">         | Ordering.eq✝ =&gt;</span>\n<span class=\"cm\">           match compare✝ a✝ b✝ with</span>\n<span class=\"cm\">           | Ordering.lt✝ =&gt; Ordering.lt✝</span>\n<span class=\"cm\">           | Ordering.gt✝ =&gt; Ordering.gt✝</span>\n<span class=\"cm\">           | Ordering.eq✝ =&gt; Ordering.eq✝</span>\n<span class=\"cm\"> end,</span>\n<span class=\"cm\"> instance : Ord (@Time.Color) :=</span>\n<span class=\"cm\">   ⟨ordColor✝⟩]</span>\n<span class=\"cm\">-/</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>How do I see this debug text</p>",
        "id": 340270206,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1678252848
    },
    {
        "content": "<p>Probably <code>set_option trace.Elab.Deriving.ord true</code></p>",
        "id": 340279890,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1678258281
    }
]