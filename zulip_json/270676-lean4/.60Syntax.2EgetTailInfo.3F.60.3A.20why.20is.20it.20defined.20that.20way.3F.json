[
    {
        "content": "<p>I noticed that <code>Syntax.getTailInfo?</code> is defined like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">getTailInfo</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">SourceInfo</span>\n  <span class=\"bp\">|</span> <span class=\"n\">atom</span> <span class=\"n\">info</span> <span class=\"n\">_</span>   <span class=\"bp\">=&gt;</span> <span class=\"n\">info</span>\n  <span class=\"bp\">|</span> <span class=\"n\">ident</span> <span class=\"n\">info</span> <span class=\"bp\">..</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">info</span>\n  <span class=\"bp\">|</span> <span class=\"n\">node</span> <span class=\"n\">SourceInfo.none</span> <span class=\"n\">_</span> <span class=\"n\">args</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">args.findSomeRev</span><span class=\"bp\">?</span> <span class=\"n\">getTailInfo</span><span class=\"bp\">?</span>\n  <span class=\"bp\">|</span> <span class=\"n\">node</span> <span class=\"n\">info</span> <span class=\"n\">_</span> <span class=\"n\">_</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">info</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span>             <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>Note that <code>node info _ _    =&gt; info</code> means that we take the \"highest\" <code>SourceInfo</code>.</p>\n<p>This makes things a bit odd when we've constructed a synthetic syntax node out of original syntax nodes and want to look at the tail info, as now the tail info is <code>SourceInfo.synthetic ..</code>. This means that e.g. <code>unsetTrailing</code> doesn't work as I would have expected—it unsets this synthetic info instead of the actual trailing part of the rightmost <code>SourceInfo.original</code> source info buried in the node's arguments.</p>\n<p>It's not too much trouble to define my own versions of these functions which ignores synthetic nodes, but I was just wondering why this info was considered the \"tail\" in the first place, and/or if <code>unsetTrailing</code> ought to ignore synthetic nodes (or if it's functioning as intended).</p>",
        "id": 401323857,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1699608873
    },
    {
        "content": "<p>I'm also wondering about <code>setTailInfo</code>. Not only does it seem to behave differently, but it does something that I feel must be a bug—<code>info</code> is shadowed in the <code>node</code> match, and so it sets the info of the last possible node argument to <em>that node's</em> <code>info</code> (or else recurses deeper). This is a bug, right?</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>code for setTailInfo</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">setTailInfoAux</span> <span class=\"o\">(</span><span class=\"n\">info</span> <span class=\"o\">:</span> <span class=\"n\">SourceInfo</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">Syntax</span>\n  <span class=\"bp\">|</span> <span class=\"n\">atom</span> <span class=\"n\">_</span> <span class=\"n\">val</span>             <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">atom</span> <span class=\"n\">info</span> <span class=\"n\">val</span>\n  <span class=\"bp\">|</span> <span class=\"n\">ident</span> <span class=\"n\">_</span> <span class=\"n\">rawVal</span> <span class=\"n\">val</span> <span class=\"n\">pre</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">ident</span> <span class=\"n\">info</span> <span class=\"n\">rawVal</span> <span class=\"n\">val</span> <span class=\"n\">pre</span>\n  <span class=\"bp\">|</span> <span class=\"n\">node</span> <span class=\"n\">info</span> <span class=\"n\">k</span> <span class=\"n\">args</span>       <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">match</span> <span class=\"n\">updateLast</span> <span class=\"n\">args</span> <span class=\"o\">(</span><span class=\"n\">setTailInfoAux</span> <span class=\"n\">info</span><span class=\"o\">)</span> <span class=\"n\">args.size</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">args</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">node</span> <span class=\"n\">info</span> <span class=\"n\">k</span> <span class=\"n\">args</span>\n    <span class=\"bp\">|</span> <span class=\"n\">none</span>      <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span>                      <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">setTailInfo</span> <span class=\"o\">(</span><span class=\"n\">stx</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">info</span> <span class=\"o\">:</span> <span class=\"n\">SourceInfo</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">setTailInfoAux</span> <span class=\"n\">info</span> <span class=\"n\">stx</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">stx</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">stx</span>\n  <span class=\"bp\">|</span> <span class=\"n\">none</span>     <span class=\"bp\">=&gt;</span> <span class=\"n\">stx</span>\n</code></pre></div>\n</div></div>",
        "id": 401336700,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1699611259
    },
    {
        "content": "<p>Further, this is used by <code>unsetTrailing</code>; even if fixed in the obvious way, it seems like what's returned by <code>getTailInfo</code> and what's set by <code>setTailInfo</code> won't necessarily be the same, given that <code>setTailInfo</code> would set the deepest rightmost info, and <code>getTailInfo</code> returns the shallowest rightmost info. But...is this an issue with <code>unsetTrailing</code>, <code>getTailInfo?</code>, or <code>setTailInfo</code>?</p>",
        "id": 401337198,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1699611372
    }
]