[
    {
        "content": "<p>The end of the <a href=\"https://arxiv.org/pdf/1908.05647.pdf\">Counting Immutable Beans paper</a> mentions the idea of supporting some form of borrow-checking</p>\n<blockquote>\n<p>In order to statically approximate this extended system, we would need to extend our type system with support for some kind of lifetime annotations on return types as featured in Cyclone [Jim et al. 2002] and Rust [Matsakis and Klock 2014].</p>\n</blockquote>\n<p>I think I remember a dev log where this was briefly discussed. Is this idea (still) on the table, and if it is is there additional info on this somewhere, like a paper/blog post/zulip thread?</p>",
        "id": 324856165,
        "sender_full_name": "Adrien Champion",
        "timestamp": 1675155420
    },
    {
        "content": "<p>You might be interested in <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span>'s master's thesis to be finished and published in about a month that will discuss ownership and borrowing, though lifetime annotations are not part of it</p>",
        "id": 324859952,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1675156673
    }
]