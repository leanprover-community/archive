[
    {
        "content": "<p>Trying to run <code>lake update</code> in an old project returns:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">updating</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"mi\">08334</span><span class=\"n\">f552c6d6d6d8ae7ea02ac6dd2d88f51e083</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">weakLeanArgs'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.LeanLibConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">53</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">weakLeanArgs'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.LeanLibConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">has</span> <span class=\"n\">errors</span>\n</code></pre></div>\n<p>It looks like the Lean version of the project is too old to know about <code>weakLeanArgs</code>.</p>",
        "id": 387748038,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1693253147
    },
    {
        "content": "<p>The project is on <code>nightly-2023-06-20</code>.</p>",
        "id": 387748177,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1693253196
    },
    {
        "content": "<p>Updating the project <code>lean-toolchain</code> before running <code>lake update</code> will probably fix this, but I wanted to point out this isn't super user-friendly.</p>",
        "id": 387748359,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1693253251
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Yeah, the underlying issue here is that Lake should parse and compare the <code>lean-toolchain</code>s of projects and only permit a certain range.</p>",
        "id": 387749293,
        "sender_full_name": "Mac Malone",
        "timestamp": 1693253624
    },
    {
        "content": "<p>Well, I didn't want to stay on a version without <code>weakLeanArgs</code>. It sounds like lake missed the point when it should have called the golden instruction <code>cp lake-packages/mathlib/lean-toolchain .</code>.</p>",
        "id": 387749915,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1693253901
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> The problem is that Lake itself is too old, so it needs error out and be rerun within a newer <code>lean-toolchain</code>. It could give an informative error about this, though. Technically, it could also copy the new toolchain, but it would need some help from the user to know which package to take the toolchain from (since there could easily be another dependency which needs an even newer toolchain in the general case).</p>",
        "id": 387751520,
        "sender_full_name": "Mac Malone",
        "timestamp": 1693254588
    },
    {
        "content": "<p>I have also been getting this error. I ran <code>elan update</code> and <code>elan default leanprover/lean4:stable</code>beforehand. I haven't tried to do any updates for a while and was trying to update both Lean and the mathlib in my project. I'm not sure I understand what I need to do to fix it.</p>",
        "id": 394013093,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1696026619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"139442\">@Kayla Thomas</span> does running precisely the 4 steps in this comment work:</p>\n<p><a href=\"#narrow/stream/270676-lean4/topic/Updating.20using.20lake.20again/near/393929855\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Updating.20using.20lake.20again/near/393929855</a></p>",
        "id": 394017861,
        "sender_full_name": "Julian Berman",
        "timestamp": 1696029752
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> It did. Thank you!</p>",
        "id": 394018334,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1696030055
    },
    {
        "content": "<p>Do I need to do anything in addition to that? Did that update mathlib?</p>",
        "id": 394018463,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1696030130
    },
    {
        "content": "<p>I guess by reading the comment, it did.</p>",
        "id": 394018516,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1696030181
    }
]