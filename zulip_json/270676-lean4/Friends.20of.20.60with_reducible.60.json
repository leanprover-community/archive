[
    {
        "content": "<p>Is there something like <code>with_reducible</code> for other transparencies (in particular \"all\")?</p>\n<p>Simple question, but I couldn't track down <code>with_reducible</code>  in <a href=\"https://leanprover-community.github.io/mathlib4_docs\">#docs4</a> to answer it for myself.</p>",
        "id": 343786730,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1679519616
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Parser.Tactic.withReducible#doc\">docs4#Lean.Parser.Tactic.withReducible</a> (I guessed the name based on how these declarations are normally capitalized vs the tactic itself).<br>\nSo looks like you want <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Parser.Tactic.withUnfoldingAll#doc\">docs4#Lean.Parser.Tactic.withUnfoldingAll</a> ?</p>",
        "id": 343787180,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1679519764
    },
    {
        "content": "<p>In increasing order of what they allow to be unfolded, there's <code>with_reducible</code>, <code>with_reducible_and_instances</code>, (missing: <code>with_default</code>), <code>with_unfolding_all</code>.</p>\n<p>When metaprogramming, there's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Meta.withTransparency#doc\">docs4#Lean.Meta.withTransparency</a> and specializations to particular transparencies.</p>",
        "id": 343787852,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679519977
    },
    {
        "content": "<p>Thank you both! <code>with_unfolding_all</code> is what I was after.</p>\n<p>I'm not sure I understand the difference between <code>with_reducible</code> and <code>Lean.Parser.Tactic.withReducible</code>.  One is a syntax, the other is a ParserDescr?  Would it be possible to have both versions indexed in the documentation?</p>",
        "id": 343788433,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1679520189
    },
    {
        "content": "<p>I see I can ctrl-click from a use of <code>with_reducible</code> to the declaration <code>Lean.Elab.Tactic.evalWithReducible</code>, but is there a way to go in the other direction?</p>",
        "id": 343788663,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1679520266
    },
    {
        "content": "<p>If you right click there should be both an option to go to definition and go to declaration, one of those takes you to where the parser is defined and one of them to where the elaborator is defined</p>",
        "id": 343789254,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1679520485
    },
    {
        "content": "<p>Very instructive, thank you! I had never even realised there was a difference.</p>",
        "id": 343796343,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1679523634
    },
    {
        "content": "<p>The distinction is a bit arbitrary. Now that we have go to definition with a choice of targets with <a href=\"https://github.com/leanprover/lean4/pull/1767\">https://github.com/leanprover/lean4/pull/1767</a>, I was wondering whether we should simply do the same here and drop go to declaration.</p>",
        "id": 343903540,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1679560239
    }
]