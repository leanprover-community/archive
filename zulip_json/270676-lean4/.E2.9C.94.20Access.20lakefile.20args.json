[
    {
        "content": "<p>I'm trying to write a lakefile that will import a package from a local path that isn't necessarily fixed, but I'm not sure how to do that. The two main ways I understand how to use <code>require</code> in a lake file are:</p>\n<p><code>require foo from \"fixedpath\"</code><br>\n<code>require bar from git \"giturl\"</code></p>\n<p>Ideally, what I would like to do is something like <code>require foo from MYPATH</code> where MYPATH is either:</p>\n<ul>\n<li>An argument that can be passed in when calling lake build (e.g. lake build --MYPATH=\"mypath\")</li>\n<li>An environment variable that can be set in the shell that calls lake build (e.g. export MYPATH=\"mypath\"; lake build)</li>\n</ul>\n<p>Unfortunately, I haven't been able to figure out how to do either of these things. Any advice would be appreciated. Thanks!</p>",
        "id": 380843609,
        "sender_full_name": "Josh Clune",
        "timestamp": 1690925897
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"436568\">@Josh Clune</span> You can pass options to the Lake configuration via <code>lake -Kkey=val</code> and read them inside it using <code>let val? : Option String := get_config? key</code>. Adapting to your example, you could add this to your lakefile:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">mypath</span> <span class=\"o\">:=</span> <span class=\"n\">FilePath.mk</span> <span class=\"bp\">&lt;|</span> <span class=\"o\">(</span><span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">MYPATH</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">getD</span> <span class=\"s2\">\"defaultVal\"</span>\n<span class=\"n\">require</span> <span class=\"n\">foo</span> <span class=\"k\">from</span> <span class=\"n\">mypath</span>\n</code></pre></div>\n<p>And then invoke Lake via <code>lake build -KMYPATH=\"mypath\"</code>.</p>",
        "id": 380846633,
        "sender_full_name": "Mac Malone",
        "timestamp": 1690926844
    },
    {
        "content": "<p>That seems to be exactly what I was looking for. Thanks!</p>",
        "id": 380848257,
        "sender_full_name": "Josh Clune",
        "timestamp": 1690927366
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"436568\">Josh Clune</span> has marked this topic as resolved.</p>",
        "id": 380848261,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690927368
    }
]