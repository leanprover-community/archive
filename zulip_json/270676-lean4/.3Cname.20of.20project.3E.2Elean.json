[
    {
        "content": "<p>In Mathlib we have this file <code>Mathlib.lean</code> which always seemed pretty pointless to me: it's just a list of the other lean files in the project so clearly it could be auto-generated, for example.</p>\n<p>I'm giving some Lean 4 lectures in Bengaluru so thought I'd make my first Lean 4 project depending on mathlib. I followed the instructions in the mathlib4 README and repo creating worked fine. The repo is called <code>IIScExperiments</code> and I have a file <code>IIScExperiments.lean</code> that had some kind of hello world boilerplate. I deleted the boilerplate and replaced it with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">IIScExperiments.GroupTheoryQuestions</span>\n<span class=\"kn\">import</span> <span class=\"n\">IIScExperiments.GroupTheorySolutions</span>\n</code></pre></div>\n<p>because I'd written some basic group theory stuff; I had a file full of sorrys in the questions file and the sorrys are filled in in the solutions file. But now I get errors in that file, because I have two definitions for each declaration, a sorried one and an unsorried one. </p>\n<p>What is the point of this file anyway? Can I just delete it?</p>",
        "id": 346601770,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680535070
    },
    {
        "content": "<p>I think that without that file <code>lake build</code> does not work, but I don't know why it seems to be needed.</p>",
        "id": 346602229,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680535170
    },
    {
        "content": "<p>What if my project is going to be in total about 5 standalone lean files, none of which imports any other, and my audience is not likely to have a clue about the command line so are unlikely to ever be typing <code>lake</code> anything?</p>\n<p>Oh hang on --  does this mean that they can't get mathlib oleans? :-/</p>",
        "id": 346602858,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680535291
    },
    {
        "content": "<p>Essentially there are two points to this file:</p>\n<ul>\n<li>It allows others to write <code>import &lt;name of project&gt;</code>, which I guess is not relevant in your case</li>\n<li>It defines what Lean files Lake thinks are part of the project (library, to be more specific): everything needed to build this single file. There are ways to do that without that file though: <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20.60leanproject.20build.60.20equivalent/near/329451916\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/.E2.9C.94.20.60leanproject.20build.60.20equivalent/near/329451916</a></li>\n</ul>\n<p>In the end, if you never import a file from your project anywhere or run <code>lake build</code> at all, the file should be irrelevant</p>",
        "id": 346603673,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1680535467
    },
    {
        "content": "<p>I can probably make it so that no file in my project imports any other file. What if I just want one or two files to import one other file though? (e.g. I could have a \"natural numbers 1: addition and multiplication\" solutions file which I might want to import in the \"natural numbers 2: total order\" questions and solutions files). In this case can I get away with some kind of minimal &lt;name of project&gt;.lean file?</p>",
        "id": 346604520,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680535625
    },
    {
        "content": "<p>In that case I think you'll want to follow the setup in the link</p>",
        "id": 346604990,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1680535724
    },
    {
        "content": "<p>With more context, including all .lean files in the project directory: <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20.60leanproject.20build.60.20equivalent/near/329459925\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/.E2.9C.94.20.60leanproject.20build.60.20equivalent/near/329459925</a></p>",
        "id": 346605186,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1680535777
    }
]