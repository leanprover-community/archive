[
    {
        "content": "<p>Hi. As part of my translation project from Lean to Dedukti, I must know the universe levels of the domain and image in the <code>Lean.Expr.forallE</code> case (these levels will be encoded as function arguments in the translation), and so would like to use some function that infers the type of a given expression. I looked into how this is done interactively on hover, and was led to <code>Info.fmtHover?</code>, which makes use of <code>Meta.inferType</code> with the elaboration context/state reconstructed using the <code>InfoTree</code>. However, I am currently just using the <code>ConstMap</code> output of <code>Lean.Elab.runFrontend</code>as a starting point for my translation, and do not build any of the context/state necessary for <code>MetaM.run</code>.</p>\n<p>So, my question is: is it necessary for me to build the <code>MetaM</code> context/state alongside translation (e.g. by having my translation monad extend <code>MetaM</code>) if I want to call <code>Meta.inferType</code>, or is there a simpler means by which I can extract this information (perhaps from the <code>.olean</code> files)? Or, better yet, is there a way for me to know the sort of the domain and image in the <code>Lean.Expr.forallE</code> case without having to infer types in general?</p>",
        "id": 378402478,
        "sender_full_name": "Rish Vaishnav",
        "timestamp": 1690278106
    },
    {
        "content": "<p>It does sound like you're making life hard for yourself by avoiding <code>MetaM</code>.</p>",
        "id": 378403040,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690278223
    },
    {
        "content": "<p>Any non-trivial (e.g. type-aware) transformation that wants to descend into terms usually should be inside <code>MetaM</code>, yes</p>",
        "id": 378403371,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1690278286
    },
    {
        "content": "<p>Ah, so there's no way around it it seems. Thanks, I will try to do my translation inside of <code>MetaM</code> and will ask if I run into any difficulties.</p>",
        "id": 378405553,
        "sender_full_name": "Rish Vaishnav",
        "timestamp": 1690278711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"373814\">Rish Vaishnav</span> has marked this topic as resolved.</p>",
        "id": 378407554,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690279102
    }
]