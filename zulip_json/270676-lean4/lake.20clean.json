[
    {
        "content": "<p>Is there a specific reason why <code>lake clean</code> doesn't wipe out the <code>lean_packages</code> folder?</p>",
        "id": 289211429,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1657554673
    },
    {
        "content": "<p>It is designed just to remove build outputs, not dependencies. Also, why would you want to delete <code>lean_packages</code> anyway? Furthermore, there is an important file in <code>lean_packages</code>, <code>manifest.json</code> that should not be deleted (and should be commited) as it helps with reproducible builds. Hopefully that makes sense?</p>",
        "id": 289235383,
        "sender_full_name": "Mac",
        "timestamp": 1657566210
    },
    {
        "content": "<p>I was getting a mysterious error because I was bumping the toolchain and a wrong version of a dependency was sticking in my <code>lean_packages</code> folder. So I had to delete it manually anyway</p>",
        "id": 289235931,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1657566469
    },
    {
        "content": "<p>The proper solution seems to be running <code>lake update</code>, in case someone else faces this issue of out-of-date dependencies</p>",
        "id": 289507080,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1657739678
    },
    {
        "content": "<p>does <code>lake clean</code> do something other than <code>rm -rf build</code>? I've been getting different build results for the two commands and from the description on the lake repo it isn't clear if it's doing something else.</p>",
        "id": 381517795,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1691075137
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"578936\">@Bhakti Shah</span> <code>lake clean</code> does what is essentially <code>rm -rf build</code> for both the root package and all its dependencies. Running <code>rm -rf build</code> from the root of the package will just delete the build directory for the root (not its dependencies), so that may explain the difference. Also, on Windows, <code>lake clean</code> is a bit weaker than <code>rm -rf build</code> because it cannot delete files if they are already in use (e.g., an <code>olean</code> loaded by a module being edited in VSCode). This is due to limitations with the programming primitive used by <code>lake clean</code>.</p>",
        "id": 381586701,
        "sender_full_name": "Mac Malone",
        "timestamp": 1691089537
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 381594825,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1691091935
    }
]