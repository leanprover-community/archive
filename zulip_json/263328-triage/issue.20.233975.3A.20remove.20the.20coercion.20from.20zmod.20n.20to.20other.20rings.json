[
    {
        "content": "<p>Today I chose issue 3975 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/3975\">remove the coercion from zmod n to other rings</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> (@jcommelin) on 2020-08-29<br>\nLabels: needs-refactor</p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 228779774,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1614867682
    },
    {
        "content": "<p>Today I chose issue 3975 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/3975\">remove the coercion from zmod n to other rings</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> (@jcommelin) on 2020-08-29<br>\nLabels: needs-refactor</p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 235075456,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1618755762
    },
    {
        "content": "<p>Today I chose issue 3975 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/3975\">remove the coercion from zmod n to other rings</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> (@jcommelin) on 2020-08-29<br>\nLabels: needs-refactor</p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 261139202,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1636640380
    },
    {
        "content": "<p>Today I chose issue 3975 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/3975\">remove the coercion from zmod n to other rings</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> (@jcommelin) on 2020-08-29<br>\nLabels: needs-refactor</p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 264161319,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1638973233
    },
    {
        "content": "<p>Today I chose issue 3975 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/3975\">remove the coercion from zmod n to other rings</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> (@jcommelin) on 2020-08-29<br>\nLabels: needs-refactor</p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 272693333,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1645452814
    },
    {
        "content": "<p>Today I chose issue 3975 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/3975\">remove the coercion from zmod n to other rings</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> (@jcommelin) on 2020-08-29<br>\nLabels: needs-refactor</p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 300543996,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1664029058
    },
    {
        "content": "<p>Today I chose issue 3975 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/3975\">remove the coercion from zmod n to other rings</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> (@jcommelin) on 2020-08-29<br>\nLabels: needs-refactor</p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 368249539,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1687356426
    },
    {
        "content": "<p>Today I chose issue 3975 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/3975\">remove the coercion from zmod n to other rings</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> (@jcommelin) on 2020-08-29<br>\nLabels: needs-refactor</p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 379520719,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1690553217
    },
    {
        "content": "<p>I used to be really anti this coercion full stop but recently I've been working with a student who has been using them. However they seem to have to continually change the coercion to the coercion from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mi>n</mi><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z/n\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathbb\">Z</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> followed by the sensible coercion from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> to the target ring. So perhaps one approach is to allow the coercion to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> but not allow it in general?</p>",
        "id": 379528335,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690554535
    },
    {
        "content": "<p>But the coercion to <code>Int</code> is quite unnatural from a maths POV. So if that's to be used, I would rather just see it appear explicitly in the goal view as a named function.</p>",
        "id": 379699311,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1690610980
    },
    {
        "content": "<p>Yes; the advantage is that the coercion to Int is just one unnatural function and developing some API for it is I <em>think</em> a better way to go than introducing all these weird functions from Z/nZ to any ring and then having even less that one can say about them.</p>\n<p>Maybe the answer is just to use API for <code>val</code> (the map to Nat) and then demand that the user goes through Nat every time, i.e. remove the coercion and encourage the route via Nat. I just suggested int because you sometimes want to do subtraction.</p>",
        "id": 379727162,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690620421
    },
    {
        "content": "<p>The route through <code>val</code> is nonsense for <code>ZMod 0</code> though</p>",
        "id": 379744309,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690624666
    },
    {
        "content": "<p>Aah! So maybe we want to encourage the route through Int?</p>",
        "id": 379753386,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690626745
    },
    {
        "content": "<p>I mean, probably we actualy want to encourage the route through <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ZMod.lift#doc\">docs#ZMod.lift</a></p>",
        "id": 379757174,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690627624
    },
    {
        "content": "<p>The issue is that sometimes you really do want to lift from Z/nZ to Z, e.g. to do some auxiliary construction and then prove it's well-defined.</p>",
        "id": 379758893,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690628020
    }
]