[
    {
        "content": "<p>has Serman-Morrison formula been formalised? if not, what is the closest theorem we have?</p>",
        "id": 390162055,
        "sender_full_name": "Yufei Liu",
        "timestamp": 1694363319
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"497480\">@MohanadAhmed</span> may have thought about this</p>",
        "id": 390163902,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694365028
    },
    {
        "content": "<p>Yes it was in an old PR I made on the matrix cookbook.</p>",
        "id": 390176330,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1694374867
    },
    {
        "content": "<p>You can find it here: (<a href=\"https://github.com/eric-wieser/lean-matrix-cookbook/pull/3/files#diff-111c27a44f916fed8abc2dc66500d634638917368614320e1508be1d77f3c636R97\">https://github.com/eric-wieser/lean-matrix-cookbook/pull/3/files#diff-111c27a44f916fed8abc2dc66500d634638917368614320e1508be1d77f3c636R97</a>)</p>",
        "id": 390176365,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1694374883
    },
    {
        "content": "<p>For completeness here is the Lean 3 code that I wrote at that time:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">sherman_morrison</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">m</span> <span class=\"n\">m</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">hA</span><span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"n\">A.det</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">hB</span><span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"n\">B.det</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">hQ</span><span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">V</span> <span class=\"bp\">⬝</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">⬝</span> <span class=\"n\">U</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">det</span><span class=\"o\">}:</span>\n  <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">U</span><span class=\"bp\">⬝</span><span class=\"n\">B</span><span class=\"bp\">⬝</span><span class=\"n\">V</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">-</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹⬝</span><span class=\"n\">U</span><span class=\"bp\">⬝</span><span class=\"o\">(</span><span class=\"n\">B</span><span class=\"bp\">⁻¹+</span><span class=\"n\">V</span><span class=\"bp\">⬝</span><span class=\"n\">A</span><span class=\"bp\">⁻¹⬝</span><span class=\"n\">U</span><span class=\"o\">)</span><span class=\"bp\">⁻¹⬝</span><span class=\"n\">V</span> <span class=\"bp\">⬝</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">inv_eq_right_inv</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix.add_mul</span><span class=\"o\">,</span> <span class=\"n\">matrix.mul_sub</span><span class=\"o\">,</span> <span class=\"n\">mul_nonsing_inv</span><span class=\"o\">],</span>\n  <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">matrix.mul_assoc</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">},</span>\n  <span class=\"n\">set</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"bp\">⁻¹+</span><span class=\"n\">V</span><span class=\"bp\">⬝</span><span class=\"n\">A</span><span class=\"bp\">⁻¹⬝</span><span class=\"n\">U</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_nonsing_inv_cancel_left</span><span class=\"o\">,</span> <span class=\"n\">matrix.mul_sub</span><span class=\"o\">,</span> <span class=\"n\">sub_add_sub_comm</span><span class=\"o\">,</span>\n    <span class=\"n\">matrix.mul_assoc</span> <span class=\"n\">_</span> <span class=\"n\">Q</span><span class=\"bp\">⁻¹</span> <span class=\"n\">_</span><span class=\"o\">,</span>  <span class=\"n\">matrix.mul_assoc</span> <span class=\"n\">U</span> <span class=\"o\">(</span><span class=\"n\">Q</span><span class=\"bp\">⁻¹⬝</span><span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">],</span>\n\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">U</span> <span class=\"bp\">⬝</span> <span class=\"n\">B</span> <span class=\"bp\">⬝</span> <span class=\"n\">V</span> <span class=\"bp\">⬝</span> <span class=\"o\">(</span><span class=\"n\">A</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">⬝</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"bp\">⬝</span> <span class=\"o\">(</span><span class=\"n\">Q</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">⬝</span> <span class=\"n\">V</span> <span class=\"bp\">⬝</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹</span><span class=\"o\">)))</span>\n    <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"bp\">⬝</span> <span class=\"n\">B</span> <span class=\"bp\">⬝</span> <span class=\"n\">V</span> <span class=\"bp\">⬝</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">⬝</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"bp\">⬝</span> <span class=\"o\">(</span><span class=\"n\">Q</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">⬝</span> <span class=\"n\">V</span> <span class=\"bp\">⬝</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">matrix.mul_assoc</span> <span class=\"n\">_</span> <span class=\"n\">A</span><span class=\"bp\">⁻¹</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">matrix.mul_assoc</span> <span class=\"n\">_</span> <span class=\"n\">U</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">matrix.add_mul</span><span class=\"o\">,</span>\n  <span class=\"n\">nth_rewrite</span> <span class=\"mi\">1</span> <span class=\"bp\">←</span> <span class=\"n\">matrix.mul_one</span> <span class=\"n\">U</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span>  <span class=\"n\">mul_nonsing_inv</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">matrix.mul_assoc</span> <span class=\"n\">_</span> <span class=\"n\">B</span> <span class=\"n\">_</span><span class=\"o\">],</span>\n  <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">matrix.mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">U</span><span class=\"bp\">⬝</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">matrix.mul_add</span> <span class=\"o\">(</span><span class=\"n\">U</span><span class=\"bp\">⬝</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">matrix.mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">U</span><span class=\"bp\">⬝</span><span class=\"n\">B</span><span class=\"o\">),</span> <span class=\"n\">matrix.mul_assoc</span> <span class=\"n\">Q</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_nonsing_inv_cancel_left</span><span class=\"o\">,</span> <span class=\"n\">add_sub_cancel</span><span class=\"o\">],</span>\n  <span class=\"n\">assumption'</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 390176429,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1694374913
    },
    {
        "content": "<p>If you want to translate this to lean 4 don't forget <code>nth_rw</code> in Lean4 counts from 1 not from 0!</p>",
        "id": 390183512,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1694378654
    },
    {
        "content": "<p>thanks! I will try translate this</p>",
        "id": 390224455,
        "sender_full_name": "Yufei Liu",
        "timestamp": 1694401311
    },
    {
        "content": "<p>btw, how's matrix cookbook's progress on translating from lean3 to lean4?</p>",
        "id": 392658745,
        "sender_full_name": "Yufei Liu",
        "timestamp": 1695455932
    },
    {
        "content": "<p>I was planning to use it to test out a history merging script when I write one for mathlib</p>",
        "id": 392660085,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695456916
    },
    {
        "content": "<p>But remember that pretty much all the cookbook results are already in mathlib; the project was only ever intended as an index</p>",
        "id": 392660099,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695456942
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sherman.E2.80.93Morrison.20formula/near/392660099\">said</a>:</p>\n<blockquote>\n<p>But remember that pretty much all the cookbook results are already in mathlib; the project was only ever intended as an index</p>\n</blockquote>\n<p>i see, thank you</p>",
        "id": 392660520,
        "sender_full_name": "Yufei Liu",
        "timestamp": 1695457268
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sherman.E2.80.93Morrison.20formula/near/392660099\">said</a>:</p>\n<blockquote>\n<p>But remember that pretty much all the cookbook results are already in mathlib; the project was only ever intended as an index</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> </p>\n<p>I am not sure what you mean here, because the Matrix Cookbook is still far from being formalized. (As witnessed by the red progress bar eric has on the project)</p>\n<p>Do you mean the results currently in lean-matrix-cookbook are all in Mathlib?</p>",
        "id": 392743913,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1695506768
    },
    {
        "content": "<blockquote>\n<p>Do you mean the results currently in lean-matrix-cookbook are all in Mathlib?</p>\n</blockquote>\n<p>Yes, I mean for the majority of the lemmas this is (almost) the case. Certainly a vast fraction of the pdf is not anywhere though!</p>",
        "id": 392744021,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695506866
    }
]