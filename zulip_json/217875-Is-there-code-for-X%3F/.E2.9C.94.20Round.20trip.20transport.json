[
    {
        "content": "<p>I am left with the following goal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">w'</span> <span class=\"bp\">=</span> <span class=\"n\">w''</span><span class=\"o\">)</span> <span class=\"bp\">▸</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">w''</span> <span class=\"bp\">=</span> <span class=\"n\">w'</span><span class=\"o\">)</span> <span class=\"bp\">▸</span> <span class=\"n\">p₂</span> <span class=\"bp\">=</span> <span class=\"n\">p₂</span>\n</code></pre></div>\n<p>Is there a result that proves this (<code>rfl</code> fails).</p>",
        "id": 371736314,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1688306687
    },
    {
        "content": "<p>Yes, <code>rw [cast_cast, cast_eq]</code>.</p>",
        "id": 371739625,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1688307542
    },
    {
        "content": "<p>Maybe rw with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=cast_cast#doc\">docs#cast_cast</a> ? that should put it into <code>(_ : w'' = w'') ▸ p₂ = p₂</code> form, which I think should be provable by <code>rfl</code> (edit: I must have had internet connectivity issues, didn't see Yaël's message)</p>",
        "id": 371740464,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688307776
    },
    {
        "content": "<p>Unfortunately this is not working. The expression I have is not a direct cast with an equality but one where transport is done for an index.<br>\n<code>rw</code> claims it cannot find the pattern.</p>",
        "id": 371743200,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1688308518
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 371744142,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1688308757
    },
    {
        "content": "<p>Bit complicated for an mwe, but it is fixed. Just had to tweak statements to avoid the double casting.<br>\nThanks.</p>",
        "id": 371745518,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1688309100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> has marked this topic as resolved.</p>",
        "id": 371753427,
        "sender_full_name": "Notification Bot",
        "timestamp": 1688311108
    }
]