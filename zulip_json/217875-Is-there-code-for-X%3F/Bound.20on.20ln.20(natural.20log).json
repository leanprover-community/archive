[
    {
        "content": "<p>Hi, newb here. Looking through mathlib I can't tell if there's code for the bound on the natural logarithm (ln, not a logarithm with a base number which is a natural number):<br>\nln x &lt; x - 1</p>",
        "id": 368677632,
        "sender_full_name": "Colin McDonagh",
        "timestamp": 1687463192
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Real.log_le_sub_one_of_pos#doc\">docs#Real.log_le_sub_one_of_pos</a></p>",
        "id": 368677954,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1687463288
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 368678479,
        "sender_full_name": "Colin McDonagh",
        "timestamp": 1687463419
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"439462\">@Colin McDonagh</span>, a general strategy here is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Real.log</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span><span class=\"bp\">?</span>\n</code></pre></div>\n<p>which prints as the third result:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Try</span> <span class=\"n\">this</span><span class=\"o\">:</span> <span class=\"n\">refine</span> <span class=\"n\">Real.log_le_sub_one_of_pos</span> <span class=\"bp\">?</span><span class=\"n\">hx</span>\n<span class=\"n\">Remaining</span> <span class=\"n\">subgoals</span><span class=\"o\">:</span>\n<span class=\"bp\">⊢</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>and if you change the example to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Real.log</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span><span class=\"bp\">?</span>\n</code></pre></div>\n<p>you just get a single result:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Try</span> <span class=\"n\">this</span><span class=\"o\">:</span> <span class=\"n\">exact</span> <span class=\"n\">Real.log_le_sub_one_of_pos</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 368732920,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687485834
    },
    {
        "content": "<p>Excellent, thanks for the lesson</p>",
        "id": 369357996,
        "sender_full_name": "Colin McDonagh",
        "timestamp": 1687687349
    }
]