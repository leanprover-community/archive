[
    {
        "content": "<p>Is this really missing:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[to_additive]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">exists_ne_one</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Nontrivial</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">),</span> <span class=\"n\">g</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">exists_pair_ne</span> <span class=\"n\">G</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">Iff.mpr</span> <span class=\"n\">div_ne_one</span> <span class=\"n\">h</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 370171741,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1687891605
    },
    {
        "content": "<p>I think that for every <code>x</code>, you should be able to get a <code>y</code> that is unequal to it.</p>",
        "id": 370172232,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1687891730
    },
    {
        "content": "<p>That lemma should exist, and it doesn't need algebraic structure.</p>",
        "id": 370172289,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1687891743
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=exists_ne#doc\">docs#exists_ne</a></p>",
        "id": 370172389,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1687891769
    },
    {
        "content": "<p>Right, thanks!</p>",
        "id": 370173260,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1687891972
    }
]