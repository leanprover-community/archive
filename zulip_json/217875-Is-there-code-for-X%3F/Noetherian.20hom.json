[
    {
        "content": "<p>I don't suppose anyone has proved these facts anywhere:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Noetherian</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- Does anyone have this anywhere?</span>\n<span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">IsNoetherian</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsNoetherian</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">Module.End</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"gr\">sorry</span>\n\n<span class=\"c1\">-- Or better yet, this?</span>\n<span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">N</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">IsNoetherian</span> <span class=\"n\">R</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module.Finite</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsNoetherian</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 391707710,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1695045910
    },
    {
        "content": "<p>Are you trying to nerd snipe someone? <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 391708474,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1695046130
    },
    {
        "content": "<p>Is it true? IIRC, you need <code>M</code> to have finite presentation.</p>",
        "id": 391718923,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695049101
    },
    {
        "content": "<p>Perhaps I've not added enough assumptions!</p>\n<p>The proof I had in my head (for the second instance which implies the first) is \"Since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is finitely-generated I have a surjection <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>R</mi><mi>k</mi></msup><mo>→</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">R^k \\to M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> for some natural <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>, and thus an injection <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mi>o</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mo separator=\"true\">,</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>H</mi><mi>o</mi><mi>m</mi><mo stretchy=\"false\">(</mo><msup><mi>R</mi><mi>k</mi></msup><mo separator=\"true\">,</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo>≃</mo><mi>H</mi><mi>o</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>R</mi><mo separator=\"true\">,</mo><mi>N</mi><msup><mo stretchy=\"false\">)</mo><mi>k</mi></msup><mo>≃</mo><msup><mi>N</mi><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">Hom(M, N) \\to Hom(R^k, N) \\simeq Hom(R, N)^k \\simeq N^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Ho</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Ho</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Ho</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span>. And then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>N</mi><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">N^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span> is Noetherian etc.</p>\n<p>I'm focused on other things for now but I'll think about this again later on if nobody points out my error first!</p>",
        "id": 391727114,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1695051506
    },
    {
        "content": "<p>Sorry, I had missed that the hypothesis that <code>N</code> was Noetherian.</p>",
        "id": 391731127,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695052741
    },
    {
        "content": "<p>Ah so maybe I'm OK then --- in your defence it doesn't help that I sort-of rename <code>M</code> to <code>N</code> as I move from one <code>instance</code> to the next.</p>",
        "id": 391731324,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1695052805
    },
    {
        "content": "<p>My feeling is that some people here (I count myself in them) should take the time to take some books such as Bourbaki's Algebra and Commutative Algebra and patiently and consistently add  everything that is there. Possibly simultaneously writing that stuff in comprehensive form. And the more we wait for it, the more painful it will be.</p>",
        "id": 391732392,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695053094
    },
    {
        "content": "<p>This is one of the reasons we have students, isn't it? :)</p>",
        "id": 391735033,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1695054040
    },
    {
        "content": "<p>I don't think so: we have to give students something they will be credited for outside of our community.<br>\n(I checked with colleagues outside of the formalization business. They can't understand how right exactness of tensor product could be missing, nor why it took me several days to formalize it…)</p>",
        "id": 391739500,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695055651
    },
    {
        "content": "<p>I was more or less joking, but this shows we are not doing a good job (and I count myself in of course) in explaining to our colleagues why sometimes formalization is hard.</p>",
        "id": 391740466,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1695056006
    },
    {
        "content": "<p>It is actually hard to explain why it is hard… (and sometimes, I really don't know why it is so hard…)</p>",
        "id": 391740857,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695056162
    },
    {
        "content": "<p>Right exactness of the tensor product was done in the categorical language in a universe monomorphic setting, right? So now your colleagues will be even more confused... why did you need to do it again? <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 391741252,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1695056310
    },
    {
        "content": "<p>IMHO, part of the reason formalisation is slow is that any quality mathematical exposition is slow. See \"Step 3\" in this <a href=\"https://mathoverflow.net/a/54240/6801\">MO answer</a> and bear in mind this claim is made when a detailed set of notes have already been created.</p>",
        "id": 391743256,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1695057070
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"240862\">Oliver Nash</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Noetherian.20hom/near/391707710\">said</a>:</p>\n<blockquote>\n<p>I don't suppose anyone has proved these facts anywhere:</p>\n</blockquote>\n<p>I caved in and did this myself <a href=\"https://github.com/leanprover-community/mathlib4/pull/7276\">#7276</a></p>",
        "id": 392092894,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1695207734
    },
    {
        "content": "<p>Having a look.</p>",
        "id": 392093594,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1695207971
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Noetherian.20hom/near/391732392\">said</a>:</p>\n<blockquote>\n<p>My feeling is that some people here (I count myself in them) should take the time to take some books such as Bourbaki's Algebra and Commutative Algebra and patiently and consistently add  everything that is there. Possibly simultaneously writing that stuff in comprehensive form. And the more we wait for it, the more painful it will be.</p>\n</blockquote>\n<p>I completely agree that would be a nice thing to do, and I think the first step is to have some webpage tracking the progress on that like we have for the undergrad curriculum. I just want to add the slight nuance that we shouldn't be enforcing too much the result to be in a similar form as they are in the source material, and usability in Lean should still be the main concern when stating theorems (for example we probably do <em>not</em> want any theorem explicitly manipulating module structures on a fixed type).</p>",
        "id": 392701197,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1695476740
    },
    {
        "content": "<p>The current model (\"don't do this, but add lemmas when you need them\") has been working fine for years...</p>",
        "id": 392702374,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695477367
    },
    {
        "content": "<p>Well I think it's been working fine except for people who want to work in a more general setting. I think the other thread about non-commutative and non-unital rings and algebras is the prefect example of that, and I don't believe that Jireh and Eric duplicating everything that was developped in the commutative and unital case is the most efficient way we could have done that. Of course I don't blame anyone for not doing non unital rings earlier, that was absolutely a sensible thing to do, but now that we have much more experience as well as more diverse needs, I don't think we want to do the same thing again.</p>",
        "id": 392705194,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1695479412
    },
    {
        "content": "<p>Kevin, what you mean by “for years” is roughly 5 years, and that success is indeed remarkable.  In comparison, the mathematics we grasp are sometimes 2500 years old, but have been reworked along time, sometimes massively, especially at the end of 19th century and beginning of 20th century.<br>\nWhat I fear, envision, or predict, is that the library will soon become too heavy to easily modify basic material. There is a parallel with what had been done at the beginning of the 20th century: at some point, it may be easier (maybe only psychologically) to start again from scratch.</p>",
        "id": 392706431,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695480529
    }
]