[
    {
        "content": "<p>Where is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">dual</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"bp\">ᵒᵈ</span> <span class=\"o\">:=</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>?</p>\n<p>I am bemused to not be finding it right after the definition of OrderDual...</p>",
        "id": 375942364,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689584663
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=OrderDual.toDual#doc\">docs#OrderDual.toDual</a></p>",
        "id": 375943395,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689584889
    },
    {
        "content": "<p>It's in a different file because <code>Equiv</code> isn't available yet</p>",
        "id": 375943479,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689584908
    },
    {
        "content": "<p>Or at least, at one point it wasn't</p>",
        "id": 375943517,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689584915
    }
]