[
    {
        "content": "<p>When using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=orderOf_eq_prime#doc\">docs#orderOf_eq_prime</a> for something I need the lemma <code>one_ne_two</code> as described here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">ZMod.zero_ne_one</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">q</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">ZMod.val_one</span> <span class=\"n\">q</span> <span class=\"bp\">▸</span> <span class=\"o\">(</span><span class=\"n\">ZMod.val_eq_zero</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">q</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">h.symm</span>\n  <span class=\"n\">linarith</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">ZMod.one_ne_two</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>  <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">q</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">sub_eq_zero.mpr</span> <span class=\"n\">h1.symm</span><span class=\"o\">)</span>\n  <span class=\"n\">norm_num</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">ZMod.zero_ne_one</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">h.symm</span>\n</code></pre></div>\n<p>I feel like something like this should be in the library, is there? <br>\nOr maybe there is a tactic to deal with these kind of trivial calculations in <code>ZMod q</code> when <code>q</code> is larger than <code>1</code>.</p>",
        "id": 380236588,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1690791637
    },
    {
        "content": "<p><del>Maybe there's more API assuming <code>NeZero q</code>? I'm not sure</del></p>\n<p>Doh</p>",
        "id": 380241025,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1690792355
    },
    {
        "content": "<p>Both lemmas also need q!=1</p>",
        "id": 380243057,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690792726
    },
    {
        "content": "<p>Both lemmas <em>only</em> need <code>q ≠ 1</code></p>",
        "id": 380249813,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690793900
    }
]