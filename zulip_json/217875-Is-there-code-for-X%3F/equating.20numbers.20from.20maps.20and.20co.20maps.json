[
    {
        "content": "<p>I was working on this idea a while ago when I made a post about the congruence of <code>filter.tendsto</code>. I'm trying to show that if we know a the limit of a function evaluates to <code>x</code> at <code>a</code> and assume that it evaluates to <code>x</code> at <code>b</code> as a <code>comap</code>, then <code>a = b</code>. I wanted to make sure what I am trying to prove is actually true. The tricky part is using the <code>nhds_within</code></p>\n<p>edit: added <code>0 &lt; a</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n\n<span class=\"kd\">example</span>\n<span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">filter.tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">nhds_within</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">set.Ioo</span> <span class=\"mi\">0</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"n\">filter.at_top</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">filter.tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">nhds_within</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">set.Ioi</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"n\">filter.at_bot</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">filter.at_top.comap</span> <span class=\"n\">f</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">nhds_within</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">set.Ioo</span> <span class=\"mi\">0</span> <span class=\"n\">b</span><span class=\"o\">)))</span>\n<span class=\"o\">(</span><span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"n\">filter.at_bot.comap</span> <span class=\"n\">f</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">nhds_within</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">set.Ioi</span> <span class=\"n\">b</span><span class=\"o\">)))</span>\n<span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 367732810,
        "sender_full_name": "Max Bobbin",
        "timestamp": 1687202318
    },
    {
        "content": "<p>using <code>(filter.map_le_iff_le_comap.1 h).trans h2</code> I can get <code>nhds_within a (set.Ioo 0 a) ≤ nhds_within b (set.Ioo 0 b)</code></p>",
        "id": 367734167,
        "sender_full_name": "Max Bobbin",
        "timestamp": 1687202760
    },
    {
        "content": "<p>same with using h1 and h3</p>",
        "id": 367734268,
        "sender_full_name": "Max Bobbin",
        "timestamp": 1687202781
    },
    {
        "content": "<p>This code doesn't compile for me. Are you on an old mathlib? Adding something like <code>import topology.instances.real</code> gets it working again. My mental model for filter.tendsto says that if a&lt;0 then h is vacuously true and this doesn't bode well somehow.</p>",
        "id": 367737043,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687203799
    },
    {
        "content": "<p>I am on an old version of mathlib for Lean 3. We are cleaning up our github before we update. I also forgot  <code>0 &lt; a</code> let me edit the post</p>",
        "id": 367738355,
        "sender_full_name": "Max Bobbin",
        "timestamp": 1687204231
    }
]