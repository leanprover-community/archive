[
    {
        "content": "<p>Should this hold if <code>m</code> and <code>n</code> are Nat? Is there a tactic for this? I'm not sure how to approach it without scrolling through the api doc, which I'm struggling to find something applicable with.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">c1</span><span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">n</span>\n</code></pre></div>",
        "id": 389575393,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1694065489
    },
    {
        "content": "<p>Yes this is true, even under the weaker assumption n&lt;=m. If <code>exact?</code> isn't proving it for you (after weakening the hypothesis) then you could do it by hand using the lemma that a&lt;=b iff there exists c such that b=a+c and then the lemmas will be there.</p>",
        "id": 389576433,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694065938
    },
    {
        "content": "<p>I wasn't aware of <code>exact?</code>.</p>",
        "id": 389576646,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1694066041
    },
    {
        "content": "<p>It tells me to try <code>apply?</code>.</p>",
        "id": 389576726,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1694066062
    },
    {
        "content": "<p>Did you weaken the hypothesis first? <code>have c2 := c1.le</code></p>",
        "id": 389577271,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694066360
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">s</span><span class=\"o\">:</span> <span class=\"n\">String</span>\n<span class=\"n\">c</span><span class=\"o\">:</span> <span class=\"n\">Char</span>\n<span class=\"n\">l</span><span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span>\n<span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">l</span>\n<span class=\"n\">s1</span><span class=\"o\">:</span> <span class=\"n\">String.length</span> <span class=\"o\">(</span><span class=\"n\">Char.toString</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">List.str_max_len</span> <span class=\"n\">l</span>\n<span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">String.length</span> <span class=\"n\">s</span>\n<span class=\"n\">c1</span><span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span>\n<span class=\"n\">s3</span><span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">n</span>\n<span class=\"n\">Messages</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">SubAllRecChangeReplaceFree.lean</span><span class=\"o\">:</span><span class=\"mi\">76</span><span class=\"o\">:</span><span class=\"mi\">4</span>\n<span class=\"bp\">`</span><span class=\"n\">exact</span><span class=\"bp\">?`</span> <span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">close</span> <span class=\"n\">the</span> <span class=\"n\">goal.</span> <span class=\"n\">Try</span> <span class=\"bp\">`</span><span class=\"n\">apply</span><span class=\"bp\">?`</span> <span class=\"n\">to</span> <span class=\"n\">see</span> <span class=\"n\">partial</span> <span class=\"n\">suggestions.</span>\n</code></pre></div>",
        "id": 389577549,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1694066474
    },
    {
        "content": "<p>got it!</p>",
        "id": 389577696,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1694066530
    },
    {
        "content": "<p>Thank you!!</p>",
        "id": 389577731,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1694066546
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"139442\">Kayla Thomas</span> has marked this topic as resolved.</p>",
        "id": 389581337,
        "sender_full_name": "Notification Bot",
        "timestamp": 1694068367
    }
]