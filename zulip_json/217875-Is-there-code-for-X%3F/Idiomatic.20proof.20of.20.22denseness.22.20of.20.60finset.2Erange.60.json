[
    {
        "content": "<p>What is the idiomatic way of proving the following? The approach will be useful for me to learn more about idiomatic proofs during building the infinite product API.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.p_series</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"kn\">open</span> <span class=\"n\">finset</span> <span class=\"n\">filter</span> <span class=\"n\">function</span> <span class=\"n\">classical</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">topology</span> <span class=\"n\">classical</span> <span class=\"n\">filter</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 329024742,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1676911251
    },
    {
        "content": "<p>The underlying motivation is the following calculation <a href=\"/user_uploads/3121/85VWCm8-kdiMbA0GtNyOlyw8/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/85VWCm8-kdiMbA0GtNyOlyw8/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/85VWCm8-kdiMbA0GtNyOlyw8/image.png\"></a></div>",
        "id": 329024829,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1676911284
    },
    {
        "content": "<p>Here's a probably non-idiomatic proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.p_series</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"kn\">open</span> <span class=\"n\">finset</span> <span class=\"n\">filter</span> <span class=\"n\">function</span> <span class=\"n\">classical</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">topology</span> <span class=\"n\">classical</span> <span class=\"n\">big_operators</span> <span class=\"n\">filter</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">le_range</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">s</span> <span class=\"bp\">‚â§</span> <span class=\"n\">range</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">finset.range_mono.tendsto_at_top_at_top_iff</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">filter.tendsto_finset_range</span> <span class=\"n\">_</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hf'</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"bp\">Œª</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">hf</span> <span class=\"o\">(</span><span class=\"n\">range_mono</span> <span class=\"n\">hab</span><span class=\"o\">),</span>\n  <span class=\"k\">have</span> <span class=\"n\">frange_bdd</span> <span class=\"o\">:=</span> <span class=\"n\">hf'.ge_of_tendsto</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f_bdd</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">s</span> <span class=\"bp\">‚â§</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n    <span class=\"n\">obtain</span> <span class=\"o\">‚ü®</span><span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"o\">‚ü©</span> <span class=\"o\">:=</span> <span class=\"n\">le_range</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"n\">hn</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">frange_bdd</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">metric.tendsto_nhds</span> <span class=\"n\">at</span> <span class=\"n\">h</span> <span class=\"bp\">‚ä¢</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">Œµ</span> <span class=\"n\">hŒµ</span><span class=\"o\">,</span>\n  <span class=\"n\">specialize</span> <span class=\"n\">h</span> <span class=\"n\">Œµ</span> <span class=\"n\">hŒµ</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">‚ü®</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">ha</span><span class=\"o\">‚ü©</span> <span class=\"o\">:=</span> <span class=\"n\">mem_at_top_sets.1</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">specialize</span> <span class=\"n\">ha</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">le_refl</span> <span class=\"n\">a</span><span class=\"o\">),</span>\n  <span class=\"n\">refine</span> <span class=\"n\">mem_at_top_sets.2</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">range</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"n\">f</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">hf</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">s</span> <span class=\"bp\">‚â§</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">f_bdd</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">at</span> <span class=\"bp\">‚ä¢</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">real.dist_eq</span><span class=\"o\">,</span> <span class=\"n\">abs_lt</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">ha</span> <span class=\"bp\">‚ä¢</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 329026001,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1676911646
    },
    {
        "content": "<p>I had to resort to epsilons but I don't really see any other way.</p>",
        "id": 329026161,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1676911693
    },
    {
        "content": "<p>I would say that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">tendsto_iff_tendsto_subseq_of_monotone</span> <span class=\"n\">hf</span> <span class=\"n\">tendsto_finset_range</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>is more idiomatic.</p>",
        "id": 329036365,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1676914905
    },
    {
        "content": "<p>It's even more idiomatic to change the statement to the iff version:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚Üî</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">tendsto_iff_tendsto_subseq_of_monotone</span> <span class=\"n\">hf</span> <span class=\"n\">tendsto_finset_range</span>\n</code></pre></div>",
        "id": 329036574,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1676914968
    },
    {
        "content": "<p>Wonderful, thank you! Now, the same seems to be true for <code>antitone f</code>. Is there a more general catch-all that deals with both cases?</p>",
        "id": 329036902,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1676915083
    },
    {
        "content": "<p>I don't know.</p>",
        "id": 329037008,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1676915121
    },
    {
        "content": "<p>There isn't even a definition in mathlib for \"either monotone increasing or monotone decreasing\" (i.e. what most mathematicians mean by \"monotone\"), is there?</p>",
        "id": 329060595,
        "sender_full_name": "David Loeffler",
        "timestamp": 1676924174
    },
    {
        "content": "<p>Yes there is, if you are willing to constrain the base type: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quasilinear_on\">docs#quasilinear_on</a></p>",
        "id": 329075740,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1676932123
    },
    {
        "content": "<p>For reference, here are the companion statements for antitone functions:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.algebra.order.monotone_convergence</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">filter</span> <span class=\"n\">set</span> <span class=\"n\">function</span> <span class=\"n\">finset</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">filter</span> <span class=\"n\">topology</span> <span class=\"n\">classical</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">Œπ</span> <span class=\"n\">Œ±</span> <span class=\"n\">Œ≤</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">at_top_dual_eq_at_bot</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">at_top</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">Œ±</span><span class=\"bp\">·µí·µà</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">order_dual.of_dual</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">at_bot</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">at_bot_dual_eq_at_top</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">at_bot</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">Œ±</span><span class=\"bp\">·µí·µà</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">order_dual.of_dual</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">at_top</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_at_top_at_bot_of_antitone</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œ≤</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ≤</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">‚â§</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"n\">at_bot</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">‚Üê</span><span class=\"n\">at_bot_dual_eq_at_top</span><span class=\"o\">,</span> <span class=\"n\">tendsto_map'_iff</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"n\">tendsto_at_bot_at_bot_of_monotone</span> <span class=\"n\">hf.dual_left</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_at_bot_at_top_of_antitone</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œ≤</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ≤</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">‚â§</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_bot</span> <span class=\"n\">at_top</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">‚Üê</span><span class=\"n\">at_top_dual_eq_at_bot</span><span class=\"o\">,</span> <span class=\"n\">tendsto_map'_iff</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"n\">tendsto_at_top_at_top_of_monotone</span> <span class=\"n\">hf.dual_left</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_at_top_at_bot_iff_of_antitone</span> <span class=\"o\">[</span><span class=\"n\">nonempty</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">semilattice_sup</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œ≤</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ≤</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"n\">at_bot</span> <span class=\"bp\">‚Üî</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Œ≤</span><span class=\"o\">,</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">‚â§</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"n\">tendsto_at_top_at_bot.trans</span> <span class=\"bp\">$</span> <span class=\"n\">forall_congr</span> <span class=\"bp\">$</span> <span class=\"bp\">Œª</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">exists_congr</span> <span class=\"bp\">$</span> <span class=\"bp\">Œª</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">‚ü®</span><span class=\"bp\">Œª</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">le_refl</span> <span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"bp\">Œª</span> <span class=\"n\">h</span> <span class=\"n\">a'</span> <span class=\"n\">ha'</span><span class=\"o\">,</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"n\">ha'</span><span class=\"o\">)</span> <span class=\"n\">h</span><span class=\"o\">‚ü©</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_at_bot_at_top_iff_of_antitone</span> <span class=\"o\">[</span><span class=\"n\">nonempty</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">semilattice_inf</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œ≤</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ≤</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_bot</span> <span class=\"n\">at_top</span> <span class=\"bp\">‚Üî</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Œ≤</span><span class=\"o\">,</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">‚â§</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">tendsto_at_bot_at_top.trans</span> <span class=\"bp\">$</span> <span class=\"n\">forall_congr</span> <span class=\"bp\">$</span> <span class=\"bp\">Œª</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">exists_congr</span> <span class=\"bp\">$</span> <span class=\"bp\">Œª</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">‚ü®</span><span class=\"bp\">Œª</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">le_refl</span> <span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"bp\">Œª</span> <span class=\"n\">h</span> <span class=\"n\">a'</span> <span class=\"n\">ha'</span><span class=\"o\">,</span> <span class=\"n\">le_trans</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"n\">ha'</span><span class=\"o\">)‚ü©</span>\n\n<span class=\"n\">alias</span> <span class=\"n\">tendsto_at_top_at_bot_of_antitone</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">_root_.antitone.tendsto_at_top_at_bot</span>\n<span class=\"n\">alias</span> <span class=\"n\">tendsto_at_bot_at_top_of_antitone</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">_root_.antitone.tendsto_at_bot_at_top</span>\n<span class=\"n\">alias</span> <span class=\"n\">tendsto_at_top_at_bot_iff_of_antitone</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">_root_.antitone.tendsto_at_top_at_bot_iff</span>\n<span class=\"n\">alias</span> <span class=\"n\">tendsto_at_bot_at_top_iff_of_antitone</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">_root_.antitone.tendsto_at_bot_at_top_iff</span>\n\n<span class=\"sd\">/-- If `u` is an antitone function with linear ordered codomain and the range of `u` is not bounded</span>\n<span class=\"sd\">below, then `tendsto u at_top at_bot`. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_at_top_at_bot_of_antitone'</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œπ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">linear_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Œπ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"bp\">¬¨</span><span class=\"n\">bdd_below</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">u</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">u</span> <span class=\"n\">at_top</span> <span class=\"n\">at_bot</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">h.tendsto_at_top_at_bot</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">not_bdd_below_iff.1</span> <span class=\"n\">H</span> <span class=\"n\">b</span> <span class=\"k\">with</span> <span class=\"o\">‚ü®</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"o\">‚ü®</span><span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">‚ü©,</span> <span class=\"n\">hN</span><span class=\"o\">‚ü©,</span>\n  <span class=\"n\">exact</span> <span class=\"o\">‚ü®</span><span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"n\">le_of_lt</span> <span class=\"n\">hN</span><span class=\"o\">‚ü©</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_of_antitone</span> <span class=\"o\">{</span><span class=\"n\">Œπ</span> <span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œπ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">conditionally_complete_linear_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œπ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h_mono</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"n\">at_bot</span> <span class=\"bp\">‚à®</span> <span class=\"o\">(</span><span class=\"bp\">‚àÉ</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">l</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">if</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">bdd_below</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"k\">then</span> <span class=\"n\">or.inr</span> <span class=\"o\">‚ü®</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">tendsto_at_top_cinfi</span> <span class=\"n\">h_mono</span> <span class=\"n\">H</span><span class=\"o\">‚ü©</span>\n<span class=\"k\">else</span> <span class=\"n\">or.inl</span> <span class=\"bp\">$</span> <span class=\"n\">tendsto_at_top_at_bot_of_antitone'</span> <span class=\"n\">h_mono</span> <span class=\"n\">H</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_at_top_iff_tendsto_range_at_top</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">conditionally_complete_linear_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">no_max_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚Üî</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">tendsto_iff_tendsto_subseq_of_monotone</span> <span class=\"n\">hf</span> <span class=\"n\">tendsto_finset_range</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_iff_tendsto_subseq_of_antitone</span> <span class=\"o\">{</span><span class=\"n\">Œπ‚ÇÅ</span> <span class=\"n\">Œπ‚ÇÇ</span> <span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">semilattice_sup</span> <span class=\"n\">Œπ‚ÇÅ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œπ‚ÇÇ</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">nonempty</span> <span class=\"n\">Œπ‚ÇÅ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">conditionally_complete_linear_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">no_min_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œπ‚ÇÇ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">œÜ</span> <span class=\"o\">:</span> <span class=\"n\">Œπ‚ÇÅ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œπ‚ÇÇ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"n\">œÜ</span> <span class=\"n\">at_top</span> <span class=\"n\">at_top</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">‚Üî</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">‚àò</span> <span class=\"n\">œÜ</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">h.comp</span> <span class=\"n\">hg</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">tendsto_of_antitone</span> <span class=\"n\">hf</span> <span class=\"k\">with</span> <span class=\"n\">h'</span> <span class=\"bp\">|</span> <span class=\"o\">‚ü®</span><span class=\"n\">l'</span><span class=\"o\">,</span> <span class=\"n\">hl'</span><span class=\"o\">‚ü©,</span>\n    <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">not_tendsto_at_bot_of_tendsto_nhds</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">h'.comp</span> <span class=\"n\">hg</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"n\">tendsto_nhds_unique</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">hl'.comp</span> <span class=\"n\">hg</span><span class=\"o\">)</span> <span class=\"o\">}</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">tendsto_at_top_iff_tendsto_range_at_top'</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">conditionally_complete_linear_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">no_min_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚Üî</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">tendsto_iff_tendsto_subseq_of_antitone</span> <span class=\"n\">hf</span> <span class=\"n\">tendsto_finset_range</span>\n</code></pre></div>",
        "id": 329096539,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1676948230
    }
]