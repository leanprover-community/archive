[
    {
        "content": "<p>I have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">structure</span> <span class=\"n\">Matroid</span> <span class=\"o\">(</span><span class=\"n\">E</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">Indep</span>                 <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n  <span class=\"n\">I1</span>                    <span class=\"o\">:</span> <span class=\"n\">Indep</span> <span class=\"bp\">∅</span>\n  <span class=\"n\">I2</span> <span class=\"o\">(</span><span class=\"n\">i1</span> <span class=\"n\">i2</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Indep</span> <span class=\"n\">i1</span> <span class=\"bp\">→</span> <span class=\"n\">Set.Subset</span> <span class=\"n\">i2.toSet</span> <span class=\"n\">i1.toSet</span> <span class=\"bp\">→</span> <span class=\"n\">Indep</span> <span class=\"n\">i2</span>\n  <span class=\"n\">I3</span> <span class=\"o\">(</span><span class=\"n\">i1</span> <span class=\"n\">i2</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Indep</span> <span class=\"n\">i1</span> <span class=\"bp\">→</span> <span class=\"n\">Indep</span> <span class=\"n\">i2</span> <span class=\"bp\">→</span> <span class=\"n\">i1.card</span> <span class=\"bp\">&gt;</span> <span class=\"n\">i2.card</span> <span class=\"bp\">→</span>\n <span class=\"bp\">∃</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"bp\">∈</span> <span class=\"n\">Set.diff</span> <span class=\"n\">i1.toSet</span> <span class=\"n\">i2.toSet</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Indep</span> <span class=\"o\">(</span><span class=\"n\">Set.insert</span> <span class=\"n\">e</span> <span class=\"n\">i2.toSet</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">toFinset</span>\n<span class=\"c\">/-</span><span class=\"cm\">failed to synthesize instance</span>\n<span class=\"cm\">  Fintype ↑(Set.insert e ↑i2)-/</span>\n</code></pre></div>\n<p>Apparently I have found <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Set/Finite.html#Set.Finite.insert\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Set/Finite.html#Set.Finite.insert</a> which seems to be relevant. Is there a way to make use of this theorem inside the structure?</p>",
        "id": 361769991,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1685285527
    },
    {
        "content": "<p>structure Matroid (E : Type u) [DecidableEq E]</p>",
        "id": 361772155,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1685286244
    },
    {
        "content": "<p>That should work in addition to the following</p>",
        "id": 361772176,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1685286248
    },
    {
        "content": "<p>you shouldn't need to convert finsets to sets. Finsets have subset and diff defined also. And the canonical way to refer to them is using the subset and diff notation.</p>",
        "id": 361772389,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1685286317
    },
    {
        "content": "<p>Thank you</p>",
        "id": 361772858,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1685286471
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"403479\">Hyunsang Hwang</span> has marked this topic as resolved.</p>",
        "id": 361772865,
        "sender_full_name": "Notification Bot",
        "timestamp": 1685286475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"403479\">@Hyunsang Hwang</span> : Perhaps it’s also worth mentioning that <span class=\"user-mention\" data-user-id=\"329425\">@Peter Nelson</span> has been working on formalization of matroids.</p>",
        "id": 361788179,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685292299
    }
]