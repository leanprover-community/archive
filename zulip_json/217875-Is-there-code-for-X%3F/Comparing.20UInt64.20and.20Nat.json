[
    {
        "content": "<p>Hello,<br>\nI have the following goal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">skip</span> <span class=\"o\">:</span> <span class=\"n\">UInt64</span>\n<span class=\"n\">skipped</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n<span class=\"n\">skipped_le_skip</span> <span class=\"o\">:</span> <span class=\"n\">skipped</span> <span class=\"bp\">≤</span> <span class=\"n\">UInt64.toNat</span> <span class=\"n\">skip</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">Nat.toUInt64</span> <span class=\"n\">skipped</span> <span class=\"bp\">≤</span> <span class=\"n\">skip</span>\n</code></pre></div>\n<p>I would apreciate any help of how to solve that goal in Lean 4. Preferably without mathlib4 but using mathlib is ok if necessary.</p>\n<p>Thanks,<br>\nTage</p>",
        "id": 348735292,
        "sender_full_name": "Tage Johansson",
        "timestamp": 1681307188
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 348796675,
        "sender_full_name": "Jason Rute",
        "timestamp": 1681321588
    },
    {
        "content": "<p>The proof should follow from the fact that <code>UInt64.toNat</code> is strictly monotone</p>",
        "id": 348797378,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1681321831
    }
]