[
    {
        "content": "<p>Do we have that <code>lt</code> on a bounded-below subset of the integers is well-founded? I found <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.lt_wf\">docs#nat.lt_wf</a> and I can use an order iso between my bounded subset and <code>univ : set ℕ</code>, but it does not seem so nice...</p>",
        "id": 342609625,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1679070125
    },
    {
        "content": "<p>That will more generally hold for a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/locally_finite_order\">docs#locally_finite_order</a>.</p>",
        "id": 342614975,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679071381
    },
    {
        "content": "<p>Note that <code>nat.lt_wf</code> is in core and you should instead be using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_well_founded.wf\">docs#is_well_founded.wf</a></p>",
        "id": 342615537,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679071518
    },
    {
        "content": "<p>Really? But aren't the integers a <code>locally finite order</code> by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.locally_finite_order\">docs#int.locally_finite_order</a>? Yet <code>lt</code> is not well founded, no? There is no <code>min</code>...</p>",
        "id": 342615681,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1679071550
    },
    {
        "content": "<p>Yes. Yes they are. No it's not well-founded. Yes there is a <code>min</code>, namely through <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.linear_order\">docs#int.linear_order</a>.</p>",
        "id": 342615952,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679071602
    },
    {
        "content": "<p>Give me 30 minutes and you'll have your result.</p>",
        "id": 342616152,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679071651
    },
    {
        "content": "<p>Do you mean that you are going to prove it in the next 30 mins or that you have something else to do in the meanwhile? Otherwise I do not want to steal your time... <span aria-label=\"clock\" class=\"emoji emoji-1f557\" role=\"img\" title=\"clock\">:clock:</span><br>\nConcerning the <code>min</code>, I was speaking of the <code>min</code> in the <code>wf</code> sense, so not as the <code>min</code>of two elements, but as an <code>Inf</code> that always belong to the set.</p>",
        "id": 342616534,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1679071745
    },
    {
        "content": "<p>I have something else to do for the next 10min, then I'll prove it in 20 <span aria-label=\"stuck out tongue closed eyes\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue closed eyes\">:stuck_out_tongue_closed_eyes:</span></p>",
        "id": 342616676,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679071782
    },
    {
        "content": "<p>Well, thanks <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 342617019,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1679071874
    },
    {
        "content": "<p>Done: <a href=\"https://github.com/leanprover-community/mathlib/tree/well_founded_bounded\">branch#well_founded_bounded</a></p>",
        "id": 342626467,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679074364
    },
    {
        "content": "<p>Thanks! Are you going to <code>PR</code>this somewhen?</p>",
        "id": 342626732,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1679074441
    },
    {
        "content": "<p>Oh well, it seems short: but I was shocked that it was not in <code>mathlib</code>, no?</p>",
        "id": 342627068,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1679074508
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/18604\">#18604</a></p>",
        "id": 342628048,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679074751
    },
    {
        "content": "<p>I love it when the system works like this</p>",
        "id": 342645070,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679079624
    },
    {
        "content": "<p>Yes, I agree!</p>",
        "id": 342769869,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1679141590
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> has marked this topic as resolved.</p>",
        "id": 342769891,
        "sender_full_name": "Notification Bot",
        "timestamp": 1679141595
    }
]