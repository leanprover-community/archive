[
    {
        "content": "<p>A bijective function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f : X \\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> has a (left and right) inverse. I certainly cannot find this in to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.Bijective#doc\">docs#Function.Bijective</a>.</p>",
        "id": 393568702,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1695847871
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.bijective_iff_has_inverse#doc\">docs#Function.bijective_iff_has_inverse</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.invFun#doc\">docs#Function.invFun</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.rightInverse_invFun#doc\">docs#Function.rightInverse_invFun</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.leftInverse_invFun#doc\">docs#Function.leftInverse_invFun</a></p>",
        "id": 393568858,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1695847955
    },
    {
        "content": "<p>Glad to see I wasn't searching hard enough. Thanks you!</p>",
        "id": 393569001,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1695848040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"634338\">Michael Rothgang</span> has marked this topic as resolved.</p>",
        "id": 393569007,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695848042
    },
    {
        "content": "<p>Loogle is a good tool here: <span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> Function.Bijective, Function.RightInverse</p>",
        "id": 393569132,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1695848112
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Function/Basic.html#Function.bijective_iff_has_inverse\">Function.bijective_iff_has_inverse</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Fintype/Basic.html#Fintype.rightInverse_bijInv\">Fintype.rightInverse_bijInv</a></p>",
        "id": 393569134,
        "sender_full_name": "loogle",
        "timestamp": 1695848113
    },
    {
        "content": "<p>... loogle and the observation that extracting the inverse of a bijective function requires some form of choice.  I was completely unaware of this before learning about formalization.  Also, I'm not sure that I would have looked for <code>RightInverse/LeftInverse</code> before having seen them in the first place.</p>",
        "id": 393569577,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1695848351
    },
    {
        "content": "<p>this works too: <span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> Function.Bijective, \"inverse\"</p>",
        "id": 393570624,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1695848854
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Function/Basic.html#Function.bijective_iff_has_inverse\">Function.bijective_iff_has_inverse</a></p>",
        "id": 393570627,
        "sender_full_name": "loogle",
        "timestamp": 1695848855
    },
    {
        "content": "<p>I had tried loogle, but always got \"found no results\". (Even for results I <em>had</em> found in the docs.) I guess I haven't wrapped my head around its syntax yet...</p>",
        "id": 393577219,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1695852364
    },
    {
        "content": "<p>In most of cases I'd use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Equiv.ofBijective#doc\">docs#Equiv.ofBijective</a></p>",
        "id": 393603414,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695869158
    }
]