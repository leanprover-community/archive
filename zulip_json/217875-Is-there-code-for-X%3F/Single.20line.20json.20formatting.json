[
    {
        "content": "<p>Do we have some function (perhaps in std4?) that formats a <code>Lean.Json</code> as a single line?<br>\nHere's a version I hacked together, but I would prefer to use something that already exists (if it exists):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">Json.toLine</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">Json</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">j</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">obj</span> <span class=\"n\">obj</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"{\"</span> <span class=\"bp\">++</span>\n      <span class=\"o\">(</span><span class=\"n\">obj.toArray.foldl</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"o\">⟨</span><span class=\"n\">key</span><span class=\"o\">,</span><span class=\"n\">j</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"n\">s</span> <span class=\"bp\">++</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"</span><span class=\"se\">\\\"</span><span class=\"s2\">{key}</span><span class=\"se\">\\\"</span><span class=\"s2\">:\"</span> <span class=\"bp\">++</span> <span class=\"n\">Json.toLine</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"s2\">\",\"</span><span class=\"o\">)</span> <span class=\"s2\">\"\"</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">dropRight</span> <span class=\"mi\">1</span>\n      <span class=\"bp\">++</span> <span class=\"s2\">\"}\"</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">arr</span> <span class=\"n\">arr</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"[\"</span> <span class=\"bp\">++</span>\n      <span class=\"o\">(</span><span class=\"n\">arr.foldl</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"n\">j</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">s</span> <span class=\"bp\">++</span> <span class=\"n\">Json.toLine</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"s2\">\",\"</span><span class=\"o\">)</span> <span class=\"s2\">\"\"</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">dropRight</span> <span class=\"mi\">1</span>\n      <span class=\"bp\">++</span> <span class=\"s2\">\"]\"</span>\n  <span class=\"bp\">|</span> <span class=\"n\">e</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">toString</span> <span class=\"n\">e</span>\n</code></pre></div>",
        "id": 364064262,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686071175
    },
    {
        "content": "<p>I'd guess not. The only JSON library we have (?) is the one in core, which is not intended for general use (i.e. does exactly what they need, and no more).</p>",
        "id": 364145330,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686101831
    },
    {
        "content": "<p>Are you missing anything from Json.compress?</p>",
        "id": 364149107,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1686104620
    },
    {
        "content": "<p>oh, I didn't know about <code>compress</code></p>",
        "id": 364149536,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686104928
    },
    {
        "content": "<p>Indeed, it seems like <code>Json.compress</code> is exactly what I was looking for! Thanks!</p>",
        "id": 364149988,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686105234
    }
]