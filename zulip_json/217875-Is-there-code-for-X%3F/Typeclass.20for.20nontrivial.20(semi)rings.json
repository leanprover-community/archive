[
    {
        "content": "<p>I want to assume a (semi)ring <code>R</code> to be nontrivial or, more explicitly <code>(1 : R) ≠ 0</code>. What is the standard typeclass for this assumption?<br>\nI found</p>\n<ul>\n<li><code>Nontrivial R</code>, but I couldn't find a lemma which explicitly states <code>1 ≠ 0</code> in spite of its <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">docstring</a>;</li>\n<li><code>NeZero 1</code>, but the instance of this class is fewer than the above. I am not sure if this is ok in the undergrad math.</li>\n</ul>\n<p>If you have any experience with these classes, I am glad if you could share it.</p>",
        "id": 396635960,
        "sender_full_name": "Jun Yoshida",
        "timestamp": 1697277618
    },
    {
        "content": "<p>It is surely <code>Nontrivial R</code>. What <code>exact?</code> says if you ask to prove <code>0 ≠ 1</code>? (Note that I reversed the order of <code>0</code>and  <code>1</code>).</p>",
        "id": 396636177,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1697277789
    },
    {
        "content": "<p>This</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Nontrivial</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">zero_ne_one</span>\n</code></pre></div>\n<p>works. So there some instance that tells Lean that <code>Nontrivial R</code> implies <code>NeZero 1</code>.</p>",
        "id": 396636376,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1697277942
    },
    {
        "content": "<p>Of course for rings they're equivalent, but I would say that <code>Nontrivial</code> is the standard choice in the algebra section of Mathlib.</p>",
        "id": 396636456,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1697277982
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=NeZero.one#doc\">docs#NeZero.one</a></p>",
        "id": 396636771,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697278217
    },
    {
        "content": "<p>Oh, thanks. That's what I want.<br>\n(I was a bit surprised seeing the contents of <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/GroupWithZero/NeZero.html\">Mathlib.Algebra.GroupWithZero.NeZero</a> lying directly in the global namespace)</p>",
        "id": 396638099,
        "sender_full_name": "Jun Yoshida",
        "timestamp": 1697279259
    }
]