[
    {
        "content": "<p>Is there any notable recent work on embedding temporal logic(s) in Lean?</p>\n<p>I noticed this: <a href=\"https://lean-forward.github.io/lean-together/2019/slides/hudon.pdf\">https://lean-forward.github.io/lean-together/2019/slides/hudon.pdf</a></p>\n<p>But I don't have any more recent references.</p>",
        "id": 389942145,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1694203227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 389954998,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694210119
    },
    {
        "content": "<p>Here is the code for that project: <a href=\"https://github.com/unitb/temporal-logic\">https://github.com/unitb/temporal-logic</a></p>\n<p>It's a bit old. I've been meaning to keep it up to date with mathlib and lean but I haven't had time in a while.</p>",
        "id": 389955366,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1694210370
    },
    {
        "content": "<p>Here are some projects I found previously about reasoning with concurrent/distributed systems in Lean, in reverse chronological order:</p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/iris-lean\">https://github.com/leanprover-community/iris-lean</a> (updated: 3 weeks ago)<ul>\n<li>has: Higher-Order Concurrent Separation Logic</li>\n<li>ref: <a href=\"https://iris-project.org/\">https://iris-project.org/</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/loganrjmurphy/lean-temporal\">https://github.com/loganrjmurphy/lean-temporal</a> (updated: Nov 11, 2020)<ul>\n<li>has: LTL (Linear Temporal Logic) + CTL (Computational Tree Logic)</li>\n<li>ref: Baier, Christel, and Joost-Pieter Katoen. Principles of model checking. MIT press, 2008</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/unitb/temporal-logic\">https://github.com/unitb/temporal-logic</a> (updated: Nov 1, 2018)<ul>\n<li>has: LTL + refinement </li>\n<li>ref: <a href=\"https://lean-forward.github.io/lean-together/2019/slides/hudon.pdf\">https://lean-forward.github.io/lean-together/2019/slides/hudon.pdf</a></li>\n<li>see also: <ul>\n<li>its usage in <a href=\"https://github.com/unitb/unitb-semantics\">unitb-semantics</a>, ref: <a href=\"https://arxiv.org/abs/1810.10143\">https://arxiv.org/abs/1810.10143</a></li>\n<li><a href=\"https://github.com/unitb/separation-logic\">separation-logic</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/GaloisInc/lean-protocol-support/tree/master/galois/temporal\">https://github.com/GaloisInc/lean-protocol-support/tree/master/galois/temporal</a> (updated: Sep 22, 2017)<ul>\n<li>has: LTL + LTS (Labelled Transition System)</li>\n<li>ref: Roberto Gorrieri. Process Algebras for Petri Nets: The Alphabetization of Distributed Systems. Springer, 2017</li>\n</ul>\n</li>\n</ul>\n<p>Actually, only the last three match the topic, and they're all in Lean 3 .</p>",
        "id": 390030028,
        "sender_full_name": "Utensil Song",
        "timestamp": 1694261829
    },
    {
        "content": "<p>Thanks both! Very much appreciated.</p>",
        "id": 390167060,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1694368074
    },
    {
        "content": "<p>Did you already start working on this or found more related work? I am interested in Modal Logic in general and sometimes I dream of a general way to embed Modal (or also other Logics) in Lean / Mathlib. For Basic Modal Logic I clumsily formalized a tableaux system as my first Lean 3 project <a href=\"https://github.com/m4lvin/tablean\">https://github.com/m4lvin/tablean</a> and my long-term goal is to cover Propositional Dynamic Logic (also after switching to Lean 4).</p>",
        "id": 394907353,
        "sender_full_name": "Malvin Gattinger",
        "timestamp": 1696449169
    }
]