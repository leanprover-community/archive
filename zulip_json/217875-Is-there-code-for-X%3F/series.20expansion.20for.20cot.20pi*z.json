[
    {
        "content": "<p>Inspired by :   <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/real.2Ecos.20and.20real.2Esin.20as.20infinite.20series\">https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/real.2Ecos.20and.20real.2Esin.20as.20infinite.20series</a></p>\n<p>Do we have: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">cot_series_rep</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℍ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">cot</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">π</span><span class=\"bp\">*</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n<span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">z</span><span class=\"bp\">-</span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">z</span><span class=\"bp\">+</span><span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"c1\">--here ℍ is the complex upper half plane.</span>\n</code></pre></div>",
        "id": 325360634,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675333627
    },
    {
        "content": "<p>I find this incredibly unlikely given we didn't have the more basic series!</p>",
        "id": 325360759,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675333661
    },
    {
        "content": "<p>I guess I should have been a bit less ambitious. Do we have enough to prove this without too much pain?</p>",
        "id": 325362260,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675334088
    },
    {
        "content": "<p>Can you express it in terms of <code>has_sum</code>?</p>",
        "id": 325362498,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675334172
    },
    {
        "content": "<p>The expansion you're asking for is apparently <a href=\"https://proofwiki.org/wiki/Mittag-Leffler_Expansion_for_Cotangent_Function\">the Mittag-Leffler Expansion</a>, assuming the name there is correct</p>",
        "id": 325362979,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675334341
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/series.20expansion.20for.20cot.20pi*z/near/325362498\">said</a>:</p>\n<blockquote>\n<p>Can you express it in terms of <code>has_sum</code>?</p>\n</blockquote>\n<p>You mean something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">cot_series_rep</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℍ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">),</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">cot</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 325365460,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675335097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/series.20expansion.20for.20cot.20pi*z/near/325362979\">said</a>:</p>\n<blockquote>\n<p>The expansion you're asking for is apparently <a href=\"https://proofwiki.org/wiki/Mittag-Leffler_Expansion_for_Cotangent_Function\">the Mittag-Leffler Expansion</a>, assuming the name there is correct</p>\n</blockquote>\n<p>yeah thats it (although I was lazy and only stated it for the upper half plane).</p>",
        "id": 325365609,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675335132
    },
    {
        "content": "<p>I was hoping there was some nice way to absorb the <code>1/z</code> term into the sum, but I guess it likely doesn't matter</p>",
        "id": 325365613,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675335133
    },
    {
        "content": "<p>A proof of this is to take the logarithmic derivative for <a href=\"https://proofwiki.org/wiki/Euler_Formula_for_Sine_Function\">the product formula for sin</a> which I also expect we dont have...</p>",
        "id": 325366172,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675335305
    },
    {
        "content": "<p>I feel like <span class=\"user-mention\" data-user-id=\"481963\">@David Loeffler</span> just PR'd something very similar to that</p>",
        "id": 325366492,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675335398
    },
    {
        "content": "<p>Do we have derivatives of infinite products though?</p>",
        "id": 325370267,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1675336561
    },
    {
        "content": "<p>Do we have infinite products?</p>",
        "id": 325373551,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675337468
    },
    {
        "content": "<p>Barely, via <a href=\"https://leanprover-community.github.io/mathlib_docs/find/additive\">docs#additive</a>...</p>",
        "id": 325374138,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675337647
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/egWEeT9YDvLfUqfLhVxOJy0L/image.png\">image.png</a> <br>\nIm so stupid, I saw this and thought, this sounds useful. Shame that \"/\" isnt division though.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/egWEeT9YDvLfUqfLhVxOJy0L/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/egWEeT9YDvLfUqfLhVxOJy0L/image.png\"></a></div>",
        "id": 325374265,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675337701
    },
    {
        "content": "<p>Rather than differentiating products, it's probably easier to go the other way: take the log of the product formula, get an infinite series for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>sin</mi><mo>⁡</mo><mi>π</mi><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>π</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\log (\\sin \\pi x / \\pi x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>, and then differentiate that term-by-term.</p>",
        "id": 325374531,
        "sender_full_name": "David Loeffler",
        "timestamp": 1675337794
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/series.20expansion.20for.20cot.20pi*z/near/325366492\">said</a>:</p>\n<blockquote>\n<p>I feel like <span class=\"user-mention silent\" data-user-id=\"481963\">David Loeffler</span> just PR'd something very similar to that</p>\n</blockquote>\n<p>which PR is this?</p>",
        "id": 325377975,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675338842
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/18281\">#18281</a></p>",
        "id": 325378209,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675338915
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.tendsto_euler_sin_prod\">docs#real.tendsto_euler_sin_prod</a></p>",
        "id": 325378276,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675338939
    },
    {
        "content": "<p>Oh awesome, thanks!</p>",
        "id": 325378584,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1675339031
    },
    {
        "content": "<p>We know that if a sequence of holomorphic functions is converging uniformly on an open set to a limit, then the derivatives also converge locally uniformly. So you can start from the convergence of the product to sine, take the logarithm, differentiate, and get what you want. I don't think the current formulation gives local uniformity in the convergence of the product to sine, though.</p>",
        "id": 325381818,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1675339882
    },
    {
        "content": "<p>Uniform convergence can probably be deduced from pointwise convergence, though, by noticing that the remainder of the product (or of the series after taking the logarithm) is uniformly controlled, which follows from summability of <code>1/n^2</code>.</p>",
        "id": 325382653,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1675340155
    },
    {
        "content": "<blockquote>\n<p>Uniform convergence can probably be deduced from pointwise convergence, though</p>\n</blockquote>\n<p>Yes, I wondered about this during the reviewing process. The original code for that PR gave explicit convergence bounds (uniform in z), but was long and computational; Sebastian found a much more conceptual, but \"softer\", proof which doesn't give these explicit estimates, but it doesn't matter, because it shouldn't be difficult to estimate the tail of the product and deduce uniform convergence from pointwise.</p>",
        "id": 325390470,
        "sender_full_name": "David Loeffler",
        "timestamp": 1675342528
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/series.20expansion.20for.20cot.20pi*z/near/325360634\">said</a>:</p>\n<blockquote>\n<p>Inspired by :   <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/real.2Ecos.20and.20real.2Esin.20as.20infinite.20series\">https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/real.2Ecos.20and.20real.2Esin.20as.20infinite.20series</a></p>\n<p>Do we have: </p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">cot_series_rep</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℍ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">cot</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">π</span><span class=\"bp\">*</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n<span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">z</span><span class=\"bp\">-</span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">z</span><span class=\"bp\">+</span><span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"c1\">--here ℍ is the complex upper half plane.</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Ok I finally had time to finish this. Its unfortunately still in lean 3, but I'll start porting it soon.</p>",
        "id": 381532632,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691077633
    },
    {
        "content": "<p>Also, using this, we now have:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">Eisenstein_Series_q_expansion_Bernoulli</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hk</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hk2</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℍ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">Eisenstein_Series_of_wt_</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">=</span>\n  <span class=\"mi\">2</span><span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">bernoulli</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">!</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n    <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">2</span> <span class=\"bp\">*</span>  <span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">k</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">!</span><span class=\"o\">)</span> <span class=\"bp\">*</span>\n      <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">),</span>  <span class=\"o\">(</span><span class=\"n\">sigma_fn</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span> <span class=\"mi\">2</span> <span class=\"bp\">*↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>i.e. the link between the q-expansion of Eisenstein series and Bernoulli numbers (or riemann zeta values) and lastly, I can finally prove that the Eisenstein series of level 1 and weight 4 is non-trivial.</p>",
        "id": 381533119,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691077732
    },
    {
        "content": "<p>Do we already know it is a modular form?</p>",
        "id": 381534259,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1691077940
    },
    {
        "content": "<p>yep!</p>",
        "id": 381534401,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691077965
    },
    {
        "content": "<p>oh but not in mathlib</p>",
        "id": 381534454,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691077976
    },
    {
        "content": "<p>my <a href=\"https://github.com/CBirkbeck/ModularForms/tree/Modularity_Conjecture/src\">repo</a>  knows this</p>",
        "id": 381534497,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691077985
    },
    {
        "content": "<p>Great! Waiting for the PRs <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 381534752,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1691078035
    },
    {
        "content": "<p>yeah I just need to learn lean 4 and then make it all pretty, cuz (as usual) its currently a huge mess</p>",
        "id": 381535217,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691078122
    },
    {
        "content": "<p>This is a great result and one I've been waiting for for ages :-) We've had the vector space of modular forms of a given weight and level for a while now but could do neither of: (1) prove the spaces are finite-dimensional or (2) construct a single nonzero example :-) Perhaps this is about to change!</p>",
        "id": 381540776,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691079134
    },
    {
        "content": "<p>Yes (2) is done now. As for (1), I have no idea how close this is, we really need to be able to compute some contour integrals (actually just a specific one), but I don't know where we are with this (outside of circles and rectangles).</p>",
        "id": 381541584,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691079299
    },
    {
        "content": "<p>Another interesting project would be to get Delta as an infinite product <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><msub><mo>∏</mo><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><msup><mi>q</mi><mi>n</mi></msup><msup><mo stretchy=\"false\">)</mo><mn>24</mn></msup></mrow><annotation encoding=\"application/x-tex\">q\\prod_n(1-q^n)^{24}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0017em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">24</span></span></span></span></span></span></span></span></span></span></span></span> and relate it to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">E_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">E_6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 381542479,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691079471
    },
    {
        "content": "<p>Yes that would also be good. I have a definition of Delta (using <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">E_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">E_6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>), but we don't yet know its a cuspform (so we have no examples of non-trivial cuspforms).</p>",
        "id": 381543275,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691079643
    }
]