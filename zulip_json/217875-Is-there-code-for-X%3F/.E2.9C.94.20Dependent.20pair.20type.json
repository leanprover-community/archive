[
    {
        "content": "<p>Hello,<br>\nIs there any dependent pair type in Lean 4 (Init or stdlib4)? <code>Prod</code> is nice but it only works for independent pairs. I want something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">DProd</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">fst</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">snd</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"n\">fst</span>\n</code></pre></div>\n<p>I could of course make a custom type for my use case but I just wonder if a standard type with special syntax exists.</p>",
        "id": 351267208,
        "sender_full_name": "Tage Johansson",
        "timestamp": 1681984325
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Sigma#doc\">docs4#Sigma</a></p>",
        "id": 351267598,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1681984434
    },
    {
        "content": "<p>Thans! Exactly what I needed!</p>",
        "id": 351270618,
        "sender_full_name": "Tage Johansson",
        "timestamp": 1681985144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"544752\">Tage Johansson</span> has marked this topic as resolved.</p>",
        "id": 351270738,
        "sender_full_name": "Notification Bot",
        "timestamp": 1681985167
    }
]