[
    {
        "content": "<p>are there theorems for interchanging <code>.re</code> and <code>.im</code> members of complex variables under an integral?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">re</span> <span class=\"bp\">=</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">re</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">im</span> <span class=\"bp\">=</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">im</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 402859756,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700302850
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=integral_re#doc\">docs#integral_re</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=integral_im#doc\">docs#integral_im</a></p>",
        "id": 402859891,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1700302937
    },
    {
        "content": "<p>These would likely not hold without additional assumptions on <code>f</code>: what if the real part is integrable but the imaginary part is not?</p>",
        "id": 402859967,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1700302990
    },
    {
        "content": "<p>Thanks, that appears to be for a <code>SetIntegral</code>, what about for <code>Bochner</code> integrals?</p>",
        "id": 402860925,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700303630
    },
    {
        "content": "<p>You're using <code>Iii</code> there as if it means something, was that intended?</p>",
        "id": 402861741,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1700304203
    },
    {
        "content": "<p>Oh, good point. I want a definite integral over all of \\R. I presume you're saying using <code>Iii</code> makes it a set integral? I don't really understand the difference between Set and Bochner integrals. are definite Bochner integrals a thing?</p>",
        "id": 402862313,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700304665
    },
    {
        "content": "<p>Why don't you write a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> with what you actually want? Then there wouldn't be all this confusion about what the question is.</p>",
        "id": 402862606,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700304899
    },
    {
        "content": "<p><code>lintegral</code> refers to the Lebesgue integral. <code>integral</code> refers to the Bochner integral. There are <code>Set</code> versions of both, which simply restrict the measure to a set.</p>",
        "id": 402862798,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1700305046
    },
    {
        "content": "<p>to write an integral over the whole type <code>ℝ</code>, simply omit the <code>in</code> part when writing the integral: <code>∫ x, f x</code>.<br>\nThe two lemmas you are looking for are the two lemmas Yaël linked to, which are about the Bochner integral.</p>",
        "id": 402864107,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1700305476
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Integral.Bochner</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Measure.Haar.OfBasis</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Exponential</span>\n<span class=\"kn\">open</span> <span class=\"n\">Complex</span>\n<span class=\"kn\">open</span> <span class=\"n\">Real</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">ℝ</span>  <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span>\n          <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">im</span> <span class=\"bp\">^</span>\n      <span class=\"mi\">2</span> <span class=\"bp\">+</span>\n    <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span>\n          <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">re</span> <span class=\"bp\">^</span>\n      <span class=\"mi\">2</span>\n      <span class=\"bp\">=</span>\n      <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">))</span> <span class=\"bp\">^</span>\n      <span class=\"mi\">2</span> <span class=\"bp\">+</span>\n    <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">)</span><span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 402864764,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700305624
    },
    {
        "content": "<p>I realise I am missing an integrability constraint on <code>f</code>, but ignoring that for the moment, what I am trying to do is simplify the integrals by killing the terms in the integral that will be killed by <code>.re</code> or <code>.im</code></p>",
        "id": 402865699,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700305834
    },
    {
        "content": "<p>If you put <code>set_option autoImplicit false</code> before the example, you see many errors because some things are not defined. For example, <code>Iii</code> does not exist. Right now Lean sees that it does not exist, and from the expression it guesses that it has to be some set and introduces a variable <code>Iii: Set ℝ</code> in the context of your example. The <code>set_option autoImplicit false</code> command tells Lean not to do that: if something does not exist, don't invent it.</p>",
        "id": 402865707,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1700305840
    },
    {
        "content": "<p>Open this in the online editor:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Integral.Bochner</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Measure.Haar.OfBasis</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Exponential</span>\n<span class=\"kn\">open</span> <span class=\"n\">Complex</span>\n<span class=\"kn\">open</span> <span class=\"n\">Real</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">false</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">ℝ</span>  <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span>\n          <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">im</span> <span class=\"bp\">^</span>\n      <span class=\"mi\">2</span> <span class=\"bp\">+</span>\n    <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span>\n          <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">re</span> <span class=\"bp\">^</span>\n      <span class=\"mi\">2</span>\n      <span class=\"bp\">=</span>\n      <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">))</span> <span class=\"bp\">^</span>\n      <span class=\"mi\">2</span> <span class=\"bp\">+</span>\n    <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iii</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">)</span><span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 402865745,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1700305877
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"350992\">Rémy Degenne</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/re.20and.20im.20parts.20of.20integrals.20.3C-.3E.20parts.20of.20the.20integrand/near/402864107\">said</a>:</p>\n<blockquote>\n<p>to write an integral over the whole type <code>ℝ</code>, simply omit the <code>in</code> part when writing the integral: <code>∫ x, f x</code>.<br>\nThe two lemmas you are looking for are the two lemmas Yaël linked to, which are about the Bochner integral.</p>\n</blockquote>\n<p>Thanks! I had assumed for some reason that <code>∫ x, f x</code> was _in_definite.</p>",
        "id": 402865876,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700305967
    },
    {
        "content": "<p>Your example, without errors (and with fewer parentheses, coercions, etc.) :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Integral.Bochner</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Measure.Haar.OfBasis</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Exponential</span>\n<span class=\"kn\">open</span> <span class=\"n\">Complex</span>\n<span class=\"kn\">open</span> <span class=\"n\">Real</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">false</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">im</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span>\n      <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">re</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span>\n    <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">Real.cos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sinh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span>\n      <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">Real.sin</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.cosh</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)))</span><span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 402866012,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1700306051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"663331\">Nicholas Wilson</span> has marked this topic as resolved.</p>",
        "id": 402866951,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700306645
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/re.20and.20im.20parts.20of.20integrals.20.3C-.3E.20parts.20of.20the.20integrand/near/402859891\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=integral_re#doc\">docs#integral_re</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=integral_im#doc\">docs#integral_im</a></p>\n</blockquote>\n<p>These don't apply directly here. I guess because of <code>Complex.re</code> vs <code>IsRorC.re</code>?</p>",
        "id": 402867012,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1700306698
    },
    {
        "content": "<p>Yes that's the issue. <code>rw [← IsROrC.re_to_complex, ← integral_re]</code> works</p>",
        "id": 402867064,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1700306739
    }
]