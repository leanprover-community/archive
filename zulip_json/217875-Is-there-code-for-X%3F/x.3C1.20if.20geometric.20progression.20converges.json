[
    {
        "content": "<p>I was unable to find the</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">nnreal.lt_one_of_tendsto_pow_0</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"bp\">‚â•</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>It was not hard to prove it, but I cannot believe it is not there...</p>",
        "id": 369939255,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1687850599
    },
    {
        "content": "<p>It seems to me that this is indeed missing.</p>\n<p>You probably saw that we have the converse <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=NNReal.tendsto_pow_atTop_nhds_0_of_lt_1#doc\">docs#NNReal.tendsto_pow_atTop_nhds_0_of_lt_1</a> so I guess we should upgrade that to an iff.</p>",
        "id": 369954200,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1687853477
    },
    {
        "content": "<p>Unless you want to do the job twice, I suggest that you submit this (<code>iff</code>) lemma to <code>mathlib4</code>.</p>",
        "id": 370132813,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1687883901
    },
    {
        "content": "<p>I am happy to do so, but I have been told by \"some\" Maintainer (that I will not mention) that it is probably better to wait until the freeze. Should I go ahead or wait? I will ping  <em>three</em> maintainers, so you cannot guess who they were <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span> <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span></p>",
        "id": 370906061,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1688067782
    },
    {
        "content": "<p>It is fine to add this to mathlib4 now. The current situation allows for adding new lemmas. Please don't open new mathlib3 PRs unless they are useful for the port, or represent significant new work that you don't want lost.</p>",
        "id": 370943979,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688079782
    },
    {
        "content": "<p>I think it was me that made that comment? But that was before I realized that the port will be finished before the freeze :)</p>",
        "id": 371103255,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1688123323
    },
    {
        "content": "<p>Now that the Copenhagen Masterclass is over, <a href=\"https://github.com/leanprover-community/mathlib4/pull/5656\">#5656</a>.</p>",
        "id": 371588365,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1688253265
    }
]