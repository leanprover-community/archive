[
    {
        "content": "<p>I found that the following two theorems are missing, even though there are several places (at least for me) to use it often. Still, I'd like to check again if these theorems are really missing.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"kd\">theorem</span> <span class=\"n\">Finset.singleton_union</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"bp\">∪</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">insert</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">intro</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">simp_all</span>\n\n<span class=\"kn\">protected</span> <span class=\"kd\">theorem</span> <span class=\"n\">Finset.union_singleton</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">s</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"n\">insert</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">intro</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">simp_all</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">tauto</span>\n</code></pre></div>",
        "id": 367418628,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1687104675
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.insert_eq\">docs#finset.insert_eq</a> and I guess the other one we don't have because it follows easily from the first</p>",
        "id": 367421065,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1687105432
    },
    {
        "content": "<p>I knew there already exists some function so simple. Thanks!</p>",
        "id": 367422750,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1687105956
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"574112\">Jihoon Hyun</span> has marked this topic as resolved.</p>",
        "id": 367422765,
        "sender_full_name": "Notification Bot",
        "timestamp": 1687105961
    },
    {
        "content": "<p>Shouldn't these lemmas exist separately, though? They seem quite convenient to add to a simp set in some contexts.</p>",
        "id": 367467820,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687127856
    },
    {
        "content": "<p>From experience, they are not as useful as you would think, because when inducting you either stay in the <code>insert</code> world all along or must keep track of a <code>union</code> all along. I'd happy to be proven wrong though.</p>",
        "id": 367471578,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1687130791
    },
    {
        "content": "<p>A point in favor of the suggested lemmas: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.union_singleton\">docs#set.union_singleton</a></p>",
        "id": 367479885,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687136244
    }
]