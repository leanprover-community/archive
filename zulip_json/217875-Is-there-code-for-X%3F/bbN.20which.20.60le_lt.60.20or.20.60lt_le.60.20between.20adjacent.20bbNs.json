[
    {
        "content": "<p>It seems like there is no lemma like below. If it really isn't present, I'd like to make a pr for adding these. Please tell me if these are too elementary to be added somewhere in the library.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">le_and_lt_succ</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m.succ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n  <span class=\"n\">le_antisymm</span> <span class=\"o\">(</span><span class=\"n\">lt_succ.mp</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"n\">h₁</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">lt_and_le_succ</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m.succ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">m.succ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">le_antisymm</span> <span class=\"n\">h₂</span> <span class=\"n\">h₁</span>\n</code></pre></div>\n<p>Aside from that, can this be applied to <code>IsWellOrdered</code> as well?</p>",
        "id": 401608312,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1699790665
    },
    {
        "content": "<p>Whether to add these two lemmas about <code>Nat</code> is a question to <a class=\"stream\" data-stream-id=\"348111\" href=\"/#narrow/stream/348111-std4\">#std4</a>  maintainer(s). AFAIR, <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is one (of two? three?) of them.</p>",
        "id": 401624082,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699805214
    },
    {
        "content": "<p>A version for <code>Order.succ</code> would be a question for Mathlib.</p>",
        "id": 401624118,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699805266
    },
    {
        "content": "<p>I think we should always normalise <code>a &lt; b.succ</code> to <code>a ≤ b</code> and <code>a.succ ≤ b</code> to <code>a &lt; b</code>, so I would be again the first one.</p>",
        "id": 401625693,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699807160
    },
    {
        "content": "<p>The lemmas look fine to me, I've definitely felt the need for them in the past (it is a combination of two lemmas but it would still be nice to have just one). Not so sure about the names though, <code>and</code> should not be involved since there is no <code>And</code> in the statement</p>",
        "id": 401784722,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699888533
    },
    {
        "content": "<p><code>le_antisymm_lt_succ</code>?</p>",
        "id": 401784895,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699888573
    },
    {
        "content": "<p>that would make more sense with the <code>antisymm</code> at the end, no?</p>",
        "id": 401784985,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699888604
    },
    {
        "content": "<p><code>eq_of_le_of_lt_succ</code> is the Yaël-approved name.</p>",
        "id": 402009462,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699975471
    }
]