[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> this sounds likes something you'd have written :)</p>\n<p>(It's just a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=bot_eq_zero#doc\">docs#bot_eq_zero</a> away from <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Ici_bot#doc\">docs#Ici_bot</a> , but that's kinda unintuitive in my opinion)</p>",
        "id": 396973777,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697488590
    },
    {
        "content": "<p>Actually, the code I'm looking at is for (0 : ℝ≥0∞), but same question</p>",
        "id": 396973933,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697488682
    },
    {
        "content": "<p>Nope. We don't have that. Correct generality is <code>CanonicallyOrderedAddCommMonoid</code>.</p>",
        "id": 396973957,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697488684
    },
    {
        "content": "<p>Would it be worth adding / where should it go?</p>",
        "id": 396974518,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697489009
    },
    {
        "content": "<p>I'm honestly not so in favour of duplicating all <code>bot</code> lemmas to <code>zero</code>.</p>",
        "id": 396976304,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697489939
    },
    {
        "content": "<p>I would only be favour when there's a simp confluence issue.</p>",
        "id": 396976415,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697489993
    },
    {
        "content": "<p>I think there's a <code>simp</code> feature request hiding here; <code>simp</code> already knows how to apply <code>add_comm</code> in moderation without causing loops. Perhaps it could learn to apply <code>bot_eq_zero</code> and <code>zero_eq_bot</code> (or whatever the lemmas are called) simultaneously without loop.</p>",
        "id": 396976879,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697490174
    }
]