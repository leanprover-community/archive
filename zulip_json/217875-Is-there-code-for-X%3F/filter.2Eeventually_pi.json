[
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.eventually.prod_mk\">docs#filter.eventually.prod_mk</a> for the interaction between <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.eventually\">docs#filter.eventually</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.prod\">docs#filter.prod</a>. Where is the analogous lemma for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.pi\">docs#filter.pi</a>?</p>",
        "id": 343561431,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679450359
    },
    {
        "content": "<p>I think it’s not true, because you can’t swap the usual forall and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.eventually\">docs#filter.eventually</a></p>",
        "id": 343700539,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1679496602
    },
    {
        "content": "<p>Or at least the statement would need to be more complicated</p>",
        "id": 343700800,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1679496651
    },
    {
        "content": "<p>Maybe the assumption is that the indexing set of the <code>pi</code> is finite.</p>",
        "id": 343702529,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679497023
    },
    {
        "content": "<p>Yes, I am happy with a finite indexing type. I don't know the correct generality but I was surprised that we have no version of it at all.</p>",
        "id": 343714016,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679499379
    },
    {
        "content": "<p>Oh right if the indexing set is finite then it is definitely true. It seems that we indeed lack some API for this case, but <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.eventually_all\">docs#filter.eventually_all</a> should allow you to emulate the proof of the binary case</p>",
        "id": 343775902,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1679515987
    },
    {
        "content": "<p>Thanks for the hint! It's now in <a href=\"https://github.com/leanprover-community/mathlib/pull/18629\">#18629</a>.</p>",
        "id": 343944612,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679570259
    }
]