[
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.at_top_Ici_eq\">docs#filter.at_top_Ici_eq</a> for one-sided intervals; is something like the following true for two-sided intervals?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">at_top_Ioo</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">at_top</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"n\">set.Ioo</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span><span class=\"o\">[</span><span class=\"bp\">‚â§</span><span class=\"o\">]</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comap</span> <span class=\"n\">coe</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 365591436,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686581962
    },
    {
        "content": "<p>Is it true? Sure, with a hypothesis that <code>a &lt; b</code>. Perhaps you may also prefer to switch <code>ùìù[‚â§]</code> to <code>ùìù[&lt;]</code> in your statement, but I don't think it makes a difference. I'm not sure if we have it though.</p>",
        "id": 365612898,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686586266
    },
    {
        "content": "<p>That hypothesis isn't needed:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">at_top_Ioo</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">filter.at_top</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"n\">set.Ioo</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span><span class=\"o\">[</span><span class=\"bp\">‚â§</span><span class=\"o\">]</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comap</span> <span class=\"n\">coe</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">is_empty</span> <span class=\"o\">(</span><span class=\"n\">set.Ioo</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">set.is_empty_coe_sort.mpr</span> <span class=\"o\">(</span><span class=\"n\">set.Ioo_eq_empty</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n    <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 365621589,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686588250
    },
    {
        "content": "<p>oh duh, sure.</p>",
        "id": 365627414,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686589665
    },
    {
        "content": "<p>We have, e.g., <a href=\"https://leanprover-community.github.io/mathlib_docs/find/map_coe_Ioo_at_top\">docs#map_coe_Ioo_at_top</a></p>",
        "id": 365671330,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686600388
    },
    {
        "content": "<p>And <a href=\"https://leanprover-community.github.io/mathlib_docs/find/comap_coe_Ioo_nhds_within_Iio\">docs#comap_coe_Ioo_nhds_within_Iio</a></p>",
        "id": 365671457,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686600441
    },
    {
        "content": "<p>Nice, that looks like exactly what I was looking for. Should we rename either that or <code>at_top_Ici_eq</code> to be more consistent?</p>",
        "id": 365675717,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686601767
    },
    {
        "content": "<p>If you rename it, then you need to switch LHS with RHS.</p>",
        "id": 365693467,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686608936
    },
    {
        "content": "<p>Feel free to do it, but you're forward-porting the changes.</p>",
        "id": 365693598,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686608989
    },
    {
        "content": "<p>The lemmas were added in <a href=\"https://github.com/leanprover-community/mathlib/pull/5238\">#5238</a>, then generalized in <a href=\"https://github.com/leanprover-community/mathlib/pull/5296\">#5296</a></p>",
        "id": 365693885,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686609099
    },
    {
        "content": "<p>BTW, <a href=\"https://github.com/leanprover-community/mathlib/pull/5296\">#5296</a> also adds some <code>iff</code> lemmas about <code>tendsto</code> and these filters.</p>",
        "id": 365694035,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686609158
    },
    {
        "content": "<p>Which direction do you prefer? (ie, which set of names should we keep?)</p>",
        "id": 365704060,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686613860
    },
    {
        "content": "<p>Sorry, I'm becoming too sleepy to make decisions... When I can't choose, I usually start a vote and let others choose (though it takes a day or two).</p>",
        "id": 365704920,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1686614434
    },
    {
        "content": "<p>I would imagine that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.at_top_Ici_eq\">docs#filter.at_top_Ici_eq</a> is the more common rewrite direction, but I really don't think it matters much.</p>",
        "id": 365711747,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686618106
    }
]