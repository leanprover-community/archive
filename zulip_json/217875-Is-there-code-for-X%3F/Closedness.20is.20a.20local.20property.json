[
    {
        "content": "<p>Do we have somewhere that a set is closed if its intersection with every compact set is closed? I need this for <code>ℝⁿ</code>.</p>",
        "id": 343367438,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679404593
    },
    {
        "content": "<p>I think you'll need to assume your space is locally compact for this to be true (maybe that's obvious to you).</p>",
        "id": 343370336,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1679405269
    },
    {
        "content": "<p>For <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> you could use (the complement of) <a href=\"https://leanprover-community.github.io/mathlib_docs/find/metric.is_open_iff\">docs#metric.is_open_iff</a> using that compacts are closed and bounded.</p>",
        "id": 343371255,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1679405488
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Closedness.20is.20a.20local.20property/near/343370336\">said</a>:</p>\n<blockquote>\n<p>I think you'll need to assume your space is locally compact for this to be true (maybe that's obvious to you).</p>\n</blockquote>\n<p>\"Compactly generated\" is enough (in fact it's equivalent to the statement that Yaël wanted); Hausdorff locally compact spaces and metric spaces are compactly generated. That kind of space plays a big role in condensed maths, so maybe they're already formalized (Filippo would know better), but I don't know whether they are in mathlib already (I couldn't find them).</p>",
        "id": 343894518,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1679557853
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/t2_space\">docs#t2_space</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/locally_compact_space\">docs#locally_compact_space</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/metric_space\">docs#metric_space</a></p>",
        "id": 343895751,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679558189
    },
    {
        "content": "<p>For LTE we didn't formalize anything about qs condensed sets, and not really anything about cgHaus spaces. The only thing that comes close is what we called \"compHaus-ly filtered pseudo-normed groups\": abelian groups <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> with an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">R</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">ℝ≥0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8249em;vertical-align:-0.136em;\"></span><span class=\"mord amsrm\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>-indexed system of subsets that are CH-spaces that satisfy:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><msub><mi>c</mi><mn>1</mn></msub></msub><mo>+</mo><msub><mi>M</mi><msub><mi>c</mi><mn>2</mn></msub></msub><mo>⊆</mo><msub><mi>M</mi><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub></mrow></msub></mrow><annotation encoding=\"application/x-tex\">M_{c₁} + M_{c₂} ⊆ M_{c₁ + c₂}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><msub><mi>M</mi><mi>c</mi></msub><mo>=</mo><msub><mi>M</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">-M_c = M_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∈</mo><msub><mi>M</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">0 ∈ M_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>≤</mo><msub><mi>c</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">c₁ ≤ c₂</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><msub><mi>c</mi><mn>1</mn></msub></msub></mrow><annotation encoding=\"application/x-tex\">M_{c₁}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span></span> is a closed subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><msub><mi>c</mi><mn>2</mn></msub></msub></mrow><annotation encoding=\"application/x-tex\">M_{c₂}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p>and most of the time: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mo>⋃</mo><msub><mi>M</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">M = ⋃ M_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">⋃</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 343896554,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1679558423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> I was actually asking about cg (= compactly generated) spaces in mathlib, as I trusted you guys to have already implemented metric spaces etc. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <br>\nA topological space X is called cg if, for every subset Y of X, we have that Y is closed if and only if the intersection of Y with every compact subspace K of X is closed in K. (Here \"compact\" does not include T2, just like in mathlib.) If X is Hausdorff, the last condition is equivalent to Y \\cap K being closed in X.<br>\nSo your question could be reinterpreted as \"is R^n a cg space ?\" and my answer was \"yes because metric spaces are known to be cg, but that might not be in mathlib yet\". Anyway I had stuff to do, so I wrote a proof that metric spaces are cg in order to procrastinate. <span aria-label=\"oops\" class=\"emoji emoji-1f643\" role=\"img\" title=\"oops\">:oops:</span></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.metric_space.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.sequences</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.alexandroff</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">sequence_and_point_to_map</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">alexandroff</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">option.elim</span> <span class=\"n\">l</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">sequence_and_limit_to_map_is_continuous</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hlim</span> <span class=\"o\">:</span> <span class=\"n\">filter.tendsto</span> <span class=\"n\">u</span> <span class=\"n\">filter.at_top</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">l</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n<span class=\"n\">continuous</span> <span class=\"o\">(</span><span class=\"n\">sequence_and_point_to_map</span> <span class=\"n\">u</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">continuous_iff_continuous_at</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">x</span> <span class=\"k\">with</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span><span class=\"n\">erw</span> <span class=\"n\">alexandroff.continuous_at_infty</span><span class=\"o\">,</span>\n     <span class=\"n\">intros</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n     <span class=\"n\">change</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n     <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">hlim</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n     <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter.mem_map</span><span class=\"o\">,</span> <span class=\"n\">filter.mem_at_top_sets</span><span class=\"o\">,</span> <span class=\"n\">ge_iff_le</span><span class=\"o\">,</span> <span class=\"n\">set.mem_preimage</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n     <span class=\"n\">cases</span> <span class=\"n\">this</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n     <span class=\"n\">set</span> <span class=\"n\">t</span><span class=\"o\">:=</span><span class=\"n\">set.Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">ht</span><span class=\"o\">,</span>\n     <span class=\"n\">existsi</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n     <span class=\"n\">split</span><span class=\"o\">,</span>\n       <span class=\"o\">{</span><span class=\"n\">exact</span> <span class=\"n\">is_closed_discrete</span> <span class=\"n\">t</span><span class=\"o\">,},</span>\n        <span class=\"n\">split</span><span class=\"o\">,</span>\n          <span class=\"o\">{</span><span class=\"n\">refine</span> <span class=\"n\">set.finite.is_compact</span> <span class=\"o\">(</span><span class=\"n\">set.finite_Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">),</span>\n           <span class=\"o\">},</span>\n           <span class=\"n\">unfold</span> <span class=\"n\">set.maps_to</span><span class=\"o\">,</span>\n           <span class=\"n\">intros</span> <span class=\"n\">m</span> <span class=\"n\">hm</span><span class=\"o\">,</span>\n           <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">set.mem_compl_iff</span><span class=\"o\">,</span> <span class=\"n\">set.mem_Icc</span><span class=\"o\">,</span> <span class=\"n\">zero_le'</span><span class=\"o\">,</span> <span class=\"n\">true_and</span><span class=\"o\">,</span> <span class=\"n\">not_le</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hm</span><span class=\"o\">,</span>\n           <span class=\"n\">exact</span> <span class=\"n\">hn</span> <span class=\"n\">m</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hm</span><span class=\"o\">),</span>\n     <span class=\"o\">},</span>\n     <span class=\"n\">erw</span> <span class=\"n\">alexandroff.continuous_at_coe</span><span class=\"o\">,</span>\n     <span class=\"n\">exact</span> <span class=\"n\">continuous.continuous_at</span> <span class=\"n\">continuous_of_discrete_topology</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n\n\n<span class=\"kd\">lemma</span> <span class=\"n\">closed_iff_intersection_with_compacts_is_closed</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"o\">(</span><span class=\"n\">is_closed</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">is_compact</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">is_closed</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">∩</span> <span class=\"n\">K</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span><span class=\"n\">exact</span> <span class=\"bp\">λ</span> <span class=\"n\">hX</span> <span class=\"n\">K</span> <span class=\"n\">hK</span><span class=\"o\">,</span> <span class=\"n\">is_closed.inter</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">is_compact.is_closed</span> <span class=\"n\">hK</span><span class=\"o\">),},</span>\n     <span class=\"n\">intro</span> <span class=\"n\">hX</span><span class=\"o\">,</span>\n     <span class=\"n\">rw</span> <span class=\"bp\">←</span><span class=\"n\">is_seq_closed_iff_is_closed</span><span class=\"o\">,</span>\n     <span class=\"n\">intros</span> <span class=\"n\">u</span> <span class=\"n\">l</span> <span class=\"n\">hu</span> <span class=\"n\">hlim</span><span class=\"o\">,</span>\n     <span class=\"n\">set</span> <span class=\"n\">f</span><span class=\"o\">:=</span><span class=\"n\">sequence_and_point_to_map</span> <span class=\"n\">u</span> <span class=\"n\">l</span><span class=\"o\">,</span>\n     <span class=\"n\">set</span> <span class=\"n\">K</span><span class=\"o\">:=</span><span class=\"n\">f</span> <span class=\"bp\">''</span> <span class=\"bp\">⊤</span><span class=\"o\">,</span>\n     <span class=\"k\">have</span> <span class=\"n\">hK</span> <span class=\"o\">:</span> <span class=\"n\">is_compact</span> <span class=\"n\">K</span> <span class=\"o\">:=</span><span class=\"n\">is_compact.image</span> <span class=\"o\">(</span><span class=\"n\">alexandroff.compact_space</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">is_compact_univ</span>\n       <span class=\"o\">(</span><span class=\"n\">sequence_and_limit_to_map_is_continuous</span> <span class=\"n\">u</span> <span class=\"n\">l</span> <span class=\"n\">hlim</span><span class=\"o\">),</span>\n     <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">∩</span> <span class=\"n\">K</span><span class=\"o\">),</span>\n       <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n       <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">set.mem_inter_iff</span><span class=\"o\">,</span> <span class=\"n\">set.mem_image</span><span class=\"o\">,</span> <span class=\"n\">set.top_eq_univ</span><span class=\"o\">,</span> <span class=\"n\">set.mem_univ</span><span class=\"o\">,</span> <span class=\"n\">true_and</span><span class=\"o\">],</span>\n         <span class=\"n\">split</span><span class=\"o\">,</span>\n           <span class=\"o\">{</span><span class=\"n\">exact</span> <span class=\"n\">hu</span> <span class=\"n\">n</span><span class=\"o\">,},</span>\n            <span class=\"n\">existsi</span> <span class=\"o\">(</span><span class=\"n\">some</span> <span class=\"n\">n</span><span class=\"o\">),</span>\n            <span class=\"n\">refl</span><span class=\"o\">,</span>\n     <span class=\"n\">exact</span> <span class=\"n\">set.mem_of_mem_inter_left</span> <span class=\"o\">((</span><span class=\"n\">is_closed.is_seq_closed</span> <span class=\"o\">(</span><span class=\"n\">hX</span> <span class=\"n\">K</span> <span class=\"n\">hK</span><span class=\"o\">))</span> <span class=\"n\">this</span> <span class=\"n\">hlim</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 344085394,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1679600434
    },
    {
        "content": "<p>I agree that cg should be added to mathlib.</p>",
        "id": 344088560,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1679601328
    },
    {
        "content": "<p>And while we are at it, we should also add <em>compactological spaces</em> to mathlib, because those are exactly the quasi-separated condensed sets.</p>",
        "id": 344088708,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1679601377
    },
    {
        "content": "<p><span aria-label=\"nerd\" class=\"emoji emoji-1f913\" role=\"img\" title=\"nerd\">:nerd:</span> <span aria-label=\"direct hit\" class=\"emoji emoji-1f3af\" role=\"img\" title=\"direct hit\">:direct_hit:</span></p>",
        "id": 344091418,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679602284
    },
    {
        "content": "<p>I solved my problem without needing this (see <a href=\"https://github.com/leanprover-community/mathlib/pull/16976\">#16976</a>), but I can still try to get cg spaces and compactological spaces into mathlib. Where can I read about the latter? I did not find much online.</p>",
        "id": 344096723,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679604046
    },
    {
        "content": "<p>If this is going to be a new file, can it go straight to mathlib4? IIRC there seemed to be some agreement that perhaps new file PRs would be acceptable</p>",
        "id": 344105670,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679607126
    },
    {
        "content": "<p>even addition-only PRs to existing files are fine, I think.</p>",
        "id": 344108143,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1679608093
    },
    {
        "content": "<p>Oh don't worry it's getting on a long enough todo list that I won't get around to doing it before the port is over <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 344109325,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679608590
    },
    {
        "content": "<p>Prior discussions include <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/kTop.20is.20CCC/near/200970908\">https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/kTop.20is.20CCC/near/200970908</a></p>",
        "id": 344110981,
        "sender_full_name": "Reid Barton",
        "timestamp": 1679609281
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Closedness.20is.20a.20local.20property/near/344096723\">said</a>:</p>\n<blockquote>\n<p>I solved my problem without needing this (see <a href=\"https://github.com/leanprover-community/mathlib/pull/16976\">#16976</a>), but I can still try to get cg spaces and compactological spaces into mathlib. Where can I read about the latter? I did not find much online.</p>\n</blockquote>\n<p><a href=\"https://link.springer.com/chapter/10.1007/BFb0061237\">https://link.springer.com/chapter/10.1007/BFb0061237</a><br>\n(Should not require an account to download.)<br>\nI don't think there's much to read, since compactological spaces don't seem to have made it into the mainstream.</p>",
        "id": 344352029,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1679685919
    },
    {
        "content": "<p>Shameless plug: <a href=\"https://math.commelin.net/2023/condensed/compactological.pdf\">https://math.commelin.net/2023/condensed/compactological.pdf</a><br>\nBut I agree there isn't that much theory yet.</p>",
        "id": 344352229,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1679685982
    }
]