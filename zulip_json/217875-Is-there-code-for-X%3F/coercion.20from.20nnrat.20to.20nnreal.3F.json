[
    {
        "content": "<p>Does the coercion from <code>nnrat</code> to <code>nnreal</code> not exist? I looked around a bit and couldn't find it immediately... Is it worthwhile adding it? (Sure, it can be done indirectly, but that gets annoying if there are a lot of such...) Thanks!</p>",
        "id": 327462087,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1676260305
    },
    {
        "content": "<p>If it doesn't exist, it certainly should be added.</p>",
        "id": 327471737,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676268570
    },
    {
        "content": "<p>I think <code>nnrat</code> is relatively new, so I can indeed imagine that the coe doesn't exist yet.</p>",
        "id": 327471785,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1676268592
    },
    {
        "content": "<p>I have an open PR for it (<a href=\"https://github.com/leanprover-community/mathlib/pull/16554\">#16554</a>), but it got swallowed by the tide. It certainly can be fixed now that it's fully underwater.</p>",
        "id": 327489536,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676276686
    },
    {
        "content": "<p>That looks like a rather unpleasant PR to forward-port</p>",
        "id": 327497982,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676279615
    },
    {
        "content": "<p>Why so? The infrastructure is already here in the form of <code>rat.cast</code>, so it's not like there are additional coercion problems to figure out.</p>",
        "id": 327499959,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676280235
    },
    {
        "content": "<p>Without looking into it in depth, probably the part where it modifies 25 files?</p>",
        "id": 327505000,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676281759
    },
    {
        "content": "<p>It worries me that this might not be obvious.</p>",
        "id": 327505402,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676281874
    },
    {
        "content": "<p>+614 -275</p>",
        "id": 327508468,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676282872
    },
    {
        "content": "<p>Although what's relevant is how much of the diff lies in already-ported files</p>",
        "id": 327508801,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676282956
    },
    {
        "content": "<p>Oh most changes will disappear once I've merged master. I opened this PR when the imports were still a tangled mess, so most of the diff is spent fixing them.</p>",
        "id": 327512453,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676283974
    },
    {
        "content": "<p>Good news, <a href=\"https://github.com/leanprover-community/mathlib/pull/16554\">#16554</a> is mostly compiling,modulo a few easy sorries and the <code>guard_exists monoid_hom</code> that <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> put in <a href=\"https://tqft.net/mathlib/algebra/order/field/defs\">file#algebra/order/field/defs</a> (which I think we'll have to give up on if we don't want to split another 20 files).</p>",
        "id": 328824738,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676820278
    },
    {
        "content": "<p>Bad news is that it touches 33 files</p>",
        "id": 328824859,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676820323
    },
    {
        "content": "<p>Shall we just close it?</p>",
        "id": 328825864,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676820760
    },
    {
        "content": "<p>Are there any auxiliary lemmas (not about the new nnrat.cast) from that PR that could be split to a separate PR? I can't tell which lemmas are new and which are moves.</p>",
        "id": 328825978,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676820814
    },
    {
        "content": "<p>Forward-porting a handful of <code>rfl</code> lemmas is totally reasonable IMO, forward-porting a major refactor likely less so</p>",
        "id": 328826016,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676820835
    },
    {
        "content": "<p>Things like <code>ulift.up_nat_cast</code>, assuming that's new in that PR</p>",
        "id": 328826118,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676820870
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/coercion.20from.20nnrat.20to.20nnreal.3F/near/328825864\">said</a>:</p>\n<blockquote>\n<p>Shall we just close it?</p>\n</blockquote>\n<p>I don't see why. We will eventually want <code>nnrat.cast</code>, be it in mathlib or mathlib4 (and indeed Alex wants it now). The work on the mathlib side is mostly done, and most of the work on the mathlib4 side will be done by mathport.</p>",
        "id": 328832627,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676824150
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/coercion.20from.20nnrat.20to.20nnreal.3F/near/328832627\">said</a>:</p>\n<blockquote>\n<p>most of the work on the mathlib4 side will be done by mathport.</p>\n</blockquote>\n<p>No, most of the work on the mathlib4 side will be done by <strong>reviewers</strong></p>",
        "id": 328832725,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676824196
    },
    {
        "content": "<p>As Eric noticed, things can be done incrementally. There are about 4 PRs worth of new content, one or two PRs worth of moving stuff around (about half of which is not ported yet), and then one PR that actually adds <code>nnrat.cast</code> and its API.</p>",
        "id": 328832999,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676824305
    },
    {
        "content": "<p>Great, so it sounds like <em>this</em> PR can be closed.</p>",
        "id": 328833087,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676824333
    },
    {
        "content": "<p>And then the subsequent PRs can be judged on their own merits.</p>",
        "id": 328833130,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676824360
    },
    {
        "content": "<p>Yeah well I will just make dependent PRs.</p>",
        "id": 328833172,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676824387
    },
    {
        "content": "<p>No need to close anything.</p>",
        "id": 328833203,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1676824401
    },
    {
        "content": "<p>This sounds like making life harder for everyone.</p>",
        "id": 328833247,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676824428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/coercion.20from.20nnrat.20to.20nnreal.3F/near/328832725\">said</a>:</p>\n<blockquote>\n<p>No, most of the work on the mathlib4 side will be done by <strong>reviewers</strong></p>\n</blockquote>\n<p>For porting new files, reviewers have the ability to ask for a diff with mathport, which massively reduces what they actually have to review. Until we have similar automation for forward-ports, the review load is sadly much higher for forward-ports than it is for first-ports. Using <a href=\"https://leanprover-community.github.io/mathlib-port-status/old\">#port-status</a> to compare the mathlib3 diff and mathlib4 diff helps a little, but not enough</p>",
        "id": 328833489,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676824521
    },
    {
        "content": "<p>It's also just intrinsically more complicated since instead of one thing to consider (the mathlib 3 source) you have three (the old mathlib 3 source, the new mathlib 3 source, the old mathlib 4 source).</p>",
        "id": 328834275,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676824847
    },
    {
        "content": "<p>In theory the only change you should have to consider is the change to the mathlib3port source. Unfortunately that contains a bunch of nonsense for ported files that makes a diff tricky</p>",
        "id": 328834501,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676824935
    }
]