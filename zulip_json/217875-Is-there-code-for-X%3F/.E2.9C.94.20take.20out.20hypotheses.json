[
    {
        "content": "<p>Now I have these assumptions:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">h'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">w</span> <span class=\"bp\">→</span> <span class=\"n\">c</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"n\">h''</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">w</span> <span class=\"bp\">→</span> <span class=\"n\">x.snd</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span>\n</code></pre></div>\n<p>And I want to prove  <code>x.snd &gt; 0</code>.<br>\nI want to take  <code>∀ (y : n → ℝ), y ∈ w </code> out to slove this problem,but surely I cann't use <code>intro</code> directly.So how can you do that?</p>",
        "id": 386616200,
        "sender_full_name": "Kevin Wen",
        "timestamp": 1692712885
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> ? Questions like this are really hard to answer without fully working code. Right now you can't deduce anything about <code>x.snd</code> from the code you posted because w could be empty.</p>",
        "id": 386616603,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1692712954
    },
    {
        "content": "<p>Yes I think in my problem <code>w</code> could be empty actually.So if  <code>w</code> is empty then lean can't do this?</p>",
        "id": 386617242,
        "sender_full_name": "Kevin Wen",
        "timestamp": 1692713087
    },
    {
        "content": "<p>If w is empty Lean can't prove x.snd &gt; 0 because it's not mathematically valid and Lean can only do mathematically valid things.</p>",
        "id": 386617513,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1692713161
    },
    {
        "content": "<p>Okay thanks you so much.I'm going to rethink this.</p>",
        "id": 386617883,
        "sender_full_name": "Kevin Wen",
        "timestamp": 1692713239
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631683\">Kevin Wen</span> has marked this topic as resolved.</p>",
        "id": 386864484,
        "sender_full_name": "Notification Bot",
        "timestamp": 1692796013
    }
]