[
    {
        "content": "<p>Do we have a version of the following?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">IsWellFounded</span> <span class=\"n\">β</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">·</span><span class=\"o\">)]</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsWellFounded</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>(In fact, this should hold more generally:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">Preorder</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">IsWellFounded</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">·</span><span class=\"o\">)]</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsWellFounded</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>)</p>",
        "id": 390063467,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1694292420
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Pi.wellFoundedLT#doc\">docs#Pi.wellFoundedLT</a> ?</p>",
        "id": 390063793,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694292812
    },
    {
        "content": "<p>It's in a weird file though</p>",
        "id": 390063860,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694292852
    },
    {
        "content": "<p>Oh nevermind, it actually does use <code>DFinsupp</code> in the proof <span aria-label=\"mind blown\" class=\"emoji emoji-1f92f\" role=\"img\" title=\"mind blown\">:mind_blown:</span></p>",
        "id": 390063888,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694292902
    },
    {
        "content": "<p>So I was missing this non-obvious <code>import</code>...</p>",
        "id": 390063989,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1694293008
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Well-foundedness.20of.20product.20orders.3F/near/390063989\">said</a>:</p>\n<blockquote>\n<p>So I was missing this non-obvious <code>import</code>...</p>\n</blockquote>\n<p>It's actually not so bad these days to develop using <code>import Mathlib</code> or to have a scratch file with that in for the purposes of <code>#synth</code> or <code>apply?</code> queries</p>",
        "id": 390066497,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1694295534
    },
    {
        "content": "<p>I've been caught by this exact same non-obvious import.</p>",
        "id": 390092323,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694315976
    },
    {
        "content": "<p>I think we should move this result to its own better-named file!</p>",
        "id": 390092338,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694315988
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Well-foundedness.20of.20product.20orders.3F/near/390066497\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Well-foundedness.20of.20product.20orders.3F/near/390063989\">said</a>:</p>\n<blockquote>\n<p>So I was missing this non-obvious <code>import</code>...</p>\n</blockquote>\n<p>It's actually not so bad these days to develop using <code>import Mathlib</code> or to have a scratch file with that in for the purposes of <code>#synth</code> or <code>apply?</code> queries</p>\n</blockquote>\n<p>True, but it takes a while to get used to that.</p>",
        "id": 390120845,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1694336574
    }
]