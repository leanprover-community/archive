[
    {
        "content": "<p>Do we have the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">coe_summable</span> <span class=\"o\">{</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">summable</span> <span class=\"o\">((</span><span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">summable</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>It seems like it must be somewhere but I can't find it.</p>",
        "id": 323564014,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1674673568
    },
    {
        "content": "<p>Does it fall out as a special case of something like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/summable.mapL\">docs#summable.mapL</a>?</p>",
        "id": 323566005,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674674201
    },
    {
        "content": "<p>Aha, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/summable.map_iff_of_left_inverse\">docs#summable.map_iff_of_left_inverse</a>, which I added a little while back</p>",
        "id": 323566308,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674674290
    },
    {
        "content": "<p>That works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.algebra.infinite_sum</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.complex.basic</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">coe_summable</span> <span class=\"o\">{</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">summable</span> <span class=\"o\">((</span><span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">summable</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">summable.map_iff_of_left_inverse</span> <span class=\"n\">complex.of_real</span> <span class=\"n\">complex.re_add_group_hom</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">complex.continuous_of_real</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">complex.continuous_re</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span><span class=\"o\">,</span> <span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 323568454,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1674674966
    },
    {
        "content": "<p>Oh great thanks!</p>",
        "id": 323572411,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1674676246
    },
    {
        "content": "<p>I swear I looked at that file for ages, but couldn't see this!</p>",
        "id": 323572712,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1674676357
    }
]