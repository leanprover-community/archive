[
    {
        "content": "<p>Is the following in mathlib?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">b</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">set</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">Z</span> <span class=\"n\">i</span> <span class=\"bp\">⊆</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">Z</span> <span class=\"n\">j</span>\n</code></pre></div>\n<p>If not, what is the best proof?</p>",
        "id": 342871626,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1679197398
    },
    {
        "content": "<p>OK, I'm missing an important assumption: <code>∀ i ∈ I, (0 : b) ∈ Z i</code>.</p>",
        "id": 342873828,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1679199123
    },
    {
        "content": "<p>Maybe this makes it less likely to be in mathlib...</p>",
        "id": 342873845,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1679199137
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.big_operators.basic</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">zero_in_sum_of_zero_mem_summands</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">b</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">set</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">Z</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">∈</span>  <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">Z</span> <span class=\"n\">j</span> <span class=\"o\">:=</span>\n<span class=\"n\">finset.sum_induction</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">set.mem_add.mpr</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span> <span class=\"mi\">0</span><span class=\"o\">⟩)</span>\n  <span class=\"o\">(</span><span class=\"n\">set.mem_zero.mpr</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"n\">h</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">set_subset_sum_of_zero_mem_summands</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">b</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">set</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">Z</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">Z</span> <span class=\"n\">i</span> <span class=\"bp\">⊆</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">Z</span> <span class=\"n\">j</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">z</span> <span class=\"n\">hz</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finset.sum_eq_add_sum_diff_singleton</span> <span class=\"n\">hi</span> <span class=\"n\">Z</span><span class=\"o\">,</span> <span class=\"n\">set.mem_add</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"o\">,</span> <span class=\"n\">zero_in_sum_of_zero_mem_summands</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"n\">i</span> <span class=\"bp\">$</span> <span class=\"o\">(</span><span class=\"n\">finset.mem_sdiff.mp</span> <span class=\"n\">H</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">),</span>\n          <span class=\"n\">add_zero</span> <span class=\"n\">z</span><span class=\"o\">⟩,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 342875465,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1679200944
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.mem_finset_sum\">docs#set.mem_finset_sum</a> is probably helpful</p>",
        "id": 342910601,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679222246
    },
    {
        "content": "<p>There are lemmas like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.multiset_sum_subset_multiset_sum\">docs#set.multiset_sum_subset_multiset_sum</a> that are quite close. But it seems we don't have your exact statement.</p>",
        "id": 342911570,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679222703
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Z.20i.20.E2.8A.86.20.E2.88.91.20j.20in.20I.2C.20Z.20j/near/342910601\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.mem_finset_sum\">docs#set.mem_finset_sum</a> is probably helpful</p>\n</blockquote>\n<p>Indeed. Thanks!</p>",
        "id": 342979996,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1679253595
    }
]