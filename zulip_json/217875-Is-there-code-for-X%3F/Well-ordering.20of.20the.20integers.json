[
    {
        "content": "<p>Does mathlib have the max of a nonempty bounded-above subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span></span></span></span>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">bdd_above</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_greatest</span> <span class=\"n\">s</span> <span class=\"n\">k</span>\n</code></pre></div>",
        "id": 211654442,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1601400183
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.exists_greatest_of_bdd\">docs#int.exists_greatest_of_bdd</a></p>",
        "id": 211659272,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601402276
    },
    {
        "content": "<p>Found by <code>git grep bdd src/data/int</code></p>",
        "id": 211659744,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601402451
    },
    {
        "content": "<p>Great, thank you!</p>",
        "id": 211659818,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1601402482
    },
    {
        "content": "<p>I hope it's okay for me to piggyback off of this much older thread.<br>\nIs there code for more generic applications of the Well-ordering principle?  i.e. if I have my own (finite or lower-bounded) type with a custom ordering on that type, is there existing code that will let me grab the least element?</p>",
        "id": 370264896,
        "sender_full_name": "Caleb Schultz Kisby",
        "timestamp": 1687923544
    },
    {
        "content": "<p><code>WellFounded.min</code>?</p>",
        "id": 370265274,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687923699
    },
    {
        "content": "<p>A related question: for the minimum of a non-empty set of natural numbers, I found an expression for example: <br>\n<code>Nat.lt_wfRel.wf.min {n: ℕ | n % 2 = 0} (by use 2; simp)</code></p>\n<p>Is there something nicer than <code>Nat.lt_wfRel.wf.min</code> to use here?</p>",
        "id": 370300261,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1687935595
    },
    {
        "content": "<p><code>Nat.find</code></p>",
        "id": 370301465,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1687935888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Well-ordering.20of.20the.20integers/near/370301465\">said</a>:</p>\n<blockquote>\n<p><code>Nat.find</code></p>\n</blockquote>\n<p>Thanks a lot. That is computable too.</p>",
        "id": 370365446,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1687947507
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, that's what I was looking for!  Now I just need to figure out how to use it in my specific case :)</p>",
        "id": 370493037,
        "sender_full_name": "Caleb Schultz Kisby",
        "timestamp": 1687969076
    },
    {
        "content": "<p>Actually, <code>Nat.find</code> is even better, I just need to change the less-than relation!</p>",
        "id": 370493526,
        "sender_full_name": "Caleb Schultz Kisby",
        "timestamp": 1687969165
    }
]