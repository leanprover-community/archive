[
    {
        "content": "<p>Good evening everyone,</p>\n<p>Is there a theorem for proving that these two norms are equal? <br>\nOr would is it not logically true, and they have to be written in a different way?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.exp_deriv</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.calculus.iterated_deriv</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">real</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">inner_product_to_one_dimensional1</span> <span class=\"o\">{</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span>  <span class=\"o\">}:</span> <span class=\"bp\">‖</span><span class=\"n\">iterated_fderiv</span> <span class=\"n\">ℝ</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">),</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">‖</span><span class=\"n\">x</span><span class=\"bp\">‖</span><span class=\"o\">)</span> <span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"bp\">‖</span><span class=\"n\">iterated_fderiv</span> <span class=\"n\">ℝ</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">),</span> <span class=\"bp\">‖</span><span class=\"n\">x</span><span class=\"bp\">‖</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"bp\">‖</span><span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">real.norm_eq_abs</span><span class=\"o\">],</span>\n  <span class=\"n\">congr'</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 352368580,
        "sender_full_name": "rtertr (Sonia)",
        "timestamp": 1682366111
    },
    {
        "content": "<p>Well, what you are trying to prove is not true. For instance, in the special case <code>i=1</code> after two rewrites one obtains</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">inner_product_to_one_dimensional1</span> <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span> <span class=\"o\">}:</span>\n<span class=\"bp\">‖</span><span class=\"n\">iterated_fderiv</span> <span class=\"n\">ℝ</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">),</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">‖</span><span class=\"n\">x</span><span class=\"bp\">‖</span><span class=\"o\">)</span> <span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"bp\">‖</span><span class=\"n\">iterated_fderiv</span> <span class=\"n\">ℝ</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">),</span> <span class=\"bp\">‖</span><span class=\"n\">x</span><span class=\"bp\">‖</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"bp\">‖</span><span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">norm_iterated_fderiv_eq_norm_iterated_deriv</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">iterated_deriv_one</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">norm_iterated_fderiv_eq_norm_iterated_deriv</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">iterated_deriv_one</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>with the goal <code> ⊢ 1 = |deriv abs x|</code> . Since the absolute value is not differentiable at <code>0</code>, its derivative is defined to be <code>0</code> there, so the goal is actually  <code> ⊢ 1 = 0</code>.</p>",
        "id": 352539652,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1682429737
    }
]