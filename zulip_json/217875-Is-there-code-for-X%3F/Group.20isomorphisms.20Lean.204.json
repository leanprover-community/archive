[
    {
        "content": "<p>Hi all,<br>\nI'm trying to define an isomorphism between two multiplicative groups G and H. I found the <code>mul_equiv</code> in Lean 3, but I can't find an analogue in Lean 4. Any help would be much appreciated.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Group.Defs</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">≃</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"c1\">-- ≃* doesn't work</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">mul_assoc</span>\n<span class=\"k\">#check</span> <span class=\"n\">φ.toFun</span> <span class=\"c1\">-- φ.toFun : G → H</span>\n<span class=\"k\">#check</span> <span class=\"n\">φ.4</span> <span class=\"c1\">-- φ.right_inv : Function.RightInverse φ.invFun φ.toFun</span>\n</code></pre></div>",
        "id": 376631667,
        "sender_full_name": "Isabel Dahlgren",
        "timestamp": 1689766846
    },
    {
        "content": "<p>It's called <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MulEquiv#doc\">docs#MulEquiv</a></p>",
        "id": 376632478,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1689767037
    },
    {
        "content": "<p>And the notation is <code>≃*</code>.</p>",
        "id": 376632705,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1689767092
    },
    {
        "content": "<p>If this doesn't work for you you probably need to import <code>Mathlib.Algebra.Hom.Equiv.Basic</code>.</p>",
        "id": 376632845,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1689767121
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Group.20isomorphisms.20Lean.204/near/376632478\">said</a>:</p>\n<blockquote>\n<p>It's called <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MulEquiv#doc\">docs#MulEquiv</a></p>\n</blockquote>\n<p>Oh, that works. Thanks! <span aria-label=\"ok\" class=\"emoji emoji-1f44c\" role=\"img\" title=\"ok\">:ok:</span></p>",
        "id": 376634732,
        "sender_full_name": "Isabel Dahlgren",
        "timestamp": 1689767512
    },
    {
        "content": "<p>There is a <code>#lookup3</code> command.</p>",
        "id": 376738721,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689786874
    },
    {
        "content": "<p>Or you can <code>git grep '#align mul_equiv'</code></p>",
        "id": 376738779,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689786891
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Group.20isomorphisms.20Lean.204/near/376738721\">said</a>:</p>\n<blockquote>\n<p>There is a <code>#lookup3</code> command.</p>\n</blockquote>\n<p>wow, i sure wasted a lot of time porting files by <code>ripgrep</code>ing through mathlib4 for aligns</p>",
        "id": 376742643,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1689787887
    }
]