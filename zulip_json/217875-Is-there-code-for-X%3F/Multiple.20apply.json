[
    {
        "content": "<p>Is there tactic for writing </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">some_tactic</span> <span class=\"o\">[</span><span class=\"n\">thm1</span><span class=\"o\">,</span> <span class=\"n\">thm2</span><span class=\"o\">,</span> <span class=\"n\">thm3</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>instead of</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">apply</span> <span class=\"n\">thm1</span>\n<span class=\"n\">apply</span> <span class=\"n\">thm2</span>\n<span class=\"n\">apply</span> <span class=\"n\">thm3</span>\n</code></pre></div>",
        "id": 397320794,
        "sender_full_name": "Matias Heikkil채",
        "timestamp": 1697637929
    },
    {
        "content": "<p>Or some other smart way</p>",
        "id": 397320971,
        "sender_full_name": "Matias Heikkil채",
        "timestamp": 1697637971
    },
    {
        "content": "<p><code>refine thm1 &lt;| thm2 &lt;| thm3 ?_</code> could work, depending on how much <code>apply</code> is hiding</p>",
        "id": 397321057,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697637999
    },
    {
        "content": "<p>You can use <code>apply_rules</code> for this (assuming that the greedy algorithm of apply these whenever you can is what you want) <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Tactic/SolveByElim.html#Mathlib.Tactic.SolveByElim.applyRulesSyntax\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Tactic/SolveByElim.html#Mathlib.Tactic.SolveByElim.applyRulesSyntax</a></p>",
        "id": 397321951,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697638241
    },
    {
        "content": "<p>Thanks for the help, the latter worked in my case. I think I still have some work to do before I actually understand what <code>apply</code> really does</p>",
        "id": 397322356,
        "sender_full_name": "Matias Heikkil채",
        "timestamp": 1697638345
    },
    {
        "content": "<p>Or <code>refine</code>...</p>",
        "id": 397322421,
        "sender_full_name": "Matias Heikkil채",
        "timestamp": 1697638360
    }
]