[
    {
        "content": "<p>Is there code for common graphs like complete graphs (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>), cycle graphs (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>) and chain graphs?</p>",
        "id": 397770382,
        "sender_full_name": "Iván Renison",
        "timestamp": 1697832774
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=completeGraph#doc\">docs#completeGraph</a></p>",
        "id": 397772327,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697833823
    },
    {
        "content": "<p>@loogle ⊢ SimpleGraph ?a</p>",
        "id": 397772981,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697834209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> ⊢ SimpleGraph ?a</p>",
        "id": 397773025,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697834235
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Combinatorics/SimpleGraph/Basic.html#completeGraph\">completeGraph</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Combinatorics/SimpleGraph/Basic.html#emptyGraph\">emptyGraph</a>, and <a href=\"https://loogle.lean-lang.org/?q=%E2%8A%A2%20SimpleGraph%20%3Fa\">19 more</a></p>",
        "id": 397773026,
        "sender_full_name": "loogle",
        "timestamp": 1697834236
    },
    {
        "content": "<p><code>completeGraph</code> is <code>\\top</code> using the lattice structure</p>",
        "id": 397773055,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1697834253
    },
    {
        "content": "<p>We've written cycle graphs and chain graphs before across a few projects, but they haven't yet been contributed to mathlib.</p>",
        "id": 397773150,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1697834292
    },
    {
        "content": "<p>Kyle, did you define them on any fintype with a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CircularOrder#doc\">docs#CircularOrder</a> using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SimpleGraph.hasse#doc\">docs#SimpleGraph.hasse</a> ? After realizing we didn't have it, that's what I was about to suggest.</p>",
        "id": 397773350,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697834418
    },
    {
        "content": "<p>Thank you</p>",
        "id": 397773472,
        "sender_full_name": "Iván Renison",
        "timestamp": 1697834504
    },
    {
        "content": "<p>I forgot about hasse. We have the chain graph as <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SimpleGraph.pathGraph#doc\">docs#SimpleGraph.pathGraph</a></p>",
        "id": 397774338,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1697834937
    },
    {
        "content": "<p>Nevermind, my idea doesn't work anyway since it's not a <code>Preorder</code>. I should refrain from commenting about graph theory. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 397776022,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697835844
    },
    {
        "content": "<p>Yeah, we have complete and chain graphs but cycle graphs are not in mathlib yet.</p>",
        "id": 397776878,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697836364
    }
]