[
    {
        "content": "<p>Suppose <code>f : [a, b] → ℝ</code> is continuous and injective. Then <code>f</code> is strictly monotone.<br>\nI have just formalized the proof of it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">continuous_inj_is_monotone_Icc</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">δ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">p1</span> <span class=\"o\">:</span> <span class=\"n\">ContinuousOn</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Set.Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">p2</span> <span class=\"o\">:</span> <span class=\"n\">Function.Injective</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">StrictMonoOn</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Set.Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>See <a href=\"https://jihulab.com/-/snippets/4380\">https://jihulab.com/-/snippets/4380</a> for the full statement and proof.<br>\nI hope mathlib4 already includes this theorem. If not, I would like to submit one.<br>\nBy the way, I am going to use it to show that every automorphism of an open interval can be continuously extended to the closed interval. I wonder if mathlib4 already includes this theorem. I can only find <code>continuousOn_Icc_extendFrom_Ioo</code>, but that is not what I want.</p>",
        "id": 389562390,
        "sender_full_name": "Wen Yang",
        "timestamp": 1694059095
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Monotone.strictMono_of_injective#doc\">docs#Monotone.strictMono_of_injective</a> is almost what you are looking for</p>",
        "id": 389562646,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1694059209
    },
    {
        "content": "<p>Maybe combined with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.strictMonoOn_iff_strictMono#doc\">docs#Set.strictMonoOn_iff_strictMono</a></p>",
        "id": 389562854,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1694059281
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253861\">@Thomas Browning</span> It is hard for me to browse <a href=\"http://github.io\">github.io</a>. So I just search <code>strictMono_of_injective</code> and <code>strictMonoOn_iff_strictMono</code> in mathlib4. But I didn't find anything close to the theorem I needed.</p>",
        "id": 389564163,
        "sender_full_name": "Wen Yang",
        "timestamp": 1694059867
    },
    {
        "content": "<p>I don’t think we have any of the results you mention, but I haven’t checked carefully. If that’s the case, that will be a welcome addition to the library!</p>",
        "id": 389590382,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694071927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"416034\">Wen Yang</span> has marked this topic as resolved.</p>",
        "id": 389690653,
        "sender_full_name": "Notification Bot",
        "timestamp": 1694100484
    },
    {
        "content": "<p>I have now completed the formal proof of a theorem which says that a homeomorphism between open intervals can be extended to a homeomorphism between the closed intervals. See <code>Homeomorph.Ioo_extend_Icc</code> in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7565\">#7565</a> for more details.</p>",
        "id": 395482658,
        "sender_full_name": "Wen Yang",
        "timestamp": 1696735123
    },
    {
        "content": "<p>I didn't use the <code>Function.toval</code> defined in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7449\">#7449</a> . However, I have written another version in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7398\">#7398</a> using <code>Function.toval</code> to illustrate what we could benefit from it.</p>",
        "id": 395482686,
        "sender_full_name": "Wen Yang",
        "timestamp": 1696735143
    }
]