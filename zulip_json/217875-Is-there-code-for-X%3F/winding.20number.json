[
    {
        "content": "<p>I am mentoring an undergraduate student in a topology project, and she expressed some interest in Lean. I have been thinking of some topics that could have a related formalization aspect, and I wondered if there is existing work on winding number and related applications such as Borsuk-Ulam, an alternative proof of fundamental theorem of algebra, etc?</p>",
        "id": 392290819,
        "sender_full_name": "Patrick Kinnear",
        "timestamp": 1695291219
    },
    {
        "content": "<p>Whether or not there's existing work is not normally something I take into account when mentoring undergraduate projects -- if the student wants to prove theorem X and theorem X is already in mathlib then there's a high chance that the proof is incomprehensible to the student, so I tell them to write a well-documented comprehensible proof. But this isn't really an answer to your question, sorry</p>",
        "id": 392294532,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695292670
    },
    {
        "content": "<p>Thanks Kevin! I actually agree with the above but would still like to know whether there are existing approaches out there or not. The goal of the student project would not be (at least in the first instance) a contribution to mathlib.</p>",
        "id": 392343955,
        "sender_full_name": "Patrick Kinnear",
        "timestamp": 1695309568
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"574412\">@Patrick Kinnear</span> unrelated, please tell me your avatar is what I think it is: an origami Yoda?!</p>",
        "id": 392344686,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1695309752
    },
    {
        "content": "<p>Haha yes it is, I think I set this avatar when I was a teenager and don't know how to change it (and don't want to, since that little guy is gone now)</p>",
        "id": 392346233,
        "sender_full_name": "Patrick Kinnear",
        "timestamp": 1695310241
    },
    {
        "content": "<p>I have a related answer :-) a few people are thinking about doing more complex analysis in Lean, but there is not much there yet. Things like continuous determinations of the argument and the logarithm on a simply connected domain for instance are on the roadmap, and should not be too far away from defining winding numbers in the plane. We also don't have meromorphic functions yet, and in particular the residue formula is not there either except in very particular cases. So there is a lot to be done in that direction!</p>",
        "id": 392347202,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695310545
    },
    {
        "content": "<p>Actually defining winding numbers along C^1 paths in the complex plane, proving that they indeed are integer, this should already be quite doable.</p>",
        "id": 392347842,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695310700
    },
    {
        "content": "<p>Thanks Vincent!</p>",
        "id": 392354979,
        "sender_full_name": "Patrick Kinnear",
        "timestamp": 1695313070
    },
    {
        "content": "<p>In spite of what its huge size might let everybody think, mathlib lacks a lot of basic stuff in many areas, and one discovers that when one tries something which is slightly off path of the main stream of results. So alternative proofs of the fundamental theorem of algebras, or of quadratic reciprocity, or of whatever results in analysis (Zygmund, Polya-Szegö's book) or in linear algebra,  are certainly a good occasion of discovering (small) holes in the library, filling them while proving (new or not new) results.</p>",
        "id": 392379776,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695322861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"574412\">@Patrick Kinnear</span> Were you thinking of the analytic definition, or the purely topological one (via path lifting through a covering)? As Vincent said a few people are working/thinking about the analytic approach here, but I would also love to develop the topological approach. Note that there is almost nothing here (we have the definition <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsCoveringMap#doc\">docs#IsCoveringMap</a>, but not much more), which is bad for us but maybe good for your student: if she is interested in contributing to mathlib, there should be a decent number of relatively low-hanging fruits in that direction, and even the path-lifting theorem (<em>not</em> the general lifting theorem) shouldn't be <em>too</em> hard IIRC (though it's probably a bit ambitious for a first project).</p>",
        "id": 392694098,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1695472773
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253861\">@Thomas Browning</span> since you wrote the definition, do you have specific plans about developping the theory of covering spaces?</p>",
        "id": 392694178,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1695472818
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/winding.20number/near/392694178\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"253861\">Thomas Browning</span> since you wrote the definition, do you have specific plans about developping the theory of covering spaces?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"306638\">@Jordan Brown</span> and I are working on homotopy lifting. Uniqueness is done (ported from lean3), and we're starting on existence.</p>",
        "id": 392712903,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1695484140
    },
    {
        "content": "<p>Do we know that the exponential is a covering map of C^* ?</p>",
        "id": 392732392,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695497462
    },
    {
        "content": "<p>In fact there is some discussion about what the appropriate setup is for contour integrals (as would be applied to e.g. state the residue theorem). Either restrict to C^1 paths, and then there is no issue of definition but the link with the homotopy part of the library is not so direct; or allow continuous paths (and nice topological things), but then one can only integrate functions that are locally derivatives. In the end we will likely need both.</p>",
        "id": 392732658,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695497671
    },
    {
        "content": "<p>I think currently nothing imports the definition of covering maps, so it probably doesn’t exist</p>",
        "id": 392733239,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1695498209
    },
    {
        "content": "<p>The correct generality for contour integrals is probably <del><a href=\"https://en.wikipedia.org/wiki/Lebesgue%E2%80%93Stieltjes_integration#Example\">this</a></del> <a href=\"https://en.wikipedia.org/wiki/Riemann%E2%80%93Stieltjes_integral#Generalization\">this</a>? Mathlib has <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=StieltjesFunction#doc\">docs#StieltjesFunction</a> (less general than bounded variation) but not any Stieltjes-flavored integration afaik. (Update: <a href=\"https://math.stackexchange.com/q/3039844/12932\">Apostol</a> does use Riemann-Stieltjes to define contour integrals.)</p>",
        "id": 392735326,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695499805
    },
    {
        "content": "<p>There is certainly a way to define contour integrals along rectifiable curves, but I do believe that integrating a holomorphic function along a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path#doc\">docs#Path</a> and being able to state that the integral is invariant under <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path.Homotopic#doc\">docs#Path.Homotopic</a> is something that we should have.</p>",
        "id": 392735751,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695500165
    },
    {
        "content": "<p>I think you probably have to homotope the path to a rectifiable/smooth one and show the existence of homotopy through such paths if it's between two such paths, because I can't imagine how you could define integral along a non-rectifiable curve directly ... <br>\nFor rectifiable curves, <a href=\"https://math.stackexchange.com/a/578323/12932\">this</a> seems to be a feasible way to convert to a Lebesgue integral that we already have.</p>",
        "id": 392736182,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695500573
    },
    {
        "content": "<p>You can integrate a locally exact differential form along a continuous curve by choosing a fine enough subdivision. But this does put a restriction on the kind of functions that you can integrate this way (they have to locally be derivatives - but this is the case for holomorphic functions)</p>",
        "id": 392736306,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695500682
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"242586\">Vincent Beffara</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/winding.20number/near/392735751\">said</a>:</p>\n<blockquote>\n<p>There is certainly a way to define contour integrals along rectifiable curves, but I do believe that integrating a holomorphic function along a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path#doc\">docs#Path</a> and being able to state that the integral is invariant under <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path.Homotopic#doc\">docs#Path.Homotopic</a> is something that we should have.</p>\n</blockquote>\n<p>I remember from my Complex Analysis courses (or Ruding's book, IIRC) that proving invariance by homotopy is rather delicate if you actually try to move the paths. Instead, it is worthwile to do invariance by homology, considering not only closed paths but formal linear combinations of them (let's call them “chains”).</p>",
        "id": 392804969,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695546143
    },
    {
        "content": "<p>The definition and homotopy (rel endpoints) invariance of integration of a locally exact form in a domain D along an arbitrary path <code>p : I → D</code> can actually be reduced to the homotopy lifting property for covering spaces. Take the space <code>D × ℂ</code> and equip it with the strongest topology such that for any primitive φ of the locally exact form on an open subset <code>U ⊆ D</code>, the map <code>x ↦ (x, φ(x))</code> from U to <code>D × ℂ</code> is continuous, and we can show the projection from <code>D × ℂ</code> (with this topology) to D is a covering map. Given a path <code>p : I → D</code> we can then lift it to <code>q : I → D × ℂ</code> such that q(0) = (p(0), 0), and then the second coordinate of q(1) will be the integration of the locally exact form along <code>p</code>. We can lift a homotopy <code>H :  I × I → D</code> to <code>D × ℂ</code> too, which yields homotopy invariance of q(1).</p>\n<p>The space <code>D × ℂ</code> is an example of the <a href=\"https://ncatlab.org/nlab/show/%C3%A9tale+space#RelationToSheaves\">etale space</a> of a (pre)sheaf and the general construction is found in Exercise II.1.13 of GTM52. In the general construction the fiber over <code>x : D</code> is not <code>ℂ</code> but the stalk of the sheaf (of primitives) at x, but a germ at x is uniquely determined by its value at x in this case.</p>\n<p>Etale spaces can also be used to prove the <a href=\"https://en.wikipedia.org/wiki/Monodromy_theorem\">monodromy theorem</a>, and in fact Conway does so in his GTM11, but the version he proved is weaker because it requires unrestricted continuation within a domain, while the Wikipedia version only assumes a continuation along each curve exists. Under the stronger assumption, Conway shows the Riemann surface of the analytic germ (the (path) connected component of the etale space (of the sheaf of analytic functions) containing the germ) is a covering space of the domain. In general, the etale space is not necessarily a covering space as continuation can hit a singularity anywhere, but the projection <code>π : E → X</code> is always a local homeomorphism.</p>\n<p>To prove the monodromy theorem we have to show two things: (1) the lift of a path (or any continuous map from a connected, locally connected space Y to X) fixing an endpoint is unique; (2) if we can lift every path (for fixed <code>y : Y</code>) in a homotopy <code>I × Y → X</code> to E, then the map <code>I × Y → E</code> obtained by combining the lifted paths is continuous. For (1), given two lifts p1 and p2 we want to show <code>{t :I | p1 t = p2 t}</code> is nonempty (contains 0), closed (requires E to be Hausdorff), and open (this only requires that every point of E has a neighborhood U that is open and closed in <code>π⁻¹(π(U))</code> such that π is injective on U, which is weaker than π being a covering map. <code>I</code> being locally connected is crucial here). For (2), we can follow the arguments <a href=\"https://www.dpmms.cam.ac.uk/study/II/AlgebraicTopology/2019-2020/Homotopy.pdf\">here</a> and show that every <code>y : Y</code> has a connected neighborhood V such that on <code>I × V</code> we may piecewise define a continuous lift using the U's around the image of <code>I × {y}</code> in E (we also need that π restricts to a homeomorphism on U here). By uniqueness of lifts <code>V → E</code> the map <code>I × V → E</code> is well-defined and continuous, and therefore for fixed <code>y : V</code> restricts to paths <code>I → E</code> that lifts the respective <code>I → X</code>, so again by uniqueness of lifts the original map <code>I × Y → E</code> agrees with this <code>I × V → E</code> on <code>I × V</code> and therefore is continuous at <code>I × {y}</code>, and since y is arbitrary it's continuous everywhere.</p>\n<p>(There's apparently <a href=\"https://math.stackexchange.com/a/3650517/12932\">some more complicated argument</a> to circumvent local connectedness.)</p>\n<p>Another target of this approach would be the <a href=\"https://en.wikipedia.org/wiki/(G,X)-manifold#Developing_map\">developing map</a> from the universal cover (i.e. paths with fixed left endpoint up to homotopy rel endpoints) of a (G,X)-manifold to the model space X. This can be obtained by considering the (pre)sheaf of charts <code>U ⊆ M → X</code> and its etale space (which is a covering space), and homotopy invariance shows that the developing map is well-defined.</p>",
        "id": 392911017,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695619018
    },
    {
        "content": "<p>This sounds further and further away from a doable first Lean project for a student :-) but indeed that would probably be the most mathlib-y approach. I have a proof-of-concept definition for integrals of a holomorphic function along continuous paths here <a href=\"https://github.com/vbeffara/RMT4/blob/main/RMT4/pintegral.lean\">https://github.com/vbeffara/RMT4/blob/main/RMT4/pintegral.lean</a> with prerequisites about subdivisions here <a href=\"https://github.com/vbeffara/RMT4/blob/main/RMT4/Subdivision.lean\">https://github.com/vbeffara/RMT4/blob/main/RMT4/Subdivision.lean</a> but in retrospect what I am doing could likely be refactored in terms of coverings and path liftings, I will give it a thought.</p>",
        "id": 392932695,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695626969
    },
    {
        "content": "<blockquote>\n<p>Do we know that the exponential is a covering map of C^* ?</p>\n</blockquote>\n<p>Maybe you can reduce to that the reals cover the circle, for which <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Ico_eq_locus_Ioc_eq_iUnion_Ioo#doc\">docs#Ico_eq_locus_Ioc_eq_iUnion_Ioo</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddCircle.homeoIccQuot#doc\">docs#AddCircle.homeoIccQuot</a> probably help. (A stronger thing to prove is that it's a Z-bundle.) We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddCircle.toCircle#doc\">docs#AddCircle.toCircle</a> but it's not a homeo. I guess we can define winding number just using the reals over circle cover though.</p>",
        "id": 393103392,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695673221
    },
    {
        "content": "<p>I saw <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/integrating.20on.20a.20piecewise.20differentiable.20curve/near/373289540\">the other thread</a> about the Riemann mapping theorem, and I think the last step would also be easy if we have enough about covering spaces. If we show that exp is a covering map from C to C\\{0}, then a nonvanishing continuous function f on a simply connected domain can be lifted to obtain a continuous branch of log f, and it's holomorphic if f is, because exp is locally biholomorphic (because it has nonzero derivative, which can be implied by being a covering map (local injectivity is sufficient)). So we can bypass showing that primitives (in particular of dz/z) exist on a simply connected domain, although this can also be shown using the etale space approach above.</p>",
        "id": 393169878,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695709615
    },
    {
        "content": "<p>Now we have modular forms it would be interesting to see if we can formalise the short proof of Picard's theorem using the lambda function (a holomorphic covering map from the open unit disc to C - {0,1}).</p>",
        "id": 393182865,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695715567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/winding.20number/near/393182865\">said</a>:</p>\n<blockquote>\n<p>Now we have modular forms it would be interesting to see if we can formalise the short proof of Picard's theorem using the lambda function (a holomorphic covering map from the open unit disc to C - {0,1}).</p>\n</blockquote>\n<p>I think this would be quite hard. How do you envisage showing that the lambda function is surjective onto <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi><mo>−</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} - \\{0, 1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span>? </p>\n<p>AFAIK, we don't know how to prove (yet) that the j-invariant is surjective (from the upper half-plane to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span>). This is one of a bunch of things which follows easily from the valence formula, but formalising the standard proof of that (a contour integral around the boundary of the standard fundamental domain) is rather troublesome. It seems to me that proving surjectivity of the lambda-function should be at least as hard -- they are pretty much analogous, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> is the Hauptmodul for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Gamma(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> while <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> is the Hauptmodul for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Gamma(2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 393191865,
        "sender_full_name": "David Loeffler",
        "timestamp": 1695718939
    },
    {
        "content": "<p>I guess one could factor that out! One could prove \"if there's an unramified map from the open disc to C-{0,1} then Picard is true\" and then worry about the modular form argument later.</p>",
        "id": 393192251,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695719080
    },
    {
        "content": "<p>I don't think it's really a \"modular form argument\" that's missing. What we're lacking is topological / complex-analytic: properties of contour integrals.</p>",
        "id": 393192518,
        "sender_full_name": "David Loeffler",
        "timestamp": 1695719177
    },
    {
        "content": "<p>Defining winding numbers of paths would definitely be a good start towards this. I'm very pleased to learn that work is under way to formalise the lifting property of coverings. <span class=\"user-mention\" data-user-id=\"253861\">@Thomas Browning</span> please keep me posted on this!</p>",
        "id": 393193735,
        "sender_full_name": "David Loeffler",
        "timestamp": 1695719672
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/winding.20number/near/393169878\">said</a>:</p>\n<blockquote>\n<p>I saw <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/integrating.20on.20a.20piecewise.20differentiable.20curve/near/373289540\">the other thread</a> about the Riemann mapping theorem, and I think the last step would also be easy if we have enough about covering spaces. If we show that exp is a covering map from C to C\\{0}, then a nonvanishing continuous function f on a simply connected domain can be lifted to obtain a continuous branch of log f, and it's holomorphic if f is, because exp is locally biholomorphic (because it has nonzero derivative, which can be implied by being a covering map (local injectivity is sufficient)). So we can bypass showing that primitives (in particular of dz/z) exist on a simply connected domain, although this can also be shown using the etale space approach above.</p>\n</blockquote>\n<p>Yes, if you can construct a log on the domain then you get a square root and the rest of the RMT proof works. But it seems like there would be a huge intersection between this and integrating dz/z</p>",
        "id": 393220519,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695730348
    },
    {
        "content": "<blockquote>\n<p>Yes, if you can construct a log on the domain then you get a square root and the rest of the RMT proof works. But it seems like there would be a huge intersection between this and integrating dz/z</p>\n</blockquote>\n<p>I just want to that the (unique) existence of a lift for a map from a simply connected domain follows from general properties of covering spaces (<a href=\"http://www.homepages.ucl.ac.uk/~ucahjde/tg/html/gal-01.html\">lifting criterion</a>), and it's not hard once we can lift paths uniquely. Constructing a log is about the covering map exp, while integrating dz/z is about the covering space D × ℂ → D I constructed earlier.<br>\n<a href=\"/user_uploads/3121/MNR3QWpJ2iH0vXoswxvZLzJL/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/MNR3QWpJ2iH0vXoswxvZLzJL/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/MNR3QWpJ2iH0vXoswxvZLzJL/image.png\"></a></div>",
        "id": 393286205,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695748136
    },
    {
        "content": "<p>In a course I taught 10 years ago, based on notes by Bost, I had given a proof of Picard's theorem that does not use the valence stuff, but it might use a bit of basic theory of Riemann surfaces. Surjectivity of j-function is done by showing that it tends to infinity when tau goes to infinity in the fundamental domain.<br>\nLink to notes : <a href=\"https://webusers.imj-prg.fr/~antoine.chambert-loir/enseignement/2011-12/tngd/tngd.pdf\">https://webusers.imj-prg.fr/~antoine.chambert-loir/enseignement/2011-12/tngd/tngd.pdf</a></p>",
        "id": 393329619,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695762302
    },
    {
        "content": "<blockquote>\n<p>the lambda function (a holomorphic covering map from the open unit disc to C - {0,1})</p>\n</blockquote>\n<p>I'm not sure how we'd go about defining the lambda function; I know that we have Eisenstein series (not in mathlib yet) but not for <a href=\"#narrow/stream/116395-maths/topic/Eisenstein.20series/near/390341247\">arbitrary congruence subgroup</a> (Γ(2) in this case) of SL(2,Z), I think. So it would be straightforward to get the j-invariant but not the lambda function. (What's the formula of lambda in terms of those Eisenstein series?)</p>\n<p>However, there does exist a pretty elementary geometric construction of the lambda function (or rather, a holomorphic covering <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">H</mi><mo>→</mo><mi mathvariant=\"double-struck\">C</mi><mo>∖</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{H}\\to\\mathbb{C}\\setminus\\{0,1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span> which is not shown to be equal to lambda), as explained in Li Zhong's complex analysis textbook (复分析导引, 李忠). <br>\n<a href=\"/user_uploads/3121/poZQ7coXjjT9XTNRievL3ekk/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/poZQ7coXjjT9XTNRievL3ekk/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/poZQ7coXjjT9XTNRievL3ekk/image.png\"></a></div>",
        "id": 393359999,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695776968
    },
    {
        "content": "<p>The idea is to start from half a fundamental domain D of the Γ(2)-action, which is an ideal triangle (something like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>z</mi><mo>∣</mo><mn>0</mn><mo>&lt;</mo><mtext>Re </mtext><mi>z</mi><mo>&lt;</mo><mn>1</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∣</mi><mi>z</mi><mi mathvariant=\"normal\">∣</mi><mo>&gt;</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{z \\mid 0 &lt; \\text{Re}\\ z &lt; 1, |z| &gt; 1 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord text\"><span class=\"mord\">Re</span></span><span class=\"mspace\"> </span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span> in the upper half plane, or the triangle bounded by three mutually tangent arcs tangent to the boundary in the unit disk). D is obviously homeomorphic to a disk, so using the Riemann mapping theorem (this part is not so elementary, I admit), we can find a biholomorphic map μ from D onto the upper half plane, and because the boundary of D is a simple closed curve, μ extends to a homeomorphism from the closure of D to the closed upper half plane (this certainly requires proof), with the boundary mapping into the real axis union ∞. By composing with an automorphism of the half plane, we may assume the three boundary points 0,1,∞ are mapped to 0,1,∞.</p>\n<p>Using the <a href=\"https://en.wikipedia.org/wiki/Schwarz_reflection_principle\">Schwarz reflection principle</a>, we may iteratively extend μ across the three sides of the ideal triangle, eventually filling up the whole disk / upper half plane. (Note that the sides don't include the endpoints 0,1,∞, so μ takes every real value except 0 and 1 on the sides.) μ together with one of its reflection are already enough to cover the whole C\\{0,1}, but it will take more effort to show that the final result of the extensions is a covering map (for example, it's tricky to pin down the preimages of each of the three segments of the real line).</p>\n<p>Instead of using the perfectly symmetric trivalent tree structure in the disk, for formalization purposes I expect it to be easier to break the symmetry and work in the upper half plane. We focus on the closed ideal triangle <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>z</mi><mo>∣</mo><mn>0</mn><mo>≤</mo><mtext>Re </mtext><mi>z</mi><mo>≤</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{z \\mid 0 \\le \\text{Re}\\ z \\le 1 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord text\"><span class=\"mord\">Re</span></span><span class=\"mspace\"> </span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span> and show that after countably many steps of extension we exhaust all points in the domain. At the beginning (step 0) we have μ defined on the subregion of points on or above the semicircle with endpoints 0 and 1, and at step n there would be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> semicircles with rational numbers <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>=</mo><msub><mi>r</mi><mn>0</mn></msub><mo>&lt;</mo><msub><mi>r</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>r</mi><mn>2</mn></msub><mo>&lt;</mo><mo>⋯</mo><mo>&lt;</mo><msub><mi>r</mi><msup><mn>2</mn><mi>n</mi></msup></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0=r_0 &lt; r_1 &lt; r_2 &lt; \\dots &lt; r_{2^n}=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> as their endpoints, and μ would be extended to the subregion of points on or above the semicircles. At every step (except the first), for every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">i=0,1,\\dots,2^{n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> we take the region bounded by the three semicircles through <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mrow><mn>2</mn><mi>i</mi></mrow></msub><mo separator=\"true\">,</mo><mtext> </mtext><msub><mi>r</mi><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">r_{2i},\\ r_{2i+1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>2</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">r_{2i+2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span> (on which μ is already defined) and reflect it across the two lower semicircles, partitioning both intervals <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>r</mi><mrow><mn>2</mn><mi>i</mi></mrow></msub><mo separator=\"true\">,</mo><msub><mi>r</mi><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[r_{2i}, r_{2i+1}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>r</mi><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>r</mi><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>2</mn></mrow></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[r_{2i+1}, r_{2i+2}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> into two and obtaining a total of four new semicircles. It turns out the sequence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">r_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2^n+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> rational numbers is exactly the <a href=\"https://en.wikipedia.org/wiki/Stern%E2%80%93Brocot_tree#Relation_to_Farey_sequences\">Stern--Brocot sequence</a> and the diameter of the semicircle through <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">r_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">r_{i+1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span> is equal to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><msub><mi>q</mi><mi>i</mi></msub><msub><mi>q</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">1/q_i q_{i+1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">q_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is the denominator of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">r_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. Since the denominators of new rational numbers inserted must eventually go to infinity, the sizes of the semicircles at step n goes to 0 as n goes to infinity, which shows that we can extend μ to the whole ideal triangle <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>z</mi><mo>∣</mo><mn>0</mn><mo>≤</mo><mtext>Re </mtext><mi>z</mi><mo>≤</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{z \\mid 0 \\le \\text{Re}\\ z \\le 1 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord text\"><span class=\"mord\">Re</span></span><span class=\"mspace\"> </span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span>. After that, one more reflection + translation is enough to extend μ to the whole upper half plane.</p>\n<p>(I didn't know that the Stern--Brocot sequence can be generated this way through conformal reflection across circles, but it's just a simple computation: if you have three real numbers p,q and r, then the reflection through the circle with pq as diameter takes r to ((p+q)r-2pq)/(2r-p-q)=(p(r-q)+q(r-p))/((r-p)+(r-q)), and when p=a/b, q=(a+c)/(b+d), r=c/d and bc-ad=1 we have (p(r-q)+q(r-p))/((r-p)+(r-q))=(2a+c)/(2b+d), which is sufficient to inductively show the sequence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">r_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> agrees with Stern--Brocot.)</p>",
        "id": 393360027,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695776989
    },
    {
        "content": "<p>Instead of extending in a step-by-step manner, we can also show that two copies of the ideal triangle form a fundamental domain of the Γ(2)-action and see out how its four boundary segments are identified in pairs by the group action, and use the group action to extend μ immediately to the whole upper half plane. Here's how a Lean proof could go: let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">D_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> denote the ideal triangle with one reflected copy attached to every side. By Schwarz reflection μ is defined on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">D_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, holomorphic on the interior, with image equal to C\\{0,1}. Since two copies of the triangle already form a fundamental domain, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub><mo>→</mo><mi mathvariant=\"double-struck\">H</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">D_4\\to\\mathbb{H}/\\Gamma(2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">H</span><span class=\"mord\">/Γ</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span> is surjective and we can show it's a quotient map. The points in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">D_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> identified by the Γ(2)-action have the same image under μ, so μ factors through a continuous function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>μ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>:</mo><mi mathvariant=\"double-struck\">H</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"double-struck\">C</mi><mo>∖</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mu&#x27;: \\mathbb{H}/\\Gamma(2)\\to\\mathbb{C}\\setminus\\{0,1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">H</span><span class=\"mord\">/Γ</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span>, which we show to be a homeomorphism. The quotient map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">H</mi><mo>→</mo><mi mathvariant=\"double-struck\">H</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{H}\\to\\mathbb{H}/\\Gamma(2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">H</span><span class=\"mord\">/Γ</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span> is a covering map because the Γ(2)-action is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ProperlyDiscontinuousSMul#doc\">docs#ProperlyDiscontinuousSMul</a>, so composing with μ' we get a covering map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">H</mi><mo>→</mo><mi mathvariant=\"double-struck\">C</mi><mo>∖</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{H}\\to\\mathbb{C}\\setminus\\{0,1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span>, which is also holomorphic, because it's holomorphic in the interior of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">D_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, which intersects every Γ(2)-orbit in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">H</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{H}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">H</span></span></span></span> (note the three sides of an ideal triangle are all in the interior), and Γ(2) acts biholomorphically. </p>\n<p>Given that we have the Riemann mapping theorem for the domain D (which is star-shaped in the unit disk so it's easy to show primitives exist on it, and lifting <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi><mo>→</mo><mi mathvariant=\"double-struck\">C</mi><mo>∖</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}\\to\\mathbb{C}\\setminus\\{0,1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span> should also be easier because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> is star-shaped, so we may not need homotopy lifting in full generality but it's definitely nice to have it), the hardest missing ingredient seems to be the extension of this Riemann map to the boundary (see <a href=\"https://math.stackexchange.com/a/3416460/12932\">this answer</a> which gives Conway's book as reference).</p>",
        "id": 393360037,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695776994
    },
    {
        "content": "<p>Regarding valence formula for modular functions, there was <a href=\"https://talks.cam.ac.uk/talk/index/193211\">a talk</a> by <span class=\"user-mention\" data-user-id=\"233634\">@Manuel Eberl</span> half a year ago at the Cambridge seminar, and I have screenshots of some of the slides that I'm willing to share with people working on it, but it would be even better if he could share the full slides. (This <a href=\"https://leanprover-community.github.io/blog/posts/modular-forms/\">blog post</a> says he has some joint forthcoming work, but I don't find it published anywhere.)</p>",
        "id": 393371917,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695781975
    },
    {
        "content": "<p>There is an elementary proof of Picard's theorem in the book of Tauvel in chapter 13, based on a quantitative version of the open mapping theorem for holomorphic functions and a few prerequisites on spaces of holomorphic functions that are almost in Mathlib.</p>",
        "id": 393411235,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1695799211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/winding.20number/near/393371917\">said</a>:</p>\n<blockquote>\n<p>Regarding valence formula for modular functions, there was <a href=\"https://talks.cam.ac.uk/talk/index/193211\">a talk</a> by <span class=\"user-mention silent\" data-user-id=\"233634\">Manuel Eberl</span> half a year ago at the Cambridge seminar, and I have screenshots of some of the slides that I'm willing to share with people working on it, but it would be even better if he could share the full slides. (This <a href=\"https://leanprover-community.github.io/blog/posts/modular-forms/\">blog post</a> says he has some joint forthcoming work, but I don't find it published anywhere.)</p>\n</blockquote>\n<p>Manuel's <a href=\"https://rtca2023.github.io/pages_Lyon/eberl.pdf\">slides</a> at Certified and Symbolic-Numeric Computation this year could be relevant. As for the formalising work, we finished four chapters of Aposol's <a href=\"https://link.springer.com/book/10.1007/978-1-4612-0999-7\">textbook</a> -- the paper is still in preparation though :-)</p>",
        "id": 393431626,
        "sender_full_name": "Wenda Li",
        "timestamp": 1695805794
    },
    {
        "content": "<p>Thanks! Yeah the relevant slides (from page 24 on) look identical. Looking forward to your paper!</p>",
        "id": 393494613,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695822957
    },
    {
        "content": "<blockquote>\n<p>based on a quantitative version of the open mapping theorem for holomorphic functions</p>\n</blockquote>\n<p>That seems to be called Landau's theorem on Wikipedia, but Wikipedia's proof of little Picard using it is very confusing. I found <a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0304020808800035\">this book chapter</a> which is much better and probably similar to the proof in Tauvel.</p>",
        "id": 393496393,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695823269
    },
    {
        "content": "<p>Actually, since the valence formula is basically computing the degree of the line bundle of k-differential forms on a compact Riemann surface <del>(or a finite quotient of it with orbifold points)</del>, the mathlib-y way is probably proving it in that generality ...</p>\n<p>Only the other hand, little Picard also has a strengthening/quantitative version called the <a href=\"https://en.wikipedia.org/wiki/Schottky%27s_theorem\">Schottky's theorem</a>.</p>",
        "id": 393499458,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1695823816
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253861\">@Thomas Browning</span> <span class=\"user-mention\" data-user-id=\"306638\">@Jordan Brown</span> FYI I've formalized the continuity part of homotopy lifting at <a href=\"https://gist.github.com/alreadydone/c88265c99c73fa822d48e1abfd01282f\">this gist</a>. My motivation is to produce a general enough version to prove the monodromy theorem, and my work probably overlaps with yours, but I hope it also fills in some missing pieces.</p>",
        "id": 394581953,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1696320421
    },
    {
        "content": "<p>In the meantime I wrote some API for interval subdivisions, <a href=\"http://vbeffara.perso.math.cnrs.fr/RMT4/RMT4/Subdivision.html#Subdivision.exists_adapted\">http://vbeffara.perso.math.cnrs.fr/RMT4/RMT4/Subdivision.html#Subdivision.exists_adapted</a> is similar to your <code>lebesgue_number_lemma_unitInterval</code> and in <a href=\"http://vbeffara.perso.math.cnrs.fr/RMT4/RMT4/pintegral.html\">http://vbeffara.perso.math.cnrs.fr/RMT4/RMT4/pintegral.html</a> there is a partial version of existence in the case of integrating holomorphic functions along continuous curves - and indeed <a href=\"http://vbeffara.perso.math.cnrs.fr/RMT4/RMT4/pintegral.html#LocalPrimitiveOn\">http://vbeffara.perso.math.cnrs.fr/RMT4/RMT4/pintegral.html#LocalPrimitiveOn</a> looks very much like a trivialization of the covering you mentioned in that case.</p>",
        "id": 394616646,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696333116
    },
    {
        "content": "<p>(Existence is much easier to build in that case because IIUC it amounts to telescopic sums instead of general gluing of continuous functions ...)</p>",
        "id": 394617101,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696333250
    },
    {
        "content": "<p>Here <a href=\"https://github.com/vbeffara/RMT4/blob/main/RMT4/Covering.lean\">https://github.com/vbeffara/RMT4/blob/main/RMT4/Covering.lean</a> is some code defining the topology on <code>D \\times \\C</code> and proving that the fibers are discrete, from local existence of primitives. I think there is not much missing to show that the projection is a covering.</p>\n<p>Is there a name for \"a bunch of maps for each open set of an open covering, such that if they agree anywhere on the intersection of two open sets they agree everywhere on the intersection\"?</p>",
        "id": 395210240,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696582072
    },
    {
        "content": "<p>Not sure what to call it. I've just been able to show that a free, properly discontinuous action induces a covering map, and as a consequence <a href=\"https://gist.github.com/alreadydone/40333872e072abc8125dd95d20f07f2c#file-properlydiscontinuous_coveringmap-lean-L148-L149\">the real line covers the circle</a>. It should be relatively easy to show the projection is a covering using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsOpenMap.to_quotientMap#doc\">docs#IsOpenMap.to_quotientMap</a> combined with my <a href=\"https://gist.github.com/alreadydone/40333872e072abc8125dd95d20f07f2c#file-properlydiscontinuous_coveringmap-lean-L38-L42\">QuotientMap.trivialization_of_mulAction</a>. However, there doesn't seem to be a type synonym to put the discrete topology on \\C ...</p>",
        "id": 395214588,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1696583600
    },
    {
        "content": "<p>We can always do this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">discrete</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"o\">(</span><span class=\"n\">discrete</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⊥</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">DiscreteTopology</span> <span class=\"o\">(</span><span class=\"n\">discrete</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">rfl</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>and use <code>discrete \\C</code> but this loses all the rest of the nice features of  the complex numbers... and with <code>abbrev</code> instead I believe we get two competing instances of <code>TopologicalSpace</code>?</p>",
        "id": 395217403,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696584606
    },
    {
        "content": "<p>Sorry, I haven't followed in detail. But why do you need the discrete topology? Are you mapping into it? Because there is an API for locally constant functions, which are of course the same thing as continuous functions into a discrete space.</p>",
        "id": 395220076,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1696585479
    },
    {
        "content": "<p>With <code>abbrev</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">discrete</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"o\">(</span><span class=\"n\">discrete</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⊥</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">DiscreteTopology</span> <span class=\"o\">(</span><span class=\"n\">discrete</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">rfl</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span> <span class=\"bp\">→</span> <span class=\"n\">discrete</span> <span class=\"n\">ℂ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">z</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">z</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">discrete</span> <span class=\"n\">ℂ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">z</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">z</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">φ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">continuity</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">ψ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">continuity</span>\n</code></pre></div>\n<p>which looks really really bad (but that was expected)</p>",
        "id": 395220638,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696585667
    },
    {
        "content": "<p>A trivialization of a covering is a local homeomorphism with a product with a discrete space, which we possibly need to mention at some point; and in the context above, that discrete space is just <code>\\C</code> but with discrete topology</p>",
        "id": 395221008,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696585783
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsEvenlyCovered#doc\">docs#IsEvenlyCovered</a> wants <code>I</code> to have discrete topology</p>",
        "id": 395221531,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696585935
    },
    {
        "content": "<p>I’ve been wanting a <code>Discrete</code> type alias for some time, with some API it shouldn’t be too bad</p>",
        "id": 395225461,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696587195
    },
    {
        "content": "<p>I've been helping write aliases for the order theoretic topologies, so I know what the API should look like.</p>",
        "id": 395236187,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696590474
    },
    {
        "content": "<p>I did <code>letI : TopologicalSpace G := ⊥; have : DiscreteTopology G := ⟨rfl⟩</code> to endow the discrete topologyin the above gist, but when G already has a topology I don't know what happens. Maybe you can disable certain instances to avoid conflicts, but I think I should provide a version of QuotientMap.trivialization_of_mulAction with IsCoveringMap as conclusion so I don't need to include DiscreteTopology among the assumptions ...</p>",
        "id": 395283581,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1696606303
    },
    {
        "content": "<p>Ah but if you replace one instance by another, you make many (but not all) other instances incompatible with the new one ... if you replace the topology, then continuity of the product might fail (well not if you put the discrete topology of course but you get the point).</p>",
        "id": 395284284,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696606485
    },
    {
        "content": "<p>A big part of the covering structure just wrote itself, only <code>open_source</code> and the continuity of <code>toFun</code> and <code>invFun</code> are missing. Which makes sense because those are the bits that depend on the weird topology on the space, so the correct proof will involve e few more API lemmas.</p>",
        "id": 395284963,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696606656
    },
    {
        "content": "<p>I think it would make sense to change the definition of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsEvenlyCovered#doc\">docs#IsEvenlyCovered</a> to:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">IsEvenlyCovered</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">Trivialization</span> <span class=\"o\">(</span><span class=\"n\">Discrete</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">t.baseSet</span>\n</code></pre></div>",
        "id": 395285053,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696606681
    },
    {
        "content": "<p>Hm, that requires some thinking. In the case of covering spaces <code>I</code> is already discrete anyway, so the <code>Discrete</code> is redundant and might add some friction in the API. But we can experiment while <code>Mathlib.Topology.Covering</code> is a leaf.</p>",
        "id": 395286106,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696606985
    },
    {
        "content": "<p>We could always add some characterizations assuming <code>[DiscreteTopology I]</code> but I get your point</p>",
        "id": 395287011,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696607248
    },
    {
        "content": "<p>Also, with your change and the current definition of covering maps, there are too many coverings IIUC: <code>Prod.fst</code> seems to always fit. So we would need to put the discreteness condition back in <code>IsCoveringMap</code>. (I didn't think this through so it may well be complete nonsense ...)</p>",
        "id": 395288331,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696607707
    },
    {
        "content": "<p>I don't think so.<code>fst : ℂ × ℂ → ℂ</code> would still not be a covering because it doesn't locally trivialize to <code>ℂ × (Discrete ℂ)</code> right?</p>",
        "id": 395289137,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696607981
    },
    {
        "content": "<p>Oh wait I didn't think this through either</p>",
        "id": 395289800,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696608184
    },
    {
        "content": "<p>I think you're right, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Trivialization#doc\">docs#Trivialization</a> .toFun would be <code>ℂ × ℂ → ℂ × (Discrete ℂ)</code> which isn't continuous.</p>",
        "id": 395289953,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1696608225
    },
    {
        "content": "<p>Yes I've checked and I'm confident in my claim now, because the current definition of <code>IsCoveringMap</code> with this new <code>IsEvenlyCovered</code> would still imply that the fibers are discrete</p>",
        "id": 395290350,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696608307
    },
    {
        "content": "<p>OK then. <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span></p>",
        "id": 395290693,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1696608409
    }
]