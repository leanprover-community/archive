[
    {
        "content": "<p>I'm trying to define a lexicographical order on monomials but currently I am stuck at the stage of using <a href=\"http://Fin.lt\">Fin.lt</a> which should be in the library according to <a href=\"https://leanprover-community.github.io/mathlib_docs/init/data/fin/basic.html#fin.lt\">https://leanprover-community.github.io/mathlib_docs/init/data/fin/basic.html#fin.lt</a> but seems to be absent in the current version(4.0.0-nightly-2023-05-16) of Lean I am running</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Finsupp.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Finsupp.Lex</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">fin1</span> <span class=\"n\">fin2</span> <span class=\"o\">:</span> <span class=\"n\">Finsupp</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"n\">Finsupp.Lex</span> <span class=\"n\">Nat.lt</span> <span class=\"n\">Nat.lt</span> <span class=\"n\">fin1</span> <span class=\"n\">fin2</span>\n<span class=\"c\">/-</span><span class=\"cm\">application type mismatch</span>\n<span class=\"cm\">  Finsupp.Lex Nat.lt Nat.lt fin1</span>\n<span class=\"cm\">argument</span>\n<span class=\"cm\">  fin1</span>\n<span class=\"cm\">has type</span>\n<span class=\"cm\">  Fin n →₀ ℕ : Type</span>\n<span class=\"cm\">but is expected to have type</span>\n<span class=\"cm\">  ℕ →₀ ℕ : Type-/</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Finsupp.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Finsupp.Lex</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">fin1</span> <span class=\"n\">fin2</span> <span class=\"o\">:</span> <span class=\"n\">Finsupp</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"n\">Finsupp.Lex</span> <span class=\"n\">Fin.lt</span> <span class=\"n\">Nat.lt</span> <span class=\"n\">fin1</span> <span class=\"n\">fin2</span>\n<span class=\"c1\">--unknown constant 'Fin.lt'</span>\n</code></pre></div>\n<p>How do I solve this issue?</p>",
        "id": 361538722,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1685184706
    },
    {
        "content": "<p>First of all, the docs you linked to are for lean 3, and you're writing code for lean 4, so you can't rely on those docs. Mathlib 4 docs are here: <a href=\"https://leanprover-community.github.io/mathlib4_docs/\">https://leanprover-community.github.io/mathlib4_docs/</a></p>",
        "id": 361539936,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1685184978
    },
    {
        "content": "<p>Second, referring to those relations by name is somewhat odd anyway; you can use <code>(· &lt; ·)</code> instead, like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">Finsupp.Lex</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"n\">fin1</span> <span class=\"n\">fin2</span>\n</code></pre></div>",
        "id": 361540272,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1685185066
    },
    {
        "content": "<p>Thank you. This solves the problem and also explains a lot to me.</p>",
        "id": 361540948,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1685185217
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"403479\">Hyunsang Hwang</span> has marked this topic as resolved.</p>",
        "id": 361540990,
        "sender_full_name": "Notification Bot",
        "timestamp": 1685185227
    }
]