[
    {
        "content": "<p>Hello all,<br>\nis there a library that implements discrete functions / maps?<br>\nIn particular I would like to start from a 'bottom' function, undefined for all values, and incrementally add bindings to it.<br>\nI am aware of PFun but extending it for bindings (and proving the related theorems) proved difficult. I was wondering if there is something more specific. I am not using Option because I would like to use Finset.sum on the bindings for example.</p>",
        "id": 352941677,
        "sender_full_name": "Daniele Pusceddu",
        "timestamp": 1682541145
    },
    {
        "content": "<p>I suspect it's not really what you want, but with <code>import data.fin.vec_notation</code> you can write <code>![]</code> for the function with no outputs, and <code>f = ![a, b, c]</code> for the function with <code>f 0 = a</code>, <code>f 1 = b</code>, <code>f 2 = c</code></p>",
        "id": 352947863,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682543476
    },
    {
        "content": "<p>Thank you for the suggestion. Indeed <code>vec_notation</code> is not what I am looking for but it is good to know that it exists.<br>\nI have just found <code>finsupp</code> and it may be the closest thing to what I am looking for.</p>",
        "id": 353192475,
        "sender_full_name": "Daniele Pusceddu",
        "timestamp": 1682588397
    },
    {
        "content": "<p>Fundamentally Lean does not let you create a function that is \"undefined\" anywhere</p>",
        "id": 353192938,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682588444
    },
    {
        "content": "<p>But indeed, if you replace \"undefined\" with \"zero\" then you can use <code>finsupp</code></p>",
        "id": 353193233,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682588484
    },
    {
        "content": "<p>You can also use regular function types and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi.single\">docs#pi.single</a> or <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.update\">docs#function.update</a></p>",
        "id": 353193371,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1682588511
    }
]