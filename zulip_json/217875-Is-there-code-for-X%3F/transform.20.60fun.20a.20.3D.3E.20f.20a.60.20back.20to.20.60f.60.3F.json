[
    {
        "content": "<p>Surely there is a function <code>Expr â†’ Expr</code> that \"cancels\" function application and lambda abstraction at the top level of the expression, and does nothing else. But what would it be called?</p>",
        "id": 341365850,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1678680091
    },
    {
        "content": "<p>That's eta reduction for function types, so presumably it has <code>eta</code> in the name? Just a guess.</p>",
        "id": 341366057,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678680295
    },
    {
        "content": "<p>There's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Expr.eta#doc\">docs4#Lean.Expr.eta</a> for going from the function to <code>f</code> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Meta.etaExpand#doc\">docs4#Lean.Meta.etaExpand</a> for something like its inverse.</p>",
        "id": 341439071,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1678708469
    }
]