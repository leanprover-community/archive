[
    {
        "content": "<p>We have <code>polynomial.eval₂_at_zero</code>, but, as far as I know, there isn't a version of this for the standard <code>polynomial.eval</code>, right? (I've written up a version below:)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.polynomial.eval</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">eval_at_zero</span> <span class=\"o\">{</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">):</span>\n  <span class=\"n\">p.eval</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">p.coeff</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">ring_hom.id_apply</span> <span class=\"o\">(</span><span class=\"n\">p.coeff</span> <span class=\"mi\">0</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">polynomial.eval₂_at_zero</span> <span class=\"o\">(</span><span class=\"n\">ring_hom.id</span> <span class=\"n\">R</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"n\">polynomial.eval₂_eq_sum</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ring_hom.id_apply</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">polynomial.eval_eq_sum</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 344373378,
        "sender_full_name": "Pratyush Mishra",
        "timestamp": 1679694511
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.eval_zero\">docs#polynomial.eval_zero</a> is the lemma</p>",
        "id": 344373467,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679694557
    },
    {
        "content": "<p>Doesn't that say \"evaluating the zero polynomial at any point <code>x</code> gives 0\"? What I want is instead that \"evaluating an arbitrary polynomial at 0 gives me the constant term of the polynomial\".</p>",
        "id": 344374140,
        "sender_full_name": "Pratyush Mishra",
        "timestamp": 1679694845
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.eval_ring_hom_zero\">docs#polynomial.eval_ring_hom_zero</a> is close</p>",
        "id": 344375384,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679695452
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.coeff_zero_eq_eval_zero\">docs#polynomial.coeff_zero_eq_eval_zero</a></p>",
        "id": 344375426,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679695481
    },
    {
        "content": "<p>So did <code>library_search</code> not find it?</p>",
        "id": 344375505,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679695529
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/polynomial.2Eeval_at_zero/near/344375426\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.coeff_zero_eq_eval_zero\">docs#polynomial.coeff_zero_eq_eval_zero</a></p>\n</blockquote>\n<p><span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span> I guess I was looking the wrong place.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/polynomial.2Eeval_at_zero/near/344375505\">said</a>:</p>\n<blockquote>\n<p>So did <code>library_search</code> not find it?</p>\n</blockquote>\n<p>not on my machine, I'm guessing because I had it reversed (<code>p.eval 0 = p.coeff 0</code>, as opposed to <code>p.coeff 0 = p.eval 0</code>, which is what the lemma states)</p>\n<p>EDIT: even switching around the order didn't help</p>",
        "id": 344375871,
        "sender_full_name": "Pratyush Mishra",
        "timestamp": 1679695690
    },
    {
        "content": "<p>Is it worth it to add some documentation pointers between <code>polynomial.eval₂_at_zero</code> and <code>polynomial.coeff_zero_eq_eval_zero</code>?</p>",
        "id": 344376568,
        "sender_full_name": "Pratyush Mishra",
        "timestamp": 1679696049
    },
    {
        "content": "<p>If you're going to add docs to what is presumably an already ported file then I'd recommend you PR'ed them to mathlib4 directly</p>",
        "id": 344377502,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679696452
    },
    {
        "content": "<p>It would also be interesting to know whether library_search in mathlib4 finds the lemma (which has been ported).</p>",
        "id": 344377609,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679696500
    },
    {
        "content": "<p>Alright, will do! Thanks all for the help :)</p>",
        "id": 344377738,
        "sender_full_name": "Pratyush Mishra",
        "timestamp": 1679696566
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"596810\">Pratyush Mishra</span> has marked this topic as resolved.</p>",
        "id": 344377741,
        "sender_full_name": "Notification Bot",
        "timestamp": 1679696568
    }
]