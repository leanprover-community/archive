[
    {
        "content": "<p>Within Lean, I would like to call an external tool (such as a C++ executable or library) to calculate an array of floating-point values, then use the resulting values to complete a proof. In particular, I want to take a given polynomial and use an <a href=\"https://www.cds.caltech.edu/sostools/\">external tool</a> to try to construct a sum-of-squares representation of the polynomial---or show that it cannot be done. </p>\n<p>Has anybody done this sort of thing before? I saw the page <a href=\"https://leanprover.github.io/lean4/doc/dev/ffi.html\">Foreign Function Interface</a> in the manual, which says the interface for calling external libraries is unstable. Are there any alternatives?</p>",
        "id": 380532616,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1690852869
    },
    {
        "content": "<p>I found <a href=\"https://arxiv.org/pdf/1712.09288.pdf\">this paper</a> from 2017 that does something similar to what I want, except using Mathematica instead of a C++ program.</p>",
        "id": 380573543,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1690872141
    },
    {
        "content": "<p>\"Unstable\" here means \"the API might change in future versions of Lean\" not \"the API is unreliable\"</p>",
        "id": 380600046,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690878230
    },
    {
        "content": "<p>If you don't like the sound of that, having Lean call your program as a subprocess is an option</p>",
        "id": 380600736,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690878362
    },
    {
        "content": "<p>How do you call a program as a subprocess? I haven't come across that in the documentation.</p>",
        "id": 380609993,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1690880121
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IO.Process.run#doc\">docs#IO.Process.run</a> is one way</p>",
        "id": 380617435,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690881407
    },
    {
        "content": "<p>That looks like what I need. Thanks!</p>",
        "id": 380932265,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1690961869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, are there any examples that use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IO.Process.run#doc\">IO.Process.run</a> that I could see?</p>",
        "id": 383412563,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1691613483
    },
    {
        "content": "<p>Here is what I have tried for running a process without using any returned values. It doesn't seem to actually execute the given command, though (the file <code>~/mytestfilefromlean.txt</code> is not created). </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">args</span> <span class=\"o\">:</span> <span class=\"n\">IO.Process.SpawnArgs</span> <span class=\"n\">where</span>\n  <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"s2\">\"touch\"</span>\n  <span class=\"n\">args</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"~/mytestfilefromlean.txt\"</span><span class=\"o\">]</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">IO.Process.run</span> <span class=\"n\">args</span>\n</code></pre></div>\n<p>Using <code>#check</code> was just a shot in the dark. What is the right way to execute the process call?</p>",
        "id": 383726728,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1691692874
    },
    {
        "content": "<p>My inevitable follow questions will be how to access the output from the process (presumably as a String?)</p>",
        "id": 383727877,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1691693156
    },
    {
        "content": "<p>Does <code>#eval</code> work?</p>",
        "id": 383728219,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691693236
    },
    {
        "content": "<p>When I replace <code>#check</code> with <code>#eval</code>, I get an error that says, </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I thought maybe this has something to do with not finding my home directory using the <code>~</code> alias, but the changing the cmd to <code>\"echo\"</code> produces the same error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">args</span> <span class=\"o\">:</span> <span class=\"n\">IO.Process.SpawnArgs</span> <span class=\"n\">where</span>\n  <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"s2\">\"echo\"</span>\n  <span class=\"n\">args</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"Hello, world\"</span><span class=\"o\">]</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">IO.Process.run</span> <span class=\"n\">args</span>\n</code></pre></div>",
        "id": 383755517,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1691700552
    },
    {
        "content": "<p>I'm not sure that echo is a real command, isn't it just a shell built-in?</p>",
        "id": 383757399,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691701172
    },
    {
        "content": "<p>Echo is a real command for me (ubuntu) and the above code produces <code>\"Hello, world\\n\"</code></p>",
        "id": 383957402,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1691759624
    },
    {
        "content": "<p>Got it: the problem probably is that I'm on Windows and <code>echo</code> is not available (I typically use Git-Bash so I forget that Windows commands are different). The following code works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">args</span> <span class=\"o\">:</span> <span class=\"n\">IO.Process.SpawnArgs</span> <span class=\"n\">where</span>\n  <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"s2\">\"python\"</span>\n  <span class=\"n\">args</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"--version\"</span><span class=\"o\">]</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">IO.Process.run</span> <span class=\"n\">args</span>\n</code></pre></div>",
        "id": 384929204,
        "sender_full_name": "Paul Wintz",
        "timestamp": 1692056067
    }
]