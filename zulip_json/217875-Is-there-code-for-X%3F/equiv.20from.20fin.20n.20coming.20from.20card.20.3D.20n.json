[
    {
        "content": "<p>Do we have something like this? Asking for an UG.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset.card</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hv</span> <span class=\"o\">:</span> <span class=\"n\">v.card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">≃</span> <span class=\"n\">v</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 345114025,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680006009
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/fintype.equiv_fin\">docs#fintype.equiv_fin</a> I think?</p>",
        "id": 345114295,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680006072
    },
    {
        "content": "<p>Plus some equiv for fins of the same size</p>",
        "id": 345114393,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680006097
    },
    {
        "content": "<p>Maybe <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.congr\">docs#fin.congr</a> ?</p>",
        "id": 345114425,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680006108
    },
    {
        "content": "<p>That should do it -- thanks!</p>",
        "id": 345114430,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680006109
    },
    {
        "content": "<p>That uses the wrong card, but there should be some equiv between <code>fin m</code> and <code>fin n</code> given <code>m=n</code>, I just don’t remember the name</p>",
        "id": 345114731,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680006176
    },
    {
        "content": "<p>oh it's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.cast\">docs#fin.cast</a></p>",
        "id": 345115244,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680006289
    },
    {
        "content": "<p><del>or <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.fin_congr\">docs#equiv.fin_congr</a></del></p>",
        "id": 345115310,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680006307
    }
]