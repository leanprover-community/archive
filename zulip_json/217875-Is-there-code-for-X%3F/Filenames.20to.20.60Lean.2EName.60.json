[
    {
        "content": "<p>Do we have anything to take the filename <code>Mathlib/Algebra/Group/Defs.lean</code> to the <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Name#doc\">docs#Lean.Name</a> <code>Mathlib.Algebra.Group.Defs</code>?</p>",
        "id": 402306471,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1700073913
    },
    {
        "content": "<p>I know it shouldn't be hard to write, but I figure it must already exist.</p>",
        "id": 402306521,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1700073945
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=moduleNameOfFileName#doc\">docs#moduleNameOfFileName</a> perhaps?</p>",
        "id": 402306892,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700074113
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 402307120,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1700074212
    },
    {
        "content": "<p>Is there also a way to go the other way, from <code>Mathlib.Algebra.Group.Defs</code> to <code>Mathlib/Algebra/Group/Defs.lean</code>?</p>",
        "id": 403343512,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1700560557
    },
    {
        "content": "<p><code>Lean.findOLean</code> is almost what you want.</p>",
        "id": 403365628,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700567895
    },
    {
        "content": "<p>I have a</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- TODO allow finding Lean 4 sources from the toolchain.</span>\n<span class=\"kd\">def</span> <span class=\"n\">findLean</span> <span class=\"o\">(</span><span class=\"n\">mod</span> <span class=\"o\">:</span> <span class=\"n\">Name</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">FilePath</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">return</span> <span class=\"n\">FilePath.mk</span> <span class=\"o\">((</span><span class=\"bp\">‚Üê</span> <span class=\"n\">findOLean</span> <span class=\"n\">mod</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">toString.replace</span> <span class=\"s2\">\"build/lib/\"</span> <span class=\"s2\">\"\"</span><span class=\"o\">)</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">withExtension</span> <span class=\"s2\">\"lean\"</span>\n</code></pre></div>\n<p>in a project.</p>",
        "id": 403365728,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700567935
    }
]