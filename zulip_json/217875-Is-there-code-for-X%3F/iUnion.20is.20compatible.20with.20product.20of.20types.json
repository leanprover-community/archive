[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">iUnion_product</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">×</span> <span class=\"n\">Y</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">⋃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Y</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">⟩)</span> <span class=\"bp\">=</span> <span class=\"bp\">⋃</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">×</span> <span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I have a proof locally, but also the nagging feeling this should exist somewhere...</p>\n<p>None of exact?, apply?, rw? and aesop find this; this isn't listed on <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Data.Set.Lattice#doc\">docs#Data.Set.Lattice</a> either (where #find_home says it belongs).</p>",
        "id": 395078066,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696522782
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=iSup_prod#doc\">docs#iSup_prod</a> but I don’t think we have the set spelling</p>",
        "id": 395079870,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696523424
    },
    {
        "content": "<p>Thanks - so I'll send a PR then.</p>",
        "id": 395080792,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696523759
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7528\">#7528</a></p>",
        "id": 395084204,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696524932
    }
]