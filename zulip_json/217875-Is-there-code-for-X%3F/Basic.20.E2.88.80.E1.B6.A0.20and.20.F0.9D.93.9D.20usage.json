[
    {
        "content": "<p>Given <code>∀ᶠ (x : ℝ) in 𝓝 a, P x</code>, is there a simple way to get <code>P a</code> without going through <code>eventually</code>/<code>ball</code>-lemmas? I feel there should be a simple way to do it, but I couldn't find it with loogle...</p>",
        "id": 408481329,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1702847969
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.Eventually.exists#doc\">docs#Filter.Eventually.exists</a> ?</p>",
        "id": 408481399,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702848016
    },
    {
        "content": "<p>Oh sorry I see it's the same <code>a</code>!</p>",
        "id": 408481440,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702848076
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.Eventually.self_of_nhds#doc\">docs#Filter.Eventually.self_of_nhds</a></p>",
        "id": 408481470,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702848104
    },
    {
        "content": "<p>Ah, great, thanks! :D</p>",
        "id": 408481540,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1702848151
    },
    {
        "content": "<p>(Oh, I just realized why I couldn't get it with loogle! I wrote <code>∀ᶠ (y : _) in nhds _, _ -&gt; _</code> instead of <code>(∀ᶠ (y : _) in nhds _, _) -&gt; _</code> :P )</p>",
        "id": 408481678,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1702848296
    },
    {
        "content": "<p>Hmm, given <code>f : A → B</code>, <code>∀ᶠ (b : B) in 𝓝 (f a₀), P b</code>, and <code>ContinuousAt f a₀</code>, can we get <code>∀ᶠ (a : A) in 𝓝 a₀, P (f a)</code> via the preimage? Or is that not true in general/with these primitives? (I checked my loogle query's parentheses this time!)</p>",
        "id": 408489025,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1702855473
    },
    {
        "content": "<p>Ah, given <code>hcf : ContinuousAt f a₀</code> and <code>h : ∀ᶠ (b : B) in 𝓝 (f a₀), P b</code>, you can literally just write <code>hcf h</code>. Never would have guessed, thanks <code>hint</code>! :)</p>",
        "id": 408489596,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1702856124
    },
    {
        "content": "<p>Ah, but you do have to coerce the type afterwards. (Maybe it would be worth having a definition for type purposes (and for <code>apply?</code> etc. to use).)</p>",
        "id": 408489916,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1702856464
    },
    {
        "content": "<p>We do have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.Tendsto.eventually#doc\">docs#Filter.Tendsto.eventually</a>. Isn't it what you want?</p>",
        "id": 408502643,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1702863251
    },
    {
        "content": "<p>Oh, looks like it! I suppose my searches were too restrictive—I was including <code>nhds</code> after <code>in</code>.</p>",
        "id": 408502787,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1702863368
    }
]