[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">DecidablePred</span> <span class=\"n\">p</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Decidable</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I believe such expression (also for <code>forall</code> changed to <code>exists</code>) is decidable. We can enumerate through all <code>a : α</code> and check if <code>p a</code> is <code>True</code> or <code>False</code>, then decide the whole expression. Will there be a code for this?</p>\n<p>Edit: I have found <code>forall_prop_decidable</code> for init.logic / Std.Logic.</p>",
        "id": 354593634,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1682819082
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"574112\">Jihoon Hyun</span> has marked this topic as resolved.</p>",
        "id": 354594150,
        "sender_full_name": "Notification Bot",
        "timestamp": 1682819479
    },
    {
        "content": "<p>That's not what you wrote, though. <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=forall_prop_decidable#doc\">docs4#forall_prop_decidable</a> only works when the <code>forall</code> runs over a <code>Prop</code>. The answer to what you wrote is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Fintype.decidableForallFintype\">docs#Fintype.decidableForallFintype</a>.</p>",
        "id": 354628704,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1682841997
    }
]