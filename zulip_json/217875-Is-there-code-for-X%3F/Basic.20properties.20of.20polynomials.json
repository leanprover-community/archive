[
    {
        "content": "<p>Are there lemmas for each of the following properties of polynomials?</p>\n<ul>\n<li>A sum of polynomials is a polynomial</li>\n<li>A product of polynomials is a polynomial</li>\n<li>The derivative of a polynomial is a polynomial</li>\n</ul>",
        "id": 325900123,
        "sender_full_name": "Luke Mantle",
        "timestamp": 1675561029
    },
    {
        "content": "<p>I suspect it's not the answer you want, but <code>+</code>, <code>*</code>, and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.derivative\">docs#polynomial.derivative</a> seem to match those requests</p>",
        "id": 325902652,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675563875
    },
    {
        "content": "<p>Your first two questions, in the context of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial\">docs#polynomial</a>, is like asking \"is there a lemma that says the sum of integers is an integer\".</p>",
        "id": 325903000,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675564223
    },
    {
        "content": "<p>I think that maybe this can be interpreted as, are the polynomials a semiring?</p>",
        "id": 325904053,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1675565348
    },
    {
        "content": "<p>Or, functions that when evaluated are pointwise equivalent to polynomial.eval, that is also true on sums of such functions</p>",
        "id": 325904163,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1675565477
    },
    {
        "content": "<p>For this interpretation, we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.eval_add\">docs#polynomial.eval_add</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.eval_mul\">docs#polynomial.eval_mul</a>, and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.deriv\">docs#polynomial.deriv</a></p>",
        "id": 325905198,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1675566564
    },
    {
        "content": "<p>Note that over finite rings there can be different polynomials giving rise to the same functions, so polynomials are no longer determined by the functions they induce</p>",
        "id": 325922535,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1675583441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Basic.20properties.20of.20polynomials/near/325905198\">said</a>:</p>\n<blockquote>\n<p>For this interpretation, we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.eval_add\">docs#polynomial.eval_add</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.eval_mul\">docs#polynomial.eval_mul</a>, and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.deriv\">docs#polynomial.deriv</a></p>\n</blockquote>\n<p>Hmm ok this might be what I'm looking for.</p>\n<p>Well, suppose I have <code>(f : ℝ → ℝ) (h : ∀ x : ℝ, f x = x - 1)</code>. How can I show that <code>f</code> is a polynomial so that I can then use these properties on it?</p>",
        "id": 326249642,
        "sender_full_name": "Luke Mantle",
        "timestamp": 1675722231
    },
    {
        "content": "<p>You can show that <code>f = (X - 1 : polynomial ℝ).eval</code></p>",
        "id": 326252281,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675723291
    },
    {
        "content": "<p>That likely follows from <code>ext, simp [h]</code></p>",
        "id": 326252386,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675723324
    },
    {
        "content": "<p>Yeah, \"<code>f</code> is a polynomial\" would be expressed in type theory as <code>\\exists p : \\R[X], p.eval = f</code></p>",
        "id": 326252454,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1675723363
    },
    {
        "content": "<p>Just to reiterate, there is a map from polynomials to functions, but to say that a function \"is\" a polynomial is not really meaningful in lean. And there are cases where two polynomials can give the same function.</p>",
        "id": 326252804,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1675723493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Basic.20properties.20of.20polynomials/near/326252804\">said</a>:</p>\n<blockquote>\n<p>Just to reiterate, there is a map from polynomials to functions, but to say that a function \"is\" a polynomial is not really meaningful in lean. And there are cases where two polynomials can give the same function.</p>\n</blockquote>\n<p>Right, I'll keep this in mind</p>",
        "id": 326257273,
        "sender_full_name": "Luke Mantle",
        "timestamp": 1675725680
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Basic.20properties.20of.20polynomials/near/326252454\">said</a>:</p>\n<blockquote>\n<p>Yeah, \"<code>f</code> is a polynomial\" would be expressed in type theory as <code>\\exists p : \\R[X], p.eval = f</code></p>\n</blockquote>\n<p>So I tried going this route, but I'm not sure quite what the proof would look like. This is my failed attempt:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">p.eval</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">use</span> <span class=\"o\">((</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">ℝ</span><span class=\"o\">)),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 326257492,
        "sender_full_name": "Luke Mantle",
        "timestamp": 1675725815
    },
    {
        "content": "<p>The polynomial you want is <code>X - 1</code>, not <code>(λ x, x - 1)</code>. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.X\">docs#polynomial.X</a></p>",
        "id": 326258385,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1675726282
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Basic.20properties.20of.20polynomials/near/326258385\">said</a>:</p>\n<blockquote>\n<p>The polynomial you want is <code>X - 1</code>, not <code>(λ x, x - 1)</code>. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.X\">docs#polynomial.X</a></p>\n</blockquote>\n<p>Ah, ok, thanks!</p>",
        "id": 326260098,
        "sender_full_name": "Luke Mantle",
        "timestamp": 1675727318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Basic.20properties.20of.20polynomials/near/326252804\">said</a>:</p>\n<blockquote>\n<p>Just to reiterate, there is a map from polynomials to functions, but to say that a function \"is\" a polynomial is not really meaningful in lean. And there are cases where two polynomials can give the same function.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"578430\">@Luke Mantle</span> I would argue that it isn't even mathematically correct outside of Lean to say that a function \"is\" a polynomial. It is important to distinguish the two!</p>",
        "id": 326279044,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1675742083
    },
    {
        "content": "<p>To be fair, people definitely talk about <a href=\"https://www.google.com/search?client=firefox-b-1-d&amp;q=polynomial+function\">polynomial functions</a>.</p>",
        "id": 326284948,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1675747612
    },
    {
        "content": "<p>Yes, but in my experience, it is always called that: a polynomial function.</p>",
        "id": 326291708,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1675752346
    },
    {
        "content": "<p>The philosophical difference is that a polynomial over a ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> can be evaluated at elements in any <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>-algebra, but a polynomial function on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> can only be evaluated at elements of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span></p>",
        "id": 326390851,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1675784234
    },
    {
        "content": "<p>At least that's how I distinguish the two</p>",
        "id": 326390897,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1675784248
    },
    {
        "content": "<p>To me an important difference is there can be many more polynomials than polynomial functions: over a finite field, there are finitely many polynomial functions (since there are finitely many functions) but infinitely many polynomials.</p>",
        "id": 326392792,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1675784759
    },
    {
        "content": "<p>While I understand the (important) distinction between polynomial and polynomial function, in my analysis circles we generally only ever use the term \"polynomial\". If necessary, context is used to disambiguate.</p>",
        "id": 326406240,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1675788131
    },
    {
        "content": "<p>Yeah, if you're working over the reals (as the original poster was) then it's less of an issue. The only reason it comes up is because lean is working over a general base so the issue is there in lean whether or not you care about it</p>",
        "id": 326407755,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1675788573
    }
]