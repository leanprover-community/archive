[
    {
        "content": "<p>Dear All,</p>\n<p>does Mathlib already  contain a lemma similar to the one below?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.Trace</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">Matrix.trace_diagonal</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">o</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">o</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">o</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">o</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Matrix.trace</span> <span class=\"o\">(</span><span class=\"n\">Matrix.diagonal</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">Finset.univ</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">o</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Thanks!</p>",
        "id": 390057642,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694286176
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.Trace</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">Matrix.trace_diagonal</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">o</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">o</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">o</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">o</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Matrix.trace</span> <span class=\"o\">(</span><span class=\"n\">Matrix.diagonal</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">Finset.univ</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">o</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Matrix.trace</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 390057973,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694286503
    },
    {
        "content": "<p><del>I think it's also true by <code>rfl</code>?</del></p>",
        "id": 390057992,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694286518
    },
    {
        "content": "<p>yeah I tried that first :-)</p>",
        "id": 390058013,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694286545
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Matrix.diagonal_apply_eq#doc\">docs#Matrix.diagonal_apply_eq</a> isn't <code>rfl</code> apparently</p>",
        "id": 390058055,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694286599
    },
    {
        "content": "<p><code>diagonal</code> has an <code>if</code> in its definition.</p>",
        "id": 390058119,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694286637
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span>  I did not think of unfolding!</p>",
        "id": 390058450,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694287002
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 390058455,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694287007
    },
    {
        "content": "<p>Do you agree that this lemma should be in mathlib?</p>",
        "id": 390058489,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694287059
    },
    {
        "content": "<p>yeah I couldn't find it and the name is pretty obvious</p>",
        "id": 390059040,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694287609
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7061\">#7061</a></p>",
        "id": 390059460,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694288054
    }
]