[
    {
        "content": "<p>Do we have this somewhere? (Possibly in much larger generality like a uniform space?) </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">ℝ</span><span class=\"o\">)}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">bla</span> <span class=\"o\">(</span><span class=\"n\">hK</span> <span class=\"o\">:</span> <span class=\"n\">IsCompact</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hS</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">IsOpen</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hKS</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"bp\">⊆</span> <span class=\"bp\">⋃</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∃</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">K</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">closedBall</span> <span class=\"n\">x</span> <span class=\"n\">ε</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 390678973,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1694596020
    },
    {
        "content": "<p>Something like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=lebesgue_number_lemma#doc\">docs#lebesgue_number_lemma</a>, maybe?</p>",
        "id": 390684474,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1694597984
    },
    {
        "content": "<p>Yes exactly! Thanks!</p>",
        "id": 390685573,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1694598402
    },
    {
        "content": "<p>There is now a very cool way to find the anwer to this kind of question: ask loogle to state all theorems mentioning all the stuff that should be in your statements.</p>",
        "id": 390686284,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1694598656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> IsCompact, IsOpen, Set, (∃ _, _), (⋃ _, _)</p>",
        "id": 390686319,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1694598666
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/SubsetProperties.html#isCompact_iff_finite_subcover\">isCompact_iff_finite_subcover</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/SubsetProperties.html#isCompact_of_finite_subcover\">isCompact_of_finite_subcover</a>, and <a href=\"https://loogle.lean-fro.org/?q=IsCompact%2C%20IsOpen%2C%20Set%2C%20%28%E2%88%83%20_%2C%20_%29%2C%20%28%E2%8B%83%20_%2C%20_%29\">12 more</a></p>",
        "id": 390686321,
        "sender_full_name": "loogle",
        "timestamp": 1694598667
    },
    {
        "content": "<p>I've been pretty vague in my query since it wasn't clear if it would be in metric or uniformity terms, but for sure there would be an existential, a union, and <code>IsCompact</code>, <code>IsOpen</code> and <code>Set</code>.</p>",
        "id": 390686545,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1694598740
    },
    {
        "content": "<p>And I notice in the suggestions by loogle a better answer to your question: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=lebesgue_number_lemma_of_metric#doc\">docs#lebesgue_number_lemma_of_metric</a></p>",
        "id": 390686668,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1694598788
    },
    {
        "content": "<p>Yes I just saw it. It is just stated in terms of an indexed family instead of a set of sets, which I guess is why <code>exact?</code> was not helping.</p>",
        "id": 390687477,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1694599046
    },
    {
        "content": "<p>It's kind of amazing that loogle works that well (I would have expected a much longer list of lemmas with that request ...)</p>",
        "id": 390687616,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1694599093
    }
]