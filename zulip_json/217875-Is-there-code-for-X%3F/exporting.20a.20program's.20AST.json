[
    {
        "content": "<p>I am investigating using Lean to specify and verify protocols, and then code-generate the protocols in another language (say Go).<br>\nIn that regard, I am wondering if there is a way to export a complete Lean program's AST in some common format (like JSON/ProtoBuf/etc.)?</p>\n<p>Thank you!</p>",
        "id": 195227505,
        "sender_full_name": "Petar Maymounkov",
        "timestamp": 1587753129
    },
    {
        "content": "<p>That is not currently supported. How would you use that information?</p>",
        "id": 195230396,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1587754644
    },
    {
        "content": "<p>What is supported however is parsing <code>olean</code> files (object files) and extracting the definitions from there. A prototype exists in Rust and it's called <code>rs-olean</code></p>",
        "id": 195230534,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1587754710
    },
    {
        "content": "<p>For a Lean function to be convertible to a static-typed target language, it must have no dependent types.<br>\nSo, my reasoning is:</p>\n<ol>\n<li>Use Lean to define a function F with no dependent types in its own signature. (Inside, the definition of F may invoke dependent-type sub-functions.)</li>\n<li>Traverse the definition of F recursively, expanding dependent Lean types (to non-dependent Lean types) as you go.</li>\n<li>Map non-dependent Lean types to static types in the target language using a simple translation rule.</li>\n</ol>",
        "id": 195232635,
        "sender_full_name": "Petar Maymounkov",
        "timestamp": 1587755808
    },
    {
        "content": "<p>I recognize that evaluating the types of function calls may be hard to do from just the AST. An alternative strategy for code-generation would be to implement the generation in Lean itself, using Lean reflection to construct the target language AST and then dump it into an object file. I wonder if Lean supports enough reflection to accomplish this; and also can it write data structures to a file.</p>",
        "id": 195234816,
        "sender_full_name": "Petar Maymounkov",
        "timestamp": 1587756855
    }
]