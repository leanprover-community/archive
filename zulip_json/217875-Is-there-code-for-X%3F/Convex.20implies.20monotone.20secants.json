[
    {
        "content": "<p>Do we have a lemma stating that if a function <code>f : ‚Ñù ‚Üí ‚Ñù</code> is convex then the \"secant based at x\" function, sending <code>y</code> to <code>(f y - f x) / (y - x)</code>, is monotone?  Something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">convex_on</span> <span class=\"bp\">ùïú</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hz</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">‚â†</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyz</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">‚â†</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyz</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>(maybe I need to be more careful about degenerate cases).</p>\n<p>There are similar-looking lemmas like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/convex_on.slope_mono_adjacent\">docs#convex_on.slope_mono_adjacent</a>, but these are pickier about the relative order of the points.</p>",
        "id": 323553884,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674670609
    },
    {
        "content": "<p>(don't know the answer but probably you can have <code>hyz : y \\le z</code> in the statement)</p>",
        "id": 323554432,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674670749
    },
    {
        "content": "<p>I don't think so. The lemma <a href=\"https://leanprover-community.github.io/mathlib_docs/find/convex_on.slope_mono_adjacent\">docs#convex_on.slope_mono_adjacent</a> is about pairs of secants that meet in the middle, while I think you're looking for a result about secants that meet at the ends, right?</p>",
        "id": 323568736,
        "sender_full_name": "David Loeffler",
        "timestamp": 1674675038
    },
    {
        "content": "<p>(there seems to be a typo in the docs, which is unhelpful)</p>",
        "id": 323568934,
        "sender_full_name": "David Loeffler",
        "timestamp": 1674675113
    },
    {
        "content": "<p>I bashed out a proof, shall I PR it to <code>analysis.convex.slope</code>?</p>",
        "id": 323586168,
        "sender_full_name": "David Loeffler",
        "timestamp": 1674681381
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"481963\">@David Loeffler</span> Sure, thank you!</p>",
        "id": 323587064,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674681747
    },
    {
        "content": "<p>I actually bashed out my own proof this afternoon too, feel free to mix and match any parts.</p>",
        "id": 323588385,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674682289
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">convex_on.secant_mono_aux1</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">convex_on</span> <span class=\"bp\">ùïú</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hz</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyz</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxy'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hyz'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxz'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">le_div_iff</span> <span class=\"n\">hxz'</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">positivity</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">positivity</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">_</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">‚â§</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">hf.2</span> <span class=\"n\">hx</span> <span class=\"n\">hz</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span> <span class=\"n\">_</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">congr'</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">hxy'.ne'</span><span class=\"o\">,</span> <span class=\"n\">hyz'.ne'</span><span class=\"o\">,</span> <span class=\"n\">hxz'.ne'</span><span class=\"o\">],</span>\n    <span class=\"n\">ring</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">hxy'.ne'</span><span class=\"o\">,</span> <span class=\"n\">hyz'.ne'</span><span class=\"o\">,</span> <span class=\"n\">hxz'.ne'</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">hxy'.ne'</span><span class=\"o\">,</span> <span class=\"n\">hyz'.ne'</span><span class=\"o\">,</span> <span class=\"n\">hxz'.ne'</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">convex_on.secant_mono_aux2</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">convex_on</span> <span class=\"bp\">ùïú</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hz</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyz</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxy'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxz'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">div_le_div_iff</span> <span class=\"n\">hxy'</span> <span class=\"n\">hxz'</span><span class=\"o\">,</span>\n  <span class=\"n\">linarith</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hf.secant_mono_aux1</span> <span class=\"n\">hx</span> <span class=\"n\">hz</span> <span class=\"n\">hxy</span> <span class=\"n\">hyz</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">convex_on.secant_mono_aux3</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">convex_on</span> <span class=\"bp\">ùïú</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hz</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyz</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hyz'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxz'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">div_le_div_iff</span> <span class=\"n\">hxz'</span> <span class=\"n\">hyz'</span><span class=\"o\">,</span>\n  <span class=\"n\">linarith</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hf.secant_mono_aux1</span> <span class=\"n\">hx</span> <span class=\"n\">hz</span> <span class=\"n\">hxy</span> <span class=\"n\">hyz</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">convex_on.secant_mono</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">convex_on</span> <span class=\"bp\">ùïú</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxa</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚â†</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hya</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">‚â†</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚â§</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">eq_or_lt_of_le</span> <span class=\"n\">hxy</span> <span class=\"k\">with</span> <span class=\"n\">rfl</span> <span class=\"bp\">|</span> <span class=\"n\">hxy</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">},</span>\n  <span class=\"n\">cases</span> <span class=\"n\">lt_or_gt_of_ne</span> <span class=\"n\">hxa</span> <span class=\"k\">with</span> <span class=\"n\">hxa</span> <span class=\"n\">hxa</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">lt_or_gt_of_ne</span> <span class=\"n\">hya</span> <span class=\"k\">with</span> <span class=\"n\">hya</span> <span class=\"n\">hya</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">convert</span> <span class=\"n\">hf.secant_mono_aux3</span> <span class=\"n\">hx</span> <span class=\"n\">ha</span> <span class=\"n\">hxy</span> <span class=\"n\">hya</span> <span class=\"n\">using</span> <span class=\"mi\">1</span><span class=\"bp\">;</span>\n      <span class=\"n\">rw</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">neg_div_neg_eq</span><span class=\"bp\">;</span>\n      <span class=\"n\">field_simp</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">convert</span> <span class=\"n\">hf.slope_mono_adjacent</span> <span class=\"n\">hx</span> <span class=\"n\">hy</span> <span class=\"n\">hxa</span> <span class=\"n\">hya</span> <span class=\"n\">using</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">neg_div_neg_eq</span><span class=\"bp\">;</span>\n      <span class=\"n\">field_simp</span><span class=\"o\">,</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">hf.secant_mono_aux2</span> <span class=\"n\">ha</span> <span class=\"n\">hy</span> <span class=\"n\">hxa</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 323588440,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674682320
    },
    {
        "content": "<p>Here's mine:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">section</span> <span class=\"n\">slope_mono</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"bp\">ùïú</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_ordered_field</span> <span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span> <span class=\"bp\">‚Üí</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">x'</span> <span class=\"n\">y</span> <span class=\"n\">y'</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">convex_on</span> <span class=\"bp\">ùïú</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n<span class=\"kn\">include</span> <span class=\"n\">hf</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">slope_mono_right</span>\n <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy'</span> <span class=\"o\">:</span> <span class=\"n\">y'</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyy'</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">‚â§</span> <span class=\"n\">y'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y'</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y'</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">div_le_div_iff</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"n\">hxy</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxy.trans_le</span> <span class=\"n\">hyy'</span><span class=\"o\">)),</span> <span class=\"bp\">‚Üê</span><span class=\"n\">sub_nonneg</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">y'</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y'</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">‚Ä¢</span> <span class=\"n\">x</span>  <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y'</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">‚Ä¢</span> <span class=\"n\">y'</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">field_simp</span> <span class=\"o\">[(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxy.trans_le</span> <span class=\"n\">hyy'</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">],</span>\n    <span class=\"n\">ring</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"n\">hf.2</span> <span class=\"n\">hx</span> <span class=\"n\">hy'</span>\n    <span class=\"o\">(</span><span class=\"n\">div_nonneg</span> <span class=\"o\">(</span><span class=\"n\">sub_nonneg.mpr</span> <span class=\"n\">hyy'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxy.trans_le</span> <span class=\"n\">hyy'</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">le</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">div_pos</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"n\">hxy</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxy.trans_le</span> <span class=\"n\">hyy'</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">le</span>\n    <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">field_simp</span> <span class=\"o\">[(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxy.trans_le</span> <span class=\"n\">hyy'</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">]</span> <span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">smul_eq_mul</span><span class=\"o\">,</span> <span class=\"n\">smul_eq_mul</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n  <span class=\"n\">field_simp</span> <span class=\"o\">[(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxy.trans_le</span> <span class=\"n\">hyy'</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">le_div_iff</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxy.trans_le</span> <span class=\"n\">hyy'</span><span class=\"o\">)),</span> <span class=\"bp\">‚Üê</span><span class=\"n\">sub_nonneg</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">B</span> <span class=\"n\">using</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">slope_mono_left</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxx'</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚â§</span> <span class=\"n\">x'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx'y</span> <span class=\"o\">:</span> <span class=\"n\">x'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x'</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x'</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">div_le_div_iff</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxx'.trans_lt</span> <span class=\"n\">hx'y</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"n\">hx'y</span><span class=\"o\">),</span> <span class=\"bp\">‚Üê</span><span class=\"n\">sub_nonneg</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x'</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">‚Ä¢</span> <span class=\"n\">x</span>  <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">x'</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">‚Ä¢</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">x'</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">field_simp</span> <span class=\"o\">[(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxx'.trans_lt</span> <span class=\"n\">hx'y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">],</span>\n    <span class=\"n\">ring</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"n\">hf.2</span> <span class=\"n\">hx</span> <span class=\"n\">hy</span>\n    <span class=\"o\">(</span><span class=\"n\">div_pos</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"n\">hx'y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxx'.trans_lt</span> <span class=\"n\">hx'y</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">le</span>\n    <span class=\"o\">(</span><span class=\"n\">div_nonneg</span> <span class=\"o\">(</span><span class=\"n\">sub_nonneg.mpr</span> <span class=\"n\">hxx'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxx'.trans_lt</span> <span class=\"n\">hx'y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">le</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">field_simp</span> <span class=\"o\">[(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxx'.trans_lt</span> <span class=\"n\">hx'y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">]</span> <span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">smul_eq_mul</span><span class=\"o\">,</span> <span class=\"n\">smul_eq_mul</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n  <span class=\"n\">field_simp</span> <span class=\"o\">[(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxx'.trans_lt</span> <span class=\"n\">hx'y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">le_div_iff</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">hxx'.trans_lt</span> <span class=\"n\">hx'y</span><span class=\"o\">)),</span> <span class=\"bp\">‚Üê</span><span class=\"n\">sub_nonneg</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">B</span> <span class=\"n\">using</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">slope_mono</span>\n  <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hz</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">‚â†</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxz</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">‚â†</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyz</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">‚â§</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">‚â§</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">eq_or_lt_of_le</span> <span class=\"n\">hyz</span> <span class=\"k\">with</span> <span class=\"n\">rfl</span> <span class=\"bp\">|</span> <span class=\"n\">hyz'</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">lt_or_lt_iff_ne.mpr</span> <span class=\"n\">hxy</span> <span class=\"k\">with</span> <span class=\"n\">hxy'</span> <span class=\"bp\">|</span> <span class=\"n\">hxy'</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">lt_or_lt_iff_ne.mpr</span> <span class=\"n\">hxz</span> <span class=\"k\">with</span> <span class=\"n\">hxz'</span> <span class=\"bp\">|</span> <span class=\"n\">hxz'</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"c1\">-- y &lt; z &lt; x</span>\n      <span class=\"n\">convert</span> <span class=\"n\">slope_mono_left</span> <span class=\"n\">hf</span> <span class=\"n\">hy</span> <span class=\"n\">hx</span> <span class=\"n\">hyz'.le</span> <span class=\"n\">hxz'</span> <span class=\"n\">using</span> <span class=\"mi\">1</span><span class=\"bp\">;</span>\n      <span class=\"o\">{</span> <span class=\"n\">convert</span> <span class=\"n\">neg_div_neg_eq</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">ring</span> <span class=\"o\">},</span> <span class=\"o\">{</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"c1\">-- y &lt; x &lt; z</span>\n      <span class=\"n\">convert</span> <span class=\"n\">convex_on.slope_mono_adjacent</span> <span class=\"n\">hf</span> <span class=\"n\">hy</span> <span class=\"n\">hz</span> <span class=\"n\">hxy'</span> <span class=\"n\">hxz'</span> <span class=\"n\">using</span> <span class=\"mi\">1</span><span class=\"bp\">;</span>\n      <span class=\"o\">{</span> <span class=\"n\">convert</span> <span class=\"n\">neg_div_neg_eq</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">ring</span> <span class=\"o\">},</span> <span class=\"o\">{</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c1\">-- x &lt; y ‚â§ z</span>\n    <span class=\"n\">exact</span> <span class=\"n\">slope_mono_right</span> <span class=\"n\">hf</span> <span class=\"n\">hx</span> <span class=\"n\">hz</span> <span class=\"n\">hxy'</span> <span class=\"n\">hyz</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">slope_mono</span>\n</code></pre></div>",
        "id": 323588670,
        "sender_full_name": "David Loeffler",
        "timestamp": 1674682394
    },
    {
        "content": "<p>They look pretty similar, case bashing on the order of the three points involved.</p>",
        "id": 323588778,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674682438
    },
    {
        "content": "<p>I think yours wins though -- there is too much duplication between <code>slope_mono_left</code> and <code>slope_mono_right</code> in mine.</p>",
        "id": 323588967,
        "sender_full_name": "David Loeffler",
        "timestamp": 1674682514
    },
    {
        "content": "<p>It's a bit surprising to me that nothing like this is there yet.  Maybe it's because most of the convexity library is written in the multivariable/multidimensional setting?</p>",
        "id": 323589353,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674682662
    },
    {
        "content": "<p>But I don't think there is any possible multivariable framing of this statement.</p>",
        "id": 323589537,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674682719
    },
    {
        "content": "<p>Actually, our final lemmas are basically identical :-)</p>",
        "id": 323589871,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674682847
    },
    {
        "content": "<p>Great minds ;-)</p>",
        "id": 323590144,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674682958
    }
]