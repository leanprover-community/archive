[
    {
        "content": "<p>Do we have a structure that captures a (commutative) group with compatible negation (i.e. <code>comm_group</code> and <code>has_distrib_neg</code>) that also carries a linear order that is compatible with this structure?<br>\nIt is not a <code>linear_ordered_comm_group</code>, since this requires that multiplication with any element preserves the ordering. But here, we have negative elements that reverse the ordering.<br>\nExamples of such structures are unit groups of <code>linear_ordered_comm_ring</code>s like the multiplicative groups of the real or rational numbers.</p>",
        "id": 341371848,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678684522
    },
    {
        "content": "<p>I think we don't.</p>",
        "id": 341371941,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1678684603
    },
    {
        "content": "<p>Would it make sense to have it?</p>",
        "id": 341371960,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678684625
    },
    {
        "content": "<p>(The example I have in mind is <code>unitary (zsqrtd d)</code> for positive non-square <code>d</code> ...)</p>",
        "id": 341372064,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678684690
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/unitary\">docs#unitary</a></p>",
        "id": 341387476,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678692532
    },
    {
        "content": "<p>I'm confused: how are you ordering units? Are you choosing an embedding?</p>",
        "id": 341387960,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678692733
    },
    {
        "content": "<p>When <code>d</code> is a positive nonsquare, <code>ℤ√d</code> has an ordered ring structure: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/zsqrtd.linear_ordered_comm_ring\">docs#zsqrtd.linear_ordered_comm_ring</a> . I assume this implicitly uses the \"standard\" real embedding sending the abstract square root to the positive one.<br>\nThe units are ordered by restriction.</p>",
        "id": 341521417,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678727256
    },
    {
        "content": "<p>I was thinking of adding a version of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/zsqrtd.linear_ordered_comm_ring\">docs#zsqrtd.linear_ordered_comm_ring</a> for integer <code>d</code>, as this seems more natural to me, since the parameter to <code>zsqrtd</code> is an integer.<br>\nOr, maybe it would make more sense to refactor this part for integer <code>d</code> rather than adding a version?<br>\nI.e., set up a type class <code>pos_nonsquare</code> (which would make sense for elements of an arbitrary ordered semiring, I guess) and use it to replace <a href=\"https://leanprover-community.github.io/mathlib_docs/find/zsqrtd.nonsquare\">docs#zsqrtd.nonsquare</a> .<br>\nAt least for the application (to Pell's equation) that I have in mind, that would be more convenient than the version for natural numbers <code>d</code>.</p>",
        "id": 341522279,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1678727495
    }
]