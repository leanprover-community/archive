[
    {
        "content": "<p>What is the closest we have to:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">theorem</span> <span class=\"n\">zipWith_data</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">Array.zipWith</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">data</span> <span class=\"bp\">=</span> <span class=\"n\">List.zipWith</span> <span class=\"n\">f</span> <span class=\"n\">A.data</span> <span class=\"n\">B.data</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Anything characterising <code>Array.zipWith</code> would be helpful!</p>",
        "id": 390699329,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694603491
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Array.zipWith#doc\">docs#Array.zipWith</a><br>\nThere doesn't seem to be much.</p>",
        "id": 390700392,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1694603912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> Array.zipWith, List.zipWith</p>",
        "id": 390701410,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694604334
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> nothing found</p>",
        "id": 390701415,
        "sender_full_name": "loogle",
        "timestamp": 1694604335
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> Array.zipWith</p>",
        "id": 390701449,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694604350
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> nothing found</p>",
        "id": 390701451,
        "sender_full_name": "loogle",
        "timestamp": 1694604350
    },
    {
        "content": "<p>Yeah... :-) Sorry, I'd already got that far privately, should have specified.</p>",
        "id": 390701475,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694604360
    },
    {
        "content": "<p>Amazing news...</p>",
        "id": 390701518,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694604365
    },
    {
        "content": "<p>Whenever I see these attempts, I am always reminded of the old time and \"let me Google that for you\"!.  With loogle, I would really welcome a  \"let me Loogle that for you!\"</p>",
        "id": 390701953,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1694604544
    }
]