[
    {
        "content": "<p>Should there be, when <code>α</code>is a Type, a type of finite subsets of <code>α</code>? With the corresponding API, starting with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">finite_set</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">):</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"n\">s.finite</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>Or is it OK to resort to <code>finset</code> (which is supposed to some computational content)?</p>",
        "id": 373707823,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1688910609
    },
    {
        "content": "<p>I thought finset was meant to be the thing for this</p>",
        "id": 373711578,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1688911632
    },
    {
        "content": "<p>If you are indeed interested in the type then <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset#doc\">docs#Finset</a> is indeed the way to go, simply because this is the only bundled version we have. From what I understand, the computational content is mostly an issue for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Fintype#doc\">docs#Fintype</a> vs <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finite#doc\">docs#Finite</a>.</p>",
        "id": 373713008,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1688912063
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finite#doc\">docs#Finite</a> also work for <code>Sort _</code> so lemmas like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=isOpen_iInter#doc\">docs#isOpen_iInter</a> don't need special cases for <code>Prop</code>.</p>",
        "id": 373721161,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1688914347
    },
    {
        "content": "<p>I would absolutely use <code>finset</code> for this - you don't need to be computable or have any computational content for it; I often have noncomputable finsets</p>",
        "id": 373722337,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1688914684
    },
    {
        "content": "<p>OK, I ended up doing that, it simplifies many things.</p>",
        "id": 373737497,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1688918946
    }
]