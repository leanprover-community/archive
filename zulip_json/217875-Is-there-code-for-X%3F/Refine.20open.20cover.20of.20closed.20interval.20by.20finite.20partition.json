[
    {
        "content": "<p>If not, golf welcome! I tried to use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LipschitzWith.projIcc#doc\">docs#LipschitzWith.projIcc</a> but the current proof is shorter.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.UnitInterval</span>\n<span class=\"kn\">open</span> <span class=\"n\">unitInterval</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">lebesgue_number_lemma_unitInterval</span> <span class=\"o\">{</span><span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">I</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hc₁</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">IsOpen</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">i</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">hc₂</span> <span class=\"o\">:</span> <span class=\"n\">Set.univ</span> <span class=\"bp\">⊆</span> <span class=\"bp\">⋃</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">t</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">Monotone</span> <span class=\"n\">t</span> <span class=\"bp\">∧</span>\n      <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">Set.Icc</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"n\">c</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"bp\">∃</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">m</span> <span class=\"bp\">≥</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">t</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">δ</span><span class=\"o\">,</span> <span class=\"n\">δ_pos</span><span class=\"o\">,</span> <span class=\"n\">ball_subset</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">lebesgue_number_lemma_of_metric</span> <span class=\"n\">isCompact_univ</span> <span class=\"n\">hc₁</span> <span class=\"n\">hc₂</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"n\">Set.projIcc</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"n\">zero_le_one</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">δ</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)),</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"n\">hnm</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"bp\">·</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.cast_zero</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">,</span> <span class=\"n\">Set.projIcc_left</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n  <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"n\">Set.monotone_projIcc</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_le_mul_right</span> <span class=\"o\">(</span><span class=\"n\">div_pos</span> <span class=\"n\">δ_pos</span> <span class=\"n\">zero_lt_two</span><span class=\"o\">)]</span>\n    <span class=\"n\">exact_mod_cast</span> <span class=\"n\">hnm</span>\n  <span class=\"bp\">·</span> <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">hsub</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span>  <span class=\"n\">ball_subset</span> <span class=\"o\">(</span><span class=\"n\">Set.projIcc</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"n\">zero_le_one</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">δ</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)))</span> <span class=\"n\">trivial</span>\n    <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"bp\">↦</span> <span class=\"n\">hsub</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Metric.mem_ball</span><span class=\"o\">]</span>\n    <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">abs_eq_self.mpr</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_lt</span>\n    <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">sub_le_sub_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_lt</span>\n      <span class=\"n\">on_goal</span> <span class=\"mi\">3</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">hx.2</span>\n      <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">max_sub_max_le_max</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_lt</span> <span class=\"o\">(</span><span class=\"n\">max_lt</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">sub_zero</span><span class=\"o\">])</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">)</span>\n      <span class=\"n\">refine</span> <span class=\"o\">((</span><span class=\"n\">le_abs_self</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">abs_min_sub_min_le_max</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_lt</span> <span class=\"o\">(</span><span class=\"n\">max_lt</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">)</span>\n      <span class=\"bp\">·</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">,</span> <span class=\"n\">abs_zero</span><span class=\"o\">]</span>\n      <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">sub_mul</span><span class=\"o\">,</span> <span class=\"n\">Nat.cast_succ</span><span class=\"o\">,</span> <span class=\"n\">add_sub_cancel'</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">abs_lt</span><span class=\"o\">]</span>\n        <span class=\"n\">constructor</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">linarith</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">δ_pos</span><span class=\"o\">]</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">sub_nonneg_of_le</span> <span class=\"n\">hx.1</span>\n  <span class=\"bp\">·</span> <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">Nat.ceil</span> <span class=\"o\">(</span><span class=\"n\">δ</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"n\">hn</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">Set.projIcc_eq_right</span> <span class=\"n\">zero_lt_one</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n    <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">GE.ge</span><span class=\"o\">,</span> <span class=\"n\">Nat.ceil_le</span><span class=\"o\">,</span> <span class=\"n\">inv_pos_le_iff_one_le_mul</span> <span class=\"o\">(</span><span class=\"n\">div_pos</span> <span class=\"n\">δ_pos</span> <span class=\"n\">zero_lt_two</span><span class=\"o\">)]</span> <span class=\"n\">at</span> <span class=\"n\">hn</span>\n</code></pre></div>",
        "id": 394343249,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1696231164
    }
]