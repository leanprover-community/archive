[
    {
        "content": "<p>Do we have some function, with type signature <code>System.FilePath -&gt; IO Bool</code> for example, that checks whether a file exists in the filesystem?</p>",
        "id": 387975641,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1693346151
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> System.FilePath -&gt; IO Bool</p>",
        "id": 387975705,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1693346169
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=System.FilePath.walkDir#doc\">docs#System.FilePath.walkDir</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=System.FilePath.walkDir.go#doc\">docs#System.FilePath.walkDir.go</a></p>",
        "id": 387975707,
        "sender_full_name": "loogle",
        "timestamp": 1693346170
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=System.FilePath.pathExists#doc\">docs#System.FilePath.pathExists</a></p>",
        "id": 387979664,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1693347796
    },
    {
        "content": "<p><code>BaseIO</code>!</p>",
        "id": 387979785,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1693347849
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> In the docs <code>System.FilePath</code> is showing up as <code>Lake.FilePath</code>. Do you have any idea why?)</p>",
        "id": 387979799,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1693347858
    },
    {
        "content": "<p>Oooh, could loogle know about monads?</p>",
        "id": 387986045,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693350785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> System.FilePath, \"exist\"</p>",
        "id": 388051891,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1693382458
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> nothing found</p>",
        "id": 388051893,
        "sender_full_name": "loogle",
        "timestamp": 1693382459
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Check.20if.20file.20exists/near/387979799\">said</a>:</p>\n<blockquote>\n<p>(<span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> In the docs <code>System.FilePath</code> is showing up as <code>Lake.FilePath</code>. Do you have any idea why?)</p>\n</blockquote>\n<p>O_O no I didn't notice that yet, I'll investigate, thats a fun one</p>",
        "id": 388051946,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1693382476
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> System.FilePath, \"Exist\"</p>",
        "id": 388051972,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1693382489
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=System.FilePath.pathExists#doc\">docs#System.FilePath.pathExists</a></p>",
        "id": 388051975,
        "sender_full_name": "loogle",
        "timestamp": 1693382490
    },
    {
        "content": "<p>Ok, I should certainly do the match case insensitively</p>",
        "id": 388052074,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1693382524
    },
    {
        "content": "<p>also underscore insensitively</p>",
        "id": 388052176,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693382575
    },
    {
        "content": "<p>That's already harder, but you can search for multiple words.</p>",
        "id": 388052286,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1693382610
    },
    {
        "content": "<p>it could just be a noncontiguous substring</p>",
        "id": 388052342,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693382631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> BaseIO, \"File\", \"Exists\"</p>",
        "id": 388052366,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1693382637
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=System.FilePath.pathExists#doc\">docs#System.FilePath.pathExists</a></p>",
        "id": 388052368,
        "sender_full_name": "loogle",
        "timestamp": 1693382638
    },
    {
        "content": "<p>Is the autocompletion algorithm used by VSCode exposed in the libraries somewhere? Is it using some kind of index?</p>",
        "id": 388052524,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1693382680
    },
    {
        "content": "<p>I don't recall what VSCode specifically does, but I like linking to <a href=\"https://github.com/jhawthorn/fzy/blob/master/ALGORITHM.md\">https://github.com/jhawthorn/fzy/blob/master/ALGORITHM.md</a> as both a good overview of possibilities as well as what I personally find most intuitive (the one it implements)</p>",
        "id": 388488285,
        "sender_full_name": "Julian Berman",
        "timestamp": 1693561113
    }
]