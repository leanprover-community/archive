[
    {
        "content": "<p>Is there a proof of this in the library?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">mem_liminf_iff</span> <span class=\"o\">(</span><span class=\"bp\">Ω</span> <span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓕</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">ω</span> <span class=\"bp\">∈</span> <span class=\"n\">liminf</span> <span class=\"n\">A</span> <span class=\"bp\">𝓕</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"bp\">∀ᶠ</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"bp\">𝓕</span><span class=\"o\">,</span> <span class=\"n\">ω</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I assumed this was the <em>definition</em> of the LHS, but apparently it isn't. I can bodge together a proof in half a dozen lines; but I'm wondering if it's already there in the library and I'm just looking in the wrong place</p>",
        "id": 403010817,
        "sender_full_name": "David Loeffler",
        "timestamp": 1700401048
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481963\">David Loeffler</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/liminf.20of.20sets/near/403010817\">said</a>:</p>\n<blockquote>\n<p>Is there a proof of this in the library?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">mem_liminf_iff</span> <span class=\"o\">(</span><span class=\"bp\">Ω</span> <span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓕</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">ω</span> <span class=\"bp\">∈</span> <span class=\"n\">liminf</span> <span class=\"n\">A</span> <span class=\"bp\">𝓕</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"bp\">∀ᶠ</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"bp\">𝓕</span><span class=\"o\">,</span> <span class=\"n\">ω</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I assumed this was the <em>definition</em> of the LHS, but apparently it isn't. I can bodge together a proof in half a dozen lines; but I'm wondering if it's already there in the library and I'm just looking in the wrong place</p>\n</blockquote>\n<p>Nobody bit on this, so I made a PR to add this to the library: <a href=\"https://github.com/leanprover-community/mathlib4/pull/8524\">#8524</a></p>",
        "id": 403105255,
        "sender_full_name": "David Loeffler",
        "timestamp": 1700463824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481963\">David Loeffler</span> has marked this topic as resolved.</p>",
        "id": 403113741,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700467364
    }
]