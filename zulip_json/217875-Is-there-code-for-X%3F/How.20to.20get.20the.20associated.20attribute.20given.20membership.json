[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">AType</span> <span class=\"n\">where</span>\n  <span class=\"n\">mk</span><span class=\"o\">::</span>\n  <span class=\"n\">something</span> <span class=\"o\">:</span> <span class=\"n\">Unit</span>\n\n<span class=\"kd\">@[reducible]</span>\n<span class=\"kd\">def</span> <span class=\"n\">Map</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">AType</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">AType</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">x</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">xs</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">Map</span> <span class=\"n\">f</span> <span class=\"n\">xs</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">Names</span> <span class=\"n\">δ</span> <span class=\"o\">:=</span> <span class=\"n\">Map</span> <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"n\">fst</span><span class=\"o\">)</span> <span class=\"n\">δ</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">Attribute</span> <span class=\"n\">δ</span> <span class=\"o\">:=</span> <span class=\"n\">Subtype</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">Names</span> <span class=\"n\">δ</span><span class=\"o\">))</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ATypeOf</span> <span class=\"o\">{</span><span class=\"n\">δ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Attribute</span> <span class=\"n\">δ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">AType</span> <span class=\"o\">:=</span>\n  <span class=\"c1\">-- how to write this?</span>\n</code></pre></div>",
        "id": 390340780,
        "sender_full_name": "Schrodinger ZHU Yifan",
        "timestamp": 1694447197
    },
    {
        "content": "<p>your code doesn't work for me. please provide a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 390344894,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694448443
    },
    {
        "content": "<p>It didn't work for me either, and I was going to ask for an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> too, but I'm guessing this is what you're looking for:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">AType</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n\n<span class=\"kd\">@[reducible]</span>\n<span class=\"kd\">def</span> <span class=\"n\">Map</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">AType</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">AType</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">x</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">xs</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">Map</span> <span class=\"n\">f</span> <span class=\"n\">xs</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">Names</span> <span class=\"o\">(</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">AType</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"n\">Map</span> <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"n\">fst</span><span class=\"o\">)</span> <span class=\"n\">δ</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">Attribute</span> <span class=\"o\">(</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">AType</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"n\">Subtype</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">Names</span> <span class=\"n\">δ</span><span class=\"o\">))</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ATypeOf</span> <span class=\"o\">{</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">AType</span><span class=\"o\">)}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Attribute</span> <span class=\"n\">δ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">AType</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">δ</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[],</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">x.property</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Names</span><span class=\"o\">,</span> <span class=\"n\">Map</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n  <span class=\"bp\">|</span> <span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">xs</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">if</span> <span class=\"n\">he</span> <span class=\"o\">:</span> <span class=\"n\">h.1</span> <span class=\"bp\">=</span> <span class=\"n\">x.1</span> <span class=\"k\">then</span>\n      <span class=\"n\">h.2</span>\n    <span class=\"k\">else</span>\n      <span class=\"n\">ATypeOf</span> <span class=\"o\">(</span><span class=\"n\">δ</span> <span class=\"o\">:=</span> <span class=\"n\">xs</span><span class=\"o\">)</span> <span class=\"o\">⟨</span><span class=\"n\">x.1</span><span class=\"o\">,</span> <span class=\"kd\">by</span>\n        <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">x.property</span>\n        <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Names</span><span class=\"o\">,</span> <span class=\"n\">Ne.symm</span> <span class=\"n\">he</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n        <span class=\"n\">exact</span> <span class=\"n\">this</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 390345185,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1694448526
    },
    {
        "content": "<p>Thanks. AType is just some other structure. It is irrelevant so I did not add it in. I have updated the code to include one.</p>",
        "id": 390346213,
        "sender_full_name": "Schrodinger ZHU Yifan",
        "timestamp": 1694448857
    }
]