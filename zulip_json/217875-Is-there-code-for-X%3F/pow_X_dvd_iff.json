[
    {
        "content": "<p>I was unable to find the (actually quite easy to prove)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">pow_X_dvd_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">]}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">f</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"n\">d</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f.coeff</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>although there is the </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">X_dvd_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">]}</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">∣</span> <span class=\"n\">f</span> <span class=\"bp\">↔</span> <span class=\"n\">f.coeff</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>Am I missing it?</p>",
        "id": 338844295,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1677678412
    },
    {
        "content": "<p>I don't recall ever seeing anything like that and I can't find it either. So I'd say go ahead and add this! (Nitpick: I'd call it <code>polynomial.X_pow_dvd_iff</code>, putting the infix operator after its left argument).</p>",
        "id": 338845027,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1677678566
    },
    {
        "content": "<p>OK, I'll open the PR straight away.</p>",
        "id": 338845254,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1677678606
    },
    {
        "content": "<p>Done, <a href=\"https://github.com/leanprover-community/mathlib/pull/18528\">#18528</a></p>",
        "id": 338849014,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1677679500
    },
    {
        "content": "<p>Can you add the multivariate one too?</p>",
        "id": 338849390,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1677679575
    },
    {
        "content": "<p>Since the previous PR has been delegated, should I accept that one first and open a new one with the <code>mv</code> stuff? Especially because even the basic <code>var_dvd_iff</code> (where the power of a variable is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>) seems missing.</p>",
        "id": 338854093,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1677680528
    },
    {
        "content": "<p>You can go either way: you can re-request a review or merge this and then start a new <code>mv_polynomial</code> PR (which I'm happy to review).</p>",
        "id": 338854472,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1677680604
    },
    {
        "content": "<p>OK, I will then go for the second option, since I am also working on another project where I only need the single-variable lemma, and at least that one can advance. I wait for <code>CI</code>to finish, at any rate.</p>",
        "id": 338854868,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1677680682
    }
]