[
    {
        "content": "<p>For <code>Group G</code>, the derived subgroup (or commutator subgroup) is the <code>Subgroup G</code> generated by all commutators of elements of <code>G</code>. It can be obtained either by <br>\n<code>_root_.commutator G</code>,  <code>Subgroup.commutator (G := (‚ä§ : Subgroup G))</code>,  or even <code>derivedSeries G 1</code>.<br>\nThe third way rewrites (using <code>simp</code>) to the first one, but the first one is not easy to use under <code>open Subgroup</code>.</p>\n<p>Could <code>Subgroup.commutator</code> be <code>protect</code>ed? <br>\nOr could <code>_root_.commutator</code> be renamed as <code>Commutator</code>?</p>",
        "id": 385886722,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1692356434
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=commutator#doc\">docs#commutator</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Subgroup.commutator#doc\">docs#Subgroup.commutator</a></p>",
        "id": 385888380,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692356943
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Subgroup.commutator#doc\">docs#Subgroup.commutator</a> should be renamed to <code>Subgroup.instBracket</code> in my opinion</p>",
        "id": 385888449,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692356976
    },
    {
        "content": "<p>(note it was automatically <code>protected</code> in Lean 3 due to being an instance)</p>",
        "id": 385888594,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692357007
    }
]