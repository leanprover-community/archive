[
    {
        "content": "<p>This should be in mathlib, but I can't find it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">m</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>or equivalently,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">bar</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ZMod.cast</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ZMod</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">Nat.cast</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ZMod</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Nat.cast</span>\n</code></pre></div>\n<p>Any ideas where it is hiding?</p>",
        "id": 387910042,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1693323873
    },
    {
        "content": "<p><code>ZMod.cast_nat_cast h</code></p>",
        "id": 387911130,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1693324231
    },
    {
        "content": "<p>Found it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">ZMod.cast_nat_cast</span> <span class=\"n\">h</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>(<code>by apply?</code> returned, among others, <code>refine ZMod.cast_nat_cast ?h a</code>, which, however, does not work when pasted in. Replacing <code>?h</code> by <code>h</code> does it. Why does <code>apply?</code> not do that, too?)</p>",
        "id": 387911241,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1693324277
    },
    {
        "content": "<p>BTW, <code>ZMod.cast_nat_cast h</code> does not work as a proof of <code>bar</code>.</p>",
        "id": 387911489,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1693324357
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">bar</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ZMod.cast</span> <span class=\"o\">:</span> <span class=\"n\">ZMod</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ZMod</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">Nat.cast</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ZMod</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Nat.cast</span> <span class=\"o\">:=</span>\n  <span class=\"n\">funext</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">ZMod.cast_nat_cast</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 387911672,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1693324426
    }
]