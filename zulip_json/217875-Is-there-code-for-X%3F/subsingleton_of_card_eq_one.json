[
    {
        "content": "<p>Do we not have this? I'm surprised. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">subsingleton_of_card_eq_one</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Subsingleton</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Fintype.card_eq_one_iff_nonempty_unique</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span>\n  <span class=\"n\">infer_instance</span>\n</code></pre></div>\n<p>Should I dump it in <code>Data.Fintype.Card</code>?</p>",
        "id": 380127912,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690749077
    },
    {
        "content": "<p><del>The conclusion could be the stronger <code>Unique X</code>, right?</del> On second thought, I'm not sure I prefer this.</p>",
        "id": 380131072,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1690750256
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Fintype.card_le_one_iff_subsingleton#doc\">docs#Fintype.card_le_one_iff_subsingleton</a> is pretty much that</p>",
        "id": 380131605,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1690750465
    },
    {
        "content": "<p>Untested: <code>Fintype.card_le_one_iff_subsingleton.mp h.le</code></p>",
        "id": 380131678,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1690750502
    },
    {
        "content": "<p>Yeah that'll do fine. Thanks!</p>",
        "id": 380133256,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690751029
    },
    {
        "content": "<p>The thing about <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Unique#doc\">docs#Unique</a> is that it's data so I usually try to avoid it.</p>",
        "id": 380133354,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690751061
    },
    {
        "content": "<p>turns out it's <code>h.ge</code> BTW :-) Thanks both!</p>",
        "id": 380133697,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690751217
    },
    {
        "content": "<p>Why is it <code>h.ge</code>?</p>",
        "id": 380441255,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1690826027
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/subsingleton_of_card_eq_one/near/380441255\">said</a>:</p>\n<blockquote>\n<p>Why is it <code>h.ge</code>?</p>\n</blockquote>\n<p>Because it's <code>h.symm.le = h.ge</code> rather than <code>h.le</code></p>",
        "id": 380448977,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1690827611
    },
    {
        "content": "<p>If <code>h : card X = 1</code>, then <code>h.le</code> is <code>card X â‰¤ 1</code>, see <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Eq.le#doc\">docs#Eq.le</a></p>",
        "id": 380449984,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1690827827
    },
    {
        "content": "<p>And that's exactly what we need. Possibly, <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> had <code>h : 1 = card X</code>, not <code>h : card X = 1</code>.</p>",
        "id": 380450164,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1690827860
    },
    {
        "content": "<p>Yes you're absolutely right, sorry for the noise! I actually have 1 = card X in my application.</p>",
        "id": 380500336,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690839587
    }
]