[
    {
        "content": "<p>Do we have this somewhere? Is there an easy proof to it?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.NumberTheory.NumberField.Norm</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">NumberField</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NumberField</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ùìû</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">Algebra.norm</span> <span class=\"n\">‚Ñ§</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">Algebra.norm</span> <span class=\"n\">‚Ñö</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 393408930,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1695798382
    },
    {
        "content": "<p>Not sure it is literally this, but <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=RingOfIntegers.norm_apply_coe#doc\">docs#RingOfIntegers.norm_apply_coe</a> should be very close.</p>",
        "id": 393416590,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1695801129
    },
    {
        "content": "<p>In any case <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=RingOfIntegers.norm#doc\">docs#RingOfIntegers.norm</a> is there exactly to consider the norm of an element of the ring of integers</p>",
        "id": 393416679,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1695801175
    },
    {
        "content": "<p><code>RingOfIntegers.norm</code>is defined by restricting <code>Algebra.norm K</code> onto <code>ùìû K</code>, but I don't think we know that it is equal to <code>Algebra.norm (ùìû K)</code>.</p>",
        "id": 393424080,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1695803542
    },
    {
        "content": "<p>I think what you want is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Algebra.norm_localization#doc\">docs#Algebra.norm_localization</a></p>",
        "id": 393424880,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1695803816
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 393425497,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1695804012
    },
    {
        "content": "<p>Ah yes, sorry. I am always a little bit worried about <code>Algebra.norm K</code>, since in the relative case it is not the right notion.</p>",
        "id": 393425836,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1695804138
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"488648\">Xavier Roblot</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Algebra.2Enorm.20.E2.84.A4/near/393424880\">said</a>:</p>\n<blockquote>\n<p>I think what you want is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Algebra.norm_localization#doc\">docs#Algebra.norm_localization</a></p>\n</blockquote>\n<p>Thanks! Works like a charm.</p>",
        "id": 393457139,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1695811635
    }
]