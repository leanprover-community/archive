[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- returns a unique element in `s` -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">getUniqueElement</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.card</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I'm stuck with <code>exists</code> and <code>Sort</code>. Will there be a code for this?</p>",
        "id": 340583942,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1678362385
    },
    {
        "content": "<p>Do you want something computable? Or are you happy using classical axioms? What application do you have in mind?</p>",
        "id": 340588037,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1678363480
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Fintype.choose#doc\">docs4#Fintype.choose</a></p>",
        "id": 340588138,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1678363522
    },
    {
        "content": "<p>There's also <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.choose#doc\">docs4#Finset.choose</a></p>",
        "id": 340588390,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1678363596
    },
    {
        "content": "<p>and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.singleton_iff_unique_mem#doc\">docs4#Finset.singleton_iff_unique_mem</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.card_eq_one#doc\">docs4#Finset.card_eq_one</a></p>",
        "id": 340588565,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1678363656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/returning.20a.20unique.20element.20given.20a.20.60Finset.60.20of.20card.20.3D.201/near/340588390\">said</a>:</p>\n<blockquote>\n<p>There's also <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.choose#doc\">docs4#Finset.choose</a></p>\n</blockquote>\n<p>this is probably the best option, as <code>true</code> is a decidable pred</p>",
        "id": 340588656,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1678363685
    },
    {
        "content": "<p>In my case, <code>noncomputable</code> is not an option. Will that be required if I want the definition?</p>",
        "id": 340588806,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1678363742
    },
    {
        "content": "<p>these are computable as far as I know</p>",
        "id": 340588852,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1678363763
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/returning.20a.20unique.20element.20given.20a.20.60Finset.60.20of.20card.20.3D.201/near/340588656\">말함</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/returning.20a.20unique.20element.20given.20a.20.60Finset.60.20of.20card.20.3D.201/near/340588390\">said</a>:</p>\n<blockquote>\n<p>There's also <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.choose#doc\">docs4#Finset.choose</a></p>\n</blockquote>\n<p>this is probably the best option, as <code>true</code> is a decidable pred</p>\n</blockquote>\n<p>This seems like a way!<br>\nThanks for sharing your knowledge!</p>",
        "id": 340588919,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1678363791
    },
    {
        "content": "<p>Just letting you know how the proof worked:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">getUniqueElement</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.card</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Finset.choose</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">True</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">Finset.card_eq_one.mp</span> <span class=\"n\">hs</span><span class=\"bp\">;</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp_all</span><span class=\"o\">⟩)</span>\n</code></pre></div>",
        "id": 340590746,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1678364439
    }
]