[
    {
        "content": "<p>Anyone has had success with detecting plagiarism in Lean assignments?<br>\nI was thinking that a great aid would be to have Lean output the proof terms constructed by the students using tactic mode, in a way that the output would ignore a student's choice of names.  Any idea how I can get Lean to output this?  (The objective is to detect solutions that are identical up to α-renaming.)</p>",
        "id": 307251703,
        "sender_full_name": "Thanos Tsouanas",
        "timestamp": 1667282369
    },
    {
        "content": "<p>This is a really interesting question, I also am curious if and how anyone has managed this before^</p>",
        "id": 309075241,
        "sender_full_name": "Sarah Smith",
        "timestamp": 1668112872
    },
    {
        "content": "<p>Name-irrelevant content addressing can solve this problem. We are tackling it here: <a href=\"https://github.com/yatima-inc/yatima-lang/wiki\">https://github.com/yatima-inc/yatima-lang/wiki</a></p>",
        "id": 315195001,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1670759336
    },
    {
        "content": "<p>In fact, that part of the stack is already solved. To detect plagiarism between two proofs, one could compare the anon hashes of the respective proof terms.</p>",
        "id": 315195195,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1670759446
    },
    {
        "content": "<p>Is this method defeated by a strategically placed <code>id</code>?</p>",
        "id": 315198327,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1670761095
    },
    {
        "content": "<p>Yes, exact matches between hashes might be too rigid. Maybe a fuzzy match between the respective anon IPLD nodes that we create might work better</p>",
        "id": 315198847,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1670761417
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256311\">Jannis Limperg</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/detecting.20plagiarism/near/315198327\">said</a>:</p>\n<blockquote>\n<p>Is this method defeated by a strategically placed <code>id</code>?</p>\n</blockquote>\n<p>All methods are defeated if the students know what methods you use. That said, some methods are more robust than others (detecting more plagiarism when the students don't know about it).</p>",
        "id": 315369479,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1670852473
    },
    {
        "content": "<p>Question: How do you identify plagiarism if there are maybe not more than one or two straightforward ways to do a proof? There may be other, more terse and neat ways of proving stuff, but at least my first instinct is usually to find the obvious proof, and use typical identifier names (for example <code>n</code> is my induction variable for any induction involving Naturals).</p>",
        "id": 326429887,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1675794579
    },
    {
        "content": "<p>You cannot identify plagiarism in very easy assignments. I don't think it is a Lean problem tho.</p>",
        "id": 337907580,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677281739
    }
]