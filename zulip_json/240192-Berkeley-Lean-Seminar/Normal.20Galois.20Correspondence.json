[
    {
        "content": "<p>In trying to prove that normal extensions correspond to normal subgroups, I need to show that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">L/F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> is a Galois extension and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> is an intermediate field, then the fixing subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> is normal iff <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Gal</mtext><mo stretchy=\"false\">(</mo><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Gal}(L/F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Gal</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span> stabilizes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>. Assuming the fixing subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> is normal, how I would think to do this is to take an element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">x \\in K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>∈</mo><mtext>Gal</mtext><mo stretchy=\"false\">(</mo><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g \\in \\text{Gal}(L/F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Gal</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span>, and show that for any <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>∈</mo><mtext>Gal</mtext><mo stretchy=\"false\">(</mo><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>K</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h \\in \\text{Gal}(L/K)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Gal</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span></span>  we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>⋅</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>g</mi><mo>⋅</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">h \\cdot (g \\cdot x) = g \\cdot x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>, hence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>⋅</mo><mi>x</mi><mo>∈</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">g \\cdot x \\in K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>. However, I'm having trouble using this characterization of fixed fields. My scratchwork attempt so far is this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">field_theory.galois</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">normal_iff_fixing</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">F</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_galois</span> <span class=\"n\">F</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">finite_dimensional</span> <span class=\"n\">F</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">intermediate_field</span> <span class=\"n\">F</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">K.fixing_subgroup.normal</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">L</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">L</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">K</span> <span class=\"bp\">→</span> <span class=\"n\">g</span> <span class=\"bp\">•</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">K</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">intros</span> <span class=\"n\">hk_normal</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"n\">hxk</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hk_fixing</span> <span class=\"o\">:=</span> <span class=\"n\">is_galois.fixed_field_fixing_subgroup</span> <span class=\"n\">K</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">hk_fixing</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">intermediate_field.fixed_field</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">fixed_points.intermediate_field</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span>\n\n  <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>What I want is to use the fact that an element is in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> if and only if an arbitrary element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Gal</mtext><mo stretchy=\"false\">(</mo><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>K</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Gal}(L/K)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Gal</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span></span> fixes it. I'm having trouble figuring out which rewrites will get me to this condition.</p>",
        "id": 350598142,
        "sender_full_name": "Sean Gonzales",
        "timestamp": 1681759039
    },
    {
        "content": "<p>Can you add <code>import</code>s and any <code>open</code>s to make your code a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> ? (just edit your message, don't post  a new one)</p>",
        "id": 350602747,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681760804
    },
    {
        "content": "<p>There's a lemma in fixing_subgroup.lean which is essentially backwards of what I want: it says \"an element is in a fixing subgroup of a set iff it fixes every element of the set\". Rather, I want \"an element is in a set iff every element of its fixing subgroup fixes it\". Does this lemma exist? I'm having trouble locating it.</p>",
        "id": 350603361,
        "sender_full_name": "Sean Gonzales",
        "timestamp": 1681761033
    },
    {
        "content": "<p>Here's a direct proof, if this helps:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">field_theory.galois</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">normal_iff_fixing</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">F</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_galois</span> <span class=\"n\">F</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">finite_dimensional</span> <span class=\"n\">F</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">intermediate_field</span> <span class=\"n\">F</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">K.fixing_subgroup.normal</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">L</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">L</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">K</span> <span class=\"bp\">→</span> <span class=\"n\">g</span> <span class=\"bp\">•</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">K</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">intros</span> <span class=\"n\">hk_normal</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"n\">hxk</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hk_fixing</span> <span class=\"o\">:=</span> <span class=\"n\">is_galois.fixed_field_fixing_subgroup</span> <span class=\"n\">K</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">hk_fixing</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">intermediate_field.fixed_field</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">fixed_points.intermediate_field</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- goal contains a structure explicitly made with `{ }` constructor</span>\n    <span class=\"n\">dsimp</span><span class=\"o\">,</span> <span class=\"c1\">-- now it doesn't</span>\n    <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">φ</span><span class=\"o\">,</span> <span class=\"n\">hφ</span><span class=\"o\">⟩,</span>\n    <span class=\"c1\">-- tidy up goal</span>\n    <span class=\"n\">change</span> <span class=\"n\">φ</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- move g on RHS to LHS</span>\n    <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"o\">(</span><span class=\"n\">φ</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"c1\">-- inelegant proof</span>\n      <span class=\"n\">apply_fun</span> <span class=\"n\">g</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">alg_equiv.mul_apply</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"n\">simpa</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n    <span class=\"c1\">-- close approximation to the goal</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">hk_normal.conj_mem</span> <span class=\"n\">φ</span> <span class=\"n\">hφ</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hxk</span><span class=\"o\">⟩,</span>\n    <span class=\"c1\">-- simplifier can reconcile `this` with the goal</span>\n    <span class=\"n\">simpa</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n\n  <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 350607644,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681762647
    },
    {
        "content": "<p>Ah, <code>dsimp</code> is what I needed. Thanks!</p>",
        "id": 350608146,
        "sender_full_name": "Sean Gonzales",
        "timestamp": 1681762831
    },
    {
        "content": "<p>I only put it there for psychological purposes. You can delete it and the proof still works. <code>dsimp</code> does definitional tidying up, but the <code>change</code> tactic works up to definitional equality too, so you don't need the <code>dsimp</code> at all.</p>",
        "id": 350608638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681763022
    },
    {
        "content": "<p>Right, I mean to say <code>dsimp</code> clarified the explicit construction to me.</p>",
        "id": 350608987,
        "sender_full_name": "Sean Gonzales",
        "timestamp": 1681763158
    }
]