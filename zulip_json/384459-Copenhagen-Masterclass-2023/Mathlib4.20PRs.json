[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4505\">!4#4505</a></p>",
        "id": 362238856,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685464454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"519559\">@Dagur √Åsgeirsson</span> <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span></p>",
        "id": 362238908,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685464470
    },
    {
        "content": "<p><span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span> and <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> are nice, I guess, but how about a review? :-)</p>",
        "id": 362323734,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1685493793
    },
    {
        "content": "<p>I have started one.</p>",
        "id": 362377174,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1685520538
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> I'll take a look soon.</p>\n<p>Anyway, here's a bit of additional motivation ;) <a href=\"https://github.com/leanprover-community/mathlib4/pull/4527\">!4#4527</a> (this last PR still needs some work, but the main constructions are there)</p>",
        "id": 362477848,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685543927
    },
    {
        "content": "<p>I'll have a look at that one as well.</p>",
        "id": 362478005,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1685543958
    },
    {
        "content": "<p>Thanks, but I'm still working on this one. I need to move some things to the right place.</p>",
        "id": 362478123,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685543987
    },
    {
        "content": "<p>Oh, I see. Then I will <em>wait</em> and then have a look <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <span aria-label=\"hourglass\" class=\"emoji emoji-23f3\" role=\"img\" title=\"hourglass\">:hourglass:</span></p>",
        "id": 362478449,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1685544043
    },
    {
        "content": "<p>Maybe a quick summary of this last PR: It has two key results:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">effectiveEpiFamily_tfae</span>\n    <span class=\"o\">{</span><span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">CompHaus.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}}</span>\n    <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">CompHaus.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">})</span> <span class=\"o\">(</span><span class=\"n\">œÄ</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"bp\">‚Üí</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">a</span> <span class=\"bp\">‚ü∂</span> <span class=\"n\">B</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"o\">[</span> <span class=\"n\">EffectiveEpiFamily</span> <span class=\"n\">X</span> <span class=\"n\">œÄ</span>\n    <span class=\"o\">,</span> <span class=\"n\">Epi</span> <span class=\"o\">(</span><span class=\"n\">Sigma.desc</span> <span class=\"n\">œÄ</span><span class=\"o\">)</span>\n    <span class=\"o\">,</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"bp\">‚àÉ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"n\">œÄ</span> <span class=\"n\">a</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">b</span>\n    <span class=\"o\">]</span><span class=\"bp\">.</span><span class=\"n\">TFAE</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Precoherent</span> <span class=\"n\">CompHaus.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>And, of course, as a result:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">Condensed</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Condensed.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Category</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Sheaf</span> <span class=\"o\">(</span><span class=\"n\">CoherentTopology</span> <span class=\"n\">CompHaus.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">})</span> <span class=\"n\">C</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Category</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Category</span> <span class=\"o\">(</span><span class=\"n\">Condensed.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">show</span> <span class=\"n\">Category</span> <span class=\"o\">(</span><span class=\"n\">Sheaf</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"k\">from</span> <span class=\"n\">inferInstance</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">Condensed</span>\n</code></pre></div>",
        "id": 362479374,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685544238
    },
    {
        "content": "<p>At some point someone should write down a definition of coherent categories, and show that <code>CompHaus</code> is actually coherent (and that coherent implies precoherent)</p>",
        "id": 362479741,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685544317
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4527\">!4#4527</a> should be ready for review (<span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> <span class=\"user-mention\" data-user-id=\"519559\">@Dagur √Åsgeirsson</span> <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> )</p>",
        "id": 362838192,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685642285
    },
    {
        "content": "<p>I would have pinged you too Filippo, but you had already said you would review it ;)</p>",
        "id": 362838768,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685642413
    },
    {
        "content": "<p>Oh, I should add some refs in the condensed file... let me do that now.</p>",
        "id": 362839749,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685642640
    },
    {
        "content": "<p>refs added!</p>",
        "id": 362843396,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1685643415
    },
    {
        "content": "<p>I‚Äôll take a look in the morning! Don‚Äôt know if I‚Äôm a qualified reviewer though üòÖ</p>",
        "id": 362904250,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1685663693
    },
    {
        "content": "<p>Next one is up: <a href=\"https://github.com/leanprover-community/mathlib4/pull/4909\">!4#4909</a></p>",
        "id": 364878296,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686321630
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/5761\">#5761</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/5762\">#5762</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/5763\">#5763</a></p>",
        "id": 373257605,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1688745212
    },
    {
        "content": "<p>Once David's PR is done we can add more to the <code>ExtrDisc</code>¬†folder and start working on getting the explicit descriptions of condensed sets into mathlib</p>",
        "id": 373257968,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1688745286
    },
    {
        "content": "<p>Thanks! If you are in the mood of opening PR we have the comparison between product/coproduct in the opposite category that can go to mathlib</p>",
        "id": 373258903,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688745439
    },
    {
        "content": "<p>But I can do it during the weekend</p>",
        "id": 373259106,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688745472
    },
    {
        "content": "<p>I left a few comments.</p>",
        "id": 373268165,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1688747037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> I‚Äôm away over the weekend so you can do it üòÖ also feel free to address Adam‚Äôs comments. But if you don‚Äôt have time I‚Äôll do it on Monday</p>",
        "id": 373298288,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1688754445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/384459-Copenhagen-Masterclass-2023/topic/Mathlib4.20PRs/near/373268165\">said</a>:</p>\n<blockquote>\n<p>I left a few comments.</p>\n</blockquote>\n<p>Thanks for the suggestions. I've pushed revised versions of all three PR's.</p>",
        "id": 373790641,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1688943378
    },
    {
        "content": "<p>I added more to the <code>ExtrDisc/Basic</code> file, depending on Gleason: <a href=\"https://github.com/leanprover-community/mathlib4/pull/5808\">#5808</a></p>",
        "id": 374209557,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1689070759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span> <span class=\"user-mention\" data-user-id=\"456608\">@Boris Kj√¶r</span>  I've opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/5858\">#5858</a>, planning to do the same for <code>ExtrDisc</code></p>",
        "id": 374872118,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1689243108
    },
    {
        "content": "<p>It's <code>Profinite/Epi</code>¬†and <code>Profinite/Coherent</code>¬†from the Copenhagen repo put together into one file <code>Mathlib/Topology/Category/Profinite/EffectiveEpi</code></p>",
        "id": 374872988,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1689243271
    },
    {
        "content": "<p>Thx! I can fix all the stylistic things on that PR tonight or tomorrow. and also add Sina &amp; Nima as coauthors</p>",
        "id": 374873861,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1689243428
    },
    {
        "content": "<p>Ok great! I just looked at the commit history when I wrote the list of coauthors</p>",
        "id": 374874549,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1689243517
    },
    {
        "content": "<p>I've already fixed the style errors the linter gave, if that's what you're talking about</p>",
        "id": 374875963,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1689243780
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/5861\">#5861</a></p>",
        "id": 374899927,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1689248712
    },
    {
        "content": "<p>I pushed the the cleanups I was thinking about to both PRs. Mostly whitespaces, docstrings and such</p>",
        "id": 374948494,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1689257545
    },
    {
        "content": "<p>All the sorry-free files in the Copenhagen repo have been PR-ed to mathlib. All the content is in two PR's: <a href=\"https://github.com/leanprover-community/mathlib4/pull/6731\">#6731</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/6810\">#6810</a>, which depend on some smaller PR's. Reviews are very welcome! In particular, those that are in need of review right now are: <a href=\"https://github.com/leanprover-community/mathlib4/pull/6750\">#6750</a>,  <a href=\"https://github.com/leanprover-community/mathlib4/pull/6774\">#6774</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/6779\">#6779</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/6810\">#6810</a>.</p>",
        "id": 387642966,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1693219878
    },
    {
        "content": "<p>I should say that the code in <a href=\"https://github.com/leanprover-community/mathlib4/pull/6731\">#6731</a> still needs to be cleaned up a lot, but the rest of the file depends on <a href=\"https://github.com/leanprover-community/mathlib4/pull/6750\">#6750</a> which I would like others' opinion on before continuing</p>",
        "id": 387643661,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1693220197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"519559\">@Dagur Asgeirsson</span>  I am still on vacation without a computer, I will have a look on Friday, but thanks a lot for all the work!</p>",
        "id": 387833531,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1693298276
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6876\">#6876</a> now makes a lot of the original code triplication redundant. It defines regular and extensive categories, the regular and extensive topologies and proves that their union generates the coherent topology for precoherent, regular and extensive categories.</p>",
        "id": 388129309,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1693406985
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6810\">#6810</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/6877\">#6877</a>, and <a href=\"https://github.com/leanprover-community/mathlib4/pull/6919\">#6919</a> are ready for review, and I think <a href=\"https://github.com/leanprover-community/mathlib4/pull/7421\">#7421</a> can be merged</p>",
        "id": 395645274,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1696840071
    },
    {
        "content": "<p>I merged <a href=\"https://github.com/leanprover-community/mathlib4/pull/7421\">#7421</a> and left a comment on <a href=\"https://github.com/leanprover-community/mathlib4/pull/6877\">#6877</a>. Maybe others can chime in on the other 2 PRs?</p>",
        "id": 395674498,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1696850070
    },
    {
        "content": "<p>I need to run to my next meeting.</p>",
        "id": 395674508,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1696850077
    },
    {
        "content": "<p>The explicit description (<a href=\"https://github.com/leanprover-community/mathlib4/pull/6731\">#6731</a>) is now finally ready for review!</p>",
        "id": 403255350,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1700518992
    },
    {
        "content": "<p>Left a comment about namespaces</p>",
        "id": 403302384,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700542304
    }
]