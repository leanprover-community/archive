[
    {
        "content": "<p>(Specifically Lean 4 in VSCode, but I had the same issue with Lean 3 in the past)<br>\nLinarith is the most common offender, with the proof/content of the hypothesis it outputs often being more than half the size of my vertical monitor, thus making it hard to read the goal or other hypotheses.<br>\nI feel like I remember there being some way to hide these in Lean 3?, but I can't remember how and I have failed at finding it by searching through past Zulip messages.</p>",
        "id": 351967977,
        "sender_full_name": "MinusGix",
        "timestamp": 1682207514
    },
    {
        "content": "<p>Can you be a bit more specific when you are seeing this output? <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> would be great as I'm not sure why these proofs would be shown at all with a standard workflow</p>",
        "id": 352023636,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1682241217
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"c1\">-- some larger theorem</span>\n  <span class=\"c1\">-- declare some subproof that is needed</span>\n  <span class=\"k\">let</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n  <span class=\"c1\">-- ... large j in proof state</span>\n  <span class=\"c1\">-- use `j` somewhere</span>\n</code></pre></div>\n<p>For example. <br>\nOf course the above could be solved by <code>decide</code>, but linarith is needed for more intricate hypotheses.<br>\nI at times make sub-proofs to prove some larger theorem, since it is easier to specify the types and read the logic later. If they are used more than once then I can move them out into their own <code>theorem</code> declarations.<br>\n<a href=\"/user_uploads/3121/UITkOJGDKxM3cesJuAx1Xbew/image.png\">image.png</a><br>\n(The output for this isn't as large as something more complex, but it is still overly large)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/UITkOJGDKxM3cesJuAx1Xbew/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/UITkOJGDKxM3cesJuAx1Xbew/image.png\"></a></div>",
        "id": 352162628,
        "sender_full_name": "MinusGix",
        "timestamp": 1682312835
    },
    {
        "content": "<p>Use <code>have</code> rather than <code>let</code> for propositions.</p>",
        "id": 352167952,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682314924
    },
    {
        "content": "<p><code>let</code> is for data, not proofs.</p>",
        "id": 352185896,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1682321228
    },
    {
        "content": "<p>(And if you do use <code>let</code>, the filters menu in the infoview already has an option that allows you to hide their values.)</p>",
        "id": 352301503,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1682348021
    }
]