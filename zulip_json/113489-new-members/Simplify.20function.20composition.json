[
    {
        "content": "<p>Hi</p>\n<p>I am trying to prove that <code>id ∘ f = f</code> using tactic mode and mimicking the pen and paper mathematical proof. And I do not understand why the following does not work : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">id</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">funext</span>    <span class=\"c1\">-- ⊢ ∀ (x : α), (id ∘ f) x = f x</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span>         <span class=\"c1\">-- x : α</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">id</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>I would have expected that the goal should be at this point <code>⊢ f x = f x</code> but instead Lean tells me <em>\"failed to rewrite using equation theorems for 'id'\"</em> and I do not understand why. </p>\n<p>Can you please explain to me what is going on and how to fix it ?</p>\n<p>PS: I am aware that we can do much shorter like <code>example (f : α → β) : id ∘ f = f := by rfl</code>.</p>",
        "id": 404135892,
        "sender_full_name": "Valentin Vinoles",
        "timestamp": 1700936294
    },
    {
        "content": "<p>That only works if you have an applied <code>id x</code>rather than just <code>id</code></p>",
        "id": 404136228,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1700936513
    },
    {
        "content": "<p>You can <code>rw [Function.comp]</code> first</p>",
        "id": 404136308,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1700936540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> <br>\nThanks, it works perfectly !</p>",
        "id": 404136427,
        "sender_full_name": "Valentin Vinoles",
        "timestamp": 1700936626
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284512\">Valentin Vinoles</span> has marked this topic as resolved.</p>",
        "id": 404136432,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700936634
    },
    {
        "content": "<p>Hi, <span class=\"user-mention\" data-user-id=\"284512\">@Valentin Vinoles</span>!  by the way,  please don't forget to include your imports, in order to have a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>. Also, it is better not to close topics because that <em>changes the topic name</em> (!)</p>\n<p><strong>Edit</strong> I just noticed it works as provided, but some useful tactics  (like <code>simp?</code>, which I used to figure out another way) are not available in Core.</p>",
        "id": 404136559,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1700936689
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284512\">Valentin Vinoles</span> has marked this topic as unresolved.</p>",
        "id": 404137421,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700937064
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"327749\">@Pedro Sánchez Terraf</span> <br>\nHi, sorry I was not aware that we should not close topics. In this case, yes I do not have any import because it is just very basic stuff.</p>",
        "id": 404137512,
        "sender_full_name": "Valentin Vinoles",
        "timestamp": 1700937111
    },
    {
        "content": "<p>Yeah afaik there is no <em>policy</em> as in \"do not close topics\", but it seems inconvenient since closing changes the URL.</p>\n<p>By using <code>simp?</code> I came up with this alternate route:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Another set of rewrites</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">id</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">funext</span>    <span class=\"c1\">-- ⊢ ∀ (x : α), (id ∘ f) x = f x</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span>         <span class=\"c1\">-- x : α</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Function.comp_apply</span><span class=\"o\">,</span> <span class=\"n\">id_eq</span><span class=\"o\">]</span>\n</code></pre></div>\n</div></div>",
        "id": 404138382,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1700937463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/Simplify.20function.20composition/near/404136228\">said</a>:</p>\n<blockquote>\n<p>That only works if you have an applied <code>id x</code>rather than just <code>id</code></p>\n</blockquote>\n<p><code>unfold id</code> works here</p>",
        "id": 404138910,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700937670
    }
]