[
    {
        "content": "<p>This example from <a href=\"https://leanprover.github.io/functional_programming_in_lean/type-classes/indexing.html\">here</a> doesn't behave as expected:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">northernTrees</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"sloe\"</span><span class=\"o\">,</span> <span class=\"s2\">\"birch\"</span><span class=\"o\">,</span> <span class=\"s2\">\"elm\"</span><span class=\"o\">,</span> <span class=\"s2\">\"oak\"</span><span class=\"o\">]</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">northernTrees</span><span class=\"o\">[</span><span class=\"mi\">8</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"n\">northernTrees</span><span class=\"o\">[</span><span class=\"mi\">8</span><span class=\"o\">]</span> <span class=\"c1\">-- sets foo to \"8\"</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">foo</span> <span class=\"c1\">-- prints \"foo : String\"</span>\n</code></pre></div>\n<p>The <code>#eval northernTrees[8]</code> produces a warning message but it also produces a value, the string \"8\".</p>\n<p>The <code>def foo := northernTrees[8] </code> causes <code>foo</code> to be bound with a type of <code>String</code>, as shown by the <code>#check foo</code>.</p>\n<p>I expected the <code>#eval</code> to fail completely and for <code>foo</code> to remain unbound.</p>\n<p>Screenshot attached.<br>\n<a href=\"/user_uploads/3121/_qnBcDwJZf8FsLNyGeilk-Nv/Screenshot-from-2023-07-17-08-10-06.png\">Screenshot-from-2023-07-17-08-10-06.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/_qnBcDwJZf8FsLNyGeilk-Nv/Screenshot-from-2023-07-17-08-10-06.png\" title=\"Screenshot-from-2023-07-17-08-10-06.png\"><img src=\"/user_uploads/3121/_qnBcDwJZf8FsLNyGeilk-Nv/Screenshot-from-2023-07-17-08-10-06.png\"></a></div>",
        "id": 375998655,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1689595850
    },
    {
        "content": "<p>Something related was also noticed <a href=\"#narrow/stream/270676-lean4/topic/LSP.20crash\">in this post</a>.</p>",
        "id": 376054682,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1689605731
    }
]