[
    {
        "content": "<p>Hi! I'm super new to Lean4 and relatively new to dependent types. I've done a fair amount of looking around, and I'm pretty sure the answer is NO. Which is completely reasonable, but worth asking in case I'm missing a resource.<br>\nIt appears there is no support for client or server sockets, or mem map, or fork/exec beyond - spawn a child and wait for termination? <a href=\"https://github.com/leanprover/lean4/blob/78200b309f63b30e855313a15e25391efcfe6974/src/Init/System/IO.lean#L653\">https://github.com/leanprover/lean4/blob/78200b309f63b30e855313a15e25391efcfe6974/src/Init/System/IO.lean#L653</a><br>\nThese things are messy, and it's totally understandable there is no consensus or even plan for such things.</p>\n<p>Separately, but related, anything like <a href=\"https://github.com/gallais\">https://github.com/gallais</a> - agdarsec for agda<br>\n or TParsec for idris?</p>\n<p>I'm working through the \"Functional Programming in Lean\" book and sort of thrashing around looking for things I'm a bit more <br>\nfamiliar with.</p>",
        "id": 407366950,
        "sender_full_name": "Jason Foutz",
        "timestamp": 1702350218
    },
    {
        "content": "<p>IIUC this part of Lean API is very minimal, just getting the part that Lean itself needs done. More comprehensive APIs will go into <code>Std4</code> as planned in <em>3. Standard Library</em> on <a href=\"https://lean-fro.org/about/roadmap/\">Lean FRO roadmap</a>.</p>\n<blockquote>\n<p>The ambition for the Lean Standard Library is to develop a library as comprehensive as Rustâ€™s standard library, with the added value of including proofs. This library aims to be a foundational element of the Lean ecosystem, providing users with a robust, extensive collection of well-documented and proven modules and functions.</p>\n</blockquote>",
        "id": 407383810,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702356671
    },
    {
        "content": "<p>For parsers, one of the parses <a href=\"#narrow/stream/270676-lean4/topic/the.20internals.20of.20lean4.20compiler/near/407382781\">here</a> might be what you want.</p>",
        "id": 407384951,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702357243
    },
    {
        "content": "<p>These are wonderful references. Thank you so much!</p>",
        "id": 407386278,
        "sender_full_name": "Jason Foutz",
        "timestamp": 1702357844
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"673875\">Jason Foutz</span> has marked this topic as resolved.</p>",
        "id": 407386289,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702357848
    }
]