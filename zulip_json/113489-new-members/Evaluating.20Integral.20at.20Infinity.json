[
    {
        "content": "<p>Hey, I am trying to prove the exponential density integrates to 1 but am currently stuck as I can not work around the Infinity in the Interval.<br>\nSo what I want to show is the following: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.Notation</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.Density</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">rate</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ratePos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">rate</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">rate</span> <span class=\"bp\">*</span> <span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Set.Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">Real.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">rate</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"c1\">--I thought I might be able to show it by proving that the Intervals [0,n] tend to Set.Ici 0 but I am not sure how to use this information correctly.</span>\n\n<span class=\"kd\">example</span><span class=\"o\">:</span> <span class=\"n\">Filter.Tendsto</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span>  <span class=\"bp\">=&gt;</span> <span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"n\">Set.Icc</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">Real.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">rate</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)))</span> <span class=\"n\">Filter.atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"n\">a</span> <span class=\"k\">in</span> <span class=\"bp\">⋃</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">Set.Icc</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">Real.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">rate</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">))))</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>any help how to use the additional information or another direction would be helpful</p>",
        "id": 398308408,
        "sender_full_name": "Claus Clausen",
        "timestamp": 1698160081
    },
    {
        "content": "<p>You should take a look at <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/SpecialFunctions/ImproperIntegrals.html\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/SpecialFunctions/ImproperIntegrals.html</a>.</p>",
        "id": 398309571,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698160439
    }
]