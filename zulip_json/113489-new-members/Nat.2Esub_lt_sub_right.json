[
    {
        "content": "<p>I think mathlib is missing this lemma? if it's desired, I can change it to not depend on the ordered monoid lemmas (or maybe it really belongs in that setting?)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Nat.sub_lt_sub_right</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">},</span> <span class=\"n\">k</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">k</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">h2</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">h2</span>\n  <span class=\"bp\">|</span> <span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ge_iff_le</span><span class=\"o\">,</span> <span class=\"n\">Nat.zero_le</span><span class=\"o\">,</span> <span class=\"n\">tsub_eq_zero_of_le</span><span class=\"o\">,</span> <span class=\"n\">tsub_pos_iff_lt</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">]</span>\n  <span class=\"bp\">|</span> <span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">m</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">h2</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.add_sub_add_right</span><span class=\"o\">,</span> <span class=\"n\">Nat.add_sub_add_right</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.sub_lt_sub_right</span> <span class=\"o\">(</span><span class=\"n\">Nat.lt_of_succ_lt_succ</span> <span class=\"n\">h1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Nat.lt_of_succ_lt_succ</span> <span class=\"n\">h2</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 401204429,
        "sender_full_name": "Scott Kovach",
        "timestamp": 1699551101
    },
    {
        "content": "<p>Loogle for <code>⊢ ?m - ?k &lt; ?n - ?k</code> finds <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=tsub_lt_tsub_right_of_le#doc\">docs#tsub_lt_tsub_right_of_le</a>, which I believe will apply for nats.<br>\n<a href=\"https://loogle.lean-lang.org/?q=%E2%8A%A2+%3Fm+-+%3Fk+%3C+%3Fn+-+%3Fk\">https://loogle.lean-lang.org/?q=%E2%8A%A2+%3Fm+-+%3Fk+%3C+%3Fn+-+%3Fk</a></p>\n<p>I guess this isn't quite the same though!</p>",
        "id": 401205356,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1699551494
    },
    {
        "content": "<p>thanks for the reminder to try loogle! this lemma does have a stronger hypothesis, but this doesn't matter where I'm using it</p>",
        "id": 401206268,
        "sender_full_name": "Scott Kovach",
        "timestamp": 1699551858
    }
]