[
    {
        "content": "<p>This code works but it crashes the whole <code>Lean Server</code> when typechecking the second function <code>printHKO</code></p>\n<p><code>x</code> in inferred to be a <code>String</code> so I would expect to be able to replace it with <code>\"Hi\"</code>.</p>\n<p>Is it a bug or am I doing something wrong ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">iimport</span> <span class=\"n\">Mathlib.Data.Vector</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">HVect</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"o\">(</span><span class=\"n\">Vector</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">v</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>  <span class=\"n\">where</span>\n   <span class=\"bp\">|</span> <span class=\"n\">Nil</span>  <span class=\"o\">:</span> <span class=\"n\">HVect</span> <span class=\"mi\">0</span> <span class=\"o\">⟨</span> <span class=\"o\">[],</span> <span class=\"n\">simp</span> <span class=\"o\">⟩</span>\n   <span class=\"bp\">|</span> <span class=\"n\">Cons</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">HVect</span> <span class=\"n\">n</span> <span class=\"o\">⟨</span><span class=\"n\">ts</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"o\">⟩</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">HVect</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">⟨</span><span class=\"n\">t</span><span class=\"o\">::</span><span class=\"n\">ts</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">p</span><span class=\"o\">]⟩</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">printHOK</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">HVect</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">⟨</span><span class=\"n\">String</span><span class=\"o\">::</span><span class=\"n\">ts</span><span class=\"o\">,</span> <span class=\"n\">p'</span><span class=\"o\">⟩)</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n   <span class=\"k\">match</span> <span class=\"n\">v</span> <span class=\"k\">with</span>\n   <span class=\"bp\">|</span> <span class=\"n\">HVect.Cons</span> <span class=\"n\">_</span> <span class=\"n\">x</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">printHKO</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">HVect</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">⟨</span><span class=\"n\">String</span><span class=\"o\">::</span><span class=\"n\">ts</span><span class=\"o\">,</span> <span class=\"n\">p'</span><span class=\"o\">⟩)</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n   <span class=\"k\">match</span> <span class=\"n\">v</span> <span class=\"k\">with</span>\n   <span class=\"bp\">|</span> <span class=\"n\">HVect.Cons</span> <span class=\"n\">_</span> <span class=\"n\">x</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"Hi\"</span>\n</code></pre></div>",
        "id": 402632155,
        "sender_full_name": "Nicolas Rolland",
        "timestamp": 1700206997
    },
    {
        "content": "<p>no, server crashes are almost always bugs</p>",
        "id": 402633150,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1700207469
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"257803\">Nicolas Rolland</span> has marked this topic as resolved.</p>",
        "id": 402633469,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700207584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"257803\">Nicolas Rolland</span> has marked this topic as unresolved.</p>",
        "id": 402633565,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700207626
    },
    {
        "content": "<p>this seems like a rather severe issue, it is a SIGSEGV which normally shouldn't happen even if there was a bug in the elaborator</p>",
        "id": 402633838,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1700207754
    },
    {
        "content": "<p>I was using 4.3 rc1, testing on other version. I will open a case on github if I can reproduce on head lean+mathlib</p>",
        "id": 402634043,
        "sender_full_name": "Nicolas Rolland",
        "timestamp": 1700207853
    },
    {
        "content": "<p>it reproduces on 4.3.0-rc2 released today</p>",
        "id": 402636429,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1700208661
    },
    {
        "content": "<p>it seems that the compiler had difficulty determining the arity of a constant so it threw an error, but it messed up the error payload and it crashes while trying to print the error</p>",
        "id": 402637674,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1700209188
    },
    {
        "content": "<p>opened <a href=\"https://github.com/leanprover/lean4/issues/2901\">issue on github</a></p>",
        "id": 402658698,
        "sender_full_name": "Nicolas Rolland",
        "timestamp": 1700214957
    }
]