[
    {
        "content": "<p>How do I nest a structure? For example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">PeriodicTable</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">structure</span> <span class=\"n\">hydrogen</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">Symbol</span> <span class=\"o\">:=</span> <span class=\"s2\">\"H\"</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">AtomicNumber</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">AveAtomicWeight</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">00784</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">PeriodicTable.hydrogen</span>\n</code></pre></div>\n<p>I want to make hydrogen an  'element' of  PeriodicTable, but am unsure of how to do so? Please help.</p>",
        "id": 397391021,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1697667920
    },
    {
        "content": "<p>I think you might have misunderstood what the <code>structure</code> keyword does. Even the folllowing isn't what you want:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">hydrogen</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">Symbol</span> <span class=\"o\">:=</span> <span class=\"s2\">\"H\"</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">AtomicNumber</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">AveAtomicWeight</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">00784</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>because then I can write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">yesIAmHydrogen</span> <span class=\"o\">:</span> <span class=\"n\">hydrogen</span> <span class=\"n\">where</span>\n  <span class=\"n\">Symbol</span> <span class=\"o\">:=</span> <span class=\"s2\">\"U\"</span>\n  <span class=\"n\">AtomicNumber</span> <span class=\"o\">:=</span> <span class=\"mi\">92</span>\n  <span class=\"n\">AveAtomicWeight</span> <span class=\"o\">:=</span>  <span class=\"mi\">238</span><span class=\"bp\">.</span><span class=\"mi\">02891</span>\n</code></pre></div>",
        "id": 397391261,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697668092
    },
    {
        "content": "<p>Interesting, is there a resource to help me understand Lean 4 structures better?</p>",
        "id": 397391731,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1697668386
    },
    {
        "content": "<p>And, does there exist an alternative object in lean 4 to help me organize data like I show at the top?</p>",
        "id": 397391834,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1697668453
    },
    {
        "content": "<p>The suggestion is biased given the presenter, but you could watch the structures and classes talk from LFTCM 2023, <a href=\"https://lftcm2023.github.io/tutorial/index.html\">https://lftcm2023.github.io/tutorial/index.html</a>. <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">#mil</a> also has a chapter on structures and classes.</p>",
        "id": 397392252,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697668786
    },
    {
        "content": "<p>Haha I see. Thank you!</p>",
        "id": 397392694,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1697669098
    },
    {
        "content": "<p>Since bias is allowed, let me point out that <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">#mil</a> has two chapters about this.</p>",
        "id": 397392937,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697669237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"628490\">Colin Jones ⚛️</span> has marked this topic as resolved.</p>",
        "id": 397407848,
        "sender_full_name": "Notification Bot",
        "timestamp": 1697679807
    }
]