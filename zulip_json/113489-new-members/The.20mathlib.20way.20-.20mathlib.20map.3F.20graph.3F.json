[
    {
        "content": "<p>KIa ora :) </p>\n<p>Yesterday I read something to the effect of:</p>\n<p>If one wants to focus on formalising a particular topic, then picking up a textbook on that topic and formalising it is much faster than the far more general approach mathlib is taking - it's not the <strong>\"mathlib way\"</strong></p>\n<p>Is the \"mathlib way\" - plan of attack - written/described any where? </p>\n<p>Also, is there a visualisation of the mathlib directory structure and the import links? I am dreaming of something as clean as the <a href=\"https://www.pathofexile.com/passive-skill-tree\">Path of Exile skill tree</a> but that might not make sense in this context.</p>\n<p>I realise I can browse my way through the mathlib library to figure this all out, but you all have written a lot <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> <span aria-label=\"construction\" class=\"emoji emoji-1f3d7\" role=\"img\" title=\"construction\">:construction:</span> which is amazing!</p>\n<p>Something I am particularly interested in is the interface between LEAN core and mathlib. What are the initial \"non-core\" definitions that mathlib makes?</p>\n<p>Any pointers for getting my bearings with mathlib would be great :) Thanks!</p>",
        "id": 408378115,
        "sender_full_name": "Robert Culling",
        "timestamp": 1702763749
    },
    {
        "content": "<p>Mathlib just does things in greater generality than is found in most textbooks, which are often written with pedagogy in mind. For example if you are teaching calculus then you might well teach one-variable calculus first, and multi-variable calculus later on when the students are more mathematically mature. But if you are formalising calculus then arguably this approach makes no sense, because the one-variable story is just the n=1 case of the multi-variable story, which you have to do at some point anyway, so why not do the multivariable story first and then specialise to get the one-variable story?</p>",
        "id": 408381007,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702766835
    },
    {
        "content": "<blockquote>\n<p>Something I am particularly interested in is the interface between LEAN core and mathlib. What are the initial \"non-core\" definitions that mathlib makes?</p>\n</blockquote>\n<p>Maybe a good example of this is that core (or even Std) does not know what an <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddGroup#doc\">docs#AddGroup</a> is, and so (among other things) has no generalization that lets you use the same <code>add_comm</code> lemma for both <code>Int</code> and <code>Rat</code>.</p>",
        "id": 408381407,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702767312
    },
    {
        "content": "<p><del><code>Nat</code> is not really an <code>AddGroup</code>...</del></p>",
        "id": 408381751,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1702767649
    },
    {
        "content": "<p>Thanks for your responses. I absolutely agree that the general approach is the way to go with this task. Perhaps a more precise version of my question would be: Once you realised the general approach is the way to go, how did you figure where to start? Did a group get together and set out a plan? Or was it more organic than that?</p>",
        "id": 408383457,
        "sender_full_name": "Robert Culling",
        "timestamp": 1702769493
    },
    {
        "content": "<p>The history is written in this Zulip and in the mathlib GitHub repos. People just talked about designs and made informed decisions</p>",
        "id": 408386917,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702772414
    },
    {
        "content": "<p>You will find that we are continually searching for the \"correct\" generality. For instance, only recently was <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.center#doc\">docs#Set.center</a> redefined so that it gives the correct object when the multiplication is non-associative.</p>",
        "id": 408398916,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1702780548
    }
]