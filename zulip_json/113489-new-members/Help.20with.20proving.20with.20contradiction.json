[
    {
        "content": "<p>Here is my code, along with some definitions and helper theorems (I know its long, but my main issue is at the very end where I have the comment -- Help here ---)</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">dvd</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">):</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">k</span>\n<span class=\"n\">def</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"mi\">2</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">dvd</span> <span class=\"n\">n</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">p</span>\n<span class=\"n\">def</span> <span class=\"n\">composite</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">):</span> <span class=\"kt\">Prop</span><span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">d</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">greater_than_not_zero</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)(</span><span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"o\">):</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">exact</span> <span class=\"n\">lattice</span><span class=\"bp\">.</span><span class=\"n\">ne_bot_of_gt</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">dvd_n_less_than_n</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span><span class=\"o\">:</span> <span class=\"n\">dvd</span> <span class=\"n\">u</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span><span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span><span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">≠</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"n\">lt_of_le_of_ne</span> <span class=\"bp\">_</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">ha</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mul_le_mul_left</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"bp\">_</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"bp\">≤_</span><span class=\"o\">),</span>\n  <span class=\"n\">refine</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pos_iff_ne_zero</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"n\">mt</span> <span class=\"bp\">_</span> <span class=\"n\">hn</span><span class=\"o\">),</span>\n  <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">either_prime_or_composite</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ge</span><span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"o\">):</span> <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">prime</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">composite</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">intros</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"n\">prime</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"n\">composite</span><span class=\"o\">,</span>\n\n        <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n\n        <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span>\n            <span class=\"n\">linarith</span><span class=\"o\">,</span>\n        <span class=\"o\">}</span> <span class=\"o\">,</span>\n        <span class=\"o\">{</span>\n            <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">u</span> <span class=\"n\">hu</span><span class=\"o\">,</span>\n           <span class=\"k\">let</span> <span class=\"n\">hu_left</span><span class=\"o\">:=</span> <span class=\"n\">hu</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span>\n           <span class=\"n\">rw</span> <span class=\"n\">dvd</span> <span class=\"n\">at</span> <span class=\"n\">hu_left</span><span class=\"o\">,</span>\n           <span class=\"n\">cases</span> <span class=\"n\">hu_left</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n\n           <span class=\"k\">have</span> <span class=\"n\">u_g_k</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">&gt;</span><span class=\"n\">k</span><span class=\"o\">),</span>\n           <span class=\"o\">{</span>\n<span class=\"c1\">--               by library_search,</span>\n                <span class=\"n\">exact</span> <span class=\"n\">le_or_lt</span> <span class=\"n\">u</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n           <span class=\"o\">},</span>\n           <span class=\"n\">cases</span> <span class=\"n\">u_g_k</span><span class=\"o\">,</span>\n            <span class=\"o\">{</span>\n                <span class=\"n\">use</span> <span class=\"n\">u</span><span class=\"o\">,</span>\n                <span class=\"n\">use</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n                <span class=\"n\">split</span><span class=\"o\">,</span>\n                <span class=\"n\">exact</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n                <span class=\"n\">split</span><span class=\"o\">,</span>\n                <span class=\"n\">exact</span> <span class=\"n\">u_g_k</span><span class=\"o\">,</span>\n\n                <span class=\"k\">let</span> <span class=\"n\">hu_mid</span><span class=\"o\">:=</span> <span class=\"n\">hu</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span>\n\n                <span class=\"k\">have</span> <span class=\"n\">u_ge_1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">≥</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n                    <span class=\"k\">have</span> <span class=\"n\">u_zero</span><span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">,</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                    <span class=\"o\">},</span>\n                    <span class=\"k\">have</span> <span class=\"n\">n_zero</span><span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">,</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"n\">subst</span> <span class=\"n\">u_zero</span><span class=\"o\">,</span>\n                        <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n                        <span class=\"n\">exact</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n                    <span class=\"o\">},</span>\n                    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"k\">have</span> <span class=\"n\">u_ge_2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"o\">),</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n                    <span class=\"k\">have</span> <span class=\"n\">u_less_2</span> <span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">&lt;</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                    <span class=\"o\">},</span>\n                    <span class=\"k\">have</span> <span class=\"n\">u_eq_1</span><span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                    <span class=\"o\">},</span>\n<span class=\"c1\">--                    by library_search,</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">hu_mid</span> <span class=\"n\">u_eq_1</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n\n                <span class=\"k\">have</span> <span class=\"n\">k_ge_n</span><span class=\"o\">:</span> <span class=\"n\">k</span><span class=\"bp\">≥</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"k\">have</span> <span class=\"n\">uk_ge_2n</span><span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n<span class=\"c1\">--                    by library_search,</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">canonically_ordered_semiring</span><span class=\"bp\">.</span><span class=\"n\">mul_le_mul</span> <span class=\"n\">u_ge_2</span> <span class=\"n\">k_ge_n</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"k\">have</span> <span class=\"n\">n_ge_2n</span><span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">n</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"k\">have</span> <span class=\"n\">twon_gt_n</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"n\">linarith</span><span class=\"o\">,</span>\n\n            <span class=\"o\">},</span>\n            <span class=\"o\">{</span>\n                <span class=\"n\">use</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n                <span class=\"n\">use</span> <span class=\"n\">u</span><span class=\"o\">,</span>\n                <span class=\"n\">split</span><span class=\"o\">,</span>\n                <span class=\"n\">rw</span> <span class=\"n\">mul_comm</span> <span class=\"n\">at</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n                <span class=\"n\">exact</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n                <span class=\"n\">split</span><span class=\"o\">,</span>\n                <span class=\"c1\">--exact u_g_k,</span>\n\n                <span class=\"k\">let</span> <span class=\"n\">hu_mid</span><span class=\"o\">:=</span> <span class=\"n\">hu</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span>\n\n                <span class=\"k\">have</span> <span class=\"n\">u_ge_1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">≥</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n                    <span class=\"k\">have</span> <span class=\"n\">u_zero</span><span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">,</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                    <span class=\"o\">},</span>\n                    <span class=\"k\">have</span> <span class=\"n\">n_zero</span><span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">,</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"n\">subst</span> <span class=\"n\">u_zero</span><span class=\"o\">,</span>\n                        <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n                        <span class=\"n\">exact</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n                    <span class=\"o\">},</span>\n                    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"k\">have</span> <span class=\"n\">u_ge_2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"o\">),</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n                    <span class=\"k\">have</span> <span class=\"n\">u_less_2</span> <span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">&lt;</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                    <span class=\"o\">},</span>\n                    <span class=\"k\">have</span> <span class=\"n\">u_eq_1</span><span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                    <span class=\"o\">},</span>\n<span class=\"c1\">--                    by library_search,</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">hu_mid</span> <span class=\"n\">u_eq_1</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n\n                <span class=\"k\">have</span> <span class=\"n\">k_ge_n</span><span class=\"o\">:</span> <span class=\"n\">k</span><span class=\"bp\">≥</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"k\">have</span> <span class=\"n\">uk_ge_2n</span><span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n<span class=\"c1\">--                    by library_search,</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">canonically_ordered_semiring</span><span class=\"bp\">.</span><span class=\"n\">mul_le_mul</span> <span class=\"n\">u_ge_2</span> <span class=\"n\">k_ge_n</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"k\">have</span> <span class=\"n\">n_ge_2n</span><span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">n</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"k\">have</span> <span class=\"n\">twon_gt_n</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n                <span class=\"n\">linarith</span><span class=\"o\">,</span>\n\n                <span class=\"k\">have</span> <span class=\"n\">ha</span><span class=\"o\">:</span> <span class=\"n\">dvd</span> <span class=\"n\">u</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">hu</span><span class=\"o\">,</span>\n                <span class=\"k\">have</span> <span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">u</span> <span class=\"bp\">≠</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">right</span> <span class=\"n\">hu</span><span class=\"o\">,</span>\n                <span class=\"k\">have</span> <span class=\"n\">hc</span><span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">≠</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">right</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n                <span class=\"k\">have</span> <span class=\"n\">hb</span><span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n                <span class=\"k\">have</span> <span class=\"n\">hn</span><span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n                <span class=\"o\">{</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">lattice</span><span class=\"bp\">.</span><span class=\"n\">ne_bot_of_gt</span> <span class=\"n\">ge</span><span class=\"o\">,</span>\n                <span class=\"o\">},</span>\n\n                <span class=\"n\">apply</span> <span class=\"n\">dvd_n_less_than_n</span><span class=\"o\">,</span>\n                <span class=\"k\">have</span> <span class=\"n\">h4</span><span class=\"o\">:</span> <span class=\"n\">dvd</span> <span class=\"n\">u</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">hu</span><span class=\"o\">,</span>\n                <span class=\"n\">apply</span> <span class=\"n\">h4</span><span class=\"o\">,</span>\n                <span class=\"n\">apply</span> <span class=\"n\">hb</span><span class=\"o\">,</span>\n                <span class=\"n\">apply</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n                <span class=\"n\">apply</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n            <span class=\"o\">},</span>\n\n        <span class=\"o\">}</span>\n\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">intros</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">composite</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">prime</span> <span class=\"n\">at</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n\n      <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">a1</span> <span class=\"n\">ha1</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">ha1</span> <span class=\"k\">with</span> <span class=\"n\">b</span> <span class=\"n\">hb</span><span class=\"o\">,</span>\n\n      <span class=\"k\">have</span> <span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">a1</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">hb</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">temp</span><span class=\"o\">:</span> <span class=\"n\">a1</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">right</span> <span class=\"n\">hb</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">a1</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">temp</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">h3</span><span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">right</span> <span class=\"n\">temp</span><span class=\"o\">,</span>\n\n      <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">right</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n\n      <span class=\"k\">have</span> <span class=\"n\">b_isnt_one</span><span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span>\n        <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n        <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">a_1</span><span class=\"o\">,</span>\n        <span class=\"n\">subst</span> <span class=\"n\">a_1</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"n\">mul_one</span> <span class=\"n\">at</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n        <span class=\"n\">linarith</span><span class=\"o\">,</span>\n      <span class=\"o\">},</span>\n\n      <span class=\"k\">have</span> <span class=\"n\">b_divides_n</span><span class=\"o\">:</span> <span class=\"n\">dvd</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span>\n          <span class=\"n\">rw</span> <span class=\"n\">dvd</span><span class=\"o\">,</span>\n          <span class=\"n\">rw</span> <span class=\"n\">mul_comm</span> <span class=\"n\">at</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n          <span class=\"n\">use</span> <span class=\"n\">a1</span><span class=\"o\">,</span>\n          <span class=\"n\">rw</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n      <span class=\"o\">},</span>\n\n      <span class=\"k\">have</span> <span class=\"n\">b_is_trivial</span><span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span>\n        <span class=\"n\">exact</span> <span class=\"n\">hc</span> <span class=\"n\">b_divides_n</span><span class=\"o\">,</span>\n      <span class=\"o\">},</span>\n\n      <span class=\"c1\">--Help here--</span>\n    <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>So basically, I have the statements: <code> b_is_trivial : b = 1 \\or b = n</code>, <code>b_isnt_one: b \\neq 1</code> and<code>h3: b &lt; n</code>. I want to get a contradiction, but I cant. I tried using <code>linarith</code> and by library search, but nothing worked. Any suggestions?</p>",
        "id": 195608330,
        "sender_full_name": "Dev-Indra",
        "timestamp": 1588099210
    },
    {
        "content": "<p>A huge block of code is not useful without the correct imports.</p>",
        "id": 195608758,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588099428
    },
    {
        "content": "<p>That said, use <code>cases</code> on <code>b_is_trivial</code>.</p>",
        "id": 195608768,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588099436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"272522\">@Dev-Indra</span> Why do you post this huge pile of code (without import) if your question if how to prove <code>example (n b) (b_is_trivial : b = 1 ∨ b = n) (b_isnt_one: b ≠ 1) (h3: b &lt; n) : false</code>?</p>",
        "id": 195610049,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588100053
    },
    {
        "content": "<p>Alternative to Reid's method: <code>by linarith [or_iff_not_imp_left.mp  b_is_trivial b_isnt_one]</code>. Of course you can also write the proof term by hand.</p>",
        "id": 195610261,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588100180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  Sometimes when I asked questions in the past, people wanted me to put in the code so that they can run it on their laptops. As for imports I only had <code>import tactic</code> at the top, and I assumed everyone has this import statement. But thanks for the help. My code works now.</p>",
        "id": 195610554,
        "sender_full_name": "Dev-Indra",
        "timestamp": 1588100379
    },
    {
        "content": "<p>With just <code>import tactic</code> already <code>lattice.ne_bot_of_gt</code> is not in scope.</p>",
        "id": 195610764,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588100476
    },
    {
        "content": "<p>But why omit one or two lines out of a hundred?</p>",
        "id": 195610819,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588100504
    },
    {
        "content": "<p>What <em>I</em> posted is a MWE. You can copy the file I posted in an empty Lean file and it works.</p>",
        "id": 195610961,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588100575
    },
    {
        "content": "<p>I mean before I posted the proof, which does use <code>import tactic</code></p>",
        "id": 195610998,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588100596
    }
]