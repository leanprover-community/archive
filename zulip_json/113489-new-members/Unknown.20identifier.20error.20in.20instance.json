[
    {
        "content": "<p>Unless I write the variables <code>(A : Type*)  [comm_ring A] </code> explicitly in the next definition, the <code>∃ [module A T]</code> throws an error<br>\n<code>unknown identifier 'A'</code>. Could anyone explain why this happens?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.module.basic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"c\">/-</span><span class=\"cm\"> (A : Type*) [comm_ring A] -/</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">T</span><span class=\"o\">],</span> <span class=\"kd\">by</span> <span class=\"n\">exactI</span> <span class=\"bp\">∃</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">A</span> <span class=\"n\">T</span><span class=\"o\">],</span> <span class=\"n\">true</span>\n</code></pre></div>",
        "id": 340590728,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1678364428
    },
    {
        "content": "<p>I guess the system that inspects the body of the def to determine what variables are relevant happens before the tactics in the body are executed? so you can use <code>include A</code> if you want this explicitly.<br>\nOr even something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.module.basic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"c\">/-</span><span class=\"cm\"> (A : Type*) [comm_ring A] -/</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">module</span> <span class=\"n\">A</span> <span class=\"n\">T</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">resetI</span><span class=\"bp\">;</span> <span class=\"n\">apply_instance</span><span class=\"o\">)],</span> <span class=\"n\">true</span>\n</code></pre></div>",
        "id": 340591651,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1678364734
    },
    {
        "content": "<p>OK, I guess this is expected then. I do not mind writing the relevant variables inside the definition, but I wanted to understand why it wasn't finding the previously declared ones. Thanks!</p>",
        "id": 340592489,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1678364971
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/blob/34f41e59146bbda3b58adb23dff350c30093e02b/src/frontends/lean/decl_util.cpp#L464\">https://github.com/leanprover-community/lean/blob/34f41e59146bbda3b58adb23dff350c30093e02b/src/frontends/lean/decl_util.cpp#L464</a> seems to be the relevant lines if anyone is curious <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 340592864,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1678365073
    }
]