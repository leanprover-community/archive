[
    {
        "content": "<p>I really am confused why this <code>rw</code> is failing. Here's the smallest mwe I could make:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Polynomial.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Polynomial.Degree.Definitions</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.List.Range</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">blahblah</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n\n    <span class=\"k\">let</span> <span class=\"n\">Pdeg</span> <span class=\"o\">:=</span> <span class=\"n\">P.natDegree</span><span class=\"bp\">;</span>\n    <span class=\"k\">let</span> <span class=\"n\">Pcoeffs</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">List.finRange</span> <span class=\"n\">Pdeg</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">P.coeff</span><span class=\"bp\">;</span>\n\n    <span class=\"k\">let</span> <span class=\"n\">P2deg</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">P</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">natDegree</span><span class=\"bp\">;</span>\n    <span class=\"k\">let</span> <span class=\"n\">P2coeffs</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">List.finRange</span> <span class=\"n\">P2deg</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">Polynomial.coeff</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">P</span><span class=\"o\">))</span><span class=\"bp\">;</span>\n\n    <span class=\"k\">have</span> <span class=\"n\">eq_deg</span> <span class=\"o\">:</span> <span class=\"n\">P2deg</span> <span class=\"bp\">=</span> <span class=\"n\">Pdeg</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"gr\">sorry</span>\n\n    <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">eq_deg</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">P2coeffs</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>At this point the state is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">P2coeffs</span><span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"n\">Polynomial.coeff</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">P</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">Lean.Internal.coeM</span> <span class=\"o\">(</span><span class=\"n\">List.finRange</span> <span class=\"n\">P2deg</span><span class=\"o\">))</span>\n<span class=\"n\">eq_deg</span><span class=\"o\">:</span> <span class=\"n\">P2deg</span> <span class=\"bp\">=</span> <span class=\"n\">Pdeg</span>\n</code></pre></div>\n<p>but when I try to <code>rewrite [eq_deg] at P2coeffs</code>, it says that it can't find any instance of <code>P2deg</code> in the target! What?</p>",
        "id": 403638556,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1700674893
    },
    {
        "content": "<p><code>rewrite</code> only rewrites the types, not the values of local definitions</p>",
        "id": 403639526,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700675292
    },
    {
        "content": "<p>If you want to manipulate the value, something you can try is use the <code>set</code> tactic instead of <code>let</code>, which creates equations, and you can rewrite at the equation</p>",
        "id": 403639683,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700675364
    },
    {
        "content": "<p>For example, you'd write <code>set P2coeffs := (List.finRange P2deg).map (Polynomial.coeff (-P)) with h</code> and then rewrite at <code>h</code> instead of at <code>P2coeffs</code></p>",
        "id": 403639757,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700675398
    },
    {
        "content": "<p>ohh! ok<br>\nI had a very hard time finding examples of how to use <code>let</code> or <code>set</code> correctly. Thank you!</p>",
        "id": 403639839,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1700675420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"448405\">Alex Meiburg</span> has marked this topic as resolved.</p>",
        "id": 403639850,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700675423
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"448405\">Alex Meiburg</span> has marked this topic as unresolved.</p>",
        "id": 403639858,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700675427
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"448405\">Alex Meiburg</span> has marked this topic as resolved.</p>",
        "id": 403639869,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700675432
    }
]