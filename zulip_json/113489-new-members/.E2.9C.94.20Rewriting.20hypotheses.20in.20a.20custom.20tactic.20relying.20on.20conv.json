[
    {
        "content": "<p>Hi, I am trying to write a tactic that performs a conditional rewrite based on the variable names. I have <a href=\"https://github.com/ah1112/synthetic_euclid_4/blob/17533e9abef501b544e1c649340e9ea69412effc/SyntheticEuclid4/tactics.lean#L199\">partially succeeded</a> by using <code>elab_rules</code> to define a <code>conv</code> tactic on the level of a single expression, and then extending it by <code>macro_rules</code> via <code>conv</code> pattern matching. This works fine for the goal or a single hypothesis, but I am aiming for more <code>rw</code>-like behavior, such as being able to apply the tactic to all hypotheses and the goal via <code>at *</code>, or to multiple specified hypotheses via <code>at h1 h2</code>.</p>\n<p>Update1: It seems that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"foo\"</span> <span class=\"o\">(</span><span class=\"s2\">\"at\"</span> <span class=\"n\">ident</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">(</span><span class=\"s2\">\" at *\"</span><span class=\"o\">)</span><span class=\"bp\">?</span><span class=\"o\">:</span> <span class=\"n\">tactic</span>\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">foo</span> <span class=\"n\">at</span> <span class=\"bp\">$</span><span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">conv</span> <span class=\"n\">at</span> <span class=\"bp\">$</span><span class=\"n\">h</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"n\">occs</span> <span class=\"o\">:=</span> <span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">...</span><span class=\"o\">)</span>\n<span class=\"n\">elab_rules</span><span class=\"o\">:</span> <span class=\"n\">tactic</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">foo</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">withMainContext</span> <span class=\"k\">do</span>\n        <span class=\"n\">for</span> <span class=\"n\">ldecl</span> <span class=\"k\">in</span> <span class=\"bp\">←</span> <span class=\"n\">getLCtx</span> <span class=\"k\">do</span>\n            <span class=\"k\">let</span> <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">mkIdent</span> <span class=\"n\">ldecl.userName</span>\n            <span class=\"k\">if</span> <span class=\"bp\">!</span><span class=\"n\">ldecl.isAuxDecl</span> <span class=\"k\">then</span> <span class=\"n\">evalTactic</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">foo</span> <span class=\"n\">at</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>works, but I am still not sure how to achieve the <code>at h1 h2</code> behavior. Moreover, would it be more appropriate to handle this with a <code>location</code> argument instead of <code>ident</code>, or is that not possible when combined with <code>conv</code>?  Or is there an easier/more general approach?</p>\n<p>Update2: I have mostly <a href=\"https://github.com/ah1112/synthetic_euclid_4/blob/69ffb09a418221516eac339ea13ff485f14c0438/SyntheticEuclid4/tactics.lean\">figured this out</a>, but if anyone knows a more robust/elegant solution, I will be glad for any tips.</p>",
        "id": 354885087,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1682949910
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"327749\">Pedro Sánchez Terraf</span> has marked this topic as resolved.</p>",
        "id": 356146961,
        "sender_full_name": "Notification Bot",
        "timestamp": 1683313970
    }
]