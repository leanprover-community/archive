[
    {
        "content": "<p>I want to get a better idea of how to locally manage several Lean projects that all use Mathlib and work my way up to making a Mathlib PR. I installed Lean via VSCode on Linux, with any required command line tools available.</p>",
        "id": 408280504,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702687521
    },
    {
        "content": "<p>I've so far created one Lean project in VSCode, which seems to have download an entire copy of Mathlib into the project directory. Suppose I will have created multiple distinct Lean project directories, which all would be using Mathlib. How do I install a copy of Mathlib that could be shared by all the different projects? Perhaps this is explained in standard documentation, but it's not so obvious to me where.</p>",
        "id": 408280519,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702687529
    },
    {
        "content": "<p>Finally, I presume that to make a pull request I'd eventually need to locally clone the Mathlib git repository, create a new branch and make changes in it. How does one set up new Lean projects that use the local edited copy of Mathlib?</p>",
        "id": 408280829,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702687664
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a></p>",
        "id": 408280996,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1702687723
    },
    {
        "content": "<p>That should help answer most of your questions.  You can have multiple local branches for your different PRs from the single cloned Mathlib repository.</p>",
        "id": 408281155,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1702687803
    },
    {
        "content": "<p>Thanks. I've had a look at that. It doesn't answer the question of how not to download an entire copy of Mathlib for each new Lean project. I'm sure it's obvious once you know how. But at the moment I don't know how.</p>",
        "id": 408281970,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702688168
    },
    {
        "content": "<p>When you say Lean projects are meaning some other folder/directory outside of the repository directory?</p>",
        "id": 408282289,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1702688336
    },
    {
        "content": "<p>Yes. Say just one Lean file in a separate directory, which imports Mathlib and proves some other things.</p>",
        "id": 408282381,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702688393
    },
    {
        "content": "<p>AFAIK, in that regard you have to have an entire copy in that directory since the Lean/Mathlib/VScode \"ecosystem\" is very dependent on directory structure.</p>",
        "id": 408283228,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1702688717
    },
    {
        "content": "<p>One way people work is to work on projects <em>within</em> mathlib. I have a folder in the Mathlib directory of my own files and experiments. This arrangement makes it easier to contribute things since you're already in mathlib.</p>",
        "id": 408283897,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702689093
    },
    {
        "content": "<p>OK, so maybe I'm thinking about this wrong. What is the most common configuration?</p>\n<p>Option A: One directory set up by VSCode (say AllLeanStuff/). Then individual proof projects are subdirectories (AllLeanStuff/proj1/, AllLeanStuff/proj2, ...). Then I can see how the copy of Mathlib downloaded by VSCode into AllLeanStuff/ is share by the other sub projects.</p>\n<p>Option B: One directory where a copy of Mathlib is stored (say UneditedMathlib/), then separate directories that contain independent Lean projects (say proj1/, proj2/, ...) all of which import Mathlib by setting some path to UneditedMathlib/.  In that case setting up an EdittedMathlib/ directory would allow proj1/, proj2/, ... to selectively choose one or the other copy of Mathlib by a setting some path.</p>",
        "id": 408284030,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702689167
    },
    {
        "content": "<p>Option B is  what I originally had in mind. But maybe that's not the standard workflow that people use.</p>",
        "id": 408284071,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702689199
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/basic.20housekeeping.20question/near/408283897\">said</a>:</p>\n<blockquote>\n<p>One way people work is to work on projects <em>within</em> mathlib. I have a folder in the Mathlib directory of my own files and experiments. This arrangement makes it easier to contribute things since you're already in mathlib.</p>\n</blockquote>\n<p>Am I right in guessing that these files of your own are also tracked by git within the public Mathlib repository (maybe in a separate branch from the main one)?</p>",
        "id": 408284386,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702689386
    },
    {
        "content": "<p>Yes, but you could also keep them in a private fork if that's a concern</p>",
        "id": 408284438,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702689427
    },
    {
        "content": "<p>If the files are meant to eventually be contributed, yes, they're in a branch (maybe not public) and they're usually stored somewhere sensibly inside the Mathlib tree. If they're just one-off experiments, I might not track them with git, and I eventually delete them.</p>",
        "id": 408284564,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702689496
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"674314\">Igor Khavkine</span> <a href=\"#narrow/stream/113489-new-members/topic/basic.20housekeeping.20question/near/408284386\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/basic.20housekeeping.20question/near/408283897\">said</a>:</p>\n<blockquote>\n<p>One way people work is to work on projects <em>within</em> mathlib. I have a folder in the Mathlib directory of my own files and experiments. This arrangement makes it easier to contribute things since you're already in mathlib.</p>\n</blockquote>\n<p>Am I right in guessing that these files of your own are also tracked by git within the public Mathlib repository (maybe in a separate branch from the main one)?</p>\n</blockquote>\n<p>That is only if you push though, you can keep a local branch without having it tracked from upstream</p>",
        "id": 408284583,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1702689503
    },
    {
        "content": "<p>OK, thanks. That explains a bit what people do in practice.</p>",
        "id": 408284679,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702689579
    },
    {
        "content": "<p>I usually also have multiple copies of Mathlib cloned so I can do multiple incompatible things at once (I also contribute to Lean itself, so one of them uses a development version). I just waste disk space myself, but I know some contributors use git worktree to share the git database across multiple clones.</p>",
        "id": 408284769,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702689615
    },
    {
        "content": "<p>I haven't heard of anyone doing it, but maybe you could use git worktree to share the copy of mathlib between different Lean projects? You'd still have multiple copies of the cache in each mathlib's working tree though.</p>",
        "id": 408284871,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702689691
    },
    {
        "content": "<p>Hmm, the one Lean project directory I have seems to have eaten up 4+GB. <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 408284904,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702689718
    },
    {
        "content": "<p>I'll give it a shot setting up a cloned copy of Mathlib and play around with branches within it.</p>",
        "id": 408285093,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702689843
    },
    {
        "content": "<p>On my old laptop I use gitpod and let the fine people at gitpod worry about all the disk space I'm using, and on my desktop, I'm spoiled and have a very large hard drive.</p>",
        "id": 408285130,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702689846
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"674314\">Igor Khavkine</span> <a href=\"#narrow/stream/113489-new-members/topic/basic.20housekeeping.20question/near/408285093\">said</a>:</p>\n<blockquote>\n<p>I'll give it a shot setting up a cloned copy of Mathlib and play around with branches within it.</p>\n</blockquote>\n<p>Another thing to keep in mind as you switch between the local branches is that you will usually need to update with <code>lake exe cache get</code> since the snapshots between the branches most likely will be different if you updated Mathlib in between the different branch creations.</p>",
        "id": 408285850,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1702690372
    }
]