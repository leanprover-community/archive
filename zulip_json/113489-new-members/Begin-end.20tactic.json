[
    {
        "content": "<p>Hello I tried to prove a simple equation by begin-end tactic:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">Raoult_Dalton</span>\n  <span class=\"o\">(</span><span class=\"n\">pi1</span> <span class=\"n\">pi2</span> <span class=\"n\">xi</span> <span class=\"n\">Pstar</span> <span class=\"n\">yi</span> <span class=\"n\">Pt</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a1</span> <span class=\"o\">:</span> <span class=\"n\">pi1</span> <span class=\"bp\">=</span> <span class=\"n\">xi</span> <span class=\"bp\">*</span> <span class=\"n\">Pstar</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a2</span> <span class=\"o\">:</span> <span class=\"n\">pi2</span> <span class=\"bp\">=</span> <span class=\"n\">yi</span> <span class=\"bp\">*</span> <span class=\"n\">Pt</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a3</span> <span class=\"o\">:</span> <span class=\"n\">pi1</span> <span class=\"bp\">=</span> <span class=\"n\">pi2</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a4</span> <span class=\"o\">:</span> <span class=\"n\">xi</span> <span class=\"bp\">=</span> <span class=\"n\">yi</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">Pstar</span> <span class=\"bp\">=</span> <span class=\"n\">Pt</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">a1</span><span class=\"o\">,</span> <span class=\"n\">a2</span><span class=\"o\">,</span> <span class=\"n\">a4</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">a3</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">a3.symm.subst</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>however 'begin' doesn't recognize by Lean and I got this error: unknown identifier 'begin'<br>\nI'm working with Lean 4<br>\nanybody has any idea how should I fix it?</p>\n<p><a href=\"/user_uploads/3121/ZxaO-aqoPWWaWcoUjZoiKg9G/Untitled.png\">Untitled.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ZxaO-aqoPWWaWcoUjZoiKg9G/Untitled.png\" title=\"Untitled.png\"><img src=\"/user_uploads/3121/ZxaO-aqoPWWaWcoUjZoiKg9G/Untitled.png\"></a></div>",
        "id": 340026190,
        "sender_full_name": "Atieh Hosseinizadeh",
        "timestamp": 1678170649
    },
    {
        "content": "<p>By the way I want to prove this:<br>\npi = xi * Pstar<br>\npi = yi * Pt</p>\n<p>so:<br>\nxi * Pstar = yi * Pt</p>",
        "id": 340026468,
        "sender_full_name": "Atieh Hosseinizadeh",
        "timestamp": 1678170813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"590985\">@Atieh Hosseinizadeh</span> <code>begin ... end</code> is Lean 3 syntax. You are using Lean 4.</p>",
        "id": 340027072,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1678171208
    },
    {
        "content": "<p>Lean 4 also got rid of the commas at the end of each line. Also you might want to have a look at <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a></p>",
        "id": 340027198,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1678171293
    },
    {
        "content": "<p>thank you<br>\nI changed my tactics to something in Lean 4:</p>\n<p>I wrote this one:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Rao_Dal</span>\n  <span class=\"o\">(</span><span class=\"n\">pi1</span> <span class=\"n\">pi2</span> <span class=\"n\">xi</span> <span class=\"n\">Pstar</span> <span class=\"n\">yi</span> <span class=\"n\">Pt</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a1</span> <span class=\"o\">:</span> <span class=\"n\">pi1</span> <span class=\"bp\">=</span> <span class=\"n\">Pstar</span> <span class=\"bp\">*</span> <span class=\"n\">xi</span> <span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a2</span> <span class=\"o\">:</span> <span class=\"n\">pi2</span> <span class=\"bp\">=</span> <span class=\"n\">Pt</span> <span class=\"bp\">*</span> <span class=\"n\">yi</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a3</span> <span class=\"o\">:</span> <span class=\"n\">Pstar</span> <span class=\"bp\">=</span> <span class=\"n\">Pt</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a4</span> <span class=\"o\">:</span> <span class=\"n\">xi</span> <span class=\"bp\">=</span> <span class=\"n\">yi</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">pi1</span> <span class=\"bp\">=</span> <span class=\"n\">pi2</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">a3</span><span class=\"o\">,</span> <span class=\"n\">a4</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">a1</span><span class=\"bp\">;</span>\n     <span class=\"n\">simp</span> <span class=\"o\">[(</span><span class=\"n\">a2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">a1</span><span class=\"bp\">;</span>\n      <span class=\"n\">exact</span> <span class=\"n\">a1</span>\n</code></pre></div>\n<p>I got this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"c\">/-</span>\n<span class=\"cm\">      pi1 pi2 xi Pstar yi Pt : Nat</span>\n<span class=\"cm\">      a2 : pi2 = Pt * yi</span>\n<span class=\"cm\">      a3 : Pstar = Pt</span>\n<span class=\"cm\">      a4 : xi = yi</span>\n<span class=\"cm\">      a1 : pi1 = pi2</span>\n<span class=\"cm\">      ‚ä¢ pi1 = pi2</span>\n<span class=\"cm\">      -/</span>\n</code></pre></div>\n<p>and it shows my conjecture is proved however I get \"no goals\" when I want to prove it. It's my screen shot:<br>\n<a href=\"/user_uploads/3121/Vx-A5eqph-RWY5ijN9rubUYF/Lean3.png\">Lean3.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Vx-A5eqph-RWY5ijN9rubUYF/Lean3.png\" title=\"Lean3.png\"><img src=\"/user_uploads/3121/Vx-A5eqph-RWY5ijN9rubUYF/Lean3.png\"></a></div>",
        "id": 340178215,
        "sender_full_name": "Atieh Hosseinizadeh",
        "timestamp": 1678212607
    },
    {
        "content": "<p>You might want to have a harder look at <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> (<code> ` </code> is what you're looking for)</p>",
        "id": 340220333,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678225618
    },
    {
        "content": "<p>Try dropping the semicolons in your proof, they're not necessary in lean 4</p>",
        "id": 340220553,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678225697
    }
]