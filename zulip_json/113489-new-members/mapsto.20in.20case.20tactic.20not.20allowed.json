[
    {
        "content": "<p>I'm working through chapter 5.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">test_structured</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span> <span class=\"bp\">∧</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">And.intro</span>\n  <span class=\"n\">case</span> <span class=\"n\">left</span> <span class=\"bp\">↦</span> <span class=\"n\">exact</span> <span class=\"n\">hp</span>\n  <span class=\"n\">case</span> <span class=\"n\">right</span> <span class=\"bp\">↦</span> <span class=\"n\">exact</span> <span class=\"n\">And.intro</span> <span class=\"n\">hq</span> <span class=\"n\">hp</span>\n</code></pre></div>\n<p>This fails. It requires the ascii <code>=&gt;</code> in this place. Seems inconsistent with lambdas where the mapsto symbol is accepted. I am on \"4.0.0-nightly-2023-09-01\".</p>",
        "id": 388744703,
        "sender_full_name": "Matthew Pocock",
        "timestamp": 1693695714
    },
    {
        "content": "<p>This has never worked, but it has been discussed before. If you wrote that following instructions somewhere, then I guess those instructions need fixing</p>",
        "id": 388745177,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693696223
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/mapsto.20in.20case.20tactic.20not.20allowed/near/388745177\">said</a>:</p>\n<blockquote>\n<p>This has never worked, but it has been discussed before. If you wrote that following instructions somewhere, then I guess those instructions need fixing</p>\n</blockquote>\n<p>No, I wasn't following instructions. I was just assuming it would work here because it worked elsewhere for the same symbol.</p>",
        "id": 388971889,
        "sender_full_name": "Matthew Pocock",
        "timestamp": 1693828049
    },
    {
        "content": "<p>This is indeed a reasonable assumption and it's a shame it doesn't work in this case.</p>",
        "id": 388995027,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1693834867
    },
    {
        "content": "<p>I never understood why maps to isn't allowed everywhere =&gt; is allowed.</p>",
        "id": 388999511,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1693836270
    },
    {
        "content": "<p>Right -- mathematicians are using mapsto in the same way that they use other unicode (i.e. all over the place) whereas the computer scientists are spelling it out in ascii and using font hacks. I am still very unclear why this is such a contentious issue.</p>",
        "id": 389002014,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1693837007
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.3D.3E.20notation/near/310380499\">said</a>:</p>\n<blockquote>\n<p>mapsto only makes sense for functions IMO</p>\n</blockquote>",
        "id": 389002817,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693837260
    },
    {
        "content": "<p>\"case left maps to exact hp\" sounds fine to me.</p>",
        "id": 389004663,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1693837859
    },
    {
        "content": "<p>Another old relevant message:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.3D.3E.20notation/near/310588899\">said</a>:</p>\n<blockquote>\n<p>Here's a proposal:</p>\n<ul>\n<li>Allow using <code>=&gt;</code> or <code>⇒</code> interchangably, just like how we already allow <code>-&gt;</code>or <code>→</code></li>\n<li>For functions (terms) we use <code>↦</code>, everywhere else (structural constructs) we use <code>=&gt;</code> or <code>⇒</code>.</li>\n</ul>\n<p>(Unfortunately <code>⇒</code> looks really silly in VS Code with the default font... Looks fine here though.)</p>\n<p>Anyway, this is a color I'd be happy with for my bike shed <span aria-label=\"bicycle\" class=\"emoji emoji-1f6b2\" role=\"img\" title=\"bicycle\">:bicycle:</span></p>\n</blockquote>",
        "id": 389005679,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1693838173
    }
]