[
    {
        "content": "<p>I see that both pipe <code>|&gt;</code> and apply <code>&lt;|</code> are defined. So is compose <code>∘</code>, but I don't see a flipped version for compose. I can define my own, but if I'm just missing it, I'd rather use something idiomatic.</p>",
        "id": 407318623,
        "sender_full_name": "Treq",
        "timestamp": 1702328295
    },
    {
        "content": "<p>No there is not. You can always use <code>Function.swap (· ∘ ·)</code> if you really want to.</p>",
        "id": 407319384,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702328575
    },
    {
        "content": "<p>In category theory, composition goes the other way, using the <code>≫</code> operator.</p>",
        "id": 407319461,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702328605
    },
    {
        "content": "<p>I'm not sure what you mean by category theory <code>≫</code>,  but  <code>Function.swap (· ∘ ·)</code> does describe what I want, though I'll just define an infix operator for it. :)</p>",
        "id": 407320213,
        "sender_full_name": "Treq",
        "timestamp": 1702328930
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"664276\">Treq</span> has marked this topic as resolved.</p>",
        "id": 407320234,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702328941
    },
    {
        "content": "<p><code>\\gg</code> is composition of morphisms in the <code>CategoryTheory</code> part of mathlib and it's \"done backwards\".</p>",
        "id": 407320393,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702329015
    },
    {
        "content": "<p>Ah, I see that now. <code>CategoryTheory.CategoryStruct.comp</code>.</p>",
        "id": 407320846,
        "sender_full_name": "Treq",
        "timestamp": 1702329234
    }
]