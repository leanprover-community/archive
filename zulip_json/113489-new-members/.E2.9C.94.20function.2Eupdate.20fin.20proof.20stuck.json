[
    {
        "content": "<p>Is there a way forward here?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset</span> <span class=\"n\">data.fin.vec_notation</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">pp.parens</span> <span class=\"n\">true</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">function.update_fin</span>\n    <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n    <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n    <span class=\"n\">function.update</span>\n        <span class=\"o\">(</span><span class=\"n\">function.update_fin</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)))</span>\n        <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">function.update_fin</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"mi\">3</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">10</span><span class=\"o\">,</span> <span class=\"mi\">8</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"mi\">0</span>\n\n\n<span class=\"kd\">example</span>\n    <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n    <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">ys</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">function.update_fin</span> <span class=\"n\">σ</span> <span class=\"n\">n</span> <span class=\"n\">xs</span> <span class=\"n\">ys</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">σ</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n    <span class=\"n\">induction</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"n\">case</span> <span class=\"n\">nat.zero</span>\n  <span class=\"o\">{</span>\n        <span class=\"n\">unfold</span> <span class=\"n\">function.update_fin</span>\n    <span class=\"o\">},</span>\n  <span class=\"n\">case</span> <span class=\"n\">nat.succ</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"n\">ih</span>\n  <span class=\"o\">{</span>\n        <span class=\"n\">unfold</span> <span class=\"n\">function.update_fin</span><span class=\"o\">,</span>\n        <span class=\"k\">have</span> <span class=\"n\">s1</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">xs</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">function.update_noteq</span> <span class=\"n\">s1</span><span class=\"o\">],</span>\n        <span class=\"n\">apply</span> <span class=\"n\">ih</span><span class=\"o\">,</span>\n        <span class=\"gr\">sorry</span>\n    <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 300081611,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1663826412
    },
    {
        "content": "<p>Got it.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span>\n    <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n    <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">ys</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">function.update_fin</span> <span class=\"n\">σ</span> <span class=\"n\">n</span> <span class=\"n\">xs</span> <span class=\"n\">ys</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">σ</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n    <span class=\"n\">induction</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"n\">case</span> <span class=\"n\">nat.zero</span>\n  <span class=\"o\">{</span>\n        <span class=\"n\">unfold</span> <span class=\"n\">function.update_fin</span>\n    <span class=\"o\">},</span>\n  <span class=\"n\">case</span> <span class=\"n\">nat.succ</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"n\">ih</span>\n  <span class=\"o\">{</span>\n        <span class=\"n\">unfold</span> <span class=\"n\">function.update_fin</span><span class=\"o\">,</span>\n        <span class=\"k\">have</span> <span class=\"n\">s1</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">xs</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">function.update_noteq</span> <span class=\"n\">s1</span><span class=\"o\">],</span>\n        <span class=\"n\">apply</span> <span class=\"n\">ih</span><span class=\"o\">,</span>\n        <span class=\"n\">intros</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n        <span class=\"n\">by_cases</span> <span class=\"bp\">↑</span><span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">,</span>\n        <span class=\"n\">rewrite</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">s1</span><span class=\"o\">,</span>\n        <span class=\"n\">apply</span> <span class=\"n\">h1</span>\n    <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 300085793,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1663828707
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"139442\">Patrick Thomas</span> has marked this topic as resolved.</p>",
        "id": 300085889,
        "sender_full_name": "Notification Bot",
        "timestamp": 1663828755
    }
]