[
    {
        "content": "<p>I had the same error message when trying to add mathlib to an existing project. I copied from an example project lakefile <code>require mathlib from git \"https://github.com/leanprover-community/mathlib4\"@\"master\"</code>. I tried to clean and update, but it wouldn't go away.<br>\nI then tried making a new project like it says here <a href=\"https://leanprover-community.github.io/install/project.html#creating-a-lean-project\">https://leanprover-community.github.io/install/project.html#creating-a-lean-project</a> and it worked. I think the main difference is the corresponding, autogenerated, line doesn't reference any branch:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n</code></pre></div>",
        "id": 393113657,
        "sender_full_name": "Alex",
        "timestamp": 1695677044
    },
    {
        "content": "<p>When adding mathlib to an existing project, in the lakefile, mathlib has to be added before other dependencies that also uses Std4 .</p>",
        "id": 393198832,
        "sender_full_name": "Utensil Song",
        "timestamp": 1695721671
    },
    {
        "content": "<p>Mathlib is the only dependency in my buildfile. I made both the new project and old one lakefiles the same other than the name, but I still get the error on the old one, but not the new.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"mi\">155</span><span class=\"bp\">/</span><span class=\"mi\">3357</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Tactic.Spread</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">user</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---4.0.0/bin/lean -Dpp.unicode.fun=true -Dpp.proofs.withType=false -DautoImplicit=false -DrelaxedAutoImplicit=false ./lake-packages/mathlib/././Mathlib/Tactic/NthRewrite.lean -R ./lake-packages/mathlib/./. -o ./lake-packages/mathlib/build/lib/Mathlib/Tactic/NthRewrite.olean -i ./lake-packages/mathlib/build/lib/Mathlib/Tactic/NthRewrite.ilean -c ./lake-packages/mathlib/build/ir/Mathlib/Tactic/NthRewrite.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NthRewrite.lean</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"mi\">26</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">occs'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lean.Meta.Rewrite.Config'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">user</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---4.0.0/bin/lean` exited with code 1</span>\n</code></pre></div>\n<p>I see that it includes Std, but the lakefile only references Lake and DSL before mathlib.</p>",
        "id": 393222464,
        "sender_full_name": "Alex",
        "timestamp": 1695731157
    },
    {
        "content": "<p>Your toolchain (as determined by the <code>lean-toolchain</code> file) must match mathlib's.</p>",
        "id": 393228100,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1695733196
    },
    {
        "content": "<p>Yes, the latest mathlib is already using v4.2.0-rc1, and since v4.1.0, there's a breaking change about occs: <a href=\"https://github.com/leanprover/lean4/releases\">https://github.com/leanprover/lean4/releases</a></p>",
        "id": 393230986,
        "sender_full_name": "Utensil Song",
        "timestamp": 1695734117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"647632\">@Alex</span> Make sure your <code>lean-toolchain</code> has the same contents as <code>lake-packages/mathlib/lean-toolchain</code> (This is what Mauricio is saying, but I'm just adding the filename to look at)</p>",
        "id": 393233334,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695734888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> Am I supposed to edit the lean-toolchain files directly? I thought you were supposed to edit just the lakefile.<br>\nThe problem was that I accidentally deleted the root lean-toolchain. I added the 4.1.0 one and didn't get the error, even though the mathlib lean-toolchain is 4.2.0. I'll set them both to 4.2.0.</p>",
        "id": 393245186,
        "sender_full_name": "Alex",
        "timestamp": 1695738183
    },
    {
        "content": "<p>Yeah, I don't believe <code>lake</code> itself ever manages the <code>lake-toolchain</code> file. I usually copy the mathlib one into my project root.</p>",
        "id": 393245623,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695738325
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"647632\">Alex</span> <a href=\"#narrow/stream/113489-new-members/topic/lake.20build.20issues/near/393245186\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> Am I supposed to edit the lean-toolchain files directly? I thought you were supposed to edit just the lakefile.<br>\nThe problem was that I accidentally deleted the root lean-toolchain. I added the 4.1.0 one and didn't get the error, even though the mathlib lean-toolchain is 4.2.0. I'll set them both to 4.2.0.</p>\n</blockquote>\n<p>Setting it to 4.1.0 will solve only that specific error. Toolchain inconsistency with Mathlib for a project depending on Mathlib could lead to less obvious issues (e.g. see <a href=\"https://github.com/leanprover-community/mathlib4/pull/6928\">#6928</a> for how the difference between 4.2.0-rc1 and 4.1.0 subtly impacts Mathlib proofs). So it's generally advisable to keep them consistent.</p>\n<p>It would be really nice if lake can check toolchain inconsistency in general, and allow libraries like mathlib to declare the requirement of such consistency so lake can give errors instead of warnings accordingly.</p>",
        "id": 393368030,
        "sender_full_name": "Utensil Song",
        "timestamp": 1695780435
    },
    {
        "content": "<p>Is it really ok to make sure all the lean-toolchain to the same version even if that's different than the one in git? I feel like it's not because <code>lake update</code> aborts because of uncommitted changes and because <code>lake build</code> also warns about them.<br>\nI set all the math-required packages to 4.2.0: aesop, Cli, mathlib, proofwidgets, Qq, and std. I hope this is ok.</p>",
        "id": 393476210,
        "sender_full_name": "Alex",
        "timestamp": 1695817303
    },
    {
        "content": "<p><code>4.2.0</code> is not out yet, right?</p>",
        "id": 393476783,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695817500
    },
    {
        "content": "<p>I just hit this when doing a lake update. My toolchain is <code>leanprover/lean4:v4.0.0-rc4</code>.  My <code>lakefile.lean</code> dependency is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n</code></pre></div>\n<p>The toolchain in that git repo is <code>leanprover/lean4:v4.2.0-rc1</code></p>\n<p>It would be nice if the tooling did a toolchain sanity check that the toolchain of the libs isn't a significantly different one from the project, and gave options to fix things where they don't match.</p>",
        "id": 393806475,
        "sender_full_name": "Matthew Pocock",
        "timestamp": 1695935951
    },
    {
        "content": "<p>See previous discussion <a href=\"#narrow/stream/270676-lean4/topic/Get.20mathlib.20cache.20after.20updating.20mathlib.20dependency/near/392115513\">here</a></p>",
        "id": 393807450,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695936469
    }
]