[
    {
        "content": "<p>Hi everyone, I'm new in Lean. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Algebra.ValuedField</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Normed.Field.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Logic.Equiv.Defs</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Pow.Real</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.NNReal</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">ValuationEqui</span>\n    <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Valuation</span> <span class=\"n\">K</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">Valuation</span> <span class=\"n\">K</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span>\n    <span class=\"n\">where</span>\n      <span class=\"n\">valequi</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">v'</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">s</span>\n</code></pre></div>\n<p>As you can see, I have define a new structure which is about the valuation of  <code>Field K</code>. The thing I want to do is that I have <code>(v1, v2, v3 : Valuation K NNReal)</code> and <code>v1, v2</code> is <code>ValuationEqui</code> and <code>v2, v3</code> is <code>ValuationEqui</code>. I want to show that <code>v1, v3</code> is <code>ValuationEqui</code>. In short, I want to show that <code>ValuationEqui</code> is an Equivalent relation. How could I achieve this. <br>\nThanks in advance.</p>",
        "id": 386174946,
        "sender_full_name": "Wenrong Zou",
        "timestamp": 1692498945
    },
    {
        "content": "<p>the logical form of <code>valequi</code> looks suspicious: it is satisfied for any valuation by setting <code>s = 0</code></p>",
        "id": 386175194,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692499106
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Check.20Equivalent.20relation/near/386175194\">发言道</a>：</p>\n<blockquote>\n<p>the logical form of <code>valequi</code> looks suspicious: it is satisfied for any valuation by setting <code>s = 0</code></p>\n</blockquote>\n<p>I have assume that <code>s</code> should be positive.</p>",
        "id": 386175459,
        "sender_full_name": "Wenrong Zou",
        "timestamp": 1692499275
    },
    {
        "content": "<p>you said that <em>if</em> s is positive then some property follows. If s is not positive then it is trivially satisfied</p>",
        "id": 386176046,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692499741
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Check.20Equivalent.20relation/near/386176046\">发言道</a>：</p>\n<blockquote>\n<p>you said that <em>if</em> s is positive then some property follows. If s is not positive then it is trivially satisfied</p>\n</blockquote>\n<p>Oh,  I made a grammar mistake. Thank you very much.</p>",
        "id": 386179961,
        "sender_full_name": "Wenrong Zou",
        "timestamp": 1692503144
    }
]