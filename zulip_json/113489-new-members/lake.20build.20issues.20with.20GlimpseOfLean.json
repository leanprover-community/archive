[
    {
        "content": "<p>I'm trying to learn Lean with GlimpseOfLean, but I can't get the install working. I've searched around in Zulip and tried a few different solutions, but can't seem to get anything that works.</p>\n<p>Specifically, I'm doing the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">PatrickMassot</span><span class=\"bp\">/</span><span class=\"n\">GlimpseOfLean.git</span>\n<span class=\"n\">cd</span> <span class=\"n\">GlimpseOfLean</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">clean</span><span class=\"bp\">!</span>\n</code></pre></div>\n<p>At this point, I get an error about the <code>lake-manifest.json</code> file:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">improperly</span> <span class=\"n\">formatted</span> <span class=\"n\">manifest</span><span class=\"o\">:</span> <span class=\"n\">incompatible</span> <span class=\"n\">manifest</span> <span class=\"n\">version</span> <span class=\"bp\">`</span><span class=\"mi\">4</span><span class=\"bp\">`</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">dependency</span> <span class=\"bp\">'</span><span class=\"n\">mathlib'</span> <span class=\"n\">of</span> <span class=\"bp\">'</span><span class=\"n\">glimpseOfLean'</span> <span class=\"n\">not</span> <span class=\"k\">in</span> <span class=\"n\">manifest</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">update</span><span class=\"bp\">`</span> <span class=\"n\">to</span> <span class=\"n\">update</span>\n</code></pre></div>\n<p>So I do so, it seems to work (clones all the dependencies into <code>lake-packages</code>), and I try <code>lake exe cache clean!</code> again. That also seems to work, although I get warnings about unused linker input files (I can post the output if it's relevant).</p>\n<p>Finally, I run <code>lake build</code> and get this partway through:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=</span><span class=\"o\">:</span><span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">cuda</span><span class=\"bp\">/</span><span class=\"n\">targets</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span> <span class=\"bp\">-</span><span class=\"n\">Dpp.unicode.fun</span><span class=\"bp\">=</span><span class=\"n\">true</span> <span class=\"bp\">-</span><span class=\"n\">Dpp.proofs.withType</span><span class=\"bp\">=</span><span class=\"n\">false</span> <span class=\"bp\">-</span><span class=\"n\">DautoImplicit</span><span class=\"bp\">=</span><span class=\"n\">false</span> <span class=\"bp\">-</span><span class=\"n\">DrelaxedAutoImplicit</span><span class=\"bp\">=</span><span class=\"n\">false</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NthRewrite.lean</span> <span class=\"bp\">-</span><span class=\"n\">R</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/./.</span> <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NthRewrite.olean</span> <span class=\"bp\">-</span><span class=\"n\">i</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NthRewrite.ilean</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">ir</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NthRewrite.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NthRewrite.lean</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"mi\">26</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">occs'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lean.Meta.Rewrite.Config'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">`</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">code</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>I've tried messing around with <code>lean-toolchain</code> and changing it to match <code>lake-packages/mathlib/lean-toolchain</code>, deleting and regenerating the <code>lake-manifest.json</code> file, and all sorts of combinations of the above. Any ideas on how I can get this working? I'd really just love to try learning a bit of Lean, but I've spent two hours getting the LSP working (in Neovim, so there it's perhaps my own fault for introducing complexity and not just going with VSCode or emacs) and don't really want to spend another two hours mucking around on my own trying things out :)</p>",
        "id": 392869412,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695591032
    },
    {
        "content": "<p>Oh no, I was going to suggest copying <code>lake-packages/mathlib/lean-toolchain</code> to <code>lean-toolchain</code>, but then you mentioned you already did that.</p>\n<p>Just to check, do the following steps cause an error for you?</p>\n<div class=\"codehilite\" data-code-language=\"txt\"><pre><span></span><code>git clone https://github.com/PatrickMassot/GlimpseOfLean.git\ncd GlimpseOfLean\ncp lake-packages/mathlib/lean-toolchain lean-toolchain\nlake exe cache get\n</code></pre></div>",
        "id": 392870022,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695591920
    },
    {
        "content": "<p>Yeah <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> I saw your message about that, haha. Unfortunately those commands do cause an error, but mostly because <code>lake-packages</code> doesn't exist right after cloning the repo</p>",
        "id": 392870129,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695592047
    },
    {
        "content": "<p>Oh right, the <code>cp</code> doesn't work.</p>",
        "id": 392870208,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592124
    },
    {
        "content": "<p>That sounds like a chicken and egg situation</p>",
        "id": 392870215,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695592141
    },
    {
        "content": "<p>You could do <code>lake exe cache get</code> first (which won't work) and then do <code>cp</code>, and then try again.</p>",
        "id": 392870225,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592150
    },
    {
        "content": "<p>I am 90% sure I already tried that (or rather, noted what was in the file, cloned, changed it to that, and then did the other steps), but on the off chance I didn't, here goes :)</p>",
        "id": 392870295,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695592205
    },
    {
        "content": "<p>Maybe I'll try this locally myself before giving you more suggestions. I can tell you that I do have a working copy of <code>GlimpsOfLean</code> on my work computer that I could check tomorrow.</p>",
        "id": 392870310,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592220
    },
    {
        "content": "<p>glimpse master depends on <a href=\"https://github.com/leanprover-community/mathlib4/tree/a3b66ecb2f91d93379698626e7ec98a28b893b4d\">https://github.com/leanprover-community/mathlib4/tree/a3b66ecb2f91d93379698626e7ec98a28b893b4d</a> , so the lean-toolchain should look like <a href=\"https://github.com/leanprover-community/mathlib4/blob/a3b66ecb2f91d93379698626e7ec98a28b893b4d/lean-toolchain\">https://github.com/leanprover-community/mathlib4/blob/a3b66ecb2f91d93379698626e7ec98a28b893b4d/lean-toolchain</a></p>",
        "id": 392870404,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695592320
    },
    {
        "content": "<p>Thanks. That means <code>lean-toolchain</code> is correct for GlimpseOfLean</p>",
        "id": 392870564,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592376
    },
    {
        "content": "<p>That'd be nice. I'm probably going to go to bed soon anyway, and won't have time for this until tomorrow evening, so I'm not in too much of a hurry.</p>\n<p>With running <code>lake exe cache get</code> first, I get this error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">improperly</span> <span class=\"n\">formatted</span> <span class=\"n\">manifest</span><span class=\"o\">:</span> <span class=\"n\">incompatible</span> <span class=\"n\">manifest</span> <span class=\"n\">version</span> <span class=\"bp\">`</span><span class=\"mi\">4</span><span class=\"bp\">`</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">dependency</span> <span class=\"bp\">'</span><span class=\"n\">mathlib'</span> <span class=\"n\">of</span> <span class=\"bp\">'</span><span class=\"n\">glimpseOfLean'</span> <span class=\"n\">not</span> <span class=\"k\">in</span> <span class=\"n\">manifest</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">update</span><span class=\"bp\">`</span> <span class=\"n\">to</span> <span class=\"n\">update</span>\n</code></pre></div>",
        "id": 392870588,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695592385
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"653071\">Kaden Uhlig</span> <a href=\"#narrow/stream/113489-new-members/topic/lake.20build.20issues.20with.20GlimpseOfLean/near/392869412\">said</a>:</p>\n<blockquote>\n<p>I've spent two hours getting the LSP working (in Neovim, so there it's perhaps my own fault for introducing complexity and not just going with VSCode or emacs)</p>\n</blockquote>\n<p>Not relevant to your question of course but I'd love to know what got you stuck in setting things up.</p>",
        "id": 392870592,
        "sender_full_name": "Julian Berman",
        "timestamp": 1695592387
    },
    {
        "content": "<p>The next thing I'd try would be manually changing \"4\" to \"5\" in lake-manifest.json</p>",
        "id": 392870642,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695592436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> Issues fully in my own, overgrown and convoluted config – nothing wrong with your delightful plugin, haha</p>",
        "id": 392870684,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695592456
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"653071\">@Kaden Uhlig</span> These do work for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">PatrickMassot</span><span class=\"bp\">/</span><span class=\"n\">GlimpseOfLean.git</span>\n<span class=\"n\">cd</span> <span class=\"n\">GlimpseOfLean</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n</code></pre></div>",
        "id": 392870690,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592461
    },
    {
        "content": "<p>Do you have any sort of lean toolchain override configured?</p>",
        "id": 392870702,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592482
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/lake.20build.20issues.20with.20GlimpseOfLean/near/392870642\">said</a>:</p>\n<blockquote>\n<p>The next thing I'd try would be manually changing \"4\" to \"5\" in lake-manifest.json</p>\n</blockquote>\n<p>I would be wary of doing this, but it's worth a shot since it won't break anything, and if it works, great!</p>",
        "id": 392870806,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592619
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/lake.20build.20issues.20with.20GlimpseOfLean/near/392870690\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"653071\">Kaden Uhlig</span> These do work for me:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">PatrickMassot</span><span class=\"bp\">/</span><span class=\"n\">GlimpseOfLean.git</span>\n<span class=\"n\">cd</span> <span class=\"n\">GlimpseOfLean</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Did you get the manifest version message while doing that?</p>",
        "id": 392870828,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695592659
    },
    {
        "content": "<p>No I don't, that's what I mean by it working</p>",
        "id": 392870890,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592700
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"653071\">@Kaden Uhlig</span> What do you get when you do <code>lake --version</code>?<br>\nHere's mine:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>~/Projects/GlimpseOfLean(master) % lake --version\nLake version 4.1.0-pre (Lean version 4.0.0-nightly-2023-06-20)\n</code></pre></div>\n<p>Note that 2023-06-20 matches the <code>lean-toolchain</code> file</p>",
        "id": 392870906,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695592734
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">kuhlig</span> <span class=\"n\">lean</span> <span class=\"bp\">$</span> <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"n\">GlimpseOfLean</span><span class=\"bp\">/</span>\n<span class=\"n\">kuhlig</span> <span class=\"n\">lean</span> <span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">PatrickMassot</span><span class=\"bp\">/</span><span class=\"n\">GlimpseOfLean.git</span>\n<span class=\"n\">Cloning</span> <span class=\"n\">into</span> <span class=\"bp\">'</span><span class=\"n\">GlimpseOfLean'...</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Enumerating</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">307</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Counting</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">19</span><span class=\"bp\">/</span><span class=\"mi\">19</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Compressing</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">10</span><span class=\"bp\">/</span><span class=\"mi\">10</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Total</span> <span class=\"mi\">307</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">14</span><span class=\"o\">),</span> <span class=\"n\">reused</span> <span class=\"mi\">9</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">9</span><span class=\"o\">),</span> <span class=\"n\">pack</span><span class=\"bp\">-</span><span class=\"n\">reused</span> <span class=\"mi\">288</span>\n<span class=\"n\">Receiving</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">307</span><span class=\"bp\">/</span><span class=\"mi\">307</span><span class=\"o\">),</span> <span class=\"mi\">89</span><span class=\"bp\">.</span><span class=\"mi\">23</span> <span class=\"n\">KiB</span> <span class=\"bp\">|</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">62</span> <span class=\"n\">MiB</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">Resolving</span> <span class=\"n\">deltas</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">152</span><span class=\"bp\">/</span><span class=\"mi\">152</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">kuhlig</span> <span class=\"n\">lean</span> <span class=\"bp\">$</span> <span class=\"n\">cd</span> <span class=\"n\">GlimpsOfLean</span>\n<span class=\"n\">kuhlig</span> <span class=\"n\">lean</span> <span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">improperly</span> <span class=\"n\">formatted</span> <span class=\"n\">manifest</span><span class=\"o\">:</span> <span class=\"n\">incompatible</span> <span class=\"n\">manifest</span> <span class=\"n\">version</span> <span class=\"bp\">`</span><span class=\"mi\">4</span><span class=\"bp\">`</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">dependency</span> <span class=\"bp\">'</span><span class=\"n\">mathlib'</span> <span class=\"n\">of</span> <span class=\"bp\">'</span><span class=\"n\">glimpseOfLean'</span> <span class=\"n\">not</span> <span class=\"k\">in</span> <span class=\"n\">manifest</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">update</span><span class=\"bp\">`</span> <span class=\"n\">to</span> <span class=\"n\">update</span>\n</code></pre></div>\n<blockquote>\n<p>Do you have any sort of lean toolchain override configured?</p>\n</blockquote>\n<p>Not that I know of.</p>\n<blockquote>\n<p>The next thing I'd try would be manually changing \"4\" to \"5\" in lake-manifest.json</p>\n</blockquote>\n<p>Unfortunately already tried that :)</p>",
        "id": 392870987,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695592806
    },
    {
        "content": "<p>I'm trying for the life of me to remember/find out how I installed lean, to double check that I didn't do something odd. It was a couple(?) months ago, and I can't find anything at all in my <code>.bash_history</code>, which is odd</p>",
        "id": 392871161,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695592959
    },
    {
        "content": "<p>Could you do <code>lake --version</code>? I think this would be the best thing for diagnosis right now</p>",
        "id": 392871194,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695593002
    },
    {
        "content": "<p><code>Lake version 5.0.0-src (Lean version 4.0.0, commit a7efe5b60e86b26fefd4795b46d66af369b97329)</code></p>",
        "id": 392871269,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695593066
    },
    {
        "content": "<p>Hmm, I don't know how toolchain selection works well enough to really help, but as a test, could you do <code>~/.elan/bin/lake --version</code>? Maybe that will pick up on the right version.</p>",
        "id": 392871349,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695593166
    },
    {
        "content": "<p>It does look like I installed lean through the <a href=\"https://aur.archlinux.org/packages/lean4\">AUR</a>, not through <code>elan</code>, which might be an issue</p>",
        "id": 392871353,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695593174
    },
    {
        "content": "<p>Yes, that will be an issue, especially if it comes first in your PATH before the one in <code>~/.elan/bin</code>. If my previous suggestion gives a sensible result, you can do <code>~/.elan/bin/lake exe cache get</code> and then figure out how to fix your PATH later <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 392871380,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695593230
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/lake.20build.20issues.20with.20GlimpseOfLean/near/392871349\">said</a>:</p>\n<blockquote>\n<p>Hmm, I don't know how toolchain selection works well enough to really help, but as a test, could you do <code>~/.elan/bin/lake --version</code>? Maybe that will pick up on the right version.</p>\n</blockquote>\n<p>I'll try uninstalling lean with my package manager than installing it through elan real quick. Maybe that will clear things up.</p>",
        "id": 392871383,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695593237
    },
    {
        "content": "<p>Could you do my suggestion first quick?</p>",
        "id": 392871388,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695593249
    },
    {
        "content": "<p>I don't even have the <code>~/.elan</code> directory haha</p>",
        "id": 392871394,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695593261
    },
    {
        "content": "<p>Ok, carry on <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 392871401,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695593277
    },
    {
        "content": "<p>Wonderful – with lean installed through <code>elan</code> and not the package manager, everything works out of the box. Sorry for all the trouble, but thanks for such quick help!</p>",
        "id": 392872039,
        "sender_full_name": "Kaden Uhlig",
        "timestamp": 1695594047
    },
    {
        "content": "<p>We really should attempt to remove these prepackaged lean installations because they cause far more harm than good. Which package manager was it?</p>",
        "id": 392905463,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695616161
    },
    {
        "content": "<p>Literally no project works if you don't install exactly the right way</p>",
        "id": 392906435,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695616696
    },
    {
        "content": "<p>It's a surprise that <a href=\"https://aur.archlinux.org/packages/lean4\">AUR</a> has pre-packaged  Lean 4 4.0.0.rc4-1 <span aria-label=\"astonished\" class=\"emoji emoji-1f632\" role=\"img\" title=\"astonished\">:astonished:</span></p>",
        "id": 392906627,
        "sender_full_name": "Utensil Song",
        "timestamp": 1695616806
    },
    {
        "content": "<p>The only useful pre-packaged Lean stuff might be the brew one for Mac, as elan can't be installed via <code>curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh\n</code> on Mac M1 etc. and has to go through <code>brew install elan-init</code>.</p>",
        "id": 392906772,
        "sender_full_name": "Utensil Song",
        "timestamp": 1695616888
    },
    {
        "content": "<p>An operating system package manager aims to maintain compatibility with the rest of the operating system. That's the wrong problem to solve for a programming project, where the goal is to maintain compatibility with other people working on the project, not your own OS</p>",
        "id": 392906922,
        "sender_full_name": "Chris Wong",
        "timestamp": 1695616967
    },
    {
        "content": "<p>Filed a docs PR: <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/369\">https://github.com/leanprover-community/leanprover-community.github.io/pull/369</a></p>",
        "id": 393390657,
        "sender_full_name": "Chris Wong",
        "timestamp": 1695790159
    }
]