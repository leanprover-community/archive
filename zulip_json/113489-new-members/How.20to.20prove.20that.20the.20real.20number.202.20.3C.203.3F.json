[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p><code>simp</code> doesn't make any progress, and I'm not sure what else to try.</p>",
        "id": 404695927,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701197348
    },
    {
        "content": "<p>norm_num?</p>",
        "id": 404696041,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701197402
    },
    {
        "content": "<p>Ah thanks!</p>",
        "id": 404696187,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701197446
    },
    {
        "content": "<p>There should maybe be a better answer to the general question of \"I don't know the 40 or so standard mathlib tactics so don't know how to make progress on this math-simple goal\". I mean, a better answer than \"go and read Mathematics In Lean and learn what all the tactics do\" or \"in your case this tactic works\". Does <code>hint</code> solve this one or does it just melt your machine?</p>",
        "id": 404699531,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1701198477
    },
    {
        "content": "<p>Thanks Kevin.  My Mathlib checkout doesn't have Mathlib.Tactic.Hint.  Is it new?</p>",
        "id": 404700479,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701198788
    },
    {
        "content": "<p>I have 4.3.0-rc1.  I'll try upgrading to rc2.</p>",
        "id": 404700827,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701198894
    },
    {
        "content": "<p>It's probably not imported by <code>Mathlib.Data.Real.Basic</code>.</p>",
        "id": 404700885,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701198916
    },
    {
        "content": "<p>Try</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n</code></pre></div>",
        "id": 404700923,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701198929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20prove.20that.20the.20real.20number.202.20.3C.203.3F/near/404699531\">said</a>:</p>\n<blockquote>\n<p>There should maybe be a better answer to the general question of \"I don't know the 40 or so standard mathlib tactics so don't know how to make progress on this math-simple goal\". I mean, a better answer than \"go and read Mathematics In Lean and learn what all the tactics do\" or \"in your case this tactic works\". Does <code>hint</code> solve this one or does it just melt your machine?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"417654\">@Martin Dvořák</span> 's Cheatsheet? EDIT: it would be cool to have in the docview</p>",
        "id": 404701121,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701198985
    },
    {
        "content": "<p><code>hint</code> is instantaneous on my machine, and it says that <code>linarith</code> does the job.</p>",
        "id": 404701303,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701199048
    },
    {
        "content": "<p>BTW <code>show_term linarith</code> produces a huge term (that doesn't work), why <code>show_term norm_num</code> is much shorter.</p>",
        "id": 404702184,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701199274
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20prove.20that.20the.20real.20number.202.20.3C.203.3F/near/404701121\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> 's Cheatsheet? EDIT: it would be cool to have in the docview</p>\n</blockquote>\n<p>Which one did you want?<br>\n<a href=\"https://github.com/madvorak/lean4-tactics\">https://github.com/madvorak/lean4-tactics</a><br>\nOr the printable one?</p>",
        "id": 404702372,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1701199327
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20prove.20that.20the.20real.20number.202.20.3C.203.3F/near/404702184\">said</a>:</p>\n<blockquote>\n<p>BTW <code>show_term linarith</code> produces a huge term (that doesn't work), why <code>show_term norm_num</code> is much shorter.</p>\n</blockquote>\n<p>There is also the shorter proof <code>Nat.cast_lt.mpr (Nat.lt.base 2)</code>.</p>",
        "id": 404703086,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1701199572
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20prove.20that.20the.20real.20number.202.20.3C.203.3F/near/404702372\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20prove.20that.20the.20real.20number.202.20.3C.203.3F/near/404701121\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> 's Cheatsheet? EDIT: it would be cool to have in the docview</p>\n</blockquote>\n<p>Which one did you want?<br>\n<a href=\"https://github.com/madvorak/lean4-tactics\">https://github.com/madvorak/lean4-tactics</a><br>\nOr the printable one?</p>\n</blockquote>\n<p>The link version should do</p>",
        "id": 404704694,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701200239
    }
]