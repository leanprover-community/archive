[
    {
        "content": "<p>As expressed in the <a href=\"https://leanprover-community.github.io/contribute/style.html\">style guide</a>, I tried to rename the type variables in <code>Topology.Homeomorph</code> to match standard mathematics conventions. (I was touching the file anyway, in a different PR.)<br>\nBuilding this, however, yields an error I don't understand. The first error, on line 2506 in Topology.Module.Basic is</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>application type mismatch\n  ↑(Homeomorph.funUnique ι) M\nargument\n  M\nhas type\n  Type u_3 : Type (u_3 + 1)\nbut is expected to have type\n  ι → ?m.2568875 : Type (max u_1 ?u.2568873)\n</code></pre></div>\n<p>Code in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7587\">#7587</a>, build errors also <a href=\"https://github.com/leanprover-community/mathlib4/pull/7587/files\">in the files tab</a>. </p>\n<p>I have only a vague understanding of universes; no particular idea what could be causing the issue here. </p>\n<p>My best guess is that changing <code>Homeomorph.refl</code> is the culprit: but I have no idea why that should cause an issue. To me, the lines look basically identical. Apparently, this is deeper than I anticipated... apologies for inadvertedly causing a mess!</p>",
        "id": 395723625,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696865398
    },
    {
        "content": "<p>Full set of errors, from the build log</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Header</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>Error: ./././Mathlib/Topology/Algebra/Module/Basic.lean:2506:2: error: expected structure<br>\nError: ./././Mathlib/Topology/Algebra/Module/Basic.lean:2506:27: error: application type mismatch<br>\n  ↑(Homeomorph.funUnique ι) M<br>\nargument<br>\n  M<br>\nhas type<br>\n  Type u_3 : Type (u_3 + 1)<br>\nbut is expected to have type<br>\n  ι → ?m.2568875 : Type (max u_1 ?u.2568873)<br>\nError: ./././Mathlib/Topology/Algebra/Module/Basic.lean:2513:2: error: type mismatch<br>\n  rfl<br>\nhas type<br>\n  ↑(funUnique ι R M) = ↑(funUnique ι R M) : Prop<br>\nbut is expected to have type<br>\n  ↑(funUnique ι R M) = Function.eval default : Prop<br>\nError: ./././Mathlib/Topology/Algebra/Module/Basic.lean:2518:2: error: type mismatch<br>\n  rfl<br>\nhas type<br>\n  ↑(ContinuousLinearEquiv.symm (funUnique ι R M)) = ↑(ContinuousLinearEquiv.symm (funUnique ι R M)) : Prop<br>\nbut is expected to have type<br>\n  ↑(ContinuousLinearEquiv.symm (funUnique ι R M)) = Function.const ι : Prop</p>\n</div></div>",
        "id": 395727294,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696866644
    },
    {
        "content": "<p>Never mind: I've found the error. <a href=\"https://github.com/leanprover-community/mathlib4/pull/7587/commits/69644709706880eaf1e7d1b82e39166c3d22e847\">\"Re-using\"</a> in funUnique caused issues; reverting that fixes things.</p>",
        "id": 395732486,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1696868694
    },
    {
        "content": "<p>Sorry, why do we care about the case of variables?</p>",
        "id": 395744602,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696874746
    }
]