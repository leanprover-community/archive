[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Group.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Subgroup.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span> <span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">my_subgroup</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">subgroup</span> <span class=\"n\">G</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">carrier_mem'</span> <span class=\"o\">:</span> <span class=\"n\">carrier</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I define subgroups like this and it reminds me 'type expected, got<br>\n   (set G : ?m.17 PUnit)’, so how to correctly define subgroups?</p>",
        "id": 376235960,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689661157
    },
    {
        "content": "<p>Try switching on <code>set_option autoImplicit false</code> to see if the error changes?</p>",
        "id": 376237292,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689661595
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/subgroup/near/376237292\">said</a>:</p>\n<blockquote>\n<p>Try switching on <code>set_option autoImplicit false</code> to see if the error changes?</p>\n</blockquote>\n<p>The error has not changed, it is still the original error</p>",
        "id": 376237888,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689661767
    },
    {
        "content": "<p>I'm surprised because stuff like <code>set</code> and <code>subgroup</code> should surely have capital letters in lean 4</p>",
        "id": 376238176,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689661847
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">MonadStateOf.set.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">semiOutParam</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)}</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">self</span> <span class=\"o\">:</span> <span class=\"n\">MonadStateOf</span> <span class=\"n\">σ</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">✝</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"n\">PUnit</span>\n</code></pre></div>\n<p>(that is, <code>set G</code> is defined, to mean \"assign the state value of monad <code>m</code> to <code>G</code>\", which is probably not what you want)</p>",
        "id": 376238575,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689661978
    },
    {
        "content": "<p><code>subgroup</code> isn't elaborated because of the earlier error, but if you use <code>Set G</code> then it gives the error you probably expected:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">subgroup'</span>\n<span class=\"bp\">'</span><span class=\"n\">sorryAx'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"kd\">structure</span>\n</code></pre></div>",
        "id": 376238756,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689662040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/subgroup/near/376238176\">said</a>:</p>\n<blockquote>\n<p>I'm surprised because stuff like <code>set</code> and <code>subgroup</code> should surely have capital letters in lean 4</p>\n</blockquote>\n<p>Thank you very much!</p>",
        "id": 376242573,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689663230
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Group.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Subgroup.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span> <span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">false</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">H₁</span> <span class=\"n\">H₂</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"k\">have</span> <span class=\"o\">(</span><span class=\"n\">H₁</span> <span class=\"bp\">∪</span> <span class=\"n\">H₂</span><span class=\"o\">):</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">H₁</span> <span class=\"bp\">⊆</span> <span class=\"n\">H₂</span> <span class=\"bp\">∨</span> <span class=\"n\">H₂</span> <span class=\"bp\">⊆</span> <span class=\"n\">H₁</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Can I ask what is wrong with me describing H1 and H2 is still being subgroups</p>",
        "id": 376248156,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689664821
    },
    {
        "content": "<p>Please don't post the same question in two places</p>",
        "id": 376259504,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689667769
    },
    {
        "content": "<p>I answered in your other thread</p>",
        "id": 376259567,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689667787
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/subgroup/near/376259504\">said</a>:</p>\n<blockquote>\n<p>Please don't post the same question in two places</p>\n</blockquote>\n<p>I am so sorry to bother you, I mistakenly thought I should reopen a topic</p>",
        "id": 376328318,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689682831
    },
    {
        "content": "<p>It's fine re-using a topic, but if you post the same question in <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20write.20known.20conditions/near/376257094\">two</a> <a href=\"#narrow/stream/113489-new-members/topic/subgroup/near/376248156\">places</a> it can lead to people independently answering your question without being aware of other answers. Eric's message is letting everyone else know not to leave any answers in this topic.</p>",
        "id": 376332312,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689683647
    }
]