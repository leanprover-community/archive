[
    {
        "content": "<p>\"Math in lean\"  6.1  states about functions on structures defined using pattern matching :</p>\n<p><code>Although it is sometimes convenient to define functions this way, the definitional properties are not as convenient. For example, the expressions addAlt a b and addAlt' a b cannot be simplified until we decompose a and b into components, which we can do with cases, rcases, etc.</code></p>\n<p>But when I comment out the mentioned bits, it stills typecheck (including with <code>simp only</code>)<br>\nIs it still relevant or has it been invalidated with lean 4 ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[ext]</span>\n<span class=\"kd\">structure</span> <span class=\"n\">Point</span> <span class=\"n\">where</span>\n  <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n  <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n  <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">addAlt</span> <span class=\"o\">:</span> <span class=\"n\">Point</span> <span class=\"bp\">→</span> <span class=\"n\">Point</span> <span class=\"bp\">→</span> <span class=\"n\">Point</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Point.mk</span> <span class=\"n\">x₁</span> <span class=\"n\">y₁</span> <span class=\"n\">z₁</span><span class=\"o\">,</span> <span class=\"n\">Point.mk</span> <span class=\"n\">x₂</span> <span class=\"n\">y₂</span> <span class=\"n\">z₂</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">⟨</span><span class=\"n\">x₁</span> <span class=\"bp\">+</span> <span class=\"n\">x₂</span><span class=\"o\">,</span> <span class=\"n\">y₁</span> <span class=\"bp\">+</span> <span class=\"n\">y₂</span><span class=\"o\">,</span> <span class=\"n\">z₁</span> <span class=\"bp\">+</span> <span class=\"n\">z₂</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Point</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">addAlt</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">addAlt</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">--rcases a with ⟨xa, ya, za⟩</span>\n  <span class=\"c1\">--rcases b with ⟨xb, yb, zb⟩</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">addAlt</span><span class=\"o\">,</span> <span class=\"n\">add_comm</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 386461198,
        "sender_full_name": "Nicolas Rolland",
        "timestamp": 1692646832
    },
    {
        "content": "<p>This changed in lean 4, though I think I opened an issue asking it to be changed back!</p>",
        "id": 386500509,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692666263
    }
]