[
    {
        "content": "<p>I've written my first non-trivial Lean function and would really appreciate feedback from more experienced Lean users about what I could be doing better.</p>\n<p>My goal was to iterate through a list with an index like <code>foldlIdx</code>, but with the index proven to be in-range via <code>Fin</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foldlIdx</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">l.length</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">init</span> <span class=\"o\">:</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">rec</span> <span class=\"n\">foldlIdx'</span> <span class=\"n\">state</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l'</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">l.length</span> <span class=\"bp\">=</span> <span class=\"n\">l'.length</span> <span class=\"bp\">+</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">l'</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">state</span>\n    <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"o\">::</span> <span class=\"n\">l''</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"k\">let</span> <span class=\"n\">isLt</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;</span> <span class=\"n\">l.length</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n        <span class=\"n\">simp</span>\n        <span class=\"n\">exact</span> <span class=\"n\">Nat.lt_add_of_pos_left</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ_pos</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n      <span class=\"k\">let</span> <span class=\"n\">h'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n        <span class=\"n\">simp</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.succ_eq_add_one</span><span class=\"o\">,</span> <span class=\"n\">Nat.add_right_comm</span><span class=\"o\">,</span> <span class=\"n\">Nat.add_assoc</span><span class=\"o\">]</span>\n      <span class=\"k\">let</span> <span class=\"n\">state'</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">isLt</span><span class=\"o\">⟩</span> <span class=\"n\">state</span> <span class=\"n\">x</span>\n      <span class=\"n\">foldlIdx'</span> <span class=\"n\">state'</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">l''</span> <span class=\"n\">h'</span>\n  <span class=\"n\">foldlIdx'</span> <span class=\"n\">init</span> <span class=\"mi\">0</span> <span class=\"n\">l</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 404029538,
        "sender_full_name": "Francisco Giordano",
        "timestamp": 1700867752
    }
]