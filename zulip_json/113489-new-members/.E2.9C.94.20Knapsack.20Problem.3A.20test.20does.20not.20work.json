[
    {
        "content": "<p>I want to formalize Knapsack Problem in Lean4.</p>\n<p>Here is my attempt.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Knapsack</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Item</span> <span class=\"n\">where</span>\n  <span class=\"n\">weight</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">price</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">deriving</span> <span class=\"n\">Repr</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Problem</span> <span class=\"n\">where</span>\n  <span class=\"n\">items</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Item</span>\n  <span class=\"n\">capacity</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">deriving</span> <span class=\"n\">Repr</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">List</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">problem1</span> <span class=\"o\">:</span> <span class=\"n\">Problem</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n    <span class=\"n\">items</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"n\">Item.mk</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">Item.mk</span> <span class=\"mi\">2</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">Item.mk</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span><span class=\"o\">]</span>\n    <span class=\"n\">capacity</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n  <span class=\"o\">}</span>\n\n<span class=\"sd\">/-- info: [{ weight := 1, price := 2 }, { weight := 2, price := 1 }, { weight := 3, price := 4 }] -/</span>\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span> <span class=\"k\">#eval</span> <span class=\"n\">problem1.items</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Feasible</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Problem</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">items</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Item</span>\n  <span class=\"n\">feasible</span> <span class=\"o\">:</span> <span class=\"n\">items</span> <span class=\"bp\">⊆</span> <span class=\"n\">P.items</span> <span class=\"bp\">∧</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">x.weight</span><span class=\"o\">)</span> <span class=\"n\">items</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">P.capacity</span>\n  <span class=\"n\">deriving</span> <span class=\"n\">Repr</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">eval</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Problem</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Feasible</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">x.price</span><span class=\"o\">)</span> <span class=\"n\">I.items</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">sol1</span> <span class=\"o\">:</span> <span class=\"n\">Feasible</span> <span class=\"n\">problem1</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n  <span class=\"n\">items</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"n\">Item.mk</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">]</span>\n  <span class=\"n\">feasible</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>How to replace above <code>sorry</code>? Is there a problem with my definition?</p>",
        "id": 398877055,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1698405047
    },
    {
        "content": "<p>You can just <code>simp [problem1]</code> to prove your <code>sorry</code></p>",
        "id": 398885377,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1698408329
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466290\">@Luigi Massacci</span>  Thanks</p>",
        "id": 398919290,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1698420115
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 398920755,
        "sender_full_name": "Notification Bot",
        "timestamp": 1698420515
    }
]