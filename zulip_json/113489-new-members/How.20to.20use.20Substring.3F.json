[
    {
        "content": "<p>I'm confused how to use substrings. What I want to do is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"s2\">\"asdf\"</span>\n<span class=\"k\">#eval</span> <span class=\"n\">s</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"o\">]</span><span class=\"bp\">?</span>  <span class=\"c1\">-- should give `some \"sd\"`</span>\n</code></pre></div>\n<p>In the <code>Substring</code> type, the only way it seems to be instantiated (according to loogle) is the constructor, while the start and end positions are wrapped. Surely, this isn't the way to do it?!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- I assume this is horrible!</span>\n<span class=\"k\">#eval</span> <span class=\"o\">{</span><span class=\"n\">str</span><span class=\"o\">:=</span><span class=\"s2\">\"asdf\"</span><span class=\"o\">,</span> <span class=\"n\">startPos</span><span class=\"o\">:=⟨</span><span class=\"mi\">1</span><span class=\"o\">⟩,</span> <span class=\"n\">stopPos</span><span class=\"o\">:=⟨</span><span class=\"mi\">3</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">Substring</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>(this works and just trims the positions to the string instead of giving an <code>Option</code>, which is fine too, I guess).</p>",
        "id": 405393982,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1701447029
    },
    {
        "content": "<p>Do you want a <code>Substring</code> per se, or are you wanting to get a sub-<code>String</code>? There's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=String.extract#doc\">docs#String.extract</a> for the latter</p>",
        "id": 405395374,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701447529
    },
    {
        "content": "<p>I guess what I really want is notation like <code>\"asdf\"[1:3]</code>. <code>extract</code> seems to do this but I don't really understand why I need to wrap the positions (presumably, writing <code>\"asdf\".extract ⟨1⟩ ⟨3⟩</code>).</p>",
        "id": 405395776,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1701447694
    },
    {
        "content": "<p>It's a warning that these are byte positions, so you might not be getting a valid utf8 string after extracting.</p>",
        "id": 405407392,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701451347
    },
    {
        "content": "<p>Ok, I guess that makes sense. That's also the reason then why the slice notation is not supported.</p>",
        "id": 405407529,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1701451397
    }
]