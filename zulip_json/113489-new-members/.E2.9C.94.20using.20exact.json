[
    {
        "content": "<p>In the following I can not use exact x:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">even_add_one'</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">odd</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">odd</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">even_add_one</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n <span class=\"c1\">-- exact x</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>What's the issue here?</p>",
        "id": 277001030,
        "sender_full_name": "Robert Watson",
        "timestamp": 1648558904
    },
    {
        "content": "<p>What issue do you see in the infoview? If I have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.parity</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">even_add_one'</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">odd</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">odd</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">even_add_one</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n <span class=\"c1\">-- exact x</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I see</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">even_add_one'</span>\n</code></pre></div>\n<p>on the line above exact, which is Lean saying the lemma you want doesn't exist</p>",
        "id": 277001503,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1648559155
    },
    {
        "content": "<p>Is there another lemma in the code you have on your  computer?</p>",
        "id": 277001630,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1648559205
    },
    {
        "content": "<p>What version of mathlib are you using, perhaps something changed recently?</p>",
        "id": 277001832,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1648559310
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">even_add_one</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">odd</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>This is from Example_Lean_Projects  even_and_odd.lean.</p>",
        "id": 277002067,
        "sender_full_name": "Robert Watson",
        "timestamp": 1648559418
    },
    {
        "content": "<p>With that code included everything works fine for me.</p>",
        "id": 277002145,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1648559474
    },
    {
        "content": "<p>It works only if I use:  use x instead of exact x</p>",
        "id": 277002348,
        "sender_full_name": "Robert Watson",
        "timestamp": 1648559589
    },
    {
        "content": "<p>What is the error message you see?</p>",
        "id": 277002401,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1648559618
    },
    {
        "content": "<p>Sorry...I've understood it now. There was code afterwards which was confusing me. I simply misread the info_view!! My bad!</p>",
        "id": 277002558,
        "sender_full_name": "Robert Watson",
        "timestamp": 1648559686
    },
    {
        "content": "<p>Is there a way to simplify the info_view to only show errors up to a certain point in the code?</p>",
        "id": 277002671,
        "sender_full_name": "Robert Watson",
        "timestamp": 1648559751
    },
    {
        "content": "<p>Or do I have to comment everything else out?</p>",
        "id": 277002755,
        "sender_full_name": "Robert Watson",
        "timestamp": 1648559781
    },
    {
        "content": "<p>Are you using vscode? At least for me any lines with errors have some sort of red underline, and then putting the cursor on that line makes the top of the info-view display the error (under <code>Messages</code> below the <code>Tactic state</code>, you can close the <code>All messages</code> part of the window below with the little triangle).<br>\nThe problems panel shows everything, but that normally isn't as good as the infoview</p>",
        "id": 277003304,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1648560041
    },
    {
        "content": "<p>Robert, you can choose to check only visible lines, there is something to click in the status bar.</p>",
        "id": 277003865,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648560319
    },
    {
        "content": "<p>You can also put an <code>#exit</code> after the lemma you are proving, but don't forget to remove it afterwards.</p>",
        "id": 277003919,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648560344
    },
    {
        "content": "<p>Note also that the error lens VSCode extension is very convenient if you have trouble locating errors in your code.</p>",
        "id": 277003998,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648560365
    },
    {
        "content": "<p>Got it (both of those)...#exit was what I was imagining, but the red underline and the show all messages needs getting used to. Will check out the status bar command next. Thx.</p>",
        "id": 277004664,
        "sender_full_name": "Robert Watson",
        "timestamp": 1648560714
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"410678\">Robert Watson</span> has marked this topic as resolved.</p>",
        "id": 277004740,
        "sender_full_name": "Notification Bot",
        "timestamp": 1648560732
    },
    {
        "content": "<p>Really, if you have trouble seeing that red underline (as many people do), check out <a href=\"https://marketplace.visualstudio.com/items?itemName=usernamehw.errorlens\">https://marketplace.visualstudio.com/items?itemName=usernamehw.errorlens</a></p>",
        "id": 277004926,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648560835
    },
    {
        "content": "<p>OK.   ... that was easy to install, and super clear!</p>",
        "id": 277007800,
        "sender_full_name": "Robert Watson",
        "timestamp": 1648562075
    }
]