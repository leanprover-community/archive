[
    {
        "content": "<p>I am struggling to understand how Prop and Bool interact. I defined the following lemma:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">Option.isSome_if</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Option.isSome</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">true</span> <span class=\"k\">then</span> <span class=\"n\">some</span> <span class=\"n\">v</span> <span class=\"k\">else</span> <span class=\"n\">none</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">split</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">case</span> <span class=\"n\">_</span> <span class=\"n\">ht</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">ht</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Option.isSome_none</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>But I am unable to use it in any meaningful way. For instance:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Option.isSome</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">12</span> <span class=\"k\">then</span> <span class=\"n\">some</span> <span class=\"n\">v</span> <span class=\"k\">else</span> <span class=\"n\">none</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">12</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Option.isSome_if</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>Is not accepted by Lean. I am almost certain my definition of the <code>Option.isSome_if</code> lemma is incorrectly stated. What am I doing wrong? Thanks.</p>",
        "id": 408691071,
        "sender_full_name": "Marcin Wojnarowski",
        "timestamp": 1702936241
    },
    {
        "content": "<p>The inferred definition of <code>Option.isSome_if</code> is <code>Option.isSome_if.{u_1} {α✝ : Type u_1} {v : α✝} {p : Prop} (h : isSome (if p = (true = true) then some v else none) = true) : p</code> which is rather strange with the <code>= (true = true)</code>. I thought I should be able to just define <code>Option.isSome_if</code> as <code>lemma Option.isSome_if {p : Prop} (h : Option.isSome (if p then some v else none)) : p</code> but that does not work either with the error message <code>failed to synthesize instance Decidable p</code>. I tried to add the Decidable bound but that too does not work.</p>",
        "id": 408691374,
        "sender_full_name": "Marcin Wojnarowski",
        "timestamp": 1702936515
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">Option.isSome_if</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Decidable</span> <span class=\"n\">p</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Option.isSome</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">p</span> <span class=\"k\">then</span> <span class=\"n\">some</span> <span class=\"n\">v</span> <span class=\"k\">else</span> <span class=\"n\">none</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">split</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">case</span> <span class=\"n\">_</span> <span class=\"n\">ht</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Option.isSome_none</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 408691438,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1702936552
    },
    {
        "content": "<p>oh, it works if the decidable bound is placed after {p : Prop} but not before? Why is that?</p>",
        "id": 408691538,
        "sender_full_name": "Marcin Wojnarowski",
        "timestamp": 1702936639
    },
    {
        "content": "<p>Arguments are read left to right; you need to declare <code>p</code> before you can say something about it</p>",
        "id": 408691640,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1702936703
    },
    {
        "content": "<p>Thank you</p>",
        "id": 408694071,
        "sender_full_name": "Marcin Wojnarowski",
        "timestamp": 1702938032
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"673052\">Marcin Wojnarowski</span> has marked this topic as resolved.</p>",
        "id": 408694079,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702938037
    }
]