[
    {
        "content": "<p>This thread is mainly to assist new members on how to search out appropriate Lemmas. I am new to Lean 4, and I need help on how to navigate or call appropriate lemmas in Lean Proof.<br>\nAny trick or suggestion will go a long way to help.<br>\nUseful resources will be appreciated.<br>\nThanks</p>",
        "id": 347219748,
        "sender_full_name": "David⚛️",
        "timestamp": 1680717196
    },
    {
        "content": "<p>The easiest way to find lemmas in mathlib are:</p>\n<ul>\n<li>the <code>library_search</code> tactic tries to prove your goal in one step using anything in the library. So you can write the signature of a theorem you think exists and see if this tactic proves the goal</li>\n<li>The <a href=\"https://leanprover-community.github.io/mathlib_docs/\">mathlib docs</a> can be searched to find lemmas by name or by docstring</li>\n<li>grep or file search in mathlib itself can also sometimes be helpful, and is often the fastest option although it's obviously not as smart as the other options</li>\n<li>The <a class=\"stream\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F\">#Is there code for X?</a> stream is human-powered mathlib search, you can ask about a theorem or area of mathematics and find out about what we currently have and near-term plans for where we are headed, PRs that are in limbo or work on peoples' local machines that you won't find through the other methods.</li>\n</ul>",
        "id": 347222158,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1680717873
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Lemma.20Help/near/347222158\">said</a>:</p>\n<blockquote>\n<p>The easiest way to find lemmas in mathlib are:</p>\n<ul>\n<li>the <code>library_search</code> tactic tries to prove your goal in one step using anything in the library. So you can write the signature of a theorem you think exists and see if this tactic proves the goal</li>\n<li>The <a href=\"https://leanprover-community.github.io/mathlib_docs/\">mathlib docs</a> can be searched to find lemmas by name or by docstring</li>\n<li>grep or file search in mathlib itself can also sometimes be helpful, and is often the fastest option although it's obviously not as smart as the other options</li>\n<li>The <a class=\"stream\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F\">#Is there code for X?</a> stream is human-powered mathlib search, you can ask about a theorem or area of mathematics and find out about what we currently have and near-term plans for where we are headed, PRs that are in limbo or work on peoples' local machines that you won't find through the other methods.</li>\n</ul>\n</blockquote>\n<p>Thank you</p>",
        "id": 347222514,
        "sender_full_name": "David⚛️",
        "timestamp": 1680717980
    },
    {
        "content": "<p>The mathlib 4 docs (<a href=\"https://leanprover-community.github.io/mathlib4_docs/\">https://leanprover-community.github.io/mathlib4_docs/</a>) is the one you want if you are using lean 4 though</p>",
        "id": 347227161,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1680719361
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Lemma.20Help/near/347222158\">said</a>:</p>\n<blockquote>\n<p>The easiest way to find lemmas in mathlib are:</p>\n<ul>\n<li>the <code>library_search</code> tactic tries to prove your goal in one step using anything in the library. So you can write the signature of a theorem you think exists and see if this tactic proves the goal</li>\n<li>The <a href=\"https://leanprover-community.github.io/mathlib_docs/\">mathlib docs</a> can be searched to find lemmas by name or by docstring</li>\n<li>grep or file search in mathlib itself can also sometimes be helpful, and is often the fastest option although it's obviously not as smart as the other options</li>\n<li>The <a class=\"stream\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F\">#Is there code for X?</a> stream is human-powered mathlib search, you can ask about a theorem or area of mathematics and find out about what we currently have and near-term plans for where we are headed, PRs that are in limbo or work on peoples' local machines that you won't find through the other methods.</li>\n</ul>\n</blockquote>\n<p>Hello Mario,<br>\nDoes library_search work for LEAN 4? is not working for me</p>",
        "id": 347477078,
        "sender_full_name": "David⚛️",
        "timestamp": 1680801116
    },
    {
        "content": "<p>Do <code>import Mathlib.Tactic.LibrarySearch</code> and you will have the same tactic as in Lean 3</p>",
        "id": 347477670,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680801260
    },
    {
        "content": "<p>How do I read this document (book) Theorem Proving in Lean 4 on vscode?<br>\nSuggestions, please.</p>",
        "id": 350952255,
        "sender_full_name": "David⚛️",
        "timestamp": 1681886142
    }
]