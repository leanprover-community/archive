[
    {
        "content": "<p>trying to formalize my friends formalization in haskell of a transformer computation model (RASP). was wondering if there's an int8 type builtin or importable</p>",
        "id": 403286101,
        "sender_full_name": "Alok Singh (S1'17)",
        "timestamp": 1700533861
    },
    {
        "content": "<p>it has <code>Int</code> and <code>UInt8</code></p>",
        "id": 403293847,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1700537552
    },
    {
        "content": "<p>Damn. I wanted int8s specifically. I guess I can do { n : Z // n &lt; 128 and<br>\nn &gt;=-128}.</p>",
        "id": 403296395,
        "sender_full_name": "Alok Singh (S1'17)",
        "timestamp": 1700538944
    },
    {
        "content": "<p>this code gets stuck at OfNat synthesis but I'm unsure how to define an instance ofnat for int8 since not all nats are valid int8s</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">Int8</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">:</span><span class=\"n\">Int</span> <span class=\"bp\">//</span> <span class=\"bp\">-</span><span class=\"mi\">128</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">∧</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">128</span> <span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">Int8.min</span><span class=\"o\">:</span> <span class=\"n\">Int8</span> <span class=\"o\">:=</span> <span class=\"bp\">-</span><span class=\"mi\">128</span>\n<span class=\"kd\">def</span> <span class=\"n\">Int8.max</span><span class=\"o\">:</span> <span class=\"n\">Int8</span> <span class=\"o\">:=</span> <span class=\"mi\">127</span>\n</code></pre></div>",
        "id": 405900763,
        "sender_full_name": "Alok Singh (S1'17)",
        "timestamp": 1701719354
    }
]