[
    {
        "content": "<p>In the proof of <code>t1</code>, <code>induction</code> in <code>t1</code> fails to induct on the hypothesis of <code> prop R (k, v) (w, r)</code> and I have to use a single variable for <code>(k, v)</code> and <code>(w, r)</code> to make it go through, as shown in <code>t2</code>. Is there a way that allows me to carry <code>(k, v)</code> over in the induction in <code>t1</code> as if it is a single variable?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">prop</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">):</span>  <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n<span class=\"bp\">|</span> <span class=\"n\">refl</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">prop</span> <span class=\"n\">R</span> <span class=\"n\">a</span> <span class=\"n\">a</span>\n<span class=\"bp\">|</span> <span class=\"n\">trans</span><span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">prop</span> <span class=\"n\">R</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">prop</span> <span class=\"n\">R</span> <span class=\"n\">a</span> <span class=\"n\">c</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">t1</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">):</span> <span class=\"n\">prop</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">induction</span> <span class=\"n\">h</span> <span class=\"c1\">-- failed</span>\n  <span class=\"c1\">-- index in target's type is not a variable (consider using the `cases` tactic instead)</span>\n  <span class=\"c1\">--  (k, v)</span>\n  <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">t2</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">kv</span> <span class=\"n\">wr</span><span class=\"o\">:</span> <span class=\"n\">kv</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">wr</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">w</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">prop</span> <span class=\"n\">R</span> <span class=\"n\">kv</span> <span class=\"n\">wr</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">hkv</span> <span class=\"n\">hwr</span> <span class=\"n\">h</span> <span class=\"c1\">-- or</span>\n  <span class=\"n\">induction</span> <span class=\"n\">h</span> <span class=\"c1\">-- ok</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 400069180,
        "sender_full_name": "Z. Wu",
        "timestamp": 1698990831
    }
]