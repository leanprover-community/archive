[
    {
        "content": "<p>I am looking for something like the following in Haskell and OCaml respectively</p>\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"nf\">withinRange</span><span class=\"w\"> </span><span class=\"ow\">::</span><span class=\"w\"> </span><span class=\"kt\">Int</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Bool</span>\n<span class=\"nf\">withinRange</span><span class=\"w\"> </span><span class=\"n\">x</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"kt\">True</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"kt\">True</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">otherwise</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"kt\">False</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"OCaml\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"n\">within_range</span> <span class=\"o\">=</span> <span class=\"k\">function</span>\n  <span class=\"o\">|</span> <span class=\"n\">x</span> <span class=\"k\">when</span> <span class=\"n\">x</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">x</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">10</span> <span class=\"o\">-&gt;</span> <span class=\"bp\">true</span>\n  <span class=\"o\">|</span> <span class=\"n\">x</span> <span class=\"k\">when</span> <span class=\"n\">x</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">20</span> <span class=\"o\">&amp;&amp;</span>  <span class=\"n\">x</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">30</span> <span class=\"o\">-&gt;</span> <span class=\"bp\">true</span>\n  <span class=\"o\">|</span> <span class=\"o\">_</span> <span class=\"o\">-&gt;</span> <span class=\"bp\">false</span>\n</code></pre></div>",
        "id": 409136233,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1703066608
    }
]