[
    {
        "content": "<p>How can I look up what a particular notation aliases? For example, what does the integral symbol ∫ (\\integral in VSCode) alias? The reason I want to know what it aliases is so that I can understand the difference between <code>∫ ω, B ω ∂μ</code> and <code>SimpleFunc.integral μ B</code> when <code>B</code> is a <code>SimpleFunc</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.ProbabilityMassFunction.Constructions</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Integral.Bochner</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.Moments</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span> <span class=\"n\">ProbabilityTheory</span> <span class=\"n\">NNReal</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Bernoulli</span>\n  <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">SimpleFunc</span> <span class=\"bp\">Ω</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">IsProbabilityMeasure</span> <span class=\"n\">μ</span><span class=\"o\">]</span>\n  <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">le_one</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"o\">:</span> <span class=\"n\">SimpleFunc.range</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">})</span>\n  <span class=\"o\">(</span><span class=\"n\">prob_0</span> <span class=\"o\">:</span> <span class=\"n\">μ</span> <span class=\"o\">{</span><span class=\"n\">w</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">p</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">prob_1</span> <span class=\"o\">:</span> <span class=\"n\">μ</span> <span class=\"o\">{</span><span class=\"n\">w</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- ∫ X ∂μ = p</span>\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">bernoulli_expectation_</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">SimpleFunc</span> <span class=\"bp\">Ω</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">IsProbabilityMeasure</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bernoulli</span> <span class=\"n\">B</span> <span class=\"n\">p</span> <span class=\"n\">μ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">SimpleFunc.integral</span> <span class=\"n\">μ</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">SimpleFunc.integral_eq</span><span class=\"o\">,</span> <span class=\"n\">h.range</span><span class=\"o\">,</span> <span class=\"n\">Finset.mem_singleton</span><span class=\"o\">,</span> <span class=\"n\">zero_ne_one</span><span class=\"o\">,</span> <span class=\"n\">smul_eq_mul</span><span class=\"o\">,</span>\n    <span class=\"n\">not_false_eq_true</span><span class=\"o\">,</span> <span class=\"n\">Finset.sum_insert</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">,</span> <span class=\"n\">Finset.sum_singleton</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">μ</span> <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"bp\">⁻¹'</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">})</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"n\">h.prob_1</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ENNReal.coe_toReal</span><span class=\"o\">,</span> <span class=\"n\">this</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">bernoulli_expectation</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">SimpleFunc</span> <span class=\"bp\">Ω</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">IsProbabilityMeasure</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bernoulli</span> <span class=\"n\">B</span> <span class=\"n\">p</span> <span class=\"n\">μ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∫</span> <span class=\"n\">ω</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"n\">ω</span> <span class=\"bp\">∂</span><span class=\"n\">μ</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">bernoulli_expectation_</span><span class=\"o\">]</span> <span class=\"c1\">-- does not work</span>\n</code></pre></div>",
        "id": 401584136,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699770134
    },
    {
        "content": "<p>In Vs code, you can put your cursor after the notation and hit f12</p>",
        "id": 401589670,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1699775964
    },
    {
        "content": "<p>Or right click and do \"go to definition\", which is what the keyboard shortcut does.</p>",
        "id": 401628627,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699810398
    },
    {
        "content": "<p>You can also set <code>set_option pp notation false</code>. Then write <code>#check</code> on whatever term with notation and it will be displayed back without notation.</p>",
        "id": 401766646,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1699883388
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"346070\">@Tomas Skrivan</span> , I get <code>unexpected token 'notation'; expected 'false', 'true', numeral or string literal</code> when I type <code>set_option pp notation false</code> on a new line.</p>",
        "id": 401839244,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699907078
    },
    {
        "content": "<p>Ahh I missed a dot, should be <code>set_option pp.notation false</code></p>",
        "id": 401839401,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1699907149
    },
    {
        "content": "<p>thank you</p>",
        "id": 401840066,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699907475
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"414458\">Vasily Ilin</span> has marked this topic as resolved.</p>",
        "id": 401840070,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699907481
    }
]