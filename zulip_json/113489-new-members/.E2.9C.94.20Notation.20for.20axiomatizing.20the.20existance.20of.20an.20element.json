[
    {
        "content": "<p>Hello, </p>\n<p>I was wondering if there is a nice way to axiomatize a statement of the form </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"bp\">∃</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">P₁</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">P₂</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>in the sense that if I just write </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">axiom</span> <span class=\"bp\">∃</span> <span class=\"n\">v</span> <span class=\"o\">:</span>  <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">P₁</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">P₂</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>it becomes rather awkward to use in other theorems. Is there nice notation like that of  <code>variable</code>?<br>\nSomething like this would be much nicer: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span>  <span class=\"o\">:</span>  <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kd\">axiom</span> <span class=\"n\">ax1</span> <span class=\"o\">:</span> <span class=\"n\">stuff</span> <span class=\"n\">v</span>\n<span class=\"bp\">...</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">th1</span> <span class=\"o\">:</span>  <span class=\"n\">more_stuff</span>  <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n     <span class=\"bp\">...</span>\n    <span class=\"n\">stuff</span> <span class=\"k\">with</span> <span class=\"n\">ax1</span>\n</code></pre></div>\n<p>except of course that this way <code>ax1</code> quantifies over a generic <code>v</code> with is not at all what I want.</p>\n<p>I hope the question is clear.</p>",
        "id": 392579719,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1695407532
    },
    {
        "content": "<p>Is this the kind of thing you're looking for?:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">axiom</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">P₁</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">P₂</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"bp\">...</span>\n</code></pre></div>",
        "id": 392580498,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1695407875
    },
    {
        "content": "<p>You can use <code>axiom</code> with any type (maybe <code>constant</code>)</p>",
        "id": 392580507,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1695407881
    },
    {
        "content": "<p>I swear I tried that an hour ago and it complained, I just re-did it and it worked...</p>",
        "id": 392580655,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1695407940
    },
    {
        "content": "<p>Thanks a lot anyway that's what I was looking for!</p>",
        "id": 392580687,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1695407951
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466290\">Luigi Massacci</span> has marked this topic as resolved.</p>",
        "id": 392580926,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695408052
    }
]