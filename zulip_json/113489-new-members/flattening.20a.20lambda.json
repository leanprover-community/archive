[
    {
        "content": "<p>What's the easiest way to turn <code>(fun x =&gt; p x)</code> into just p? Is this definitionally equivalent or what? <code>simp</code> does it but I try to avoid it, and <code>simp?</code> doesn't tell me how</p>\n<p>(also tips on how to look this up in the future are welcome)</p>",
        "id": 403276553,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1700529165
    },
    {
        "content": "<p>I think it's <code>beta_reduce</code>.</p>",
        "id": 403276668,
        "sender_full_name": "Yongyi Chen",
        "timestamp": 1700529210
    },
    {
        "content": "<p>Hmm, seems close but no cigar: \"This means that whenever there is an applied lambda expression such as (fun x =&gt; f x) y then the argument is substituted into the lambda expression yielding an expression such as f y.\"</p>",
        "id": 403276929,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1700529330
    },
    {
        "content": "<p>Oh, found it. :) It's <code>eta_reduce</code>. Thanks for the tip in the right direction!</p>",
        "id": 403277071,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1700529383
    },
    {
        "content": "<p>I would do <code>simp only</code> or <code>dsimp only</code> to do this sort of reduction normally. Nothing wrong with eta_reduce per se but it requires you having to remember which Greek letter is which</p>",
        "id": 403281593,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700531760
    }
]