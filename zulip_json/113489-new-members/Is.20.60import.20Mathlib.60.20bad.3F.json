[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/Debugging.20coercions/near/400320396\">said</a>:</p>\n<blockquote>\n<p>You might also consider importing just the parts of mathlib you need, which helps a bit with reducing the number of instances you need to be aware of. Mathlib developers don't recommend importing all of mathlib in general, even for mathematical applications.</p>\n</blockquote>\n<p>Doing <code>import Mathlib</code> was suggested to me (I think by Kevin Buzzard, although I can't find the message anymore, so maybe it was someone else) when I was failing to find lemmas (with <code>exact?, apply?, rw?, simp?</code>, I assume <code>aesop</code> also only finds imported lemmas).</p>\n<p>Is there consensus that doing <code>import Mathlib</code> is not a good idea? It's tricky to import all the things that might have useful lemmas... How does one do this?</p>",
        "id": 400411063,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1699206281
    },
    {
        "content": "<p>If you want tactics to work then <code>import Mathlib.Tactic</code> is a much better idea.</p>",
        "id": 400411215,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699206451
    },
    {
        "content": "<p>But if I do that, <code>apply?</code> won't find lemmas, or will it? (Did I accuse (not meant as such, of course) you wrongly about <code>import Mathlib</code>? Sorry if I did :)</p>",
        "id": 400411297,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1699206518
    },
    {
        "content": "<p>It will only find the lemmas you have imported (i.e. a huge number of lemmas, if you import <code>Mathlib.Tactic</code>)</p>",
        "id": 400413178,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699208407
    },
    {
        "content": "<p>How do experienced people decide what to import? Is missing an import something that holds them up sometimes? It it hard to find a set of imports for a new project? Does someone working in a certain field of math eventually settle on using the same imports every time? Or do you decide for each file what imports to use and how?</p>",
        "id": 400414122,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1699209284
    },
    {
        "content": "<p>If your imports are enough to state the theorems you want to work on, you've probably imported enough to have all the necessary lemmas.</p>",
        "id": 400415939,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699210774
    },
    {
        "content": "<p>I'm curious what you consider to be bad about importing all of mathlib while working, Kevin. Does it cause issues for you?</p>",
        "id": 400416510,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1699211155
    },
    {
        "content": "<p>I'm fine with importing all of mathlib. Did you mean to address that to Kyle?</p>",
        "id": 400416796,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699211402
    },
    {
        "content": "<p>Personally I import whatever I need to state what I want. Then when I need a lemma that's not imported, I import the file where the lemma lives. But I have an encyclopedic knowledge of the library and never use <code>apply?</code> or <code>exact?</code>. All I use is the online docs.</p>",
        "id": 400418082,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699212778
    },
    {
        "content": "<p><del>Could someone move the discussion starting with \"import Mathlib yes or no\" to a new topic? I think it might help people who later want to read about that exact topic (which surely also comes up often). At the same time it's probably not relevant for people who want to debug coercions. (I'm assuming I don't have permission to move things or at least don't see how)</del></p>\n<p><del>(Not to derange the discussion again, but this is something I like about StackOverflow (the use of which I've seen discouraged here on Zulip) to complement this style of discussion, because it's much more focused and later readers get a complete high-quality answer instead of piecing together the process where some individual with unique prerequisites and misunderstandings was taught something, which is of course amazing for that individual)</del></p>",
        "id": 400419554,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1699214519
    },
    {
        "content": "<blockquote>\n<p>(I'm assuming I don't have permission to move things or at least don't see how)</p>\n</blockquote>\n<p>Everyone should have the permission to move threads. Select \"move messages\" from the \"...\" next to any post and you can move either the selected message or it and everything after to another thread name in the same stream. (Only moderators can move messages to another stream.)</p>",
        "id": 400449776,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699240504
    },
    {
        "content": "<p>11 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/Debugging.20coercions\">#new members &gt; Debugging coercions</a> by <span class=\"user-mention silent\" data-user-id=\"638715\">Adomas Baliuka</span>.</p>",
        "id": 400544459,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699281412
    },
    {
        "content": "<p>I would generally <code>import Mathlib</code> while writing something, and then when I'm done try and work out what imports I actually need</p>",
        "id": 400554387,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1699284137
    },
    {
        "content": "<blockquote>\n<p>and work out what imports I actually need</p>\n</blockquote>\n<p>Do you do that work, or does <code>#minimize_imports</code> do it for you?</p>",
        "id": 400574116,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699289456
    },
    {
        "content": "<p>I think it's fine doing <code>import Mathlib</code> when testing things out, but projects should avoid <code>import Mathlib</code> because the library as a whole is much less stable than individual parts of the library; there's less testing that, for example, instances between different parts of the library don't conflict in an unpleasant way. Another reason is not so important, but you might also avoid it because if you update Mathlib in your project, then everything that imports Mathlib is sure to need to be recompiled, vs only the parts that import modules that have (transitively) changed.</p>\n<p>That said, if you do run into any issues with <code>import Mathlib</code>, please report them! I think it <em>should</em> work, but caveat emptor <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 400579923,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699291457
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/113489-new-members/topic/Is.20.60import.20Mathlib.60.20bad.3F/near/400574116\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>and work out what imports I actually need</p>\n</blockquote>\n<p>Do you do that work, or does <code>#minimize_imports</code> do it for you?</p>\n</blockquote>\n<p>normally I do it by hand, but that is probably a bad habit <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 400580438,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1699291640
    },
    {
        "content": "<p>On the other hand am I right that there is no way to add the whole <code>Mathlib</code>folder automatically in <code>Mathlib.lean</code>? I mean, I guess this is made automatically by some trick <em>for mathlib</em>, but in a project, I still have the <code>MyProject.lean</code> file that I have to fill by hand each time I create a new file, right? Wouldn't it be great if I could tell just add an <code>import MyProject.*</code> to mean <code>import</code>all files in the folder?</p>",
        "id": 400580744,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1699291773
    },
    {
        "content": "<p>You can put</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">globs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"bp\">.</span><span class=\"n\">submodules</span> <span class=\"bp\">`</span><span class=\"n\">MyProject</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>in the <code>lean_lib</code> of your lakefile, that should add all files to the library without needing to maintain <code>MyProject.lean</code></p>",
        "id": 400581901,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1699292256
    },
    {
        "content": "<p>Oh great! You mean that I have to replace</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">MyProject</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"n\">moreLeanArgs</span> <span class=\"o\">:=</span> <span class=\"n\">moreLeanArgs</span>\n  <span class=\"n\">weakLeanArgs</span> <span class=\"o\">:=</span> <span class=\"n\">weakLeanArgs</span>\n  <span class=\"c1\">-- add any library configuration options here</span>\n</code></pre></div>\n<p>by</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">MyProject</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"n\">moreLeanArgs</span> <span class=\"o\">:=</span> <span class=\"n\">moreLeanArgs</span>\n  <span class=\"n\">weakLeanArgs</span> <span class=\"o\">:=</span> <span class=\"n\">weakLeanArgs</span>\n  <span class=\"n\">globs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"bp\">.</span><span class=\"n\">submodules</span> <span class=\"bp\">`</span><span class=\"n\">MyProject</span><span class=\"o\">]</span>\n  <span class=\"c1\">-- add any library configuration options here</span>\n</code></pre></div>\n<p>right?</p>",
        "id": 400582201,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1699292390
    },
    {
        "content": "<p>Yes that should be it</p>",
        "id": 400583080,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1699292740
    },
    {
        "content": "<p>Yes, great! Thanks.</p>",
        "id": 400584373,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1699293265
    },
    {
        "content": "<p>There was also <a href=\"#narrow/stream/270676-lean4/topic/Reintroducing.20default.2Elean/near/391646671\">this earlier thread</a>, where you could import directly from your file all paths that begin with a certain string.</p>",
        "id": 400606627,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1699303019
    },
    {
        "content": "<p>Oh, nice! Thanks.</p>",
        "id": 400623131,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1699310389
    }
]