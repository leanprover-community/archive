[
    {
        "content": "<p>After installing Pygments and minted, and setting up the files as required, I ran the example code from <a href=\"https://lean-lang.org/lean4/doc/syntax_highlight_in_latex.html\">https://lean-lang.org/lean4/doc/syntax_highlight_in_latex.html</a>. <br>\nI got the following error</p>\n<blockquote>\n<p>(C:\\Users\\admin\\AppData\\Local\\Programs\\MiKTeX\\tex/latex/base\\ts1cmr.fd)<br>\n(_minted-test/default.pygstyle)Error: no lexer for alias 'lean4.py:Lean4Lexer -x' found<br>\n! Package minted Error: Missing Pygments output; \\inputminted was<br>\nprobably given a file that does not exist--otherwise, you may need <br>\nthe outputdir package option, or may be using an incompatible build tool,<br>\nor may be using frozencache with a missing file.</p>\n</blockquote>",
        "id": 406959183,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1702144532
    },
    {
        "content": "<p>It looks like you forgot to save the <code>lean4.py</code> file next to your tex file</p>",
        "id": 406959601,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702144867
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/406959601\">said</a>:</p>\n<blockquote>\n<p>It looks like you forgot to save the <code>lean4.py</code> file next to your tex file</p>\n</blockquote>\n<p>No ....<br>\n<a href=\"/user_uploads/3121/QRZ7ziJgaq2o2KN19N9xP2Q7/files.jpg\">files.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/QRZ7ziJgaq2o2KN19N9xP2Q7/files.jpg\" title=\"files.jpg\"><img src=\"/user_uploads/3121/QRZ7ziJgaq2o2KN19N9xP2Q7/files.jpg\"></a></div>",
        "id": 406960318,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1702145403
    },
    {
        "content": "<p>This is a static error message, it could actually be caused by quite a few different reasons: <a href=\"https://tex.stackexchange.com/questions/440511/package-minted-error-missing-pygments-output\">https://tex.stackexchange.com/questions/440511/package-minted-error-missing-pygments-output</a></p>",
        "id": 406961090,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702146135
    },
    {
        "content": "<p>It would be worth checking if things work with <code>lean</code> (aka lean3) instead of <code>lean4.py:Lean4Lexer -x</code> first (which is built in to pygments)</p>",
        "id": 406961248,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702146290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> : I tried the suggestions from stackexchange. Adding <code>cache=false</code> to <code>\\userpackage{minted}</code> removed the errors concerning the cache, but I still get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">admin</span><span class=\"bp\">\\</span><span class=\"n\">AppData</span><span class=\"bp\">\\</span><span class=\"n\">Local</span><span class=\"bp\">\\</span><span class=\"n\">Programs</span><span class=\"bp\">\\</span><span class=\"n\">MiKTeX</span><span class=\"bp\">\\</span><span class=\"n\">tex</span><span class=\"bp\">/</span><span class=\"n\">latex</span><span class=\"bp\">/</span><span class=\"n\">base</span><span class=\"bp\">\\</span><span class=\"n\">ts1cmr.fd</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">test.out.pyg</span><span class=\"o\">)</span><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">lexer</span> <span class=\"n\">for</span> <span class=\"n\">alias</span> <span class=\"bp\">'</span><span class=\"n\">lean4.py</span><span class=\"o\">:</span><span class=\"n\">Lean4Lexer</span> <span class=\"bp\">-</span><span class=\"n\">x'</span> <span class=\"n\">found</span>\n</code></pre></div>\n<p>The permissions were OK.</p>\n<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> :  Is this what you mean?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">newmintinline</span><span class=\"o\">[</span><span class=\"n\">lean</span><span class=\"o\">]{</span><span class=\"n\">lean.py</span><span class=\"o\">:</span><span class=\"n\">LeanLexer</span> <span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">}{</span><span class=\"n\">bgcolor</span><span class=\"bp\">=</span><span class=\"n\">white</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newminted</span><span class=\"o\">[</span><span class=\"n\">leancode</span><span class=\"o\">]{</span><span class=\"n\">lean.py</span><span class=\"o\">:</span><span class=\"n\">LeanLexer</span> <span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">}{</span><span class=\"n\">fontsize</span><span class=\"bp\">=\\</span><span class=\"n\">footnotesize</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>No change.</p>",
        "id": 406965344,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1702150125
    },
    {
        "content": "<p>I mean replace <code>lean4.py:Lean4Lexer -x</code> with <code>lean</code>, not with <code>lean.py:LeanLexer -x</code></p>",
        "id": 406965684,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702150458
    },
    {
        "content": "<p>This will use the lean3 highlighting, but it will tell you whether the problem is to do with lean4.py or minted</p>",
        "id": 406965705,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702150487
    },
    {
        "content": "<p><del>OK, I've reproduced the error and solved it.</del></p>",
        "id": 407011049,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702184413
    },
    {
        "content": "<p>2 key issues for me:</p>\n<ol>\n<li>My LaTeX compile command is <code>xelatex --shell-escape -output-directory=../print print.tex</code> which changed output directory, so I need to use option <code>outputdir=../print</code> for minted</li>\n<li>For some reasons, cache also doesn't work properly in this case, so I also need <code>cache=false</code>.</li>\n</ol>\n<p>Result:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">[</span><span class=\"n\">cache</span><span class=\"bp\">=</span><span class=\"n\">false</span><span class=\"o\">,</span><span class=\"n\">outputdir</span><span class=\"bp\">=../</span><span class=\"n\">print</span><span class=\"o\">]{</span><span class=\"n\">minted</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 407011851,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702184868
    },
    {
        "content": "<p>The above only caused a delusion, LaTeX no longer error, but there is also no code highlight output. The true issue is the quoting. Looking into the LaTeX log (<code>../print/print.log</code> for me), there is a command:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">pygmentize</span> <span class=\"bp\">-</span><span class=\"n\">l</span> <span class=\"bp\">'</span><span class=\"n\">lean4.py</span><span class=\"o\">:</span><span class=\"n\">Lean4Lexer</span> <span class=\"bp\">-</span><span class=\"n\">x'</span> <span class=\"bp\">-</span><span class=\"n\">f</span> <span class=\"n\">latex</span> <span class=\"bp\">-</span><span class=\"n\">P</span> <span class=\"n\">commandprefix</span><span class=\"bp\">=</span><span class=\"n\">PYG</span>\n<span class=\"bp\">-</span><span class=\"n\">F</span> <span class=\"n\">tokenmerge</span> <span class=\"bp\">-</span><span class=\"n\">P</span> <span class=\"n\">stripnl</span><span class=\"bp\">='</span><span class=\"n\">False'</span> <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"bp\">../</span><span class=\"n\">print</span><span class=\"bp\">/</span><span class=\"n\">_minted</span><span class=\"bp\">-</span><span class=\"n\">print</span><span class=\"bp\">/</span><span class=\"mi\">0</span><span class=\"n\">E5380BA5684F7C1B2CE</span>\n<span class=\"mi\">81</span><span class=\"n\">B5A73A997A0298A94EFC840CC8AEFBE5423A43D7A4.pygtex</span> <span class=\"bp\">../</span><span class=\"n\">print</span><span class=\"bp\">/</span><span class=\"n\">print.pyg</span>\n</code></pre></div>\n<p>merge it into one line and execute in the same directory of your LaTeX main source file and the lean4.py, this will also error. But if you remove the single quotes, it works fine, and you can see <code>pygtex</code> files generated in <code>_minted-print</code>. This is caused by <a href=\"https://github.com/gpoore/minted/pull/360\">gpoore/minted#360</a> .</p>",
        "id": 407013796,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702186544
    },
    {
        "content": "<p><a href=\"https://github.com/opencompl/paper-template/pull/37\">A complicated workaround that requires adaptation</a> is also provided in the issue, by overriding some macros in the LaTeX preamble. This issue is a \"won't fix\" for minted, instead minted will release a new way to support custom lexers which will release by early 2024. <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 407014045,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702186779
    },
    {
        "content": "<p>I have <a href=\"https://github.com/utensil/lean-ga/commit/85c4f7d8b7eced3604a9e8a9521ed4507e291c8f#diff-6c8fe6c308e8b7b6b6ff2547f70c264266f7bc7847931afb5e0a8ff538d03b8a\">my adapted fix here</a> for your reference (you only need to check <code>preamble.tex</code> and <code>fix_minted.tex</code>), the issue itself is solved, but another minted issue involving \"missing $ is inserted\" surfaced, and I don't have any more time for minted.</p>",
        "id": 407017195,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702189413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> What do I do with <code>preamble.tex</code> and <code>fix_minted.tex</code>? MiKTeX just installed a style file for minted. Should I also use the new <code>lean4.tex</code> and <code>lean4.py</code>?</p>",
        "id": 407023817,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1702194964
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"667469\">Moti Ben-Ari</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407023817\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> What do I do with <code>preamble.tex</code> and <code>fix_minted.tex</code>? MiKTeX just installed a style file for minted. Should I also use the new <code>lean4.tex</code> and <code>lean4.py</code>?</p>\n</blockquote>\n<p>You only need to add <code>fix_minted.tex</code>, and use <code>\\input</code> to include it in the location you observed in <code>preamble.tex</code> (that is somewhere afer your <code>\\usepackage{minted}</code>) in your own preamble file which might be named differently. Everything else are irrelevant.</p>",
        "id": 407024012,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702195104
    },
    {
        "content": "<p>My native language is LaTeX <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> but I'm way out of my depth with minted and pygments. The following</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">documentclass</span><span class=\"o\">{</span><span class=\"n\">article</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">fontspec</span><span class=\"o\">}</span>\n<span class=\"bp\">%</span> <span class=\"n\">switch</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">monospace</span> <span class=\"n\">font</span> <span class=\"n\">supporting</span> <span class=\"n\">more</span> <span class=\"n\">Unicode</span> <span class=\"n\">characters</span>\n<span class=\"bp\">\\</span><span class=\"n\">setmonofont</span><span class=\"o\">{</span><span class=\"n\">FreeMono</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">[</span><span class=\"n\">cache</span><span class=\"bp\">=</span><span class=\"n\">false</span><span class=\"o\">]{</span><span class=\"n\">minted</span><span class=\"o\">}</span>\n<span class=\"bp\">%</span> <span class=\"n\">instruct</span> <span class=\"n\">minted</span> <span class=\"n\">to</span> <span class=\"n\">use</span> <span class=\"n\">our</span> <span class=\"kn\">local</span> <span class=\"kd\">theorem</span><span class=\"bp\">.</span><span class=\"n\">py</span>\n<span class=\"bp\">\\</span><span class=\"n\">newmintinline</span><span class=\"o\">[</span><span class=\"n\">lean</span><span class=\"o\">]{</span><span class=\"n\">lean4.py</span><span class=\"o\">:</span><span class=\"n\">Lean4Lexer</span> <span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">}{</span><span class=\"n\">bgcolor</span><span class=\"bp\">=</span><span class=\"n\">white</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newminted</span><span class=\"o\">[</span><span class=\"n\">leancode</span><span class=\"o\">]{</span><span class=\"n\">lean4.py</span><span class=\"o\">:</span><span class=\"n\">Lean4Lexer</span> <span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">}{</span><span class=\"n\">fontsize</span><span class=\"bp\">=\\</span><span class=\"n\">footnotesize</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usemintedstyle</span><span class=\"o\">{</span><span class=\"n\">tango</span><span class=\"o\">}</span>  <span class=\"bp\">%</span> <span class=\"n\">a</span> <span class=\"n\">nice</span><span class=\"o\">,</span> <span class=\"n\">colorful</span> <span class=\"n\">theme</span>\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">input</span><span class=\"o\">{</span><span class=\"n\">fix_minted</span><span class=\"o\">}</span>   <span class=\"bp\">%%%%%%%%%</span> <span class=\"bp\">&lt;-</span> <span class=\"bp\">???</span>\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">leancode</span><span class=\"o\">}</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">funext</span> <span class=\"o\">{</span><span class=\"n\">f₁</span> <span class=\"n\">f₂</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"n\">x</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f₁</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f₂</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f₁</span> <span class=\"bp\">=</span> <span class=\"n\">f₂</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">show</span> <span class=\"n\">extfunApp</span> <span class=\"o\">(</span><span class=\"n\">Quotient.mk'</span> <span class=\"n\">f₁</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">extfunApp</span> <span class=\"o\">(</span><span class=\"n\">Quotient.mk'</span> <span class=\"n\">f₂</span><span class=\"o\">)</span>\n  <span class=\"n\">apply</span> <span class=\"n\">congrArg</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Quotient.sound</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">leancode</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>gives a <code>missing $ inserted error</code>. In <code>preamble.tex</code>the path is <code>blueprint/src/</code> which I can't find.</p>\n<p>Sorry if I'm taking up too much of your time! It's not urgent and I can wait for the official fix.</p>",
        "id": 407026409,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1702196689
    },
    {
        "content": "<p><code>\\input{fix_minted}</code> needs to be before <code>\\newmintinline</code> etc., immediately after <code>\\usepackage[cache=false]{minted}</code>.</p>",
        "id": 407026615,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702196864
    },
    {
        "content": "<p>Since I don't need syntax highlighting for now, I found a simple way to get monospaced text with the unicode symbols</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">documentclass</span><span class=\"o\">{</span><span class=\"n\">article</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">times</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">fontspec</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">setmonofont</span><span class=\"o\">{</span><span class=\"n\">FreeMono</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">parindent</span><span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"n\">pt</span>\n<span class=\"bp\">\\</span><span class=\"n\">newcommand</span><span class=\"bp\">*</span><span class=\"o\">{</span><span class=\"bp\">\\</span><span class=\"n\">ind</span><span class=\"o\">}{</span><span class=\"bp\">\\</span><span class=\"n\">hspace</span><span class=\"bp\">*</span><span class=\"o\">{</span><span class=\"mi\">2</span><span class=\"n\">em</span><span class=\"o\">}}</span>\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n<span class=\"n\">How</span> <span class=\"n\">to</span> <span class=\"n\">format</span> <span class=\"bp\">$\\</span><span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"o\">(</span> <span class=\"n\">f_1</span><span class=\"bp\">\\</span><span class=\"n\">neq</span> <span class=\"n\">f_2</span><span class=\"o\">)</span><span class=\"bp\">=</span><span class=\"n\">f_1</span><span class=\"bp\">$</span><span class=\"o\">:</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">ttfamily</span><span class=\"o\">}</span>\n<span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f₁</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f₂</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f₁</span> <span class=\"bp\">≠</span> <span class=\"n\">f₂</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span><span class=\"bp\">\\\\</span>\n<span class=\"bp\">\\</span><span class=\"n\">ind</span><span class=\"o\">{}</span><span class=\"k\">show</span> <span class=\"n\">extfunApp</span> <span class=\"o\">(</span><span class=\"n\">Quotient.mk'</span> <span class=\"n\">f₁</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">\\\\</span>\n<span class=\"bp\">\\</span><span class=\"n\">ind</span><span class=\"o\">{}</span><span class=\"bp\">\\</span><span class=\"n\">ind</span><span class=\"o\">{}</span><span class=\"n\">extfunApp</span> <span class=\"o\">(</span><span class=\"n\">Quotient.mk'</span> <span class=\"n\">f₂</span><span class=\"o\">)</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">ttfamily</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/3121/uEdFwF_VHoEveOZNn23rDDAp/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/uEdFwF_VHoEveOZNn23rDDAp/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/uEdFwF_VHoEveOZNn23rDDAp/image.png\"></a></div><p>When the minted stuff gets fixed it will be easy to change by a global replace.</p>",
        "id": 407039597,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1702203045
    },
    {
        "content": "<p>If that's all you need, any variant of verbatim would suffice.</p>",
        "id": 407039947,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702203145
    },
    {
        "content": "<p>Or you could just use the <code>listings</code> choice, which works fine for me.</p>",
        "id": 407040087,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702203191
    },
    {
        "content": "<p>Previously I got minted working for the old Lean lexer (presumably Lean 3 only but works most of the time for Lean 4 too) but didn't like how it floods the LaTeX output and the need of shell escape so I stopped using it.</p>",
        "id": 407040465,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702203302
    },
    {
        "content": "<p>At some point verbatim didn't work but now it does!</p>",
        "id": 407042298,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1702203795
    },
    {
        "content": "<p>But minted has a nice feature of <code>mathescape</code> which I think is particularly useful for Lean code/proof (so does lstlisting).</p>\n<p><a href=\"/user_uploads/3121/2sy8kpfgHogF7hsnFYWuzI2B/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/2sy8kpfgHogF7hsnFYWuzI2B/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/2sy8kpfgHogF7hsnFYWuzI2B/image.png\"></a></div>",
        "id": 407045610,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702204883
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407039947\">said</a>:</p>\n<blockquote>\n<p>If that's all you need, any variant of verbatim would suffice.</p>\n</blockquote>\n<p>Have you tried <code>moreverb</code> or <code>fancyvrb</code>?</p>",
        "id": 407045679,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702204921
    },
    {
        "content": "<p>You can also just use minted with the built-in lean 3 highlighter, which is better than nothing but less work than the hack to use the custom lean 4 highlighter</p>",
        "id": 407046037,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702205082
    },
    {
        "content": "<p>Ideally we'd just upstream the lean 4 highlighter into pygments, though I think it's based off an old version of the lean 3 one and should probably integrate the subsequent changes first</p>",
        "id": 407046173,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702205158
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407046037\">said</a>:</p>\n<blockquote>\n<p>You can also just use minted with the built-in lean 3 highlighter, which is better than nothing but less work than the hack to use the custom lean 4 highlighter</p>\n</blockquote>\n<p>Which could take <a href=\"https://github.com/utensil/lean-ga/commit/b2524e661ea318a443437238db239b2710b33d00\">this commit</a> for reference. It worked.</p>",
        "id": 407046327,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702205216
    },
    {
        "content": "<p>That still looks like it uses a custom lexer?</p>",
        "id": 407048094,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702205851
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407048094\">said</a>:</p>\n<blockquote>\n<p>That still looks like it uses a custom lexer?</p>\n</blockquote>\n<p>Yep, do you have some pre-custom lexer code for this? I haven't tested that lately.</p>",
        "id": 407048296,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702205906
    },
    {
        "content": "<p>Lean3 is built-in to minted</p>",
        "id": 407048336,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702205919
    },
    {
        "content": "<p>No custom lexer needed</p>",
        "id": 407048364,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702205927
    },
    {
        "content": "<p>Just ask minted for <code>lean</code> like you would <code>python</code></p>",
        "id": 407048465,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702205958
    },
    {
        "content": "<p>(As of the latest pygments release you can also use <code>lean3</code>, though I don't know how pygments releases interact with TeX live releases)</p>",
        "id": 407048989,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702206093
    },
    {
        "content": "<p>Oh, just checked, yes, previously it was just</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">minted</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">setminted</span><span class=\"o\">{</span>\n  <span class=\"n\">fontsize</span><span class=\"bp\">=\\</span><span class=\"n\">scriptsize</span><span class=\"o\">,</span>\n  <span class=\"n\">frame</span><span class=\"bp\">=</span><span class=\"n\">single</span><span class=\"o\">,</span>\n  <span class=\"n\">breaklines</span><span class=\"o\">,</span>\n  <span class=\"n\">samepage</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">mintinline</span><span class=\"o\">{</span><span class=\"n\">lean</span><span class=\"o\">}{</span><span class=\"n\">some_lean_code</span><span class=\"o\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">minted</span><span class=\"o\">}[</span><span class=\"n\">autogobble</span><span class=\"o\">]{</span><span class=\"n\">lean</span><span class=\"o\">}</span>\n<span class=\"n\">some_longer_lean_code</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">minted</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 407049235,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702206143
    },
    {
        "content": "<p>I created <a href=\"https://github.com/leanprover/lean4/pull/3047\">lean4#3047</a></p>",
        "id": 407065771,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702212694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407065771\">said</a>:</p>\n<blockquote>\n<p>I created <a href=\"https://github.com/leanprover/lean4/pull/3047\">lean4#3047</a></p>\n</blockquote>\n<p>Probably guiding users to that issue is not gonna help, the workaround has not been confirmed to work.</p>",
        "id": 407066851,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702213437
    },
    {
        "content": "<p><a href=\"https://github.com/gpoore/minted/pull/350\">gpoore/minted#350</a> looks more promising.</p>",
        "id": 407067550,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702213846
    },
    {
        "content": "<p>Maybe the compromise is to reference that issue from the one I link to, since mine feels more canonical.</p>",
        "id": 407068096,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702214254
    },
    {
        "content": "<p>Hopefully the PR would be recovering the old instruction that's guaranteed to work, or the new working solution (that still requires some further debugging to work).</p>",
        "id": 407068345,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702214438
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407068096\">said</a>:</p>\n<blockquote>\n<p>Maybe the compromise is to reference that issue from the one I link to, since mine feels more canonical.</p>\n</blockquote>\n<p>Users can discover <a href=\"https://github.com/gpoore/minted/pull/350\">gpoore/minted#350</a>  from <a href=\"https://github.com/gpoore/minted/pull/360\">gpoore/minted#360</a> (350 referenced 372, 372 is referenced by 360), so it's fine to use 360.</p>",
        "id": 407068458,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702214538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407045679\">said</a>:</p>\n<blockquote>\n<p>Have you tried <code>moreverb</code> or <code>fancyvrb</code>?</p>\n</blockquote>\n<p>I learned LaTeX at least 35 years ago and haven't always kept up with new stuff (except TikZ which I love)! But I'll check out your suggestions.</p>",
        "id": 407075194,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1702219568
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"667469\">Moti Ben-Ari</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407075194\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407045679\">said</a>:</p>\n<blockquote>\n<p>Have you tried <code>moreverb</code> or <code>fancyvrb</code>?</p>\n</blockquote>\n<p>I learned LaTeX at least 35 years ago and haven't always kept up with new stuff (except TikZ which I love)! But I'll check out your suggestions.</p>\n</blockquote>\n<p>Maybe it better for you to go with <a href=\"#narrow/stream/113489-new-members/topic/XeLaTeX.20with.20minted.20error/near/407049235\">this</a> for now. Certainly better than no highlight.</p>",
        "id": 407075626,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702219902
    }
]