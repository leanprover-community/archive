[
    {
        "content": "<p>I would like to be able to easily browse the <code>#help option</code> results.</p>\n<p>What code should I write in lean to save the output of <code>#help option</code> to a file?</p>",
        "id": 397709813,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1697808443
    },
    {
        "content": "<p>I think the answer is the same as <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib4.20tactics.20list.3F/near/389425668\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Mathlib4.20tactics.20list.3F/near/389425668</a>, its definitely possible, maybe even a 15 minute job if you know some metaprogramming. But its simpler to just copy paste it (or pipe the output of <code>lean options.lean</code> to a file , where options.lean only contains <code>import Mathlib</code> and<code>#help options</code>) so it doesn't necessarily seem worth doing in Lean (to me)</p>",
        "id": 397719770,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697811502
    },
    {
        "content": "<p>I want update the list regularly by CI.</p>",
        "id": 397721201,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1697811860
    },
    {
        "content": "<p>Curiosity also makes me interested in preservation methods.</p>",
        "id": 397721343,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1697811905
    },
    {
        "content": "<p>You could maybe see how the <code>says</code> tactic works to intercept the output of another tactic, and turn it into a <code>#write_output_to</code> command that intercepts the output of the following command.</p>",
        "id": 397722503,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697812225
    },
    {
        "content": "<p>Or <code>#guard_msgs</code>: <a href=\"https://github.com/leanprover/std4/blob/main/Std/Tactic/GuardMsgs.lean\">https://github.com/leanprover/std4/blob/main/Std/Tactic/GuardMsgs.lean</a></p>",
        "id": 397725702,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1697813170
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 397726795,
        "sender_full_name": "Notification Bot",
        "timestamp": 1697813526
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as unresolved.</p>",
        "id": 397737990,
        "sender_full_name": "Notification Bot",
        "timestamp": 1697816786
    },
    {
        "content": "<blockquote>\n<p>so it doesn't necessarily seem worth doing in Lean (to me)</p>\n</blockquote>\n<p>You are right. I have found that automatic updating with CI is not very profitable either.</p>",
        "id": 397738103,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1697816835
    },
    {
        "content": "<p>I made a list of options and made it public.<br>\n<a href=\"https://github.com/Seasawher/mathlib4-options\">https://github.com/Seasawher/mathlib4-options</a></p>",
        "id": 397738203,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1697816881
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 397810328,
        "sender_full_name": "Notification Bot",
        "timestamp": 1697860350
    }
]