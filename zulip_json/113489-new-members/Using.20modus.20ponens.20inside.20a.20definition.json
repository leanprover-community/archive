[
    {
        "content": "<p>I am not sure if this is a duplicate of <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/modus.20ponens.20in.20context\">https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/modus.20ponens.20in.20context</a></p>\n<p>I am currently trying to make the following definition:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)[</span><span class=\"n\">commsemiring</span><span class=\"o\">:</span> <span class=\"n\">CommSemiring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">temp</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">pol</span><span class=\"o\">:</span> <span class=\"n\">MvPolynomial</span> <span class=\"n\">α</span> <span class=\"n\">R</span><span class=\"o\">)[</span><span class=\"n\">DecidableRel</span> <span class=\"n\">r</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">IsTrans</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">IsAntisymm</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">IsTotal</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nonzero</span> <span class=\"o\">:</span> <span class=\"n\">NeZero</span> <span class=\"n\">pol</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"n\">Finset.sort</span> <span class=\"n\">r</span> <span class=\"o\">(</span><span class=\"n\">MvPolynomial.support</span> <span class=\"n\">pol</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"o\">[]:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">List.toFinset_eq_empty_iff</span><span class=\"o\">,</span> <span class=\"n\">Finset.sort_toFinset</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">apply</span> <span class=\"n\">nonzero.out</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MvPolynomial.leading_mon</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">DecidableRel</span> <span class=\"n\">r</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">IsTrans</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">IsAntisymm</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">IsTotal</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">pol</span><span class=\"o\">:</span> <span class=\"n\">MvPolynomial</span> <span class=\"n\">α</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"n\">nonzero</span> <span class=\"o\">:</span> <span class=\"n\">NeZero</span> <span class=\"n\">pol</span><span class=\"o\">]:</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">List.getLast</span> <span class=\"o\">(</span><span class=\"n\">Finset.sort</span> <span class=\"n\">r</span> <span class=\"o\">(</span><span class=\"n\">MvPolynomial.support</span> <span class=\"n\">pol</span><span class=\"o\">))</span>\n<span class=\"c\">/-</span><span class=\"cm\">type mismatch</span>\n<span class=\"cm\">  List.getLast (Finset.sort r (support pol))</span>\n<span class=\"cm\">has type</span>\n<span class=\"cm\">  Finset.sort r (support pol) ≠ [] → α →₀ ℕ : Type ?u.6465</span>\n<span class=\"cm\">but is expected to have type</span>\n<span class=\"cm\">  α →₀ ℕ : Type ?u.6465-/</span>\n</code></pre></div>\n<p>Is there a way I can use <code>temp</code> to modify the shape of <code>List.getLast (Finset.sort r (support pol))</code>?</p>",
        "id": 361997308,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1685379646
    },
    {
        "content": "<p>The error message is telling you that you forgot to pass the last argument to <code>getLast</code></p>",
        "id": 361997766,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685379803
    },
    {
        "content": "<p>Put a <code>_</code> at the end of the last line, and lean will stop giving you an error and start telling you what to do</p>",
        "id": 361997809,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685379824
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Using.20modus.20ponens.20inside.20a.20definition\">#Is there code for X? &gt; Using modus ponens inside a definition</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 361997933,
        "sender_full_name": "Notification Bot",
        "timestamp": 1685379858
    },
    {
        "content": "<p>If you ever see an error message that says \"has type <code>A → B</code> but expected to have type <code>B</code>\", that means you wrote <code>foo x y</code> instead of <code>foo x y a</code>. If you don't yet know the <code>a</code>, write <code>foo x y _</code>.</p>",
        "id": 361998080,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685379924
    },
    {
        "content": "<p>Thank you</p>",
        "id": 361998569,
        "sender_full_name": "Hyunsang Hwang",
        "timestamp": 1685380099
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"403479\">Hyunsang Hwang</span> has marked this topic as resolved.</p>",
        "id": 361998591,
        "sender_full_name": "Notification Bot",
        "timestamp": 1685380104
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110401\">Brendan Seamas Murphy</span> has marked this topic as unresolved.</p>",
        "id": 362296942,
        "sender_full_name": "Notification Bot",
        "timestamp": 1685479747
    }
]