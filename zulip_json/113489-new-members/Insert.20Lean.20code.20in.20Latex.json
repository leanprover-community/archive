[
    {
        "content": "<p>Is there a standard way to insert code snippets into a latex document?</p>",
        "id": 347443332,
        "sender_full_name": "Suryansh Shrivastava",
        "timestamp": 1680792689
    },
    {
        "content": "<p>Many people use lstlean (a style for the listings package), which is included with lean 3, <a href=\"https://github.com/leanprover-community/lean/blob/master/extras/latex/lstlean.md\">https://github.com/leanprover-community/lean/blob/master/extras/latex/lstlean.md</a>. I think there are a few variations of it around by now with more symbols, but its a good start. There is a lean 4 one too (<a href=\"https://github.com/leanprover/lean4/blob/master/doc/latex/lstlean.tex\">https://github.com/leanprover/lean4/blob/master/doc/latex/lstlean.tex</a>)</p>",
        "id": 347443875,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1680792804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"587941\">@Coleton Kotch</span> this <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span>  will be helpful for you as well</p>",
        "id": 347444700,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1680792972
    },
    {
        "content": "<p>I usually go with the <code>minted</code> option instead of <code>listings</code>, which uses <code>pymentize</code> under the hood</p>",
        "id": 347445220,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680793088
    },
    {
        "content": "<p>Yes I've been directing my students away from <code>lstlean</code> because <code>minted</code> seems to work better in practice (isn't there an issue that <code>lstlean</code> doesn't work properly with things like lualatex or xelatex? I can't remember the details of what encouraged me to switch allegiances, maybe Eric's observation has something to do with it under the hood)</p>",
        "id": 347556885,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680836392
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/v3r9P7oT-MLg7tTh2nCF9-yV/Screenshot_20230407-083224.png\">Screenshot_20230407-083224.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/v3r9P7oT-MLg7tTh2nCF9-yV/Screenshot_20230407-083224.png\" title=\"Screenshot_20230407-083224.png\"><img src=\"/user_uploads/3121/v3r9P7oT-MLg7tTh2nCF9-yV/Screenshot_20230407-083224.png\"></a></div>",
        "id": 347557197,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680836568
    },
    {
        "content": "<p>Sorry for user-unfriendly screenshot but that's my go-to explanation of how to use minted</p>",
        "id": 347557236,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680836609
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">minted</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">newunicodechar</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newunicodechar</span><span class=\"o\">{</span><span class=\"bp\">Ñ</span><span class=\"o\">}{</span><span class=\"bp\">\\</span><span class=\"n\">ensuremath</span><span class=\"o\">{</span><span class=\"bp\">\\</span><span class=\"n\">mathcal</span><span class=\"o\">{</span><span class=\"n\">N</span><span class=\"o\">}}}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newunicodechar</span><span class=\"o\">{</span><span class=\"bp\">ᵐ</span><span class=\"o\">}{</span><span class=\"bp\">\\</span><span class=\"n\">ensuremath</span><span class=\"o\">{</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">}}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newunicodechar</span><span class=\"o\">{</span><span class=\"bp\">ᶜ</span><span class=\"o\">}{</span><span class=\"bp\">\\</span><span class=\"n\">ensuremath</span><span class=\"o\">{</span><span class=\"bp\">^</span><span class=\"n\">c</span><span class=\"o\">}}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newunicodechar</span><span class=\"o\">{</span><span class=\"bp\">ᶠ</span><span class=\"o\">}{</span><span class=\"bp\">\\</span><span class=\"n\">ensuremath</span><span class=\"o\">{</span><span class=\"bp\">^</span><span class=\"n\">f</span><span class=\"o\">}}</span>\n</code></pre></div>\n<p>is the text that would be most annoying to transcribe from that screenshot</p>",
        "id": 347557357,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680836692
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">minted</span><span class=\"o\">}[</span><span class=\"n\">mathescape</span><span class=\"o\">,</span> <span class=\"n\">numbersep</span><span class=\"bp\">=</span><span class=\"mi\">5</span><span class=\"n\">pt</span><span class=\"o\">,</span> <span class=\"n\">frame</span><span class=\"bp\">=</span><span class=\"n\">lines</span><span class=\"o\">,</span> <span class=\"n\">framesep</span><span class=\"bp\">=</span><span class=\"mi\">2</span><span class=\"n\">mm</span><span class=\"o\">,</span> <span class=\"n\">fontsize</span><span class=\"bp\">=\\</span><span class=\"n\">small</span><span class=\"o\">]{</span><span class=\"n\">Lean</span><span class=\"o\">}</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">eventually.mono</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"bp\">∀ᶠ</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">q</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∀ᶠ</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">q</span> <span class=\"n\">x</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">minted</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 347557459,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680836738
    },
    {
        "content": "<p>Credit to <span class=\"user-mention\" data-user-id=\"243312\">@Jason KY.</span></p>",
        "id": 347557580,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680836787
    },
    {
        "content": "<p>One advantage of this is that you don't have to find and download the most recent version of <code>lstlean.tex</code>, it just works out of the box</p>",
        "id": 347557731,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680836847
    },
    {
        "content": "<p>Minted can be a pain for lean in pdflatex due to unicode, but works well for lualatex/xetex, especially if you use the <code>DejaVuSansMono</code> package to provide a font with better coverage</p>",
        "id": 347603359,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680857260
    },
    {
        "content": "<p>In my CICM paper that looked like</p>\n<div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code><span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>fontspec<span class=\"nb\">}</span>\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>DejaVuSansMono<span class=\"nb\">}</span>\n\n<span class=\"k\">\\setmonofont</span><span class=\"na\">[Scale=0.8]</span><span class=\"nb\">{</span>DejaVu Sans Mono<span class=\"nb\">}</span>\n<span class=\"k\">\\newfontface</span><span class=\"nb\">{</span><span class=\"k\">\\monofallback</span><span class=\"nb\">}{</span>DejaVu Sans<span class=\"nb\">}</span>[Scale=0.85]\n\n<span class=\"c\">% add the missing glyphs in the non-monospace font</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>⨁<span class=\"nb\">}{{</span><span class=\"k\">\\normalfont\\monofallback</span>⨁<span class=\"nb\">}}</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>⦃<span class=\"nb\">}{{</span><span class=\"k\">\\normalfont\\monofallback</span>⦃<span class=\"nb\">}}</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>⦄<span class=\"nb\">}{{</span><span class=\"k\">\\normalfont\\monofallback</span>⦄<span class=\"nb\">}}</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>⨂<span class=\"nb\">}{{</span><span class=\"k\">\\normalfont\\monofallback</span>⨂<span class=\"nb\">}}</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>⨆<span class=\"nb\">}{</span><span class=\"k\">\\ensuremath</span><span class=\"nb\">{</span><span class=\"k\">\\bigsqcup</span><span class=\"nb\">}}</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>⋃<span class=\"nb\">}{</span><span class=\"k\">\\ensuremath</span><span class=\"nb\">{</span><span class=\"k\">\\bigcup</span><span class=\"nb\">}}</span>\n</code></pre></div>",
        "id": 347604078,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680857496
    }
]