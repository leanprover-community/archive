[
    {
        "content": "<p>Here is my question, <br>\nSo basically i'm a new born in lean community and i would like to know if there is any solution to define other sets than N Z Q R C ....<br>\nI don't talk here about subset like [0,8] wich is in R but more about creating another set where i can define what does work and what ddoes not....<br>\nThanks in advance <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 405905235,
        "sender_full_name": "Robbie",
        "timestamp": 1701721150
    },
    {
        "content": "<p>This is probably a <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a>  question. Further, I am not sure what you mean precisely. Mathlib's <code>Set a</code> type lets you define a set of elements of type <code>a</code> for any <code>a</code> in set builder form (i.e. elements of the type that satisfy a property).  N, Z, R, Q, and C are actually types in lean, not sets themselves, though you can define sets that contain all elements of that type as <code>def ℕ_set : Set ℕ  := { x : ℕ | True}</code>. There is also a separate ZFC set API. I think if you specify what you want more precisely in pen and paper math (using the latex feature in zulip) I could give a better answer.</p>",
        "id": 405906352,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701721632
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/Can.20I.20add.20custom.20math.20set.20to.20lean.204.20with.20custom.20propreties.20.3F\">#lean4 &gt; Can I add custom math set to lean 4 with custom propreties ?</a> by <span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span>.</p>",
        "id": 405906407,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701721663
    },
    {
        "content": "<p>Hi, and welcome! I've moved you're question to the \"new members\" stream.</p>",
        "id": 405906479,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701721685
    },
    {
        "content": "<p>Can you make your question a little more precise? Anyway the short answer is that you can do in Lean everything you can do with pen and paper, so maybe you can give an example of what you mean.</p>",
        "id": 405906607,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701721766
    },
    {
        "content": "<p>(Sorry for the wrong channel...)<br>\nSo here are more explanations <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> ,</p>\n<p>I created, on paper, a set wich could be larger than C by introducing the letter p as a \"non variable\" in the set P, like i in the complex, so for that to work, we defined any number in this set as <code>q =Z1 + z2*p</code> or <code>q=(a+b*i)+(c+d*i)*p</code>, with z1, z2 in C and a,b,c,d in R (and <code>Z1=a+b*i; z2=(c+d*i)*p</code>. To make things easier and to make sure that starting with that 'axiom', all our demonstrations are 'valid' we wanted to use lean to prove them,  because starting with that we tried to elaborate a little more bu we really need help with a math proof assistant to make sure we are not going in a bad direction ...</p>\n<p>(So to summarize all of that, I want to recreate a such P set in Lean)</p>\n<p>Did I provide enough infos ?<br>\nIn any case, thank you for your quick answers.</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>q</mi><mtext>⋲</mtext><mi mathvariant=\"normal\">P</mi><mi mathvariant=\"normal\">∀</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mtext>⋲</mtext><msup><mi mathvariant=\"normal\">R</mi><mn>4</mn></msup><mi mathvariant=\"normal\">∀</mi><mi>z</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>Z</mi><mn>2</mn><mtext>⋲</mtext><mi mathvariant=\"normal\">C</mi><mi>q</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mi>i</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mi>i</mi><mo stretchy=\"false\">)</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\n   ∀q⋲ℙ   ∀(a,b,c,d)⋲ℝ⁴   ∀z1,Z2⋲ℂ         q= (a+bi) + (c+di)p\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord\">⋲</span><span class=\"mord amsrm\">P</span><span class=\"mord\">∀</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mord\">⋲</span><span class=\"mord\"><span class=\"mord amsrm\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mord\">2⋲</span><span class=\"mord amsrm\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">bi</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span></span></span></span></span></p>",
        "id": 405914886,
        "sender_full_name": "Robbie",
        "timestamp": 1701725505
    },
    {
        "content": "<p>You should try to write down a precise mathematical definition of the set you want. When you say \"y introducing the letter p as a \"non variable\" in the set P\" it is not clear what you mean.</p>",
        "id": 405916590,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701726256
    },
    {
        "content": "<p>I think Robbie means adjoining an element to the complex numbers subject to some relations (though I don't see a relation on this element <code>p</code>, but presumably <code>p^2 = c</code> for some constant <code>c</code>?)</p>",
        "id": 405917463,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701726698
    },
    {
        "content": "<p>I mean that's it's not like you introduce x in the reals, where you can give any values that you want to it unless it's in ℝ. <br>\nIn the complex, you can't say i=8 or i=pi, that's the same for p, I don't know the right mathematical word for that..</p>\n<p>And the definition of the Set P is not more complex than that : </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mtext>⋲</mtext><msup><mi mathvariant=\"normal\">R</mi><mn>4</mn></msup></mrow><annotation encoding=\"application/x-tex\">∀(a,b,c,d)⋲ℝ⁴</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\">∀</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mord\">⋲</span><span class=\"mord\"><span class=\"mord amsrm\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><code>Set P = {q: P | q = (a+b*i)+(c+d*i)*p }</code></p>\n<p>I know my idea can be a little bit weird  but anyways I was wondering if it was possible in Lean and as everything is possible nowadays <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 405917615,
        "sender_full_name": "Robbie",
        "timestamp": 1701726774
    },
    {
        "content": "<p>What you describe looks like considering the polynomials over the reals, maybe with some relations (the complex numbers can be introduced in this way for example). Anyway before formalizing something you need to have a <em>very precise</em> definition on paper. Lean is very very picky about that.</p>",
        "id": 405918484,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701727191
    },
    {
        "content": "<p>Or maybe even just pairs of complex numbers, but again, you have to make it precise on paper.</p>",
        "id": 405918659,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701727241
    },
    {
        "content": "<p>Pairs of complex numbers seem to at least biject with what's being asked for here. What does multiplication mean for this \"set\", if anything?</p>",
        "id": 405919099,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701727390
    },
    {
        "content": "<p>So for instance you could write:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">MyP</span> <span class=\"n\">where</span>\n  <span class=\"n\">re</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span>\n  <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span>\n</code></pre></div>",
        "id": 405919548,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701727623
    },
    {
        "content": "<p>Well it's difficult to write a precise definition when I myself don't even know ... <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span><br>\nYeah I know, I start things not necessarily the right way.</p>\n<p>Could you give me maybe a list of things I have to formalise before starting to create it in Lean ?</p>\n<p>.........<br>\nMy goal for now is to add together q and q' when both of them are in ℙ.</p>\n<p>On paper i wrote :</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>q</mi><mo>+</mo><msup><mi>q</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>+</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>d</mi><mo>+</mo><msup><mi>d</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">q+q&#x27; = ((a+a&#x27;)+(b+b&#x27;)*i)+((c+c&#x27;)+(d+d&#x27;)*i)*p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9963em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">((</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">((</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span></span></p>\n<p>........</p>\n<p>For multiplications things were getting overcontrolled since i had to define what p<em>p is, I chose to define it as p and so for all n in N</em> pⁿ=p<br>\nThat means that like for addition, with multiplications i have</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>q</mi><mo>∗</mo><msup><mi>q</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mi>i</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mi>i</mi><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">(</mo><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>i</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><msup><mi>d</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>i</mi><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">q*q&#x27; = [(a+bi)+(c+di)p] [(a&#x27;+b&#x27;i)+(c&#x27;+d&#x27;i)p]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6597em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9963em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">bi</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">]</span><span class=\"mopen\">[(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">]</span></span></span></span></span></p>",
        "id": 405920198,
        "sender_full_name": "Robbie",
        "timestamp": 1701727988
    },
    {
        "content": "<p>This is known as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">[</mo><mi>p</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><msup><mi>p</mi><mn>2</mn></msup><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}[p]/(p^2-p)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">]</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span>, \"adjoining a new element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> modulo the relation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>p</mi><mn>2</mn></msup><mo>−</mo><mi>p</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">p^2-p=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>\"</p>",
        "id": 405925358,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729155
    },
    {
        "content": "<p>There's a ring isomorphism between this and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">C</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>, where you send <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo>∈</mo><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">[</mo><mi>p</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><msup><mi>p</mi><mn>2</mn></msup><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">q\\in \\mathbb{C}[p]/(p^2-p)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">]</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span> to the pair <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(q(0), q(1))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">))</span></span></span></span>, where I am defining <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">q(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> to mean \"substitute <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>=</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">p=x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span>\".</p>",
        "id": 405925586,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729274
    },
    {
        "content": "<p>The way you do addition and multiplication on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">C</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> for this to make sense is componentwise addition and multiplication.</p>",
        "id": 405925674,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729332
    },
    {
        "content": "<p>... which happens to be precisely the multiplication that Mathlib puts on <code>ℂ × ℂ</code> already! (so you can write <code>abbrev P := ℂ × ℂ</code> and it will just work)</p>",
        "id": 405925774,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701729375
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"672043\">@Robbie</span> what are you trying to do with and/or prove about what you've defined? Or why have you defined your new thing? Is it to play around? Or do you have some purpose? Or just learning?</p>",
        "id": 405925798,
        "sender_full_name": "Julian Berman",
        "timestamp": 1701729398
    },
    {
        "content": "<p>(Something I assumed in the analysis is that <code>ip=pi</code>. If you do <code>ip=-pi</code> then you'd get something different. I'm not sure what -- if you instead had <code>p^2=-1</code> that would be the quaternions.)</p>",
        "id": 405925875,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729455
    },
    {
        "content": "<p>(And if you had <code>ip=pi</code> but <code>p^2 = 0</code> that would be <code>DualNumber ℂ</code>)</p>",
        "id": 405926203,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701729619
    },
    {
        "content": "<p>It's basically to play with maths aha <br>\nAnd i wanted to put that set : P between C and the hypercomplex which i dont know a single thing about<br>\nSo yeah <code>i*p=p*i</code></p>",
        "id": 405926235,
        "sender_full_name": "Robbie",
        "timestamp": 1701729640
    },
    {
        "content": "<p>It's hard to play with Lean making new number systems unless you know some ring theory and can state what you want in terms of ring theory. Mathlib has stuff about adjoining elements to rings.</p>",
        "id": 405926555,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729805
    },
    {
        "content": "<p>Anyway, given your rules, I can cook up a number system after having applied the theory and simplified the situation.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"n\">ℂ</span> <span class=\"bp\">×</span> <span class=\"n\">ℂ</span>\n<span class=\"kd\">def</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ofC</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">p</span>\n  <span class=\"n\">simp</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">a'</span> <span class=\"n\">b'</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">ofC</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">ofC</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">ofC</span> <span class=\"n\">a'</span> <span class=\"bp\">+</span> <span class=\"n\">ofC</span> <span class=\"n\">b'</span> <span class=\"bp\">*</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ofC</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a'</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">ofC</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">b'</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">ofC</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"o\">]</span>\n  <span class=\"n\">ring</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">a'</span> <span class=\"n\">b'</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">ofC</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">ofC</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ofC</span> <span class=\"n\">a'</span> <span class=\"bp\">+</span> <span class=\"n\">ofC</span> <span class=\"n\">b'</span> <span class=\"bp\">*</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n      <span class=\"bp\">=</span> <span class=\"n\">ofC</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a'</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">ofC</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a'</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b'</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b'</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">ofC</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"o\">]</span>\n  <span class=\"n\">ring</span>\n</code></pre></div>",
        "id": 405926595,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729829
    },
    {
        "content": "<p>(This <code>ofC</code> function is a map from the complex numbers to your new <code>P</code> type. There are ways to make it so you don't have to explicitly write it, but I didn't do that here.)</p>",
        "id": 405926667,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729861
    },
    {
        "content": "<p>I only proved the addition and multiplication rules seem to be right for <code>P</code>, but I didn't show that <code>P</code> is the most general number system with these properties.</p>",
        "id": 405926748,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729914
    },
    {
        "content": "<p>At least the number system is two-dimensional:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">FiniteDimensional.finrank</span> <span class=\"n\">ℂ</span> <span class=\"n\">P</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 405926901,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701729976
    },
    {
        "content": "<p>Oh ! Thank you for all of that stuff to study aha.  Also, what are the simp and ring tactics ? My Lean does not recognize them <br>\n(Sorry for all of my questions but afterall i'm in the newbie channel <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span>)</p>",
        "id": 405927454,
        "sender_full_name": "Robbie",
        "timestamp": 1701730235
    },
    {
        "content": "<p>Here are a lot of learning resources: <a href=\"https://leanprover-community.github.io/learn.html\">https://leanprover-community.github.io/learn.html</a></p>\n<p>The book <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">Mathematics in Lean</a> is a mathematics-oriented introduction, and it talks about simp and ring.</p>",
        "id": 405929365,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701731061
    },
    {
        "content": "<p>I haven't read Heather's book yet, but there's also <a href=\"https://hrmacbeth.github.io/math2001/\">The Mechanics of Proof</a></p>",
        "id": 405929411,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1701731100
    }
]