[
    {
        "content": "<p>This is a very basic question, however I can't seem to figure it out by myself.<br>\nI have the following simple example to do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">/</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">add_comm</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">sub_eq_iff_eq_add.mp</span>\n  <span class=\"c1\">-- apply eq_div_iff_mul_eq'.mpr</span>\n</code></pre></div>\n<p>The last apply fails and reports <code>tactic 'apply' failed, failed to unify\n  ?m.2127 = ?m.2128 / ?m.2129\nwith\n  a - b = c / d</code><br>\nI think because a-b does not have the right form? How can I fix this, is there a way to put parenthesis around or a different theorem I can use, that I haven't found so far?</p>",
        "id": 399909773,
        "sender_full_name": "Chris Miller",
        "timestamp": 1698923327
    },
    {
        "content": "<p>The issue seems to be that the reals are an <em>additive</em> group, but not a <em>multiplicative</em> group.</p>",
        "id": 399910722,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698923522
    },
    {
        "content": "<p>This may be what you want, but you do not have a <code>d ≠ 0</code> floating around...</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">eq_div_iff_mul_eq</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span>\n</code></pre></div>",
        "id": 399911017,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698923588
    },
    {
        "content": "<p>As <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> hinted at, this statement is not true for some cases when <code>d = 0</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"kd\">def</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span>\n<span class=\"kd\">def</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"kd\">def</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"k\">#eval</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"c1\">-- true</span>\n<span class=\"k\">#eval</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">/</span> <span class=\"n\">d</span> <span class=\"c1\">-- false</span>\n</code></pre></div>",
        "id": 399922131,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1698927199
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 399961399,
        "sender_full_name": "Chris Miller",
        "timestamp": 1698937753
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657510\">Chris Miller</span> has marked this topic as resolved.</p>",
        "id": 399961424,
        "sender_full_name": "Notification Bot",
        "timestamp": 1698937758
    }
]