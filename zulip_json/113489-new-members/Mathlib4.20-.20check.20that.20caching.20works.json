[
    {
        "content": "<p>Hi everyone!</p>\n<p>I just started a Lean4 project that uses Mathlib4 as a dependency and I'm happy to have managed to set everything up so that it generally works. However, build times seem to be very long and I'm not sure that the caching has worked. </p>\n<p>When I run <code>lake exe cache get</code>the cache gets downloaded,  I can see the progress in the terminal and afterwards there are files in the <code>.cache</code> folder. I then run <code>lake build</code> and assume that this starts the building process in the background. Is it possible to view the progress of building? Can one also abort the build process? </p>\n<p>How long should it take to build mathlib4 on an average personal computer with/without cache files?</p>",
        "id": 348396775,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1681203259
    },
    {
        "content": "<p><code>lake build</code> should have a line of output for every file</p>",
        "id": 348398461,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681203631
    },
    {
        "content": "<p>Thanks for this answer. I think I might have not fully understood then what <code>lake build</code>is meant to do when employed as in the <a href=\"https://github.com/leanprover-community/mathlib4/tree/c5372bb1b31cc5e7e637aeb6bb5488fa3b7e8ca3#using-mathlib4-as-a-dependency\">mathlib readme instructions</a>. Does it build my own project or does it build mathlib4 itself? Does the build include all .lean files or only those mentioned in <code>lakefile.lean</code>? </p>\n<p>Currently, I'm writing code that imports files from Mathlib.Data. My principal concern for the moment is that every time I add new imports it takes very long before I can start working (e.g. this morning I wanted to use matrices and looked at \"Loading messages\" for 30 minutes).</p>",
        "id": 348407237,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1681205937
    },
    {
        "content": "<p>I cargo-culted a ProjectName.lean in the root of the repository that imports all other files from mathlib - not sure if that's a strict requirement</p>",
        "id": 348411683,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681207052
    },
    {
        "content": "<p>After making a change, the output looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>lake<span class=\"w\"> </span>build\nNo<span class=\"w\"> </span>files<span class=\"w\"> </span>to<span class=\"w\"> </span>download\nDecompressing<span class=\"w\"> </span><span class=\"m\">1882</span><span class=\"w\"> </span>file<span class=\"o\">(</span>s<span class=\"o\">)</span>\nBuilding<span class=\"w\"> </span>Flt.Primes\nBuilding<span class=\"w\"> </span>Flt.Spts\nBuilding<span class=\"w\"> </span>Flt.Edwards\nBuilding<span class=\"w\"> </span>Flt.Euler\nBuilding<span class=\"w\"> </span>Flt\n</code></pre></div>",
        "id": 348412148,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681207191
    },
    {
        "content": "<p>My understanding is that <code>lake</code> in project <code>X</code> only knows about files in <code>X.lean</code>. </p>\n<p>If it's any help, I haven't updated mathlib4 in about a week or so, and I'm on a pretty slow internet connection right now. After a <code>git pull</code> (which took a while because of internet), <code>lake exe cache get</code> took 2 minutes 42 seconds of real time to run, and after that <code>lake build</code> did this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">time</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Algebra.Subalgebra.Basic</span>\n\n<span class=\"n\">real</span>    <span class=\"mi\">0</span><span class=\"n\">m27.650s</span>\n<span class=\"n\">user</span>    <span class=\"mi\">0</span><span class=\"n\">m28.482s</span>\n<span class=\"n\">sys</span>     <span class=\"mi\">0</span><span class=\"n\">m1.516s</span>\n<span class=\"bp\">$</span>\n</code></pre></div>",
        "id": 348430546,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681212235
    },
    {
        "content": "<p>Yes, this is absolutely helpful, thanks <span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> and <span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> . I ran <code>lake build Mathlib</code> yesterday which hadn't even finished after two hours. So there definitely must be an issue with the caching on my side. I made sure that the lean versions coincide and also checked my curl version which is higher than 7.69.</p>\n<p>Do you know of anything else that I could I do to troubleshoot?</p>",
        "id": 348637163,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1681284171
    },
    {
        "content": "<p><code>lake exe cache get</code> often does not work properly if you are using lean elsewhere at the same time.</p>",
        "id": 348638076,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1681284470
    },
    {
        "content": "<p>(notably including having a lean file open in vscode)</p>",
        "id": 348638152,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1681284487
    },
    {
        "content": "<p>Thanks for this hint <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, I'll have a try. For now I've always been running lake from the vscode terminal so there is a very high chance that a different file was open. </p>\n<p>Perhaps this hint could also be mentioned in the the Mathlib4 readme instructions (I could also add it myself but have never contributed to mathlib4 and don't know the policy around these things)</p>",
        "id": 348645014,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1681286235
    },
    {
        "content": "<p>If you haven't yet, check if the quote4/std4/aesop hashes in lake-manifest.json match the ones in your mathlib version?</p>",
        "id": 348645052,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681286248
    },
    {
        "content": "<p>I just checked and the hashes in my project's <code>lake-manifest.json</code> are the same as in <code>lake-packages/mathlib/lake-manifest.json</code></p>",
        "id": 348645898,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1681286484
    }
]