[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> so should I start from the lisp evaluator in McCarthy's paper or scheme in 48hrs?</p>",
        "id": 325114716,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1675246711
    },
    {
        "content": "<p>mccarthy's paper is hard to read, I am only using it to indicate a sense of scale you should be aiming for</p>",
        "id": 325221960,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675272343
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/.5BNewBie.20Q.5D.20.3A.20How.20to.20use.20decreasing_by.20tactic/near/325221960\">said</a>:</p>\n<blockquote>\n<p>mccarthy's paper is hard to read, I am only using it to indicate a sense of scale you should be aiming for</p>\n</blockquote>\n<p>I understand. I was thinking to read this code : <a href=\"https://github.com/eraserhd/Idris-json\">https://github.com/eraserhd/Idris-json</a> and do it in lean</p>",
        "id": 325260133,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1675282848
    },
    {
        "content": "<p>there is a lean json parser already that you could look at</p>",
        "id": 325260267,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675282897
    },
    {
        "content": "<p>oh that's even better, can you please link it <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 325260378,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1675282923
    },
    {
        "content": "<p><del>is it this : <a href=\"https://el-tramo.be/jsnprsr/\">https://el-tramo.be/jsnprsr/</a> </del></p>",
        "id": 325260521,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1675282959
    },
    {
        "content": "<p>lean 4 comes with a built in json parser</p>",
        "id": 325260670,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675283019
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Json.parse#src\">src4#Lean.Json.parse</a></p>",
        "id": 325260834,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1675283064
    },
    {
        "content": "<p><a href=\"https://drops.dagstuhl.de/opus/volltexte/2019/11079/pdf/LIPIcs-ITP-2019-24.pdf\">https://drops.dagstuhl.de/opus/volltexte/2019/11079/pdf/LIPIcs-ITP-2019-24.pdf</a></p>\n<p>I'm thinking of reading this paper and try to implement in lean as there is coq code if I ever get stuck</p>",
        "id": 325351229,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1675330842
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"557243\">Shubham Kumar ðŸ¦€ (he/him)</span> has marked this topic as resolved.</p>",
        "id": 325465299,
        "sender_full_name": "Notification Bot",
        "timestamp": 1675361725
    }
]