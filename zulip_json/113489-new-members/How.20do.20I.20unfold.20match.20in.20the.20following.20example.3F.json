[
    {
        "content": "<p>In the following code, it is obvious that the example holds because we only care about the first element in the tuple returned by the match. But it seems like <code>simp</code> won't go through in this scenario. If I <code>induction ht</code>, then it works fine, which makes sense.</p>\n<p>But if <code>match</code> has many more terms, it would be a nightmare because I have to invoke <code>induction</code> on each of the term. Is there a tactic that goes through in this scenario?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Seqx</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Type</span> <span class=\"n\">where</span>\n<span class=\"bp\">|</span> <span class=\"n\">cons</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">s'</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">):</span> <span class=\"n\">Seqx</span> <span class=\"n\">s'</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Seqx</span> <span class=\"n\">s</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">s'</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ht</span><span class=\"o\">:</span> <span class=\"n\">Seqx</span> <span class=\"n\">s</span><span class=\"o\">):</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"k\">match</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">ht</span> <span class=\"k\">with</span> <span class=\"bp\">|</span> <span class=\"n\">sm</span><span class=\"o\">,</span> <span class=\"n\">Seqx.cons</span> <span class=\"n\">_</span> <span class=\"n\">q</span> <span class=\"n\">sn</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">sm</span><span class=\"o\">,</span> <span class=\"n\">q</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"mi\">1</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- induction ht automagically works</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 400700708,
        "sender_full_name": "Z. Wu",
        "timestamp": 1699349988
    }
]