[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.FiniteDimensional</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.PiL2</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.Dual</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Convex.Function</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Convex.Basic</span>\n\n\n<span class=\"kn\">open</span> <span class=\"n\">Metric</span> <span class=\"n\">Filter</span> <span class=\"n\">Topology</span> <span class=\"n\">Set</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)}</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">epigraph</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">&lt;|</span> <span class=\"o\">(</span><span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span>  <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span>  <span class=\"bp\">|</span> <span class=\"n\">p.1</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"n\">p.1</span> <span class=\"bp\">≤</span> <span class=\"n\">p.2</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">IsSubgradAt</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">ConvexOn</span> <span class=\"n\">ℝ</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"o\">:</span>  <span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">inner</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- def HasSubderivAt (hf : ConvexOn ℝ s f) (x :  EuclideanSpace ℝ n) :</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">SubderivAt</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">ConvexOn</span> <span class=\"n\">ℝ</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span>  <span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">EuclideanSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"bp\">|</span> <span class=\"n\">IsSubgradAt</span> <span class=\"n\">hf</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">}</span>\n\n<span class=\"kd\">@[simp]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">mem_SubderivAt</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">ConvexOn</span> <span class=\"n\">ℝ</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IsSubgradAt</span> <span class=\"n\">hf</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"bp\">↔</span> <span class=\"n\">g</span> <span class=\"bp\">∈</span> <span class=\"n\">SubderivAt</span> <span class=\"n\">hf</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">id</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">ConvexOn</span> <span class=\"n\">ℝ</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">convex_epif</span> <span class=\"o\">:</span> <span class=\"n\">Convex</span> <span class=\"n\">epi</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I want to describe a proposition: epi f is a convex set, but an error occurs: <code>failed to synthesize instance\n  OrderedSemiring epi</code>, does anyone know why?</p>",
        "id": 387829606,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1693296692
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631681\">tsuki  hao</span> has marked this topic as unresolved.</p>",
        "id": 387829647,
        "sender_full_name": "Notification Bot",
        "timestamp": 1693296713
    },
    {
        "content": "<p>I get <code>unknown identifier 'epi'</code>.</p>",
        "id": 387830287,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1693296967
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/fail.20to.20describe.20a.20proposition/near/387830287\">said</a>:</p>\n<blockquote>\n<p>I get <code>unknown identifier 'epi'</code>.</p>\n</blockquote>\n<p>Sorry, I wrote this theorem against the proof process, <code>epi</code> should be changed to <code>epigraph</code></p>",
        "id": 387831949,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1693297620
    },
    {
        "content": "<p>If you look at <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Convex#doc\">docs#Convex</a> you see it takes two explicit arguments, an ordered semiring k and a set s. You are giving two arguments, a set S and a function f so Lean is trying to interpret your S as an ordered semiring. That is the meaning of your error message</p>",
        "id": 387832520,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1693297838
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/fail.20to.20describe.20a.20proposition/near/387832520\">said</a>:</p>\n<blockquote>\n<p>If you look at <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Convex#doc\">docs#Convex</a> you see it takes two explicit arguments, an ordered semiring k and a set s. You are giving two arguments, a set S and a function f so Lean is trying to interpret your S as an ordered semiring. That is the meaning of your error message</p>\n</blockquote>\n<p>Thank you, I changed that code to <code>theorem convex_epif : Convex s (epigraph s f) := by sorry</code>, but there is an error <code>application type mismatch\n  epigraph s\nargument\n  s\nhas type\n  Set (EuclideanSpace ℝ n) : Type\nbut is expected to have type\n  EuclideanSpace ℝ ?m.15742 × ℝ : Type ?u.15741</code>, I can’t understand the type in the error, how should I modify s to make them match?</p>",
        "id": 387834485,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1693298635
    },
    {
        "content": "<p>You should try and understand the error; this will make your life a lot easier. The error says \"at the point where there is a red underline, you gave me <code>s</code> which is a subset of Euclidean space, but I was expecting an element of a product set\". Now can you fix the problem yourself?</p>",
        "id": 387836202,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1693299278
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/fail.20to.20describe.20a.20proposition/near/387836202\">said</a>:</p>\n<blockquote>\n<p>You should try and understand the error; this will make your life a lot easier. The error says \"at the point where there is a red underline, you gave me <code>s</code> which is a subset of Euclidean space, but I was expecting an element of a product set\". Now can you fix the problem yourself?</p>\n</blockquote>\n<p>Sorry, I added <code> variable [SMul ℝ (EuclideanSpace ℝ n)]</code>, but this not only did not solve the problem, but made the error more difficult to understand</p>",
        "id": 387837199,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1693299627
    },
    {
        "content": "<p>That instance should already be there though, as a global instance so shouln't need to assume it separately, try <code>#synth SMul ℝ (EuclideanSpace ℝ n)</code> to check for sure</p>",
        "id": 387837840,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1693299857
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/fail.20to.20describe.20a.20proposition/near/387837840\">said</a>:</p>\n<blockquote>\n<p>That instance should already be there though, as a global instance so shouln't need to assume it separately, try <code>#synth SMul ℝ (EuclideanSpace ℝ n)</code> to check for sure</p>\n</blockquote>\n<p>Thank you!</p>",
        "id": 387857679,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1693306719
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631681\">tsuki  hao</span> has marked this topic as resolved.</p>",
        "id": 387857689,
        "sender_full_name": "Notification Bot",
        "timestamp": 1693306723
    }
]