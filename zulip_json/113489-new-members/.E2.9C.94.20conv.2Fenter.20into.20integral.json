[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Integral.Bochner</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Measure.Haar.OfBasis</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Real</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=∫</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"bp\">∫</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">conv</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"n\">enter</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>has state as <code>| MeasureTheory.volume</code> instead of <code>f x</code>, I asked a similar question before about trying to <code>enter</code> into <code>normSq</code> to which the answer was <code>apply normSq_congr </code> where</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">normSq_congr</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">normSq</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">normSq</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">subst</span> <span class=\"n\">h</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>because <code>normSq</code> had some weird signature that was monoid preserving or something. Is something similar happening here? What can I do to get <code>f x</code> instead of MeasureTheory.volume`?</p>",
        "id": 402985586,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700383953
    },
    {
        "content": "<p>The volume is an implicit parameters of the integral (the measure), isn't it? Maybe you need different numbers here? (On the phone, so can't test easily)</p>",
        "id": 403008873,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1700399333
    },
    {
        "content": "<p>You can also try left / right to navigate to the right spot, maybe that's easier because more interactive</p>",
        "id": 403008906,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1700399371
    },
    {
        "content": "<p>Aha! <code>enter [1,2]</code> does the trick! Thanks.</p>",
        "id": 403009259,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700399689
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"663331\">Nicholas Wilson</span> has marked this topic as resolved.</p>",
        "id": 403009265,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700399695
    },
    {
        "content": "<p>Nicholas, did you try the conv? tactic?</p>",
        "id": 403021345,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700407628
    },
    {
        "content": "<p>no I didn't, but <code>cons =&gt; enter [1,2]</code> worked.</p>",
        "id": 403059786,
        "sender_full_name": "Nicholas Wilson",
        "timestamp": 1700434814
    }
]