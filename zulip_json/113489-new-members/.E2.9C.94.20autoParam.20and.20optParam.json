[
    {
        "content": "<p>What are these mysterious things? I was just trying to understand how to declare two random variables to be independent <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">here</a> but it's defined in terms of an <code>autoParam</code>.</p>",
        "id": 400321455,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699125537
    },
    {
        "content": "<p>You can right click on these things and see their docstring and note that they're the identity function. They're not something the end user needs to worry about. <del>They're to do with when the typeclass inference system starts looking for instances.</del> (that's outParam!)</p>",
        "id": 400321759,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699125878
    },
    {
        "content": "<p>I see <code>optParam α default = α</code>, so more like projection onto the first coordinate instead of identity?</p>",
        "id": 400321860,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699125981
    },
    {
        "content": "<p>Ok</p>",
        "id": 400321890,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699126031
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=optParam#doc\">docs#optParam</a></p>",
        "id": 400321895,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699126045
    },
    {
        "content": "<p>Oh sorry I'm talking nonsense! And not for the first time today.</p>",
        "id": 400321954,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699126122
    },
    {
        "content": "<p>I don't understand the docstring \"A binder like (x : α := default) in a declaration is syntax sugar for x : optParam α default, and triggers the elaborator to attempt to use default to supply the argument if it is not supplied.\" <br>\nI don't know what binder is and what the default is</p>",
        "id": 400321969,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699126149
    },
    {
        "content": "<p>I'd love not to worry about it but I see <code>optParam</code> used e.g. <a href=\"https://github.com/YaelDillies/LeanCamCombi/blob/main/LeanCamCombi/BernoulliSeq.lean#L34\">here</a>, and I'm trying to understand this definition.</p>",
        "id": 400322033,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699126205
    },
    {
        "content": "<p>I was telling you what outParam means. The code you're asking about is here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">IndepFun</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"n\">γ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">γ</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"bp\">Ω</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">volume_tac</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">kernel.IndepFun</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">kernel.const</span> <span class=\"n\">Unit</span> <span class=\"n\">μ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Measure.dirac</span> <span class=\"o\">()</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"n\">Unit</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>and the autoParam (the := by)  just means \"if the user doesn't supply a measure, then use the <code>volume_tac</code> tactic to try and find one\"</p>",
        "id": 400322064,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699126233
    },
    {
        "content": "<p>Ohhh so it's like a default fallback</p>",
        "id": 400322077,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699126258
    },
    {
        "content": "<p>But how can it be used with just one argument <a href=\"https://github.com/YaelDillies/LeanCamCombi/blob/main/LeanCamCombi/BernoulliSeq.lean#L34\">here</a> then? I don't see what the default is</p>",
        "id": 400322146,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699126335
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"414458\">Vasily Ilin</span> <a href=\"#narrow/stream/113489-new-members/topic/autoParam.20and.20optParam/near/400322033\">said</a>:</p>\n<blockquote>\n<p>I'd love not to worry about it but I see <code>optParam</code> used e.g. <a href=\"https://github.com/YaelDillies/LeanCamCombi/blob/main/LeanCamCombi/BernoulliSeq.lean#L34\">here</a>, and I'm trying to understand this definition.</p>\n</blockquote>\n<p>No you don't, you see <code>outParam</code> there, so my earlier explanation applies: you just ignore it, it's the identity function, this is something to do with the order in which things are elaborated.</p>",
        "id": 400322213,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699126428
    },
    {
        "content": "<p>I guess I am developing dyslexia. I did not notice <code>out</code> vs <code>opt</code>. Thank you.</p>",
        "id": 400322312,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699126560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"414458\">Vasily Ilin</span> has marked this topic as resolved.</p>",
        "id": 400324103,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699128392
    }
]