[
    {
        "content": "<p>A beginner question here, how do I deal with side effects in a match statement where the default is to not update anything?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Days</span> <span class=\"n\">where</span>\n<span class=\"bp\">|</span> <span class=\"n\">monday</span>\n<span class=\"bp\">|</span> <span class=\"n\">tuesday</span>\n<span class=\"bp\">|</span> <span class=\"n\">saturday</span>\n<span class=\"bp\">|</span> <span class=\"n\">someOtherDay</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">processDay</span> <span class=\"o\">(</span><span class=\"n\">day</span><span class=\"o\">:</span> <span class=\"n\">Days</span><span class=\"o\">):</span> <span class=\"n\">StateM</span> <span class=\"n\">Nat</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">match</span> <span class=\"n\">day</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">monday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">set</span> <span class=\"o\">((</span><span class=\"bp\">←</span> <span class=\"n\">get</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">saturday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">set</span> <span class=\"mi\">3</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">let</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">999999</span>   <span class=\"c1\">-- Is must be a prettier way to do this?</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">processDay</span> <span class=\"bp\">.</span><span class=\"n\">saturday</span> <span class=\"mi\">0</span> <span class=\"c1\">-- ((), 3)</span>\n</code></pre></div>",
        "id": 401644083,
        "sender_full_name": "Anders Larsson",
        "timestamp": 1699827326
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">processDay</span> <span class=\"o\">(</span><span class=\"n\">day</span><span class=\"o\">:</span> <span class=\"n\">Days</span><span class=\"o\">):</span> <span class=\"n\">StateM</span> <span class=\"n\">Nat</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">match</span> <span class=\"n\">day</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">monday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">set</span> <span class=\"o\">((</span><span class=\"bp\">←</span> <span class=\"n\">get</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">saturday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">set</span> <span class=\"mi\">3</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">pure</span> <span class=\"o\">()</span>\n</code></pre></div>",
        "id": 401644675,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699828081
    },
    {
        "content": "<p>You have to be careful since <code>return</code> can be used for early returns, but in a <code>do</code> block you can use <code>return</code> instead of <code>pure ()</code>.</p>",
        "id": 401644742,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699828136
    },
    {
        "content": "<p>Thank you,<br>\nI didn't realize that pure and return differed in that way.</p>",
        "id": 401645437,
        "sender_full_name": "Anders Larsson",
        "timestamp": 1699828910
    }
]