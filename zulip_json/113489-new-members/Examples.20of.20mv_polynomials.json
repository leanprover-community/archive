[
    {
        "content": "<p>Hi, I am a complete newbie with Lean, but I would like to prove some properties of simple programs dealing with the multivariate polynomials.<br>\nAt first, I would like to create the examples of polynomials and to do some operations on them.</p>\n<p>My first attempt was :</p>\n<p>import data.mv_polynomial.comm_ring<br>\nvariables x y : ℕ</p>\n<p>def p1 : mv_polynomial (fin 2) ℚ := x^3 * y + 1<br>\ndef p2 : mv_polynomial (fin 2) ℚ := x * y + x + y + 1</p>\n<p>#eval p1 + p2</p>\n<p>What is wrong with my code ? The answer of Lean was</p>\n<p>missing 'noncomputable' modifier, definition 'p1' depends on 'mv_polynomial.comm_ring'</p>",
        "id": 368239933,
        "sender_full_name": "YurySerdyuk",
        "timestamp": 1687354492
    },
    {
        "content": "<p>Lean is telling you to write <code>noncomputable</code> before the word <code>def</code>; but you can also just write <code>noncomputable theory</code> near the top of the file</p>",
        "id": 368240269,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687354567
    },
    {
        "content": "<p>But those aren't the polynomials you think they are; those are families of <em>constant</em> polynomials parametrized by <code>x, y</code></p>",
        "id": 368240440,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687354616
    },
    {
        "content": "<p>The two generators of your polynomial are actually <code>mv_polynomial.X 0</code> and <code>mv_polynomial.X 1</code></p>",
        "id": 368240607,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687354651
    },
    {
        "content": "<p>def p1 : mv_polynomial (fin 2)  ℚ := mv_polynomial.X 3<br>\ndef p2 : mv_polynomial (fin 2)  ℚ := mv_polynomial.X 2</p>\n<p>#eval p1 + p2</p>\n<p>code generation failed, VM does not have code for 'classical.choice'</p>",
        "id": 368244781,
        "sender_full_name": "YurySerdyuk",
        "timestamp": 1687355517
    },
    {
        "content": "<p><code>mv_polynomial</code> does not currently generate any executable computer code</p>",
        "id": 368245424,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1687355635
    },
    {
        "content": "<p>The way polynomials are implemented doesn't let you use #eval to see them, but you can definitely prove whatever you want about p1 and p2</p>",
        "id": 368245645,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1687355681
    },
    {
        "content": "<p>When you call <code>#eval</code> you ask your computer to do a computation which is not possible with the design</p>",
        "id": 368245649,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1687355682
    },
    {
        "content": "<p>Also note that the number is not a power, it's the index: we tend to use X and Y in pen and paper for 2 degrees but because computers, we have to write X_0, X_1</p>",
        "id": 368245980,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1687355743
    }
]