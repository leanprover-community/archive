[
    {
        "content": "<p>I am trying to define the hamming norm of (evaluations of ) polynomials over a finite field. However, the following code gives me an error during polynomial subtraction</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.FieldTheory.Finite.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Polynomial.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.InformationTheory.Hamming</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Field.Basic</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n<span class=\"c1\">-- variable (F : GaloisField 2 n)</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"s2\">\"q\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">F</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">Vector</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">apply_polynomial_to_vector</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Vector</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Vector</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n  <span class=\"n\">v.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">p.eval</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">weight</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Vector</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">Finset.univ.filter</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">v.get</span> <span class=\"n\">i</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">card</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">hamming_dist</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">weight</span> <span class=\"o\">(</span><span class=\"n\">apply_polynomial_to_vector</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">-</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>The error is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">compiler</span> <span class=\"n\">IR</span> <span class=\"n\">check</span> <span class=\"n\">failed</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">hamming_dist._rarg'</span><span class=\"o\">,</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">declaration</span> <span class=\"bp\">'</span><span class=\"n\">Polynomial.sub'</span>\n</code></pre></div>\n<p>at the definition</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">hamming_dist</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">weight</span> <span class=\"o\">(</span><span class=\"n\">apply_polynomial_to_vector</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">-</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 394560717,
        "sender_full_name": "Allan Li",
        "timestamp": 1696309434
    },
    {
        "content": "<p>Make that <code>noncomputable def</code></p>",
        "id": 394561671,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1696310322
    },
    {
        "content": "<p>This is <a href=\"https://github.com/leanprover/lean4/pull/1785\">lean4#1785</a></p>",
        "id": 394561967,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696310624
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"653650\">Allan Li</span> has marked this topic as resolved.</p>",
        "id": 394562049,
        "sender_full_name": "Notification Bot",
        "timestamp": 1696310684
    }
]