[
    {
        "content": "<p>I am getting the following error when I am trying to import Std</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Std'Lean</span> <span class=\"mi\">4</span>\n</code></pre></div>\n<p>I want to use the <code>Std</code> for <code>HashMap</code></p>",
        "id": 408351022,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702738530
    },
    {
        "content": "<p>did you add <code>require std from ...</code> to your lakefile?</p>",
        "id": 408351121,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702738582
    },
    {
        "content": "<p>no, I didn't know if I need to add or install any packages</p>\n<p>Also I've never tinkered with lakefiles so what should be the <code>...</code> in this case?</p>",
        "id": 408352883,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702739786
    },
    {
        "content": "<p><code>require std from git \"https://github.com/leanprover/std4\" @ \"main\"</code></p>",
        "id": 408353106,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702739991
    },
    {
        "content": "<p>Unrelated but I need to add mathlib4 I need to do<br>\n<code>require mathlib from git \"https://github.com/leanprover-community/mathlib4\" @ \"main\"</code>?</p>",
        "id": 408353242,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702740096
    },
    {
        "content": "<p>Yes, except that the development branch is called \"master\" in mathlib4, not \"main\"</p>",
        "id": 408353307,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702740136
    },
    {
        "content": "<p>Got it Thanks <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> !</p>",
        "id": 408353338,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702740161
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"557243\">Shubham Kumar ü¶Ä (he/him)</span> has marked this topic as resolved.</p>",
        "id": 408353368,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702740197
    },
    {
        "content": "<p>If you're tracking mathlib4, <code>lake update</code> will automatically update your <code>lean-toolchain</code> file to match mathlib's and fetch the olean cache. Don't forget to execute <code>lake update</code>, though, or you'll be compiling a lot of stuff!</p>",
        "id": 408353389,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702740216
    },
    {
        "content": "<p>(I'm not sure if the post update hook runs after <code>lake bulid</code> in case of missing deps in the manifest, maybe it does)</p>",
        "id": 408353457,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702740246
    },
    {
        "content": "<p>Got it! Thanks for the tip <span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span></p>",
        "id": 408353458,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702740246
    },
    {
        "content": "<p>PS please don't resolve topics, it achieves nothing apart from adding noise (note that essentially no other topics are marked as resolved)</p>",
        "id": 408353465,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702740252
    },
    {
        "content": "<p>ok won't do it in future</p>",
        "id": 408353486,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702740276
    },
    {
        "content": "<p>so I update the lakefile to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">require</span> <span class=\"n\">std</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/std4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n\n<span class=\"n\">package</span> <span class=\"n\">aoc_2023</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add package configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"n\">Aoc2023</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add library configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">defaultTarget</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span> <span class=\"n\">aoc_2023</span> <span class=\"o\">{</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>and I ran <code>lake build</code> in the root directory but it errors out</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">‚ùØ</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">std</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">manifest</span> <span class=\"n\">entry</span><span class=\"bp\">;</span> <span class=\"n\">deleting</span> <span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">std</span> <span class=\"n\">and</span> <span class=\"n\">cloning</span> <span class=\"n\">again</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">std</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">9</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">leanOptions'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.PackageConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">default_target</span><span class=\"o\">]</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">default_target</span><span class=\"o\">]</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">srcDir'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.LeanExeConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">has</span> <span class=\"n\">errors</span>\n</code></pre></div>",
        "id": 408550142,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702884592
    },
    {
        "content": "<p>I don't know what the error means but I think it cannot identify <code>default_target </code>maybe it's not needed and it requires 2 different variables <code>leanOptions</code> and <code>srcDir</code></p>",
        "id": 408550307,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702884651
    },
    {
        "content": "<p>this is a very old lakefile using outdated syntax</p>",
        "id": 408550356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702884685
    },
    {
        "content": "<p>I suspect you used an old version of <code>lake</code> to run <code>lake new</code></p>",
        "id": 408550433,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702884722
    },
    {
        "content": "<p>what is in the <code>lean-toolchain</code> file?</p>",
        "id": 408550511,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702884742
    },
    {
        "content": "<p>leanprover/lean4:nightly-2022-10-18</p>",
        "id": 408550559,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702884761
    },
    {
        "content": "<p>it is old</p>",
        "id": 408550599,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702884777
    },
    {
        "content": "<p>doing an <code>elan update</code> I think that should update it, right?</p>",
        "id": 408550711,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702884833
    },
    {
        "content": "<p><code>elan self update</code> and then <code>elan toolchain update stable</code> should help</p>",
        "id": 408550716,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702884836
    },
    {
        "content": "<p>so after updating the <code>lean-toolchain</code> file is still pointing to the same version, do I need to update it manually?</p>",
        "id": 408551887,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702885252
    },
    {
        "content": "<p>yes</p>",
        "id": 408552015,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702885310
    },
    {
        "content": "<p>lake doesn't manage the <code>lean-toolchain</code> file at all, it just creates one during <code>lake new</code></p>",
        "id": 408552105,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702885334
    },
    {
        "content": "<p>actually that's not quite true, recent versions of mathlib will automatically pin your <code>lean-toolchain</code> to match the mathlib you are pointing to</p>",
        "id": 408552267,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702885390
    },
    {
        "content": "<p>so currently my lakefile.lean and lean-toolchain files look like this<br>\nlakefile.lean</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">¬´</span><span class=\"n\">aoc_2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add package configuration options here</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"bp\">¬´</span><span class=\"n\">Aoc2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add library configuration options here</span>\n\n<span class=\"n\">require</span> <span class=\"n\">std</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/std4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span> <span class=\"bp\">¬´</span><span class=\"n\">aoc_2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n  <span class=\"c1\">-- Enables the use of the Lean interpreter by the executable (e.g.,</span>\n  <span class=\"c1\">-- `runFrontend`) at the expense of increased binary size on Linux.</span>\n  <span class=\"c1\">-- Remove this line if you do not need such functionality.</span>\n  <span class=\"n\">supportInterpreter</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n</code></pre></div>\n<p>and lean-toolchain</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">stable</span>\n</code></pre></div>\n<p>and I ran a <code>lake update</code> to generate a new manifest but I am getting the following error</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>‚ùØ<span class=\"w\"> </span>lake<span class=\"w\"> </span>update\nstd:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover/std4<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'./.lake/packages/std'</span>\nerror:<span class=\"w\"> </span>./.lake/packages/std/lakefile.lean:9:2:<span class=\"w\"> </span>error:<span class=\"w\"> </span><span class=\"s1\">'leanOptions'</span><span class=\"w\"> </span>is<span class=\"w\"> </span>not<span class=\"w\"> </span>a<span class=\"w\"> </span>field<span class=\"w\"> </span>of<span class=\"w\"> </span>structure<span class=\"w\"> </span><span class=\"s1\">'Lake.PackageConfig'</span>\nerror:<span class=\"w\"> </span>./.lake/packages/std/lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\n</code></pre></div>",
        "id": 408564080,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702890013
    },
    {
        "content": "<p><code>stable</code> does not mean \"the latest stable version\", it just means \"whatever your local version of elan thinks is latest\", which you can update by running <code>elan update stable</code>. For this reason, it's best to use actual versions such as <code>leanprover/lean4:v4.3.0</code> in lean-toolchain.</p>",
        "id": 408569984,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702892076
    },
    {
        "content": "<p>I updated my lean-toolchain file to </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.3.0</span>\n</code></pre></div>\n<p>I am still getting the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>‚ùØ<span class=\"w\"> </span>lake<span class=\"w\"> </span>update\nstd:<span class=\"w\"> </span>URL<span class=\"w\"> </span>has<span class=\"w\"> </span>changed<span class=\"p\">;</span><span class=\"w\"> </span>deleting<span class=\"w\"> </span><span class=\"s1\">'./lake-packages/std'</span><span class=\"w\"> </span>and<span class=\"w\"> </span>cloning<span class=\"w\"> </span>again\ncloning<span class=\"w\"> </span>https://github.com/leanprover/std4<span class=\"w\"> </span>to<span class=\"w\"> </span>./lake-packages/std\nerror:<span class=\"w\"> </span>./lake-packages/std/lakefile.lean:9:2:<span class=\"w\"> </span>error:<span class=\"w\"> </span><span class=\"s1\">'leanOptions'</span><span class=\"w\"> </span>is<span class=\"w\"> </span>not<span class=\"w\"> </span>a<span class=\"w\"> </span>field<span class=\"w\"> </span>of<span class=\"w\"> </span>structure<span class=\"w\"> </span><span class=\"s1\">'Lake.PackageConfig'</span>\nerror:<span class=\"w\"> </span>./lake-packages/std/lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\n</code></pre></div>",
        "id": 408603304,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702903496
    },
    {
        "content": "<p>Yes, <code>leanOptions</code> is something that appeared after <code>v4.3.0</code></p>",
        "id": 408603472,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1702903563
    },
    {
        "content": "<p>so how would the lakefile look if I want to accomodate leanOptions</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">¬´</span><span class=\"n\">aoc_2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add package configuration options here</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"bp\">¬´</span><span class=\"n\">Aoc2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add library configuration options here</span>\n\n<span class=\"n\">require</span> <span class=\"n\">std</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/std4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span> <span class=\"bp\">¬´</span><span class=\"n\">aoc_2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n  <span class=\"c1\">-- Enables the use of the Lean interpreter by the executable (e.g.,</span>\n  <span class=\"c1\">-- `runFrontend`) at the expense of increased binary size on Linux.</span>\n  <span class=\"c1\">-- Remove this line if you do not need such functionality.</span>\n  <span class=\"n\">supportInterpreter</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n</code></pre></div>",
        "id": 408603602,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702903611
    },
    {
        "content": "<p>Remove the <code>@ \"main\"</code>. I conjecture this is what's causing you trouble.</p>",
        "id": 408603753,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1702903667
    },
    {
        "content": "<p>This is effectively telling <code>lake update</code> to fetch the latest version of Std, regardless of whether it's compatible with the toolchain you have.</p>",
        "id": 408603851,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1702903699
    },
    {
        "content": "<p>The better solution, if you don't mind not using a stable release, is to copy whatever toolchain there is in the current <code>lean-toolchain</code>in Std.</p>",
        "id": 408603919,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1702903734
    },
    {
        "content": "<p>it's looking for a branch</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>aoc_2023_lean<span class=\"w\"> </span>on<span class=\"w\"> </span>ÓÇ†<span class=\"w\"> </span>main<span class=\"w\"> </span><span class=\"o\">[</span>!?<span class=\"o\">]</span><span class=\"w\"> </span>on<span class=\"w\"> </span>‚òÅÔ∏è<span class=\"w\">  </span><span class=\"o\">(</span>ap-southeast-2<span class=\"o\">)</span>\n‚ùØ<span class=\"w\"> </span>lake<span class=\"w\"> </span>update<span class=\"w\"> </span>-R\nerror:<span class=\"w\"> </span>cannot<span class=\"w\"> </span>find<span class=\"w\"> </span>revision<span class=\"w\"> </span>master<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>repository<span class=\"w\"> </span>./.lake/packages/std\n\naoc_2023_lean<span class=\"w\"> </span>on<span class=\"w\"> </span>ÓÇ†<span class=\"w\"> </span>main<span class=\"w\"> </span><span class=\"o\">[</span>!?<span class=\"o\">]</span><span class=\"w\"> </span>on<span class=\"w\"> </span>‚òÅÔ∏è<span class=\"w\">  </span><span class=\"o\">(</span>ap-southeast-2<span class=\"o\">)</span>\n‚ùØ<span class=\"w\"> </span>lake<span class=\"w\"> </span>update\nerror:<span class=\"w\"> </span>cannot<span class=\"w\"> </span>find<span class=\"w\"> </span>revision<span class=\"w\"> </span>master<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>repository<span class=\"w\"> </span>./.lake/packages/std\n</code></pre></div>",
        "id": 408603966,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702903750
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Ya√´l Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20How.20do.20I.20import.20Std.20.3F/near/408603919\">said</a>:</p>\n<blockquote>\n<p>The better solution, if you don't mind not using a stable release, is to copy whatever toolchain there is in the current <code>lean-toolchain</code>in Std.</p>\n</blockquote>\n<p>how would I do that?</p>",
        "id": 408603991,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702903761
    },
    {
        "content": "<p>If you read <a href=\"https://github.com/leanprover/std4/blob/main/lean-toolchain\">https://github.com/leanprover/std4/blob/main/lean-toolchain</a>, you will see it is <code>leanprover/lean4:v4.4.0-rc1</code>.</p>",
        "id": 408604016,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1702903771
    },
    {
        "content": "<p>Just checking if I am doing this right</p>\n<ul>\n<li>lakefile.lean</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">¬´</span><span class=\"n\">aoc_2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add package configuration options here</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"bp\">¬´</span><span class=\"n\">Aoc2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add library configuration options here</span>\n\n<span class=\"n\">require</span> <span class=\"n\">std</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/std4\"</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span> <span class=\"bp\">¬´</span><span class=\"n\">aoc_2023</span><span class=\"bp\">¬ª</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n  <span class=\"c1\">-- Enables the use of the Lean interpreter by the executable (e.g.,</span>\n  <span class=\"c1\">-- `runFrontend`) at the expense of increased binary size on Linux.</span>\n  <span class=\"c1\">-- Remove this line if you do not need such functionality.</span>\n  <span class=\"n\">supportInterpreter</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n</code></pre></div>\n<ul>\n<li>lean-toolchain</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.4.0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span>\n</code></pre></div>",
        "id": 408604751,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702904024
    },
    {
        "content": "<p>Are the above files correct?</p>",
        "id": 408604784,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702904037
    },
    {
        "content": "<p>Try it! Maybe you will need to put back the <code>@ \"main\"</code>.</p>",
        "id": 408604902,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1702904073
    },
    {
        "content": "<p>Also those two files are not enough to determine whether your project is correctly formatted. You also need to look at <code>lake-manifest.json</code>.</p>",
        "id": 408605034,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1702904109
    },
    {
        "content": "<p>so I think I deleted the manifest to generate a fresh one</p>",
        "id": 408605309,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702904178
    },
    {
        "content": "<p>so with or without <code>@ \"main\"</code> it seems to fail</p>",
        "id": 408605499,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702904246
    },
    {
        "content": "<p>umm maybe I'll do a fresh one and restart</p>",
        "id": 408605532,
        "sender_full_name": "Shubham Kumar ü¶Ä (he/him)",
        "timestamp": 1702904259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Ya√´l Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20How.20do.20I.20import.20Std.20.3F/near/408604016\">said</a>:</p>\n<blockquote>\n<p>If you read <a href=\"https://github.com/leanprover/std4/blob/main/lean-toolchain\">https://github.com/leanprover/std4/blob/main/lean-toolchain</a>, you will see it is <code>leanprover/lean4:v4.4.0-rc1</code>.</p>\n</blockquote>\n<p>My fault, I saw \"stable\" and used a stable version as an example, but indeed std4 main requires v4.4.0-rc1 at the moment.</p>",
        "id": 408612766,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702906678
    }
]