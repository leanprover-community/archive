[
    {
        "content": "<p>Hello, could anyone please help me fix the constant and lasting error \"Waiting for Lean server to start...\"? Thanks a lot!</p>",
        "id": 367633259,
        "sender_full_name": "Donna Jo",
        "timestamp": 1687179950
    },
    {
        "content": "<p>Hello, could anyone please help me fix the constant and lasting error \"Waiting for Lean server to start...\"? Thanks a lot!</p>",
        "id": 367633570,
        "sender_full_name": "Donna Jo",
        "timestamp": 1687179994
    },
    {
        "content": "<p>Could you please post a screenshot showing the error, with the VS Code file explorer (assuming you're talking about VS Code) open? Note that Lean 4 will only process files which are part of correctly-formatted Lean 4 projects, and the root directory of the project must be opened using VS Code's \"open folder\" functionality.</p>",
        "id": 367635791,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1687180349
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/Error.20.22Waiting.20for.20Lean.20server.20to.20start\">#lean4 &gt; Error \"Waiting for Lean server to start</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 367635923,
        "sender_full_name": "Notification Bot",
        "timestamp": 1687180370
    },
    {
        "content": "<p>(I've moved this: in general, we usually handle installation problems in this stream)</p>",
        "id": 367636084,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687180396
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> has marked this topic as unresolved.</p>",
        "id": 367636567,
        "sender_full_name": "Notification Bot",
        "timestamp": 1687180500
    },
    {
        "content": "<p><a href=\"#narrow/stream/113489-new-members/topic/.3E.20Error.20.22Waiting.20for.20Lean.20server.20to.20start/near/367633259\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/.E2.9C.94.20import.20tactics.20causes.20error\">#lean4 &gt; âœ” import tactics causes error</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 367636568,
        "sender_full_name": "Notification Bot",
        "timestamp": 1687180500
    },
    {
        "content": "<p>Hi, </p>\n<p>One possible reason for the confusion that seems to have occurred with one or more people regarding the 'waiting for lean server to start' issue is that in <a href=\"https://leanprover-community.github.io/install/windows.html\">this GitHub documentation</a> the user is asked to try to evaluate a statement prior to having gone through the process of actually setting up a Lean project (which is explained in the <em>following</em> section).</p>",
        "id": 390138011,
        "sender_full_name": "Nick Dean",
        "timestamp": 1694347549
    },
    {
        "content": "<p>Reading this documentation, it does read like \"if you get 37 then Lean 4 is up and running; if you are interested in mathlib then you now need to do something else\", so implicitly \"and hence if you are not interested in mathlib then you are finished, and can just open Lean files in VS Code willy-nilly\". Because I never use lean without mathlib I am unclear about to what extent this is true, but some testing seems to indicate that I really can just have a file <code>test.lean</code> which I open with VS Code, and Lean is working; <code>import Lean</code> seems to work fine etc. </p>\n<p>Perhaps after \"...successfully installed Lean 4!\" it should say (without even starting a new paragraph) something like \"However you will almost certainly want to have access to Lean's standard library, and perhaps also its mathematical library; right now you cannot access either of these, or indeed import any files at all. For a reasonable working experience you should now create a simple <em>project</em>. Projects contain important metadata such as which version of Lean you are using, and even simple experiements should be done within the context of a Lean project.\"</p>\n<p>Is that last sentence true? Whether or not it is, perhaps it's good advice. </p>\n<p>I would make the PR myself but can never remember what the relevant repo is.</p>",
        "id": 390142779,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694350569
    },
    {
        "content": "<p>There are a few places to look for clues of what's going on:</p>\n<ul>\n<li>If you installed Lean 4 using the VSCode extension, and have a Lean 4 project code base opened<ul>\n<li>check Tab \"Output\" -&gt; Menu \"Lean Editor\" in the bottom panel, if you see some error there, the installation has failed</li>\n<li>check Tab \"Problems\", if you see it's compiling thousands of files from Std and Mathlib, go to Terminal, run <code>source ~/.profile; lake exe cache get</code></li>\n<li>try \"Ctrl+Shift+P\" (or Command+Shift+P under Mac), run \"restart Lean server\"</li>\n<li>If it has no effect on the \"Problems\", try \"stop Lean server\" (same as above), and run <code>lake build</code> in your terminal to see what's going on</li>\n<li>re-read anything in the README of the code base (may it be a tutorial or a game etc.) to figure out what's missing</li>\n</ul>\n</li>\n</ul>\n<p>If you still have no clue, you may read my experience shared here (and the links in it): <a href=\"#narrow/stream/270676-lean4/topic/Trouble.20installing.20lean4/near/389818546\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Trouble.20installing.20lean4/near/389818546</a></p>",
        "id": 390152103,
        "sender_full_name": "Utensil Song",
        "timestamp": 1694356398
    },
    {
        "content": "<p>Hi all,</p>\n<p>Just to clarify, I'm not having difficulties myself. What I was trying to point out but mightn't have worded very well is that perhaps the reason some newcomers seemingly continue to encounter this issue is that the documentation on GitHub I linked to might not be worded as clearly as it could be for a complete newcomer.</p>\n<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> That sounds exactly right to me. As you say, I don't know why somebody would use lean without mathlib, but supposing someone interpreted those instructions available on GitHub a certain way without a second thought, it could explain the 'issue' some have reported (the real issue, then, not really being to do with lean, but rather with that documentation on GitHub).</p>",
        "id": 390226797,
        "sender_full_name": "Nick Dean",
        "timestamp": 1694402814
    },
    {
        "content": "<p>It seems that there are 3 more possibilities that one could encounter this error:</p>\n<ol>\n<li>Run <code>lake update</code> when adding a dependency, but it updates mathlib to the latest commit, and that commit is still building its cache in CI. This is due to that <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency\">https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency</a> will create a project depending on Mathlib4 without fixing a commit, thus rely on the manifest to fix it, but it's volatile to instructions from other projects. Running  <code>lake update</code> when working on mathlib-related projects (which is, most projects) is advised against on Zulip, but not emphasized in doc, just like issue 6 (Lean toolchain consistency) in my experience, and these are really needed to be emphasized.</li>\n<li>Sometimes CI could generate invalid cache that lake ignores them silently and start the build from scratch. This happend recently and being diagnosed <a href=\"#narrow/stream/270676-lean4/topic/git.20revision.20of.20dependency.20'proofwidgets'.20changed\">here</a>, and it seems that <a href=\"https://github.com/leanprover/lean4/issues/2528#issuecomment-1712820835\">lean-cache (in Rust) has to predict what lake (in Lean 4) would do to try to provide a valid cache</a> so there might be a deeper rabbit hole here. But the good news is that <code>lake exe cache get</code> <a href=\"#narrow/stream/287929-mathlib4/topic/running.20.60cache.20get.60.20as.20part.20of.20every.20.60lake.20build.60\">will be run by default with <code>lake build</code>/<code>lake serve</code></a> which is used by VSCode Lean 4 extension</li>\n<li>There is a case where lean-cache can't download the cache ( I have one of my environments to reproduce this, and I suspect it's proxy related, but haven't dived into it yet)</li>\n</ol>",
        "id": 390231535,
        "sender_full_name": "Utensil Song",
        "timestamp": 1694405760
    },
    {
        "content": "<p>My experience is that Lean 4 is stable when you have set it up following some instruction in one doc for a project without thinking about each steps, then keep working on the project, but whenever you change an environment, or jump into a new project, or updated something, or copy-pasted something, or come back a few weeks later, it's easy to fall into some traps and encounter similar errors.</p>\n<p>And when this happens, the steps and the separate issues of each step will surface, and troubleshooting them requires some knowledge about how all these tools work (Elan, Lake, lean-cache, VS Code Lean 4 extension etc.) and all these files (<code>lean-toolchain</code>, <code>lakefile.lean</code>, <code>lake-manifest.json</code>, <code>~/.profile</code>, <code>build/lake.lock</code>, <code>lake-packages</code> etc.), and being aware of all these traps: \"toolchain compatibility\", \"lake is not in PATH without relogin or run a platform-dependent file\", \"don't run <code>lake update</code>\", \"must run <code>lake exe cache get</code> and check if it succeeded\", \"check the commit you depended on when last time it worked\" etc. I've managed to work through them and recorded them. It would be helpful to help update the docs, but I haven't fully wrapped my head around all these issues yet.</p>",
        "id": 390231585,
        "sender_full_name": "Utensil Song",
        "timestamp": 1694405770
    }
]