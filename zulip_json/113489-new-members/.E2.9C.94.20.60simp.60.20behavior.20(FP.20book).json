[
    {
        "content": "<p>Hi! I'm very new to Lean (but have some prior experience with formal proofs and dependent types) and am reading \"Functional Programming in Lean\". Most of the examples have worked just as given, but I'm not getting as much \"power\" from the <code>simp</code> tactic as the book suggests is possible. For instance, the book <a href=\"https://lean-lang.org/functional_programming_in_lean/props-proofs-indexing.html#connectives\">gives this theorem, and states that <code>simp</code> is powerful enough to find a proof</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">addAndAppend</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">∧</span> <span class=\"s2\">\"Str\"</span><span class=\"bp\">.</span><span class=\"n\">append</span> <span class=\"s2\">\"ing\"</span> <span class=\"bp\">=</span> <span class=\"s2\">\"String\"</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n</code></pre></div>\n<p>However, on my installation (version 4.3.0, commit 8e5cf6466061, Release) and <a href=\"http://live.lean-lang.org\">live.lean-lang.org</a>, the goal <code>⊢ String.append \"Str\" \"ing\" = \"String\"</code> is unsolved. There's a similar problem with another proof the book provides (<code>simp made no progress</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">woodlandCritters</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span><span class=\"s2\">\"hedgehog\"</span><span class=\"o\">,</span> <span class=\"s2\">\"deer\"</span><span class=\"o\">,</span> <span class=\"s2\">\"snail\"</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">third</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ok</span> <span class=\"o\">:</span> <span class=\"n\">xs.length</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">xs</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span>\n<span class=\"k\">#eval</span> <span class=\"n\">third</span> <span class=\"n\">woodlandCritters</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Why might this be? It seems possible to me that these proofs relied on <code>[simp]</code> attributes that were in the standard library when the book was written but removed at some point. This is just a wild guess though, so I'd really appreciate some insight!</p>",
        "id": 405804488,
        "sender_full_name": "Mark Rogers",
        "timestamp": 1701689377
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/.22Functional.20Programming.20in.20Lean.22.20simp.20behavior\">#new members &gt; \"Functional Programming in Lean\" simp behavior</a> by <span class=\"user-mention silent\" data-user-id=\"671910\">Mark Rogers</span>.</p>",
        "id": 405805178,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701689661
    },
    {
        "content": "<p>Trying replacing <code>simp</code> with <code>simp (config:= { decide := true})</code> . The reason is likely to be the breaking change in simp from version 4.3. The book on my most recent visit to it, compiles with 4.1</p>",
        "id": 405806463,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701690228
    },
    {
        "content": "<p>Thank you, that works! I'll create an issue on the book repo</p>",
        "id": 405807824,
        "sender_full_name": "Mark Rogers",
        "timestamp": 1701690786
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671910\">Mark Rogers</span> has marked this topic as resolved.</p>",
        "id": 405817139,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701694302
    }
]