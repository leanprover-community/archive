[
    {
        "content": "<p>I'm getting </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">unify</span>\n  <span class=\"n\">k</span> <span class=\"err\">∣</span> <span class=\"n\">multiset</span><span class=\"bp\">.</span><span class=\"n\">count</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">factors&#39;</span> <span class=\"n\">a0</span> <span class=\"n\">hz</span><span class=\"o\">)</span>\n<span class=\"k\">with</span>\n  <span class=\"n\">k</span> <span class=\"err\">∣</span> <span class=\"n\">multiset</span><span class=\"bp\">.</span><span class=\"n\">count</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">factors&#39;</span> <span class=\"n\">a0</span> <span class=\"n\">hz</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>from this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">unique_factorization_domain</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">associates</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">associated</span><span class=\"bp\">.</span><span class=\"n\">setoid</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">add_monoid</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">multiset_mul</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"err\">∣</span> <span class=\"n\">multiset</span><span class=\"bp\">.</span><span class=\"n\">count</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span><span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"err\">•</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">unique_factorization_domain</span> <span class=\"n\">associated</span> <span class=\"n\">lattice</span>\n<span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">unique_factorization_domain</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">associates</span> <span class=\"n\">α</span><span class=\"o\">)]</span>\n\n<span class=\"c1\">-- set_option pp.all true</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">power_of_count&#39;</span> <span class=\"o\">(</span><span class=\"n\">a0</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hz</span> <span class=\"o\">:</span> <span class=\"n\">a0</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"bp\">//</span> <span class=\"kn\">irreducible</span> <span class=\"n\">a</span><span class=\"o\">}),</span> <span class=\"n\">k</span> <span class=\"err\">∣</span> <span class=\"n\">multiset</span><span class=\"bp\">.</span><span class=\"n\">count</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">factors&#39;</span> <span class=\"n\">a0</span> <span class=\"n\">hz</span><span class=\"o\">))</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∃</span><span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">factors&#39;</span> <span class=\"n\">a0</span> <span class=\"n\">hz</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"err\">•</span> <span class=\"n\">u</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">multiset_mul</span> <span class=\"o\">(</span><span class=\"n\">factors&#39;</span> <span class=\"n\">a0</span> <span class=\"n\">hz</span><span class=\"o\">),</span>\n  <span class=\"n\">intro</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">hp</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>I'm sure the <code>set_option pp.all true</code> is telling me what is wrong, but I haven't been able to figure it out. Something to do with <code>decidable_eq (associates α)</code>?</p>",
        "id": 196068850,
        "sender_full_name": "Paul van Wamelen",
        "timestamp": 1588451416
    },
    {
        "content": "<p>You have put <code>open_locale classical</code> and that deals with all the decidable nonsense at once so you should probably remove the decidable_eq instance later</p>",
        "id": 196070617,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588454493
    },
    {
        "content": "<p>You shouldn't need it</p>",
        "id": 196070618,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588454510
    }
]