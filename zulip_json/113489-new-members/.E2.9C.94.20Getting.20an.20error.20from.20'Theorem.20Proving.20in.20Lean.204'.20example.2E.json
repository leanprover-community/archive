[
    {
        "content": "<p>I'm reading through 'Theorem Proving in Lean 4' trying to understand each example. I'm getting an error with the line of code <code>#check fun (g : String → Bool) (f : Nat → String) (x : Nat) =&gt; g (f x)</code>. The error is shown in the image below. Why is the error happening?<br>\n<a href=\"/user_uploads/3121/2NI60luAfIfI7Pc03XKHYzRd/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/2NI60luAfIfI7Pc03XKHYzRd/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/2NI60luAfIfI7Pc03XKHYzRd/image.png\"></a></div>",
        "id": 392328913,
        "sender_full_name": "blackbirdsr",
        "timestamp": 1695305102
    },
    {
        "content": "<p>The code is from Chapter 2, 'Dependent Type Theory'.</p>",
        "id": 392329028,
        "sender_full_name": "blackbirdsr",
        "timestamp": 1695305150
    },
    {
        "content": "<p>Odd, it seems like it's getting mixed up with the next line</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 392329384,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695305277
    },
    {
        "content": "<p>Oops, sorry. That is the line that's giving me the error. I copied and pasted the wrong one, my bad.</p>",
        "id": 392330703,
        "sender_full_name": "blackbirdsr",
        "timestamp": 1695305700
    },
    {
        "content": "<p><code>#check fun (g : String → Bool) (f : Nat → String) (x : Nat) =&gt; g (f x)</code> works just fine.</p>",
        "id": 392330828,
        "sender_full_name": "blackbirdsr",
        "timestamp": 1695305742
    },
    {
        "content": "<p>Okay, that term should have type gamma. Is there anything after it that lean is accidentally interpreting as a function argument?</p>",
        "id": 392332509,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695306232
    },
    {
        "content": "<p>I just erased all other lines of code from the file to see if that was causing the error. And apparently the error was caused by the next line of code I had written (which was most likely wrong). I had asumed that couldn't be the cause as I thought a line of code couldn't cause an error in a previous line. Apparently I was wrong.</p>",
        "id": 392333056,
        "sender_full_name": "blackbirdsr",
        "timestamp": 1695306383
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"650272\">blackbirdsr</span> has marked this topic as resolved.</p>",
        "id": 392333165,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695306422
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"650272\">blackbirdsr</span> has marked this topic as unresolved.</p>",
        "id": 392333183,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695306428
    },
    {
        "content": "<p>Thanks for the help though. I did that because of your message.</p>",
        "id": 392333240,
        "sender_full_name": "blackbirdsr",
        "timestamp": 1695306446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"650272\">blackbirdsr</span> has marked this topic as resolved.</p>",
        "id": 392333457,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695306503
    },
    {
        "content": "<p>I have seen this many times before, errors in unexpected places because people (i.e. students) write some junk further down the file and imagine that this can't possibly have any effect. A trick I often use is to write <code>#exit</code> directly after my incomprehensible error to see if that makes it goes away. If it does, the problem is after the #exit.</p>",
        "id": 392518853,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695389547
    }
]