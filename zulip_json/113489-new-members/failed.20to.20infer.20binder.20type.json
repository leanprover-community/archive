[
    {
        "content": "<p>I've attempted to follow along with a simple example from Logical Foundations, but I'm running into this \"strange\" error:</p>\n<blockquote>\n<p>failed to infer binder type<br>\nwhen the resulting type of a declaration is explicitly provided, all holes<br>\n(e.g., <code>_</code>) in the header are resolved before the declaration body is processed</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span>\n<span class=\"cm\">Following along with the Logical Foundations book, available at</span>\n<span class=\"cm\">https://softwarefoundations.cis.upenn.edu/lf-current/Basics.html</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">Day</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">|</span> <span class=\"n\">monday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tuesday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">wednesday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">thursday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">friday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">saturday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">sunday</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Repr</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Day.next_weekday</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">Day</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Day</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">d</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">monday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">tuesday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">tuesday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">wednesday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">wednesday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">thursday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">thursday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">friday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">friday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">monday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">saturday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">monday</span>\n  <span class=\"bp\">|</span> <span class=\"n\">sunday</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">monday</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">Day.friday.next_weekday</span>\n<span class=\"c1\">-- Day.monday</span>\n<span class=\"k\">#eval</span> <span class=\"n\">Day.saturday.next_weekday.next_weekday</span>\n<span class=\"c1\">-- Day.tuesday</span>\n\n<span class=\"c\">/-</span>\n<span class=\"cm\">FIXME: Fails with the following message</span>\n\n<span class=\"cm\">failed to infer binder type</span>\n<span class=\"cm\">when the resulting type of a declaration is explicitly provided, all holes</span>\n<span class=\"cm\">(e.g., `_`) in the header are resolved before the declaration body is processed</span>\n<span class=\"cm\">-/</span>\n<span class=\"kd\">example</span> <span class=\"n\">test_next_weekday</span><span class=\"o\">:</span>\n  <span class=\"n\">Day.saturday.next_weekday.next_weekday</span> <span class=\"bp\">=</span> <span class=\"n\">Day.tuesday</span>\n<span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 370664738,
        "sender_full_name": "Steven Shaw",
        "timestamp": 1688023364
    },
    {
        "content": "<p>Not sure if that's it, but <code>example</code>s don't get a name</p>",
        "id": 370666379,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1688023775
    },
    {
        "content": "<p>Thanks, that was it! If I make it a theorem or remove the name, then it compiles fine!</p>",
        "id": 370677998,
        "sender_full_name": "Steven Shaw",
        "timestamp": 1688026484
    },
    {
        "content": "<p>That error message is not great :/</p>",
        "id": 370679103,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1688026706
    },
    {
        "content": "<p>No <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 370679379,
        "sender_full_name": "Steven Shaw",
        "timestamp": 1688026777
    }
]