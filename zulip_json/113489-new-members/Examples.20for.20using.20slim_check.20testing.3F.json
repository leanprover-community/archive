[
    {
        "content": "<p>I'm familiar with <a href=\"https://softwarefoundations.cis.upenn.edu/qc-current/index.html\">QuickChick</a> for Coq and I believe that <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Testing/SlimCheck/Functions.html\">SlimCheck</a> provides similar functionality for Lean. </p>\n<p>Are there examples anywhere of its use? A small \"get started\" example would be super helpful.</p>\n<p>And: Can anyone comment on important gaps in the current codebase? I see that commits to it are fairly recent so perhaps gaps that were flagged by other threads back in March are resolved.</p>",
        "id": 402011885,
        "sender_full_name": "Mike Hicks",
        "timestamp": 1699976163
    },
    {
        "content": "<p>Here is a simple example </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">×</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">l.1</span> <span class=\"bp\">+</span> <span class=\"n\">l.2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">l.1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">slim_check</span>\n</code></pre></div>\n<p><code>slim_check</code> informs me that my goal is unprovable and provides a counterexample<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/master/test/slim_check.lean\">https://github.com/leanprover-community/mathlib4/blob/master/test/slim_check.lean</a> lists many more examples. You can see there that some are commented out, which may be due to missing functionality.</p>",
        "id": 402024729,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1699979735
    }
]