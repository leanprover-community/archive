[
    {
        "content": "<p>Hello, I am trying to work through some topology problems, and I was having an issue figuring out how to represent the intersection of a collection of topologies. My main goal is to show that some topology is equal to the intersection of a collection of other topologies and I want sure how I could possibly write out the intersection. I am currently trying to write out the problem like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">γ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">γ</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"n\">Tₐ</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">γ</span><span class=\"o\">)))</span>\n    <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">Tₐ</span> <span class=\"bp\">=</span> <span class=\"n\">TopologicalSpace.generateFrom</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">T</span> <span class=\"bp\">∈</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"bp\">⊆</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">=</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Tₐ</span> <span class=\"bp\">=</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>Would writing some h3 defining R to be the intersection of all topologies in C be the best way to approach this, and if so, how would I even express this? I have the proof written out fine on paper, but I really just don't know how to begin getting this in lean.</p>",
        "id": 401236454,
        "sender_full_name": "Logan Johnson",
        "timestamp": 1699563789
    },
    {
        "content": "<p>What is the pen and paper version of the lemma you are trying to state?</p>",
        "id": 401237458,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699564190
    },
    {
        "content": "<p>Show that if A is a basis for a topology on X , then the topology generated by A equals the intersection of all topologies on X that contain A.<br>\nThis is exercise 5 from the basis section in Munkres' Topology.</p>",
        "id": 401237940,
        "sender_full_name": "Logan Johnson",
        "timestamp": 1699564411
    },
    {
        "content": "<p>This is very far from what you started to state.</p>",
        "id": 401238554,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699564696
    },
    {
        "content": "<p>For instance <code>Tₐ = TopologicalSpace.generateFrom A</code> does not say that <code>A</code> is a basis of anything.</p>",
        "id": 401238594,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699564720
    },
    {
        "content": "<p>Would 'TopologicalSpace.IsTopologicalBasis.eq_generateFrom` be something more along the lines of what I am looking for in this case?</p>",
        "id": 401239102,
        "sender_full_name": "Logan Johnson",
        "timestamp": 1699564980
    },
    {
        "content": "<p><del>moogle.ai seems to do a good job of finding the right thing here I think. I put in the exercise unchanged, and it finds <code>TopologicalSpace.isTopologicalBasis_of_subbasis</code> and says <code>If a family of sets s generates the topology, then intersections of finite subcollections of s form a topological basis.</code></del></p>",
        "id": 401240646,
        "sender_full_name": "Julian Berman",
        "timestamp": 1699565687
    },
    {
        "content": "<p>You can of course save from cheating by looking at the proof but maybe the statement helps.</p>",
        "id": 401240688,
        "sender_full_name": "Julian Berman",
        "timestamp": 1699565706
    },
    {
        "content": "<p>Julian, this is not the statement Logan is asking for.</p>",
        "id": 401240764,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699565746
    },
    {
        "content": "<p>But yes, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=TopologicalSpace.IsTopologicalBasis#doc\">docs#TopologicalSpace.IsTopologicalBasis</a> is relevant.</p>",
        "id": 401240825,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699565763
    },
    {
        "content": "<p>Ah indeed sorry, I just reread it a second time.</p>",
        "id": 401240853,
        "sender_full_name": "Julian Berman",
        "timestamp": 1699565772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"657767\">@Logan Johnson</span> the statement you want is: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">)}</span> <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"n\">IsTopologicalBasis</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">T</span> <span class=\"bp\">=</span> <span class=\"n\">sSup</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span> <span class=\"bp\">|</span> <span class=\"n\">A</span> <span class=\"bp\">⊆</span> <span class=\"n\">S.IsOpen</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 401241623,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699566172
    },
    {
        "content": "<p>I don't think it appears in Mathlib since it isn't useful for anything but making an exercises. But relevant facts if you want to prove it include <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=TopologicalSpace.IsTopologicalBasis.isOpen_iff#doc\">docs#TopologicalSpace.IsTopologicalBasis.isOpen_iff</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=isOpen_iff_mem_nhds#doc\">docs#isOpen_iff_mem_nhds</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=setOf_isOpen_sSup#doc\">docs#setOf_isOpen_sSup</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=mem_nhds_iff#doc\">docs#mem_nhds_iff</a>.</p>",
        "id": 401241948,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699566353
    },
    {
        "content": "<p>Thanks for the help! I'll try to get to work with this.</p>",
        "id": 401242099,
        "sender_full_name": "Logan Johnson",
        "timestamp": 1699566432
    },
    {
        "content": "<p>An important point to keep in mind is that the natural order relation on <code>TopologicalSpace X</code> is <em>not</em> inclusion, it is the opposite. So the <code>sSup</code> that appears in the above statement is indeed the intersection of those topologies seen as collections of sets.</p>",
        "id": 401242255,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699566512
    },
    {
        "content": "<p>I was just about to ask why it was <code>sSup</code> and not <code>sInf</code></p>",
        "id": 401242512,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1699566654
    },
    {
        "content": "<p>T1 &lt;= T2 iff id : (X,T1) -&gt; (X,T2) is continuous, i.e. iff T1 has more opens than T2 :-)</p>",
        "id": 401248487,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699569538
    }
]