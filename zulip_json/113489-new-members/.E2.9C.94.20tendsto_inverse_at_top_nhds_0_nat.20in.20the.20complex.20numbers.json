[
    {
        "content": "<p>Hey all, <br>\nOne lemma I need for a proof I am working on is the following :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I know of <a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/specific_limits/basic.html#tendsto_inverse_at_top_nhds_0_nat\">this</a> lemma in the reals but the best I could do in the complex case is appeal to a <code>∀ ε &gt; 0</code> proof.<br>\nIs there a clever way to proof this using pre-existing lemmas? Similar to the real proof? Thanks!</p>",
        "id": 345249949,
        "sender_full_name": "Xavier Généreux",
        "timestamp": 1680041121
    },
    {
        "content": "<p>Can you post this question as a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> ? I'm old and tired and pathetic and I can't figure out the imports.</p>",
        "id": 345251753,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680041940
    },
    {
        "content": "<p>what I wanted to try, before I realised I couldn't get the statement compiling, was just copy pasting the proof of the lemma you linked to.</p>",
        "id": 345251824,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680041969
    },
    {
        "content": "<p>I don't know about minimal but this should be a working example :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.analytic.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.complex.re_im_topology</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">filter</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 345253260,
        "sender_full_name": "Xavier Généreux",
        "timestamp": 1680042590
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">coe</span> <span class=\"bp\">∘</span>  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span> <span class=\"o\">{</span> <span class=\"n\">ext1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">tendsto.comp</span> <span class=\"n\">complex.continuous_of_real.continuous_at</span> <span class=\"n\">tendsto_inverse_at_top_nhds_0_nat</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 345253756,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1680042780
    },
    {
        "content": "<p>yeah Patrick has done what I was going to try next (but faster): deduce the complex result from the real result and the fact that the map from the reals to the complexes is nice</p>",
        "id": 345253880,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680042835
    },
    {
        "content": "<p>This is doing the obvious thing: concatenating the lemma you found with continuity of the inclusion of ℝ into ℂ.</p>",
        "id": 345253903,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1680042842
    },
    {
        "content": "<p>ha!</p>",
        "id": 345253947,
        "sender_full_name": "Xavier Généreux",
        "timestamp": 1680042849
    },
    {
        "content": "<p>But my analysis 1 professor would have been so proud of my <code>∀ ε &gt; 0</code>proof! <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 345254123,
        "sender_full_name": "Xavier Généreux",
        "timestamp": 1680042938
    },
    {
        "content": "<p>Thanks a lot <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  and <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  for your help! :)<br>\nThis makes a lot of sense. I was trying with <code>complex.of_real</code> at first but couldn't make it work.</p>",
        "id": 345254425,
        "sender_full_name": "Xavier Généreux",
        "timestamp": 1680043073
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"557459\">Xavier Généreux</span> has marked this topic as resolved.</p>",
        "id": 345254844,
        "sender_full_name": "Notification Bot",
        "timestamp": 1680043227
    }
]