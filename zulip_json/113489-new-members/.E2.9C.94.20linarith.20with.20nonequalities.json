[
    {
        "content": "<p>I have hypotheses like<br>\n<code>\ninst✝: LinearOrderedField α\nη: α\nhη: η ≠ 0\nhη2: ¬η &gt; 0\n⊢ -η &gt; 0\n</code><br>\nI expected <code>linarith</code> to be able to prove this, but it's not. I need some version of a trichotomy, that either \\eta &gt; 0 or \\eta = 0 or \\eta &lt; 0, but I guess that's not something it knows... is there a better tool than <code>linarith</code> for this? Or do I need to find an appropriate theorem, or maybe assume something stronger than <code>LinearOrderedField</code>? (I _think_ it should be enough, right...?)</p>",
        "id": 403674298,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1700692087
    },
    {
        "content": "<p>(zulip hint: triple backticks enclose code blocks)</p>",
        "id": 403674627,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700692291
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 403674682,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1700692323
    },
    {
        "content": "<p><code>linarith</code> doesn't handle NEq by default, but you can pass it an option: <code>linarith (config := {splitNe := true})</code></p>",
        "id": 403674725,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700692336
    },
    {
        "content": "<p>The way this works is that every time there's a not-equals, it splits into two cases, so if you have <code>n</code> not-equals, linarith has to prove <code>2^n</code> goals.</p>",
        "id": 403674811,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700692393
    },
    {
        "content": "<p>(If you see something that looks like an internal error in <code>linarith</code> when using this feature, I just pushed a fix to it <a href=\"#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20mathlib4.3Amaster/near/403669519\">in the last hour</a>, so you might need to updated mathlib.)</p>",
        "id": 403674851,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700692424
    },
    {
        "content": "<p>Thanks for the tip! Good to know, and makes sense why it's not the default. :) (and yes, I needed to pull haha)</p>",
        "id": 403681864,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1700696917
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"448405\">Alex Meiburg</span> has marked this topic as resolved.</p>",
        "id": 403681876,
        "sender_full_name": "Notification Bot",
        "timestamp": 1700696927
    }
]