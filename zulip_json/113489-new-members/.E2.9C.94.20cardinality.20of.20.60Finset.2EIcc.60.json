[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hmn</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hI</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">=</span> <span class=\"n\">Finset.Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set.ncard</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- `exact?` fails</span>\n  <span class=\"c1\">-- exact?</span>\n\n  <span class=\"c1\">-- `rw_search` fails to prove this goal</span>\n  <span class=\"c1\">-- rw_search</span>\n\n  <span class=\"c1\">-- how to show this goal...?</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 401612112,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1699794155
    },
    {
        "content": "<p>oh no. Sorry I posted in the wrong stream ....</p>",
        "id": 401612265,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1699794261
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 401612281,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699794295
    },
    {
        "content": "<p>Hello . I want to deal with finite set cardinality, but I am stumped by the basics.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hmn</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hI</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">=</span> <span class=\"n\">Finset.Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set.ncard</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- `exact?` fails</span>\n  <span class=\"c1\">-- exact?</span>\n\n  <span class=\"c1\">-- `rw_search` fails to prove this goal</span>\n  <span class=\"c1\">-- rw_search</span>\n\n  <span class=\"c1\">-- how to show this goal...?</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 401612405,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1699794418
    },
    {
        "content": "<p>This looks to me like two lemmas: first, one saying what the <code>Finset.card</code> of <code>Finset.Icc</code> is, and secondly a lemma saying that <code>Finset.card s = Set.ncard (s : Set X)</code>. Are either or both of those there?</p>",
        "id": 401612558,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699794601
    },
    {
        "content": "<p>Found <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.card_Icc#doc\">docs#Nat.card_Icc</a> using <code>loogle Finset.Icc, card</code></p>",
        "id": 401612651,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1699794685
    },
    {
        "content": "<p>Actually, <code>loogle</code>corrected me and said:</p>\n<blockquote>\n<p>Did you mean <a href=\"https://loogle.lean-lang.org/?q=Finset.Icc%2C%20%22card%22\">Finset.Icc, \"card\"</a>, <a href=\"http://\">Finset.Icc, Multiset.card</a>, or something else?<br>\nand hitting the first link got me to the that theorem.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"626349\">@Asei Inoue</span> you can send private messages to the <span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> bot</p>\n<p>(EDIT: I accidentally invoked it below with the last ping)</p>",
        "id": 401612862,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1699794855
    },
    {
        "content": "<p><span aria-label=\"exclamation\" class=\"emoji emoji-2757\" role=\"img\" title=\"exclamation\">:exclamation:</span> unknown identifier 'bot'<br>\nDid you mean <a href=\"https://loogle.lean-lang.org/?q=%22bot%22\"><code>\"bot\"</code></a>, <a href=\"https://loogle.lean-lang.org/?q=Lean.IR.UnreachableBranches.Value.bot\"><code>Lean.IR.UnreachableBranches.Value.bot</code></a>, or <a href=\"https://loogle.lean-lang.org/?q=bot\">something else</a>?</p>",
        "id": 401612863,
        "sender_full_name": "loogle",
        "timestamp": 1699794856
    },
    {
        "content": "<blockquote>\n<p>@Asei Inoue you can send private messages to the @loogle bot</p>\n</blockquote>\n<p>Or just use <a href=\"https://loogle.lean-lang.org/\">https://loogle.lean-lang.org/</a>, more convenient than a zulip bot</p>",
        "id": 401612917,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699794921
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> has marked this topic as unresolved.</p>",
        "id": 401612987,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699794993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <br>\nI see that <code>Set.ncard</code> and <code>Finset.card</code> are different. Thank you very much.</p>",
        "id": 401613272,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1699795320
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"327749\">@Pedro Sánchez Terraf</span> <span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span> Thank you!</p>",
        "id": 401613325,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1699795345
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 401613330,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699795348
    }
]