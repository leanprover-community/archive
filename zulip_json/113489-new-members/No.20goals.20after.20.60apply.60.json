[
    {
        "content": "<p>I see <code>no goals</code> after <code>apply</code>. When I remove <code>sorry</code>, I see the original goal. I thought that <code>apply</code> is like <code>library_search</code> -- either finds a theorem to close the proof or gives up. But it's doing something more mysterious here.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Function.SimpleFunc</span>\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span> <span class=\"n\">BigOperators</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">coe_sum</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">SimpleFunc</span> <span class=\"bp\">Ω</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">I</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"c1\">-- No goals</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 401912611,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699941983
    },
    {
        "content": "<p>You must be thinking of the <code>apply?</code> tactic. Your current code is inadvertently doing <code>apply sorry</code>, which closes the goal using <code>sorry</code>.</p>",
        "id": 401912937,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1699942171
    },
    {
        "content": "<p>Oh I see. I think there should be a theorem to close this but <code>apply?</code> does not find one</p>",
        "id": 401913045,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699942221
    },
    {
        "content": "<p>The closest I found is <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Function/SimpleFunc.html#MeasureTheory.SimpleFunc.coe_add\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Function/SimpleFunc.html#MeasureTheory.SimpleFunc.coe_add</a></p>",
        "id": 401913072,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699942246
    }
]