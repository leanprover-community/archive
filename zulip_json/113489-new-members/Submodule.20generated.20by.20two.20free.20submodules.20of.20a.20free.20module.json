[
    {
        "content": "<p>Do we have the theorem in Mathlib that the submodule generated by two (or finitely many) free submodules of a free module is free? I can't even state it. I think there is a universe problem.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.FreeModule.Basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Module</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Free</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Module.Free.sup</span> <span class=\"o\">(</span><span class=\"n\">K₁</span> <span class=\"n\">K₂</span> <span class=\"o\">:</span> <span class=\"n\">Submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">Free</span> <span class=\"n\">R</span> <span class=\"n\">K₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">Free</span> <span class=\"n\">R</span> <span class=\"n\">K₂</span><span class=\"o\">):</span>\n    <span class=\"n\">Free</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">K₁</span> <span class=\"bp\">⊔</span> <span class=\"n\">K₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">--        ~~~~~~~</span>\n  <span class=\"c1\">-- failed to synthesize instance Sup (Type u_2)</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 404128901,
        "sender_full_name": "Richard Copley",
        "timestamp": 1700932629
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Module.Free.sup</span> <span class=\"o\">(</span><span class=\"n\">K₁</span> <span class=\"n\">K₂</span> <span class=\"o\">:</span> <span class=\"n\">Submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">Free</span> <span class=\"n\">R</span> <span class=\"n\">K₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">Free</span> <span class=\"n\">R</span> <span class=\"n\">K₂</span><span class=\"o\">):</span>\n    <span class=\"n\">Free</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">K₁</span> <span class=\"bp\">⊔</span> <span class=\"n\">K₂</span> <span class=\"o\">:</span> <span class=\"n\">Submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>Lean needed more directions for the coercion.</p>",
        "id": 404130189,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700933292
    },
    {
        "content": "<p>Great! This is about 14 levels deep in a complex of rabbit holes. I'll get started doing Steinitz exchange stuff. Maybe it will be fun.</p>",
        "id": 404130828,
        "sender_full_name": "Richard Copley",
        "timestamp": 1700933630
    },
    {
        "content": "<p>Isn't it not true though? e.g. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>k</mi><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">R = k[x,y]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">M = R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>, and the submodules <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">xM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">yM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span></p>",
        "id": 404131150,
        "sender_full_name": "Reid Barton",
        "timestamp": 1700933774
    },
    {
        "content": "<p>Maybe you want to add in that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is a PID?</p>",
        "id": 404132893,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700934767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/113489-new-members/topic/Submodule.20generated.20by.20two.20free.20submodules.20of.20a.20free.20module/near/404131150\">said</a>:</p>\n<blockquote>\n<p>Isn't it not true though? e.g. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>k</mi><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">R = k[x,y]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">M = R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>, and the submodules <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">xM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">yM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span></p>\n</blockquote>\n<p>Forgive me, can you spell it out for me? I don't know what <code>xM ⊔ yM</code> is if it isn't the span of <code>{x, y}</code>. And <code>{x, y}</code> is linearly independent. What's missing?</p>",
        "id": 404133561,
        "sender_full_name": "Richard Copley",
        "timestamp": 1700935119
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x,y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> isn't linearly independent because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>⋅</mo><mi>x</mi><mo>−</mo><mi>x</mi><mo>⋅</mo><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">y \\cdot x - x \\cdot y = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>.</p>",
        "id": 404133875,
        "sender_full_name": "Reid Barton",
        "timestamp": 1700935277
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 404133940,
        "sender_full_name": "Richard Copley",
        "timestamp": 1700935309
    },
    {
        "content": "<p>Uh. But now what's the basis for <code>k[x,y]</code>?</p>",
        "id": 404134034,
        "sender_full_name": "Richard Copley",
        "timestamp": 1700935336
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">M = R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is free as an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-module, the basis is <code>{1}</code>.</p>",
        "id": 404134104,
        "sender_full_name": "Reid Barton",
        "timestamp": 1700935362
    },
    {
        "content": "<p>Super. Thanks for rescuing me.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/Submodule.20generated.20by.20two.20free.20submodules.20of.20a.20free.20module/near/404132893\">said</a>:</p>\n<blockquote>\n<p>Maybe you want to add in that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is a PID?</p>\n</blockquote>\n<p>That would do it, but I don't have it. There'll be something in the context that means I don't need this to be true.</p>",
        "id": 404135089,
        "sender_full_name": "Richard Copley",
        "timestamp": 1700935895
    },
    {
        "content": "<p>This weaker statement sufficed: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">K₁</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">K₂</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> are finitely generated <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-submodules of a free <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-module <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, there exists a free, finitely generated <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-submodule of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> which includes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">K₁</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">K₂</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Proof</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.FreeModule.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Finiteness</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module.Free</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n<span class=\"kn\">open</span> <span class=\"n\">Submodule</span>\n\n<span class=\"sd\">/-- If `K₁` and `K₂` are finitely generated `R`-submodules of a free `R`-module `M`, there</span>\n<span class=\"sd\">exists a free, finitely generated `R`-submodule of `M` which includes `K₁` and `K₂`. -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">exists_fg_sup_le</span> <span class=\"o\">(</span><span class=\"n\">K₁</span> <span class=\"n\">K₂</span> <span class=\"o\">:</span> <span class=\"n\">Submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hfg₁</span> <span class=\"o\">:</span> <span class=\"n\">K₁.FG</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hfg₂</span> <span class=\"o\">:</span> <span class=\"n\">K₂.FG</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∃</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">LinearIndependent</span> <span class=\"n\">R</span> <span class=\"o\">((</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">K₁</span> <span class=\"bp\">⊔</span> <span class=\"n\">K₂</span> <span class=\"bp\">≤</span> <span class=\"n\">span</span> <span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">S₁</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hfg₁</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">S₂</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hfg₂</span>\n  <span class=\"k\">let</span> <span class=\"o\">⟨⟨</span><span class=\"n\">ι</span><span class=\"o\">,</span> <span class=\"n\">ℰ</span><span class=\"o\">⟩⟩</span> <span class=\"o\">:=</span> <span class=\"o\">‹</span><span class=\"n\">Module.Free</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">›</span>\n  <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">DecidableEq</span> <span class=\"n\">ι</span> <span class=\"o\">:=</span> <span class=\"n\">Classical.decEq</span> <span class=\"n\">ι</span>\n  <span class=\"k\">let</span> <span class=\"n\">indices</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">S₁</span> <span class=\"bp\">∪</span> <span class=\"n\">S₂</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">attach.sup</span> <span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">ℰ.repr</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">support</span>\n  <span class=\"n\">use</span> <span class=\"n\">indices.image</span> <span class=\"n\">ℰ</span>\n  <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">span_union</span><span class=\"o\">,</span> <span class=\"n\">span_le</span><span class=\"o\">]</span>\n  <span class=\"n\">constructor</span>\n  <span class=\"bp\">.</span> <span class=\"k\">have</span> <span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">indices.image</span> <span class=\"n\">ℰ</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">,</span> <span class=\"n\">ℰ</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"k\">match</span> <span class=\"n\">Finset.mem_image.mp</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">hi</span><span class=\"o\">⟩</span>\n    <span class=\"n\">choose</span> <span class=\"n\">f</span> <span class=\"n\">h</span> <span class=\"n\">using</span> <span class=\"n\">hf</span>\n    <span class=\"k\">have</span> <span class=\"n\">hval</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">indices.image</span> <span class=\"n\">ℰ</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ℰ</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">funext</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hval</span> <span class=\"bp\">▸</span> <span class=\"n\">ℰ.linearIndependent.comp</span> <span class=\"n\">f</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">hxy</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">Subtype.ext</span> <span class=\"o\">(</span><span class=\"n\">hval</span> <span class=\"bp\">▸</span> <span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"n\">ℰ</span> <span class=\"n\">hxy</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ℰ</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ℰ</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n  <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">s</span> <span class=\"n\">hs</span>\n    <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Finset.coe_union</span> <span class=\"n\">S₁</span> <span class=\"n\">S₂</span><span class=\"o\">,</span> <span class=\"n\">Finset.mem_coe</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hs</span>\n    <span class=\"n\">unfold_let</span> <span class=\"n\">indices</span>\n    <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">SetLike.mem_coe</span><span class=\"o\">,</span> <span class=\"n\">Finset.sup_eq_biUnion</span><span class=\"o\">,</span> <span class=\"n\">Finset.coe_image</span><span class=\"o\">,</span>\n        <span class=\"n\">Finset.coe_biUnion</span><span class=\"o\">,</span> <span class=\"n\">Set.image_iUnion₂</span><span class=\"o\">,</span> <span class=\"n\">span_iUnion₂</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">mem_iSup_of_mem</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">⟩</span>\n      <span class=\"o\">(</span><span class=\"n\">mem_iSup_of_mem</span> <span class=\"o\">(</span><span class=\"n\">Finset.mem_attach</span> <span class=\"o\">(</span><span class=\"n\">S₁</span> <span class=\"bp\">∪</span> <span class=\"n\">S₂</span><span class=\"o\">)</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">⟩)</span>\n        <span class=\"o\">(</span><span class=\"n\">Basis.mem_span_repr_support</span> <span class=\"n\">ℰ</span> <span class=\"n\">s</span><span class=\"o\">))</span>\n</code></pre></div>\n</div></div>",
        "id": 404304552,
        "sender_full_name": "Richard Copley",
        "timestamp": 1701045259
    }
]