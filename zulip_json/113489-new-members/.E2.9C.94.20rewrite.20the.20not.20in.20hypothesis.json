[
    {
        "content": "<p>Hello<br>\nI currently have:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"bp\">¬‖⇑</span><span class=\"n\">K</span> <span class=\"n\">e</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K'</span> <span class=\"n\">e</span><span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">⊢</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">‖</span><span class=\"n\">K</span> <span class=\"n\">e</span> <span class=\"bp\">-</span> <span class=\"n\">K'</span> <span class=\"n\">e</span><span class=\"bp\">‖</span>\n</code></pre></div>\n<p>I want to change h to:<br>\n<code>h: ‖K e - K' e‖ \\neq 0</code></p>",
        "id": 339686257,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1678018698
    },
    {
        "content": "<p>I think the following could be useful:<br>\npos_iff_ne_zero. <br>\nI have tried some rw commands but they didn't work.</p>",
        "id": 339686482,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1678018805
    },
    {
        "content": "<p>I managed to do norm_num giving:<br>\n¬K e - K' e = 0      (a bit strange as 0 is real numberwhere as K is (fin n → ℝ) →ₗ[ℝ] fin m → ℝ )<br>\nthen 'simpa using h', which completed the goal</p>\n<p>Does this all look fine?</p>",
        "id": 339687565,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1678019345
    },
    {
        "content": "<p><code>pos_iff_ne_zero</code> doesn't work because it doesn't know about the fact that the norm is nonnegative.</p>",
        "id": 339688573,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1678019727
    },
    {
        "content": "<p>You can use <code>ne.lt_of_le h (norm_nonneg _)</code>.</p>",
        "id": 339688762,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1678019809
    },
    {
        "content": "<p><code>0</code> is <em>not</em> always a real. Many \"things\" (understand types) have a <code>0</code>. Typically, <code>nat</code>, <code>int</code>, <code>real</code>, the product of things that have a zero... In particular, <code>fin n -&gt; real</code> has a <code>0</code> because <code>real</code> has a <code>0</code>. The notation is available once you have an instance of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_zero\">docs#has_zero</a>.</p>",
        "id": 339689554,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1678020150
    },
    {
        "content": "<p>I should think that <code>¬‖K e - K' e‖ = 0</code> is definitionally equal to <code>‖K e - K' e‖ ≠ 0</code> so you could use <code>change</code> to do this. As Yael says, the proof of what you want isn't just formal logic, you have to use the lemma <code>norm_nonneg</code> somewhere to rule out the norm being negative.</p>",
        "id": 339689968,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678020358
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/rewrite.20the.20not.20in.20hypothesis/near/339689554\">said</a>:</p>\n<blockquote>\n<p><code>0</code> is <em>not</em> always a real. Many \"things\" (understand types) have a <code>0</code>. Typically, <code>nat</code>, <code>int</code>, <code>real</code>, the product of things that have a zero... In particular, <code>fin n -&gt; real</code> has a <code>0</code> because <code>real</code> has a <code>0</code>. The notation is available once you have an instance of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_zero\">docs#has_zero</a>.</p>\n</blockquote>\n<p>This makes sense, thank you! I was wanting to make sure that 0 is being used in vector form.</p>",
        "id": 339690330,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1678020513
    },
    {
        "content": "<p>You can just click on the 0 in the infoview to see its type.</p>",
        "id": 339690445,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678020560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/rewrite.20the.20not.20in.20hypothesis/near/339690445\">said</a>:</p>\n<blockquote>\n<p>You can just click on the 0 in the infoview to see its type.</p>\n</blockquote>\n<p>Your right. I should have done that. Escaped my mind. Thank you.</p>",
        "id": 339690624,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1678020632
    },
    {
        "content": "<p>When I do:<br>\n<code>specialize h_four (‖K e - K' e‖/10) _,</code><br>\nI get a goal: <code>⊢ 0 &lt; ‖⇑K e - ⇑K' e‖ / 10</code></p>\n<p>which I then finish by:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">apply</span> <span class=\"n\">div_pos</span><span class=\"o\">,</span>\n<span class=\"n\">norm_num</span><span class=\"o\">,</span>\n<span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">norm_num</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>straight after  I have to do: <code>specialize h_seven (‖K e - K' e‖/10) _,</code><br>\nwhich gives the same goal as before and hence has the same 4-line answer.</p>\n<p>I can't help but think there is a more efficient way of doing this (trying to avoid redundant lines in my code)</p>",
        "id": 339691133,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1678020884
    },
    {
        "content": "<p>You could do <code>have helpful_thing : 0 &lt; ||K e - K' e||/10,</code> beforehand (sorry for ASCII, on mobile), prove it with your proof and then use it more than once</p>",
        "id": 339692013,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678021369
    },
    {
        "content": "<p>Thank you Prof, I have done the 'have' statement.</p>",
        "id": 339693950,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1678022396
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"583816\">Abu Al Hassan</span> has marked this topic as resolved.</p>",
        "id": 339693962,
        "sender_full_name": "Notification Bot",
        "timestamp": 1678022400
    }
]