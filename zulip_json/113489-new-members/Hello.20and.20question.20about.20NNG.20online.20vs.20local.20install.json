[
    {
        "content": "<p>Hello - <br>\n  I'm a new member here, I'm interested learning more about lean prover, but it's just for fun for me.  I am a retired EE.   </p>\n<p>I was excited to see the post about How To Prove it with Lean, and I had completed previously the natural number game in Lean 3, but thought since it was using Lean 4 I should go back and redo it in lean 4.  I had been doing the online version at <a href=\"https://adam.math.hhu.de/\">https://adam.math.hhu.de/</a> but had been having trouble completing Power World Level 6 mul power.  So I tried  the version from <a href=\"https://github.com/leanprover/lean4-samples\">https://github.com/leanprover/lean4-samples</a> installing locally.  I was able to figure out that I could complete the proof using </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_left_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>but that was somewhat unsatisfying since I really wanted to understand how to do it with rw and I was having trouble with terms like a ^ n getting errors.  I was able to at least get the steps using </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">show_term</span> <span class=\"o\">{</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_left_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"o\">}</span>\n</code></pre></div>\n<p>in my local version on lean4 on my laptop.  But trying to use that in the online version I ran into a couple of problems terms like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">zero_is_0</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>but in the online version I needed to write it like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hd</span>\n<span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">zero_is_0</span><span class=\"o\">]</span>\n<span class=\"bp\">...</span>\n</code></pre></div>\n<p>But more of an issue was when I got the part where I need use rewrites of the form</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span>  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)]</span>\n</code></pre></div>\n<p>I get and error on the induction line</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Line</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">Character</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"bp\">'</span><span class=\"gr\">sorry</span><span class=\"bp\">'</span>\n</code></pre></div>\n<p>for my purposed I'm fine using the local version installed on my machine but I thought the online version was so cool and I really got a lot out of using it with leanprover 3 I thought I would ask if anyone knows whats going on.</p>\n<p>Sorry for the lenghty explanation and Thanks!<br>\nStephen Hicks</p>",
        "id": 389738338,
        "sender_full_name": "Stephen Hicks",
        "timestamp": 1694113933
    },
    {
        "content": "<p>NNG induction (used in NNG4) isn't the same as core Lean 4 induction (used in lean4-samples); we re-implement some tactics to make them more beginner-friendly, that probably explains the difference in behaviour. The other error I don't really know what's going on, can you maybe post your full proof script which generates the error?</p>",
        "id": 389743501,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694115785
    },
    {
        "content": "<p>Thank you so much for the quick reply.  Of course!  I didn't do it because I was a bit worried about spoiling the game.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">MyNat.mul_pow</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hd</span>\n<span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_zero</span><span class=\"o\">]</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_one</span><span class=\"o\">]</span>\n<span class=\"n\">rfl</span>\n<span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_succ</span><span class=\"o\">]</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hd</span><span class=\"o\">]</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span>  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)]</span>\n<span class=\"c1\">--    rw [mul_assoc a b (a ^ n * b ^ n)]</span>\n<span class=\"c1\">--    rw [mul_comm (a ^ n) a]</span>\n<span class=\"c1\">--    rw [mul_comm (b ^ n) b]</span>\n<span class=\"c1\">--    rw [mul_left_comm (a * a ^ n) b (b ^ n)]</span>\n<span class=\"c1\">--    rw [mul_assoc a (a ^ n) (b ^ n)]</span>\n<span class=\"c1\">--   rw [mul_left_comm b a (a ^ n * b ^ n)]</span>\n<span class=\"c1\">-- simp only [mul_comm, mul_assoc, mul_left_comm]</span>\n</code></pre></div>\n<p>and the error is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Goal</span><span class=\"o\">:</span>\n<span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">n</span>\n<span class=\"n\">Line</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">Character</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">declaration</span> <span class=\"n\">uses</span> <span class=\"bp\">'</span><span class=\"gr\">sorry</span><span class=\"bp\">'</span>\n</code></pre></div>\n<p>If I comment out the last rw and uncomment the simp only it completes the goal</p>",
        "id": 389747603,
        "sender_full_name": "Stephen Hicks",
        "timestamp": 1694117133
    },
    {
        "content": "<p>The game is going to be completely rewritten this month because I want to expand it and then use the expanded version for teaching, which starts in early October. So don't worry about spoilers. The solutions are all in the source code on GitHub anyway so publically available</p>",
        "id": 389750971,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694118048
    },
    {
        "content": "<p>Thank you for the quick reply.  I'm happy to wait and retry on the new version when it comes out.  Also happy to submit bugs if you do that kind of tracking.</p>",
        "id": 389752501,
        "sender_full_name": "Stephen Hicks",
        "timestamp": 1694118536
    },
    {
        "content": "<p>The problem with your code is that the last line talks about <code>n</code> but there is no <code>n</code> in sight in the goal or context (it disappeared when you applied induction on it). The problem with the game is that it's giving you an extremely unhelpful error, but normal service is restored if you change those <code>n</code>s to <code>d</code>. Please feel free to open an issue, the repo is <a href=\"https://github.com/hhu-adam/NNG4\">https://github.com/hhu-adam/NNG4</a></p>",
        "id": 389753934,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694119003
    },
    {
        "content": "<p>Thanks so much!  Duh!  I will look closer next time.  And thanks for the liink I will write up an issue for the message and also I have another place to look to see if it's already a known problem</p>",
        "id": 389759467,
        "sender_full_name": "Stephen Hicks",
        "timestamp": 1694121439
    }
]