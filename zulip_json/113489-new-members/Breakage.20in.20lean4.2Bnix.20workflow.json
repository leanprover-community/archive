[
    {
        "content": "<p>Something seems to have gone wrong recently with my setup for using nix and lean together. I'm wondering if anyone else might be experiencing anything similar, or if anyone can tell whether this is worth a github issue somewhere. Basically, a fresh lean project, created using</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">nix</span> <span class=\"n\">flake</span> <span class=\"n\">init</span> <span class=\"bp\">-</span><span class=\"n\">t</span> <span class=\"n\">github</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span>\n</code></pre></div>\n<p>throws an error when I open the MyPackage.lean file in nvim (with lean.nvim for LSP):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">z8sin8scrnbkqrm3gxhrx4ywf9gr9bvp</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">dev</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/../</span><span class=\"n\">bin</span><span class=\"bp\">/../</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lake</span> <span class=\"n\">setup</span><span class=\"bp\">-</span><span class=\"n\">file</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">graham</span><span class=\"bp\">/</span><span class=\"n\">Projects</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">tests</span><span class=\"bp\">/</span><span class=\"n\">cozy</span><span class=\"bp\">-</span><span class=\"n\">verif</span><span class=\"bp\">/</span><span class=\"n\">MyPackage.lean</span> <span class=\"n\">Init</span><span class=\"bp\">`</span> <span class=\"n\">failed</span><span class=\"o\">:</span>\n   <span class=\"n\">This</span> <span class=\"n\">is</span> <span class=\"n\">just</span> <span class=\"n\">a</span> <span class=\"n\">simple</span> <span class=\"n\">Nix</span> <span class=\"n\">adapter</span> <span class=\"n\">for</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">print</span><span class=\"bp\">-</span><span class=\"n\">paths</span><span class=\"bp\">|</span><span class=\"n\">serve</span><span class=\"bp\">`.</span>\n</code></pre></div>\n<p>I'm not sure, but I'm wondering if this might be a regression in leanprover/lean4 - the reason being that the same project (again, straight from the template in leanprover/lean4) works fine with lean.nvim when I use an earlier version of leanprover/lean4 in my flake.lock.</p>",
        "id": 405418930,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1701456137
    },
    {
        "content": "<p>The experimental Nix setup is being deprecated for interactive use. If there is interest in continuing its development, this should be done in a new repo.</p>",
        "id": 405420062,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1701456635
    },
    {
        "content": "<p>Ah, OK. Thanks for the quick reply!</p>",
        "id": 405420365,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1701456766
    },
    {
        "content": "<p>See also <a href=\"#narrow/stream/270676-lean4/topic/setting.20up.20a.20project.20with.20nix/near/405368794\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/setting.20up.20a.20project.20with.20nix/near/405368794</a></p>",
        "id": 405420457,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1701456812
    },
    {
        "content": "<p>Just in case someone is interested in tracking this down in the future, the first non-working commit seems to be: <a href=\"https://github.com/leanprover/lean4/commit/7ff7cf9b5a7246d584a4b31fad35feb72ce1adf8\">https://github.com/leanprover/lean4/commit/7ff7cf9b5a7246d584a4b31fad35feb72ce1adf8</a></p>",
        "id": 405423153,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1701457771
    },
    {
        "content": "<p>See also <a href=\"https://github.com/leanprover/lean4/pull/2858#issuecomment-1824045672\">this comment</a>. The API for <code>print-paths</code> (now <code>setup-file</code>) changed and the Nix side wasn't adjusted with it.</p>",
        "id": 405427065,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1701459489
    },
    {
        "content": "<p>Apropos: <a href=\"https://github.com/leanprover/lean4/pull/2858#issuecomment-1824045672\">https://github.com/leanprover/lean4/pull/2858#issuecomment-1824045672</a></p>\n<p>I've tried to put together a minimal fix. It gets the interactive nix features working for nvim and for lean's nix-bundled emacs and vscode. Would it be OK if I put in a PR?</p>",
        "id": 406799903,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1702054214
    },
    {
        "content": "<p>Please see above:<br>\n<span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113489-new-members/topic/Breakage.20in.20lean4.2Bnix.20workflow/near/405420062\">said</a>:</p>\n<blockquote>\n<p>The experimental Nix setup is being deprecated for interactive use. If there is interest in continuing its development, this should be done in a new repo.</p>\n</blockquote>",
        "id": 406800710,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1702054530
    },
    {
        "content": "<p>Right, apologies, I did see that. The linked issue comment says</p>\n<blockquote>\n<p>If you are using Lean 4 with Nix and stumbled upon this PR because it broke your environment, feel free to submit a PR to adjust the Nix side as well!</p>\n</blockquote>\n<p>So I thought a quick band-aid might be OK, until e.g. a lake wrapper like Joachim Breitner was envisioning appears. But of course, I understand if it's too much hassle (that's why I asked!)</p>",
        "id": 406802338,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1702054973
    },
    {
        "content": "<p>Yes, the PR comment is older than the one above :) . I think interactive support is relatively independent of a Lake wrapper</p>",
        "id": 406802767,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1702055117
    },
    {
        "content": "<p>But I would also caution against spending too much time on interactive support. Inevitably there will be Lean/Lake features based on some controlled amount of impurity that Nix will not be able to support as effectively or efficiently so at best it could be useful for building full packages non-interactively for deployment or for providing built dependencies to Lake.</p>",
        "id": 406803114,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1702055252
    },
    {
        "content": "<p>Fair enough! Thanks for the warning. :)</p>\n<p>Yes, I wasn't really planning on doing too much with it beyond this, just temporarily patching my old workflow.</p>",
        "id": 406803955,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1702055574
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 406804996,
        "sender_full_name": "Graham Leach-Krouse",
        "timestamp": 1702055929
    }
]