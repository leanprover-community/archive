[
    {
        "content": "<p>I am trying to use the <code>tidy</code> attribute with <code>linarith</code> but it does not seem to help</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic.tidy</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.linarith.</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">example1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">7</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">tidy</span><span class=\"o\">,</span>\n  <span class=\"n\">linarith</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">example2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">7</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">tidy</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>any reason why <code>example1</code> is accepted but <code>example2</code> doesn't? Shoulnd't tidy eventually try to apply <code>linarith</code> to the goal?</p>",
        "id": 358956010,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1684322187
    },
    {
        "content": "<p>The following works, I guess with the attribute way the extra arguments get filled in differently (or not at all?)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">example2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">7</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">tidy</span> <span class=\"o\">{</span><span class=\"n\">tactics</span> <span class=\"o\">:=</span> <span class=\"n\">tactic.tidy.default_tactics</span> <span class=\"bp\">++</span>\n                    <span class=\"o\">[</span> <span class=\"n\">tactic.linarith</span> <span class=\"n\">true</span> <span class=\"n\">false</span> <span class=\"o\">[]</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">pure</span> <span class=\"s2\">\"linarith\"</span> <span class=\"o\">]</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 358964120,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1684324748
    },
    {
        "content": "<p>No, <code>tidy</code> does not try <code>linarith</code>.</p>",
        "id": 358971961,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684326977
    },
    {
        "content": "<p>by default it will not, but I added the <code>tidy</code> attribute to <code>linarith</code> at the beginning.</p>",
        "id": 358973703,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1684327459
    },
    {
        "content": "<p>Apologies, I hadn't read your post properly. I don't know what's going on.</p>",
        "id": 358973821,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684327496
    },
    {
        "content": "<p>Wait -- is that how it works? What other things are tagged <code>tidy</code>? (I'm not at lean right now). Is it tactics or lemmas?</p>",
        "id": 358974084,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684327568
    },
    {
        "content": "<p>It should be, according to how they are used in the tidy module:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">run_tactics</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">string</span> <span class=\"o\">:=</span>\n<span class=\"k\">do</span> <span class=\"n\">names</span> <span class=\"bp\">←</span> <span class=\"kn\">attribute</span><span class=\"bp\">.</span><span class=\"n\">get_instances</span> <span class=\"bp\">`</span><span class=\"n\">tidy</span><span class=\"o\">,</span>\n   <span class=\"n\">first</span> <span class=\"o\">(</span><span class=\"n\">names.map</span> <span class=\"n\">name_to_tactic</span><span class=\"o\">)</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">fail</span> <span class=\"s2\">\"no @[tidy] tactics succeeded\"</span>\n</code></pre></div>",
        "id": 358974602,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1684327701
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- roughly: grep \"attribute.*tidy\"</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">algebraic_geometry</span><span class=\"bp\">/</span><span class=\"n\">presheafed_space.lean</span><span class=\"o\">:</span><span class=\"mi\">29</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.op_induction'</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">algebraic_geometry</span><span class=\"bp\">/</span><span class=\"n\">sheafed_space.lean</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.op_induction'</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">algebraic_geometry</span><span class=\"bp\">/</span><span class=\"n\">stalks.lean</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.op_induction'</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">adjunction</span><span class=\"bp\">/</span><span class=\"n\">comma.lean</span><span class=\"o\">:</span><span class=\"mi\">132</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">category</span><span class=\"bp\">/</span><span class=\"n\">Groupoid.lean</span><span class=\"o\">:</span><span class=\"mi\">82</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">category</span><span class=\"bp\">/</span><span class=\"n\">pairwise.lean</span><span class=\"o\">:</span><span class=\"mi\">78</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">discrete_category.lean</span><span class=\"o\">:</span><span class=\"mi\">91</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">graded_object.lean</span><span class=\"o\">:</span><span class=\"mi\">153</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">cones.lean</span><span class=\"o\">:</span><span class=\"mi\">97</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">connected.lean</span><span class=\"o\">:</span><span class=\"mi\">61</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">filtered.lean</span><span class=\"o\">:</span><span class=\"mi\">33</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">over</span><span class=\"bp\">/</span><span class=\"n\">connected.lean</span><span class=\"o\">:</span><span class=\"mi\">39</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">over</span><span class=\"bp\">/</span><span class=\"n\">products.lean</span><span class=\"o\">:</span><span class=\"mi\">72</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">over</span><span class=\"bp\">/</span><span class=\"n\">products.lean</span><span class=\"o\">:</span><span class=\"mi\">86</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">over</span><span class=\"bp\">/</span><span class=\"n\">products.lean</span><span class=\"o\">:</span><span class=\"mi\">146</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">binary_products.lean</span><span class=\"o\">:</span><span class=\"mi\">95</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">binary_products.lean</span><span class=\"o\">:</span><span class=\"mi\">189</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">biproducts.lean</span><span class=\"o\">:</span><span class=\"mi\">84</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">biproducts.lean</span><span class=\"o\">:</span><span class=\"mi\">161</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">equalizers.lean</span><span class=\"o\">:</span><span class=\"mi\">52</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">finite_limits.lean</span><span class=\"o\">:</span><span class=\"mi\">121</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">finite_limits.lean</span><span class=\"o\">:</span><span class=\"mi\">143</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">kernels.lean</span><span class=\"o\">:</span><span class=\"mi\">88</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">multiequalizer.lean</span><span class=\"o\">:</span><span class=\"mi\">389</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">multiequalizer.lean</span><span class=\"o\">:</span><span class=\"mi\">554</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">products.lean</span><span class=\"o\">:</span><span class=\"mi\">48</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">pullbacks.lean</span><span class=\"o\">:</span><span class=\"mi\">31</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">terminal.lean</span><span class=\"o\">:</span><span class=\"mi\">28</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">types.lean</span><span class=\"o\">:</span><span class=\"mi\">46</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">wide_equalizers.lean</span><span class=\"o\">:</span><span class=\"mi\">91</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">wide_pullbacks.lean</span><span class=\"o\">:</span><span class=\"mi\">68</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">limits</span><span class=\"bp\">/</span><span class=\"n\">shapes</span><span class=\"bp\">/</span><span class=\"n\">wide_pullbacks.lean</span><span class=\"o\">:</span><span class=\"mi\">162</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">monoidal</span><span class=\"bp\">/</span><span class=\"n\">CommMon_.lean</span><span class=\"o\">:</span><span class=\"mi\">136</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">monoidal</span><span class=\"bp\">/</span><span class=\"n\">Mon_.lean</span><span class=\"o\">:</span><span class=\"mi\">269</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">monoidal</span><span class=\"bp\">/</span><span class=\"n\">free</span><span class=\"bp\">/</span><span class=\"n\">coherence.lean</span><span class=\"o\">:</span><span class=\"mi\">89</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">monoidal</span><span class=\"bp\">/</span><span class=\"n\">of_chosen_finite_products.lean</span><span class=\"o\">:</span><span class=\"mi\">169</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">monoidal</span><span class=\"bp\">/</span><span class=\"n\">of_chosen_finite_products.lean</span><span class=\"o\">:</span><span class=\"mi\">202</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">monoidal</span><span class=\"bp\">/</span><span class=\"n\">of_has_finite_products.lean</span><span class=\"o\">:</span><span class=\"mi\">43</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">monoidal</span><span class=\"bp\">/</span><span class=\"n\">of_has_finite_products.lean</span><span class=\"o\">:</span><span class=\"mi\">111</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">preadditive</span><span class=\"bp\">/</span><span class=\"n\">biproducts.lean</span><span class=\"o\">:</span><span class=\"mi\">841</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">preadditive</span><span class=\"bp\">/</span><span class=\"n\">projective.lean</span><span class=\"o\">:</span><span class=\"mi\">115</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">structured_arrow.lean</span><span class=\"o\">:</span><span class=\"mi\">147</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">structured_arrow.lean</span><span class=\"o\">:</span><span class=\"mi\">295</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">with_terminal.lean</span><span class=\"o\">:</span><span class=\"mi\">55</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">with_terminal.lean</span><span class=\"o\">:</span><span class=\"mi\">212</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">opposite.lean</span><span class=\"o\">:</span><span class=\"mi\">125</span><span class=\"o\">:</span><span class=\"n\">automatically</span><span class=\"o\">,</span> <span class=\"n\">for</span> <span class=\"n\">use</span> <span class=\"k\">with</span> <span class=\"bp\">`</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">op_induction'</span><span class=\"bp\">`.</span> <span class=\"n\">This</span> <span class=\"n\">is</span> <span class=\"n\">necessary</span> <span class=\"n\">because</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">tidy.lean</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"o\">:</span><span class=\"kd\">@[user_attribute]</span> <span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">tidy_attribute</span> <span class=\"o\">:</span> <span class=\"n\">user_attribute</span> <span class=\"o\">:=</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">tidy.lean</span><span class=\"o\">:</span><span class=\"mi\">26</span><span class=\"o\">:</span><span class=\"k\">do</span> <span class=\"n\">names</span> <span class=\"bp\">←</span> <span class=\"kn\">attribute</span><span class=\"bp\">.</span><span class=\"n\">get_instances</span> <span class=\"bp\">`</span><span class=\"n\">tidy</span><span class=\"o\">,</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">sheaves</span><span class=\"bp\">/</span><span class=\"n\">presheaf.lean</span><span class=\"o\">:</span><span class=\"mi\">176</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.op_induction'</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">sheaves</span><span class=\"bp\">/</span><span class=\"n\">sheaf_condition</span><span class=\"bp\">/</span><span class=\"n\">equalizer_products.lean</span><span class=\"o\">:</span><span class=\"mi\">209</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">sheaves</span><span class=\"bp\">/</span><span class=\"n\">stalks.lean</span><span class=\"o\">:</span><span class=\"mi\">150</span><span class=\"o\">:</span><span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.op_induction'</span>\n</code></pre></div>",
        "id": 358974665,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684327722
    },
    {
        "content": "<p>So, mostly, if not all, tactics.</p>",
        "id": 358974784,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684327757
    },
    {
        "content": "<p>instead of setting the <code>tactics</code> field explicitly the following also works</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[tidy]</span> <span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">my_linarith</span> <span class=\"o\">:=</span> <span class=\"n\">tactic.linarith</span> <span class=\"n\">true</span> <span class=\"n\">false</span> <span class=\"o\">[]</span>\n</code></pre></div>",
        "id": 358974927,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1684327792
    },
    {
        "content": "<p>Uniquifying the above, this is what is left:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.case_bash</span>\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.discrete_cases</span>\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">tidy</span><span class=\"o\">]</span> <span class=\"n\">tactic.op_induction'</span>\n</code></pre></div>\n<p>I do not know why linarith is misbehaving...</p>",
        "id": 358976966,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684328340
    },
    {
        "content": "<p>It might have to do with the fact that all the other working <code>tidy</code> attributes are placed on  a <code>tactic unit</code>, while <code>tactic.linarith</code> takes a few arguments, before giving out a <code>tactic unit</code>.  This would explain why passing the arguments and giving a new name to the tactic also works with the attribute.</p>",
        "id": 358978574,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684328734
    },
    {
        "content": "<p>Here is a possible answer:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">name_to_tactic</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">string</span> <span class=\"o\">:=</span>\n<span class=\"c1\">--do d ← get_decl n,</span>\n<span class=\"c1\">--   e ← mk_const n,</span>\n<span class=\"c1\">--   let t := d.type,</span>\n   <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">=ₐ</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span> <span class=\"n\">unit</span><span class=\"o\">))</span> <span class=\"k\">then</span>\n<span class=\"c1\">--     (eval_expr (tactic unit) e) &gt;&gt;= (λ t, t &gt;&gt; (name.to_string &lt;$&gt; strip_prefix n))</span>\n   <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">=ₐ</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span> <span class=\"n\">string</span><span class=\"o\">))</span> <span class=\"k\">then</span>\n<span class=\"c1\">--     (eval_expr (tactic string) e) &gt;&gt;= (λ t, t)</span>\n   <span class=\"k\">else</span> <span class=\"n\">fail</span><span class=\"bp\">!</span>\n     <span class=\"s2\">\"name_to_tactic cannot take `{n} as input: its type must be `tactic string` or `tactic unit`\"</span>\n</code></pre></div>\n<p><code>name_to_tactic</code> only works with <code>tactic unit</code> or <code>tactic string</code>.</p>",
        "id": 358979243,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684328890
    },
    {
        "content": "<p>[I commented out the lines above, to highlight where I believe that <code>linarith</code> falls through.]</p>",
        "id": 358979530,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684328979
    },
    {
        "content": "<p>makes sense. I guess in a proof script the extra arguments get filled in with defaults, via the setup_tactic_parser mechanism.</p>",
        "id": 358980190,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1684329146
    },
    {
        "content": "<p>Also, the <em>interactive</em> tactic linarith can run with nothing, but its signature still allows for it to receive inputs.  I think that the optional arguments go in the way of the <code>name_to_tactic</code> process.</p>",
        "id": 358981006,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1684329356
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"615009\">Andrea Vezzosi</span> has marked this topic as resolved.</p>",
        "id": 359446750,
        "sender_full_name": "Notification Bot",
        "timestamp": 1684428470
    }
]