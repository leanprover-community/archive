[
    {
        "content": "<p>Can anyone help me  with this sorry in \"theorem det_mul2 \"?<br>\nThis seems so easy, but I can't get anything from \"apply?\" or \"ring\" or \"mul_left_cancel\"......<br>\nIt is driving me crazy <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.Determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Fin</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Sign</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Sqrt</span>\n\n\n<span class=\"c1\">-- set_option trace.Meta.synthInstance true</span>\n<span class=\"c1\">-- set_option maxHeartbeats 0</span>\n\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">z</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Equiv</span> <span class=\"n\">Equiv.Perm</span> <span class=\"n\">Finset</span> <span class=\"n\">Function</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Matrix</span> <span class=\"c1\">--目的是避免模糊定义mul_apply</span>\n\n  <span class=\"kn\">open</span> <span class=\"n\">Matrix</span> <span class=\"n\">BigOperators</span>\n\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">m</span><span class=\"o\">]</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n  <span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"s2\">\"ε \"</span> <span class=\"n\">σ</span><span class=\"o\">:</span><span class=\"n\">arg</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">((</span><span class=\"n\">sign</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- -----/行列式</span>\n\n<span class=\"c1\">-- 原来有toFun的结构，直接写名词的话，它要用toFun来替换，</span>\n<span class=\"c1\">-- 所以detRowAlternating2具体类型应该是和这个相同(↑detRowAlternating2).toFun : (?m.32939 → ?m.32939 → ?m.32941) → ?m.32941</span>\n<span class=\"c1\">-- 因此detRowAlternating2 M的类型就是R</span>\n  <span class=\"kd\">def</span> <span class=\"n\">detRowAlternating2</span>\n  <span class=\"o\">:</span> <span class=\"n\">AlternatingMap</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">R</span> <span class=\"n\">n</span>  <span class=\"c1\">--- 最后这个参数n属于补充说明,实际形式上只需传三个参数即可</span>\n  <span class=\"o\">:=</span>\n  <span class=\"c1\">-- have h1:= (</span>\n  <span class=\"c1\">--   (MultilinearMap.mkPiAlgebra R n R).compLinearMap</span>\n  <span class=\"c1\">--     LinearMap.proj</span>\n  <span class=\"c1\">-- )</span>\n  <span class=\"c1\">-- have h1fun:= h1.toFun</span>\n  <span class=\"n\">MultilinearMap.alternatization</span> <span class=\"o\">(</span>\n    <span class=\"o\">(</span><span class=\"n\">MultilinearMap.mkPiAlgebra</span> <span class=\"n\">R</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">compLinearMap</span>\n      <span class=\"n\">LinearMap.proj</span>\n  <span class=\"o\">)</span>\n\n<span class=\"c1\">-- 问题：v是什么？</span>\n<span class=\"c1\">-- MultilinearMap R (fun x（x就是n） ↦ n → R) R 也就是(n → n → R) → R</span>\n  <span class=\"n\">abbrev</span> <span class=\"n\">det2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n    <span class=\"c1\">-- have h1 := detRowAlternating2 M</span>\n    <span class=\"n\">detRowAlternating2</span> <span class=\"n\">M</span> <span class=\"c1\">-- 这里为什么类型是R，因为detRowAlternating2相当于detRowAlternating2.toFun</span>\n    <span class=\"c1\">-- 也就是(?m.33147 → ?m.33147 → ?m.33149) → ?m.33149</span>\n  <span class=\"k\">#check</span> <span class=\"n\">detRowAlternating2.toFun</span> <span class=\"c1\">-- 所以上面M不是参数，而是被作用了，detRowAlternating2是一个映射作用到M上了</span>\n\n\n\n  <span class=\"c1\">-- 正式开始：</span>\n\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh1</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span><span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span> <span class=\"bp\">=</span>\n      <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Eq.symm</span>\n      <span class=\"n\">apply</span> <span class=\"n\">sum_subset</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n        <span class=\"n\">exact</span> <span class=\"n\">mem_univ</span> <span class=\"n\">h1</span>\n      <span class=\"n\">intros</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span> <span class=\"n\">h5</span>\n      <span class=\"n\">apply</span> <span class=\"n\">det_mul_aux</span> <span class=\"c1\">-- ???</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_filter</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span> <span class=\"c1\">-- ???</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_univ</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">true_and_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span>\n      <span class=\"n\">set</span> <span class=\"n\">h6</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">h3</span> <span class=\"n\">x</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h5</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span>\n    <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span>\n      <span class=\"bp\">∑</span>\n        <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span>\n            <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n            <span class=\"bp\">*</span>\n            <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n          <span class=\"o\">)</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_comm</span><span class=\"o\">]</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_comm</span><span class=\"o\">]</span> <span class=\"c1\">-- 相当于没变，只改成了x,y</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_bij</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">ih1</span> <span class=\"n\">ih2</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih3</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mem_filter.mp</span> <span class=\"n\">ih2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">right</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih4</span><span class=\"o\">:=</span> <span class=\"n\">ofBijective</span> <span class=\"n\">ih1</span> <span class=\"n\">ih3</span>\n        <span class=\"n\">exact</span> <span class=\"n\">ih4</span> <span class=\"c1\">-- 如果这里定义错了，下面满盘皆输</span>\n      <span class=\"c1\">-- intros ih1 ih2</span>\n      <span class=\"c1\">--   have ih3:= Equiv.refl n</span>\n      <span class=\"c1\">--   simp only [Perm]</span>\n      <span class=\"c1\">--   exact ih3</span>\n      <span class=\"c1\">-- apply sum_bij -- ???</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n        <span class=\"n\">intro</span> <span class=\"n\">h2</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_univ</span><span class=\"o\">]</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h_1</span> <span class=\"n\">h_2</span>\n        <span class=\"k\">have</span> <span class=\"n\">h_3</span><span class=\"o\">:=</span> <span class=\"n\">mem_filter.1</span> <span class=\"n\">h_2</span>\n        <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">h_4</span><span class=\"o\">,</span><span class=\"n\">h_5</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h_3</span>\n        <span class=\"c1\">-- have h_6:= Equiv.ofBijective h_1 h_5 -- ???</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">id_eq</span><span class=\"o\">,</span> <span class=\"n\">refl_apply</span><span class=\"o\">]</span>\n        <span class=\"n\">rfl</span>\n      <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span> <span class=\"n\">injection</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"c1\">---?</span>\n        <span class=\"n\">done</span>\n      <span class=\"c1\">-- intros inj_1 inj_2 inj_3 inj_4 inj_5</span>\n      <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">b</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">⟨</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">mem_filter.2</span> <span class=\"o\">⟨</span><span class=\"n\">mem_univ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">b.bijective</span><span class=\"o\">⟩,</span> <span class=\"n\">coe_fn_injective</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"c1\">---?</span>\n        <span class=\"n\">done</span>\n      <span class=\"n\">done</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh3</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n      <span class=\"bp\">·</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Fintype.sum_equiv</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n        <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Equiv.mulRight</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span>\n        <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h5</span>\n          <span class=\"k\">have</span> <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">((</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"n\">j</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">_</span> <span class=\"bp\">≃</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod_comp</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Equiv.Perm.coe_mul</span><span class=\"o\">,</span> <span class=\"n\">apply_inv_self</span><span class=\"o\">,</span> <span class=\"n\">Function.comp_apply</span><span class=\"o\">]</span>\n          <span class=\"k\">have</span> <span class=\"n\">h6</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"n\">h1</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">h5</span>\n            <span class=\"o\">:=</span>\n            <span class=\"k\">calc</span>\n              <span class=\"n\">ε</span> <span class=\"n\">h1</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">sign_mul</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)]</span>\n                <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Int.cast_mul</span><span class=\"o\">,</span> <span class=\"n\">Units.val_mul</span><span class=\"o\">]</span>\n              <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">h5</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">inv_mul_cancel_right</span><span class=\"o\">]</span>\n          <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">Equiv.coe_mulRight</span><span class=\"o\">,</span> <span class=\"n\">h6</span><span class=\"o\">]</span>\n          <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n      <span class=\"n\">done</span>\n\n\n  <span class=\"c1\">-- @[simp]</span>\n  <span class=\"kd\">theorem</span> <span class=\"n\">det_mul2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span><span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"o\">:=</span>\n      <span class=\"k\">calc</span>\n          <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">det_apply'</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_apply</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod_univ_sum</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_sum</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Fintype.piFinset_univ</span><span class=\"o\">]</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.sum_comm</span><span class=\"o\">]</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span>\n                <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh1</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span>\n                <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh2</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">τ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">τ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_left_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod_mul_distrib</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh3</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"c1\">-- simp only [det_apply', Finset.mul_sum, mul_comm, mul_left_comm, mul_assoc]</span>\n            <span class=\"c1\">-- simp only [det_apply']</span>\n            <span class=\"c1\">-- simp only [Finset.mul_sum]</span>\n            <span class=\"c1\">-- simp only [mul_comm]</span>\n            <span class=\"c1\">-- simp only [mul_left_comm]</span>\n            <span class=\"c1\">-- simp only [mul_assoc]</span>\n            <span class=\"k\">have</span> <span class=\"n\">h2</span><span class=\"o\">:=</span> <span class=\"o\">((</span><span class=\"n\">congr</span> <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"n\">HMul.hMul</span>\n                          <span class=\"o\">((</span><span class=\"n\">det_apply'</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                            <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span>\n                              <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                                    <span class=\"o\">(</span><span class=\"n\">prod_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x_1</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span> <span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                                <span class=\"o\">(</span><span class=\"n\">mul_comm</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)))))</span>\n                        <span class=\"o\">((</span><span class=\"n\">det_apply'</span> <span class=\"n\">N</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                          <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span>\n                            <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                                  <span class=\"o\">(</span><span class=\"n\">prod_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x_1</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span> <span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                              <span class=\"o\">(</span><span class=\"n\">mul_comm</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)))))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                    <span class=\"n\">mul_sum</span><span class=\"o\">)</span>\n            <span class=\"k\">have</span> <span class=\"n\">h3</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span>\n                  <span class=\"o\">((</span><span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                            <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                        <span class=\"n\">mul_sum</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                    <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x_1</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span>\n                      <span class=\"o\">((</span><span class=\"n\">mul_left_comm</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                                <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                            <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                              <span class=\"o\">(</span><span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">))))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                        <span class=\"o\">(</span><span class=\"n\">mul_left_comm</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span>\n                          <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">)))))</span>\n            <span class=\"k\">have</span> <span class=\"n\">h4</span><span class=\"o\">:=</span> <span class=\"n\">h2.trans</span> <span class=\"n\">h3</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n            <span class=\"n\">congr</span>\n            <span class=\"n\">funext</span> <span class=\"n\">xx1</span>\n            <span class=\"n\">congr</span>\n            <span class=\"n\">funext</span> <span class=\"n\">xx2</span>\n            <span class=\"c1\">-- mul_left_cancel</span>\n            <span class=\"gr\">sorry</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n    <span class=\"n\">done</span>\n\n\n<span class=\"kd\">end</span> <span class=\"n\">Matrix</span>\n</code></pre></div>",
        "id": 408826933,
        "sender_full_name": "chenjulang",
        "timestamp": 1702971318
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/YSbJYVXd4U9v-hxAn1ATqatZ/image.png\">image.png</a><br>\nLike this.This seems so easy.....Right?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/YSbJYVXd4U9v-hxAn1ATqatZ/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/YSbJYVXd4U9v-hxAn1ATqatZ/image.png\"></a></div>",
        "id": 408827359,
        "sender_full_name": "chenjulang",
        "timestamp": 1702971381
    },
    {
        "content": "<p>I cannot use \"mul_left_cancel\" to solve it. <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 408827606,
        "sender_full_name": "chenjulang",
        "timestamp": 1702971420
    },
    {
        "content": "<p>how?</p>",
        "id": 408827647,
        "sender_full_name": "chenjulang",
        "timestamp": 1702971428
    },
    {
        "content": "<p>mul_left_cancel is the wrong direction, you are proving <code>a * b = a * c</code> from <code>b = c</code> which is just a property of equality</p>",
        "id": 408829777,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702971799
    },
    {
        "content": "<p>try <code>congr</code></p>",
        "id": 408829810,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702971805
    },
    {
        "content": "<p>OK ,i have a try</p>",
        "id": 408830399,
        "sender_full_name": "chenjulang",
        "timestamp": 1702971902
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/o4wOapiX2IH-5nCCBStkNi1Q/image.png\">image.png</a><br>\n<span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> \"congr\" dosen't seems to work . It becomes two strange goals..</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/o4wOapiX2IH-5nCCBStkNi1Q/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/o4wOapiX2IH-5nCCBStkNi1Q/image.png\"></a></div>",
        "id": 408831388,
        "sender_full_name": "chenjulang",
        "timestamp": 1702972084
    },
    {
        "content": "<p>Try <code>congr 1</code></p>",
        "id": 408831546,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702972116
    },
    {
        "content": "<p>Also deöbfuscate by deleting <code>h1</code> first.</p>",
        "id": 408831631,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1702972129
    },
    {
        "content": "<p>there is no <code>h1</code> in the goal state <span class=\"user-mention\" data-user-id=\"417654\">@Martin Dvořák</span> ?</p>",
        "id": 408831837,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702972169
    },
    {
        "content": "<p>The whole thing is the theorem repeated as <code>h1</code>.</p>",
        "id": 408832070,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1702972204
    },
    {
        "content": "<p>Martin is right, not in the infoview but in the code</p>",
        "id": 408832475,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702972288
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/Ejn79NDZFXQB45N4hNoM8Dsd/image.png\">image.png</a><br>\nDosen't change a lot...<br>\nThe terms on both sides of the equation do not match</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Ejn79NDZFXQB45N4hNoM8Dsd/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/Ejn79NDZFXQB45N4hNoM8Dsd/image.png\"></a></div>",
        "id": 408833057,
        "sender_full_name": "chenjulang",
        "timestamp": 1702972399
    },
    {
        "content": "<p>Try <code>rw [mul_assoc]</code> first.</p>",
        "id": 408833633,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1702972513
    },
    {
        "content": "<p>the issue is that the left hand side is <code>a * b * c</code> (which is <code>(a * b) * c</code>) and the right side is <code>a * (d * e)</code></p>",
        "id": 408833640,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702972515
    },
    {
        "content": "<p>for some <code>a,b,c,d,e</code></p>",
        "id": 408833668,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702972525
    },
    {
        "content": "<p>Try <code>rw [mul_right_comm]</code></p>",
        "id": 408833688,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702972528
    },
    {
        "content": "<p>Get it!Thanks <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> <br>\nWe use :<br>\nrw [mul_right_comm]<br>\nrepeat rw [← mul_assoc]</p>\n<p>the whole thing see here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.Determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Fin</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Sign</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Sqrt</span>\n\n\n<span class=\"c1\">-- set_option trace.Meta.synthInstance true</span>\n<span class=\"c1\">-- set_option maxHeartbeats 0</span>\n\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">z</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Equiv</span> <span class=\"n\">Equiv.Perm</span> <span class=\"n\">Finset</span> <span class=\"n\">Function</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Matrix</span> <span class=\"c1\">--目的是避免模糊定义mul_apply</span>\n\n  <span class=\"kn\">open</span> <span class=\"n\">Matrix</span> <span class=\"n\">BigOperators</span>\n\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">m</span><span class=\"o\">]</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n  <span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"s2\">\"ε \"</span> <span class=\"n\">σ</span><span class=\"o\">:</span><span class=\"n\">arg</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">((</span><span class=\"n\">sign</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- -----/行列式</span>\n\n<span class=\"c1\">-- 原来有toFun的结构，直接写名词的话，它要用toFun来替换，</span>\n<span class=\"c1\">-- 所以detRowAlternating2具体类型应该是和这个相同(↑detRowAlternating2).toFun : (?m.32939 → ?m.32939 → ?m.32941) → ?m.32941</span>\n<span class=\"c1\">-- 因此detRowAlternating2 M的类型就是R</span>\n  <span class=\"kd\">def</span> <span class=\"n\">detRowAlternating2</span>\n  <span class=\"o\">:</span> <span class=\"n\">AlternatingMap</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">R</span> <span class=\"n\">n</span>  <span class=\"c1\">--- 最后这个参数n属于补充说明,实际形式上只需传三个参数即可</span>\n  <span class=\"o\">:=</span>\n  <span class=\"c1\">-- have h1:= (</span>\n  <span class=\"c1\">--   (MultilinearMap.mkPiAlgebra R n R).compLinearMap</span>\n  <span class=\"c1\">--     LinearMap.proj</span>\n  <span class=\"c1\">-- )</span>\n  <span class=\"c1\">-- have h1fun:= h1.toFun</span>\n  <span class=\"n\">MultilinearMap.alternatization</span> <span class=\"o\">(</span>\n    <span class=\"o\">(</span><span class=\"n\">MultilinearMap.mkPiAlgebra</span> <span class=\"n\">R</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">compLinearMap</span>\n      <span class=\"n\">LinearMap.proj</span>\n  <span class=\"o\">)</span>\n\n<span class=\"c1\">-- 问题：v是什么？</span>\n<span class=\"c1\">-- MultilinearMap R (fun x（x就是n） ↦ n → R) R 也就是(n → n → R) → R</span>\n  <span class=\"n\">abbrev</span> <span class=\"n\">det2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n    <span class=\"c1\">-- have h1 := detRowAlternating2 M</span>\n    <span class=\"n\">detRowAlternating2</span> <span class=\"n\">M</span> <span class=\"c1\">-- 这里为什么类型是R，因为detRowAlternating2相当于detRowAlternating2.toFun</span>\n    <span class=\"c1\">-- 也就是(?m.33147 → ?m.33147 → ?m.33149) → ?m.33149</span>\n  <span class=\"k\">#check</span> <span class=\"n\">detRowAlternating2.toFun</span> <span class=\"c1\">-- 所以上面M不是参数，而是被作用了，detRowAlternating2是一个映射作用到M上了</span>\n\n\n\n  <span class=\"c1\">-- 正式开始：</span>\n\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh1</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span><span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span> <span class=\"bp\">=</span>\n      <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Eq.symm</span>\n      <span class=\"n\">apply</span> <span class=\"n\">sum_subset</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n        <span class=\"n\">exact</span> <span class=\"n\">mem_univ</span> <span class=\"n\">h1</span>\n      <span class=\"n\">intros</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span> <span class=\"n\">h5</span>\n      <span class=\"n\">apply</span> <span class=\"n\">det_mul_aux</span> <span class=\"c1\">-- ???</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_filter</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span> <span class=\"c1\">-- ???</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_univ</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">true_and_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span>\n      <span class=\"n\">set</span> <span class=\"n\">h6</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">h3</span> <span class=\"n\">x</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h5</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span>\n    <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span>\n      <span class=\"bp\">∑</span>\n        <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span>\n            <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n            <span class=\"bp\">*</span>\n            <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n          <span class=\"o\">)</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_comm</span><span class=\"o\">]</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_comm</span><span class=\"o\">]</span> <span class=\"c1\">-- 相当于没变，只改成了x,y</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_bij</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">ih1</span> <span class=\"n\">ih2</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih3</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mem_filter.mp</span> <span class=\"n\">ih2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">right</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih4</span><span class=\"o\">:=</span> <span class=\"n\">ofBijective</span> <span class=\"n\">ih1</span> <span class=\"n\">ih3</span>\n        <span class=\"n\">exact</span> <span class=\"n\">ih4</span> <span class=\"c1\">-- 如果这里定义错了，下面满盘皆输</span>\n      <span class=\"c1\">-- intros ih1 ih2</span>\n      <span class=\"c1\">--   have ih3:= Equiv.refl n</span>\n      <span class=\"c1\">--   simp only [Perm]</span>\n      <span class=\"c1\">--   exact ih3</span>\n      <span class=\"c1\">-- apply sum_bij -- ???</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n        <span class=\"n\">intro</span> <span class=\"n\">h2</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_univ</span><span class=\"o\">]</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h_1</span> <span class=\"n\">h_2</span>\n        <span class=\"k\">have</span> <span class=\"n\">h_3</span><span class=\"o\">:=</span> <span class=\"n\">mem_filter.1</span> <span class=\"n\">h_2</span>\n        <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">h_4</span><span class=\"o\">,</span><span class=\"n\">h_5</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h_3</span>\n        <span class=\"c1\">-- have h_6:= Equiv.ofBijective h_1 h_5 -- ???</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">id_eq</span><span class=\"o\">,</span> <span class=\"n\">refl_apply</span><span class=\"o\">]</span>\n        <span class=\"n\">rfl</span>\n      <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span> <span class=\"n\">injection</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"c1\">---?</span>\n        <span class=\"n\">done</span>\n      <span class=\"c1\">-- intros inj_1 inj_2 inj_3 inj_4 inj_5</span>\n      <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">b</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">⟨</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">mem_filter.2</span> <span class=\"o\">⟨</span><span class=\"n\">mem_univ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">b.bijective</span><span class=\"o\">⟩,</span> <span class=\"n\">coe_fn_injective</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"c1\">---?</span>\n        <span class=\"n\">done</span>\n      <span class=\"n\">done</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh3</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n      <span class=\"bp\">·</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Fintype.sum_equiv</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n        <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Equiv.mulRight</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span>\n        <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h5</span>\n          <span class=\"k\">have</span> <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">((</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"n\">j</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">_</span> <span class=\"bp\">≃</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod_comp</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Equiv.Perm.coe_mul</span><span class=\"o\">,</span> <span class=\"n\">apply_inv_self</span><span class=\"o\">,</span> <span class=\"n\">Function.comp_apply</span><span class=\"o\">]</span>\n          <span class=\"k\">have</span> <span class=\"n\">h6</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"n\">h1</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">h5</span>\n            <span class=\"o\">:=</span>\n            <span class=\"k\">calc</span>\n              <span class=\"n\">ε</span> <span class=\"n\">h1</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">sign_mul</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)]</span>\n                <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Int.cast_mul</span><span class=\"o\">,</span> <span class=\"n\">Units.val_mul</span><span class=\"o\">]</span>\n              <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">h5</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">inv_mul_cancel_right</span><span class=\"o\">]</span>\n          <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">Equiv.coe_mulRight</span><span class=\"o\">,</span> <span class=\"n\">h6</span><span class=\"o\">]</span>\n          <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n      <span class=\"n\">done</span>\n\n\n  <span class=\"c1\">-- @[simp]</span>\n  <span class=\"kd\">theorem</span> <span class=\"n\">det_mul2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span><span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"o\">:=</span>\n      <span class=\"k\">calc</span>\n          <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">det_apply'</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_apply</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod_univ_sum</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_sum</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Fintype.piFinset_univ</span><span class=\"o\">]</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.sum_comm</span><span class=\"o\">]</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span>\n                <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh1</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span>\n                <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh2</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">τ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">τ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_left_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod_mul_distrib</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh3</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"c1\">-- simp only [det_apply', Finset.mul_sum, mul_comm, mul_left_comm, mul_assoc]</span>\n            <span class=\"c1\">-- simp only [det_apply']</span>\n            <span class=\"c1\">-- simp only [Finset.mul_sum]</span>\n            <span class=\"c1\">-- simp only [mul_comm]</span>\n            <span class=\"c1\">-- simp only [mul_left_comm]</span>\n            <span class=\"c1\">-- simp only [mul_assoc]</span>\n            <span class=\"k\">have</span> <span class=\"n\">h2</span><span class=\"o\">:=</span> <span class=\"o\">((</span><span class=\"n\">congr</span> <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"n\">HMul.hMul</span>\n                          <span class=\"o\">((</span><span class=\"n\">det_apply'</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                            <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span>\n                              <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                                    <span class=\"o\">(</span><span class=\"n\">prod_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x_1</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span> <span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                                <span class=\"o\">(</span><span class=\"n\">mul_comm</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)))))</span>\n                        <span class=\"o\">((</span><span class=\"n\">det_apply'</span> <span class=\"n\">N</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                          <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span>\n                            <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                                  <span class=\"o\">(</span><span class=\"n\">prod_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x_1</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span> <span class=\"n\">Eq.refl</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                              <span class=\"o\">(</span><span class=\"n\">mul_comm</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)))))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                    <span class=\"n\">mul_sum</span><span class=\"o\">)</span>\n            <span class=\"k\">have</span> <span class=\"n\">h3</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span>\n                  <span class=\"o\">((</span><span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                            <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                        <span class=\"n\">mul_sum</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                    <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x_1</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span>\n                      <span class=\"o\">((</span><span class=\"n\">mul_left_comm</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                                <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                            <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                              <span class=\"o\">(</span><span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">))))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                        <span class=\"o\">(</span><span class=\"n\">mul_left_comm</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span>\n                          <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">)))))</span>\n            <span class=\"k\">have</span> <span class=\"n\">h4</span><span class=\"o\">:=</span> <span class=\"n\">h2.trans</span> <span class=\"n\">h3</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n            <span class=\"n\">congr</span>\n            <span class=\"n\">funext</span> <span class=\"n\">xx1</span>\n            <span class=\"n\">congr</span>\n            <span class=\"n\">funext</span> <span class=\"n\">xx2</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_right_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n    <span class=\"n\">done</span>\n\n\n<span class=\"kd\">end</span> <span class=\"n\">Matrix</span>\n</code></pre></div>",
        "id": 408835721,
        "sender_full_name": "chenjulang",
        "timestamp": 1702972901
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 408836140,
        "sender_full_name": "chenjulang",
        "timestamp": 1702972963
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 408836207,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702972975
    },
    {
        "content": "<p>By the way, why can't we use \"ring\" or something like that to prove this kind of equation?</p>",
        "id": 408836710,
        "sender_full_name": "chenjulang",
        "timestamp": 1702973068
    },
    {
        "content": "<p>because you aren't proving it, you are reducing it to something else</p>",
        "id": 408836833,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702973091
    },
    {
        "content": "<p><code>ring</code> always closes the goal when it works</p>",
        "id": 408836927,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702973112
    },
    {
        "content": "<p>and the reason it doesn't work here is because it doesn't understand indexed products</p>",
        "id": 408837255,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702973168
    }
]