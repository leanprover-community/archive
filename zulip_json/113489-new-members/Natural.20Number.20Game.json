[
    {
        "content": "<p><a href=\"/user_uploads/3121/MUZw4F7BnrfiEjlD5kJtUTsv/image.png\">image.png</a><br>\nWhat is the best way to solve this, without relying on simp?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/MUZw4F7BnrfiEjlD5kJtUTsv/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/MUZw4F7BnrfiEjlD5kJtUTsv/image.png\"></a></div>",
        "id": 408428215,
        "sender_full_name": "Olonbayar Temuulen",
        "timestamp": 1702806395
    },
    {
        "content": "<p>Is an acceptable reply \"you shouldn't be in this state in the first place\"? Are you trying to prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>x</mi><mi>y</mi><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">(x+y)^2=x^2+2xy+y^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> by induction instead of just multiplying it out?</p>",
        "id": 408433829,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702811509
    },
    {
        "content": "<p>The <code>Pow.pow</code> is a bit miserable in the hypotheses, how did that end up there? The user is supposed to never see that.</p>",
        "id": 408433902,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702811561
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/408433902\">said</a>:</p>\n<blockquote>\n<p>The <code>Pow.pow</code> is a bit miserable in the hypotheses, how did that end up there? The user is supposed to never see that.</p>\n</blockquote>\n<p>That's been a \"fix\" in the new mathlib version turning <code>a ^ b</code> into <code>Pow.pow a b</code>. I pushed a fix for this a couple days ago, but haven't updated the live version yet. I'll do that now.</p>",
        "id": 408439318,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1702816908
    },
    {
        "content": "<p>Via \"being a bit overly adventurous with induction and trying to pin down exactly how add_assoc , add_mul, mul_assoc, mul_comm and to slightly lesser extent add_mul\"  worked, since the documentation felt a big vague. The notes on the left mention the user to check the targeting function comments of \"rw\", but i felt that the explanation there was lacking too.</p>",
        "id": 408440860,
        "sender_full_name": "Olonbayar Temuulen",
        "timestamp": 1702818423
    }
]