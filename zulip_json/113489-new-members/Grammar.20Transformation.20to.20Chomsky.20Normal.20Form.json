[
    {
        "content": "<p>I'd like to certify the algorithm for transforming any context-free grammar to Chomsky Normal Form. The inspiration for this is <a href=\"https://www.mathnet.ru/links/316b2bdc8ebee2d0774a0b54eb0f1f33/tisp24.pdf\">https://www.mathnet.ru/links/316b2bdc8ebee2d0774a0b54eb0f1f33/tisp24.pdf</a>. The overall plan is to define five individual transformations and show that they are semantics preserving, i.e., don't change the language of a context-free grammar. I will then show that if put in a particular sequence, the transformations are guaranteed to terminate by well-founded induction on some measure.</p>\n<p>I'm a little lost on formalising this in Lean (I'm using Version 3.50). I imagine I'll need to define a type for context-free grammars and then define functions corresponding to transformations. I am also confused about showing termination in Lean, since it doesn't hesitate to use the Axiom of Choice in its proofs which might make them non-computable. Specific advice or pointers to appropriate learning resources would both be appreciated.  Thank you in advance for any help.</p>",
        "id": 326730235,
        "sender_full_name": "Ramneet Singh",
        "timestamp": 1675917741
    },
    {
        "content": "<p>Please consider making it on top of my library:<br>\n<a href=\"https://github.com/madvorak/grammars\">https://github.com/madvorak/grammars</a><br>\nNormal forms of grammars are something I just started planning implementing.<br>\nI am willing to provide any support you will need.</p>",
        "id": 326777299,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675938335
    },
    {
        "content": "<p>Please, don't be scared of my code. In just a few days, I will release a technical report documenting it.</p>",
        "id": 326777914,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675938487
    },
    {
        "content": "<p>My version of Lean is <code>3.41.0</code> but I suppose I can update it if it makes a difference for you.</p>",
        "id": 326780792,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1675939304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/113489-new-members/topic/Grammar.20Transformation.20to.20Chomsky.20Normal.20Form/near/326777914\">said</a>:</p>\n<blockquote>\n<p>Please, don't be scared of my code. In just a few days, I will release a technical report documenting it.</p>\n</blockquote>\n<p><a href=\"https://arxiv.org/abs/2302.06420\">https://arxiv.org/abs/2302.06420</a></p>",
        "id": 327707935,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676360172
    },
    {
        "content": "<blockquote>\n<p>The computability package does not declare any syntactic sugar for the Kleene star</p>\n</blockquote>\n<p>This is actually false as of the last few weeks, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_kstar\">docs#has_kstar</a></p>",
        "id": 327757557,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676376019
    },
    {
        "content": "<p>I had no idea! Is it a backport from mathlib4?</p>",
        "id": 327758115,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676376213
    },
    {
        "content": "<p>No, <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/computability/language\">port-status#computability/language</a> isn't in mathlib4 at all yet</p>",
        "id": 327759324,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676376577
    },
    {
        "content": "<p>Thanks for the info! I will consider updating my project to the newest version of mathlib3.</p>",
        "id": 327760602,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676377015
    },
    {
        "content": "<p>With the update, I should probably wait for what <span class=\"user-mention\" data-user-id=\"587646\">@Ramneet Singh</span> as the first user of my library prefers.<br>\nDo you want me to synchronize the main branch with the current version of mathlib?</p>",
        "id": 327852558,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676401454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"417654\">@Martin Dvořák</span> It's very kind of you to ask. Yes I do think that would be helpful. But I have to say, I'm a complete beginner at Lean so it might take me a few weeks to get started actually using the library.</p>",
        "id": 327858964,
        "sender_full_name": "Ramneet Singh",
        "timestamp": 1676403563
    },
    {
        "content": "<p>Any news? <span class=\"user-mention\" data-user-id=\"587646\">@Ramneet Singh</span></p>",
        "id": 340392186,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678289090
    },
    {
        "content": "<p>'m not very far along, I've just defined context free grammars. I'm struggling to define a function which generates a fresh non-terminal symbol that hasn't been used in the rules before.</p>",
        "id": 340448318,
        "sender_full_name": "Ramneet Singh",
        "timestamp": 1678303950
    },
    {
        "content": "<p>(already answering your PM)</p>",
        "id": 340451372,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678305024
    }
]