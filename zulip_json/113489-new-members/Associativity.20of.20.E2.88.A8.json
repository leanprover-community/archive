[
    {
        "content": "<p>I tried to prove <code>(p ∨ q) ∨ r ↔ p ∨ (q ∨ r)</code> using the following code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Iff.intro</span>\n  <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">Or.elim</span> <span class=\"n\">h</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hpq</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">Or.elim</span> <span class=\"n\">hpq</span>\n      <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hp</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Or.inl</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hq</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Or.inr</span> <span class=\"o\">(</span><span class=\"n\">Or.inl</span> <span class=\"n\">hq</span><span class=\"o\">))</span>\n      <span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hr</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Or.inr</span> <span class=\"o\">(</span><span class=\"n\">Or.inr</span> <span class=\"n\">hr</span><span class=\"o\">)))</span>\n  <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">Or.elim</span> <span class=\"n\">h</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hp</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Or.inl</span> <span class=\"o\">(</span><span class=\"n\">Or.inl</span> <span class=\"n\">hp</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hqr</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">Or.elim</span> <span class=\"n\">hqr</span>\n      <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hq</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Or.inl</span> <span class=\"o\">(</span><span class=\"n\">Or.inr</span> <span class=\"n\">hq</span><span class=\"o\">))</span>\n      <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hr</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Or.inr</span> <span class=\"n\">hr</span><span class=\"o\">)</span>\n    <span class=\"o\">))</span>\n</code></pre></div>\n<p>It is possible to make this code more concise?</p>",
        "id": 372517086,
        "sender_full_name": "newptcai",
        "timestamp": 1688548556
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">tauto</span>\n</code></pre></div>",
        "id": 372537657,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1688552641
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Iff.intro</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"k\">match</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Or.inl</span> <span class=\"o\">(</span><span class=\"n\">Or.inl</span> <span class=\"n\">hp</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">Or.inl</span> <span class=\"n\">hp</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Or.inl</span> <span class=\"o\">(</span><span class=\"n\">Or.inr</span> <span class=\"n\">hq</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">Or.inr</span> <span class=\"o\">(</span><span class=\"n\">Or.inl</span> <span class=\"n\">hq</span><span class=\"o\">)</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Or.inr</span> <span class=\"n\">hr</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">Or.inr</span> <span class=\"o\">(</span><span class=\"n\">Or.inr</span> <span class=\"n\">hr</span><span class=\"o\">)</span>\n  <span class=\"bp\">·</span> <span class=\"k\">match</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Or.inl</span> <span class=\"n\">hp</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">Or.inl</span> <span class=\"o\">(</span><span class=\"n\">Or.inl</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Or.inr</span> <span class=\"o\">(</span><span class=\"n\">Or.inl</span> <span class=\"n\">hq</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">Or.inl</span> <span class=\"o\">(</span><span class=\"n\">Or.inr</span> <span class=\"n\">hq</span><span class=\"o\">)</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Or.inr</span> <span class=\"o\">(</span><span class=\"n\">Or.inr</span> <span class=\"n\">hr</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">Or.inr</span> <span class=\"n\">hr</span>\n</code></pre></div>",
        "id": 372541591,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1688553503
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">.</span><span class=\"n\">intro</span>\n    <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">&lt;|</span> <span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">·</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">&lt;|</span> <span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">·</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">&lt;|</span> <span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">&lt;|</span> <span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">·</span><span class=\"o\">)))</span>\n</code></pre></div>",
        "id": 372583178,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1688562055
    }
]