[
    {
        "content": "<p>Is Codewars good for learning Lean today?</p>\n<p>I was playing there a bit, the challenges were fun, but my solutions (written and tested in VS Code) didn't work when I uploaded them to Codewars. It seems that Codewars uses an older version of Lean and/or mathlib. In particular, I was recommended Lean 3.20.0 and this <a href=\"https://github.com/leanprover-community/mathlib/commit/da66bb81bf0466335bae82077f0c335dfe53aeb3\">https://github.com/leanprover-community/mathlib/commit/da66bb81bf0466335bae82077f0c335dfe53aeb3</a> mathlib commit. How much is this obsolete? Will working with that force me to learn things that will be useless for me when working with the current version of Lean and mathlib?</p>",
        "id": 248591180,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1628243918
    },
    {
        "content": "<p>they're not going to be useless, but they're not going to be great either. I'd recommend <a href=\"https://xenaproject.wordpress.com/2021/01/24/formalising-mathematics-workshop-1/\">Kevin's tutorials</a> for further lean learning, or just trying to dive in and do some cool stuff in mathlib ^^</p>",
        "id": 248591430,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1628244094
    },
    {
        "content": "<p>Which tutorials do you recommend in particular? I have already done most of the Natural Number Game and most of the Lean tutorials project. I could work on finishing the remaining exercises in these two but I don't find it very rewarding anymore. On the other hand, contributing to mathlib is currently way beyond my level. Is there any tutorial of \"medium difficulty\" better than Codewars? What do you recommend?</p>",
        "id": 248592313,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1628244740
    },
    {
        "content": "<p>Have you seen <a href=\"https://leanprover-community.github.io/learn.html\">https://leanprover-community.github.io/learn.html</a>? Then next thing on that list is the lftcm2020 repo, which I think is a pretty good suggestion, it's kept up-to-date with mathlib and teaches some more advanced design ideas. And there are some videos online of the different talks (though it is intended primarily as interactive exercises) if you've done NNG and tutorials project you should be pretty happy with the monday/tuesday things from that week so you could start at <a href=\"https://github.com/leanprover-community/lftcm2020/tree/master/src/exercises_sources/wednesday\">https://github.com/leanprover-community/lftcm2020/tree/master/src/exercises_sources/wednesday</a></p>",
        "id": 248592710,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1628245081
    },
    {
        "content": "<p>This looks very interesting! Imma dive into the \"Lean for the Curious Mathematician 2020\". Thank you for the recommendation!</p>",
        "id": 248592908,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1628245240
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 248592910,
        "sender_full_name": "Notification Bot",
        "timestamp": 1628245242
    }
]