[
    {
        "content": "<p>I want to build a set that contains {(0,0), (1, 1), (1, 0), (0,1)} without just summing them, but I can't seem to find how,<br>\nI tried:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">prod</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">}</span>\n</pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">{(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">|</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">}}</span>\n</pre></div>\n\n\n<p>But in the first instance CoCalc doesn't recognise set.prod, this might be an import problem, but in the Mathlib I can't find what I should import specifically.<br>\nFor the second attempt the compiler just says that it use sorry, even though I don't.<br>\nCould anyone tell what went wrong in these two examples?</p>",
        "id": 195276357,
        "sender_full_name": "Emiel Lanckriet",
        "timestamp": 1587806156
    },
    {
        "content": "<p><code>import data.set.basic</code> will probably make the first one work.</p>",
        "id": 195276702,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1587806784
    },
    {
        "content": "<p>For the second, you could use <code>{p : ℤ × ℤ | p.1 ∈ {0,1} ∧ p.2 ∈ {0,1}}</code> instead.</p>",
        "id": 195276707,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1587806833
    },
    {
        "content": "<p>The second notation isn't supported by Lean, there has to be a single variable to the left of the vertical bar.</p>",
        "id": 195276713,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1587806864
    },
    {
        "content": "<p>why do you want to build {(0,0),(1,1),(1,0),(0,1)}?</p>",
        "id": 195276754,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587806915
    },
    {
        "content": "<p>Maybe this notation could be made to work in Lean 4.</p>",
        "id": 195276762,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1587806946
    }
]