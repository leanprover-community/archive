[
    {
        "content": "<p>I'm not sure how to interpret this error message: <code>theorems do not get VM compiled, use 'def' or add 'noncomputable' modifier to 'thm1'.</code> Encountered when trying to show that <code>bool</code> and <code>nat</code> are inhabited types, suggested as an exercise in chapter 7 of  TPIL3.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">thm1</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span><span class=\"o\">(</span><span class=\"n\">bool</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">inhabited.mk</span><span class=\"o\">(</span><span class=\"n\">tt</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">thm2</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span><span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">inhabited.mk</span><span class=\"o\">(</span><span class=\"n\">nat.zero</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Is this because the result of the theorem is not a proposition? </p>\n<p>New here, so not sure if this is the correct place to post this problem. Thanks in advance for any help.</p>",
        "id": 390498578,
        "sender_full_name": "Chinmaya Nagpal",
        "timestamp": 1694518056
    },
    {
        "content": "<p><code>inhabited</code> contains data (meaning that it remembers the element you choose), so it should be a <code>def</code>. May I suggest you to switch to Lean4? There is essentially no point in still using Lean3 today.</p>",
        "id": 390499310,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1694518333
    },
    {
        "content": "<p>PS yes this is the correct place to ask questions like this -- feel free to ask more. You need to decide whether you're proving a theorem or making a definition. We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nonempty#doc\">docs#Nonempty</a> for the <code>Prop</code> version -- this would then be a theorem. Hopefully the docstring for Nonempty helps clarify things.</p>",
        "id": 390500100,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694518628
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"649046\">Chinmaya Nagpal</span> <a href=\"#narrow/stream/113489-new-members/topic/error.3A.20theorems.20do.20not.20get.20VM.20compiled/near/390498578\">said</a>:</p>\n<blockquote>\n<p>Is this because the result of the theorem is not a proposition?</p>\n</blockquote>\n<p>Exactly -- the error message (once you know it's meaning) is telling you that you're accidentally making a definition you can't <code>#eval</code>. The Prop version of the predicate is <code>nonempty</code>.</p>",
        "id": 390504457,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1694520215
    }
]