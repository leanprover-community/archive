[
    {
        "content": "<p>I'm stumped. I would like to prove the two examples:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n₁</span> <span class=\"n\">n₂</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">Int.negSucc</span> <span class=\"n\">n₁</span> <span class=\"bp\">=</span> <span class=\"n\">Int.ofNat</span> <span class=\"n\">n₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">n₁</span> <span class=\"bp\">=</span> <span class=\"n\">n₂</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n₁</span> <span class=\"n\">n₂</span> <span class=\"n\">n₃</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Int.ofNat</span> <span class=\"n\">n₂</span> <span class=\"bp\">*</span> <span class=\"n\">Int.ofNat</span> <span class=\"n\">n₃</span> <span class=\"bp\">=</span> <span class=\"n\">Int.ofNat</span> <span class=\"n\">n₁</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n₂</span> <span class=\"bp\">*</span> <span class=\"n\">n₃</span> <span class=\"bp\">=</span> <span class=\"n\">n₁</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>If I try:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n₁</span> <span class=\"n\">n₂</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">Int.negSucc</span> <span class=\"n\">n₁</span> <span class=\"bp\">=</span> <span class=\"n\">Int.ofNat</span> <span class=\"n\">n₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">n₁</span> <span class=\"bp\">=</span> <span class=\"n\">n₂</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Int.negSucc_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Int.ofNat_eq_cast</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>I'm left with:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">n₁n₂</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"bp\">-</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n₁</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"n\">n₂</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">n₁</span> <span class=\"bp\">=</span> <span class=\"n\">n₂</span>\n</code></pre></div>\n<p>but when I try to work with <code>- -(↑n₁ + 1)</code>,<br>\nI get \"failed to synthesize instance: Neg ℕ Lean 4\"</p>\n<p>Thanks for any help!</p>",
        "id": 403239354,
        "sender_full_name": "Mike",
        "timestamp": 1700511530
    },
    {
        "content": "<p>Does it help if you start your proof with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Int.ofNat_inj</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>?</p>",
        "id": 403240223,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1700511885
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> Yeah, that works! The only thing left was to use <code>tauto</code>. Thanks!</p>",
        "id": 403245298,
        "sender_full_name": "Mike",
        "timestamp": 1700514307
    }
]