[
    {
        "content": "<p>Can someone help me with this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">point</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">to_fin</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- should return (a : fin 3) s.t. a 0 = x, a 1 = y, a2 = z</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 356989129,
        "sender_full_name": "Shimon Cohen",
        "timestamp": 1683639784
    },
    {
        "content": "<p>you can use vector notation: <code>![x,y,z]</code> is the function sending 0 to x, 1 to y and 2 to z. You need to import <code>data.matrix.notation</code> iirc</p>",
        "id": 356990394,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1683640023
    },
    {
        "content": "<p>You can also simply do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">to_fin</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p.x</span>\n</code></pre></div>",
        "id": 356990819,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1683640091
    },
    {
        "content": "<p>Oh right, my message should have used <code>p.x</code> instead of <code>x</code> and similar for y,z.</p>",
        "id": 356991238,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1683640177
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 356992522,
        "sender_full_name": "Shimon Cohen",
        "timestamp": 1683640445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"615364\">Shimon Cohen</span> has marked this topic as resolved.</p>",
        "id": 356992562,
        "sender_full_name": "Notification Bot",
        "timestamp": 1683640457
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20fin/near/356990819\">said</a>:</p>\n<blockquote>\n<p>You can also simply do</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">to_fin</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p.x</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This gives you <code>to_fin { x := x, y := y, z := z} = ![x, x, x]</code> which seems to not be what was asked</p>",
        "id": 356995464,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683640998
    },
    {
        "content": "<p>Oh, right, good point! <span class=\"user-mention\" data-user-id=\"615364\">@Shimon Cohen</span>  please ignore my answer.</p>",
        "id": 357009981,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1683643914
    }
]