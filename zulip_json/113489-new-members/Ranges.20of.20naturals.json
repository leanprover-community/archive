[
    {
        "content": "<p>If we have finite ranges, how do we trivially say that the number will be in one of the ranges mentioned? This is a lean4 code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)(</span><span class=\"n\">hn1</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)(</span><span class=\"n\">hn2</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span><span class=\"o\">)</span>  <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">∨</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 350892583,
        "sender_full_name": "Michael Wahlberg",
        "timestamp": 1681855485
    },
    {
        "content": "<p>Looks like a perfect job for <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#interval_cases\">tactic#interval_cases</a> (it should work in lean 4 too after <code>Mathlib.Tactic.IntervalCases</code>)</p>",
        "id": 350896715,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1681857337
    }
]