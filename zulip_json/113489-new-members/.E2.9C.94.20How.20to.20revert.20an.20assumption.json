[
    {
        "content": "<p>Hello. <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> I have what I think should be a basic question. In a proof context I have a term <code>x</code> and <code>hx : p x</code>. How can I from that add to the context <code>h : forall y, p y</code>?</p>",
        "id": 407933053,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702550884
    },
    {
        "content": "<p>Something like the reverse of <code>intro x</code>? I tried <code>revert x at hx</code>, but that tactic doesn't take the at keyword.</p>",
        "id": 407936289,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702551930
    },
    {
        "content": "<p><a href=\"#narrow/stream/113489-new-members/topic/How.20to.20revert.20an.20assumption/near/407933053\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/Understanding.20the.20eliminator.20for.20equality\">#new members &gt; Understanding the eliminator for equality</a> by <span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span>.</p>",
        "id": 407936533,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702552019
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"674314\">@Igor Khavkine</span> I've moved your question to a new thread (I chose a random title, feel free to modify it).</p>",
        "id": 407936592,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1702552041
    },
    {
        "content": "<p>You can't, because you can't deduce that from the data you have. What if <code>p 37</code> is true but <code>p 42</code> is false?</p>",
        "id": 407936650,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702552061
    },
    {
        "content": "<p>Right, I'm trying to figure out if my thinking is correct about this. However, in Theorem Proving in Lean 4 it says \"Given a proof of p x, in a context where x : α is arbitrary, we obtain a proof ∀ x : α, p x.\" (Sec 4). But I don't see what commands accomplish that.</p>",
        "id": 407938786,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702552870
    },
    {
        "content": "<p>Neither does <code>intro</code> though, so what would the <code>at hx</code> part do? Revert is indeed inverse to intro.</p>",
        "id": 407940830,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1702553628
    },
    {
        "content": "<p>If you can prove <code>theorem foo (x : A) : p x</code> then <code>foo</code> is exactly the statement <code>∀ x, p x</code>.</p>",
        "id": 407941467,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1702553850
    },
    {
        "content": "<p>OK, so then how to prove <code>theorem bar (x : A) (hx : p x) : forall y, p y</code>? Maybe I'm still missing something, and this is not provable.</p>",
        "id": 407943431,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702554610
    },
    {
        "content": "<p>This is of course not provable. If <code>p x</code> is for example \"<code>x</code> is even<code> your </code>bar` means \"given an even number prove that all numbers are even\".</p>",
        "id": 407944118,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1702554880
    },
    {
        "content": "<p>I think your issue is your understanding of the word \"arbitrary\". This x isn't arbitrary, it's something the user inputs when they use bar, so they could use a highly non-arbitrary input for which p happens to be true. </p>\n<p>You might want to play with the <code>intro</code> and <code>revert</code> tactics. I agree that this is a subtle point. Probably <code>revert</code> is the answer to your question.</p>",
        "id": 407951152,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702557559
    },
    {
        "content": "<p>Of course, thanks for clearing that up. Indeed the word \"arbitrary\" lead me astray a bit. :-)</p>",
        "id": 407958235,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702559924
    },
    {
        "content": "<p>I did find <code>revert</code> while looking at the documentation. Since <code>revert x at hx</code> didn't work, I thought I'd try to clear the situation up. Thanks again!</p>",
        "id": 407958549,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702560031
    },
    {
        "content": "<p>My question got resolved over at <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20revert.20an.20assumption\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/How.20to.20revert.20an.20assumption</a></p>",
        "id": 407958698,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702560091
    },
    {
        "content": "<p>I didn't intend to create a duplicate topic, so I'd erase the whole thing if I knew how.</p>",
        "id": 407958853,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1702560137
    },
    {
        "content": "<p>I just merged the two threads <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 407959153,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702560238
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"674314\">Igor Khavkine</span> has marked this topic as resolved.</p>",
        "id": 408002199,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702572605
    }
]