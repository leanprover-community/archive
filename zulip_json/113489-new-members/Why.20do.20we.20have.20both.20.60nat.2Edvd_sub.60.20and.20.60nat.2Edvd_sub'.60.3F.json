[
    {
        "content": "<p>They're the same, except the unprimed one has an extra hypothesis, <code>n ≤ m</code>.  If the conclusion holds without the hypothesis, then why do we have another version that needs that hypothesis?  Something to do with truncating subtraction?</p>",
        "id": 339974001,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1678139383
    },
    {
        "content": "<p>From the source:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- TODO: update `nat.dvd_sub` in core</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">dvd_sub'</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">∣</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">∣</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">∣</span> <span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>So I guess the TODO is agreeing with me, that we should drop the unneeded hypothesis?  But that's a lot of work, because you need to update everywhere that it's used?</p>",
        "id": 339974337,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1678139507
    },
    {
        "content": "<p>More importantly, changing lemmas in core lean 3 is more of a pain than changing something in mathlib</p>",
        "id": 339975881,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1678140122
    },
    {
        "content": "<p>I suspect a refactor like this would not be particularly welcome during the port to lean 4</p>",
        "id": 339976012,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1678140168
    },
    {
        "content": "<p>Since both versions are headed for mathlib4, it will be much easier to do the refactor on the other side. The way to do so while preserving backward compatibility is to define both <code>dvd_sub</code> and <code>dvd_sub'</code> with their stated signatures unchanged, but prove <code>dvd_sub</code> trivially using <code>dvd_sub'</code> and mark it as <code>@[deprecated dvd_sub']</code> so that downstream uses can be refactored.</p>",
        "id": 339984485,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678143802
    },
    {
        "content": "<p>It is also possible to move the <code>'</code> to the old definition and use <code>#align</code> statements to swap things around</p>",
        "id": 339984542,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678143834
    }
]