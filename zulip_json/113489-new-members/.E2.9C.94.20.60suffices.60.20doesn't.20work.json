[
    {
        "content": "<p>Not always, but sometimes <code>suffices ... by</code> may behave incorrectly. It should leave the goal as it is and add assumptions, but sometimes it rewrites the goal.</p>\n<p>Here is an example of my problem:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"c1\">-- goal is : ε⁻¹ &lt; 10 ^ j</span>\n  <span class=\"k\">suffices</span> <span class=\"mi\">10</span> <span class=\"bp\">^</span> <span class=\"n\">N</span> <span class=\"bp\">≤</span> <span class=\"mi\">10</span> <span class=\"bp\">^</span> <span class=\"n\">j</span> <span class=\"kd\">by</span>\n    <span class=\"c1\">-- At this point, somehow the goal is `10 ^ N ≤ 10 ^ j`.</span>\n    <span class=\"gr\">sorry</span> <span class=\"c1\">-- At the beginning of this line, the goal is correct</span>\n</code></pre></div>",
        "id": 389978453,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1694225059
    },
    {
        "content": "<p>If I write <code>suffices ... from by</code> does not seem to cause this problem</p>",
        "id": 389978535,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1694225122
    },
    {
        "content": "<p>It may less be a problem with <code>suffices</code> than with from which point on the macro shows the state of the nested tactics.</p>",
        "id": 389981313,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1694226878
    },
    {
        "content": "<p>If you are at the top and want to see the right goal, you can use the <code>_</code> “tactic”</p>",
        "id": 389981370,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1694226913
    },
    {
        "content": "<p>You need to post a minimal working example to help us reproduce it and understand what happened. Just something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">10</span> <span class=\"bp\">^</span> <span class=\"n\">j</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"mi\">10</span> <span class=\"bp\">^</span> <span class=\"n\">N</span> <span class=\"bp\">≤</span> <span class=\"mi\">10</span> <span class=\"bp\">^</span> <span class=\"n\">j</span> <span class=\"kd\">by</span>\n    <span class=\"c1\">-- At this point, somehow the goal is `∃ N, 10 ^ N ≤ 10 ^ j`</span>\n    <span class=\"gr\">sorry</span> <span class=\"c1\">-- At the beginning of this line, the goal is `∃ ε, ε &gt; 0 ∧ ε⁻¹ &lt; 10 ^ j`</span>\n</code></pre></div>\n<p>though I didn't get your point here.<br>\nI agree with Joachim that it's not a problem with <code>suffices</code>.</p>",
        "id": 389984342,
        "sender_full_name": "Wen Yang",
        "timestamp": 1694228942
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 389986368,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1694230370
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 389986842,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1694230709
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 389987147,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1694230922
    },
    {
        "content": "<p>this is a working example:</p>\n<p>my lean version is: leanprover/lean4:v4.0.0-rc4<br>\nmathlib commit hash: \"23550c1e3b21f7f3312acb901cef261f51219f72\"</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.CauSeqFilter</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">10</span> <span class=\"bp\">^</span> <span class=\"n\">j</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- the goal is `∃ ε, ε &gt; 0 ∧ ε⁻¹ &lt; 10 ^ j`</span>\n  <span class=\"k\">suffices</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"mi\">10</span> <span class=\"bp\">^</span> <span class=\"n\">N</span> <span class=\"bp\">≤</span> <span class=\"mi\">10</span> <span class=\"bp\">^</span> <span class=\"n\">j</span> <span class=\"kd\">by</span>\n    <span class=\"c1\">-- At this point, somehow the goal is `∃ N, 10 ^ N ≤ 10 ^ j`</span>\n    <span class=\"gr\">sorry</span> <span class=\"c1\">-- At the beginning of this line, the goal is `∃ ε, ε &gt; 0 ∧ ε⁻¹ &lt; 10 ^ j`</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 389987686,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1694231255
    },
    {
        "content": "<p>I get it now. The problem is: on the new line after <code>suffices ... by</code>, Lean Infoview does not display the goal that I should try to close at this point. It does get confusing. Maybe it's a bug, but I do not think it has a substantial impact, as Lean Infoview displays the correct information when you start writing something in the new line.</p>",
        "id": 389989433,
        "sender_full_name": "Wen Yang",
        "timestamp": 1694232521
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 389989690,
        "sender_full_name": "Notification Bot",
        "timestamp": 1694232730
    },
    {
        "content": "<p>Is it actually showing this in the <em>goal</em> view, or is it under a different header in the infoview?</p>",
        "id": 390021064,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1694256446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> It looks like this:<br>\n<a href=\"/user_uploads/3121/eZXJ6lMPpUw6bCC7PTPxA2iN/Screenshot_2023-09-10_10-50-58.jpg\">Screenshot_2023-09-10_10-50-58.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/eZXJ6lMPpUw6bCC7PTPxA2iN/Screenshot_2023-09-10_10-50-58.jpg\" title=\"Screenshot_2023-09-10_10-50-58.jpg\"><img src=\"/user_uploads/3121/eZXJ6lMPpUw6bCC7PTPxA2iN/Screenshot_2023-09-10_10-50-58.jpg\"></a></div>",
        "id": 390090382,
        "sender_full_name": "Wen Yang",
        "timestamp": 1694314482
    }
]