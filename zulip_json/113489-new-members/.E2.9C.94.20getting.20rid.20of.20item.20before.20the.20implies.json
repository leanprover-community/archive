[
    {
        "content": "<p>Hello, I want to end up with two hypotheses. One should state that 0 &lt; R_ε_one and another should state that 0 &lt; R_ε_two.</p>\n<p>I have a definition:<br>\n<code>def deriv_exists (D : (fin n → ℝ) →ₗ[ℝ] (fin m → ℝ)) : Prop :=</code><br>\n<code>∀ (ε : ℝ), 0 &lt; ε → ∃ (R : ℝ), 0 &lt; R → ∀ h : (fin n → ℝ) , 0 &lt; ‖h‖ ∧ ‖h‖ ≤ R → ‖f (p + h) - f p - D h‖ / ‖h‖ &lt; ε</code></p>\n<p>I originally started with two hypothesis<br>\n<code>h1: deriv_exists f p K</code><br>\n<code>h2: deriv_exists f p K'</code></p>\n<p>Then I got rid of the epsilons and there exists R from both of these hypotheses. I now have:<br>\n<code>h_right1: 0 &lt; R_ε_one → ∀ (h : fin n → ℝ), 0 &lt; ‖h‖ ∧ ‖h‖ ≤ R_ε_one → ‖f (p + h) - f p - ⇑K h‖ / ‖h‖ &lt; ε_one</code><br>\n<code>h_right2: 0 &lt; R_ε_two → ∀ (h : fin n → ℝ), 0 &lt; ‖h‖ ∧ ‖h‖ ≤ R_ε_two → ‖f (p + h) - f p - ⇑K' h‖ / ‖h‖ &lt; ε_two</code></p>\n<p>I want to get the stuff before the first implies into another hypothesis so I can use it to show  0 &lt; δ to proceed further in h_converge :<br>\n<code>δ: ℝ := min R_ε_one R_ε_two\nh_converge: 0 &lt; δ → (∃ (B : ℕ), ∀ (j : ℕ), B ≤ j → |a j| &lt; δ)</code></p>",
        "id": 339548966,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677933952
    },
    {
        "content": "<p>Does <code>specialize h_right1 _</code> do what you want?</p>",
        "id": 339552504,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677935251
    },
    {
        "content": "<p>I'm a bit confused by your question. If you've got from h1 to h_right1 then you fed in some epsilon yourself and it's your job to prove that the epsilon you fed in is positive</p>",
        "id": 339552731,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677935330
    },
    {
        "content": "<p>Hi Prof,<br>\nWhen I use <code>specialize h_right1 _</code> I get a goal that wants me to prove 0 &lt; R_ε_one.</p>\n<p>I think I am going wrong somewhere in my logic and would appreciate it if you can help. </p>\n<p>Since i have :<br>\n<code>h1: deriv_exists f p K</code></p>\n<p>I wanted to fix an arbitrary epsilon in h1 such that epsilon &gt; 0, which I managed to do. I then should have by defn of deriv_exists that there exists a positive R such that the rest of the defn follows. Hence I am not sure why I am having to prove that 0 &lt;  R.  I wanted to extract  0 &lt;  R from h1 so it can be used later.</p>",
        "id": 339558757,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677937636
    },
    {
        "content": "<p>You can't \"fix an arbitrary epsilon &gt; 0\" unless your <em>goal</em> is of the form \"for all epsilon &gt; 0\". If your goal is of that form then you do this with <code>intros eps heps</code>. If your goal is not of that form then you have not understood how mathematicians use the word \"arbitrary\" and if you're still convinced that you want an arbitrary epsilon greater than 0 then I would strongly recommend using epsilon=37, which is a completely arbitrary positive real.</p>",
        "id": 339562525,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677939009
    },
    {
        "content": "<p>Any theorem which you can prove for an arbitrary epsilon &gt; 0 can certainly be proved for 37 so this will suffice.</p>",
        "id": 339562672,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677939077
    },
    {
        "content": "<p>Hi Prof,<br>\nI was able to \"fix an arbitrary epsilon_one and epsilon_two\" because my goal was of the form \"for all epsilon_one &gt; 0 and for all epsilon_one &gt; 0, \".  I think I am not doing a good job explaining my problem so I will try again.  I know from h1 and h2 that we have 2 derivatives of the same thing. I then pass the epsilons from h_six to h1 and h2. I  then took out a R_one and R_two from h1 and h2. I don't think I should now have to prove that Rs are positive as that should be apparent from the defn of deriv_exists. If we have given epsilon to deriv_exists then by definition of deriv_exists there exists a positive R such that the rest follows. I want to separate out this R to a hypothesis stating R is positive. </p>\n<p>Maybe in deriv_exists, I also need to put brackets such that: (∃ (R : ℝ), 0 &lt; R) →<br>\nBut that doesn't solve my problem</p>\n<p>I have provided my code below and it says where I am working. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span> <span class=\"c1\">-- imports the real numbers</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.inner_product_space.euclidean_dist</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.inner_product_space.pi_L2</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.module.linear_map</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"bp\">Ω</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Defines an open subset Ω of an n-dimensional real vector space -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">is_open_subset</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"bp\">Ω</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">euclidean.ball</span> <span class=\"n\">x</span> <span class=\"n\">ε</span> <span class=\"bp\">⊆</span> <span class=\"bp\">Ω</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">yshj</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">Given Ω ⊂ R^n is open, f : Ω → R^m, p ∈ Ω, and Λ.</span>\n<span class=\"cm\">Defines what it means for Λ to be the derivative of f.-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">deriv_exists</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">ℝ</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">∧</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"n\">D</span> <span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">non_zero_convergent_zero</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">j</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span> <span class=\"bp\">→</span> <span class=\"bp\">|</span><span class=\"n\">a</span> <span class=\"n\">j</span><span class=\"bp\">|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">Theorem: Given Ω ⊂ R^n is open, f : Ω → R^m, p ∈ Ω, and Λ.</span>\n<span class=\"cm\">If f is differentiable at p and has two different derivatives K and K', then K = K'. -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">deriv_unique</span>\n  <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"n\">K'</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">ℝ</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"bp\">Ω</span> <span class=\"o\">:</span> <span class=\"n\">is_open_subset</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∈</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">he</span> <span class=\"o\">:</span> <span class=\"bp\">‖</span><span class=\"n\">e</span><span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">non_zero_convergent_zero</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">deriv_exists</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">deriv_exists</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"n\">K'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">K</span> <span class=\"bp\">=</span> <span class=\"n\">K'</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n\n  <span class=\"n\">cases</span> <span class=\"n\">ha</span> <span class=\"k\">with</span> <span class=\"n\">h_nonzero</span> <span class=\"n\">h_converge</span><span class=\"o\">,</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">h_four</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"n\">z</span> <span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"bp\">≤</span> <span class=\"n\">z</span> <span class=\"bp\">→</span> <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"bp\">‖-</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"n\">K</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)))</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">K'</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span> <span class=\"bp\">‖</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"bp\">‖</span><span class=\"n\">K</span> <span class=\"n\">e</span> <span class=\"bp\">-</span> <span class=\"n\">K'</span> <span class=\"n\">e</span><span class=\"bp\">‖</span> <span class=\"bp\">|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"c1\">--sorrying for conciseness</span>\n      <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n      <span class=\"o\">},</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">h_five</span> <span class=\"o\">:</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">‖-</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"n\">K</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)))</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">K'</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span> <span class=\"bp\">‖</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"n\">K</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"n\">K'</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span>\n      <span class=\"c1\">--sorrying for conciseness</span>\n      <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n\n\n  <span class=\"k\">have</span> <span class=\"n\">h_six</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ε_one</span> <span class=\"n\">ε_two</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε_one</span> <span class=\"bp\">∧</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε_two</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">N_final</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"n\">z</span> <span class=\"o\">,</span> <span class=\"n\">N_final</span> <span class=\"bp\">≤</span> <span class=\"n\">z</span> <span class=\"bp\">→</span> <span class=\"bp\">|‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"n\">K</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖|</span> <span class=\"bp\">+</span> <span class=\"bp\">|‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"n\">K'</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε_one</span> <span class=\"bp\">+</span> <span class=\"n\">ε_two</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n\n      <span class=\"n\">intros</span> <span class=\"n\">ε_one</span> <span class=\"n\">ε_two</span> <span class=\"n\">h_ε_one_two</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">h_ε_one_two</span> <span class=\"k\">with</span> <span class=\"n\">h_ε_one</span> <span class=\"n\">h_ε_two</span><span class=\"o\">,</span>\n      <span class=\"n\">specialize</span> <span class=\"n\">h1</span> <span class=\"n\">ε_one</span> <span class=\"n\">h_ε_one</span><span class=\"o\">,</span>\n      <span class=\"n\">specialize</span> <span class=\"n\">h2</span> <span class=\"n\">ε_two</span> <span class=\"n\">h_ε_two</span><span class=\"o\">,</span>\n\n      <span class=\"n\">cases</span> <span class=\"n\">h1</span> <span class=\"k\">with</span> <span class=\"n\">R_ε_one</span> <span class=\"n\">h_right1</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">h2</span> <span class=\"k\">with</span> <span class=\"n\">R_ε_two</span> <span class=\"n\">h_right2</span><span class=\"o\">,</span>\n\n      <span class=\"n\">set</span> <span class=\"n\">δ</span> <span class=\"o\">:=</span> <span class=\"n\">min</span> <span class=\"n\">R_ε_one</span> <span class=\"n\">R_ε_two</span><span class=\"o\">,</span>\n      <span class=\"n\">specialize</span> <span class=\"n\">h_converge</span> <span class=\"n\">δ</span><span class=\"o\">,</span>\n      <span class=\"c1\">--working here</span>\n\n      <span class=\"gr\">sorry</span><span class=\"o\">,},</span>\n\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span><span class=\"bp\">```</span>\n\n\n<span class=\"bp\">```</span><span class=\"n\">mn</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">Ω</span><span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">KK'</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">ℝ</span><span class=\"o\">]</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">h</span><span class=\"bp\">Ω</span><span class=\"o\">:</span> <span class=\"n\">is_open_subset</span> <span class=\"bp\">Ω</span>\n<span class=\"n\">hp</span><span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∈</span> <span class=\"bp\">Ω</span>\n<span class=\"n\">e</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">he</span><span class=\"o\">:</span> <span class=\"bp\">‖</span><span class=\"n\">e</span><span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">h_nonzero</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"n\">j</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span>\n<span class=\"n\">h_four</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">N</span> <span class=\"bp\">≤</span> <span class=\"n\">z</span> <span class=\"bp\">→</span> <span class=\"bp\">|‖-</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"bp\">⇑</span><span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K'</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"bp\">‖</span> <span class=\"bp\">-</span> <span class=\"bp\">‖⇑</span><span class=\"n\">K</span> <span class=\"n\">e</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K'</span> <span class=\"n\">e</span><span class=\"bp\">‖|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n<span class=\"n\">h_five</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">‖-</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"bp\">⇑</span><span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K'</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"bp\">‖</span> <span class=\"bp\">+</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K'</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"bp\">‖</span>\n<span class=\"n\">ε_oneε_two</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">h_ε_one</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε_one</span>\n<span class=\"n\">h_ε_two</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε_two</span>\n<span class=\"n\">R_ε_one</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">h_right1</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">R_ε_one</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">∧</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">R_ε_one</span> <span class=\"bp\">→</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K</span> <span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε_one</span>\n<span class=\"n\">R_ε_two</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">h_right2</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">R_ε_two</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">∧</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">R_ε_two</span> <span class=\"bp\">→</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K'</span> <span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">h</span><span class=\"bp\">‖</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε_two</span>\n<span class=\"n\">δ</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">min</span> <span class=\"n\">R_ε_one</span> <span class=\"n\">R_ε_two</span>\n<span class=\"n\">h_converge</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span> <span class=\"bp\">→</span> <span class=\"bp\">|</span><span class=\"n\">a</span> <span class=\"n\">j</span><span class=\"bp\">|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span><span class=\"o\">)</span>\n<span class=\"bp\">⊢</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">N_final</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">N_final</span> <span class=\"bp\">≤</span> <span class=\"n\">z</span> <span class=\"bp\">→</span> <span class=\"bp\">|‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"bp\">‖|</span> <span class=\"bp\">+</span> <span class=\"bp\">|‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"bp\">⇑</span><span class=\"n\">K'</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">‖</span><span class=\"n\">a</span> <span class=\"n\">z</span> <span class=\"bp\">•</span> <span class=\"n\">e</span><span class=\"bp\">‖|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε_one</span> <span class=\"bp\">+</span> <span class=\"n\">ε_two</span><span class=\"bp\">```</span>\n</code></pre></div>",
        "id": 339576849,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677944555
    },
    {
        "content": "<p>Added even more detail just now</p>",
        "id": 339579948,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677945883
    },
    {
        "content": "<p>Thanks for the <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>! This has made the question much easier to answer. You have made an error of logic in your definition of <code>deriv_exists</code>. Here is a theorem which shouldn't be true:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"n\">v</span> <span class=\"n\">D</span><span class=\"o\">,</span> <span class=\"n\">deriv_exists</span> <span class=\"n\">f</span> <span class=\"n\">v</span> <span class=\"n\">D</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">f</span> <span class=\"n\">v</span> <span class=\"n\">D</span> <span class=\"n\">ε</span> <span class=\"n\">hε</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"c1\">-- let R be -1</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"c1\">-- I now have a false hypothesis in my local context</span>\n  <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Your definition of <code>deriv_exists</code> says ...there exists an R such that <em>if</em> R &gt; 0 then [blah]. And because real numbers exist that aren't &gt; 0, <code>deriv_exists</code> is always true. You probably want to say \"there exists R such that R &gt; 0 <em>and</em> [blah]\".</p>",
        "id": 339582502,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677946819
    },
    {
        "content": "<p>PS unrelated to this issue, I would recommend that you prove things like <code>h_four</code> and <code>h_five</code> as separate lemmas rather than within the big proof; otherwise you might get some nasty slowdown (if you're not experiencing nasty slowdown then maybe don't worry about this, but if you end up having to wait 5 seconds every time you type something then maybe consider it)</p>",
        "id": 339585005,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677947804
    },
    {
        "content": "<p>That makes sense I did have doubts about the deriv_exists defn. Would you recommend the following adjustments to get \"there exists R such that R &gt; 0 and [blah]\"? (I tried some stuff with /and but that was valid for some reason. )</p>\n<p>def deriv_exists (D : (fin n → ℝ) →ₗ[ℝ] (fin m → ℝ)) : Prop :=<br>\n∀ (ε : ℝ), 0 &lt; ε → (∃ (R : ℝ), 0 &lt; R) → ∀ h : (fin n → ℝ) , 0 &lt; ‖h‖ ∧ ‖h‖ ≤ R → ‖f (p + h) - f p - D h‖ / ‖h‖ &lt; ε</p>",
        "id": 339585125,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677947858
    },
    {
        "content": "<p>It's \"exists R : 0 &lt; R \\and ...\"</p>",
        "id": 339585758,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677948121
    },
    {
        "content": "<p>Just take what you had originally, and change -&gt; to \\and</p>",
        "id": 339585860,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677948155
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/WSd5FquE7lJCucNP0tFBHD-X/delete.png\">delete.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/WSd5FquE7lJCucNP0tFBHD-X/delete.png\" title=\"delete.png\"><img src=\"/user_uploads/3121/WSd5FquE7lJCucNP0tFBHD-X/delete.png\"></a></div>",
        "id": 339589329,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677949884
    },
    {
        "content": "<p>Hi Prof,<br>\nI did as you suggested:<br>\ndef deriv_exists (D : (fin n → ℝ) →ₗ[ℝ] (fin m → ℝ)) : Prop :=<br>\n∀ (ε : ℝ), 0 &lt; ε → (∃ (R : ℝ), 0 &lt; R) ∧ (∀ (h : fin n → ℝ) , 0 &lt; ‖h‖ ∧ ‖h‖ ≤ R → ‖f (p + h) - f p - D h‖ / ‖h‖ &lt; ε)</p>\n<p>but this gives me an unknown identifier 'R' problem as in the pic</p>",
        "id": 339589460,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677949947
    },
    {
        "content": "<p>Also thank you for the comment about nasty slowdowns, I will make sure to write those 'have' statements as seperate lemmas</p>",
        "id": 339589718,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677950073
    },
    {
        "content": "<p>I realised the following is fine:<br>\ndef deriv_exists (D : (fin n → ℝ) →ₗ[ℝ] (fin m → ℝ)) : Prop :=<br>\n∀ (ε : ℝ), 0 &lt; ε → ∃ (R : ℝ), 0 &lt; R ∧ (∀ (h : fin n → ℝ) , (0 &lt; ‖h‖) ∧ (‖h‖ ≤ R) → ‖f (p + h) - f p - D h‖ / ‖h‖ &lt; ε)</p>",
        "id": 339592068,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677951263
    },
    {
        "content": "<p>Thank you, Prof, sorry about initially not explaining the problem clearly</p>",
        "id": 339592176,
        "sender_full_name": "Abu Al Hassan",
        "timestamp": 1677951335
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"583816\">Abu Al Hassan</span> has marked this topic as resolved.</p>",
        "id": 339592178,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677951337
    }
]