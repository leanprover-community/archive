[
    {
        "content": "<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> be function mapping <code>fin m</code> into real numbers and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> be a function mapping <code>fin n</code> into a real numbers. The functions have the same nonzero values, but one might have many more zeros than the other. As such the  \"Number\" of nonzero elements is the same in the range of the functions. I want to say there is an equivalence between the elements of <code>fin m</code> and elements of <code>fin n</code> that lead to the nonzero values in the results of functions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> respectively.<br>\nThe lemma definition at the bottom of the page does not even type check and lean has the short but uninformative error message `invalid expression starting at 36:2. So my questions are:</p>\n<ol>\n<li>\n<p>How do I express equivalence between two subtypes? <br>\n         In this case the subtypes of <code>fin m</code> and <code>fin n</code> that give nonzero values in <code>fm</code> and <code>fn</code> respectively?</p>\n</li>\n<li>\n<p>Given the two lemmas <code>zero_or_fn_in_fm</code> and  <code>zero_or_fm_in_fn</code> how do I go about proving <code>non_zero_parts_equiv</code> ?</p>\n</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.hermitian</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.pos_def</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.spectrum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">matrix</span> <span class=\"n\">complex_conjugate</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">10</span>\n<span class=\"kd\">def</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">14</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Nonzero in fm is in fn -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">zero_or_fm_in_fn</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Flipped Around -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">zero_or_fn_in_fm</span>  <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">pm</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n<span class=\"kd\">def</span> <span class=\"n\">pn</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">pm_dec</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">decidable_pred</span> <span class=\"o\">(</span><span class=\"n\">pm</span> <span class=\"n\">fm</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">decidable_pred</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">pm</span><span class=\"o\">,</span> <span class=\"n\">dsimp</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">eq.decidable</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> I want to say there is an equivalence relation between</span>\n<span class=\"cm\">elements of fin m giving nonzero values for fm and the</span>\n<span class=\"cm\">elements of fin n giving nonzero values for fn.</span>\n<span class=\"cm\">-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">non_zero_parts_equiv</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">e</span><span class=\"o\">:</span> <span class=\"o\">({</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">//</span> <span class=\"n\">pm</span> <span class=\"n\">fm</span><span class=\"o\">}</span> <span class=\"bp\">≃</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">//</span> <span class=\"n\">pn</span> <span class=\"n\">fn</span><span class=\"o\">})</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 362564050,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685564634
    },
    {
        "content": "<p>It doesn't typecheck because the syntax is <code> ∃ x : X, p x</code>, not <code>∃ x : X</code></p>",
        "id": 362576570,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685568552
    },
    {
        "content": "<p>You can fix that with <code>∃ x : X, true</code>, but that's just a silly way of writing <code>nonempty X</code></p>",
        "id": 362576700,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685568597
    },
    {
        "content": "<p>Are you sure you're not looking for <code>X</code> by itself though? Here, that would be an algorithm for constructing the equiv</p>",
        "id": 362576846,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685568634
    },
    {
        "content": "<p>Your statement is sort of true by definition: <code>#A = #B</code> (ie, the size of each type, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal.mk\">docs#cardinal.mk</a>, being the same) means <code>nonempty (A ≃ B)</code>)</p>",
        "id": 362577332,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685568838
    },
    {
        "content": "<p>If you did want to prove this I think you could use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin_enum\">docs#fin_enum</a> to enumerate the elements in order...</p>",
        "id": 362577550,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685568916
    },
    {
        "content": "<p>... but this sounds like an <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> problem to me</p>",
        "id": 362577589,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685568927
    },
    {
        "content": "<p>If I understand Wikipedia's description of XY problem. It means I should describe my original problem and leave the 'toy' version above which might obscure things. Well then! Here is a description of the original problem:</p>\n<h2>AB to BA Eigenvalue Problems</h2>\n<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∈</mo><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>×</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A \\in \\mathbb{C} (m \\times n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>∈</mo><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>×</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">B \\in \\mathbb{C} (n \\times m) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span> matrices that are not necessarily square. I want to express the following fact from linear algebra:<br>\nLet <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> be an integer representing the rank of the matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">AB</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. It is also the rank of the matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">BA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">A</span></span></span></span>. i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>=</mo><mtext>rank</mtext><mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><mtext>rank</mtext><mrow><mo stretchy=\"false\">(</mo><mi>B</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">r = \\text{rank}{(AB)}= \\text{rank}{(BA)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">rank</span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">rank</span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>≤</mo><mtext>min</mtext><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">r  \\leq \\text{min}{(m,n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">min</span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>. This is the number of nonzero eigenvalues. We can show in lean that the eigenvalues that are non zero are common between both. The first half of the proof is here <a href=\"#narrow/stream/113489-new-members/topic/Eigenvalue.20of.20matrix.20products.20AB.20and.20BA\"> &gt; Eigenvalue of matrix products AB and BA</a>. But that statement even if made in both directions is still lacking. What I want to say is<br>\n\" The multiset (accounting for multiplicities) of nonzero eigenvalues in matrices <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">AB</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">BA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">A</span></span></span></span> are the same and I want an equivalence that allows me to move between them\"</p>\n<h2>The <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mi>H</mi></msup><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A^HA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">A</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><msup><mi>A</mi><mi>H</mi></msup></mrow><annotation encoding=\"application/x-tex\">AA^H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span></span></span></span></span></span></span></span> Eigenvalues Problem</h2>\n<p>Starting from mathlib in its current form without more work the above looked a bit far. So I started with what I though  to be a \"simpler problem\" (famous last words of many dead!)<br>\nConsider the matrices <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mi>H</mi></msup><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A^HA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><msup><mi>A</mi><mi>H</mi></msup></mrow><annotation encoding=\"application/x-tex\">AA^H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span></span></span></span></span></span></span></span>. These are nice matrices, very nice! Hermitian, Real Eigenvalues and in mathlib there is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.is_hermitian.eigenvalues\">docs#matrix.is_hermitian.eigenvalues</a> that reuses the matrix index. Hence we now have two function from indices <code>fin m</code> to the eigenvalues of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mi>H</mi></msup><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A^HA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">A</span></span></span></span> and <code>fin n</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><msup><mi>A</mi><mi>H</mi></msup></mrow><annotation encoding=\"application/x-tex\">AA^H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span></span></span></span></span></span></span></span> to the eigenvalues. These sets of eigenvalues are the same if you discount the zero eigenvalues.</p>\n<h2>The SVD Relation</h2>\n<p>A useful side effect of proving this equivalence (between the subsets from <code>fin m</code> and <code>fin n</code>)is that having an SVD proof becomes much closer. You can reorder the results of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.is_hermitian.spectral_theorem\">docs#matrix.is_hermitian.spectral_theorem</a> using your equivalence relation for both matrix decompositions and  voila! you have an SVD decomposition.</p>\n<h2>Back to the question</h2>\n<p>How do I permute the eigenvalues sets of the two above matrices such that I have a bijection/equivalence between subtypes representing the nonzero elements of the eigenvalue functions of each matrix?</p>",
        "id": 362583826,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685571167
    },
    {
        "content": "<p>So using your suggestion for the lemma statement:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.hermitian</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.pos_def</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.spectrum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">matrix</span> <span class=\"n\">complex_conjugate</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">10</span>\n<span class=\"kd\">def</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">14</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Nonzero in fm is in fn -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">zero_or_fm_in_fn</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Flipped Around -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">zero_or_fn_in_fm</span>  <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">pm</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n<span class=\"kd\">def</span> <span class=\"n\">pn</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n<span class=\"k\">#check</span> <span class=\"n\">pm</span>\n<span class=\"c\">/-</span><span class=\"cm\"> I want to say there is an equivalence relation between</span>\n<span class=\"cm\">elements of fin m giving nonzero values for fm and the</span>\n<span class=\"cm\">elements of fin n giving nonzero values for fn.</span>\n<span class=\"cm\">-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">non_zero_parts_equiv</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"n\">nonempty</span><span class=\"o\">({</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">//</span> <span class=\"n\">pm</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">}</span> <span class=\"bp\">≃</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">//</span> <span class=\"n\">pn</span> <span class=\"n\">fn</span> <span class=\"n\">j</span><span class=\"o\">}):=</span>\n<span class=\"kd\">begin</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 362584761,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685571547
    },
    {
        "content": "<p>What do mean by \" Here, that would be an algorithm for constructing the equiv\"?</p>",
        "id": 362585001,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685571621
    },
    {
        "content": "<p>This idea that \"real eigenvalues\" are helping is I think false. The original question makes sense over any field, and any attempt to use special properties of R or C will end up with you proving a special case of the lemma which would not be suitable for mathlib.</p>",
        "id": 362585901,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685571973
    },
    {
        "content": "<p>Wait, this isn't even true is it? Let A=(0 1;0 0) and B=(1 0;0 0)</p>",
        "id": 362586694,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685572228
    },
    {
        "content": "<p>Or A=(1,1), B=(1;-1)</p>",
        "id": 362587168,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685572411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362586694\">said</a>:</p>\n<blockquote>\n<p>Wait, this isn't even true is it? Let A=(0 1;0 0) and B=(1 0;0 0)</p>\n</blockquote>\n<p>You mean the statement an eigenvalue of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">AB</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> that is non-zero is an eigenvalue of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">BA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">A</span></span></span></span>?</p>",
        "id": 362587966,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685572702
    },
    {
        "content": "<p>Lets begin with the second case example A = [1, 1] and B = [1; -1] I assume this is MATLAB notation i.e. A is a row and B is a column</p>",
        "id": 362588192,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685572798
    },
    {
        "content": "<p>AB = 0<br>\nBA = [1 1; -1 -1]</p>",
        "id": 362588295,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685572825
    },
    {
        "content": "<p>AB is the zero matrix of size 1 x 1</p>",
        "id": 362588606,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685572933
    },
    {
        "content": "<p>Nothing much to say here</p>",
        "id": 362588637,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685572944
    },
    {
        "content": "<p>BA is the matrix [1 1; -1 -1] ==&gt; Charactersitic polynomial is the x^2 polynomial.<br>\nThe only roots are zero and zero</p>",
        "id": 362588823,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573019
    },
    {
        "content": "<p>But these are already discounted in the statement. i.e. we are only concerned with nonzero eigenvalues</p>",
        "id": 362588895,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573044
    },
    {
        "content": "<p>No, the claim that the ranks are equal</p>",
        "id": 362588913,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573053
    },
    {
        "content": "<p>Or maybe you're using a nonstandard definition of the rank of a matrix?</p>",
        "id": 362588991,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573094
    },
    {
        "content": "<p>For square matrices in my head rank is the number of nonzero eigenvalues</p>",
        "id": 362589048,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573121
    },
    {
        "content": "<p>Well in the textbooks rank is something else :-/</p>",
        "id": 362589076,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573137
    },
    {
        "content": "<p>But that is not the correct definition</p>",
        "id": 362589089,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573143
    },
    {
        "content": "<p>You are right. rank(AB) \\neq rank(BA)</p>",
        "id": 362589179,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573166
    },
    {
        "content": "<p>But No of NonZeroEigs(AB) = NonZeroEigs(BA)?</p>",
        "id": 362589233,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573192
    },
    {
        "content": "<p>But I agree that the char power series are the same -- yes</p>",
        "id": 362589251,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573200
    },
    {
        "content": "<p>The char power series of a square matrix M is det(1-tM), probably there is a better name for it</p>",
        "id": 362589358,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573253
    },
    {
        "content": "<p>and CPS(AB)=CPS(BA).</p>",
        "id": 362589418,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573279
    },
    {
        "content": "<p>This is a poly with constant term 1 whose roots are the multiset of reciprocals of nonzero eigenvalues of the matrix</p>",
        "id": 362589574,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573332
    },
    {
        "content": "<p>If P(X) is the char poly of degree d then the char power series is X^d*P(1/X)</p>",
        "id": 362589848,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573436
    },
    {
        "content": "<p>So one could even say that the multiset of nonzero eigenvalues was the same for AB and BA, but my claim is a cleaner way of expressing it</p>",
        "id": 362590136,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685573567
    },
    {
        "content": "<p>Let me see if I get this:</p>\n<ol>\n<li>There is something called the characteristic power series given by: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>P</mi><mi>S</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>x</mi><mi>d</mi></msup><mi>P</mi><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">CPS(X) = x^d P(x^{-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">CPS</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is the characteristic polynomial</li>\n<li>Its roots are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><msub><mi>λ</mi><mi>i</mi></msub></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{\\lambda_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2902em;vertical-align:-0.4451em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">i\\in[1,n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6986em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> dimension of tha matrix So basically that premultiplication with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>d</mi></msup></mrow><annotation encoding=\"application/x-tex\">x^d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span> clears out the zero eigenvalues from the root set.</li>\n<li>You think expressing it in terms of Char Power Series is a better way</li>\n</ol>",
        "id": 362590689,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573838
    },
    {
        "content": "<p>So here are a few questions?<br>\nIs the  \"Char Power Series\" currently in mathlib? Or do we need to define it?</p>",
        "id": 362590969,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573962
    },
    {
        "content": "<p>In what sense is it cleaner?</p>",
        "id": 362591015,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685573993
    },
    {
        "content": "<p>Instead of talking about equality of multisets of nonzero eigenvalues, my claim (det(1-tAB)=det(1-tBA)) is a clean equality of polynomials, from which the equality of multisets easily follows.</p>",
        "id": 362591631,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685574286
    },
    {
        "content": "<p>Furthermore my claim is true for matrices taking values in an arbitrary commutative ring like Z or Z/8Z so it's more general; over general rings polynomials of degree d can have more than d roots so the concept of eigenvalue is not well behaved, whereas as the concept of a polynomial is</p>",
        "id": 362591810,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685574380
    },
    {
        "content": "<p>OK! I see. Yes, proving <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>A</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>B</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">det(I - tAB) = det(I - tBA)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> would be easier.<br>\nBut still equality of the root sets does not mean they are indexed in the same way. So an equivalence between them is needed right?</p>",
        "id": 362592330,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685574599
    },
    {
        "content": "<p>Sorry I guess you meant CPS (BA) = CPS(BA) which is not the same as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>A</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>B</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">det(I - tAB) = det(I - tBA)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 362592520,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685574684
    },
    {
        "content": "<p>The CPS have the same roots but det(I - tAB) will have the extra zero roots right?</p>",
        "id": 362592570,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685574713
    },
    {
        "content": "<p>CPS(M):=det(I-tM)</p>",
        "id": 362592672,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685574752
    },
    {
        "content": "<p>But don't we need to mulitply by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>d</mi></msup></mrow><annotation encoding=\"application/x-tex\">x^d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span> to clear the zeros?</p>",
        "id": 362592716,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685574786
    },
    {
        "content": "<p>And invert the argument?</p>",
        "id": 362592744,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685574801
    },
    {
        "content": "<p>There is no d in my equation or any multiplication by any x^d</p>",
        "id": 362592763,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685574811
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362589848\">said</a>:</p>\n<blockquote>\n<p>If P(X) is the char poly of degree d then the char power series is X^d*P(1/X)</p>\n</blockquote>\n<p>This one?</p>",
        "id": 362592784,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685574831
    },
    {
        "content": "<p>That's a theorem. I don't really know what you're saying.</p>",
        "id": 362592879,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685574861
    },
    {
        "content": "<p>I'm saying CPS(AB)=CPS(BA) and that if the base ring is an algebraically closed field like the complexes then the roots of CPS(M) are the reciprocals of the nonzero eigenvalues of M, with multiplicities</p>",
        "id": 362593029,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685574937
    },
    {
        "content": "<p>What I understood was you are naming the characteristic polynomial P(X). Then defining the Characteristic Power Series in terms of it by:<br>\nCPS(X) := X^d P(1/X)</p>",
        "id": 362593036,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685574943
    },
    {
        "content": "<p>That's a more ugly definition, I would rather think of that as a theorem</p>",
        "id": 362593102,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685574970
    },
    {
        "content": "<p>But that's a concrete link between the CPS and the eigenvalues</p>",
        "id": 362593199,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685575038
    },
    {
        "content": "<p>CPS(M)=X^dP(1/X) is more accurate</p>",
        "id": 362593323,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685575095
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497480\">MohanadAhmed</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362592330\">said</a>:</p>\n<blockquote>\n<p>OK! I see. Yes, proving <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>A</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>B</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">det(I - tAB) = det(I - tBA)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> would be easier.<br>\nBut still equality of the root sets does not mean they are indexed in the same way. So an equivalence between them is needed right?</p>\n</blockquote>\n<p>How about the equivalence between the two sets so that I can use the indices from one set  in the other. That would be a useful step in an SVD proof?</p>",
        "id": 362593593,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685575238
    },
    {
        "content": "<p>What sets are you talking about? Here the correct concept is a multiset</p>",
        "id": 362594243,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685575580
    },
    {
        "content": "<p>It is probably a misunderstanding from my side but in mathlib there are two things that can be seen as the same thing:</p>\n<ol>\n<li>\n<p>There is the multiset of roots of a polynomial. If the polynomial is selected to be the characteristic polynomial then the roots are the eigenvalues.<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.roots\">docs#polynomial.roots</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.charpoly\">docs#matrix.charpoly</a></p>\n</li>\n<li>\n<p>There is the eigenvalues of a hermitian matrix which map from the index set (say fintype n) to an eigenvalue. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.is_hermitian.eigenvalues\">docs#matrix.is_hermitian.eigenvalues</a></p>\n</li>\n</ol>\n<p>The second one is ordered. So if I want to compare the eigenvalues between two matrices, I need to take care of this order by reindexing.</p>\n<p>The second one also comes with eigenvectors associated with the eigenvalues. So using these eigenvectors with another matrix requires a mapping of the indices</p>",
        "id": 362595517,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685576417
    },
    {
        "content": "<p>The first one is the multiset of roots (eigenvalues) you are talking about. But it comes alone without associated eigenvectors</p>\n<p>Edit (10:55AM) : It seems my terminology is way off here. What I mean by ordered is that the index n <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.is_hermitian.eigenvalues\">docs#matrix.is_hermitian.eigenvalues</a> ties the eigenvalues to the eigenvectors in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.is_hermitian.eigenvector_matrix\">docs#matrix.is_hermitian.eigenvector_matrix</a>. When using those two theorems the eigenvalue are associated to some index <code>(i : n)</code></p>",
        "id": 362595721,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685576553
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497480\">MohanadAhmed</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362592330\">said</a>:</p>\n<blockquote>\n<p>OK! I see. Yes, proving $det(I - tAB) = det(I - tBA)$ would be easier.</p>\n</blockquote>\n<p>Note that this is \"the matrix determinant lemma\" and there is another recent thread about proving it <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/matrix.20determinant.20lemma/near/361714568\">here</a>.</p>",
        "id": 362596358,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685576956
    },
    {
        "content": "<p>I see where the confusion might be coming from:</p>\n<p>The first question for the AB and BA matrices makes sense in general.</p>\n<p>The second question for the A^HA and AA^H matrices is a special case of the first. But in the second case we have have a different proof because of this disconnect in mathlib between eigenvalues in general and eigenvalues of hermitian matrices</p>",
        "id": 362596654,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685577134
    },
    {
        "content": "<p>So mathematically 2nd question is a special case of the first.</p>\n<p>In mathlib the 2nd is not direct special case which can you just apply.</p>",
        "id": 362596855,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685577279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497480\">MohanadAhmed</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362584761\">said</a>:</p>\n<blockquote>\n<p>So using your suggestion for the lemma statement:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.hermitian</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.pos_def</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.spectrum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">matrix</span> <span class=\"n\">complex_conjugate</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">10</span>\n<span class=\"kd\">def</span> <span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">14</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Nonzero in fm is in fn -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">zero_or_fm_in_fn</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Flipped Around -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">zero_or_fn_in_fm</span>  <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">pm</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n<span class=\"kd\">def</span> <span class=\"n\">pn</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n<span class=\"k\">#check</span> <span class=\"n\">pm</span>\n<span class=\"c\">/-</span><span class=\"cm\"> I want to say there is an equivalence relation between</span>\n<span class=\"cm\">elements of fin m giving nonzero values for fm and the</span>\n<span class=\"cm\">elements of fin n giving nonzero values for fn.</span>\n<span class=\"cm\">-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">non_zero_parts_equiv</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span>\n  <span class=\"n\">nonempty</span><span class=\"o\">({</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">//</span> <span class=\"n\">pm</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">}</span> <span class=\"bp\">≃</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">//</span> <span class=\"n\">pn</span> <span class=\"n\">fn</span> <span class=\"n\">j</span><span class=\"o\">}):=</span>\n<span class=\"kd\">begin</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Any thoughts on how to prove this equivalence? <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span></p>",
        "id": 362597852,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685577899
    },
    {
        "content": "<p>Your sorries are false, so I can use them to prove whatever I like!</p>",
        "id": 362598099,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685578050
    },
    {
        "content": "<p>(I think those two lemmas need to be assumptions instead, they certainly aren't universally true!)</p>",
        "id": 362598127,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685578078
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497480\">MohanadAhmed</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362592520\">said</a>:</p>\n<blockquote>\n<p>Sorry I guess you meant CPS (BA) = CPS(BA) which is not the same as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>A</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>B</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">det(I - tAB) = det(I - tBA)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p>Some sleep helps!!<br>\nCharacteristic Polynomial = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mi>I</mi><mo>−</mo><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">det(tI - M)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span></span></span></span><br>\nCharacteristic Power Seires = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">det(I - tM) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">tM</span><span class=\"mclose\">)</span></span></span></span><br>\n<span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  Would the first step in your suggested idea be to show that the roots of non-zero roots of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">det(I - tM)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">tM</span><span class=\"mclose\">)</span></span></span></span> and the roots of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">det(I - tM) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">tM</span><span class=\"mclose\">)</span></span></span></span> are related by being the inverses of each other?</p>",
        "id": 362668938,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685608248
    },
    {
        "content": "<p>The first step to proving what?</p>",
        "id": 362669136,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685608300
    },
    {
        "content": "<p>The multiset of the nonzero eigenvalues of AB is the same as the multiset of the nonzero eigenvalues of BA?</p>",
        "id": 362669993,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685608483
    },
    {
        "content": "<p>If I understood you correctly:<br>\nLet <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>det</mtext><mo stretchy=\"false\">(</mo><mi>t</mi><mi>I</mi><mo>−</mo><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P_M(t) = \\text{det}(tI - M)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">det</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span></span></span></span><br>\nLet <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>CPS</mtext><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>det</mtext><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\text{CPS}_M(t) = \\text{det}(I - tM)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">CPS</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">det</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">tM</span><span class=\"mclose\">)</span></span></span></span><br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>P</mi><msub><mi>S</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>t</mi><mi>n</mi></msup><msub><mi>P</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">CPS_M(t) = t^n P_M(1/t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1/</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 362671410,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685608708
    },
    {
        "content": "<p>Where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> is the dimension of the matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span></p>",
        "id": 362671541,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685608737
    },
    {
        "content": "<p>Then non-zero roots of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>P</mi><msub><mi>S</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">CPS_M(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span> are the same as the reciprocals of the non-zero roots of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_M(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 362671747,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685608782
    },
    {
        "content": "<p>Yes all those statements are true.</p>",
        "id": 362672890,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685609033
    },
    {
        "content": "<p>CPS_M(t) has constant term 1 so 0 is never a root.</p>",
        "id": 362673079,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1685609066
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362598127\">said</a>:</p>\n<blockquote>\n<p>(I think those two lemmas need to be assumptions instead, they certainly aren't universally true!)</p>\n</blockquote>\n<p>You are right. Does the following look more reasonable. If yes, any suggestions on how to proceed?<br>\nI guess an equivalent question is given a set of real numbers I want a permutation that orders them in increasing or decreasing order. There must be something like that already in mathlib, right?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.hermitian</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.pos_def</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.spectrum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">matrix</span> <span class=\"n\">complex_conjugate</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">variables</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"c\">/-</span>\n<span class=\"cm\">I want to say there is an equivalence relation between</span>\n<span class=\"cm\">elements of fin m giving nonzero values for fm and the</span>\n<span class=\"cm\">elements of fin n giving nonzero values for fn.</span>\n<span class=\"cm\">-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">pm</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n<span class=\"kd\">def</span> <span class=\"n\">pn</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">non_zero_parts_equiv</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">fn</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">)):</span>\n  <span class=\"n\">nonempty</span><span class=\"o\">({</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">//</span> <span class=\"n\">pm</span> <span class=\"n\">m</span> <span class=\"n\">fm</span> <span class=\"n\">i</span><span class=\"o\">}</span> <span class=\"bp\">≃</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">//</span> <span class=\"n\">pn</span> <span class=\"n\">n</span> <span class=\"n\">fn</span> <span class=\"n\">j</span><span class=\"o\">}):=</span>\n<span class=\"kd\">begin</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 362739379,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685623137
    },
    {
        "content": "<p>That looks true, but h1 and h2 look super awkward</p>",
        "id": 362741833,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685623651
    },
    {
        "content": "<p>I would suggest the condition being <code>(finset.univ.filter (pm fm)).card = (finset.univ.filter (pn fn)).card</code></p>",
        "id": 362742242,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685623740
    },
    {
        "content": "<p>Also, your <code>pn</code> and <code>pm</code> are alpha-equivalent!</p>",
        "id": 362742330,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685623757
    },
    {
        "content": "<p>Wait, this is still false, consider <code>fm = ![0, 0]</code> and <code>fn = ![0]</code>. Both hypotheses are clearly true, but the conclusion would imply <code>2 = 1</code></p>",
        "id": 362748210,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685624888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362577332\">said</a>:</p>\n<blockquote>\n<p>Your statement is sort of true by definition: <code>#A = #B</code> (ie, the size of each type, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal.mk\">docs#cardinal.mk</a>, being the same) means <code>nonempty (A ≃ B)</code>)</p>\n</blockquote>\n<p>Here's what I meant by that:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">set_theory.cardinal.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">cardinal</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">non_zero_parts_equiv</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">fm</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fn</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"c1\">-- the number of non-zero entries is equal</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">#</span><span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"bp\">//</span> <span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"bp\">#</span><span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"bp\">//</span> <span class=\"n\">fn</span> <span class=\"n\">i</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">})</span> <span class=\"o\">:</span>\n  <span class=\"c1\">-- the indices of non-zero entries are equivalent</span>\n  <span class=\"n\">nonempty</span> <span class=\"o\">({</span><span class=\"n\">i</span> <span class=\"bp\">//</span> <span class=\"n\">fm</span> <span class=\"n\">i</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"bp\">≃</span> <span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"bp\">//</span> <span class=\"n\">fn</span> <span class=\"n\">i</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">})</span> <span class=\"o\">:=</span>\n<span class=\"n\">cardinal.eq.mp</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 362749363,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685625115
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497480\">MohanadAhmed</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362671410\">said</a>:</p>\n<blockquote>\n<p>If I understood you correctly:<br>\nLet <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>det</mtext><mo stretchy=\"false\">(</mo><mi>t</mi><mi>I</mi><mo>−</mo><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> P_M(t) = \\text{det}(tI - M)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">det</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span></span></span></span><br>\nLet <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>CPS</mtext><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>det</mtext><mo stretchy=\"false\">(</mo><mi>I</mi><mo>−</mo><mi>t</mi><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\text{CPS}_M(t) = \\text{det}(I - tM)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">CPS</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">det</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">tM</span><span class=\"mclose\">)</span></span></span></span><br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>P</mi><msub><mi>S</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>t</mi><mi>n</mi></msup><msub><mi>P</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">CPS_M(t) = t^n P_M(1/t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1/</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p>The code below shows my initial attempt. It seems I can show that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>det</mtext><mo stretchy=\"false\">(</mo><msub><mi>I</mi><mi>m</mi></msub><mo>−</mo><mi>t</mi><mi>A</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>det</mtext><mo stretchy=\"false\">(</mo><msub><mi>I</mi><mi>n</mi></msub><mo>−</mo><mi>t</mi><mi>B</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{det}(I_m - tAB) = \\text{det}(I_n - tBA)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">det</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">det</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span>. I am however not even able to state the connection between the characteristic polynomial and characteristic power series : <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>P</mi><msub><mi>S</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>X</mi><mi>n</mi></msup><mo>∗</mo><msub><mi>P</mi><mi>M</mi></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">CPS_M(X) = X^n * P_M(1/X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>. How do I tell lean to give me the reciprocal of the polynomial indeterminate <code>polynomial.X</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.matrix.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.matrix.schur_complement</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.polynomial.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span> <span class=\"n\">matrix</span> <span class=\"n\">function</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span> <span class=\"n\">polynomial</span> <span class=\"n\">matrix</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">q</span> <span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">m</span><span class=\"o\">][</span><span class=\"n\">fintype</span> <span class=\"n\">n</span><span class=\"o\">][</span><span class=\"n\">decidable_eq</span> <span class=\"n\">m</span><span class=\"o\">][</span><span class=\"n\">decidable_eq</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">q</span><span class=\"o\">][</span><span class=\"n\">decidable_eq</span> <span class=\"n\">q</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">charpow_mat</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">q</span> <span class=\"n\">q</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">matrix</span> <span class=\"n\">q</span> <span class=\"n\">q</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">q</span> <span class=\"n\">q</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">matrix.scalar</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">polynomial.X</span><span class=\"o\">))</span>  <span class=\"bp\">⬝</span> <span class=\"o\">((</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→+*</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">map_matrix</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">charpow</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">q</span> <span class=\"n\">q</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">charpow_mat</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">det</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">charpow_comm</span> <span class=\"o\">(</span><span class=\"n\">A</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)(</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"n\">R</span><span class=\"o\">):</span>\n  <span class=\"n\">charpow</span> <span class=\"o\">(</span><span class=\"n\">A</span><span class=\"bp\">⬝</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">=</span>  <span class=\"n\">charpow</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">⬝</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">charpow</span><span class=\"o\">,</span> <span class=\"n\">unfold</span> <span class=\"n\">charpow_mat</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">coe_scalar</span><span class=\"o\">,</span> <span class=\"n\">ring_hom.map_matrix_apply</span><span class=\"o\">,</span> <span class=\"n\">matrix.map_mul</span><span class=\"o\">,</span> <span class=\"n\">smul_mul</span><span class=\"o\">,</span> <span class=\"n\">matrix.one_mul</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">matrix.smul_mul</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">det_one_sub_mul_comm</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">matrix.mul_smul</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Does not type check -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">charpow_eq_X_pow_n_mul_charpoly_inv</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">q</span> <span class=\"n\">q</span> <span class=\"n\">R</span><span class=\"o\">):</span>\n  <span class=\"n\">charpow</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">polynomial.X</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">fintype.card</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">M.charpoly.aeval</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 362889033,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685656549
    },
    {
        "content": "<p>I think for that you might need <a href=\"https://leanprover-community.github.io/mathlib_docs/find/laurent_polynomial\">docs#laurent_polynomial</a></p>",
        "id": 362891038,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685657320
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Equivalence.20between.20subtypes.20given.20a.20certain.20property/near/362596358\">said</a>:</p>\n<blockquote>\n<p>Note that this is \"the matrix determinant lemma\" and there is another recent thread about proving it <a href=\"#narrow/stream/217875-Is-there-code-for-X.F/topic/matrix.20determinant.20lemma/near/361714568\">here</a>.</p>\n</blockquote>\n<p>Whoops, I was obviously wrong; indeed, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.det_one_sub_mul_comm\">docs#matrix.det_one_sub_mul_comm</a> (which I wrote!) is the statement.</p>",
        "id": 362891513,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685657523
    },
    {
        "content": "<p>Perhaps it is easier to forget that connection and just show that<br>\nA is_root charpoly \\imp 1/A is_root charpow?</p>",
        "id": 362893293,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1685658258
    }
]