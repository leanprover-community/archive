[
    {
        "content": "<p>hi there! i am <em>very</em> new to this, and i was having some difficulty with the installation / the overall setup of lean. right now i'm trying to use it in vscode with the extension, but I'm unsure as to exactly how lean operates - do I simply make a new file with some specified extension or is it more involved?</p>",
        "id": 196825139,
        "sender_full_name": "Brandon Wu",
        "timestamp": 1588882759
    },
    {
        "content": "<p>You make a new project, as we desperately try to flag several times in the installation instructions</p>",
        "id": 196825561,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588883008
    },
    {
        "content": "<p>or you clone the tutorial project</p>",
        "id": 196825583,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588883024
    },
    {
        "content": "<p>my setup currently lives on my school's unix servers, so i sometimes run into trouble installing things - most recently ive been running into an error \"/tmp/tmp.p0mYwop9QR/elan-init: /lib64/libc.so.6: version `GLIBC_2.18' not found (required by /tmp/tmp.p0mYwop9QR/elan-init)\" when trying to install elan</p>",
        "id": 196826367,
        "sender_full_name": "Brandon Wu",
        "timestamp": 1588883464
    },
    {
        "content": "<p>That's a very bad omen.</p>",
        "id": 196827219,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588883950
    },
    {
        "content": "<p>What kind of Unix is that?</p>",
        "id": 196827236,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588883958
    },
    {
        "content": "<p>sounds like one which is no longer as young as it once was</p>",
        "id": 196827732,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588884239
    },
    {
        "content": "<p>\"school's unix servers\" is likely to be RHEL [some appallingly low number]</p>",
        "id": 196828079,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588884416
    },
    {
        "content": "<p>If it's relevant, I go to Carnegie Mellon and this is my school's Andrew server that I typically do all my work from. Is there no hope other than managing things locally, then?</p>",
        "id": 196828695,
        "sender_full_name": "Brandon Wu",
        "timestamp": 1588884807
    },
    {
        "content": "<p>Well, if you already have the required build tools (cmake for Lean, the rust toolchain for elan) then it should be pretty easy to build your own binaries.</p>",
        "id": 196829169,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588885086
    },
    {
        "content": "<p>Though I've never tried building elan</p>",
        "id": 196829196,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588885106
    },
    {
        "content": "<p>Hi all, I am a number theorist and I have recently discovered some of Kevin Buzzard's talks. I have downloaded Lean, played with the natural number game and done some of Patrick Massot's exercises... I wonder where to go now to learn/play/do stuff. For instance, how could I check if basic results about group theory are there (e.g. : finite group of order p^2 is abelian, or \"quotient by the centre is cyclic==&gt; group is abelian), or how/where can I try to prove them? Many thanks!</p>",
        "id": 196902553,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588948437
    },
    {
        "content": "<p>doing exercises on <a href=\"https://www.codewars.com/kata/search/lean?q=&amp;\" title=\"https://www.codewars.com/kata/search/lean?q=&amp;\">codewars</a> is a nice way to learn things</p>",
        "id": 196902766,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588948552
    },
    {
        "content": "<p>you can answer some of your questions by navigating in mathlib to the <code>group_theory</code> folder</p>",
        "id": 196902839,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588948573
    },
    {
        "content": "<p>either by using the <a href=\"https://leanprover-community.github.io/mathlib_docs/group_theory/sylow.html\" title=\"https://leanprover-community.github.io/mathlib_docs/group_theory/sylow.html\">html docs</a> or in your own VSCode project by going to the \"target\" folder</p>",
        "id": 196902952,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588948646
    },
    {
        "content": "<p>i guess you can also read the code on <a href=\"https://github.com/leanprover-community/mathlib/tree/master/src/group_theory\" title=\"https://github.com/leanprover-community/mathlib/tree/master/src/group_theory\">github directly</a></p>",
        "id": 196903059,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588948683
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> Welcome! Do you have a working Lean setup on your own computer?</p>",
        "id": 196903351,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588948837
    },
    {
        "content": "<p>Yes, I do. And thanks for the welcome.</p>",
        "id": 196903377,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588948853
    },
    {
        "content": "<p>Once you want to do something serious, the online web editors no longer are good enough</p>",
        "id": 196903378,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588948854
    },
    {
        "content": "<p>Ok, great</p>",
        "id": 196903390,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588948859
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/113489-new-members/topic/getting.20started/near/196903059\" title=\"#narrow/stream/113489-new-members/topic/getting.20started/near/196903059\">said</a>:</p>\n<blockquote>\n<p>i guess you can also read the code on <a href=\"https://github.com/leanprover-community/mathlib/tree/master/src/group_theory\" title=\"https://github.com/leanprover-community/mathlib/tree/master/src/group_theory\">github directly</a></p>\n</blockquote>\n<p>Thanks! I will try doing so, then. I have also tried to read a bit about \"compatibility\" with future/past version. Is it true that whatever we're doing in Lean 3 now will need to be redone from scratch in Lean 4?</p>",
        "id": 196903404,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588948870
    },
    {
        "content": "<p>In that case, I would follow the instructions for setting up a new project, add mathlib as dependency, and try to state some of your group theory lemmas</p>",
        "id": 196903427,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588948891
    },
    {
        "content": "<p>I don't think we'll have to redo things from scratch. But there will be some weeks where we have to solve a lot of technical porting issues.</p>",
        "id": 196903505,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588948925
    },
    {
        "content": "<p>Luckily we have some very good regex hackers in our community.</p>",
        "id": 196903525,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588948942
    },
    {
        "content": "<p>Also I think the day is fast approaching that we get enough parser data from lean core to be able to do better than regex</p>",
        "id": 196903604,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588948984
    },
    {
        "content": "<p>Ah ok, good news. I' ll try to set up a new project, although I have not found a documentation about \"basics\"  of group theory (e.g. what's the name for its order?) I suspect it should be at the address suggested by Jalex Stark</p>",
        "id": 196903767,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588949045
    },
    {
        "content": "<p>Thanks to both of you for your answers, I'll try my luck!</p>",
        "id": 196903807,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588949066
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> We just reuse <code>card</code> for the order. Note that you need to add <code>[fintype G]</code> to assume that your group is finite. And then <code>fintype.card G</code> gives you the order of the group.</p>",
        "id": 196904151,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588949245
    },
    {
        "content": "<p>If you have any arbitrary group... you need to deal with cardinals <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 196904185,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588949264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Thanks! This is precisely the kind of info I'd love to see written somewhere: where should I look exactly, rather than asking everything here? I feel a huge leap between solving Patrick's exercices and opening my project from scartch</p>",
        "id": 196904373,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588949340
    },
    {
        "content": "<p>(it reminds me of the first time I tried to type a LaTeX document before discovering the Short Guide To LaTeX...)</p>",
        "id": 196904549,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588949412
    },
    {
        "content": "<p>asking here is not super expensive, and learning from answers here will give you intuitions on where to look</p>",
        "id": 196904830,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588949545
    },
    {
        "content": "<p>if you feel bad about using people's time, just commit to start <em>answering</em> questions once you know things :)</p>",
        "id": 196904923,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588949584
    },
    {
        "content": "<p>Indeed, that was my problem. I feel a bit bad in asking stupid things like: where do I start from? As far as I know I should:<br>\n1) Create a new project, and import mathlib (this is OK)<br>\n2) Import \"all\" things which I suspect I might need to speak about finite groups: here I am already puzzled<br>\n3) Learn something about types/classes/structures...: no idea at all.</p>",
        "id": 196905208,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588949716
    },
    {
        "content": "<p>For your 3), I find myself skimming chapter 10 of TPiL every couple of weeks and understanding more of it in proportion to how much engineering I've done between readings</p>",
        "id": 196905436,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588949831
    },
    {
        "content": "<p>There isn't a great solution right now for 2), but see the very recent in-progress \"mathematics in Lean\" book: <a href=\"#narrow/stream/113488-general/topic/new.20Lean.20.2F.20mathlib.20tutorial\" title=\"#narrow/stream/113488-general/topic/new.20Lean.20.2F.20mathlib.20tutorial\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/new.20Lean.20.2F.20mathlib.20tutorial</a></p>\n<p>For 3), the standard source / reference for Lean is still \"Theorem proving in Lean\": <a href=\"https://leanprover.github.io/theorem_proving_in_lean/\" title=\"https://leanprover.github.io/theorem_proving_in_lean/\">https://leanprover.github.io/theorem_proving_in_lean/</a></p>",
        "id": 196905446,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588949836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> Thanks!</p>",
        "id": 196905717,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588949935
    },
    {
        "content": "<p>(TPiL is short for \"Theorem Proving in Lean\" around here, so my suggestion was essentially the same as Jalex's.)</p>",
        "id": 196905967,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588950036
    },
    {
        "content": "<p>Another stupid question: is it normal that each time I create a new project, some 120 MB get downloaded? I played a bit creating projects and I realise I have used almost a GB for nothing. Not a big deal, per se, just seems a bit odd.</p>",
        "id": 196906067,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588950087
    },
    {
        "content": "<p>Yes, unfortunately. Most of that space is taken up by mathlib's <code>.olean</code> files, which are like the compiled version of the <code>.lean</code> files.</p>",
        "id": 196906501,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588950248
    },
    {
        "content": "<p>i'll add that Hitchhiker's Guide explains stuffs pretty well.</p>",
        "id": 196906716,
        "sender_full_name": "Nam",
        "timestamp": 1588950358
    },
    {
        "content": "<p>Yes, I like that book too. You can find it with the other course materials here: <a href=\"https://lean-forward.github.io/logical-verification/2020/index.html#material\" title=\"https://lean-forward.github.io/logical-verification/2020/index.html#material\">https://lean-forward.github.io/logical-verification/2020/index.html#material</a></p>",
        "id": 196906855,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588950410
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> here is some basic group theory being done in Lean: <a href=\"https://github.com/ImperialCollegeLondon/group-theory-game/blob/master/src/group/level01_extended.lean\" title=\"https://github.com/ImperialCollegeLondon/group-theory-game/blob/master/src/group/level01_extended.lean\">https://github.com/ImperialCollegeLondon/group-theory-game/blob/master/src/group/level01_extended.lean</a></p>",
        "id": 196906926,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588950454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284601\">@Nam</span> <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> Ok, thanks. I'll have a look there.</p>",
        "id": 196906931,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588950457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <br>\nThanks. So, if I undestand the philosophy right, I should download the project group-theory-game and play there? I also suppose I should rather create an internal folder (say, with my name/initials) to avoid that if everything gets updated on GIT my work disappears?</p>",
        "id": 196907386,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1588950640
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/113489-new-members/topic/getting.20started/near/196904373\" title=\"#narrow/stream/113489-new-members/topic/getting.20started/near/196904373\">said</a>:</p>\n<blockquote>\n<p>Thanks! This is precisely the kind of info I'd love to see written somewhere: where should I look exactly, rather than asking everything here? I feel a huge leap between solving Patrick's exercices and opening my project from scartch</p>\n</blockquote>\n<p>Maybe I should give more context in the tutorials README (I gave it here, but it's not on GitHub). Currently there is a steady stream of people who want to learn Lean for math. This is great but the self-teaching material that exists is not yet up to this task. As a kind of urgency plaster, I translated the exercises from my first year undergraduate course where I used Lean, simply adding a couple of tactics that allow more efficiency. The course was not about learning Lean, it was about learning how to write rigorous proofs. So it stops very far from the point where you can develop new maths in Lean, and it very carefully avoid painful points, like handling inclusion maps. I simply hoped it would keep people busy for some time, and teach useful stuff while we work on <a href=\"https://github.com/leanprover-community/mathematics_in_lean\" title=\"https://github.com/leanprover-community/mathematics_in_lean\">https://github.com/leanprover-community/mathematics_in_lean</a> that should ultimately contain much more.</p>",
        "id": 196917876,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588955382
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/113489-new-members/topic/getting.20started/near/196907386\" title=\"#narrow/stream/113489-new-members/topic/getting.20started/near/196907386\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <br>\nThanks. So, if I undestand the philosophy right, I should download the project group-theory-game and play there? I also suppose I should rather create an internal folder (say, with my name/initials) to avoid that if everything gets updated on GIT my work disappears?</p>\n</blockquote>\n<p>The file I linked to imports other files from that project, so yes you'd be better off downloading the entire project. But nowadays I usually work within a local copy of mathlib.</p>",
        "id": 196919242,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588956094
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/113489-new-members/topic/getting.20started/near/196906067\" title=\"#narrow/stream/113489-new-members/topic/getting.20started/near/196906067\">said</a>:</p>\n<blockquote>\n<p>Another stupid question: is it normal that each time I create a new project, some 120 MB get downloaded? I played a bit creating projects and I realise I have used almost a GB for nothing. Not a big deal, per se, just seems a bit odd.</p>\n</blockquote>\n<p>This is not a stupid question at all. Each time you create a new project, you download mathlib, with its full git history. That's about 37Mo. Then, if you don't already have them, you download <em>compiled</em> mathlib files. After unpacking, this adds about 80 Mo. If you already have those compiled files they are not downloaded but they are copied to your new project folder, which now weights about 120 Mo. This makes sense when you have a couple of projects that depend on different versions of mathlib, that you want to update independently (mathlib moves really fast, and a mathlib update can break your project non-trivially). But it doesn't make sense if you simply want to play with creating Lean projects. There are ways to improve on this, but limited time resources to modify leanproject. The current workflow works nicely for serious users who have a handful of projects that need to be really independent, and for people who want to play with one toy project. So improving this is very low priority. But feel free to contribute if fixing this is important to you. This is much much easier than proving things.</p>",
        "id": 196920372,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588956652
    },
    {
        "content": "<p>I'll try and address the git cloning thing in <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/47\" title=\"https://github.com/leanprover-community/mathlib-tools/pull/47\">https://github.com/leanprover-community/mathlib-tools/pull/47</a> - it's a first draft but I am going to eat now</p>",
        "id": 196930840,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1588961507
    }
]