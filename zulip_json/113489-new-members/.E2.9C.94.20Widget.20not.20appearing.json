[
    {
        "content": "<p>I am trying to make the widget which provides trythis suggestions appear, but nothing is showing up. I am new so I'm not sure how to activate this widget, I have used</p>\n<p>import Lean<br>\nimport ProofWidgets<br>\nimport mathlib.tactic</p>",
        "id": 396042696,
        "sender_full_name": "Aaron Welson",
        "timestamp": 1697015166
    },
    {
        "content": "<p>Can you please provide a longer code example, that shows an example where you expect <code>Try this</code> to appear?</p>",
        "id": 396043146,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697015330
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">ProofWidgets</span>\n<span class=\"kn\">import</span> <span class=\"n\">Std</span>\n<span class=\"kn\">import</span> <span class=\"n\">mathlib.tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Widget</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">foo</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">hasdist</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n<span class=\"n\">dist</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n\n<span class=\"kn\">export</span> <span class=\"n\">hasdist</span> <span class=\"o\">(</span><span class=\"n\">dist</span><span class=\"o\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">MetricSpace</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">hasdist</span> <span class=\"n\">M</span> <span class=\"n\">where</span>\n  <span class=\"n\">dist_com</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">dist</span> <span class=\"n\">b</span> <span class=\"n\">a</span>\n  <span class=\"n\">dist_zer</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span>\n  <span class=\"n\">dist_tri</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">dist</span> <span class=\"n\">b</span> <span class=\"n\">c</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span> <span class=\"kd\">theorem</span> <span class=\"n\">dist_pos</span> <span class=\"o\">{</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span><span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span>\n<span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">dist_tri</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">a</span><span class=\"bp\">;</span>\n<span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"bp\">*;</span>\n<span class=\"n\">linarith</span><span class=\"bp\">;</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/3121/yknq5Jt-TGuzS-AnZ1UMTtma/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/yknq5Jt-TGuzS-AnZ1UMTtma/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/yknq5Jt-TGuzS-AnZ1UMTtma/image.png\"></a></div>",
        "id": 396043764,
        "sender_full_name": "Aaron Welson",
        "timestamp": 1697015551
    },
    {
        "content": "<p>Do you also get the error <code>unknown package mathlib</code>?</p>",
        "id": 396045054,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697015931
    },
    {
        "content": "<p>It looks like you are using Lean 4. So that should be <code>Mathlib.Tactic</code></p>",
        "id": 396045125,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697015950
    },
    {
        "content": "<p>After fixing that, I get the error <code>unknown identifier 'dist_tri'</code> on line 22.</p>",
        "id": 396045281,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697015999
    },
    {
        "content": "<p>Finally, neither <code>simp</code> nor <code>linarith</code> output a <code>Try this</code>-string. So it's not surprising that you don't see anything.</p>",
        "id": 396045512,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697016058
    },
    {
        "content": "<p>This code emits a lot of <code>Try this</code>-suggestions, for me.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Widget</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">foo</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">hasdist</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n<span class=\"n\">dist</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n\n<span class=\"kn\">export</span> <span class=\"n\">hasdist</span> <span class=\"o\">(</span><span class=\"n\">dist</span><span class=\"o\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">MetricSpace</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">hasdist</span> <span class=\"n\">M</span> <span class=\"n\">where</span>\n  <span class=\"n\">dist_com</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">dist</span> <span class=\"n\">b</span> <span class=\"n\">a</span>\n  <span class=\"n\">dist_zer</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span>\n  <span class=\"n\">dist_tri</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">dist</span> <span class=\"n\">b</span> <span class=\"n\">c</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span> <span class=\"kd\">theorem</span> <span class=\"n\">dist_pos</span> <span class=\"o\">{</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span><span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span>\n<span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">MetricSpace.dist_tri</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">a</span><span class=\"bp\">;</span>\n  <span class=\"n\">apply</span><span class=\"bp\">?</span>\n</code></pre></div>",
        "id": 396045746,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697016125
    },
    {
        "content": "<p>I don't get a package error. <code>apply?</code> does give out suggestions, but I have seen videos where a lightbulb appears somewhere in the top right of the infoview and I'm still not getting that. Has this feature been replaced with writing 'apply?' instead?</p>",
        "id": 396046827,
        "sender_full_name": "Aaron Welson",
        "timestamp": 1697016483
    },
    {
        "content": "<p>If you put your cursor on the <code>apply?</code> then you'll see a blue lightbulb next to <code>apply?</code>. Is that what you want? If not, please link to those videos.</p>",
        "id": 396047162,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697016607
    },
    {
        "content": "<p>I must be misremembering because I can't find the video, but writing 'apply?' does work for my purposes. Thanks</p>",
        "id": 396048635,
        "sender_full_name": "Aaron Welson",
        "timestamp": 1697017115
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"618044\">Aaron Welson</span> has marked this topic as resolved.</p>",
        "id": 396048648,
        "sender_full_name": "Notification Bot",
        "timestamp": 1697017121
    }
]