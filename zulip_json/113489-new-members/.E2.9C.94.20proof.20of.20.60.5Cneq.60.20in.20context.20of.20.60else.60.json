[
    {
        "content": "<p>In the function <code>meet</code> below, in <code>if l=m  then lines l else sorry</code>, where <code>sorry</code> is, I want to define the function to be the point of intersection of <code>l</code> and <code>m</code>. That's done with <code>mk_point l_neq_m</code>, where <code>l_neq_m</code> is a proof that <code>l\\neq m</code>. How can I get such a proof from the local context of the <code>else</code> clause at hand?</p>\n<p>Hopefully-small-enough working example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">combinatorics.configuration</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">configuration.has_lines</span>\n<span class=\"kn\">open</span> <span class=\"n\">configuration.has_points</span>\n<span class=\"kn\">open</span> <span class=\"n\">configuration.nondegenerate</span>\n<span class=\"kn\">open</span> <span class=\"n\">classical</span>\n<span class=\"kn\">open</span> <span class=\"n\">set</span>\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">has_mem</span> <span class=\"n\">P</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">configuration.has_lines</span> <span class=\"n\">P</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">configuration.has_points</span> <span class=\"n\">P</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">flats_lattice</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">L</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">flats_lattice</span>\n<span class=\"bp\">|</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">flats_lattice</span>\n<span class=\"bp\">|</span> <span class=\"n\">points</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">flats_lattice</span>\n<span class=\"bp\">|</span> <span class=\"n\">lines</span>  <span class=\"o\">(</span><span class=\"n\">l</span><span class=\"o\">:</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">flats_lattice</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">flats_lattice</span>\n<span class=\"kd\">def</span> <span class=\"n\">meet</span> <span class=\"o\">:</span> <span class=\"bp\">Î </span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">flats_lattice</span> <span class=\"n\">P</span> <span class=\"n\">L</span><span class=\"o\">),</span> <span class=\"n\">flats_lattice</span> <span class=\"n\">P</span> <span class=\"n\">L</span>\n<span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">zero</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"n\">zero</span> <span class=\"o\">:=</span> <span class=\"n\">zero</span>\n<span class=\"bp\">|</span> <span class=\"n\">one</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n<span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">points</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">points</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">q</span> <span class=\"k\">then</span> <span class=\"n\">points</span> <span class=\"n\">p</span> <span class=\"k\">else</span> <span class=\"n\">zero</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">lines</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">lines</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">l</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"k\">then</span> <span class=\"n\">lines</span> <span class=\"n\">l</span> <span class=\"k\">else</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">points</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">lines</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">lines</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">points</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">flats_lattice</span>\n</code></pre></div>",
        "id": 342985128,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1679256884
    },
    {
        "content": "<p>Change <code>if l = m...</code> to <code>if hlm : l = m...</code></p>",
        "id": 342985491,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679257166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245476\">Quinn Culver</span> has marked this topic as resolved.</p>",
        "id": 342989426,
        "sender_full_name": "Notification Bot",
        "timestamp": 1679259975
    }
]