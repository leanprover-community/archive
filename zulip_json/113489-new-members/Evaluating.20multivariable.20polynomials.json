[
    {
        "content": "<p>So I've been experimenting with the multivariable polynomial API, and I've figured some things out, but I'm having trouble understanding how to evaluate them properly, my first try was this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">trying_it</span>\n  <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h₀</span><span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">=</span> <span class=\"n\">X</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">X</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">X</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">X</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n   <span class=\"n\">P.eval</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"bp\">=</span> <span class=\"mi\">10</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I think my problem is that I don't fully understand the definitions together:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">mv_polynomial.eval</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span> <span class=\"bp\">→+*</span> <span class=\"n\">R</span>\n</code></pre></div>\n<p>I don't really understand what  <code>R →+* R</code> means (the + and *) , but if I understand that right, I first need to build some type of function which maps from sigma into the real numbers (for my case), so that function encodes my <code>1 2 3 4</code> ? Is that right?</p>",
        "id": 272198062,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1645056863
    },
    {
        "content": "<p>Also is it correct to say that sigma is acting like an index set/index type ? <a href=\"/user_uploads/3121/SH0wbTQbsKGiaC5gzPC6Tk_0/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/SH0wbTQbsKGiaC5gzPC6Tk_0/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/SH0wbTQbsKGiaC5gzPC6Tk_0/image.png\"></a></div>",
        "id": 272198124,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1645056920
    },
    {
        "content": "<p><code>P.eval 1 2 3 4</code> seems very optimistic to me</p>",
        "id": 272198296,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645057073
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"367659\">Callum Cassidy-Nolan</span> <a href=\"#narrow/stream/113489-new-members/topic/Basic.20Proving.20Questions/near/272198062\">said</a>:</p>\n<blockquote>\n<p>I don't really understand what  <code>R →+* R</code> means (the + and *) , but if I understand that right, I first need to build some type of function which maps from sigma into the real numbers (for my case), so that function encodes my <code>1 2 3 4</code> ? Is that right?</p>\n</blockquote>\n<p>Yes, that's <code>f</code></p>",
        "id": 272198366,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645057104
    },
    {
        "content": "<p>I think you could use <a href=\"https://leanprover-community.github.io/mathlib_docs/data/matrix/notation.html\">https://leanprover-community.github.io/mathlib_docs/data/matrix/notation.html</a> for this</p>",
        "id": 272198443,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645057163
    },
    {
        "content": "<p>Your <code>σ</code> is <code>fin 4</code></p>",
        "id": 272198558,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645057242
    },
    {
        "content": "<p>\"mv_polynomial.eval ![1, 2, 3, 4] P\" if you import finvec notation</p>",
        "id": 272206645,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1645064817
    }
]