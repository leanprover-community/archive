[
    {
        "content": "<p>Hello,</p>\n<p>Working on stating a theorem whose conclusion is of the form</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>dim</mi><mo>⁡</mo><mi>R</mi><mo>≤</mo><mi>dim</mi><mo>⁡</mo><mi>S</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\"> \\dim R \\leq \\dim S - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.136em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<p>where R and S are rings and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>dim</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\"> \\dim</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mop\">dim</span></span></span></span> is the krull dimension. </p>\n<p>I can write the krull dimension of the ring in terms of heights in a the preorder of primes as in KrullDimension.lean. However, there the type of the krull dimension is <code>WithTop (WithBot ℕ)</code>, and it doesn't seem to have subtraction defined, <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">WithTop</span> <span class=\"o\">(</span><span class=\"n\">WithBot</span> <span class=\"n\">ℕ</span><span class=\"o\">))</span>\n\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">WithTop</span> <span class=\"o\">(</span><span class=\"n\">WithBot</span> <span class=\"n\">ℤ</span><span class=\"o\">))</span>\n<span class=\"c1\">-- failed to synthesize instance</span>\n<span class=\"c1\">--  HSub (WithTop (WithBot ℕ)) (WithTop (WithBot ℤ)) ?m.2281</span>\n</code></pre></div>\n<p>I only care about the case when the dimension is actually a positive integer (but it's , but I don't quite know how to encode that into Lean's type system so it'll be convinced there's an instance of <code>HSub</code>. How can I get lean to realize that it's ok to subtract the dimension by 1? Perhaps some sort of coercion?</p>",
        "id": 376225471,
        "sender_full_name": "Jack J Garzella",
        "timestamp": 1689656760
    },
    {
        "content": "<p>Can you restate the result as <code>dim R + 1 ≤ dim S</code> to avoid needing it?</p>",
        "id": 376227311,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689657624
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> and I discussed this subtraction in a mathlib3 PR quite some time ago</p>",
        "id": 376227447,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689657683
    },
    {
        "content": "<p>The other option is to use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/order.pred\">docs3#order.pred</a></p>",
        "id": 376245740,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1689664186
    },
    {
        "content": "<p>That doesn't work, <code>⊤: WithTop X</code> has no sensible pred on types without <code>OrderTop</code></p>",
        "id": 376256940,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689667177
    },
    {
        "content": "<p>(the typeclass doesn't allow <code>pred ⊤ = ⊤</code>, right?)</p>",
        "id": 376257247,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689667241
    },
    {
        "content": "<p>What is the lemma supposed to assert when dim(S)=0? When dim(S)&lt;0? Are you sure that you want to prove the subtraction version of the lemma rather than the addition version? The statements are not logically equivalent (if one defines subtraction). Which is more appropriate in your situation? My instinct is that the addition version will be more appropriate</p>",
        "id": 376258233,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689667477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I never thought about using <code>+</code> instead of <code>-</code>, thank you so much! That ended up working. </p>\n<p>In fact, the statement is the following: if there exists an element which is not in a minimal prime of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>dim</mi><mo>⁡</mo><mi>R</mi><mo>+</mo><mn>1</mn><mo>≤</mo><mi>dim</mi><mo>⁡</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">\\dim R + 1 \\leq \\dim S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>. The hypothesis implies that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>dim</mi><mo>⁡</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">\\dim S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> is at least 1, so it says nothing if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>dim</mi><mo>⁡</mo><mi>S</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\dim S = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">dim_minus_1_of_quotient_element_non_minimal</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">Ideal</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">minimalPrimes</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∉</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"o\">(</span><span class=\"n\">dim</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"bp\">⧸</span> <span class=\"o\">(</span><span class=\"n\">Ideal.span</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"o\">})))</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">dim</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 376422954,
        "sender_full_name": "Jack J Garzella",
        "timestamp": 1689700668
    },
    {
        "content": "<p>Can someone help me understand why subtraction is bad in this situation? </p>\n<p>I've read that for natural numbers, addition is a much easier definition (it's just iterating successor) and subtraction uses induction or something. Is that what the problem is? Or does it have to do with <code>WithTop</code> and <code>WithBot</code>?</p>",
        "id": 376423426,
        "sender_full_name": "Jack J Garzella",
        "timestamp": 1689700768
    },
    {
        "content": "<p>Subtraction on a type takes two terms of that type and returns a term of that type. So what are you going to do if the type is the naturals and I ask you what 2-3 is? You have to give the wrong answer.</p>",
        "id": 376423795,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689700851
    },
    {
        "content": "<p>Hence there are far fewer lemmas about subtraction and it's generally more difficult to work with. So stick to addition if you can.</p>",
        "id": 376423882,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689700879
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"297832\">Jack J Garzella</span> has marked this topic as resolved.</p>",
        "id": 376530690,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689740475
    }
]