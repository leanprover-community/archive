[
    {
        "content": "<p>Is there a way to directly interact with the front end of Lean to get the intermediate output. For example, using Python or other tools? The purpose of doing so is to <strong>check for syntax errors and update goals when the proof reaches a certain step</strong>. This would be very helpful for research experiment. Considering of the VSCode plugin, this seems possible, but I'm not sure how to do it. </p>\n<p><a href=\"/user_uploads/3121/DtpyNxHlpdSFNfIb9WSm6zNQ/image.png\">vscode</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/DtpyNxHlpdSFNfIb9WSm6zNQ/image.png\" title=\"vscode\"><img src=\"/user_uploads/3121/DtpyNxHlpdSFNfIb9WSm6zNQ/image.png\"></a></div><p>Thanks in advance!!!</p>",
        "id": 346917952,
        "sender_full_name": "RexWang",
        "timestamp": 1680627242
    },
    {
        "content": "<p>It sounds a bit like you are looking for <a href=\"https://github.com/leanprover-community/lean-client-python\">https://github.com/leanprover-community/lean-client-python</a></p>",
        "id": 346919276,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1680627529
    },
    {
        "content": "<p>That Python client is just a light weight wrapper around the lean 3 language server which is how editors like vs code interact with Lean.  So anything you see in the editor is available in that client (or the server directly).  It unfortunately is sparse on examples or documentation, but it is probably a good way to start interfacing with Lean.  It can be a bit slow for some applications and frankly the Lean server has a lot of quirks.  Another approach is to more directly interact with Lean via metaprogramming.  It is more work at first, but could have good payoff.  It really depends on your application.</p>",
        "id": 346929758,
        "sender_full_name": "Jason Rute",
        "timestamp": 1680630091
    },
    {
        "content": "<p>Also this is actually a very common question.  You probably can find a lot of advice here on Zulip.</p>",
        "id": 346930539,
        "sender_full_name": "Jason Rute",
        "timestamp": 1680630299
    },
    {
        "content": "<p>Thanks for the suggestion! They are really helpful.</p>",
        "id": 347137743,
        "sender_full_name": "RexWang",
        "timestamp": 1680700099
    },
    {
        "content": "<p>Since you asked your question <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> released a Lean 4 repl tool <a href=\"https://github.com/leanprover-community/repl\">https://github.com/leanprover-community/repl</a> this might also be a good way to go (Lean 4 is the future after all, though there are still a few issues at this point depending on what you want to do)</p>",
        "id": 347159907,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1680704072
    }
]