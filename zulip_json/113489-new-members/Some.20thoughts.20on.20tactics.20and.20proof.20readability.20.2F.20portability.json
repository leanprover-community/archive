[
    {
        "content": "<p>Hi!</p>\n<p>As a newcomer to Lean I would like to share a thought I had (and which I suppose has already been discussed?).</p>\n<p>With Lean, using some tactic like <code>simp</code> (or <code>norm_num</code>, ...) I can prove a lemma directly:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">a_more_or_less_complex_lemma</span><span class=\"o\">:</span> <span class=\"bp\">...</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n</code></pre></div>\n<p>From the proof-writer point of view, this is very nice (if the tactic succeeds) because I can move move on to my other goals.</p>\n<p>From the proof-reader point of view, this is less nice because I might be interested to know the details of the proof of <code>a_more_or_less_complex_lemma</code>, especially if it's complex, and the way it is written doesn't make anything explicit.</p>\n<p>Also, if I want to take this proof and port it to another proof system, there is no guarantee that there will be a similar strategy able to solve that lemma.<br>\nThere even is no guarantee that this lemma will be portable from one version of Lean to another (well, there is no guarantee either if the steps are detailed but at least we have an idea what is going on).</p>\n<p>How should that concern be addressed?<br>\nAlso, when a tactic like <code>simp</code> in my example successfully proves <code>a_more_or_less_complex_lemma</code>, is there some easy way to turn this into an explicit proof? (the only way I found is to <code>#print a_more_or_less_complex_lemma</code> and see what it does but the presentation isn't really reader-friendly)</p>",
        "id": 402620430,
        "sender_full_name": "ElCondor",
        "timestamp": 1700200117
    },
    {
        "content": "<p>One thing you can do for a more-explicit proof is use <code>simp?</code>, which tells you exactly which lemmas <code>simp</code> used.</p>\n<p>The <code>simp</code> tactic doesn't generate a particularly readable proof.  It'd be neat if it could output a proof script using <code>conv</code> tactics and <code>rw</code>.</p>",
        "id": 402622724,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1700201369
    },
    {
        "content": "<p>Or even an explicit <code>calc</code> for when you really want a readable human like proof! (I dabbled in that direction once, but got stuck somewhere. Will maybe pick up the calcifier once I am more versed in metaprogramming and have some slack time)</p>",
        "id": 402626206,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1700203714
    }
]