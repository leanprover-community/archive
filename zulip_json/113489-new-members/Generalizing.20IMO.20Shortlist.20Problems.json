[
    {
        "content": "<p>Hello,</p>\n<p>I'm not exactly new to Lean but I've only started migrating to Lean 4.</p>\n<p>Î™'m interested in formalizing IMO Shortlist problems starting from 2006 in Lean 4. I'm also generalizing some of the problems; for example, IMO 2017 A6 (P2) can be solved over any field, not just the reals. Previously, I did these in Lean 3 (<a href=\"https://github.com/mortarsanjaya/imo-A-and-N\">https://github.com/mortarsanjaya/imo-A-and-N</a>; it's archived now) until I decided to actually switch to Lean 4. I'm currently in the process of porting the formalized files in Lean 3. (Some of the files are unfortunately a mess due to my greediness...)</p>\n<p>I'm currently hosting the project (<a href=\"https://github.com/mortarsanjaya/IMOSLLean4\">https://github.com/mortarsanjaya/IMOSLLean4</a>). However, I'm not familiar with GitHub setup; I might need some help for this. I also want to know if anyone has similar interests. Thank you very much.</p>\n<p>(Should I move this thread somewhere as well?)</p>",
        "id": 402346079,
        "sender_full_name": "Gian Cordana Sanjaya",
        "timestamp": 1700091357
    },
    {
        "content": "<p>Wow, that's an impressive collection -- 100 IMO shortlist problems with solutions! (In Lean 3)</p>\n<p>I have a similar but smaller repo here: <a href=\"https://github.com/dwrensha/compfiles\">https://github.com/dwrensha/compfiles</a></p>",
        "id": 402348515,
        "sender_full_name": "David Renshaw",
        "timestamp": 1700092879
    },
    {
        "content": "<p>It makes me wonder how I would fit shortlist problems into my naming scheme.</p>",
        "id": 402350012,
        "sender_full_name": "David Renshaw",
        "timestamp": 1700093617
    },
    {
        "content": "<p>My opinion is that we should join forces and host a combined repo under <a href=\"https://github.com/leanprover-community\">https://github.com/leanprover-community</a>  (though I don't have the power to create such a thing).</p>",
        "id": 402350705,
        "sender_full_name": "David Renshaw",
        "timestamp": 1700093953
    },
    {
        "content": "<p>Thanks for the compliment <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> Unfortunately not all of them are exactly the same problem or a straight-up generalization, but I made sure at least that the statements are equivalent.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"243791\">David Renshaw</span> <a href=\"#narrow/stream/113489-new-members/topic/Generalizing.20IMO.20Shortlist.20Problems/near/402350705\">said</a>:</p>\n<blockquote>\n<p>My opinion is that we should join forces and host a combined repo under <a href=\"https://github.com/leanprover-community\">https://github.com/leanprover-community</a>  (though I don't have the power to create such a thing).</p>\n</blockquote>\n<p>If there are more people, then that will be very good. Note that my aim is mostly just having these problems formalized and generalize them, so that alone might have been a different goal from the other projects.</p>",
        "id": 402351068,
        "sender_full_name": "Gian Cordana Sanjaya",
        "timestamp": 1700094131
    },
    {
        "content": "<p>Hosting IMO formalizations was part of the targets of <a href=\"https://github.com/leanprover-community/mathzoo\">https://github.com/leanprover-community/mathzoo</a>. But the maintainer of that project lost interest, and it was not even ported to Lean 4.</p>",
        "id": 402351192,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700094217
    },
    {
        "content": "<p>Porting wouldn't make much sense for mathzoo; there was not even any promise that all the files built in the same version of Lean 3!</p>",
        "id": 402361279,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700098825
    },
    {
        "content": "<p>I find olympiad formalizations that aim to be up to the standards of the mathlib archive (whether or not physically located there) much more interesting than the \"anything goes\" approach of mathzoo. So I'd strongly encourage, in particular, looking carefully for missing mathlib API when doing such formalizations, and adding that API to mathlib (in appropriately general form) as you go along. For algebra and number theory problems, that probably mostly takes the form of small lemmas rather than bigger pieces of theory.</p>\n<p>I'd also encourage contributing formalizations of IMO problems to the mathlib archive, even if shortlist problems that aren't IMO problems go somewhere else (I'd be fine with having shortlist problems in the mathlib archive as well, but maybe even if a complete set of all past IMO problems would be a reasonable size to go there, a complete set of shortlist problems would be too big). Conceptually, I think of \"mathlib archive\" as \"any known mathematics not expected to be reused in proofs of other results, formalized to the standards of the mathlib archive with anything reusable going in mathlib proper, and kept up to date with current mathlib\", not necessarily restricted to a single repository as long as there's some way to find everything that's conceptually part of the archive and it's genuinely kept up to date.</p>",
        "id": 402367480,
        "sender_full_name": "Joseph Myers",
        "timestamp": 1700102129
    },
    {
        "content": "<p>You're totally right about the missing APIs. I \"worked in hiding\" while formalizing those problems in Lean 3; I should look over them again and discuss which ones should be put to mathlib4.</p>\n<p>Speaking of which, some of the shortlist problems that I've done are actual IMO problems; for example, IMO 2017 P2 (A6). In fact, my initial motivation for this project was storing any progress I have for a special case of that problem (f : F -&gt; F, where F is a field with char(F) = 2; the char(F) \\neq 2 case already has a known solution). I can discuss about modifying those and putting them into mathlib4's archive.</p>",
        "id": 402381993,
        "sender_full_name": "Gian Cordana Sanjaya",
        "timestamp": 1700108784
    },
    {
        "content": "<p>There is clearly an interest in lean formalisation of puzzles like this. Does anyone know who runs <a href=\"https://artofproblemsolving.com/\">AOPS</a>? I wonder if they'd team up with us on this? I know this is a different question to where this work goes and whether it should be used as a way to make mathlib better or an end in itself, which are distinct and complicated questions, but getting AOPS to start linking to lean formalisations would do a lot for visibility of this kind of work.</p>",
        "id": 402423807,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700127111
    }
]