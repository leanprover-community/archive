[
    {
        "content": "<p>Hi, everyone!<br>\nI am now doing a project deal with the Valuation Problem. But now I have trouble in using the property of exp_fun to prove one inequality. My problem in the last two  <code>sorry</code> in my code. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Algebra.ValuedField</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Normed.Field.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Logic.Equiv.Defs</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Pow.Real</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.NNReal</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Valuation.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.NumberTheory.Padics.PadicNorm</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Order.Group.Abs</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Algebra.ValuedField</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Valuation.Integers</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Log.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Set.Image</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.NumberTheory.Padics.PadicNumbers</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Rat.NNRat</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Valuation.ValuationSubring</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Order.Basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Classical</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">300000</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Valuation.IsEquiv</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Filter</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Valuation.isEquiv_iff_val_gt_one</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedCommGroupWithZero</span> <span class=\"bp\">Γ₀</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">LinearOrderedCommGroupWithZero</span> <span class=\"bp\">Γ'₀</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Valuation</span> <span class=\"n\">K</span> <span class=\"bp\">Γ₀</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">Valuation</span> <span class=\"n\">K</span> <span class=\"bp\">Γ'₀</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">v.IsEquiv</span> <span class=\"n\">v'</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">},</span> <span class=\"n\">v</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span> <span class=\"bp\">↔</span> <span class=\"n\">v'</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">RatSeqAboveTendsto</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Tendsto</span> <span class=\"n\">a</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">StrictAnti</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Filter.Tendsto</span> <span class=\"n\">a</span> <span class=\"n\">Filter.atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">exists_seq_strictAnti_tendsto</span> <span class=\"n\">b</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">h₂</span><span class=\"o\">⟩</span>\n    <span class=\"n\">use</span> <span class=\"n\">a</span>\n  <span class=\"n\">choose</span> <span class=\"n\">a</span> <span class=\"n\">hab</span> <span class=\"n\">ha</span> <span class=\"n\">using</span> <span class=\"n\">this</span>\n  <span class=\"n\">choose</span> <span class=\"n\">r</span> <span class=\"n\">hr</span> <span class=\"n\">hr'</span> <span class=\"n\">using</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"n\">exists_rat_btwn</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">tendsto_of_tendsto_of_tendsto_of_le_of_le</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"n\">ha</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">le</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">hr'</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">le</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">RatSeqBelowTendsto</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&gt;</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&gt;</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Tendsto</span> <span class=\"n\">a</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">StrictMono</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Filter.Tendsto</span> <span class=\"n\">a</span> <span class=\"n\">Filter.atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">exists_seq_strictMono_tendsto</span> <span class=\"n\">b</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">h₂</span><span class=\"o\">⟩</span>\n    <span class=\"n\">use</span> <span class=\"n\">a</span>\n  <span class=\"n\">choose</span> <span class=\"n\">a</span> <span class=\"n\">hab</span> <span class=\"n\">ha</span> <span class=\"n\">using</span> <span class=\"n\">this</span>\n  <span class=\"n\">choose</span> <span class=\"n\">r</span> <span class=\"n\">hr</span> <span class=\"n\">hr'</span> <span class=\"n\">using</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"n\">exists_rat_btwn</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">hr'</span><span class=\"o\">,</span> <span class=\"n\">tendsto_of_tendsto_of_tendsto_of_le_of_le</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">ha</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">le</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">hr'</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">le</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Valuation.div_le_one</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_3</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Valuation</span> <span class=\"n\">K</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">):</span> <span class=\"n\">v</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxy₁</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">v</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_div₀</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">map_eq_zero</span><span class=\"o\">]</span>\n    <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">Iff.mpr</span> <span class=\"o\">(</span><span class=\"n\">ne_zero_iff</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"n\">h₀</span>\n    <span class=\"n\">exact</span> <span class=\"n\">div_mul_cancel</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">this</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">hxy₁</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">this'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">Valuation.ne_zero_iff</span> <span class=\"n\">v</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">h₀</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Iff.mpr</span> <span class=\"n\">zero_lt_iff</span> <span class=\"n\">this</span>\n  <span class=\"n\">exact</span> <span class=\"n\">mul_lt_of_lt_one_left</span> <span class=\"n\">this'</span> <span class=\"n\">h</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Valuation.div_ge_one</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_3</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Valuation</span> <span class=\"n\">K</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">):</span> <span class=\"n\">v</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxy₁</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">v</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_div₀</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">map_eq_zero</span><span class=\"o\">]</span>\n    <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">Iff.mpr</span> <span class=\"o\">(</span><span class=\"n\">ne_zero_iff</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"n\">h₀</span>\n    <span class=\"n\">exact</span> <span class=\"n\">div_mul_cancel</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">this</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">hxy₁</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">this'</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"n\">y</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">Valuation.ne_zero_iff</span> <span class=\"n\">v</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">h₀</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Iff.mpr</span> <span class=\"n\">zero_lt_iff</span> <span class=\"n\">this</span>\n  <span class=\"n\">exact</span> <span class=\"n\">lt_mul_left</span> <span class=\"n\">this'</span> <span class=\"n\">h</span>\n\n<span class=\"c1\">-- version problem</span>\n<span class=\"kn\">open</span> <span class=\"n\">Real</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_log_eq_log_iff</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hz</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">log</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">log</span> <span class=\"n\">z</span> <span class=\"bp\">↔</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">↦</span> <span class=\"n\">log_injOn_pos</span> <span class=\"o\">(</span><span class=\"n\">rpow_pos_of_pos</span> <span class=\"n\">hx</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">hz</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">log_rpow</span> <span class=\"n\">hx</span> <span class=\"n\">_</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">trans</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"kd\">by</span> <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">log_rpow</span> <span class=\"n\">hx</span><span class=\"o\">]⟩</span>\n<span class=\"c1\">-- version problem</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">exp_eq</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">):</span>\n   <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"o\">((</span><span class=\"n\">Real.log</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">))</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"n\">Real.log</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">Real.log</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"k\">have</span> <span class=\"n\">this'</span> <span class=\"o\">:</span> <span class=\"n\">Real.log</span> <span class=\"n\">b</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">Real.log_ne_zero_of_pos_of_ne_one</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Iff.mp</span> <span class=\"o\">(</span><span class=\"n\">div_eq_iff</span> <span class=\"n\">this'</span><span class=\"o\">)</span> <span class=\"n\">rfl</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Eq.symm</span> <span class=\"o\">((</span><span class=\"n\">mul_log_eq_log_iff</span> <span class=\"n\">h2</span> <span class=\"n\">h1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"o\">(</span><span class=\"n\">Eq.symm</span> <span class=\"n\">this</span><span class=\"o\">))</span>\n\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">ExistSeqAbove</span> <span class=\"o\">(</span><span class=\"n\">v₁</span><span class=\"o\">:</span> <span class=\"n\">Valuation</span> <span class=\"n\">K</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">v₂</span> <span class=\"o\">:</span> <span class=\"n\">Valuation</span> <span class=\"n\">K</span> <span class=\"n\">NNReal</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span>  <span class=\"n\">v₁</span> <span class=\"n\">y</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Valuation.IsEquiv</span> <span class=\"n\">v₁</span> <span class=\"n\">v₂</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx₁</span> <span class=\"o\">:</span> <span class=\"n\">v₁</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">v₁</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">v₂</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">v₂</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">sequabove</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">k</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">RatSeqAboveTendsto</span> <span class=\"n\">α</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">sequabove</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">ha₀</span><span class=\"o\">,</span> <span class=\"n\">ha₁</span><span class=\"o\">⟩</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxa</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">v₁</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"o\">((</span><span class=\"n\">v₁</span> <span class=\"n\">y</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">intro</span> <span class=\"n\">i</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hx₁</span><span class=\"o\">]</span>\n    <span class=\"n\">specialize</span> <span class=\"bp\">@</span><span class=\"n\">ha₀</span> <span class=\"n\">i</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Real.rpow_lt_rpow_of_exponent_lt</span> <span class=\"n\">hy</span> <span class=\"n\">ha₀</span>\n  <span class=\"k\">have</span> <span class=\"n\">hv₁</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">v₁</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"o\">((</span><span class=\"n\">v₁</span> <span class=\"n\">y</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span> <span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">intro</span> <span class=\"n\">i</span>\n    <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span>  <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"n\">Rat.num_div_den</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n    <span class=\"k\">have</span> <span class=\"n\">this'</span> <span class=\"o\">:</span> <span class=\"o\">(((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"n\">Rat.cast_div</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span><span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">))]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">congrArg</span> <span class=\"n\">Rat.cast</span> <span class=\"n\">this</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">this'</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hxa</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxa₂</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">v₁</span> <span class=\"o\">((</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">hv₂</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">v₂</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"o\">((</span><span class=\"n\">v₂</span> <span class=\"n\">y</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span><span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">hxa₃</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">v₂</span> <span class=\"o\">((</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n      <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">((</span><span class=\"n\">Valuation.isEquiv_iff_val_lt_one</span> <span class=\"n\">v₁</span> <span class=\"n\">v₂</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"o\">(</span><span class=\"n\">hxa₂</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n    <span class=\"k\">have</span> <span class=\"n\">hxa₄</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">v₂</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">v₂</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">intro</span> <span class=\"n\">i</span>\n      <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Valuation.div_le_one</span> <span class=\"n\">v₂</span> <span class=\"n\">this</span> <span class=\"o\">(</span><span class=\"n\">hxa₃</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n    <span class=\"k\">have</span> <span class=\"n\">hxa₅</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">v₂</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">v₂</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n    <span class=\"n\">intro</span> <span class=\"n\">i</span>\n    <span class=\"n\">specialize</span> <span class=\"bp\">@</span><span class=\"n\">hxa₅</span> <span class=\"n\">i</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">hv₂'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">v₂</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"o\">((</span><span class=\"n\">v₂</span> <span class=\"n\">y</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">intro</span> <span class=\"n\">i</span>\n    <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span>  <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"n\">Rat.num_div_den</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n    <span class=\"k\">have</span> <span class=\"n\">this'</span> <span class=\"o\">:</span> <span class=\"o\">(((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"n\">Rat.cast_div</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">den</span><span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">))]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">congrArg</span> <span class=\"n\">Rat.cast</span> <span class=\"n\">this</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">this'</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hv₂</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n  <span class=\"c1\">-- exp_continuous</span>\n  <span class=\"k\">have</span> <span class=\"n\">hv₂''</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">v₂</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">≤</span>  <span class=\"o\">((</span><span class=\"n\">v₂</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">hv₂'</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n  <span class=\"k\">let</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">↦</span> <span class=\"o\">((</span><span class=\"n\">v₂</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n  <span class=\"k\">let</span> <span class=\"n\">f'</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">↦</span> <span class=\"o\">((</span><span class=\"n\">v₂</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">x</span>\n  <span class=\"k\">have</span> <span class=\"n\">f'ContinuousAt</span> <span class=\"o\">:</span> <span class=\"n\">ContinuousAt</span> <span class=\"n\">f'</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">lim</span> <span class=\"o\">:</span> <span class=\"n\">Filter.Tendsto</span> <span class=\"n\">f</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"o\">(((</span><span class=\"n\">v₂</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n  <span class=\"n\">exact</span> <span class=\"n\">ge_of_tendsto'</span> <span class=\"n\">lim</span> <span class=\"n\">hv₂''</span>\n</code></pre></div>\n<p>Maybe this working example will has mistake because my lean is not the latest. And I use one of the theorem in the latest lean version. But I mention it in my code <code>version problem</code>. If there is wrong in there, you can just delete that part. I am sorry about that. <br>\nAnd <code>exp_continuous</code> is what my problem mainly in. I am not sure if there is another way to prove the goal in <code>-- exp_continuous</code>.<br>\nThanks in advance!</p>",
        "id": 388031077,
        "sender_full_name": "Wenrong Zou",
        "timestamp": 1693370931
    }
]