[
    {
        "content": "<p>Hi, I have just started to try out Lean and Mathlib, and I'm already hitting a wall.<br>\nI am following the instructions on the <a href=\"https://wiki.archlinux.org/title/Lean_Theorem_Prover\">Arch page for Lean</a>, so I did:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">aur.archlinux.org</span><span class=\"bp\">/</span><span class=\"n\">elan</span><span class=\"bp\">-</span><span class=\"n\">lean.git</span>\n<span class=\"n\">cd</span> <span class=\"n\">elan</span><span class=\"bp\">-</span><span class=\"n\">git</span>\n<span class=\"n\">makepkg</span> <span class=\"bp\">-</span><span class=\"n\">is</span>\n\n<span class=\"n\">elan</span> <span class=\"n\">toolchain</span> <span class=\"n\">install</span> <span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">07</span><span class=\"bp\">-</span><span class=\"mi\">01</span>\n<span class=\"n\">elan</span> <span class=\"n\">default</span> <span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">07</span><span class=\"bp\">-</span><span class=\"mi\">01</span>\n\n<span class=\"n\">cd</span>\n\n<span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">elan</span> <span class=\"n\">which</span> <span class=\"n\">lake</span><span class=\"o\">)</span> <span class=\"n\">new</span> <span class=\"n\">leanToyProject1</span> <span class=\"n\">math</span>\n<span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">elan</span> <span class=\"n\">which</span> <span class=\"n\">lake</span><span class=\"o\">)</span> <span class=\"n\">update</span>\n<span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">elan</span> <span class=\"n\">which</span> <span class=\"n\">lake</span><span class=\"o\">)</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n</code></pre></div>\n<p>Then, in the file <code>leanToyProject1.lean</code>, I try out adding, at the top, the line:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">group_theory.perm.basic</span>\n</code></pre></div>\n<p>But it doesn't work at all, because then when I execute:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">elan</span> <span class=\"n\">which</span> <span class=\"n\">lean</span><span class=\"o\">)</span> <span class=\"n\">leanToyProject1.lean</span>\n</code></pre></div>\n<p>I get the error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanToyProject1.lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">group_theory'</span>\n</code></pre></div>\n<p>I have no clue what is going wrong... any hint welcome!!<br>\nCheers</p>",
        "id": 371883833,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688366100
    },
    {
        "content": "<p>that's a lean 3 import</p>",
        "id": 371884692,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688366335
    },
    {
        "content": "<p>try <code>import Mathlib.GroupTheory.Perm.Basic</code></p>",
        "id": 371884757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688366353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Thanks for the suggestion!<br>\nHowever I still get an error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanToyProject1.lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Mathlib'</span>\n</code></pre></div>",
        "id": 371885020,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688366415
    },
    {
        "content": "<p>Your <code>$(elan which lean) leanToyProject1.lean</code> invocation is also unusual (did the instructions say to do that <code>elan which</code> dance? <code>lean</code> alone should suffice). Try calling <code>lake build</code> instead</p>",
        "id": 371885252,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688366496
    },
    {
        "content": "<p><code>lake env lean leanToyProject1.lean</code> might also work to compile just one file, but <code>lake build</code> or <code>lake build My.Module</code> is the usual way to do it</p>",
        "id": 371885486,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688366561
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> So, with just <code>lake build</code> it did not work, as it said <code>lake command not found</code> but with:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">elan</span> <span class=\"n\">which</span> <span class=\"n\">lake</span><span class=\"o\">)</span> <span class=\"n\">build</span>\n</code></pre></div>\n<p>It worked!</p>",
        "id": 371885630,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688366604
    },
    {
        "content": "<p>maybe you need to restart your terminal? Or <code>source</code> something suggested in the elan init script</p>",
        "id": 371885761,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688366644
    },
    {
        "content": "<p><code>elan</code> is supposed to symlink copies of itself to <code>lake</code> and <code>lean</code> so that it is effectively equivalent to doing <code>$(elan which lake) foo</code></p>",
        "id": 371885860,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688366686
    },
    {
        "content": "<p>It's also possible that the Arch wiki just tried to provide the least possible intrusive way to install Lean with elan, and that as a consequence this little dance is needed...<br>\nFor the short term I'll try with aliases, then I'll add something to my .bashrc to take the paths into account.</p>",
        "id": 371886027,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688366746
    },
    {
        "content": "<p>where are the instructions you used?</p>",
        "id": 371886182,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688366782
    },
    {
        "content": "<p>It's here: <a href=\"https://wiki.archlinux.org/title/Lean_Theorem_Prover\">https://wiki.archlinux.org/title/Lean_Theorem_Prover</a></p>",
        "id": 371886223,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688366801
    },
    {
        "content": "<p>Oh, we don't maintain that page at all, and I have no idea about the quality of the suggestions. <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> do you know anything about elan installation on arch linux?</p>",
        "id": 371886537,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688366894
    },
    {
        "content": "<p>I can't find the package maintainer @xuanruiqi or @IanJauslin who wrote the wiki page on this zulip, and I don't recognize the names</p>",
        "id": 371887133,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688367047
    },
    {
        "content": "<p>They should update their PKGBUILD to symlink <code>lake</code> as well <a href=\"https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=elan-lean#n23\">https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=elan-lean#n23</a></p>",
        "id": 371887160,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1688367059
    },
    {
        "content": "<p>wait, so that would suggest that using <code>lean</code> at least should work, can you confirm <span class=\"user-mention\" data-user-id=\"629397\">@Mapleleaf</span> ?</p>",
        "id": 371887546,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688367154
    },
    {
        "content": "<p>Thanks a lot, let me try that!</p>",
        "id": 371887613,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688367178
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Unable.20to.20import.20subpackages.20of.20Mathlib/near/371887546\">said</a>:</p>\n<blockquote>\n<p>wait, so that would suggest that using <code>lean</code> at least should work, can you confirm <span class=\"user-mention silent\" data-user-id=\"629397\">Mapleleaf</span> ?</p>\n</blockquote>\n<p>Nope, unfortunately if it's just with <code>lean</code> then:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lean</span> <span class=\"n\">leanToyProject1.lean</span>\n<span class=\"n\">leanToyProject1.lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Mathlib'</span>\n</code></pre></div>",
        "id": 371888404,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688367388
    },
    {
        "content": "<p>okay but at least it runs (it doesn't say <code>lean command not found</code> like it does for <code>lake</code>)</p>",
        "id": 371888530,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688367426
    },
    {
        "content": "<p>so I think that is positive evidence for sebastian's solution</p>",
        "id": 371888602,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688367448
    },
    {
        "content": "<p>After fixing the PKGFILE as suggested by <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> , I can also run:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">env</span> <span class=\"n\">lean</span> <span class=\"n\">leanToyProject1.lean</span>\n</code></pre></div>\n<p>and it works too!</p>",
        "id": 371888843,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688367513
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"629397\">Mapleleaf</span> has marked this topic as resolved.</p>",
        "id": 371889070,
        "sender_full_name": "Notification Bot",
        "timestamp": 1688367593
    },
    {
        "content": "<p>I left a comment on the AUR page for the package <code>elan-lean</code>.</p>",
        "id": 371891410,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688368203
    },
    {
        "content": "<p>You can brace for a surge in popularity thanks to that article in the New York Times, by the way <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 371891682,
        "sender_full_name": "Mapleleaf",
        "timestamp": 1688368280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Unable.20to.20import.20subpackages.20of.20Mathlib/near/371887133\">said</a>:</p>\n<blockquote>\n<p>I can't find the package maintainer @xuanruiqi or @IanJauslin who wrote the wiki page on this zulip, and I don't recognize the names</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"557226\">@Ian Jauslin</span> is here, at least.</p>",
        "id": 371911548,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1688372792
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"629397\">Mapleleaf</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Unable.20to.20import.20subpackages.20of.20Mathlib/near/371886027\">said</a>:</p>\n<blockquote>\n<p>It's also possible that the Arch wiki just tried to provide the least possible intrusive way to install Lean with elan, and that as a consequence this little dance is needed...<br>\nFor the short term I'll try with aliases, then I'll add something to my .bashrc to take the paths into account.</p>\n</blockquote>\n<p>My main motivation for writing things like this is to have something that works with the current version of the package on the AUR. The better solution is clearly the one suggested by <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>, but it doesn't seem right to have an instruction in the archwiki along the lines of \"change the PKGBUILD to [...]\" (there are  also many ways to work around using <code>$(elan which lake)</code> in standard linux ways, like using an alias, creating a symlink yourself, or a script, etc... These are not documented in the archwiki page because the best way of doing things will depend on your setup.)</p>",
        "id": 372181851,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1688447124
    }
]