[
    {
        "content": "<p>Moin. </p>\n<p>I just recently stumbled across mathlib, lean4 and such through a bunch of toots from Terrence Tao, and found the idea quite fascinating. I've been slogging throrgh a few tutorials over the last month or so, and with some experience in programming, it's not that much rougher than math exercises in uni. It's actually more of a fun puzzle than anything.</p>\n<p>I've been considering contributing. I've been tutoring back in uni in some analysis courses, some algebra courses, some categorizations, and I have a bunch of experience as a sysadmin and sre (if you're looking for that, in the off-shoot).</p>\n<p>I've been kinda looking at infinite series, limits of these, convergence, divergence, altenating divergence, convergence tests. I'm just a bit intimidated, because there is a whole bunch of things called convergence in mathlib, but I'm not sure if it's that convergence of infinite series? I'm not sure if the existing convergences are the whole \"for all epsilon, there is an n, such that whatever &lt; espilon\" and such. But I'm no mathematician either. </p>\n<p>In short, do you have advice there? Would that be a good learning project to pick up upon?</p>",
        "id": 399792544,
        "sender_full_name": "Harald Kr√§mer",
        "timestamp": 1698868348
    },
    {
        "content": "<p>We have explanations about the relation between convergence in Mathlib and more elementary notions in the topology chapter of <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">#mil</a>.</p>",
        "id": 399792947,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698868475
    },
    {
        "content": "<p>More specifically about series, there are two main notions. The notion of summable families make sense for any family of elements in any topological group, and the entry point is <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Algebra/InfiniteSum/Basic.html\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Algebra/InfiniteSum/Basic.html</a>. But this is not what you seem to have in mind where the order of summation is important. Of course you can state that a series converges in the sense that the sequence of partial sums converges since we have the definition of convergence of sequences and the definition of partial sums. But we don't have a definition combining those. You can find some convergence criterion around <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Antitone.tendsto_alternating_series_of_tendsto_zero#doc\">docs#Antitone.tendsto_alternating_series_of_tendsto_zero</a> for instance.</p>",
        "id": 399794192,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698868775
    },
    {
        "content": "<p>Does it make sense?</p>",
        "id": 399794221,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698868781
    },
    {
        "content": "<p>It does make sense. I have been looking thorugh mathlib, and I was wondering if the topology-based approach was about 2-3 levels of generelization beyond what I know :)</p>",
        "id": 399795643,
        "sender_full_name": "Harald Kr√§mer",
        "timestamp": 1698869070
    },
    {
        "content": "<p>For instance you can decipher </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span>  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñù</span><span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Antitone.tendsto_alternating_series_of_tendsto_zero</span> <span class=\"o\">(</span><span class=\"n\">hfa</span> <span class=\"o\">:</span> <span class=\"n\">Antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hf0</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"n\">f</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"bp\">‚àÉ</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">‚Ü¶</span> <span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">l</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>to: We are in a context where <code>f</code> denotes a sequence of real numbers. Assume that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is non-increasing and goes to zero at infinity. Then there exists <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> such that the series <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>‚àë</mo><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mo>‚àí</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>n</mi></msup><msub><mi>f</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sum_n (-1)^nf_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">‚àë</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0017em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">‚àí</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> converges to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span>.</p>",
        "id": 399795838,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698869122
    },
    {
        "content": "<p>But you can see the statement does not use the word series, it directly speaks of convergence of the sum up to a fixed natural number.</p>",
        "id": 399795946,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698869169
    },
    {
        "content": "<p>Specifically <code>‚àë i in range (n + 1), (-1) ^ i * f i</code> means <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>‚àë</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mo stretchy=\"false\">(</mo><mo>‚àí</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>i</mi></msup><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=0}^n (-1)^if_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1244em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">‚àë</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">‚àí</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 399796002,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698869205
    },
    {
        "content": "<p>yes. which, worrries me in two ways: This wouldn't tell us anything about the limit of this series, but at the same time, I am not comfortable with the constructs involved to make a real statement about this series. Let alone, write a formal proof about this.</p>",
        "id": 399796278,
        "sender_full_name": "Harald Kr√§mer",
        "timestamp": 1698869342
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"663826\">Harald Kr√§mer</span> <a href=\"#narrow/stream/113489-new-members/topic/Contribution.20possibilities/near/399792544\">said</a>:</p>\n<blockquote>\n<p>In short, do you have advice there? Would that be a good learning project to pick up upon?</p>\n</blockquote>\n<p>Now let me answer your question. I think it would be nice to have more of those elementary convergence criteria. You can see from <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">https://leanprover-community.github.io/undergrad_todo.html</a> that some elementary stuff seems to be missing (in the Single Variable Real Analysis section of that page).</p>",
        "id": 399796337,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698869390
    },
    {
        "content": "<p>In this specific example there is nothing you can tell about the limit if you don't know more about <code>f</code>.</p>",
        "id": 399796483,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698869448
    },
    {
        "content": "<p>That's more what I was thinking about. I'd be fine punching in some of the course things I have here, and then we can see how to generalize it.</p>",
        "id": 399797109,
        "sender_full_name": "Harald Kr√§mer",
        "timestamp": 1698869722
    },
    {
        "content": "<p>If you decide to start of something in particular you should tell us so that we can double-check it is not yet there (sometimes the undergrad TODO webpage is outdated).</p>",
        "id": 399797584,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698869941
    },
    {
        "content": "<p>I will. I'll have to take a look at the mathlib context you provided first, though. than you for you time :)</p>",
        "id": 399797737,
        "sender_full_name": "Harald Kr√§mer",
        "timestamp": 1698870010
    }
]