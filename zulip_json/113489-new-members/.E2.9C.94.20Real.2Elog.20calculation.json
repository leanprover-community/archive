[
    {
        "content": "<p>Hi, Everyone!<br>\nI have trouble in proving this exp equation. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Pow.Real</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">log_eq</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">):</span>\n  <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"o\">((</span><span class=\"n\">Real.log</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">))</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>It seems an easy question in math. But I don't know how to deal with this question in lean. <br>\nThanks in advance!</p>",
        "id": 387819562,
        "sender_full_name": "Wenrong Zou",
        "timestamp": 1693292310
    },
    {
        "content": "<p>I would start on this problem by doing the obvious first step:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Pow.Real</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">log_eq</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"o\">((</span><span class=\"n\">Real.log</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"bp\">·</span> <span class=\"gr\">sorry</span>\n  <span class=\"bp\">·</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>then asking for help:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Pow.Real</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">0</span> <span class=\"k\">in</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">log_eq</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"o\">((</span><span class=\"n\">Real.log</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"bp\">·</span> <span class=\"gr\">sorry</span>\n  <span class=\"bp\">·</span> <span class=\"n\">apply</span><span class=\"bp\">?</span>\n</code></pre></div>\n<p>looking at the results and seeing that </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">Real.mul_log_eq_log_iff</span> <span class=\"c1\">-- Real.mul_log_eq_log_iff {x y z : ℝ} (hx : 0 &lt; x) (hz : 0 &lt; z) : y * Real.log x = Real.log z ↔ x ^ y = z</span>\n</code></pre></div>\n<p>seems highly relevant.</p>",
        "id": 387820896,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693292924
    },
    {
        "content": "<p>Do you want to see if you can make progress from there? Feel free to ask again.</p>",
        "id": 387821032,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693292994
    },
    {
        "content": "<p>Also, is the statement actually true if <code>b = 1</code>?</p>",
        "id": 387821604,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1693293278
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">log_eq</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">},</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"o\">((</span><span class=\"n\">Real.log</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">b</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n    <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">log_eq</span> <span class=\"n\">zero_lt_two</span> <span class=\"n\">zero_lt_one</span>  <span class=\"c1\">-- set `a = 2` and `b = 1` in `log_eq`</span>\n  <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n</code></pre></div>",
        "id": 387822196,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1693293584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/Real.2Elog.20calculation/near/387821604\">发言道</a>：</p>\n<blockquote>\n<p>Also, is the statement actually true if <code>b = 1</code>?</p>\n</blockquote>\n<p>Oh, it is not true for <code>b = 1</code>. This question is one part of my proving. In the other part of my question, it can be prove that <code>b \\neq  0</code>. Thanks for your remind!</p>",
        "id": 387823101,
        "sender_full_name": "Wenrong Zou",
        "timestamp": 1693293986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113489-new-members/topic/Real.2Elog.20calculation/near/387821032\">发言道</a>：</p>\n<blockquote>\n<p>Do you want to see if you can make progress from there? Feel free to ask again.</p>\n</blockquote>\n<p>Thank you for you help. I will try to use <code>Real.mul_log_eq_log_iff</code>. This is the theorem I want. Thank you very much!</p>",
        "id": 387823347,
        "sender_full_name": "Wenrong Zou",
        "timestamp": 1693294087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"641254\">WenrongZou</span> has marked this topic as resolved.</p>",
        "id": 387839123,
        "sender_full_name": "Notification Bot",
        "timestamp": 1693300359
    }
]