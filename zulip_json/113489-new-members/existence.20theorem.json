[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">EReal</span> <span class=\"n\">Function</span> <span class=\"n\">Topology</span> <span class=\"n\">Filter</span> <span class=\"n\">Set</span> <span class=\"n\">TopologicalSpace</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedRing</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DenselyOrdered</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SequentialSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">FirstCountableTopology</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SequentialSpace</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DenselyOrdered</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">OrderTopology</span> <span class=\"n\">EReal</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">SequentialSpace</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">E</span> <span class=\"bp\">×</span> <span class=\"n\">EReal</span><span class=\"o\">]</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">OrderedAddCommMonoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedAddCommMonoid</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"bp\">𝕜</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"bp\">𝕜</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Closeds</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">EReal</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">EReal</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"n\">b</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"n\">b</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"n\">b</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">EReal</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">EReal</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"c\">/-</span><span class=\"cm\">properfun-/</span>\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">exist_fun_lt_top</span>  <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">⊤</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">forall_fun_gt_top</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">⊥</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">properfun</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">exist_fun_lt_top</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">forall_fun_gt_top</span> <span class=\"n\">s</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">isSup</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">upperBounds</span> <span class=\"n\">s</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">upperBounds</span> <span class=\"n\">s</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">closedfun-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">dom</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">⊤</span><span class=\"o\">}</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">level_set</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">EReal</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">epigraph</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">E</span> <span class=\"bp\">×</span> <span class=\"n\">EReal</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">×</span> <span class=\"n\">EReal</span> <span class=\"bp\">|</span> <span class=\"n\">p.1</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"n\">p.1</span> <span class=\"bp\">≤</span> <span class=\"n\">p.2</span><span class=\"o\">}</span>\n<span class=\"c1\">-- {p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">closedfun</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">IsClosed</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">epigraph</span> <span class=\"n\">s</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">strong_quasi</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Convex</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">x</span><span class=\"o\">⦄,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">y</span><span class=\"o\">⦄,</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">𝕜</span><span class=\"o\">⦄,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n    <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">•</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">•</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.Nonempty</span> <span class=\"bp\">∧</span> <span class=\"n\">Convex</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">IsCompact</span> <span class=\"n\">s</span><span class=\"o\">)</span>  <span class=\"c1\">--s非空 紧 凸</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">EReal</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">properfun</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">closedfun</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">strong_quasi</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"c1\">-- f适当 闭 需要加上强拟凸</span>\n<span class=\"k\">#check</span> <span class=\"n\">properfun</span>\n<span class=\"k\">#check</span> <span class=\"n\">closedfun</span>\n<span class=\"k\">#check</span> <span class=\"n\">strong_quasi</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">uniqueness</span> <span class=\"o\">:</span> <span class=\"bp\">∃!</span> <span class=\"n\">x'</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">x'</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">constructor</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Does anyone know what should I code next?</p>",
        "id": 385787913,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1692322115
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/wSnK0NiS-de-8JNgLMTSSEvi/picture.png\">picture.png</a><br>\nDoes anyone know how I can introduce the <code>?w</code> in the proposition</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/wSnK0NiS-de-8JNgLMTSSEvi/picture.png\" title=\"picture.png\"><img src=\"/user_uploads/3121/wSnK0NiS-de-8JNgLMTSSEvi/picture.png\"></a></div>",
        "id": 385791288,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1692323252
    },
    {
        "content": "<p>You can say <code>show x = 42</code> (where <code>x = ?w</code> is the thing you have there that I am not going to try to type). This will unify <code>x = 42</code> with <code>x = ?w</code>, which will make <code>?w</code> be 42.</p>",
        "id": 385801630,
        "sender_full_name": "Richard Copley",
        "timestamp": 1692326865
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631681\">tsuki  hao</span> has marked this topic as resolved.</p>",
        "id": 385830174,
        "sender_full_name": "Notification Bot",
        "timestamp": 1692338306
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631681\">tsuki  hao</span> has marked this topic as unresolved.</p>",
        "id": 385830196,
        "sender_full_name": "Notification Bot",
        "timestamp": 1692338319
    },
    {
        "content": "<p><code>tsuki hao</code> did not explain what they were doing. They were trying to prove a theorem in convex analysis: <br>\nA proper, closed, strong quasi-convex function <code>f</code> on some compact convex set <code>s</code> admits a unique minimum point on <code>s</code>. </p>\n<p>They didn't resolve the imports either, here are the imports:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Convex.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Convex.Function</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Convex.Integral</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Convex.Quasiconvex</span>\n</code></pre></div>\n<p>This theorem is not easy to prove, here are some supplementary materials (only in Chinese):<br>\n<a href=\"/user_uploads/3121/TP9hcPlHyUl7kvtj7MBfB6-A/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/TP9hcPlHyUl7kvtj7MBfB6-A/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/TP9hcPlHyUl7kvtj7MBfB6-A/image.png\"></a></div><p><a href=\"/user_uploads/3121/6baFD3ykldO9vpn1l5fp85m1/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/6baFD3ykldO9vpn1l5fp85m1/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/6baFD3ykldO9vpn1l5fp85m1/image.png\"></a></div><p><a href=\"/user_uploads/3121/XLsKDrV4pObbn1dvnORUutz3/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/XLsKDrV4pObbn1dvnORUutz3/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/XLsKDrV4pObbn1dvnORUutz3/image.png\"></a></div>",
        "id": 385840029,
        "sender_full_name": "Zhang Ruichong",
        "timestamp": 1692342341
    },
    {
        "content": "<p>In fact, what I want to prove is that for a non-empty, compact and convex subset, if f is an appropriate, closed and strongly quasi-convex function, then there is and only one and only a minimum value point. In the above code Existence and uniqueness were written together, but I have now separated them and proved them separately, this part of the code is shown below, maybe someone can help me prove existence? As far as I know this requires the use of Weierstrass theorem.</p>",
        "id": 385852394,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1692346115
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Convex.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.EReal</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.Bounds.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.NormedSpace.PiLp</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.FiniteDimensional</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.UnitaryGroup</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.Projection</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.PiL2</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.SubsetProperties</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Sets.Closeds</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Bases</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.Bounds.Basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">EReal</span> <span class=\"n\">Function</span> <span class=\"n\">Topology</span> <span class=\"n\">Filter</span> <span class=\"n\">Set</span> <span class=\"n\">TopologicalSpace</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedRing</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DenselyOrdered</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SequentialSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">FirstCountableTopology</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SequentialSpace</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DenselyOrdered</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">OrderTopology</span> <span class=\"n\">EReal</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">SequentialSpace</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">E</span> <span class=\"bp\">×</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"c1\">-- 不加这个会在使用sequence的时候报错</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">OrderedAddCommMonoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedAddCommMonoid</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"bp\">𝕜</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"bp\">𝕜</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Closeds</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">EReal</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">EReal</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"n\">b</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"n\">b</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">SMul</span> <span class=\"n\">b</span> <span class=\"n\">EReal</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">EReal</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">EReal</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"c\">/-</span><span class=\"cm\">properfun-/</span>\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">exist_fun_lt_top</span>  <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">⊤</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">forall_fun_gt_top</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">⊥</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">properfun</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">exist_fun_lt_top</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">forall_fun_gt_top</span> <span class=\"n\">s</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">isSup</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">upperBounds</span> <span class=\"n\">s</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">upperBounds</span> <span class=\"n\">s</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">closedfun-/</span>\n<span class=\"c\">/-</span><span class=\"cm\"> 定义域-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">dom</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">⊤</span><span class=\"o\">}</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> 下水平集 -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">level_set</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">EReal</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span> <span class=\"o\">}</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> 上方图 -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">epigraph</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">E</span> <span class=\"bp\">×</span> <span class=\"n\">EReal</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">×</span> <span class=\"n\">EReal</span> <span class=\"bp\">|</span> <span class=\"n\">p.1</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"n\">p.1</span> <span class=\"bp\">≤</span> <span class=\"n\">p.2</span><span class=\"o\">}</span>\n<span class=\"c1\">-- {p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2}</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> 闭函数 -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">closedfun</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">IsClosed</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">epigraph</span> <span class=\"n\">s</span> <span class=\"n\">f</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">强拟凸函数-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">strong_quasi</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Convex</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">x</span><span class=\"o\">⦄,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">y</span><span class=\"o\">⦄,</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">𝕜</span><span class=\"o\">⦄,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n    <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">•</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">•</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">唯一性定理-/</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.Nonempty</span> <span class=\"bp\">∧</span> <span class=\"n\">Convex</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">IsCompact</span> <span class=\"n\">s</span><span class=\"o\">)</span>  <span class=\"c1\">--s非空 紧 凸</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">EReal</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">properfun</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">closedfun</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">strong_quasi</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"c1\">-- f适当 闭 需要加上强拟凸</span>\n<span class=\"k\">#check</span> <span class=\"n\">properfun</span>\n<span class=\"k\">#check</span> <span class=\"n\">closedfun</span>\n<span class=\"k\">#check</span> <span class=\"n\">strong_quasi</span>\n\n<span class=\"c1\">-- theorem uniqueness : ∃! x', ∀ x ∈ s \\ {x'}, f x' &lt; f x := by</span>\n<span class=\"c1\">--   constructor</span>\n<span class=\"c1\">--   · simp    --唯一性</span>\n<span class=\"c1\">--     use</span>\n<span class=\"c1\">--     constructor</span>\n<span class=\"c1\">--     rcases hs with ⟨h1, h2, h3⟩</span>\n<span class=\"c1\">--     rcases hf with ⟨h4, h5, h6⟩</span>\n<span class=\"c1\">--     · simp</span>\n\n<span class=\"c1\">--   · simp</span>\n\n<span class=\"c1\">-- theorem ExistsUnique.intro2 {p : α → Prop} (w : α)</span>\n<span class=\"c1\">--   (h₁ : p w) (h₂ : ∀ y, p y → y = w) : ∃! x, p x := by</span>\n<span class=\"c1\">--   --⟨w, h₁, h₂⟩</span>\n<span class=\"c1\">--   use w</span>\n\n<span class=\"c1\">-- variable [NormedField 𝕜] [SeminormedAddCommGroup E] [NormedSpace 𝕜 E]</span>\n<span class=\"c1\">-- variable (pf : properfun s f) (cf : closedfun s f)</span>\n<span class=\"c1\">-- theorem aux1 (h : BddAbove s ∧ BddBelow s) : {x ∈ s | ∀ y ∈ s, f x ≤ f y} := by</span>\n<span class=\"c1\">--   sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">existence</span>\n <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.Nonempty</span> <span class=\"bp\">∧</span> <span class=\"n\">Convex</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">IsCompact</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">EReal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">properfun</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">closedfun</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">strong_quasi</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x'</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">x'</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">uniqueness</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.Nonempty</span> <span class=\"bp\">∧</span> <span class=\"n\">Convex</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">IsCompact</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">EReal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">properfun</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">closedfun</span> <span class=\"n\">s</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">strong_quasi</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"n\">x'</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h_0</span> <span class=\"o\">:</span> <span class=\"n\">y'</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">x'</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">y'</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">y'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">x'</span> <span class=\"bp\">=</span> <span class=\"n\">y'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">x'</span> <span class=\"bp\">=</span> <span class=\"n\">y'</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n    <span class=\"k\">have</span> <span class=\"n\">l1</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">y'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"k\">have</span> <span class=\"n\">c1</span> <span class=\"o\">:</span> <span class=\"n\">y'</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">x'</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">constructor</span>\n        <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"n\">h_0</span>\n        <span class=\"bp\">·</span> <span class=\"n\">by_contra</span> <span class=\"n\">h3</span>\n          <span class=\"k\">have</span> <span class=\"n\">c2</span> <span class=\"o\">:</span> <span class=\"n\">x'</span> <span class=\"bp\">=</span> <span class=\"n\">y'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">False.elim</span> <span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"n\">Ne.symm</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"n\">h3</span><span class=\"o\">)</span>\n          <span class=\"n\">apply</span> <span class=\"n\">h</span>\n          <span class=\"n\">apply</span> <span class=\"n\">c2</span>\n      <span class=\"n\">apply</span> <span class=\"n\">h1</span>\n      <span class=\"n\">apply</span> <span class=\"n\">c1</span>\n    <span class=\"k\">have</span> <span class=\"n\">l2</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">y'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"k\">have</span> <span class=\"n\">c3</span> <span class=\"o\">:</span> <span class=\"n\">x'</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">y'</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">constructor</span>\n        <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"n\">h0</span>\n        <span class=\"bp\">·</span> <span class=\"n\">by_contra</span> <span class=\"n\">h4</span>\n          <span class=\"k\">have</span> <span class=\"n\">c4</span> <span class=\"o\">:</span> <span class=\"n\">x'</span> <span class=\"bp\">=</span> <span class=\"n\">y'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">h4</span>\n          <span class=\"n\">apply</span> <span class=\"n\">h</span>\n          <span class=\"n\">apply</span> <span class=\"n\">c4</span>\n      <span class=\"n\">apply</span> <span class=\"n\">h2</span>\n      <span class=\"n\">apply</span> <span class=\"n\">c3</span>\n    <span class=\"n\">by_contra</span> <span class=\"n\">h'</span>\n    <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">h'</span>\n    <span class=\"k\">have</span> <span class=\"n\">l3</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">lt_trans</span> <span class=\"n\">l1</span> <span class=\"n\">l2</span>\n    <span class=\"k\">have</span> <span class=\"n\">l4</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"bp\">≠</span> <span class=\"n\">f</span> <span class=\"n\">x'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">ne_of_lt</span> <span class=\"n\">l3</span>\n    <span class=\"n\">exact</span> <span class=\"n\">l4</span> <span class=\"n\">rfl</span>\n    <span class=\"bp\">```</span>\n</code></pre></div>",
        "id": 385852457,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1692346131
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631681\">tsuki  hao</span> <a href=\"#narrow/stream/113489-new-members/topic/existence.20theorem/near/385791288\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/3121/wSnK0NiS-de-8JNgLMTSSEvi/picture.png\">picture.png</a><br>\nDoes anyone know how I can introduce the <code>?w</code> in the proposition</p>\n</blockquote>\n<p>Let me just mention that if you have <code>sorryAx</code> in your goal then there's something very wrong somewhere. You should always try to fix the red squiggles before going on with your proof!</p>",
        "id": 385853862,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1692346458
    },
    {
        "content": "<p>Is this intended for Mathlib contribution or as an exercise? If it's for mathlib contribution, the right way to prove the existence is to use the fact that, since the epigraph is closed, your functions is lower semicontinuous, hence it has a minimum on any compact subset. We don't have that result yet but I've been slowly working towards it, so if you need it for contributing let me know so I bump it up of my priority list. But of course it's also a good exercise to do things by hand with sequences if you don't care about generality!</p>",
        "id": 385856297,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1692346985
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/113489-new-members/topic/existence.20theorem/near/385856297\">said</a>:</p>\n<blockquote>\n<p>Is this intended for Mathlib contribution or as an exercise? If it's for mathlib contribution, the right way to prove the existence is to use the fact that, since the epigraph is closed, your functions is lower semicontinuous, hence it has a minimum on any compact subset. We don't have that result yet but I've been slowly working towards it, so if you need it for contributing let me know so I bump it up of my priority list. But of course it's also a good exercise to do things by hand with sequences if you don't care about generality!</p>\n</blockquote>\n<p>Is this intended for Mathlib contribution.I want to prove it using the generalized Weierstrass theorem, that is, for an appropriate and closed function, if the domain of definition of fx&lt;+\\infty is bounded, then the minimum point is non-empty (my English is not very good and I am not sure if The statement is completely correct, if you can understand Chinese, you can refer to the ppt above.</p>",
        "id": 385858080,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1692347384
    },
    {
        "content": "<p>Btw do you know about <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=QuasiConvexOn#doc\">docs#QuasiConvexOn</a> ?</p>",
        "id": 385874492,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1692352732
    }
]