[
    {
        "content": "<p>Hello. <br>\nRecently I'm trying to run the Lean theorem prover on nodejs. (Due to some reasons I must use the Emscripten build of Lean rather than the binary version) I have read the project <a href=\"https://github.com/leanprover/lean-client-js/blob/master/lean-client-js-browser/README.md\">lean-client-js</a> and tried to init the server with Mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">FS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"browserfs/dist/node/core/FS\"</span><span class=\"p\">).</span><span class=\"k\">default</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">ZipFS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"browserfs/dist/node/backend/ZipFS\"</span><span class=\"p\">).</span><span class=\"k\">default</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">EmscriptenFS</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">  </span><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"browserfs/dist/node/generic/emscripten_fs\"</span><span class=\"p\">).</span><span class=\"k\">default</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">fs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"fs\"</span><span class=\"p\">);</span>\n<span class=\"c1\">// Path to core library</span>\n<span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">zipLib</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">readFileSync</span><span class=\"p\">(</span><span class=\"s2\">\"library.zip\"</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">loadJs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"ow\">new</span><span class=\"w\"> </span><span class=\"nb\">Promise</span><span class=\"p\">((</span><span class=\"nx\">r</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Emscripten build of Lean</span>\n<span class=\"w\">  </span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">assign</span><span class=\"p\">(</span><span class=\"nx\">Module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"./lean_js_js\"</span><span class=\"p\">));</span>\n<span class=\"w\">  </span><span class=\"nx\">r</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"kd\">function</span><span class=\"w\"> </span><span class=\"nx\">init</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">Module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{};</span>\n<span class=\"w\">  </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">loadJs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"ow\">new</span><span class=\"w\"> </span><span class=\"nb\">Promise</span><span class=\"p\">((</span><span class=\"nx\">r</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">assign</span><span class=\"p\">(</span><span class=\"nx\">Module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"./lean_js_js\"</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"nx\">r</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">});</span>\n<span class=\"w\">  </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"nb\">Promise</span><span class=\"p\">.</span><span class=\"nx\">all</span><span class=\"p\">([</span><span class=\"nx\">loadJs</span><span class=\"p\">]);</span>\n<span class=\"w\">  </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">libraryFS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"ow\">new</span><span class=\"w\"> </span><span class=\"nb\">Promise</span><span class=\"p\">((</span><span class=\"nx\">resolve</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">reject</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">=&gt;</span>\n<span class=\"w\">    </span><span class=\"nx\">ZipFS</span><span class=\"p\">.</span><span class=\"nx\">Create</span><span class=\"p\">({</span><span class=\"w\"> </span><span class=\"nx\">zipData</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">zipLib</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">res</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">=&gt;</span>\n<span class=\"w\">      </span><span class=\"nx\">err</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"nx\">reject</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">BrowserFS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"ow\">new</span><span class=\"w\"> </span><span class=\"nx\">FS</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"nx\">BrowserFS</span><span class=\"p\">.</span><span class=\"nx\">initialize</span><span class=\"p\">(</span><span class=\"nx\">libraryFS</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">BFS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"ow\">new</span><span class=\"w\"> </span><span class=\"nx\">EmscriptenFS</span><span class=\"p\">(</span><span class=\"nx\">Module</span><span class=\"p\">.</span><span class=\"nx\">FS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">PATH</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">ERROR_CODE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">BrowserFS</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"nx\">Module</span><span class=\"p\">.</span><span class=\"nx\">FS</span><span class=\"p\">.</span><span class=\"nx\">createPath</span><span class=\"p\">(</span><span class=\"nx\">Module</span><span class=\"p\">.</span><span class=\"nx\">FS</span><span class=\"p\">.</span><span class=\"nx\">root</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"library\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"nx\">Module</span><span class=\"p\">.</span><span class=\"nx\">FS</span><span class=\"p\">.</span><span class=\"nx\">mount</span><span class=\"p\">(</span><span class=\"nx\">BFS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">root</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"/\"</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"s2\">\"/library\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"nx\">Module</span><span class=\"p\">.</span><span class=\"nx\">_lean_init</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"lean server initialized.\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nx\">Module</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>However, when I attempted to sync a test file (Check the attachment <a href=\"/user_uploads/3121/W0jPMPxDWkNEBHlLeJba0a-1/index.js\">index.js</a> for details) I got the error:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"nt\">\"msgs\"</span><span class=\"p\">:[{</span><span class=\"nt\">\"caption\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"nt\">\"file_name\"</span><span class=\"p\">:</span><span class=\"s2\">\"test.lean\"</span><span class=\"p\">,</span><span class=\"nt\">\"pos_col\"</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nt\">\"pos_line\"</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"nt\">\"severity\"</span><span class=\"p\">:</span><span class=\"s2\">\"error\"</span><span class=\"p\">,</span><span class=\"nt\">\"text\"</span><span class=\"p\">:</span><span class=\"s2\">\"file '/library/init/default.olean' not found\"</span><span class=\"p\">}],</span><span class=\"nt\">\"response\"</span><span class=\"p\">:</span><span class=\"s2\">\"all_messages\"</span><span class=\"p\">}</span>\n</code></pre></div>\n<p>I'm sure that the file exists. Can anyone tell me what's wrong here?</p>\n<p>Thanks in advance!</p>",
        "id": 382022847,
        "sender_full_name": "Phillip Ted",
        "timestamp": 1691205220
    },
    {
        "content": "<p>Unfortunately I'm not sure you'll get much traction on this, as Lean 3 is at end-of-life, and everyone is transitioning to using Lean 4. There is currently no way to run Lean 4 inside a javascript environment, although there has been discussion at <a href=\"#narrow/stream/270676-lean4/topic/wasm.20nix.20emscripten.20build/near/271113368\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/wasm.20nix.20emscripten.20build/near/271113368</a></p>",
        "id": 382036436,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691212501
    },
    {
        "content": "<p>One thing you could try is reading the file from the FS object manually and verifying that works</p>",
        "id": 382074596,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691226055
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Run.20Lean3.20in.20NodeJS/near/382074596\">said</a>:</p>\n<blockquote>\n<p>One thing you could try is reading the file from the FS object manually and verifying that works</p>\n</blockquote>\n<p>I tried this and it worked well. But I still got the same error when sync the lean file</p>",
        "id": 382122100,
        "sender_full_name": "Phillip Ted",
        "timestamp": 1691236702
    }
]