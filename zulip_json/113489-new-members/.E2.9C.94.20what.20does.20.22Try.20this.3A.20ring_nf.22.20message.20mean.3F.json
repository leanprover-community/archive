[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Ring</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">ring</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 400052039,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1698979054
    },
    {
        "content": "<p>why the message \"Try this: ring_nf\" is displayed?</p>",
        "id": 400052080,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1698979080
    },
    {
        "content": "<p><code>ring</code> What's wrong with that?</p>",
        "id": 400052143,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1698979103
    },
    {
        "content": "<p>Nats with subtraction doesn't really form a ring (only a semiring) so this is the tactic telling you this problem isn't really in scope. It suggests to use <code>ring_nf</code> instead, which is also not really ideal here</p>",
        "id": 400052627,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698979364
    },
    {
        "content": "<p>Yeah this statement is really bad, it involve three Nat subtractions, which is three more than what you want to see. One day the <code>omega</code> tactic will come back and prove this. And on a recent Mathlib you can use</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw_search</span>\n</code></pre></div>",
        "id": 400053831,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698980050
    },
    {
        "content": "<p>But really you should think about what you did to end up with that goal, and not do it.</p>",
        "id": 400053854,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698980079
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 400063049,
        "sender_full_name": "Notification Bot",
        "timestamp": 1698985764
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> I forgot to say \"thank you!\". My question has been answered.</p>",
        "id": 400132804,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1699017725
    }
]