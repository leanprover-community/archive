[
    {
        "content": "<p>The <code>#eval</code> at the end of the Chaining Coercions example in the <a href=\"https://leanprover.github.io/functional_programming_in_lean/type-classes/coercion.html\">Coercions section</a>  Functional Programming book won't work unless you add <code>deriving Repr</code> to the inductive types like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">A</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Repr</span>  <span class=\"c1\">-- needed for #eval</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">B</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">b</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Repr</span> <span class=\"c1\">-- needed for #eval</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Coe</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">where</span>\n  <span class=\"n\">coe</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">B.b</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Coe</span> <span class=\"n\">B</span> <span class=\"n\">A</span> <span class=\"n\">where</span>\n  <span class=\"n\">coe</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">A.a</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Coe</span> <span class=\"n\">Unit</span> <span class=\"n\">A</span> <span class=\"n\">where</span>\n  <span class=\"n\">coe</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">A.a</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">coercedToB</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"o\">()</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">coercedToB</span>\n</code></pre></div>",
        "id": 380825886,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1690920581
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> is probably the person this comment is relevant to. Note that the book is generated from working lean code, and that that line was not included due to the set-up here <a href=\"https://github.com/leanprover/fp-lean/blob/56422d4a279d6a74dcf6dc1f9eaa84227ea81f0c/examples/Examples/Classes.lean#L1553\">https://github.com/leanprover/fp-lean/blob/56422d4a279d6a74dcf6dc1f9eaa84227ea81f0c/examples/Examples/Classes.lean#L1553</a></p>",
        "id": 381196970,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1690989388
    },
    {
        "content": "<p>In particular the <code>deriving instance Repr for B</code> a couple lines down is a way to derive instances after the fact</p>",
        "id": 381207787,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1690991094
    },
    {
        "content": "<p>While the section prior to this one says how to do the <code>deriving instance</code> that the text talks about, an introductory text shouldn't be asking readers to keep fresh things up in their minds like this - it would be good to invoke those lines directly in the text to refresh the concept.</p>\n<p>I created an issue to track this: <a href=\"https://github.com/leanprover/fp-lean/issues/123\">https://github.com/leanprover/fp-lean/issues/123</a></p>\n<p>In the meantime, you can include the <code>deriving instance Repr for B</code> line that the text suggests, but does not write directly.</p>",
        "id": 382427972,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1691349295
    },
    {
        "content": "<p>Thank you for letting me know about this!</p>",
        "id": 382428049,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1691349335
    }
]