[
    {
        "content": "<p>Hello, I'm starting out learning Lean and am confused in what difference there is in using <code>cases</code> vs <code>match</code>. I understand <code>cases</code> can only be used in tactic mode, but so can <code>match</code>. The few experiments I've done seem to suggest that they different in their pattern matching (<code>cases</code> can't seem to de-structure a record for instance). It seems to me that <code>match</code> is strictly more powerful than <code>cases</code>, when would I want to use the latter?</p>",
        "id": 354131949,
        "sender_full_name": "Scott Godwin",
        "timestamp": 1682733506
    },
    {
        "content": "<p>I also ran into a situation where just changing <code>cases</code> to <code>match</code> with no other changes got Lean to prove termination whereas it couldn't with <code>cases</code> which is a bit strange to me.</p>",
        "id": 354132328,
        "sender_full_name": "Scott Godwin",
        "timestamp": 1682733596
    },
    {
        "content": "<p>I think one situation in which you can't use <code>match</code> is when you want to handle multiple/all cases at once without listing them explicitly. So for example, this doesn't work with <code>match</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"bp\">∨</span> <span class=\"n\">True</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>Also, you have the option of not closing a branch's goal by using <code>case'</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"bp\">∨</span> <span class=\"n\">True</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"bp\">∧</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span>\n  <span class=\"n\">case'</span> <span class=\"n\">inl</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">constructor</span>\n  <span class=\"n\">case'</span> <span class=\"n\">inr</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">constructor</span>\n  <span class=\"n\">all_goals</span> <span class=\"n\">assumption</span>\n</code></pre></div>",
        "id": 354241709,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1682755092
    }
]