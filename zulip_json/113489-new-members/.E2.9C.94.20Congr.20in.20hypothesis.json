[
    {
        "content": "<p>Hey there, I have a hypothesis in my context stating that <code>constructor A B = constructor A' B'</code> for some <code>constructor</code> and I'd like to get <code>A = A' \\and B = B'</code> from that. Is there a way to do so ?</p>",
        "id": 406253040,
        "sender_full_name": "Thomas Vigouroux",
        "timestamp": 1701850185
    },
    {
        "content": "<p>The tactic <code>injection</code>?</p>",
        "id": 406253175,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1701850247
    },
    {
        "content": "<p>Not entirely sure it made it to Lean 4.</p>",
        "id": 406253189,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1701850261
    },
    {
        "content": "<p>It did and it worked, that you soo much !</p>",
        "id": 406253259,
        "sender_full_name": "Thomas Vigouroux",
        "timestamp": 1701850294
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"658705\">Thomas Vigouroux</span> has marked this topic as resolved.</p>",
        "id": 406253268,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701850299
    },
    {
        "content": "<p>The number of tactics is quite overwhelming though, is there a cheatsheet somewhere ?</p>",
        "id": 406253943,
        "sender_full_name": "Thomas Vigouroux",
        "timestamp": 1701850570
    },
    {
        "content": "<p><a href=\"https://github.com/madvorak/lean4-tactics\">https://github.com/madvorak/lean4-tactics</a></p>",
        "id": 406254011,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1701850602
    },
    {
        "content": "<p>But <code>injection</code> is missing.</p>",
        "id": 406254052,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1701850622
    },
    {
        "content": "<p>We used to have a list of tactics in the mathlib documentation. I don't know where that's gone. There's no exhaustive list that I know of.</p>",
        "id": 406254091,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1701850645
    },
    {
        "content": "<p>The exhaustive list is <code>#help tactic</code> this is on the web in markdown at <a href=\"https://github.com/haruhisa-enomoto/mathlib4-all-tactics\">https://github.com/haruhisa-enomoto/mathlib4-all-tactics</a></p>",
        "id": 406292988,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701865089
    },
    {
        "content": "<p>That said the mathlib version in order of \"usefulness\" should probably be restored at some point</p>",
        "id": 406293054,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701865125
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Congr.20in.20hypothesis/near/406292988\">said</a>:</p>\n<blockquote>\n<p>The exhaustive list is <code>#help tactic</code> this is on the web in markdown at <a href=\"https://github.com/haruhisa-enomoto/mathlib4-all-tactics\">https://github.com/haruhisa-enomoto/mathlib4-all-tactics</a></p>\n</blockquote>\n<p>I think that this is what I was looking for, it's great to see what  I can use at some point</p>",
        "id": 406305640,
        "sender_full_name": "Thomas Vigouroux",
        "timestamp": 1701869787
    }
]