[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">neg_eq_of_add_eq_zero</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₁</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Can someone help me complete this code?</p>",
        "id": 377187314,
        "sender_full_name": "Billlie Franch",
        "timestamp": 1689920974
    },
    {
        "content": "<p>This is not a complete stand-alone example. See <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>.</p>",
        "id": 377187985,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689921185
    },
    {
        "content": "<p>Once you've turned your code into a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>, please outline what the next mathematical step is that you would like to take. Then we can explain how to turn it into Lean.</p>",
        "id": 377188341,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689921314
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/a.20problem.20about.20lean4.20code/near/377188341\">said</a>:</p>\n<blockquote>\n<p>Once you've turned your code into a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>, please outline what the next mathematical step is that you would like to take. Then we can explain how to turn it into Lean.</p>\n</blockquote>\n<p>Sorry, the full code is like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Ring.Defs</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">neg_eq_of_add_eq_zero</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₁</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 377189068,
        "sender_full_name": "Billlie Franch",
        "timestamp": 1689921545
    },
    {
        "content": "<p>This code cannot type check. Without more assumptions on <code>R</code> you can not write things like <code>a + b</code>.</p>",
        "id": 377189442,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689921656
    },
    {
        "content": "<p>You probably want to assume that <code>R</code> is a group/ring/field or something.</p>",
        "id": 377189501,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689921672
    },
    {
        "content": "<p>Or maybe you want to use the real numbers, given your list of imports.</p>",
        "id": 377189547,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689921690
    }
]