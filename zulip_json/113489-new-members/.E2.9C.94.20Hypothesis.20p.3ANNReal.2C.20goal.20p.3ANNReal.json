[
    {
        "content": "<p>How is it possible to have <code>p: ℝ≥0</code> as a hypothesis and a goal to show that <code>p: ℝ≥0</code>? Below is the infoview.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">case</span> <span class=\"n\">p</span>\n<span class=\"bp\">Ω</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span>\n<span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">hX</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">),</span> <span class=\"n\">X</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"k\">if</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">true</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n<span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">PMF</span> <span class=\"n\">Bool</span>\n<span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span>\n<span class=\"n\">hp</span><span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span>\n<span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">PMF.bernoulli</span> <span class=\"bp\">↑</span><span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">μ</span><span class=\"bp\">✝</span><span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"n\">Bool</span>\n<span class=\"n\">hμ</span><span class=\"o\">:</span> <span class=\"n\">μ</span><span class=\"bp\">✝</span> <span class=\"bp\">=</span> <span class=\"n\">PMF.toMeasure</span> <span class=\"n\">f</span>\n<span class=\"n\">inst</span><span class=\"bp\">✝²</span><span class=\"o\">:</span> <span class=\"n\">MeasureSpace</span> <span class=\"n\">Bool</span>\n<span class=\"n\">X1X2</span><span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">inst</span><span class=\"bp\">✝¹</span><span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"bp\">Ω</span>\n<span class=\"n\">μ</span><span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"bp\">Ω</span>\n<span class=\"n\">inst</span><span class=\"bp\">✝</span><span class=\"o\">:</span> <span class=\"n\">IsProbabilityMeasure</span> <span class=\"n\">μ</span>\n<span class=\"n\">h0X1</span><span class=\"o\">:</span> <span class=\"bp\">↑↑</span><span class=\"n\">μ</span> <span class=\"o\">{</span><span class=\"n\">w</span> <span class=\"bp\">|</span> <span class=\"n\">X1</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"bp\">↑</span><span class=\"n\">p</span>\n<span class=\"n\">h1X1</span><span class=\"o\">:</span> <span class=\"bp\">↑↑</span><span class=\"n\">μ</span> <span class=\"o\">{</span><span class=\"n\">w</span> <span class=\"bp\">|</span> <span class=\"n\">X1</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"n\">p</span>\n<span class=\"n\">h0X2</span><span class=\"o\">:</span> <span class=\"bp\">↑↑</span><span class=\"n\">μ</span> <span class=\"o\">{</span><span class=\"n\">w</span> <span class=\"bp\">|</span> <span class=\"n\">X2</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"bp\">↑</span><span class=\"n\">p</span>\n<span class=\"n\">h1X2</span><span class=\"o\">:</span> <span class=\"bp\">↑↑</span><span class=\"n\">μ</span> <span class=\"o\">{</span><span class=\"n\">w</span> <span class=\"bp\">|</span> <span class=\"n\">X2</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"n\">p</span>\n<span class=\"n\">hIndep</span><span class=\"o\">:</span> <span class=\"n\">IndepFun</span> <span class=\"n\">X1</span> <span class=\"n\">X2</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 400324409,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699128729
    },
    {
        "content": "<p>This is not a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 400324444,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699128797
    },
    {
        "content": "<p>Usually this means that you applied a lemma that takes an argument of type <code>NNReal</code> and you didn't tell Lean which number do you want to use.</p>",
        "id": 400324454,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699128828
    },
    {
        "content": "<p>So, some other goal has a metavariable (placeholder) that will be filled with whatever you choose in this goal.</p>",
        "id": 400324510,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1699128873
    },
    {
        "content": "<p>That was the case! Now that I provided <code>p</code> explicitly, it works!</p>",
        "id": 400324516,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699128885
    },
    {
        "content": "<p>Thank you</p>",
        "id": 400324522,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1699128899
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"414458\">Vasily Ilin</span> has marked this topic as resolved.</p>",
        "id": 400324530,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699128905
    }
]