[
    {
        "content": "<p>// Assuming the code below, I wrote this version, but the dafny doesn't complain about it, but the version where I start with s:= s + k; then k:= k + 1;  gives an error!!!</p>\n<p>// so I prove it with pen and paper! <br>\n//This code is correct iff (1) (2) (3) holds <br>\n// 1. the Hoare triple {Q} s:=0;k:=0 {Pinv}: holds : which TRUE √; and <br>\n// 2. {Pinv ∧ k &lt; n } k:= k + 1; s:= s + k; {Pinv} Also holds : <br>\n//This one doesn't hold; as at the end of the proof, it gives <br>\n//  s + k + 1 = (∑i|0&lt;= i &lt; k + 1 :i) ∧  (0 &lt;= k + 1 &lt;= n)<br>\n//  s  = (∑i|0&lt;= i &lt; k :i) - 1  ∧  (0 &lt;= k + 1 &lt;= n)</p>\n<p>// but start accumulating the value in s, s:= s + k; and then increment k, k:= k + 1; <br>\n// gives the right proof as follows <br>\n// s + k  = (∑i|0&lt;= i &lt; k + 1 :i) ∧  (0 &lt;= k + 1 &lt;= n)<br>\n// s  = (∑i|0&lt;= i &lt; k :i)  ∧  (0 &lt;= k + 1 &lt;= n)<br>\n// which means that the Hoare triple holds</p>\n<p>// 3. This one holds too<br>\n// Pinv ∧ ⌝(k&lt;n) =&gt; R</p>\n<p>// I DON'T KNOW how Dafny works from the inside as I start experimenting with it, but it looks strange. </p>\n<p>function Sum(n:nat) :(s:nat)<br>\n{<br>\n  if n==0 then 0 else n*(n + 1)/2<br>\n  // if n == 0 then 0 else n + Sum(n-1)<br>\n}</p>\n<p>method TestSum(n:nat) returns(s:nat)<br>\n  requires  n &gt;= 0 // pre-condition<br>\n  ensures s == Sum(n) // post-condition<br>\n{<br>\n  // {Q: n&gt;=0 }<br>\n  s:= 0;<br>\n  var k:= 0;<br>\n  // {Pinv : s = (∑i|0&lt;= i &lt; k :i) ∧  (0 &lt;= k &lt;= n)}<br>\n  while k &lt; n<br>\n    invariant s == Sum(k) &amp;&amp;  0 &lt;= k &lt;= n<br>\n  {<br>\n    //   {Pinv ∧ k&lt;n : s = (∑i|0&lt;= i &lt; k :i) ∧  (0 &lt;= k &lt;= n) }<br>\n    k:= k + 1;<br>\n    s:= s + k;<br>\n    print(s,k);<br>\n    // {Pinv : s = (∑i|0&lt;= i &lt; k :i) ∧  (0 &lt;= k &lt;= n) }<br>\n  }<br>\n  //   {Pinv ∧ not(k&lt;n) : s = (∑i|0&lt;= i &lt; k :i) ∧  (0 &lt;= k &lt;= n) not(k&lt;n) }<br>\n  //   {R: s = (∑i|0&lt;= i &lt; k : b(i))  ∧  (0 &lt;= k &lt;= n) }<br>\n}</p>",
        "id": 361755319,
        "sender_full_name": "Abdel Ali Harchaoui",
        "timestamp": 1685280368
    },
    {
        "content": "<p>The odds you are going to find Dafny help in a Lean Zulip are rather low I am afraid.</p>",
        "id": 361756841,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1685280873
    },
    {
        "content": "<p>Maybe because I found this dafny and lean on  the archive ,    <a href=\"https://leanprover-community.github.io/archive/stream/113489-new-members/topic/Lean.20vs.20Dafny.3A.20Why.20can%27t.20I.20just.20put.20a.20bunch.20of.20assertions.2E.2E.2E.html\">https://leanprover-community.github.io/archive/stream/113489-new-members/topic/Lean.20vs.20Dafny.3A.20Why.20can%27t.20I.20just.20put.20a.20bunch.20of.20assertions.2E.2E.2E.html</a></p>",
        "id": 361757189,
        "sender_full_name": "Abdel Ali Harchaoui",
        "timestamp": 1685280995
    },
    {
        "content": "<p>But i think I will delete it and I'm sorry <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 361757304,
        "sender_full_name": "Abdel Ali Harchaoui",
        "timestamp": 1685281036
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/not.20for.20lean.20but.20for.20dafny.2C.20.20but.20hoare.20triple.20must.20hold.20.2E.2E\">#general &gt; not for lean but for dafny,  but hoare triple must hold ..</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 361757804,
        "sender_full_name": "Notification Bot",
        "timestamp": 1685281231
    }
]