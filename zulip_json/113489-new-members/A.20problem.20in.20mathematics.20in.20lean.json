[
    {
        "content": "<p>'''<br>\nexample (h₀ : d ≤ e) : c + exp (a + d) ≤ c + exp (a + e) := by<br>\n  sorry<br>\n'''<br>\nCan someone tell me how to complete the above code</p>",
        "id": 375648378,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689468963
    },
    {
        "content": "<p>Can you please post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> using <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> ? That's the best way to ask a question here.</p>",
        "id": 375648569,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689469047
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/A.20problem.20in.20mathematics.20in.20lean\">#lean4 &gt; A problem in mathematics in lean</a> by <span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span>.</p>",
        "id": 375648955,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689469218
    },
    {
        "content": "<p>As far as I understand, <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a> is for questions that may need attention of core developers.</p>",
        "id": 375649084,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689469275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/A.20problem.20in.20mathematics.20in.20lean/near/375648569\">said</a>:</p>\n<blockquote>\n<p>Can you please post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> using <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> ? That's the best way to ask a question here.</p>\n</blockquote>\n<p>Thanks for the reminder, my problem is this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">≤</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">exp</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">exp</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 375650305,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689469838
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/113489-new-members/topic/A.20problem.20in.20mathematics.20in.20lean/near/375649084\">said</a>:</p>\n<blockquote>\n<p>As far as I understand, <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a> is for questions that may need attention of core developers.</p>\n</blockquote>\n<p>Sorry, besides, can I ask you where I should be asking</p>",
        "id": 375650410,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689469897
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a>, <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> , or <a class=\"stream\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths\">#maths</a> (I can't formulate exact rules; we'll move if we think a thread is more appropriate in another stream)</p>",
        "id": 375650561,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689469973
    },
    {
        "content": "<p>A <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> includes all required <code>import</code>s, <code>open</code>s, and <code>variable</code>s (if any)</p>",
        "id": 375650622,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689470015
    },
    {
        "content": "<p>Try <code>gcongr</code> or <code>mono*</code>. Should just work.</p>",
        "id": 375650727,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1689470060
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/113489-new-members/topic/A.20problem.20in.20mathematics.20in.20lean/near/375650561\">said</a>:</p>\n<blockquote>\n<p><a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a>, <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> , or <a class=\"stream\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths\">#maths</a> (I can't formulate exact rules; we'll move if we think a thread is more appropriate in another stream)</p>\n</blockquote>\n<p>Thank you very much!</p>",
        "id": 375650787,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1689470103
    }
]