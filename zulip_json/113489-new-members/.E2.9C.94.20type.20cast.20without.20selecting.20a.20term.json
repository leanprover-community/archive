[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- ℤ is the set of integers</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">ℤ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">Int</span>\n\n<span class=\"c1\">-- It is not very desirable to have to choose arbitrarily</span>\n<span class=\"c1\">-- which terms in the equation should be cast to ℤ</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n\n<span class=\"c1\">-- I want to write like this.</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"k\">in</span> <span class=\"n\">ℤ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 407022906,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1702194247
    },
    {
        "content": "<p>Any advice would be appreciated <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 407023055,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1702194377
    },
    {
        "content": "<p>Why don't you just surround the entire expression with <code>(   : ℤ)</code> then?</p>",
        "id": 407028669,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702198540
    },
    {
        "content": "<p>simple and nice!</p>",
        "id": 407030645,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1702200003
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 407030719,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702200049
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20type.20cast.20without.20selecting.20a.20term/near/407022906\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- ℤ is the set of integers</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">ℤ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">Int</span>\n\n<span class=\"c1\">-- It is not very desirable to have to choose arbitrarily</span>\n<span class=\"c1\">-- which terms in the equation should be cast to ℤ</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n\n<span class=\"c1\">-- I want to write like this.</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"k\">in</span> <span class=\"n\">ℤ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>To write it like how you originally wanted, you just need:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">local</span> <span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"n\">A</span> <span class=\"s2\">\"=\"</span> <span class=\"n\">B</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"s2\">\"in\"</span> <span class=\"n\">T</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">@</span><span class=\"n\">Eq</span> <span class=\"n\">T</span> <span class=\"n\">A</span> <span class=\"n\">B</span>\n</code></pre></div>\n<p>as previously suggested <a href=\"#narrow/stream/287929-mathlib4/topic/Avoiding.20type.20annotation/near/402363154\">here</a>.</p>",
        "id": 407033213,
        "sender_full_name": "Utensil Song",
        "timestamp": 1702201186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span>  It looks very nice! Thank you!!</p>",
        "id": 407035249,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1702201930
    },
    {
        "content": "<p>Just to be clear, your original code contains no casts at all</p>",
        "id": 407103368,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702239595
    },
    {
        "content": "<p>(in that no coercions are inserted, and anyone using your lemma will not be able to tell where you wrote the <em>ascription</em>)</p>",
        "id": 407103552,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702239672
    },
    {
        "content": "<p>This is enough to make everything be an integer:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 407105530,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1702240605
    }
]