[
    {
        "content": "<p>Given <code>z : ‚Ñï ‚Üí ‚ÑÇ</code>, how do I say \"<code>z</code> tends to <code>0</code>?\"</p>\n<p>I found <code>Filter.Tendsto</code>, but that seems to be for functions.  Or does it also work for sequences?</p>",
        "id": 404933879,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701285280
    },
    {
        "content": "<p>I also found <code>Order.SuccPred.Limit</code> but that doesn't seem to be what I want.</p>",
        "id": 404933990,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701285330
    },
    {
        "content": "<p>.</p>",
        "id": 404934202,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701285417
    },
    {
        "content": "<p>Yes, it also works for sequences (that as you wrote are just functions from <code>‚Ñï</code>). The filter on <code>‚Ñï</code> you want is <code>Filter.atTop</code>.</p>",
        "id": 404935302,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701285918
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"348963\">Martin C. Martin</span> has marked this topic as resolved.</p>",
        "id": 404938911,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701287431
    },
    {
        "content": "<p>The equivalence with the usual formulation with <code>Œµ</code> and <code>N</code> is surely somewhere in the library.</p>",
        "id": 404940220,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701287973
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"348963\">Martin C. Martin</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Limit.20of.20sequences.3F/near/404933879\">said</a>:</p>\n<blockquote>\n<p>I found <code>Filter.Tendsto</code>, but that seems to be for functions.  Or does it also work for sequences?</p>\n</blockquote>\n<p>A sequence is a function, right? What is <code>z</code> if not a function?</p>",
        "id": 404958194,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1701295640
    },
    {
        "content": "<p>I'm reading section 9.1 in the Topology chapter on Filters.  This formalism is quite beautiful and general.</p>",
        "id": 405162069,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701364035
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Limit.20of.20sequences.3F/near/404940220\">said</a>:</p>\n<blockquote>\n<p>The equivalence with the usual formulation with <code>Œµ</code> and <code>N</code> is surely somewhere in the library.</p>\n</blockquote>\n<p><code>Filter.HasBasis.tendsto_iff</code>, given the existing basis for <code>atTop</code> and <code>ùìù</code>.</p>",
        "id": 405162380,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1701364110
    }
]