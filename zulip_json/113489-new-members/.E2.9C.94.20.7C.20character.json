[
    {
        "content": "<p>The following snippet of code is from <code>abel</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">do</span> <span class=\"n\">ns</span> <span class=\"bp\">←</span> <span class=\"n\">loc.get_locals</span><span class=\"o\">,</span>\n   <span class=\"k\">let</span> <span class=\"n\">red</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">red.is_some</span> <span class=\"k\">then</span> <span class=\"n\">semireducible</span> <span class=\"k\">else</span> <span class=\"n\">reducible</span><span class=\"o\">,</span>\n   <span class=\"n\">tt</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.replace_at</span> <span class=\"o\">(</span><span class=\"n\">normalize</span> <span class=\"n\">red</span> <span class=\"n\">SOP</span><span class=\"o\">)</span> <span class=\"n\">ns</span> <span class=\"n\">loc.include_goal</span>\n      <span class=\"bp\">|</span> <span class=\"n\">fail</span> <span class=\"s2\">\"abel failed to simplify\"</span><span class=\"o\">,</span>\n   <span class=\"n\">when</span> <span class=\"n\">loc.include_goal</span> <span class=\"bp\">$</span> <span class=\"n\">try</span> <span class=\"n\">tactic.reflexivity</span>\n</code></pre></div>\n<p>I'm trying to make sense of  the <code>|</code> character in the  <code> tt ← tactic.replace_at...</code> line. Is it the same thing as <code>&lt;|&gt;</code>?</p>",
        "id": 260468790,
        "sender_full_name": "Ashley Blacquiere",
        "timestamp": 1636148922
    },
    {
        "content": "<p>It is part of the syntax of the \"bind\" operation <code>pat &lt;- expr</code>, taken as the action if the pattern doesn't match (and not continuing with the rest of the <code>do</code> block)</p>",
        "id": 260471713,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636150872
    },
    {
        "content": "<p>i.e. <code>do pat &lt;- expr | f; rest</code> means something like <code>do x &lt;- expr; match x with { pat -&gt; do rest; _ -&gt; f }</code></p>",
        "id": 260471814,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636150931
    },
    {
        "content": "<p>Ah... Now the 'assignment' to <code>tt</code> makes much more sense. Thanks!</p>",
        "id": 260472700,
        "sender_full_name": "Ashley Blacquiere",
        "timestamp": 1636151590
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"378478\">Ashley Blacquiere</span> has marked this topic as resolved.</p>",
        "id": 260472985,
        "sender_full_name": "Notification Bot",
        "timestamp": 1636151847
    },
    {
        "content": "<p>There's a short description of this in <a href=\"https://leanprover-community.github.io/extras/tactic_writing.html#monadology\">https://leanprover-community.github.io/extras/tactic_writing.html#monadology</a></p>",
        "id": 260479856,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636157984
    }
]