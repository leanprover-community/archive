[
    {
        "content": "<p>Hi, I've been learning Lean, and am more-or-less ready to start contributing to mathlib.  Or at least to look into a first project and see what's involved.  :)  What's a good topic?  What's an area or theorem I could contribute?</p>",
        "id": 342407413,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1678995601
    },
    {
        "content": "<p>What are your (mathematical or compuitngy) interests, there are many possibilities of things to work on and it's always easier  when it's an area you know well or are interested in looking at deeply</p>",
        "id": 342422442,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1679000673
    },
    {
        "content": "<p>One algorithm is choose some theorem that interests you, start formalizing it with no intention of contributing it to mathlib, and then accumulate lemmas or other theory that are missing from mathlib as you work on this theorem. Then you polish these up, getting input from the community for how to structure them in a mathlib way, and then contribute these.</p>",
        "id": 342423198,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679000974
    },
    {
        "content": "<p>I have about 2 or 3 years of an undergraduate program in math, from around 1990.  Although I'm happy to learn anything I need.  For computing, well I have a Ph.D. and was a professional software engineer for many decades.  :)</p>\n<p>For mathematical interests, either real or complex analysis, or abstract algebra.  How much of that is formalized?</p>",
        "id": 342423938,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1679001297
    },
    {
        "content": "<p>You could check the <a href=\"https://leanprover-community.github.io/mathlib-overview.html\">overview</a> (which we try to keep updated)</p>",
        "id": 342424144,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679001383
    },
    {
        "content": "<p>Which theorems aren't yet formalized?  I assume e.g. all of the core of Spivak's Calculus is in mathlib?  What about calculus on mainfolds?</p>",
        "id": 342424163,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1679001394
    },
    {
        "content": "<p>There's an <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">undergraduate todo list</a> too, though beware that a number of things here remain because of technical challenges or unfinished long-discussed developments.</p>",
        "id": 342424259,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679001448
    },
    {
        "content": "<p>Here's a project that would benefit both mathlib and people learning Lean: choose a textbook like Spivak's Calculus, then go through it and try to prove everything in it with Mathlib. Importantly, give the theorem statement in as close to a Spivak-like way (with any concessions you need to make due to formalization of course), but then try to prove everything with pre-existing theorems.</p>\n<p>There are bound to be gaps.</p>",
        "id": 342424560,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679001592
    },
    {
        "content": "<p>A reason I think people should do this sort of textbook translation is that then either (1) people can use the formalized textbook as a library for their own work or (2) use the formalized textbook as a rosetta stone to see what's the mathlib formalization of common math.</p>",
        "id": 342424685,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679001641
    },
    {
        "content": "<p>Cool, I'll give that a shot!</p>",
        "id": 342424783,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1679001695
    },
    {
        "content": "<p>You could also try something like Linear Algebra Done Right, which (I hope) is sufficiently abstract that you don't get bogged down in too many calculations.</p>",
        "id": 342424941,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679001763
    },
    {
        "content": "<p>Of course, Lean already has the Filter stuff as a generalization of epsilon delta definitions.  (I'm just thinking out loud at this point.)</p>",
        "id": 342424987,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1679001789
    },
    {
        "content": "<p>Yes, and if you've done Patrick Massot's <a href=\"https://github.com/leanprover-community/tutorials\">analysis tutorial</a>, some of the main black box theorems you get to use are actually proved in Mathlib with all of that then given an epsilon-delta interface for the tutorial. (<a href=\"https://github.com/leanprover-community/tutorials/blob/master/src/solutions/tuto_lib.lean\">See this file</a>)</p>",
        "id": 342425465,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679001983
    },
    {
        "content": "<p>Cool, I have a copy of Linear Algebra Done Right, which I bought after seeing Baron Zweibach recommend it in his Quantum Mechanics class.  I was looking for a reason to work through it.  That could work well too!</p>",
        "id": 342425932,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1679002152
    },
    {
        "content": "<p>Thank you very much!  This is certainly enough to chew on.  I'm sure I'll be back with questions before long.  :)</p>\n<p>Is there a place to submit Lean-ification of classic textbooks like Spivak's or Axler's?  Should there be?</p>",
        "id": 342426244,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1679002281
    },
    {
        "content": "<p>Not yet! But if they're of good enough quality I think they could certainly live in the <code>mathlib/archive</code> folder</p>",
        "id": 342426388,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679002333
    },
    {
        "content": "<p>Perhaps I'm getting ahead of myself.  First I can do some formalizing, then we can worry about where to  house it.  :)</p>",
        "id": 342426414,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1679002344
    },
    {
        "content": "<p>There's also another repository, the <a href=\"https://github.com/leanprover-community/mathzoo\">mathzoo</a> that accepts more. The reason for being picky for mathlib is that every extra line of code is code that has to be maintained by the maintainers (and also all of mathlib has to pass continuous integration)</p>",
        "id": 342426579,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679002428
    },
    {
        "content": "<p>Sure, I understand, and it makes perfect sense.  Making something new and shiny is fun; maintenance is less fun, so can be harder for random contributors like me to keep up with.  :)</p>",
        "id": 342426789,
        "sender_full_name": "Martin C. Martin",
        "timestamp": 1679002528
    },
    {
        "content": "<p>Should we start listing all such textbook formalisations somewhere? I know several people have worked on Linear Algebra Done Right in the past already.</p>",
        "id": 342426801,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1679002532
    },
    {
        "content": "<p>I think there's no harm in having another, but yeah, it would be good to have an informal list of formalization projects</p>",
        "id": 342427848,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1679002995
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/What.20should.20I.20contribute.20to.20mathlib.3F/near/342426801\">said</a>:</p>\n<blockquote>\n<p>Should we start listing all such textbook formalisations somewhere? I know several people have worked on Linear Algebra Done Right in the past already.</p>\n</blockquote>\n<p>yes please! Axler's coming out with an open content version soon -- would be fun to accompany that with corresponding proofs.</p>",
        "id": 342440283,
        "sender_full_name": "Arien Malec",
        "timestamp": 1679008626
    }
]