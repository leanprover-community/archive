[
    {
        "content": "<p>Heine-Cantor Theorem. <br>\nI am trying to prove that a continuous function on a closed Ball (thus compact) is uniformly continuous. Does anybody know if this is in mathlib already?</p>",
        "id": 366677960,
        "sender_full_name": "Michael Lopez",
        "timestamp": 1686885911
    },
    {
        "content": "<p>I am trying to find the Heine-Cantor Theorem in mathlib. Does anybody know where to find it?</p>",
        "id": 366678334,
        "sender_full_name": "Michael Lopez",
        "timestamp": 1686886138
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> has marked this topic as unresolved.</p>",
        "id": 366679158,
        "sender_full_name": "Notification Bot",
        "timestamp": 1686886615
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CompactSpace.uniformContinuous_of_continuous#doc\">docs4#CompactSpace.uniformContinuous_of_continuous</a></p>",
        "id": 366679180,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1686886623
    },
    {
        "content": "<p>Thank you!. I wonder now if there is a way to turn a Metric.closedBall type into a IsCompact type?</p>",
        "id": 366870629,
        "sender_full_name": "Michael Lopez",
        "timestamp": 1686929359
    },
    {
        "content": "<p>Do you mean <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ProperSpace.isCompact_closedBall#doc\">docs4#ProperSpace.isCompact_closedBall</a> ?</p>",
        "id": 366884241,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1686931933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"622368\">@Michael Lopez</span> sometimes the best way is to ask on Zulip, but there's also a really handy tactic called <code>exact?</code> (this used to be called <code>library_search</code>) which can help you with this kind of thing. For example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Instances.Real</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IsCompact</span> <span class=\"o\">(</span><span class=\"n\">Metric.closedBall</span> <span class=\"n\">x</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span><span class=\"bp\">?</span> <span class=\"c1\">-- Try this: `exact isCompact_closedBall x ε`</span>\n</code></pre></div>",
        "id": 366889706,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1686933158
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 366908232,
        "sender_full_name": "Michael Lopez",
        "timestamp": 1686937724
    }
]