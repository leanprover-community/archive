[
    {
        "content": "<p>Hi, I am interested in implementing <a href=\"https://en.wikipedia.org/wiki/Wreath_product\">wreath products</a> in lean (currently lean 3). I have a small working definition for unrestricted wreath products reducing it to a semidirect product such as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">B</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">mul_action</span> <span class=\"n\">A</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n\n<span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">wreath_product_1</span> <span class=\"o\">:=</span> <span class=\"n\">semidirect_product</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"n\">A</span> <span class=\"n\">wreath_product.φ</span>\n\n<span class=\"kd\">notation</span> <span class=\"n\">B</span><span class=\"bp\">`</span> <span class=\"bp\">≀</span><span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">35</span> <span class=\"n\">L</span><span class=\"o\">:</span><span class=\"mi\">35</span><span class=\"bp\">`</span><span class=\"o\">]</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"n\">A</span> <span class=\"o\">:</span><span class=\"mi\">35</span> <span class=\"o\">:=</span> <span class=\"n\">wreath_product_1</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">L</span>\n</code></pre></div>\n<p>where <code>ẁreath_product.φ : A →* mul_aut (L → B)</code> given by the reindexing action <code>λ (a : A) (f : L → B) (l: L), f (has_smul.smul a⁻¹ l)</code>. Most of the file is currently showing that this definition lifts to <code>A →* mul_aut (L → B)</code>.</p>\n<p>I also want to consider restricted wreath products.  But here I am not sure how to deal with the type classes: semidirect products are defined for (multiplicative) groups, but finsupp is defined for <code>has_zero B</code>.  I also want to consider groups B that are noncommutative, so I am reluctant to use additive notation for B. I saw that <span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span> was thinking of <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Finsupp.20generalisations/near/306301812\">generalizing finsupp</a>. Has there been any progress there? Any good suggestions on how to proceed? I don't really want to reinvent the wheel but I also don't know how to glue the current definitions together.</p>",
        "id": 320273166,
        "sender_full_name": "Bernhard Reinke",
        "timestamp": 1673282639
    },
    {
        "content": "<p>I stopped working on that PR to give more effort to porting mathlib3 to mathlib4. I don't intend to continue with that PR, I might submit something similar for mathlib4 after the port.</p>",
        "id": 320284042,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1673285569
    },
    {
        "content": "<p><del>Could you use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/free_monoid\">docs#free_monoid</a> instead of finsupp?</del></p>",
        "id": 320286116,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673286154
    }
]