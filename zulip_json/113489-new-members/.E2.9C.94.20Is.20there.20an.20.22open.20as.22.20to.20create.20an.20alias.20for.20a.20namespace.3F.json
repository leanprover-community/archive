[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">for</span> <span class=\"kd\">example</span><span class=\"o\">:</span>\n<span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n  <span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n<span class=\"kd\">end</span> <span class=\"n\">Foo</span>\n\n<span class=\"c1\">-- something like</span>\n<span class=\"kn\">open</span> <span class=\"n\">Foo</span> <span class=\"n\">as</span> <span class=\"n\">F</span>\n<span class=\"kn\">open</span> <span class=\"n\">Foo</span> <span class=\"kn\">renaming</span> <span class=\"n\">self</span> <span class=\"bp\">â†’</span> <span class=\"n\">F</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">F.a</span>\n</code></pre></div>",
        "id": 355289740,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1683073938
    },
    {
        "content": "<p>I assume you mean <code>open as</code> not <code>import as</code>, since <code>import</code> doesn't provide any names related to the filename anyway</p>",
        "id": 355289840,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683073995
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Is.20there.20an.20.22open.20as.22.3F/near/355289840\">said</a>:</p>\n<blockquote>\n<p>I assume you mean <code>open as</code> not <code>import as</code>, since <code>import</code> doesn't provide any names related to the filename anyway</p>\n</blockquote>\n<p>Yes. I've changed the title.</p>",
        "id": 355291553,
        "sender_full_name": "MonadMaverick",
        "timestamp": 1683074906
    },
    {
        "content": "<p>I don't think there is. Lean 3 had all sorts of complicated additional syntax on <code>open</code> (in particular some support for renaming) but my understanding (?) is that this was all dropped in Lean 4.</p>",
        "id": 355294570,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683076708
    },
    {
        "content": "<p>You can do it a name at a time:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n  <span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n  <span class=\"kd\">def</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">6</span>\n<span class=\"kd\">end</span> <span class=\"n\">Foo</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">F</span>\n<span class=\"kn\">export</span> <span class=\"n\">Foo</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"kd\">end</span> <span class=\"n\">F</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">F.a</span>\n<span class=\"k\">#check</span> <span class=\"n\">F.b</span>\n</code></pre></div>",
        "id": 355296162,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1683077690
    },
    {
        "content": "<p>That makes the new aliases accessible outside the current namespace/module. If you don't want that, you can also use <code>open ... renaming ...</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n  <span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n  <span class=\"kd\">def</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">6</span>\n<span class=\"kd\">end</span> <span class=\"n\">Foo</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Foo</span> <span class=\"kn\">renaming</span> <span class=\"n\">a</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">F.a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">F.b'</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">F.a</span>\n<span class=\"k\">#check</span> <span class=\"n\">F.b'</span>\n</code></pre></div>",
        "id": 355296386,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1683077861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"604291\">MonadMaverick</span> has marked this topic as resolved.</p>",
        "id": 355632940,
        "sender_full_name": "Notification Bot",
        "timestamp": 1683161752
    }
]