[
    {
        "content": "<p>can I use this slack for lean syntax questions?</p>",
        "id": 262964218,
        "sender_full_name": "mario jose",
        "timestamp": 1638157462
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/.E2.9C.94.20PR.20with.20dependencies\">#general &gt; ✔ PR with dependencies</a> by <span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span></p>",
        "id": 262964254,
        "sender_full_name": "Notification Bot",
        "timestamp": 1638157510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"460501\">@mario jose</span> Yes, but ask here (<a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a> )</p>",
        "id": 262964273,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1638157545
    },
    {
        "content": "<p>okay why #check λ x : α, f (f x) is   α -&gt;  α , maybe this is lambda syntax and not a lean question sorry if it is the case</p>",
        "id": 262964449,
        "sender_full_name": "mario jose",
        "timestamp": 1638157809
    },
    {
        "content": "<p>okay i think i get it its lambda syntax</p>",
        "id": 262964488,
        "sender_full_name": "mario jose",
        "timestamp": 1638157877
    },
    {
        "content": "<p>Yes, Lean uses the syntax <code>λ x : α, &lt;expression using x&gt;</code> to denote a function that maps all <code>x</code> (of type <code>α</code> in this case) to some value that can depend on <code>x</code>. <br>\nAssuming <code>f</code> to be a function of type <code>α -&gt; α</code>, the expression <code>f (f x)</code> will also be of type <code>α</code>. So your entire lambda expression ends up being a function of type <code>α -&gt; α</code>.</p>",
        "id": 262982115,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1638177130
    }
]