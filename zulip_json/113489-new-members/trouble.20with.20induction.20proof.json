[
    {
        "content": "<p>Hello there, I have a function norm_neg which transforms a boolean formula into its negation normal form(only have negations on variables) and a function valid which evaluates formulas. both functions use the inductive form which represents its formula. As a final assignment i need to prove the correctness of norm_neg which I figured I would do by proving that valid V p -&gt; valid V norm_neg(p) or if formula p is valid it is also valid in negation normal form. I have managed to solver the first 5 cases (var,true,false,and,or) but the last ones require more effort due to the fact they have multiple cases in norm_neg. I have tried both induction and cases but still fail to see a way to prove it with the given induction hypothesis so I am wondering if there is a different way to handle this.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n\n<span class=\"kd\">inductive</span> <span class=\"n\">form</span><span class=\"o\">:</span><span class=\"kt\">Type</span>\n<span class=\"bp\">|</span><span class=\"n\">Fvar</span><span class=\"o\">:</span><span class=\"n\">string</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span>\n<span class=\"bp\">|</span><span class=\"n\">Ftrue</span><span class=\"o\">:</span><span class=\"n\">form</span>\n<span class=\"bp\">|</span><span class=\"n\">Ffalse</span><span class=\"o\">:</span><span class=\"n\">form</span>\n<span class=\"bp\">|</span><span class=\"n\">Fand</span><span class=\"o\">:</span><span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span>\n<span class=\"bp\">|</span><span class=\"n\">Ffor</span><span class=\"o\">:</span><span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span>\n<span class=\"bp\">|</span><span class=\"n\">Fimpl</span><span class=\"o\">:</span><span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span>\n<span class=\"bp\">|</span><span class=\"n\">Fneg</span><span class=\"o\">:</span><span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">valuation</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">string</span><span class=\"bp\">-&gt;</span><span class=\"n\">bool</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">valid'</span><span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">valuation</span><span class=\"o\">):</span> <span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">bool</span>\n  <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fvar</span> <span class=\"n\">x</span><span class=\"o\">):=</span> <span class=\"n\">V</span> <span class=\"n\">x</span>\n  <span class=\"bp\">|</span><span class=\"n\">form.Ftrue</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n  <span class=\"bp\">|</span><span class=\"n\">form.Ffalse</span> <span class=\"o\">:=</span> <span class=\"n\">false</span>\n  <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fand</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">):=</span> <span class=\"o\">(</span><span class=\"n\">valid'</span> <span class=\"n\">f1</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">valid'</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Ffor</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">):=</span> <span class=\"o\">(</span><span class=\"n\">valid'</span> <span class=\"n\">f1</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">valid'</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f1</span><span class=\"o\">):=</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">valid'</span> <span class=\"n\">f1</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fimpl</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">):=</span> <span class=\"o\">(</span><span class=\"n\">valid'</span> <span class=\"n\">f1</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"o\">(</span><span class=\"n\">valid'</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n\n\n\n\n<span class=\"kd\">def</span> <span class=\"n\">valid</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">valuation</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">form</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">:=</span> <span class=\"n\">valid'</span> <span class=\"n\">V</span> <span class=\"n\">p</span>\n<span class=\"kd\">def</span> <span class=\"n\">norm_neg</span><span class=\"o\">:</span> <span class=\"n\">form</span><span class=\"bp\">-&gt;</span><span class=\"n\">form</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f1</span><span class=\"o\">)):=</span> <span class=\"n\">norm_neg</span><span class=\"o\">(</span><span class=\"n\">f1</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span><span class=\"o\">(</span><span class=\"n\">form.Fand</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">)):=</span> <span class=\"n\">form.Ffor</span><span class=\"o\">(</span><span class=\"n\">norm_neg</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span>  <span class=\"n\">f1</span><span class=\"o\">))(</span><span class=\"n\">norm_neg</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span>  <span class=\"n\">f2</span><span class=\"o\">))</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span><span class=\"o\">(</span><span class=\"n\">form.Ffor</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">)):=</span> <span class=\"n\">form.Fand</span><span class=\"o\">(</span><span class=\"n\">norm_neg</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span>  <span class=\"n\">f1</span><span class=\"o\">))(</span><span class=\"n\">norm_neg</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span>  <span class=\"n\">f2</span><span class=\"o\">))</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span><span class=\"o\">(</span><span class=\"n\">form.Fimpl</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">)):=</span> <span class=\"n\">form.Fand</span><span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f2</span><span class=\"o\">))</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fand</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">):=</span> <span class=\"n\">form.Fand</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Ffor</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">):=</span> <span class=\"n\">form.Ffor</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fimpl</span> <span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f1</span><span class=\"o\">)</span> <span class=\"n\">f2</span><span class=\"o\">):=</span><span class=\"n\">form.Ffor</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fimpl</span> <span class=\"o\">(</span><span class=\"n\">form.Fand</span> <span class=\"n\">f11</span> <span class=\"n\">f12</span><span class=\"o\">)</span> <span class=\"n\">f2</span><span class=\"o\">):=</span><span class=\"n\">form.Ffor</span> <span class=\"o\">(</span><span class=\"n\">form.Ffor</span><span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f11</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f12</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fimpl</span> <span class=\"o\">(</span><span class=\"n\">form.Ffor</span> <span class=\"n\">f11</span> <span class=\"n\">f12</span><span class=\"o\">)</span> <span class=\"n\">f2</span><span class=\"o\">):=</span><span class=\"n\">form.Ffor</span> <span class=\"o\">(</span><span class=\"n\">form.Fand</span><span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f11</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f12</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fimpl</span> <span class=\"o\">(</span><span class=\"n\">form.Fimpl</span> <span class=\"n\">f11</span> <span class=\"n\">f12</span><span class=\"o\">)</span> <span class=\"n\">f2</span><span class=\"o\">):=</span><span class=\"n\">form.Ffor</span> <span class=\"o\">(</span><span class=\"n\">form.Fneg</span><span class=\"o\">(</span><span class=\"n\">form.Ffor</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"o\">(</span><span class=\"n\">form.Fneg</span> <span class=\"n\">f11</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f12</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span> <span class=\"n\">f2</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">form.Fimpl</span> <span class=\"n\">f1</span> <span class=\"n\">f2</span><span class=\"o\">):=</span> <span class=\"n\">form.Ffor</span><span class=\"o\">(</span><span class=\"n\">form.Fneg</span>  <span class=\"n\">f1</span><span class=\"o\">)(</span><span class=\"n\">norm_neg</span>  <span class=\"n\">f2</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n\n\n<span class=\"kd\">lemma</span> <span class=\"n\">correct_norm</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span><span class=\"n\">form</span><span class=\"o\">)(</span><span class=\"n\">V</span><span class=\"o\">:</span><span class=\"n\">valuation</span><span class=\"o\">):</span> <span class=\"n\">valid</span> <span class=\"n\">V</span> <span class=\"n\">p</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">valid</span> <span class=\"n\">V</span> <span class=\"o\">(</span><span class=\"n\">norm_neg</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">)):=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">induction</span> <span class=\"n\">p</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">ih1</span> <span class=\"n\">ih2</span> <span class=\"n\">aa</span> <span class=\"n\">bb</span> <span class=\"n\">ih_aa</span> <span class=\"n\">ih_bb</span> <span class=\"n\">cc</span> <span class=\"n\">dd</span> <span class=\"n\">ih_cc</span> <span class=\"n\">ih_dd</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span><span class=\"o\">{</span> <span class=\"c1\">--Var,True and False</span>\n  <span class=\"n\">intro</span> <span class=\"n\">sat</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"n\">norm_neg</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"n\">sat</span>\n<span class=\"o\">},</span>\n<span class=\"o\">{</span><span class=\"c1\">--And</span>\n  <span class=\"n\">intro</span> <span class=\"n\">sat</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"n\">norm_neg</span><span class=\"o\">],</span>\n  <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"n\">valid'</span><span class=\"o\">,</span><span class=\"n\">valid</span><span class=\"o\">],</span>\n  <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"n\">valid</span><span class=\"o\">,</span><span class=\"n\">valid'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">sat</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">and.intro</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span><span class=\"n\">apply</span> <span class=\"n\">ih1</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">valid</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">sat.left</span><span class=\"o\">},</span>\n  <span class=\"o\">{</span><span class=\"n\">apply</span> <span class=\"n\">ih2</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">valid</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">sat.right</span><span class=\"o\">}</span>\n<span class=\"o\">},</span>\n<span class=\"o\">{</span><span class=\"c1\">--Or</span>\n  <span class=\"n\">intro</span> <span class=\"n\">sat</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"n\">norm_neg</span><span class=\"o\">],</span>\n  <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"n\">valid'</span><span class=\"o\">,</span><span class=\"n\">valid</span><span class=\"o\">],</span>\n  <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"n\">valid</span><span class=\"o\">,</span><span class=\"n\">valid'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">sat</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">sat</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span><span class=\"n\">apply</span> <span class=\"n\">or.intro_left</span><span class=\"o\">,</span>\n   <span class=\"n\">apply</span> <span class=\"n\">ih_aa</span><span class=\"o\">,</span>\n   <span class=\"n\">rw</span> <span class=\"n\">valid</span><span class=\"o\">,</span>\n   <span class=\"n\">exact</span> <span class=\"n\">sat</span><span class=\"o\">},</span>\n    <span class=\"o\">{</span><span class=\"n\">apply</span> <span class=\"n\">or.intro_right</span><span class=\"o\">,</span>\n   <span class=\"n\">apply</span> <span class=\"n\">ih_bb</span><span class=\"o\">,</span>\n   <span class=\"n\">rw</span> <span class=\"n\">valid</span><span class=\"o\">,</span>\n   <span class=\"n\">exact</span> <span class=\"n\">sat</span><span class=\"o\">}</span>\n<span class=\"o\">},</span>\n<span class=\"o\">{</span><span class=\"c1\">--Implies</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"o\">},</span>\n<span class=\"o\">{</span><span class=\"c1\">--Not</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"kd\">end</span>\n</code></pre></div>\n</div></div>",
        "id": 324972729,
        "sender_full_name": "Henkie67",
        "timestamp": 1675186276
    },
    {
        "content": "<p>You need to prove other theorems about <code>valid</code> that let you rewrite the terms. For example, you may need</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">valuation</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">form</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">valid</span> <span class=\"n\">V</span> <span class=\"o\">(</span><span class=\"n\">a.Ffor</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">valid</span> <span class=\"n\">V</span> <span class=\"o\">(</span><span class=\"n\">a.Fneg.Fimpl</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">valuation</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">form</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">valid</span> <span class=\"n\">V</span> <span class=\"n\">a.Fneg.Fneg</span> <span class=\"bp\">↔</span> <span class=\"n\">valid</span> <span class=\"n\">V</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>and similar theorems, so that you can transform the goal state by rewriting using those theorems. Try to write your proof on paper and then translate it to Lean. That's usually the best approach.</p>",
        "id": 324979845,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1675188215
    },
    {
        "content": "<p>I am trying but for some cases I am having trouble deducing them</p>",
        "id": 324998725,
        "sender_full_name": "Henkie67",
        "timestamp": 1675193528
    },
    {
        "content": "<p>ik keep getting this<br>\n<a href=\"/user_uploads/3121/GEY0qyxfbBNyEpYPFc9fA-u9/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/GEY0qyxfbBNyEpYPFc9fA-u9/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/GEY0qyxfbBNyEpYPFc9fA-u9/image.png\"></a></div>",
        "id": 325001944,
        "sender_full_name": "Henkie67",
        "timestamp": 1675194601
    },
    {
        "content": "<p>That goal can be solved by <code>rwa [or_iff_not_imp_left, eq_tt_eq_not_eq_ff]</code></p>",
        "id": 325010020,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1675197173
    }
]