[
    {
        "content": "<p>While reviewing this <a href=\"https://github.com/leanprover-community/mathlib4/pull/5911\">#5911</a> I noticed that it would be convenient if <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsAntisymm.swap#doc\">docs#IsAntisymm.swap</a> was an instance.</p>\n<p>Is there any reason why it (and various sibling lemmas) could not be promoted to be instances?</p>",
        "id": 377219322,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1689929434
    },
    {
        "content": "<p>No we already made the same remark before the port</p>",
        "id": 377233556,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1689932309
    },
    {
        "content": "<p>I commented on the PR, but if we make it be an instance I'd suggest making it be lower-priority so that typeclass inference doesn't unnecessarily swap the arguments before it needs to. (Note that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.swap#doc\">docs#Function.swap</a> is reducible, so this instance would always apply.)</p>",
        "id": 377236585,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689933025
    },
    {
        "content": "<p>I see, it didn't occur to me that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.swap#doc\">docs#Function.swap</a> was reducible (and anyway I wouldn't have been confident that typeclass inference would see through a reducible def). Thanks for the comments!</p>",
        "id": 377258257,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1689937562
    }
]