[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7810\">#7810</a> is failing CI in the tests for LibrarySearch, but I can't reproduce it locally. This doesn't touch any meta code, so this is rather surprising.</p>",
        "id": 404408666,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701090617
    },
    {
        "content": "<p>Is that the same error that <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> keeps hitting?</p>",
        "id": 404409051,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1701090763
    },
    {
        "content": "<p>Yep that's exactly the same!</p>",
        "id": 404414372,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1701092483
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/287929-mathlib4/topic/Obscure.20test.20fail\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Obscure.20test.20fail</a></p>",
        "id": 404414789,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1701092627
    },
    {
        "content": "<p>The failure message is now:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">test</span><span class=\"bp\">/</span><span class=\"n\">LibrarySearch</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span><span class=\"o\">:</span><span class=\"mi\">228</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Tactic</span> <span class=\"bp\">`</span><span class=\"n\">exact</span><span class=\"bp\">?`</span> <span class=\"n\">produced</span> <span class=\"bp\">`</span><span class=\"n\">exact</span> <span class=\"n\">ge_antisymm</span> <span class=\"n\">hyx</span> <span class=\"n\">hxy</span><span class=\"bp\">`</span><span class=\"o\">,</span>\n<span class=\"n\">but</span> <span class=\"n\">was</span> <span class=\"n\">expecting</span> <span class=\"n\">it</span> <span class=\"n\">to</span> <span class=\"n\">produce</span> <span class=\"bp\">`</span><span class=\"n\">exact</span> <span class=\"n\">le_antisymm</span> <span class=\"n\">hxy</span> <span class=\"n\">hyx</span><span class=\"bp\">`!</span>\n</code></pre></div>",
        "id": 405121640,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701352262
    }
]