[
    {
        "content": "<p>My PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/6856\">#6856</a> (which is supposed to significantly help with proofs about grammars) has been rotting for past six weeks.</p>\n<p>My suggestions are:<br>\n<code>List.length_append_append</code> and <code>List.reverse_append_append</code> stay where they are.<br>\n<code>List.middle_xYz_left</code> and <code>List.match_xYz</code> will go to a different file, which will have <code>linarith</code> available.<br>\n<code>List.todo_refactor</code> can then be deleted.</p>\n<p>If you think it is better to keep <code>List.match_xYz</code> in the same file, then <code>List.todo_refactor</code> will need a proper name.</p>",
        "id": 396551749,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697220640
    },
    {
        "content": "<p>I'm curious about whether the refactor to define <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContextFreeRule.RewritesTo#doc\">docs#ContextFreeRule.RewritesTo</a> as an inductive type means there's an easier proof in your application</p>",
        "id": 396552205,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697220873
    },
    {
        "content": "<p>Even if not in context-free grammars due to your refactor, I believe <code>List.match_xYz</code> will be still useful later when we work with general grammars or with Turing machines for example.</p>",
        "id": 396553526,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697221568
    },
    {
        "content": "<p>I agree the lemma still looks reasonable</p>",
        "id": 396568311,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697229663
    },
    {
        "content": "<p>Please look at the main result (I renamed it):<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/de95949bf9a963cd602f1819d4e04b8f895642f3/Mathlib/Data/List/Basic.lean#L2596\">https://github.com/leanprover-community/mathlib4/blob/de95949bf9a963cd602f1819d4e04b8f895642f3/Mathlib/Data/List/Basic.lean#L2596</a></p>\n<p>Which file should it go to? Or should it stay in <code>Mathlib.Data.List.Basic</code> as it is now?</p>",
        "id": 396769168,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697388757
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.236856.20match_xYz/near/396551749\">said</a>:</p>\n<blockquote>\n<p>My PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/6856\">#6856</a> has been rotting for past six weeks.</p>\n</blockquote>\n<p>This is probably because you never marked it \"awaiting review\"</p>",
        "id": 396859027,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697448234
    },
    {
        "content": "<p>Not \"never\" but definitely \"not in the past six weeks\".</p>",
        "id": 396859349,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697448338
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.236856.20match_xYz/near/396859027\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.236856.20match_xYz/near/396551749\">said</a>:</p>\n<blockquote>\n<p>My PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/6856\">#6856</a> has been rotting for past six weeks.</p>\n</blockquote>\n<p>This is probably because you never marked it \"awaiting review\"</p>\n</blockquote>\n<p>Isn't \"RFC\" better for stuff that isn't mergeable?</p>",
        "id": 396859539,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697448396
    },
    {
        "content": "<p>\"awaiting author\" is \"I received comments and plan to act on them, but haven't yet\"</p>",
        "id": 396859595,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697448420
    },
    {
        "content": "<p>I don't think there's a clear statement on what the RFC label is for anywhere</p>",
        "id": 396859670,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697448448
    },
    {
        "content": "<p>Certainly, it does not make the PR show up on <a href=\"https://bit.ly/3cKk3ld\">#queue</a>, which is a bit bad.</p>",
        "id": 396859734,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697448479
    },
    {
        "content": "<p>What is the correct tag for \"I want you to review my PR for answering my question\" rather than \"I want you to review my PR for merging\"?</p>\n<p>I thought \"RFC\" was for it. I thought \"awaiting review\" was a wrong tag for a PR that was clearly not mergeable.</p>",
        "id": 396859951,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697448547
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.236856.20match_xYz/near/396859349\">said</a>:</p>\n<blockquote>\n<p>Not \"never\" but definitely \"not in the past six weeks\".</p>\n</blockquote>\n<p>I removed the tag because at least one lemma had a temporary name (and was probably going to be removed altogether).</p>",
        "id": 396860178,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1697448615
    },
    {
        "content": "<p>I think the rule for Mathlib is basically that if you want answers to questions, you either need to request reviews from individuals, or (probably better) start a thread here.</p>",
        "id": 396862335,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697449321
    },
    {
        "content": "<p>Or both :)</p>",
        "id": 396862633,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697449420
    },
    {
        "content": "<p>If you do make a thread here, it's usually helpful to add a link to the thread in the PR description (either under or over the <code>---</code>, depending on whether you think the thread will have anything interesting in it)</p>",
        "id": 396862746,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697449447
    },
    {
        "content": "<p>Which file should <code>List.append_singleton_append_inj_of_nmem</code> go to?</p>\n<p>After determining the best file for my lemma, I will make it ready for review (the current form is not acceptable).</p>",
        "id": 403985988,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1700839364
    },
    {
        "content": "<p>Did you try <code>#find_home</code> ?</p>",
        "id": 403986468,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700839545
    },
    {
        "content": "<p>Its answer <code>Mathlib.Data.List.Basic</code> is not particularly relevant.<br>\nI am asking where we <em>want</em> the lemma to be.</p>",
        "id": 403987326,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1700839855
    },
    {
        "content": "<p>Did you try the <code>!</code> variant?</p>",
        "id": 403989047,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700840622
    },
    {
        "content": "<p>... and with <code>import Mathlib</code>?</p>",
        "id": 403989064,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700840632
    },
    {
        "content": "<p>Yeah I'm not sure whats wrong with <code>Mathlib.Data.List.Basic</code> though? What do you not like about it</p>",
        "id": 403989359,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700840750
    },
    {
        "content": "<p>I am fine with <code>Mathlib.Data.List.Basic</code> but I thought that somebody might object it for my lemma not being \"basic\" enough. Another reason is that, if <code>List.append_singleton_append_inj_of_nmem</code> was moved to a \"lower\" file, I could use <code>linarith</code> to shorten its proof.</p>",
        "id": 404082477,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1700902631
    },
    {
        "content": "<p>Adding extra dependencies in order to shorten proofs doesn't seem desirable in general. It seems fine where it is to me</p>",
        "id": 404121454,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700927228
    },
    {
        "content": "<p>OK, I'll golf it then and keep it where it is.</p>",
        "id": 404169175,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1700950656
    }
]