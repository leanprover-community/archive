[
    {
        "content": "<p>This is ready for review. The theorem is stated via the following results: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">basis_mod_torsion</span> <span class=\"o\">:</span> <span class=\"n\">Basis</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">Units.rank</span> <span class=\"n\">K</span><span class=\"o\">))</span> <span class=\"n\">ℤ</span> <span class=\"o\">(</span><span class=\"n\">Additive</span> <span class=\"o\">((</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">ˣ</span> <span class=\"bp\">⧸</span> <span class=\"o\">(</span><span class=\"n\">torsion</span> <span class=\"n\">K</span><span class=\"o\">)))</span>\n</code></pre></div>\n<p>where <code>Units.rank := Fintype.card (InfinitePlace K) - 1</code> and </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">exist_unique_eq_mul_prod</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">ˣ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∃!</span> <span class=\"o\">(</span><span class=\"n\">ζ</span> <span class=\"o\">:</span> <span class=\"n\">torsion</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">Units.rank</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℤ</span><span class=\"o\">),</span>\n    <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">ζ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fund_system</span> <span class=\"n\">K</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>where <code>fund_system : Fin (rank K) → (𝓞 K)ˣ</code> is a fundamental system of units. The exponents in <code>exist_unique_eq_mul_prod</code> can be computed via the following result:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">fun_eq_repr</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">ζ</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">ˣ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">rank</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hζ</span> <span class=\"o\">:</span> <span class=\"n\">ζ</span> <span class=\"bp\">∈</span> <span class=\"n\">torsion</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">ζ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">fund_system</span> <span class=\"n\">K</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">basis_mod_torsion</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">repr</span> <span class=\"o\">(</span><span class=\"n\">Additive.ofMul</span> <span class=\"bp\">↑</span><span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>This PR depends on several others: PRs: <a href=\"https://github.com/leanprover-community/mathlib4/pull/5518\">#5518</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/5650\">#5650</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/5728\">#5728</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/6436\">#6436</a>,</p>",
        "id": 383446113,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1691629565
    }
]