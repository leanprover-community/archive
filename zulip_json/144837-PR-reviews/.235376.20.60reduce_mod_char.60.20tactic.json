[
    {
        "content": "<p>The <code>reduce_mod_char</code> tactic refuses to rewrite at a hypothesis. It looks like <code>expandOptLocation</code> always returns <code>.targets [] false</code> when specifying <code>reduce_mod_char at h</code>. In fact, even when I write <code>reduce_mod_char at *</code> it doesn't return <code>.wildcard</code>. I have entirely cargo culted this bit of the tactic, so can anyone help debug this?</p>",
        "id": 399276321,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1698663078
    },
    {
        "content": "<p>You can just use <code>expandLocation</code> in place of <code>expandOptLocation</code></p>",
        "id": 399303517,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698673152
    },
    {
        "content": "<p>But probably cleanest is to do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elab_rules</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">reduce_mod_char</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">loc</span><span class=\"o\">]</span><span class=\"bp\">?</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">unsafe</span>\n  <span class=\"n\">withMainContext</span> <span class=\"k\">do</span>\n    <span class=\"k\">match</span> <span class=\"n\">expandOptLocation</span> <span class=\"o\">(</span><span class=\"n\">Lean.mkOptionalNode</span> <span class=\"n\">loc</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Location.targets</span> <span class=\"n\">hyps</span> <span class=\"n\">target</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"k\">if</span> <span class=\"n\">target</span> <span class=\"k\">then</span> <span class=\"n\">reduceModCharTarget</span>\n      <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">getFVarIds</span> <span class=\"n\">hyps</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">forM</span> <span class=\"n\">reduceModCharHyp</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Location.wildcard</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">reduceModCharTarget</span>\n      <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">getMainGoal</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">getNondepPropHyps</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">forM</span> <span class=\"n\">reduceModCharHyp</span>\n</code></pre></div>",
        "id": 399303824,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698673238
    },
    {
        "content": "<p>and you probably  don't need the <code>withMainContext</code> then either</p>",
        "id": 399303923,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698673275
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elab_rules</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"n\">reduce_mod_char</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">loc</span><span class=\"o\">]</span><span class=\"bp\">?</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">unsafe</span> <span class=\"k\">do</span>\n  <span class=\"k\">match</span> <span class=\"n\">expandOptLocation</span> <span class=\"o\">(</span><span class=\"n\">Lean.mkOptionalNode</span> <span class=\"n\">loc</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Location.targets</span> <span class=\"n\">hyps</span> <span class=\"n\">target</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">getFVarIds</span> <span class=\"n\">hyps</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">forM</span> <span class=\"n\">reduceModCharHyp</span>\n    <span class=\"k\">if</span> <span class=\"n\">target</span> <span class=\"k\">then</span> <span class=\"n\">reduceModCharTarget</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Location.wildcard</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">getMainGoal</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">getNondepPropHyps</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">forM</span> <span class=\"n\">reduceModCharHyp</span>\n    <span class=\"n\">reduceModCharTarget</span>\n</code></pre></div>\n<p>is my final answer <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> you get some weird issues if you reduce mod char the target first and it solves the goal when you try and get the hypotheses</p>",
        "id": 399304922,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698673574
    },
    {
        "content": "<p>Wonderful, thank you very much!</p>",
        "id": 399322046,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1698678630
    }
]