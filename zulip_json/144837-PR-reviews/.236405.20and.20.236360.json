[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"519559\">@Dagur Asgeirsson</span>  I had some comments about <a href=\"https://github.com/leanprover-community/mathlib4/pull/6360\">#6360</a> but I went to sleep and when I went back to my computer it was already merged by <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> <span aria-label=\"racecar\" class=\"emoji emoji-1f3ce\" role=\"img\" title=\"racecar\">:racecar:</span> so I'd like to discuss them here.</p>\n<p>First, I opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/6405\">#6405</a> with some golfing (and a bit of cleaning by opening namespaces). In particular, the new proofs don't need injectivity on top of linear independence.</p>\n<p>I also wanted to ask how much you care about the intermediate results about linear independent/spanning families? If  you only care about the final result, then I think we can get a much more direct proof by arguing that, since the right module is free, the exact sequence is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.RightSplit#doc\">docs#CategoryTheory.RightSplit</a>, then you can use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=lequivProdOfRightSplitExact#doc\">docs#lequivProdOfRightSplitExact</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Module.Free.prod#doc\">docs#Module.Free.prod</a> to get what you want (and it's also easy to get rank properties).</p>",
        "id": 382440132,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1691355458
    },
    {
        "content": "<p>Thanks! Iâ€™ll take a look at your new PR tomorrow. But regarding the intermediate results, I think there is really just one that I care about: the one about linear independence in left exact sequences <code>leftExact_linearIndependent</code> I think it was called. I think thatâ€™s the only one I use in the NÃ¶beling proof, but Iâ€™ll check again tomorrow to be sure.</p>",
        "id": 382443136,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1691357116
    },
    {
        "content": "<p>I was meaning to leave a few comments on this one too; notably that without <code> ``` </code> in your docstrings, the diagrams will look awful in the docs!</p>",
        "id": 382444395,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691358108
    },
    {
        "content": "<p>(<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ModuleCat.linearIndependent_leftExact#doc\">docs#ModuleCat.linearIndependent_leftExact</a>)</p>",
        "id": 382444468,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691358149
    },
    {
        "content": "<p>Hmm, I think the doc builds are stale so you can't tell yet...</p>",
        "id": 382444510,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691358201
    },
    {
        "content": "<p>Why is the doc stuck at 1 week ago?</p>\n<blockquote>\n<p>This was built using Lean 4 at commit <a href=\"https://github.com/leanprover/lean4/tree/2eaa400b8e641e88c3f97038c56390f98a818e23\">2eaa400b8e641e88c3f97038c56390f98a818e23</a></p>\n</blockquote>\n<p>(It would be nicer if <a href=\"https://leanprover-community.github.io/mathlib4_docs/\">the page</a> displays mathlib4 commit as well.)</p>",
        "id": 382446946,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1691359713
    },
    {
        "content": "<p>There's a discussion elsewhere, I think it's due to stability issues with version bumps and/or lake</p>",
        "id": 382447311,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691359972
    },
    {
        "content": "<p>Sorry to have merged it too quickly!</p>",
        "id": 382462033,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1691369419
    },
    {
        "content": "<p>No no donâ€™t worry, none of us had left any clues so you couldnâ€™t know ðŸ˜…</p>",
        "id": 382515117,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1691390879
    },
    {
        "content": "<p>So, the result I really need for Nobeling is <code>linearIndependent_leftExact</code>. I'd argue keeping also the intermediate result <code>span_exact</code>, since these together give access to a basis of <code>M</code>Â given bases of <code>N</code> and <code>P</code>. I'll separate out that basis as a <code>def</code>. I've added backticks around the diagrams and removed <code>family_injective_shortExact</code></p>",
        "id": 382540078,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1691397206
    },
    {
        "content": "<p>Well technicaly the argument I wrote in my first message also gives an explicit basis (basically the same, although there is some choice involved so it may not be exactly the same), but I'm fine with keeping things as they are</p>",
        "id": 382720520,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1691431417
    },
    {
        "content": "<p>It's just that the statement about left exact sequences fits my application perfectly. But I'm sure I could also deduce it from your argument</p>",
        "id": 382758803,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1691442382
    }
]