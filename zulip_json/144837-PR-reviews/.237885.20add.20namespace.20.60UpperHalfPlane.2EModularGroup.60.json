[
    {
        "content": "<p>I suggest adding namespace <code>UpperHalfPlane.ModularGroup</code> in <code>Mathlib/Analysis/Complex/UpperHalfPlane/Basic.lean</code> and moving the theorems and definitions about <code>SL(2, ℤ)</code> to this namespace, because we will need to build similar theorems and definitions for <code>SL(2, ℝ)</code> (probably under the namespace <code>UpperHalfPlane.SL2R</code>). We will also need the namespace <code>UpperHalfPlane.PSL2R</code> for <code>PSL(2, ℝ)</code>.</p>",
        "id": 399642523,
        "sender_full_name": "Wen Yang",
        "timestamp": 1698806406
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"389019\">@Chris Birkbeck</span></p>",
        "id": 399661932,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1698818217
    },
    {
        "content": "<p>Usually theorems and definitions about a type belong in a namespace that matches the name of the type, so it's not clear to me that the move in <a href=\"https://github.com/leanprover-community/mathlib4/pull/7885\">#7885</a> is a good idea</p>",
        "id": 399681906,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698828274
    },
    {
        "content": "<p>is this related to <a href=\"#narrow/stream/287929-mathlib4/topic/Crazy.20unification.20quests/near/399561602\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Crazy.20unification.20quests/near/399561602</a>?</p>",
        "id": 399682601,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1698828609
    },
    {
        "content": "<p>maybe not</p>",
        "id": 399682626,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1698828621
    },
    {
        "content": "<p>What about moving to <code>UpperHalfPlane.SL2Z</code>? We could reserve <code>ModularGroup</code> for <code>PSL(2, ℤ)</code>.</p>",
        "id": 399682694,
        "sender_full_name": "Wen Yang",
        "timestamp": 1698828661
    },
    {
        "content": "<p>I though we already had a modular group namespace, or was this in lean3?</p>",
        "id": 399682751,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1698828693
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.237885.20add.20namespace.20.60UpperHalfPlane.2EModularGroup.60/near/399682751\">发言道</a>：</p>\n<blockquote>\n<p>I though we already had a modular group namespace, or was this in lean3?</p>\n</blockquote>\n<p>Yes, there is <code>ModularGroup</code> in mathlib4.</p>",
        "id": 399683204,
        "sender_full_name": "Wen Yang",
        "timestamp": 1698828908
    },
    {
        "content": "<p><code>ModularGroup</code> is a namespace in <code>NumberTheory/Modular.lean</code></p>",
        "id": 399683271,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1698828942
    },
    {
        "content": "<p>I think the content under the namespace <code>ModularGroup</code> in mathlib4 essentially express the content about <code>PSL(2, ℤ)</code> in terms of <code>SL(2, ℤ)</code>.</p>",
        "id": 399684576,
        "sender_full_name": "Wen Yang",
        "timestamp": 1698829403
    }
]