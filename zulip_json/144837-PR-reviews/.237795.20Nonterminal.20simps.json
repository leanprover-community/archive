[
    {
        "content": "<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span> <a href=\"https://github.com/leanprover-community/mathlib4/pull/7795\">#7795</a> is another nonterminal simp chore PR that touches many files, so I'd appreciate a speedy review if possible.</p>",
        "id": 397955779,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1697991793
    },
    {
        "content": "<p>How would people feel about starting to use <code>says</code> regularly? I think a significant argument against <code>simp only</code> refactors is that they are obfuscatory: the reader can no longer see what had to be specified explicitly, and what was pulled from the simp set. <code>says</code> solves this problem.</p>",
        "id": 397974235,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698011359
    },
    {
        "content": "<p>I have been meaning to do some code folding magic so that the <code>says</code> is folded automatically on vscode</p>",
        "id": 398065594,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1698061074
    },
    {
        "content": "<p>Is there a convenient way of inducing VSCode to use this when I click on the \"try this\"</p>",
        "id": 398126148,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1698080736
    },
    {
        "content": "<p>Does <code>  simp? says</code> offer an option like this?</p>",
        "id": 398127199,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698081197
    },
    {
        "content": "<p>I guess we could add an option to the <code>Try this:</code> generator to suggest <code>says</code> replacements instead, perhaps this could be user configurable</p>",
        "id": 398135082,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698084816
    },
    {
        "content": "<p>This already happens:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span><span class=\"bp\">?</span> <span class=\"o\">[</span><span class=\"n\">add_comm</span><span class=\"o\">]</span> <span class=\"n\">says</span>\n<span class=\"c1\">--  suggests:</span>\n<span class=\"c1\">--  Try this: simp only [add_comm]</span>\n<span class=\"c1\">--  Try this: simp? [add_comm] says simp only [add_comm]</span>\n</code></pre></div>",
        "id": 398144462,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698089385
    },
    {
        "content": "<p>I was thinking of going though the library and turning a bunch of squeezed <em>terminal</em> simps (i.e. terminal <code>simp only [...]</code>) back into <code>simp</code>.  Would this be acceptable?</p>",
        "id": 398154341,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1698094183
    },
    {
        "content": "<p>One reason I squeeze a simp is that it might turn a 5 second proof into a 0.5 second proof.</p>",
        "id": 398155048,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1698094484
    },
    {
        "content": "<p>Why not convert them to <code>simp? says</code>?</p>",
        "id": 398155100,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698094511
    },
    {
        "content": "<p>Heather, I'm fine with that (or the <code>says</code> variant) as long as we run <code>!bench</code> to see the damage in case you don't use <code>says</code>.</p>",
        "id": 398155336,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698094630
    },
    {
        "content": "<p>I, for one, was not even aware of the existence of <code>says</code> before starting this quest to eliminate nonterminal <code>simp</code>, so it definitely seems like systematically going through and using <code>says</code> where it should be used could be good for increasing its visibility.</p>",
        "id": 398283211,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1698152114
    },
    {
        "content": "<p>Ok, this is passing CI again, thanks <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> for your help fixing the errors I encountered.</p>\n<p>If we want to merge this soon, I suggest not letting it rot. I will also note, though, that fixing all the errors made me a bit more pessimistic about <a href=\"https://github.com/leanprover-community/mathlib4/pull/7795#pullrequestreview-1691459730\">YaÃ«l's comment</a>.</p>",
        "id": 408201607,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1702652249
    },
    {
        "content": "<p>I am in favour of this PR, and would be happy to merge, but I'll wait for the dust to settle. :-)</p>",
        "id": 408275322,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1702685204
    }
]