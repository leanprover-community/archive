[
    {
        "content": "<p>While looking at <a href=\"https://github.com/leanprover-community/mathlib4/pull/6290\">#6290</a> I remarked that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.Commute#doc\">docs#Function.Commute</a> should probably be protected since it will always clash with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Commute#doc\">docs#Commute</a>, and so Thomas dutifully created <a href=\"https://github.com/leanprover-community/mathlib4/pull/6456\">#6456</a> per my request, but the diff is much worse than I expected. Was I wrong that <code>Function.Commute</code> should be protected?</p>",
        "id": 383354752,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691599689
    },
    {
        "content": "<p>I would have suggested that <code>Commute</code> should either not be in the root namespace, or given a different name like <code>MulCommute</code>. There are too many notions of commute for it to be given the root namespace.</p>",
        "id": 383360566,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1691600615
    },
    {
        "content": "<p><code>Algebra.Commute</code>? I guess that's sort of misusing the algebra namespace, but it makes it clear that it's an algebraic and not compositional notion</p>",
        "id": 383412884,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691613577
    },
    {
        "content": "<p>(it also is rather close to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Algebra.commutes#doc\">docs#Algebra.commutes</a>, which could be confusing)</p>",
        "id": 383412926,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691613593
    },
    {
        "content": "<p>Given that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddCommute#doc\">docs#AddCommute</a> is <em>already</em> the additive version of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Commute#doc\">docs#Commute</a>, I think the only thing that makes sense is <code>MulCommute</code></p>",
        "id": 383416144,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691614646
    },
    {
        "content": "<p>Note that we have other places like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Units#doc\">docs#Units</a> vs <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddUnitsor#doc\">docs#AddUnitsor</a> <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsRegular#doc\">docs#IsRegular</a> vs <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsAddRegular#doc\">docs#IsAddRegular</a> where only the additive version gets the prefix</p>",
        "id": 383421110,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691616494
    },
    {
        "content": "<p>sure, but in those cases we're not trying to rename the multiplicative version!</p>",
        "id": 383421211,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691616548
    },
    {
        "content": "<p>Well, arguably <code>Units</code> should be renamed <code>Unit</code> to match how to match how we say \"u is a unit\" not \"u is a units\", and now we have a name clash...</p>",
        "id": 383421951,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691616884
    },
    {
        "content": "<p>We have <code>Group</code> not <code>MulGroup</code></p>",
        "id": 383424191,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691617961
    },
    {
        "content": "<p>But at the end of the day I think Chris is right about the root namespace</p>",
        "id": 383424271,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691618017
    },
    {
        "content": "<p>What is an appropriate namespace? I'm having trouble thinking of a good one. (I really don't like <code>Algebra.</code> for this.)</p>",
        "id": 383428250,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691620156
    },
    {
        "content": "<p>Would you warm to <code>Algebra</code> if all the classes in <code>/Algebra</code> were also namespaced?</p>",
        "id": 383429989,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691621147
    },
    {
        "content": "<p>I guess, but that sounds worse! <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 383430880,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691621707
    },
    {
        "content": "<p>What about <code>Mul.Commute</code>?</p>",
        "id": 383432079,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691622406
    },
    {
        "content": "<p>This would change the name of the additive version to something slightly worse, so I'd much rather have <code>MulCommute</code>.</p>",
        "id": 383514362,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1691650899
    },
    {
        "content": "<p>I agree, I think <code>MulCommute</code> can safely be in the root namespace</p>",
        "id": 383526679,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1691653867
    },
    {
        "content": "<p>I'm increasingly of the opinion that the current <code>Commute</code> name is the least bad of all the options, and protecting the Function version is all that's needed</p>",
        "id": 383544212,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691657888
    },
    {
        "content": "<p>So just as <code>Group</code> assumes that the user knows that the operation is multiplication, <code>Commute</code> is also allowed to assume that the user knows that the operation is multiplication?</p>",
        "id": 383612475,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1691671741
    },
    {
        "content": "<p>Also the function one can use dot notation</p>",
        "id": 383628671,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691674608
    },
    {
        "content": "<p>I keep forgetting Lean 4 can do that.</p>",
        "id": 383641361,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691676879
    },
    {
        "content": "<p>(You can do it in Lean 3 too <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)</p>",
        "id": 383642033,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1691676997
    },
    {
        "content": "<p>really? since when? I would have sworn dot notation wasn't smart enough for this.</p>",
        "id": 383658171,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691679404
    },
    {
        "content": "<p>Kyle put it in as a preview of lean4, <a href=\"https://github.com/leanprover-community/lean/pull/757\">lean#757</a></p>",
        "id": 383659350,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691679596
    },
    {
        "content": "<p>huh, I totally missed that. Poor me. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 383673208,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691681902
    },
    {
        "content": "<p>Okay, so is the consensus that protecting <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.Commute#doc\">docs#Function.Commute</a> is the way to go here?</p>",
        "id": 384589883,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1691963804
    },
    {
        "content": "<p><del>I don't think anyone has argued that protecting it is harmful</del> nevermind, I see you did in your first post!</p>",
        "id": 384590534,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691964203
    },
    {
        "content": "<p>I suppose the counterargument would be \"don't use <code>open Function</code> if commute is going to get in your way\"</p>",
        "id": 384590760,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691964313
    },
    {
        "content": "<p>I would guess that most of the uses of <code>open Function</code> could be changed to <code>open Function (Injective)</code></p>",
        "id": 384590811,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691964337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>, <code>open Function (Commute)</code> made the diff much nicer; are you still worried about the PR!</p>",
        "id": 384718983,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692007618
    },
    {
        "content": "<p>That's a much nicer diff. Thanks!</p>",
        "id": 384785567,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1692021005
    }
]