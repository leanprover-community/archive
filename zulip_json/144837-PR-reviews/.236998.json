[
    {
        "content": "<p>There was a performance regression which I wanted to track down before merging this PR. Running </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>gtime<span class=\"w\"> </span>-v<span class=\"w\"> </span>lake<span class=\"w\"> </span>env<span class=\"w\"> </span>lean<span class=\"w\"> </span>--profile<span class=\"w\"> </span>Mathlib/Analysis/InnerProductSpace/Dual.lean\n</code></pre></div>\n<p>gives </p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Before </p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>interpretation<span class=\"w\"> </span>of<span class=\"w\"> </span>Lean.mkStateFromImportedEntries._at.Mathlib.Prelude.Rename.initFn._@.Mathlib.Mathport.Rename._hyg.252._spec_1<span class=\"w\"> </span>took<span class=\"w\"> </span>178ms\nimport<span class=\"w\"> </span>took<span class=\"w\"> </span>409ms\nelaboration<span class=\"w\"> </span>took<span class=\"w\"> </span>137ms\nelaboration<span class=\"w\"> </span>took<span class=\"w\"> </span>174ms\ncompilation<span class=\"w\"> </span>of<span class=\"w\"> </span>InnerProductSpace.continuousLinearMapOfBilin<span class=\"w\"> </span>took<span class=\"w\"> </span>125ms\nsimp<span class=\"w\"> </span>took<span class=\"w\"> </span>195ms\ncumulative<span class=\"w\"> </span>profiling<span class=\"w\"> </span>times:\n<span class=\"w\">        </span>attribute<span class=\"w\"> </span>application<span class=\"w\"> </span><span class=\"m\">2</span>.17ms\n<span class=\"w\">        </span>compilation<span class=\"w\"> </span>225ms\n<span class=\"w\">        </span>compilation<span class=\"w\"> </span>new<span class=\"w\"> </span><span class=\"m\">73</span>.1ms\n<span class=\"w\">        </span>elaboration<span class=\"w\"> </span>560ms\n<span class=\"w\">        </span>import<span class=\"w\"> </span>409ms\n<span class=\"w\">        </span>initialization<span class=\"w\"> </span><span class=\"m\">13</span>.8ms\n<span class=\"w\">        </span>interpretation<span class=\"w\"> </span>888ms\n<span class=\"w\">        </span>linting<span class=\"w\"> </span><span class=\"m\">43</span>.2ms\n<span class=\"w\">        </span>norm_num<span class=\"w\"> </span><span class=\"m\">0</span>.75ms\n<span class=\"w\">        </span>parsing<span class=\"w\"> </span><span class=\"m\">3</span>.72ms\n<span class=\"w\">        </span>simp<span class=\"w\"> </span>312ms\n<span class=\"w\">        </span>tactic<span class=\"w\"> </span>execution<span class=\"w\"> </span>140ms\n<span class=\"w\">        </span><span class=\"nb\">type</span><span class=\"w\"> </span>checking<span class=\"w\"> </span>147ms\n<span class=\"w\">        </span>typeclass<span class=\"w\"> </span>inference<span class=\"w\"> </span><span class=\"m\">1</span>.51s\n<span class=\"w\">        </span>Command<span class=\"w\"> </span>being<span class=\"w\"> </span>timed:<span class=\"w\"> </span><span class=\"s2\">\"lake env lean --profile Mathlib/Analysis/InnerProductSpace/Dual.lean\"</span>\n<span class=\"w\">        </span>User<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span><span class=\"o\">(</span>seconds<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">4</span>.78\n<span class=\"w\">        </span>System<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span><span class=\"o\">(</span>seconds<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>.45\n<span class=\"w\">        </span>Percent<span class=\"w\"> </span>of<span class=\"w\"> </span>CPU<span class=\"w\"> </span>this<span class=\"w\"> </span>job<span class=\"w\"> </span>got:<span class=\"w\"> </span><span class=\"m\">99</span>%\n<span class=\"w\">        </span>Elapsed<span class=\"w\"> </span><span class=\"o\">(</span>wall<span class=\"w\"> </span>clock<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span><span class=\"o\">(</span>h:mm:ss<span class=\"w\"> </span>or<span class=\"w\"> </span>m:ss<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>:05.26\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>shared<span class=\"w\"> </span>text<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>unshared<span class=\"w\"> </span>data<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>stack<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>total<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Maximum<span class=\"w\"> </span>resident<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">1417200</span>\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>resident<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Major<span class=\"w\"> </span><span class=\"o\">(</span>requiring<span class=\"w\"> </span>I/O<span class=\"o\">)</span><span class=\"w\"> </span>page<span class=\"w\"> </span>faults:<span class=\"w\"> </span><span class=\"m\">125</span>\n<span class=\"w\">        </span>Minor<span class=\"w\"> </span><span class=\"o\">(</span>reclaiming<span class=\"w\"> </span>a<span class=\"w\"> </span>frame<span class=\"o\">)</span><span class=\"w\"> </span>page<span class=\"w\"> </span>faults:<span class=\"w\"> </span><span class=\"m\">201260</span>\n<span class=\"w\">        </span>Voluntary<span class=\"w\"> </span>context<span class=\"w\"> </span>switches:<span class=\"w\"> </span><span class=\"m\">46</span>\n<span class=\"w\">        </span>Involuntary<span class=\"w\"> </span>context<span class=\"w\"> </span>switches:<span class=\"w\"> </span><span class=\"m\">127</span>\n<span class=\"w\">        </span>Swaps:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>File<span class=\"w\"> </span>system<span class=\"w\"> </span>inputs:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>File<span class=\"w\"> </span>system<span class=\"w\"> </span>outputs:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Socket<span class=\"w\"> </span>messages<span class=\"w\"> </span>sent:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Socket<span class=\"w\"> </span>messages<span class=\"w\"> </span>received:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Signals<span class=\"w\"> </span>delivered:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Page<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>bytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">16384</span>\n<span class=\"w\">        </span>Exit<span class=\"w\"> </span>status:<span class=\"w\"> </span><span class=\"m\">0</span>\n</code></pre></div>\n</div></div>\n<p>and </p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>After </p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>interpretation<span class=\"w\"> </span>of<span class=\"w\"> </span>Lean.mkStateFromImportedEntries._at.Mathlib.Prelude.Rename.initFn._@.Mathlib.Mathport.Rename._hyg.252._spec_1<span class=\"w\"> </span>took<span class=\"w\"> </span>177ms\nimport<span class=\"w\"> </span>took<span class=\"w\"> </span>390ms\nelaboration<span class=\"w\"> </span>took<span class=\"w\"> </span>134ms\nelaboration<span class=\"w\"> </span>took<span class=\"w\"> </span>173ms\ncompilation<span class=\"w\"> </span>of<span class=\"w\"> </span>InnerProductSpace.continuousLinearMapOfBilin<span class=\"w\"> </span>took<span class=\"w\"> </span>125ms\ntactic<span class=\"w\"> </span>execution<span class=\"w\"> </span>of<span class=\"w\"> </span>Lean.Parser.Tactic.rewriteSeq<span class=\"w\"> </span>took<span class=\"w\"> </span>262ms\ncumulative<span class=\"w\"> </span>profiling<span class=\"w\"> </span>times:\n<span class=\"w\">        </span>attribute<span class=\"w\"> </span>application<span class=\"w\"> </span><span class=\"m\">2</span>.16ms\n<span class=\"w\">        </span>compilation<span class=\"w\"> </span>224ms\n<span class=\"w\">        </span>compilation<span class=\"w\"> </span>new<span class=\"w\"> </span><span class=\"m\">72</span>.4ms\n<span class=\"w\">        </span>elaboration<span class=\"w\"> </span>556ms\n<span class=\"w\">        </span>import<span class=\"w\"> </span>390ms\n<span class=\"w\">        </span>initialization<span class=\"w\"> </span><span class=\"m\">13</span>.8ms\n<span class=\"w\">        </span>interpretation<span class=\"w\"> </span>877ms\n<span class=\"w\">        </span>linting<span class=\"w\"> </span><span class=\"m\">44</span>.5ms\n<span class=\"w\">        </span>norm_num<span class=\"w\"> </span><span class=\"m\">0</span>.729ms\n<span class=\"w\">        </span>parsing<span class=\"w\"> </span><span class=\"m\">3</span>.56ms\n<span class=\"w\">        </span>simp<span class=\"w\"> </span>116ms\n<span class=\"w\">        </span>tactic<span class=\"w\"> </span>execution<span class=\"w\"> </span>466ms\n<span class=\"w\">        </span><span class=\"nb\">type</span><span class=\"w\"> </span>checking<span class=\"w\"> </span>163ms\n<span class=\"w\">        </span>typeclass<span class=\"w\"> </span>inference<span class=\"w\"> </span><span class=\"m\">1</span>.51s\n<span class=\"w\">        </span>Command<span class=\"w\"> </span>being<span class=\"w\"> </span>timed:<span class=\"w\"> </span><span class=\"s2\">\"lake env lean --profile Mathlib/Analysis/InnerProductSpace/Dual.lean\"</span>\n<span class=\"w\">        </span>User<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span><span class=\"o\">(</span>seconds<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">4</span>.88\n<span class=\"w\">        </span>System<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span><span class=\"o\">(</span>seconds<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>.44\n<span class=\"w\">        </span>Percent<span class=\"w\"> </span>of<span class=\"w\"> </span>CPU<span class=\"w\"> </span>this<span class=\"w\"> </span>job<span class=\"w\"> </span>got:<span class=\"w\"> </span><span class=\"m\">99</span>%\n<span class=\"w\">        </span>Elapsed<span class=\"w\"> </span><span class=\"o\">(</span>wall<span class=\"w\"> </span>clock<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span><span class=\"o\">(</span>h:mm:ss<span class=\"w\"> </span>or<span class=\"w\"> </span>m:ss<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>:05.35\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>shared<span class=\"w\"> </span>text<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>unshared<span class=\"w\"> </span>data<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>stack<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>total<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Maximum<span class=\"w\"> </span>resident<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">1419312</span>\n<span class=\"w\">        </span>Average<span class=\"w\"> </span>resident<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>kbytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Major<span class=\"w\"> </span><span class=\"o\">(</span>requiring<span class=\"w\"> </span>I/O<span class=\"o\">)</span><span class=\"w\"> </span>page<span class=\"w\"> </span>faults:<span class=\"w\"> </span><span class=\"m\">128</span>\n<span class=\"w\">        </span>Minor<span class=\"w\"> </span><span class=\"o\">(</span>reclaiming<span class=\"w\"> </span>a<span class=\"w\"> </span>frame<span class=\"o\">)</span><span class=\"w\"> </span>page<span class=\"w\"> </span>faults:<span class=\"w\"> </span><span class=\"m\">201460</span>\n<span class=\"w\">        </span>Voluntary<span class=\"w\"> </span>context<span class=\"w\"> </span>switches:<span class=\"w\"> </span><span class=\"m\">92</span>\n<span class=\"w\">        </span>Involuntary<span class=\"w\"> </span>context<span class=\"w\"> </span>switches:<span class=\"w\"> </span><span class=\"m\">116</span>\n<span class=\"w\">        </span>Swaps:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>File<span class=\"w\"> </span>system<span class=\"w\"> </span>inputs:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>File<span class=\"w\"> </span>system<span class=\"w\"> </span>outputs:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Socket<span class=\"w\"> </span>messages<span class=\"w\"> </span>sent:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Socket<span class=\"w\"> </span>messages<span class=\"w\"> </span>received:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Signals<span class=\"w\"> </span>delivered:<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>Page<span class=\"w\"> </span>size<span class=\"w\"> </span><span class=\"o\">(</span>bytes<span class=\"o\">)</span>:<span class=\"w\"> </span><span class=\"m\">16384</span>\n<span class=\"w\">        </span>Exit<span class=\"w\"> </span>status:<span class=\"w\"> </span><span class=\"m\">0</span>\n</code></pre></div>\n</div></div>",
        "id": 389931960,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1694198672
    },
    {
        "content": "<p>And my computer is about run out battery. Back later for the other files.</p>",
        "id": 389931990,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1694198689
    },
    {
        "content": "<p>Can the battery level influence on the amount of energy the machine is going to spend on, say, CPU? Maybe it's better to run the benchmarks without relying on your battery just to be sure</p>",
        "id": 389933410,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1694199290
    },
    {
        "content": "<p>It’s run on a box that ssh into. The battery of the tablet died so no more sshing for now</p>",
        "id": 389935524,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1694200184
    },
    {
        "content": "<p>This bubbled up into <a href=\"https://github.com/leanprover-community/mathlib4/pull/7103\">#7103</a>. As with one declaration in <a href=\"https://github.com/leanprover-community/mathlib4/pull/6499\">#6499</a>, the +30% in the maxrss was due to Lean spending a lot of effort trying to compile <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousLinearMap.adjointAux#doc\">docs#ContinuousLinearMap.adjointAux</a>. The new benchmark after specifically marking it <code>noncomputable</code> is <a href=\"http://speed.lean-fro.org/mathlib4/compare/1b838738-3e14-4867-b465-eff70df7a0e0/to/6eab045e-7459-41d0-a28f-0690fa651d11\">here</a>.</p>",
        "id": 390371791,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1694459067
    },
    {
        "content": "<p>As this change fixed the only \"large\" file with significant performance regression, I sent it to bors</p>",
        "id": 390371906,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1694459113
    },
    {
        "content": "<p>But it would be nice to better understand the reasons underlying this issue.</p>",
        "id": 390371941,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1694459133
    },
    {
        "content": "<p>Thanks Matthew!</p>",
        "id": 390373375,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694459761
    }
]