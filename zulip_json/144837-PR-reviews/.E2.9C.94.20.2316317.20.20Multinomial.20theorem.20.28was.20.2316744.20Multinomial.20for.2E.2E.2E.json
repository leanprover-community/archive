[
    {
        "content": "<p>This is a proof of the multinomial formula in a commutative semiring.</p>\n<p>Limitation : the sums have to be indexed by <code>fin m</code> because I rely on <code>finset.nat.antidiagonal_tuple</code></p>\n<p>Possible extension to arbitrary semirings, when imposing that the elements of the sum commute pairwise.</p>",
        "id": 301851485,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664647380
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Apparently you missed <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> and <a href=\"#narrow/stream/113489-new-members/topic/Multinomial.20coefficients.20definition\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Multinomial.20coefficients.20definition</a></p>",
        "id": 301852114,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1664647800
    },
    {
        "content": "<p>Unless I'm mistaken, that file contains a <em>definition</em> of multinomial coefficients, but not the proof of the <em>multinomial theorem</em>.</p>",
        "id": 301853842,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664648976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span>  <a href=\"https://github.com/leanprover-community/mathlib/pull/16317/files#diff-7872ddfaadbfff078a40c94cddf0dabb6195a01cfe7119226111243243e5b971R199\">The theorem is here.</a> It may takes some effort to connect to your version with antidiagonal though (I suggested doing this in the other thread).</p>",
        "id": 301861041,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1664654100
    },
    {
        "content": "<p>Thanks!<br>\n<code>finset.sym</code> is also a natural way of doing this, probably better than both <code>nat.antidiagonal_tuple</code> (which lacks a convenient API for sums) and my ad hoc<code>tuple</code>.</p>",
        "id": 301861653,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664654549
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> , in our work with <span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> , we will need part of this PR. I used your proof of the multinomial theorem to write a proof of the “multinomial” theorem  for divided powers — where the multinomial coefficients are 1, and I need the modifications you made to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/data.sym.basic\">docs#data.sym.basic</a> <br>\nDo you have any recommendation on how to help this PR be pushed to mathlib ?<br>\nIs it worth to add the noncommutative case ?<br>\n(I would be happy to help, but I don't know how to do it concretely.)</p>",
        "id": 302414584,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664960383
    },
    {
        "content": "<p>So the problem is that <a href=\"https://github.com/leanprover-community/mathlib/pull/16744\">#16744</a> doesn't use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.multinomial\">docs#nat.multinomial</a> but it gives a new definition?</p>",
        "id": 302415591,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1664960744
    },
    {
        "content": "<p>(In any case it doesn't pass CI at the moment, so it is not shown on the <a href=\"https://bit.ly/3AZk1Qk\">#queue</a>, and it's likely people don't see it)</p>",
        "id": 302415775,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1664960811
    },
    {
        "content": "<p>There's no problem with my PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16744\">#16744</a> except that there was an earlier PR  <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> which does the same in a better way, but it is not clear to me how/when <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> will be added to mathlib nor whether I could help.<br>\n(I should delete my PR if I knew how to do it.)</p>",
        "id": 302447515,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664973541
    },
    {
        "content": "<p>You can close a PR by clicking the button below the comment box at the very bottom of the page, PRs can be reopened later and never really permanently deleted I believe.<br>\nI think its quite acceptable to just push improvements to a PR that the author doesn't have time for, like <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a>, for example it looks like you wrote a nice docstring that could be incorporated there</p>",
        "id": 302456286,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1664976521
    },
    {
        "content": "<p>Regarding reopening PRs: I could be mistaken, but I think you can only reopen if the branch wasn't deleted; the default is that it is not deleted if there are unmerged changes upon closure.</p>",
        "id": 302482234,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1664983503
    },
    {
        "content": "<blockquote>\n<p>Do you have any recommendation on how to help this PR be pushed to mathlib ?<br>\nIs it worth to add the noncommutative case ?</p>\n</blockquote>\n<p>Maybe you could change the title of this topic to point to <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a>? And then maybe just wait for maintainers or official reviewers to make a decision. (I think you already caught the attention from some of them with this topic!) For the noncommutative case, we do have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.noncomm_prod\">docs#multiset.noncomm_prod</a> to state the result, and I think you might add it to <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> if you'd like to.</p>",
        "id": 302514522,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1664993030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> I've added the <a href=\"https://github.com/leanprover-community/mathlib/pull/16317/files#diff-7872ddfaadbfff078a40c94cddf0dabb6195a01cfe7119226111243243e5b971R198-R203\">noncommutative version</a> at <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> but it's now blocked by <a href=\"https://github.com/leanprover-community/mathlib/pull/16859\">#16859</a>. If you no longer want your <a href=\"https://github.com/leanprover-community/mathlib/pull/16744\">#16744</a> to be reviewed, can you please: change the title of this Zulip topic, close the PR and/or change the \"awaiting-review\" label?</p>\n<p>If you need specific lemmas from <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a>, maybe you could open a PR to add them separately, and that might help <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> to get in sooner.</p>",
        "id": 303767449,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665643956
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> has marked this topic as unresolved.</p>",
        "id": 303769046,
        "sender_full_name": "Notification Bot",
        "timestamp": 1665644866
    },
    {
        "content": "<p>Done.</p>",
        "id": 303769053,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1665644870
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> has marked this topic as resolved.</p>",
        "id": 303769067,
        "sender_full_name": "Notification Bot",
        "timestamp": 1665644879
    },
    {
        "content": "<p>I am happy to review. Is <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> the relevant one now?</p>",
        "id": 303769207,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665644926
    },
    {
        "content": "<p>Yes, thanks!</p>",
        "id": 303770278,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665645428
    },
    {
        "content": "<p>The diff is currently large unfortunately because it includes the diff of <a href=\"https://github.com/leanprover-community/mathlib/pull/16859\">#16859</a></p>",
        "id": 303770641,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665645632
    },
    {
        "content": "<p>The relevant files are:<br>\nsrc/data/finset/sym.lean<br>\nsrc/data/nat/choose/multinomial.lean<br>\nsrc/data/sym/basic.lean</p>",
        "id": 303770845,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665645758
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> is <a href=\"https://github.com/leanprover-community/mathlib/pull/16859\">#16859</a> really WIP?</p>",
        "id": 303771161,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665645940
    },
    {
        "content": "<p>I fixed a build error there (in my own fork) but there may be more coming. If there are more they'll show up in the multinomial branch.</p>",
        "id": 303771509,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665646083
    },
    {
        "content": "<p>Oh sorry I didn't know you needed that.</p>",
        "id": 303783379,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665650935
    },
    {
        "content": "<p>I've fixed a few more things in local but didn't push because I was not in a hurry</p>",
        "id": 303783437,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665650957
    },
    {
        "content": "<p>(including the error you fixed too)</p>",
        "id": 303783519,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665650990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Thanks for taking up the refactor I suggested! noncomm_prod is more widely used and your PR has grown larger than I expected; as of now, <a href=\"https://github.com/leanprover-community/mathlib/pull/16859/commits/7e336b4fe676351eb03ee1b217b5486524396b1f#file-src-group_theory-perm-cycle-type-lean-L49\">one build error in perm/cycle/type</a> has popped up. I could make the noncommutative multinomial theorem independent of the noncomm_prod refactor but that would mean you'll have one more proof to fix, and it's just simpler after the refactor. I may try to fix the error when I get the time, and I'd rather you take another look at <a href=\"https://github.com/leanprover-community/mathlib/pull/16777\">#16777</a> and let me know the way forward :)</p>",
        "id": 303869750,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665676824
    },
    {
        "content": "<p>@_<strong>Notification Bot|100006</strong> <a href=\"#narrow/stream/144837-PR-reviews/topic/.E2.9C.94.20.2316317.20.20Multinomial.20theorem.20.28was.20.2316744.20Multinomial.20for.2E.2E.2E/near/303769067\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> has marked this topic as resolved.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Did you accidentally clicked something? I think it should be marked unresolved ...</p>",
        "id": 303869824,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665676841
    },
    {
        "content": "<p>I fixed the error in <code>group_theory.perm.cycle.type</code> already.</p>",
        "id": 303869902,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665676862
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> has marked this topic as unresolved.</p>",
        "id": 303893756,
        "sender_full_name": "Notification Bot",
        "timestamp": 1665684059
    },
    {
        "content": "<p>I had thought 16744 was resolved, but with the new title, it should have been set unresolved…<br>\nWhat was the bug in <code>group_theory.perm.cycle.type</code> ?</p>",
        "id": 303893884,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1665684118
    },
    {
        "content": "<p>Nothing important. Just casual fallout from changing the definion of <code>noncomm_prod</code>.</p>",
        "id": 303893986,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665684144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> is being merged <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> so I guess this can now be marked resolved. I've thought about a follow-up PR that build a bijection between <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.nat.antidiagonal_tuple\">docs#finset.nat.antidiagonal_tuple</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/sym\">docs#sym</a> / <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.sym\">docs#finset.sym</a> and deduce your version but I've not started working on it and I'm not sure when it will be ready.</p>",
        "id": 305824707,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1666619675
    },
    {
        "content": "<p>Am I the one who has to mark it as resolved ?<br>\nBy the way, I am not sure it is necessary to have the antidiagonal version. I don't know.</p>",
        "id": 305825321,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1666619825
    },
    {
        "content": "<p>I think you (who created the topic) are the only one who can mark it un/resolved, but you're free not to do so! I just want to notify you though you probably have been notified by github. I think the bijection with <code>sym (fin n) _</code> is something that should be there, and from there your version should be easy to deduce.</p>",
        "id": 305827838,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1666620438
    },
    {
        "content": "<p>OK, so let me mark it resolved!<br>\n(Re: antidiagonal stuff, I have the impression that a serious API is necessary. One would like to have n-dimensional antidiagonal that can be reorganized in multiple ways so that it is easy to change the order of summation in multiple sums…)</p>",
        "id": 305881019,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1666633366
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> has marked this topic as resolved.</p>",
        "id": 305913901,
        "sender_full_name": "Notification Bot",
        "timestamp": 1666645632
    }
]