[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> Could one of you please take a look at this line: <a href=\"https://github.com/leanprover-community/mathlib/pull/2554/files#diff-92b98102703f73caffdeddcf66864201R538\" title=\"https://github.com/leanprover-community/mathlib/pull/2554/files#diff-92b98102703f73caffdeddcf66864201R538\">https://github.com/leanprover-community/mathlib/pull/2554/files#diff-92b98102703f73caffdeddcf66864201R538</a></p>",
        "id": 195666932,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588142973
    },
    {
        "content": "<p>Other people who are experts on lists are also very welcome to take a look</p>",
        "id": 195666944,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588142989
    },
    {
        "content": "<p>urh, yes that can be done better. The definition of <code>split_wrt_composition</code> is not good, and it makes the rest of the proofs tedious</p>",
        "id": 195667326,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588143261
    },
    {
        "content": "<p>it will take a bit to get an adequate replacement working</p>",
        "id": 195667335,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588143276
    },
    {
        "content": "<p>This definition of <code>split_wrt_composition</code> in terms of <code>of_fn</code> (as opposed to an induction on the length of the composition, say) is the one I need for the application in  <a href=\"https://github.com/leanprover-community/mathlib/issues/2513\" title=\"https://github.com/leanprover-community/mathlib/issues/2513\">#2513</a>, where I use multilinear functions (applied to elements of <code>fin k -&gt; E</code>). In particular, starting from <a href=\"https://github.com/leanprover-community/mathlib/blob/3f89f37b6a4c7c7962f276107d62b6129f53bd49/src/analysis/analytic/composition.lean#L1142\" title=\"https://github.com/leanprover-community/mathlib/blob/3f89f37b6a4c7c7962f276107d62b6129f53bd49/src/analysis/analytic/composition.lean#L1142\">https://github.com/leanprover-community/mathlib/blob/3f89f37b6a4c7c7962f276107d62b6129f53bd49/src/analysis/analytic/composition.lean#L1142</a>, there is a tricky argument where I have to fight three times DTT hell, and where I fear that changing the definition would make it much harder.</p>",
        "id": 195670156,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588145271
    },
    {
        "content": "<p>are you using <code>split_wrt_composition</code> in that proof currently? I can try not to break whatever applications you have</p>",
        "id": 195670456,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588145461
    },
    {
        "content": "<p>would it suffice to have an equality to the <code>of_fn</code> definition?</p>",
        "id": 195670487,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588145489
    },
    {
        "content": "<p>Yes, I use <code>split_wrt_composition</code> to define the change of variables in the proof, so it is there everywhere in the proof. It is not obvious to me if having an equality to the <code>of_fn</code> definition would be enough, as there are many dependent stuff so I don't know if a rewrite would work or not.</p>",
        "id": 195670744,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588145694
    },
    {
        "content": "<p>In fact I am not sure that changing the definition would break the proof. If you come up with a better definition for which <code>join_split_wrt_composition</code> becomes straightforward, can you give a gist containing it here on Zulip, and then I will check if it creates problems down the road.</p>",
        "id": 195671345,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588146080
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> did you have any recommendations for a better definition for <code>split_wrt_composition</code> or are you still working on it?</p>",
        "id": 195902656,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588281398
    },
    {
        "content": "<p>sorry, I haven't had much time for lean. Should be able to get to it this weekend at the latest</p>",
        "id": 195920498,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588294023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> Got some time to look at this. As a test, I tried marking <code>split_wrt_composition</code> as <code>irreducible</code> and making all the lemmas except <code>length_split_wrt_composition</code>, <code>join_split_wrt_composition</code>, and <code>split_wrt_composition_join</code> private, and everything still seems to compile. So it seems you only need a pretty simple API and the definition doesn't matter</p>",
        "id": 196153777,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588581227
    },
    {
        "content": "<p>That's good to hear. So, if you want to play with a different definition, go ahead! (Or it means we can come back to this later as a refactoring would not break things, as you prefer).</p>",
        "id": 196154307,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588581579
    },
    {
        "content": "<p>Right, I think this means that we can merge, and refactor later. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Do you agree?</p>",
        "id": 196156095,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588582834
    },
    {
        "content": "<p>And in that case, would it be better to merge with the definition marked <code>irreducible</code> and the lemmas <code>private</code>?</p>",
        "id": 196156119,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588582854
    },
    {
        "content": "<p>I'm working on the refactor now, just of those few proofs. Give me a few hours</p>",
        "id": 196156161,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588582889
    },
    {
        "content": "<p>Pushed</p>",
        "id": 196157313,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588583730
    },
    {
        "content": "<p>I deleted <code>nth_le_split_wrt_composition</code> but you weren't using it. Let me know if you want it restored</p>",
        "id": 196157457,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588583837
    },
    {
        "content": "<p>Did you check if it breaks <a href=\"https://github.com/leanprover-community/mathlib/issues/2513\" title=\"https://github.com/leanprover-community/mathlib/issues/2513\">#2513</a>? (You would just need to check if the file <a href=\"https://github.com/leanprover-community/mathlib/blob/sgouezel_series_composition/src/analysis/analytic/composition.lean\" title=\"https://github.com/leanprover-community/mathlib/blob/sgouezel_series_composition/src/analysis/analytic/composition.lean\">https://github.com/leanprover-community/mathlib/blob/sgouezel_series_composition/src/analysis/analytic/composition.lean</a> compiles on your branch)</p>",
        "id": 196158514,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588584621
    },
    {
        "content": "<p>yes</p>",
        "id": 196158566,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588584662
    },
    {
        "content": "<p>er, no it doesn't break</p>",
        "id": 196158580,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588584671
    },
    {
        "content": "<p>yes it works</p>",
        "id": 196158587,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588584674
    },
    {
        "content": "<p>Then that's great, thanks a lot. Your definition is definitely better!</p>",
        "id": 196158606,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588584687
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Thanks!</p>",
        "id": 196160339,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588585842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> I think the last two theorems should be tagged <code>simp</code>. Otherwise, Let's Get This Merged.</p>",
        "id": 196160405,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588585896
    },
    {
        "content": "<p>Rofl there was me thinking it stood for something else</p>",
        "id": 196162255,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588587008
    },
    {
        "content": "<p>I think Johan knows about the standard meaning here</p>",
        "id": 196162305,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588587033
    },
    {
        "content": "<p>Hooray! Bryan kicked it on the queue</p>",
        "id": 196167202,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588590875
    },
    {
        "content": "<p>This has landed in master. I have merged master in <a href=\"https://github.com/leanprover-community/mathlib/issues/2513\" title=\"https://github.com/leanprover-community/mathlib/issues/2513\">#2513</a> and, well, it looks like Mario has broken my proof :-)</p>",
        "id": 196173484,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588595400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> Oh, I guess you use <code>nth_le_split_wrt_composition</code> after all. It doesn't look like a good theorem to me, but in the interest of minimizing the diff I've reproved the theorem. Most likely you can get much more savings by architecting the proofs in <code>analysis.analytic.composition</code> differently, but I haven't looked at this file in detail yet.</p>",
        "id": 196178444,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588598304
    }
]