[
    {
        "content": "<p>While there was some concern about reducing the priority <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=instFunLikeDual#doc\">docs#instFunLikeDual</a> in <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/Module.2EDual.20and.20linear.20maps\">#general &gt; Module.Dual and linear maps</a> , I think its removal is straightforward:</p>\n<ul>\n<li>Mathlib builds fine without it</li>\n<li>it causes TC to fail in very reasonable scenarios</li>\n<li>there is no performance penalty</li>\n</ul>",
        "id": 385873784,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692352490
    },
    {
        "content": "<p>It is <code>inferInstanceAs LinearMap.instFunLike</code> and Lean can do that for you</p>",
        "id": 385874576,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692352753
    },
    {
        "content": "<p>I assume this was vestigial code from when we were running into trouble during porting.</p>",
        "id": 385875998,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692353288
    },
    {
        "content": "<p>My guess also. Not the last</p>",
        "id": 385877086,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1692353624
    },
    {
        "content": "<p>I think rather that it used to be necessary (in mathlib 3) before we made <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Module.Dual#doc\">docs#Module.Dual</a> reducible.</p>",
        "id": 385915728,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1692365860
    }
]