[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span>, would you mind having a look at <code>Mathlib/Tactic/Expect.lean</code> and seeing if we can remove the duplication with your recent PR?</p>",
        "id": 343239859,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679352059
    },
    {
        "content": "<p>Ahâ€¦will do.</p>",
        "id": 343241129,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679352583
    },
    {
        "content": "<p>So a docstring in Mathlib/Tactic/Expect.lean says</p>\n<blockquote>\n<p><code>expect_failure</code> is similar to <code>success_if_failure</code> from core, except that <code>success_if_failure</code> omits <code>withoutRecover</code>. When this is fixed, <code>expect_failure</code> can be deprecated or turned into a macro.</p>\n</blockquote>\n<p>Is this copypasta from lean3, given that the name <code>success_if_failure</code> is wrong?</p>\n<p>If it's not copypasta and just accidentally misrefers to <code>fail_if_success</code>, it seems that <code>fail_if_success</code> now includes <code>withoutRecover</code> in core. It also looks like <code>expect_fail</code> and <code>expect_fail_msg</code> aren't currently used in any tests.</p>\n<p>So, should we just remove Mathlib/Tactic/Expect.lean? (And its test file?)</p>",
        "id": 343529381,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679436082
    },
    {
        "content": "<p>Here's a PR for that in case that's the right move: <a href=\"https://github.com/leanprover-community/mathlib4/pull/3026\">!4#3026</a> (If not, I'll just adjust that PR accordingly :) )</p>",
        "id": 343532409,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1679437446
    },
    {
        "content": "<p>Looks reasonable to me.</p>",
        "id": 343552969,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1679446585
    }
]