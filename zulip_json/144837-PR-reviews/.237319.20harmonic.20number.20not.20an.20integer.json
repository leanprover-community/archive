[
    {
        "content": "<p>I've formalized a proof from Keith Conrad's <a href=\"https://kconrad.math.uconn.edu/blurbs/gradnumthy/padicharmonicsum.pdf\">note</a> that the nth Harmonic number is not an integer for <code>n</code> bigger than 1. The proof is cool because it uses 2-adic valuations, and I wanted to test out the library. Everything seemed to go pretty smoothly! Looking forward to a review and any other comments.</p>",
        "id": 392450683,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1695365132
    },
    {
        "content": "<p>Nice! The build is currently failing. See the logs <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6270933452/job/17029644003?pr=7319\">here</a>. Could you fix it?</p>",
        "id": 392454500,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695366788
    },
    {
        "content": "<p>I think we definitely want some of this material (if not all) inside mathlib proper (rather than counterexamples).</p>",
        "id": 392492749,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1695379980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> whoops, will take a look at it later today, thanks. I'm a Lean 4 noob, how does one test out a change which involves moving lemmas into new files? I naively tried <code>lake build</code> but that took about 40 mins on my machine to finish. In Lean 3 this would trigger a recompile automatically.</p>",
        "id": 392510708,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1695386907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span>, I suspected as much, especially the fact about 2-adic valuation of the <code>n</code>-th harmonic number being equal to the logarithm of <code>n</code>. Wasn't sure where to put it though. Perhaps somewhere in padics?</p>",
        "id": 392511093,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1695387052
    },
    {
        "content": "<p>There's a <code>Lean 4: Refresh file dependencies</code> trigger in VScode and nvim.</p>",
        "id": 392511383,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695387142
    },
    {
        "content": "<p>Yeah this feels potentially related to p-adic L-functions so p-adics seems a fine place. The definition of harmonic numbers themselves and basic properties  could go in its own file even, we already have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Real.tendsto_sum_range_one_div_nat_succ_atTop#doc\">docs#Real.tendsto_sum_range_one_div_nat_succ_atTop</a></p>",
        "id": 392511545,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1695387200
    },
    {
        "content": "<p>You can access it via <code>Ctrl + Shift + P</code> if you're on Windows or <code>Command + Shift + P</code> on Mac.</p>",
        "id": 392511555,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695387202
    },
    {
        "content": "<p>I've fixed the build and addressed <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>'s comments. Could I get someone to approve it if all looks good? I can make follow up PRs with additional lemmas about harmonic numbers factoring them out into its own file.</p>",
        "id": 393084873,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1695667433
    },
    {
        "content": "<p>If you've responded to the comments etc you have to unlabel it with awaiting author and relabel with awaiting review for it to show up on <a href=\"https://bit.ly/3cKk3ld\">#queue</a>  again (otherwise reviewers will be less likely to see it)</p>",
        "id": 393085878,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1695667786
    },
    {
        "content": "<p>Personally I think this should move into the <code>Mathlib</code> folder now, rather than in a second reorganizing PR later</p>",
        "id": 393086120,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1695667861
    },
    {
        "content": "<p>Any thoughts on <code>1 / n</code> vs <code>n⁻¹</code>? The latter is the simp normal form (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=one_div#doc\">docs#one_div</a>), but some results about reciprocals are stated in terms of <code>1  / n</code> (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Real.tendsto_sum_range_one_div_nat_succ_atTop#doc\">docs#Real.tendsto_sum_range_one_div_nat_succ_atTop</a>).</p>",
        "id": 393390335,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1695789956
    },
    {
        "content": "<p>Should be <code>n⁻¹</code>. If there are reciprocal results that talk about <code>1 / n</code>, change them.</p>",
        "id": 393390481,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695790061
    },
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"253861\">@Thomas Browning</span>'s comprehensive review we now have quite a neat proof. Can we merge this once the build turns green?</p>",
        "id": 393814643,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1695940561
    },
    {
        "content": "<p>Yes, it's looking quite good. Maybe someone else can take one last look over?</p>",
        "id": 393815557,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1695941164
    }
]