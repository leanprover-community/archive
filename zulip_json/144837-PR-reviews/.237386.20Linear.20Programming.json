[
    {
        "content": "<p>Three definitions of linear programming in consideration:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/7386\">#7386</a><br>\nNeither of them is finished.<br>\nI'd like to know which of the definitions you are interested in having in Mathlib (when finished).</p>",
        "id": 393662787,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1695892975
    },
    {
        "content": "<p>Note that if <code>K</code> is a semifield (has no negation), the last two definitions are not equivalent</p>",
        "id": 393665482,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695893918
    },
    {
        "content": "<p>(though probably no one cares at all about that)</p>",
        "id": 393666348,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695894223
    },
    {
        "content": "<p>It seems to me that we are now focused on \"formalizing the definition right\".<br>\nI'd like to temporarily change the subject to \"formalizing the right definition\".</p>",
        "id": 393679985,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1695898574
    },
    {
        "content": "<p>If that's the game, then the options should be presented as prose rather than as Lean code; otherwise it's hard to distinguish a formalization mistake from a weird definition</p>",
        "id": 393683160,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695899217
    },
    {
        "content": "<p>As a high-level picture, we are choosing \"the main definition\" between:<br>\n(1) LP in a canonical form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>=</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>x</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">Ax = b , x \\ge 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span><br>\n(2) LP in a standard form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">Ax \\le b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span><br>\n(3) LP with some inequality constraints <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">Ax \\le b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> and some equality constraints <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>x</mi><mo>=</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">A&#x27;x =b&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></p>",
        "id": 393710343,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1695905857
    },
    {
        "content": "<p>My claims are:</p>\n<ul>\n<li>3 is better than 2, because it is easy to turn 3 into 2 but hard to turn 2 into 3 (computably)</li>\n<li>1 is harder to use than 3, as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> no longer lives in the domain of the original problem space, but an extended domain with slack coefficients. But 1 is presumably easier to prove things about.</li>\n</ul>\n<p>So I think probably having both 1 and 3 is sensible, an showing their equivalence</p>",
        "id": 393721086,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695908361
    },
    {
        "content": "<p>But you should of course wait for more opinions</p>",
        "id": 393721436,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695908435
    },
    {
        "content": "<p>I dislike 3 for the redundancy it involves. 1 and 2 seem fine in that regard</p>",
        "id": 393721759,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695908495
    },
    {
        "content": "<p>LP problems are inherently redundant anyway though, for instance if your constraints include <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">1 \\le x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">2 \\le x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span></p>",
        "id": 393723335,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695908766
    },
    {
        "content": "<p>Of course. But I mean that we could encode an inequality as both <code>a ≤ b ∧ b ≤ a</code> and <code>a = b</code>. This seems undesirable.</p>",
        "id": 393724009,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695908895
    },
    {
        "content": "<p>If you're a consumer of this API, I would expect you would much rather provide the equality and inequality constraints separately</p>",
        "id": 393724208,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695908937
    },
    {
        "content": "<p>Maybe that's only an argument for a <code>.mk'</code> function though</p>",
        "id": 393724270,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695908948
    },
    {
        "content": "<p>My thinking for the <code>eq</code> arguments is that having them available separately might be useful; for instance, you could have a <code>.restrict</code> method that restricts the domain to lie only on the subspace defined by the equalities, and sets <code>eq := []</code></p>",
        "id": 393724832,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695909061
    },
    {
        "content": "<p>Maybe that's an argument for not having equalities at all, and instead having a means to go from <code>LP K (some_affine_subspace)</code> to <code>LP K P</code></p>",
        "id": 393727846,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695909644
    },
    {
        "content": "<p>It seems to be that we want (2) but generalize it to the same abstraction as (3) currently has, plus create a second constructor that transforms a system of equalities into twice as many inequalities.</p>",
        "id": 393730138,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1695910062
    },
    {
        "content": "<p>Update: I have just reworked the definition to be (2) only, and added API for making LP containing equalities.</p>",
        "id": 393783459,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1695925856
    },
    {
        "content": "<p>I think it is important to be able to handle mixed problems, especially because when one adds some linear independence assumptions on the matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, the description gets very precise.<br>\nBut the basic theorem could/should just be about solving linear inequalities <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">Ax\\leq b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>, the rest can fall as corollaries.</p>",
        "id": 393912634,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1695986874
    },
    {
        "content": "<p>LP <a href=\"https://github.com/leanprover-community/mathlib4/pull/7386\">#7386</a> is feeling neglected because nobody noticed it for over three weeks.</p>",
        "id": 401182907,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1699544620
    },
    {
        "content": "<p>You should improve the title of the PR and add a description. The title \"LP defined\" is rather obscure and opening the PR does not tell us what it's about unless we read the code (I'm not saying that's the reason that  your PR has not been reviewed). Quick review comment: you should improve the file docstring to explain what a linear program is and how it is represented here.</p>",
        "id": 401184231,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1699545039
    },
    {
        "content": "<p>Is my description \"Minimizing a linear function on a region defined by linear inequalities\" a good answer to your first question? As for the representation, I'll try to document it better.</p>",
        "id": 401184702,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1699545182
    },
    {
        "content": "<p>It's definitely better than an empty description! Such a description (and the new title) clarifies for example that it's not a PR about one of our various lp spaces.</p>",
        "id": 401185380,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1699545382
    },
    {
        "content": "<p>Thanks for your comments!<br>\nWhat else needs to be done?</p>",
        "id": 401722756,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1699868322
    },
    {
        "content": "<p>I have many PRs open at the moment. Nonetheless, I would like to prioritize this one. Can we speed up the review process a bit, please?</p>",
        "id": 402655667,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1700213931
    },
    {
        "content": "<p>I think</p>\n<blockquote>\n<p>Quick review comment: you should improve the file docstring to explain what a linear program is and how it is represented here.</p>\n</blockquote>\n<p>Still applies</p>",
        "id": 402700243,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700228097
    },
    {
        "content": "<p>I would expect an example of how an <code>Ax &lt;= b</code> linear program should be set up in mathlib</p>",
        "id": 402700466,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1700228165
    },
    {
        "content": "<p>Can you please help me with the former task? I am bad at expressing things in English.</p>",
        "id": 402702833,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1700228990
    },
    {
        "content": "<p>I have left comments.</p>",
        "id": 402803802,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700267515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.237386.20Linear.20Programming/near/402700466\">said</a>:</p>\n<blockquote>\n<p>I would expect an example of how an <code>Ax &lt;= b</code> linear program should be set up in mathlib</p>\n</blockquote>\n<p>Rather <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>≥</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">Ax \\ge b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> since the goal is to minimize the objective function, right?</p>",
        "id": 403959137,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1700829224
    },
    {
        "content": "<p>I am not competent to decide the current standing issues in the LP PR.<br>\nNevertheless, I would like it to be done, somehow.<br>\nI don't care much about what LP will look like in Mathlib, but I would like to have it in Mathlib soon.<br>\nIs there anybody with opinions who could drive it towards some conclusions?</p>",
        "id": 407510912,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1702396989
    },
    {
        "content": "<p>Hi, I just saw this PR. </p>\n<p>I'm curious about your choice of LP as a list of constraints instead of a single (or two) matrices. Wouldn't it be hard to work with this definition in practice? Like how would define the dual or just define the linear program with constraint Ax \\le b?</p>",
        "id": 407552377,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1702410289
    },
    {
        "content": "<p>Do you have a proof in mind that you're trying to formalize using this definition? To me even weak duality looks hard with this.</p>",
        "id": 407552937,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1702410460
    },
    {
        "content": "<p>IMO just adding a constructor that creates a LP in your sense from a matrix A and a vector b and your favorite inequality would be very helpful.</p>",
        "id": 407553767,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1702410724
    },
    {
        "content": "<p>Actually, the more I think about this the less I'm convinced about using a collection of constraints instead of a single affine transformation between affine spaces. It might be worthwhile to prove a small theorem (like weak duality) and see if this definition is actually usable before merging.</p>",
        "id": 407566464,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1702414853
    }
]