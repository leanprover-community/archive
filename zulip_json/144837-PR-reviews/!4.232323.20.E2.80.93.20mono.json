[
    {
        "content": "<p>So—assuming it passes CI—the <code>mono</code> tactic is finally done (<a href=\"https://github.com/leanprover-community/mathlib4/pull/2323\">!4#2323</a>)! Yay!</p>\n<p>However...</p>\n<p>This is a big PR. I know people are busy, and I don't want to slow things down. I'm happy to factor things out into smaller PR's, postpone features, or really just whatever helps things go smoothly. Please feel free to let me know.</p>\n<p>Part of what's contributing to the size are the additions to Tactic.Backtracking, which provides functionality that's like <code>backtrack</code> (in <code>solve_by_elim</code>), but minimizes the number of resulting goals. Btw: I hope to rewrite this in nondeterministic language once we add nondeterminism to mathlib4, so a major chance to refactor/rewrite it lies in the future.</p>\n<p>I've at least done a fair amount of git surgery to streamline the commit history; however, I've never been on the reviewing end of a PR in that way, so again feel free to let me know if the commits would be better split differently. :)</p>",
        "id": 356929791,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1683626468
    },
    {
        "content": "<p>Okay, this is indeed a big PR. :-) First question: could we postpone the whole <code>BacktrackOptimize</code> part of this?</p>\n<p>(I do love this sort of stuff, don't worry, but I'd much prefer to review it as a \"these changes make the results better\" PR separately from a \"these give us the functionality\" PR.)</p>",
        "id": 357426839,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683764943
    },
    {
        "content": "<p>Maybe! :) I’ll see if I can get by with the old <code>solve_by_elim</code> behavior for <code>mono*</code>. It won’t be perfect, but it might suffice for now!</p>",
        "id": 357439303,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1683771321
    }
]