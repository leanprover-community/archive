[
    {
        "content": "<p>I'm wondering if one of the authors (<span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>, <span class=\"user-mention\" data-user-id=\"243791\">@David Renshaw</span>?) of Mathlib's <code>split_ifs</code> tactic could write a paragraph in the module doc explaining clearly the differences from the core tactic.</p>\n<p>I'm happy if it's either a Mathlib PR, it gets added directly to the upstreaming PR at <a href=\"https://github.com/leanprover/std4/pull/243\">std4#243</a>, or someone just posts something here and I'll incorporate it.</p>",
        "id": 391807329,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695087886
    },
    {
        "content": "<p>Two differences that come to mind:</p>\n<ol>\n<li><code>split</code> only performs a single split at a time, while <code>split_ifs</code> splits all if-then-else expressions</li>\n<li><code>split_ifs</code> has an optional <code>with</code> clause that lets you name the new hypotheses. As far as I know, <code>split</code> does not support naming the new hypotheses.</li>\n</ol>",
        "id": 391818685,
        "sender_full_name": "David Renshaw",
        "timestamp": 1695093576
    },
    {
        "content": "<p>also: <code>split_ifs</code> is restricted to just if-then-else expressions, while <code>split</code> can act on other things too. (maybe any inductive type?)</p>",
        "id": 391820158,
        "sender_full_name": "David Renshaw",
        "timestamp": 1695094440
    },
    {
        "content": "<p>I'm trying to remember the reason for my comment</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">We</span> <span class=\"n\">opt</span> <span class=\"n\">not</span> <span class=\"n\">to</span> <span class=\"n\">use</span> <span class=\"n\">those</span> <span class=\"n\">library</span> <span class=\"n\">functions</span> <span class=\"n\">so</span> <span class=\"n\">that</span> <span class=\"n\">we</span> <span class=\"n\">can</span> <span class=\"n\">better</span> <span class=\"n\">mimic</span>\n<span class=\"n\">the</span> <span class=\"n\">behavior</span> <span class=\"n\">of</span> <span class=\"n\">mathlib3's</span> <span class=\"bp\">`</span><span class=\"n\">split_ifs</span><span class=\"bp\">`.</span>\n</code></pre></div>",
        "id": 391820466,
        "sender_full_name": "David Renshaw",
        "timestamp": 1695094649
    },
    {
        "content": "<p>I think that maybe just has to do with putting <code>splitIf1</code> in the <code>TacticM</code> monad rather than <code>MetaM</code>, so that the chaining behavior (<code>andThenOnSubgoals</code>) works out more conveniently.</p>",
        "id": 391820750,
        "sender_full_name": "David Renshaw",
        "timestamp": 1695094816
    },
    {
        "content": "<p>I do remember thinking \"maybe someday these two tactics can be unified, but for now the priority is to expedite the porting effort\".</p>",
        "id": 391821045,
        "sender_full_name": "David Renshaw",
        "timestamp": 1695095024
    },
    {
        "content": "<p>I think <code>split_ifs</code> is also constructive unlike <code>split</code></p>",
        "id": 394366881,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1696237123
    }
]