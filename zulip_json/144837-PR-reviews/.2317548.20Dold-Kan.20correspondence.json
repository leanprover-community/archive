[
    {
        "content": "<p>Over the last few days, I have tidied a significant part of the code of a proof of the Dold-Kan correspondence (equivalence between categories of simplicial objects and chain complex in an abelian category). As there are more than 20 files and about 3500 lines of code, I would like to be sure what is the best way how to proceed. The whole code is at <a href=\"https://github.com/joelriou/dold-kan\">https://github.com/joelriou/dold-kan</a><br>\nThe dependency graph of the files is<br>\n<a href=\"http://jriou.org/tmp/lean/dold-kan/graph.png\">dependency graph</a><br>\nI was thinking about PRing about one file at a time, starting with the right branch of the graph which leads to <code>homotopy_equivalence.lean</code> which contains a proof that the normalized Moore complex of a simplicial object in an abelian category is homotopy equivalent to the alternating face map complex. Does it sound ok?</p>\n<div class=\"message_inline_image\"><a href=\"http://jriou.org/tmp/lean/dold-kan/graph.png\" title=\"dependency graph\"><img src=\"https://uploads.zulipusercontent.net/05db04cb2919c4571abaee223a644e08bc9da900/687474703a2f2f6a72696f752e6f72672f746d702f6c65616e2f646f6c642d6b616e2f67726170682e706e67\"></a></div>",
        "id": 275495731,
        "sender_full_name": "Joël Riou",
        "timestamp": 1647429195
    },
    {
        "content": "<p>I don't know the math well, but don't be afraid about PRing small technical lemmas.  You can explain in the description what the final goal is, but there is need to a have an interesting result in all PR.</p>",
        "id": 275496697,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1647429800
    },
    {
        "content": "<p>Yes, one file at a time is an easy default approach when you've taken the effort already to organise the work into files! Typically it results in digestible size PRs, too.</p>",
        "id": 275498067,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1647430688
    },
    {
        "content": "<p>I'm excited to see this in mathlib!</p>",
        "id": 275498082,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1647430698
    },
    {
        "content": "<p>(and I think Riccardo left out a critical \"no\" in the phrase \"no need\" :-) It's completely fine to have trivially small PRs.)</p>",
        "id": 275498154,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1647430758
    },
    {
        "content": "<p>When making long strings of PRs like this, don't hesitate to keep pinging us here to review, especially whenever you're currently up to an easy one. I've done long strings of PRs before, and it can be discouraging how slow it is: you're allowed to crack the whip. :-)</p>",
        "id": 275498262,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1647430820
    },
    {
        "content": "<p>Further, it can be tempting to make lots of the PRs at once, and labelled them all as <code>blocked-by-other-PR</code>. In my experience this leads to wasting lots of time merging or rebasing... Your call. :-)</p>",
        "id": 275498310,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1647430871
    },
    {
        "content": "<p>Thanks for the encouragements! The difficulty I anticipated in the process is that in my first few PR for this, I will be dealing with objects which do not obviously seem to be interesting at all (like the null homotopic maps defined in <code>homotopies.lean</code>): they become really interesting only after a long string of lemmas have been obtained. So this is the reason why I wanted to give the full picture here so that people can check that the whole files compile and give nontrivial theorems! I will certainly proceed one PR at a time (as my multitasking abilities are low...).</p>",
        "id": 275498840,
        "sender_full_name": "Joël Riou",
        "timestamp": 1647431262
    },
    {
        "content": "<p>I like Kyle's approach of opening a huge PR just to provide the full picture and then opening small PRs until the big PR becomes obsolete</p>",
        "id": 275499140,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1647431415
    },
    {
        "content": "<p>Yes Joel, don't worry about PRing objects which don't seem interesting -- there will be maintainers who know what you're doing. I guess PRs which add a whole bunch of definitions without using them at all are a bit scary because then people don't know for sure if the definitions are appropriate or will work. But PRs which add one definition and then prove 4 lemmas about it are fine.</p>",
        "id": 275514285,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647439374
    },
    {
        "content": "<p>Also, a general rule is max 150-200 lines per PR, otherwise people don't review it because there are easier things to review :-)</p>",
        "id": 275514335,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647439400
    },
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/pull/12742\">#12742</a>, I add three lemmas about homological complexes. After this PR, I should be able to start PRing material more directly related to the Dold-Kan correspondence.</p>",
        "id": 276019253,
        "sender_full_name": "Joël Riou",
        "timestamp": 1647852018
    },
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/pull/13028\">#13028</a>, I add a compatibility of the alternating face map complex functor with the application of additive functors between the underlying preadditive categories.</p>",
        "id": 276985733,
        "sender_full_name": "Joël Riou",
        "timestamp": 1648550392
    },
    {
        "content": "<p>Reviewed.</p>",
        "id": 277081642,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1648600585
    },
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/pull/13085\">#13085</a>, I introduce null homotopic maps which shall play a critical role in my formalisation of the proof of the Dold-Kan correspondence.</p>",
        "id": 277370919,
        "sender_full_name": "Joël Riou",
        "timestamp": 1648789177
    },
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib/pull/14044\">#14044</a>, I prove technical lemmas about face maps and the null homotopic maps defined in the previous PR <a href=\"https://github.com/leanprover-community/mathlib/pull/13085\">#13085</a>. This PR is presumably the most technical in the whole proof of the Dold-Kan correspondence.</p>",
        "id": 281671959,
        "sender_full_name": "Joël Riou",
        "timestamp": 1652097361
    },
    {
        "content": "<p>Is it possible to merge <a href=\"https://github.com/leanprover-community/mathlib/pull/14044\">#14044</a> in a near future? I promise the next PR in this series will be easier to review!</p>",
        "id": 285886857,
        "sender_full_name": "Joël Riou",
        "timestamp": 1655102227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"459699\">@Joël Riou</span> Sorry for the delay, I was on holidays. I left a few comments.</p>",
        "id": 286650295,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1655557177
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2314044.20Dold-Kan.20correspondence/near/286650295\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"459699\">Joël Riou</span> Sorry for the delay, I was on holidays. I left a few comments.</p>\n</blockquote>\n<p>Thanks for the suggestions! I will do some adjustements (especially on names and slightly more doc) next week.</p>",
        "id": 286662424,
        "sender_full_name": "Joël Riou",
        "timestamp": 1655574266
    },
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib/pull/15616\">#15616</a>, I introduce a sequence of idempotent endomorphisms of the alternating face map complex of a simplicial object in a preadditive category. In a future PR, by taking the \"limit\" of this sequence, we shall get the projection on the normalized subcomplex, parallel to the degenerate sucomplex.</p>",
        "id": 290474819,
        "sender_full_name": "Joël Riou",
        "timestamp": 1658475779
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459699\">Joël Riou</span> has marked this topic as resolved.</p>",
        "id": 290474826,
        "sender_full_name": "Notification Bot",
        "timestamp": 1658475782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459699\">Joël Riou</span> has marked this topic as unresolved.</p>",
        "id": 290474834,
        "sender_full_name": "Notification Bot",
        "timestamp": 1658475789
    },
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib/pull/15950\">#15950</a>, I take the limit of the series of idempotent endomorphisms in order to get an endomorphism <code>P_infty</code> of the alternating face map complex. It shall be the projection on the normalized subcomplex, parallel to the degenerate subcomplex.</p>",
        "id": 292540847,
        "sender_full_name": "Joël Riou",
        "timestamp": 1660034257
    },
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16003\">#16003</a>, the endomorphism <code>P_infty</code> is used to define a functor <code>N₂ : karoubi (simplicial_object C) ⥤ karoubi (chain_complex C ℕ)</code> which shall be an equivalence of categories for any preadditive category C.</p>",
        "id": 292918985,
        "sender_full_name": "Joël Riou",
        "timestamp": 1660220549
    },
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16071\">#16071</a>, I show that the normalized Moore complex is a direct factor of the alternating face map complex. (In the next PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16246\">#16246</a> after this one, I will show this inclusion is an homotopy equivalence.)</p>",
        "id": 294990801,
        "sender_full_name": "Joël Riou",
        "timestamp": 1661324860
    },
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16357\">#16357</a>, the idempotent operators <code>Q q</code> on <code>X _[n+1]</code> are decomposed as sums of postcompositions with degeneracy operators. (In particular, when it makes sense, the image of <code>Q q</code> consists of degenerate simplices.) Using this decomposition, some tools are introduced which shall be helpful when proving that the normalised Moore complex functor reflects isomorphisms.<br>\n(PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16276\">#16276</a> about epi mono factorisations in the category <code>simplex_category</code> should also be ready now.)</p>",
        "id": 298600302,
        "sender_full_name": "Joël Riou",
        "timestamp": 1663080119
    },
    {
        "content": "<p>I have done a series of dependant PR which leads to a version of the Dold-Kan equivalence of categories in the general case of additive categories : <code>karoubi (simplicial_object C) ≌ karoubi (chain_complex C ℕ)</code>. These are:</p>\n<ul>\n<li><del><code>dold-kan-13</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17548\">#17548</a>: the normalized Moore complex of a split simplicial object</del></li>\n<li><del><code>dold-kan-14</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17551\">#17551</a>: starting the definition of the inverse functor of the Dold-Kan equivalence</del></li>\n<li><del><code>dold-kan-15</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17607\">#17607</a>: the inverse functor of the Dold-Kan equivalence</del></li>\n<li><del><code>karoubi_chain_complex_equivalence</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17569\">#17569</a>: an equivalence of categories for homological complexes</del></li>\n<li><del><code>dold-kan-16</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17577\">#17577</a>: N₂ reflects isomorphisms</del></li>\n<li><del><code>idempotents-functor-extension</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17603\">#17603</a>: universal property of <code>karoubi</code></del></li>\n<li><del><code>dold-kan-17</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17619\">#17619</a>: starting the definition of the counit isomorphism of the Dold-Kan equivalence</del></li>\n<li><del><code>dold-kan-18</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17633\">#17633</a>: the counit isomorphism of the Dold-Kan equivalence</del></li>\n<li><del><code>dold-kan-19</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17638\">#17638</a>: starting the definition of the unit isomorphism of the Dold-Kan equivalence</del></li>\n<li><del><code>dold-kan-20</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17640\">#17640</a>: The Dold-Kan equivalence for additive categories</del></li>\n</ul>\n<p>I am not in a hurry, but doing this long series may allow me to focus on other Lean activities (like reviewing and mathlib4), I just hope this can be merged before the great freeze.</p>",
        "id": 311127551,
        "sender_full_name": "Joël Riou",
        "timestamp": 1668944457
    },
    {
        "content": "<p>I will try to review this chain in the next few days.<br>\nAs a start, I left a comment on the first PR, and kicked the 2nd on the queue.</p>",
        "id": 313225150,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1669882950
    },
    {
        "content": "<p>Thanks very much <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> for the reviews of these PRs. The equivalence <code>karoubi (simplicial_object C) ≌ karoubi (chain_complex C ℕ)</code> for additive categories in now in <code>mathlib</code>. I shall now prepare a few more PRs which deduce <code>simplicial_object C ≌ chain_complex C ℕ</code> for abelian categories with good definitional properties.</p>",
        "id": 315326781,
        "sender_full_name": "Joël Riou",
        "timestamp": 1670839135
    },
    {
        "content": "<p>I have introduced a series of 5 more PRs:</p>\n<ul>\n<li><code>dold-kan-21</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17921\">#17921</a>: idempotent completeness of <code>homological_complex</code></li>\n<li><code>dold-kan-22</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17922\">#17922</a>: compatibilities I</li>\n<li><code>dold-kan-23</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17923\">#17923</a>: compatibilities II</li>\n<li><code>dold-kan-24</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17925\">#17925</a>: the Dold-Kan equivalence for pseudoabelian categories</li>\n<li><code>dold-kan-25</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/17926\">#17926</a>: the Dold-Kan equivalence for abelian categories<br>\n(<code>dold-kan-22</code> and <code>dold-kan-23</code> are independent of <code>dold-kan-21</code>.)</li>\n</ul>",
        "id": 315629385,
        "sender_full_name": "Joël Riou",
        "timestamp": 1670948505
    }
]