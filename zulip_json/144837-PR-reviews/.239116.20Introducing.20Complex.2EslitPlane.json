[
    {
        "content": "<p>It would be nice to get some feedback on this one.</p>",
        "id": 408686772,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1702933227
    },
    {
        "content": "<p><span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> ?</p>",
        "id": 408969690,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703003708
    },
    {
        "content": "<p>I would use <code>Not (z ≤ 0)</code> as the definition.</p>",
        "id": 408970174,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703003864
    },
    {
        "content": "<p>Also, I would put it into a separate file (very short for now), with <code>mem_slitPlane_iff'</code> renamed to <code>mem_slitPlane_iff_arg</code> and left in <code>Complex/Arg</code>.</p>",
        "id": 408970347,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703003905
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239116.20Introducing.20Complex.2EslitPlane/near/408970174\">said</a>:</p>\n<blockquote>\n<p>I would use <code>Not (z ≤ 0)</code> as the definition.</p>\n</blockquote>\n<p>Why? (I'm not against, just curious. It would probably break some proofs down the line, but they can easily be fixed.)</p>",
        "id": 408970465,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703003962
    },
    {
        "content": "<p>Because this way you can use API about <code>PartialOrder</code> etc.</p>",
        "id": 408970553,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004002
    },
    {
        "content": "<p>Some proofs should become easier. BTW, we have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=StarConvex#doc\">docs#StarConvex</a>. Is it available in <code>Complex/Arg</code>?</p>",
        "id": 408970729,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004055
    },
    {
        "content": "<p>This is the preferred way to formulate the <code>star_shaped</code> lemma.</p>",
        "id": 408970794,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004084
    },
    {
        "content": "<p>There is <code>mem_slitPlane_iff_not_le_zero</code>, so one can easily convert to <code>Not (z ≤ 0)</code>if desired. Is there useful API for this order on complex numbers?</p>",
        "id": 408970825,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703004095
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=StarConvex#doc\">docs#StarConvex</a> is not visible in <code>Analysis.SpecialFunctions.Complex.Arg</code>.</p>",
        "id": 408971134,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703004207
    },
    {
        "content": "<p>Do you need the <code>star_shaped</code> lemma in <code>Complex.Arg</code>?</p>",
        "id": 408971195,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004228
    },
    {
        "content": "<p>UPD about the file: probably, you're right, and we don't need a new file for the definition of <code>slitPlane</code>.</p>",
        "id": 408971363,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004290
    },
    {
        "content": "<p>I have family obligations for the next several hours, then I'll review the proofs in your PR. Adding to my TODO list.</p>",
        "id": 408971493,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004317
    },
    {
        "content": "<p>I will probably need the <code>star_shaped</code> lemma in the intended application (bounding differences of the complex log and its Taylor polynomials), but it may not need to reside in the <code>Arg</code> file.</p>",
        "id": 408971541,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703004338
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239116.20Introducing.20Complex.2EslitPlane/near/408971493\">said</a>:</p>\n<blockquote>\n<p>I have family obligations for the next several hours, then I'll review the proofs in your PR. Adding to my TODO list.</p>\n</blockquote>\n<p>Thanks!</p>",
        "id": 408971554,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703004346
    },
    {
        "content": "<p>I suggest that you move the definition of <code>slitPlane</code> to some basic file like <code>Data.Complex.Basic</code> or <code>Data.Complex.Order</code>, then put the <code>iff_arg</code> lemma in <code>Complex.Arg</code>, and the <code>star_shaped</code> lemma in some file that knows about <code>StarConvex</code>.</p>",
        "id": 408971823,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004441
    },
    {
        "content": "<p>That will require importing the new file from <code>Analysis.SpecialFunctions.Complex.Arg</code>. I assume this will be OK.</p>",
        "id": 408971982,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703004488
    },
    {
        "content": "<p>Why?</p>",
        "id": 408972030,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004505
    },
    {
        "content": "<p>The <code>iff_arg</code> lemma will have to know the definition of <code>slitPlane</code>.</p>",
        "id": 408975224,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703004532
    },
    {
        "content": "<p>Ah, sorry; I misread: you speak of an existing file, not a new one.</p>",
        "id": 408975305,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703004558
    },
    {
        "content": "<p>Clearly, <code>Complex.Arg</code> already imports both <code>Data.Complex.Basic</code> and <code>Data.Complex.Order</code>.</p>",
        "id": 408975315,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703004562
    },
    {
        "content": "<p>OK; I'll do that now and then wait for your comments.</p>",
        "id": 408975520,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703004632
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239116.20Introducing.20Complex.2EslitPlane/near/408970174\">said</a>:</p>\n<blockquote>\n<p>I would use <code>Not (z ≤ 0)</code> as the definition.</p>\n</blockquote>\n<p>Is this also a useful definition in the generality of <code>StarOrderedRing</code>? cc <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>.</p>",
        "id": 408975617,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1703004674
    },
    {
        "content": "<p>My feeling is that <code>Data.Complex.Basic</code> does not have enough imports. Is <code>Analysis.Complex.Basic</code> a reasonable place (minus the <code>arg</code>-related lemmas)?</p>",
        "id": 408979215,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703005190
    },
    {
        "content": "<p>(Have to cook dinner now...)</p>",
        "id": 408980646,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703005637
    },
    {
        "content": "<p>Eric, no, not really.</p>",
        "id": 408983968,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1703006864
    },
    {
        "content": "<p>The reason it's a useful definition in the complex plane is because you take a non-simply-connected domain: <code>\\C \\\\ {0}</code> and cut a ray to make it simply connected. Consequently, closed complex differential forms (effectively, differentiable functions) are exact (i.e., have an antiderivative) on this domain. There are other reasons removing this particular ray is nice, but I think this is the most significant one.</p>",
        "id": 408985280,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1703007352
    },
    {
        "content": "<p>Michael, Analysis looks like overkill. It's <code>Data.Complex.Order</code> insufficient?</p>",
        "id": 408987126,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1703008085
    },
    {
        "content": "<p>Thanks, that nicely explains why it would be a useless definition on the quaternions</p>",
        "id": 408990297,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1703009279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239116.20Introducing.20Complex.2EslitPlane/near/408987126\">said</a>:</p>\n<blockquote>\n<p>Michael, Analysis looks like overkill. It's <code>Data.Complex.Order</code> insufficient?</p>\n</blockquote>\n<p>I want to have the norm for <code>mem_slitPlane_of_norm_lt_one</code>. But I guess I could use <code>Complex.abs</code> instead, which should be available there. (It would be really nice to be able to write <code>z.abs</code> instead of <code>Complex.abs z</code> when <code>z</code> is a complex number...)</p>",
        "id": 408994225,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703010786
    },
    {
        "content": "<p>But I think I'll wait with the move until after <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> has commented on the PR.</p>",
        "id": 408994308,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703010836
    },
    {
        "content": "<p>Btw my opinion is that we should generally favor the norm to <code>Complex.abs</code>, if only because it matches the treatment of <code>IsROrC</code>.</p>",
        "id": 408994552,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703010932
    },
    {
        "content": "<p>I agree (if just because it is easier to write and looks nicer), but it is defined a bit further on in the import hierarchy (I think): <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Complex.instNormComplex#doc\">docs#Complex.instNormComplex</a> in <code>Analysis.Complex.Basic</code>.</p>",
        "id": 408994688,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703010980
    },
    {
        "content": "<p>(That's why I moved it to that file.)</p>",
        "id": 408995101,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703011188
    },
    {
        "content": "<p>Maybe we should move the definition up</p>",
        "id": 408995118,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703011196
    },
    {
        "content": "<p>You mean just define a <code>Norm</code> instance somewhere earlier?</p>",
        "id": 408995243,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1703011236
    },
    {
        "content": "<p>On the other hand, the slit plane mostly occurs in analytic (in a wide sense) contexts, I think, so putting it into <code>Analysis</code> makes some sense.</p>",
        "id": 408995275,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703011251
    },
    {
        "content": "<p><code>Data.Complex.Order</code> does not know <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Norm#doc\">docs#Norm</a>, so we cannot put it there.</p>",
        "id": 408995382,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703011309
    }
]