[
    {
        "content": "<p>There's been some argument on whether this is necessary at all, and also I came up with a separate suggestion on how to implement this using a modified version of <code>Exists.choose</code>. I'm hoping to draw a couple more eyes to this PR so that we can make these design decisions in a well-informed way</p>",
        "id": 386644772,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1692720619
    },
    {
        "content": "<p>(the details: zero-divisors meant that <code>Exists.choose</code> could say that <code>Ring.divide 0 t â‰  0</code>, so a bunch of theorems had stronger typeclass requirements than needed. I instead suggested using a version of <code>Exists.choose</code> that prefers a specific output instead, weakening the statements but making the definition more awkward)</p>",
        "id": 386644938,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1692720691
    },
    {
        "content": "<p>Am I right in claiming that the motivation here is to defer a proof obligation downstream to make the induction easier?</p>",
        "id": 386658691,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692724465
    },
    {
        "content": "<p>And that in practice, we don't need partial division at all in the downstream PR, we just don't want to prove it's always in the non-partial region until we've set up some API lemmas?</p>",
        "id": 386658807,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692724510
    }
]