[
    {
        "content": "<p>I get the following linter error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"> The `fails_quickly` linter reports: -/</span>\n<span class=\"c\">/-</span><span class=\"cm\"> TYPE CLASS SEARCHES TIMED OUT.</span>\n<span class=\"cm\">For the following classes, there is an instance that causes a loop, or an excessively long search. -/</span>\n<span class=\"c1\">-- geometry/manifold/smooth_manifold_with_corners.lean</span>\n<span class=\"k\">#print</span> <span class=\"n\">smooth_manifold_with_corners</span> <span class=\"c\">/-</span><span class=\"cm\"> type-class inference timed out -/</span>\n</code></pre></div>\n<p>How do I debug this?</p>",
        "id": 251072533,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630174181
    },
    {
        "content": "<p>In this case, the problematic instance is <code>smooth_ring.to_smooth_ring</code> that is circular. <br>\nI will add generic instructions to the output.</p>",
        "id": 251105326,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1630212184
    },
    {
        "content": "<p>It's not good that the failure is not found when testing <code>smooth_ring</code>...</p>",
        "id": 251105344,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1630212220
    },
    {
        "content": "<p>Ah, the class is defined on <code>semiring R</code>, but the loop only triggers only when we have <code>ring R</code>, not when we merely have <code>semiring R</code>... Not sure how to detect this automatically.</p>",
        "id": 251105492,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1630212393
    },
    {
        "content": "<p>Ooh, thanks for catching that! That was a silly instance that should have been dropped <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 251107661,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630215060
    },
    {
        "content": "<p>Hooray, CI gave me the <span aria-label=\"check mark\" class=\"emoji emoji-2714\" role=\"img\" title=\"check mark\">:check_mark:</span></p>",
        "id": 251113997,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630222646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> On GH, <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> asks what is the best name for the concept of a topological (resp. smooth) semiring. This PR points out that we can unify the definitions of <code>topological_semiring</code> and <code>topological_ring</code>, because every ring that is a topological semiring automatically has continuous negation.</p>\n<p>I propose that we call the new definition <code>topological_ring</code> and <code>smooth_ring</code>. But this means that <code>nnreal</code> will now be a <code>topological_ring</code>. Should I call them <code>topological_semiring</code> and <code>smooth_semiring</code> instead? Most cases of interest will actually be rings. And, after all, we are also calling \"semimodules\" over <code>nat</code> by the name <code>module</code>.</p>",
        "id": 251230023,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630330604
    },
    {
        "content": "<p>I think that having \"topological ring\" not implying \"ring\" would be pretty bad.</p>",
        "id": 251259278,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630342697
    },
    {
        "content": "<p>it doesn't \"imply\" ring anyway, it takes it as a parameter</p>",
        "id": 251259555,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1630342808
    },
    {
        "content": "<p>As a counter-argument to Patrick's point:<code>ring_hom</code> doesn't imply <code>ring</code></p>",
        "id": 251259633,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630342826
    },
    {
        "content": "<p>It implies it in the sense that whenever the type class search can find one it can find the other.</p>",
        "id": 251259730,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630342862
    },
    {
        "content": "<p>And I think that <code>ring_hom</code> not implying ring is also bad;</p>",
        "id": 251259777,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630342882
    },
    {
        "content": "<p>Would making users write <code>semiring_hom</code> when they are working with <code>ring</code>s be better than the status quo?</p>",
        "id": 251259960,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630342933
    },
    {
        "content": "<p>That wouldn't be better because most beginners wouldn't know about semirings. I guess there is no good solution (calling them <code>add_mul_one_hom</code> isn't so great either)</p>",
        "id": 251260189,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630343037
    },
    {
        "content": "<p>I guess notation makes <code>ring_hom</code> matter less than <code>topological_ring</code></p>",
        "id": 251260328,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630343082
    },
    {
        "content": "<p>I tell students <code>-&gt;*</code> means group hom and probably a lot of them don't ever notice</p>",
        "id": 251279541,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630350890
    },
    {
        "content": "<p>Seems like we don't really have a consensus yet. So... please vote below about the new name for topological (semi)rings.</p>",
        "id": 251334615,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630388315
    },
    {
        "content": "<p>/poll How should we call topological (semi)rings?</p>\n<ul>\n<li><code>topological_ring</code></li>\n<li><code>topological_semiring</code></li>\n</ul>",
        "id": 251334634,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630388343
    },
    {
        "content": "<p>People seem to be in favour of keeping the name as it is. Any objections to merging the PR?</p>",
        "id": 251534939,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630491248
    }
]