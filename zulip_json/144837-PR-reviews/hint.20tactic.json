[
    {
        "content": "<p>I think the <code>hint</code> tactic in <a href=\"https://github.com/leanprover-community/mathlib4/pull/8363\">#8363</a> is ready to go.</p>\n<p>(History here: <span class=\"user-mention\" data-user-id=\"569722\">@Pol'tta / Miyahara K≈ç</span> had already implemented this in <a href=\"https://github.com/leanprover-community/mathlib4/pull/5363\">#5363</a>, and somehow I had missed it. They kindly merged their version into mine, producing something better than either of them.)</p>\n<p>We will need to play around with the list of tactic we want to run <code>register_hint</code> on, to get the best user experience, but I think that can happen progressively.</p>",
        "id": 402093145,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700006401
    },
    {
        "content": "<p>I have a followup PR that runs all the hint tactics in parallel, and it is really speedy. It means that <code>aesop</code> and <code>exact?</code> start running, but if <code>simp_all</code> quickly comes back with a solution we report that immediately to the user. However it requires some import restructuring, so won't be part of the initial PR.</p>",
        "id": 402093506,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700006491
    },
    {
        "content": "<p>Anyone interested in reviewing / merging? It is meta code, but nothing particularly deep.</p>",
        "id": 402341300,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700088541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> and <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> made suggestions of tactics to register with <code>hint</code> (<code>tauto</code>, <code>constructor</code>, and <code>split_ifs</code>).</p>\n<p>They are good suggestions, but I think the best strategy will be to ship <code>hint</code> initially with few tactics, and then let people try it out.</p>\n<p>It is extremely easy to add more tactics locally: just <code>register_hint constructor</code> etc. I would like to see examples of the form:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">hint</span> <span class=\"c1\">-- no suggestions</span>\n\n<span class=\"n\">register_hint</span> <span class=\"n\">my_tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">hint</span> <span class=\"c1\">-- Try these: my_tactic</span>\n</code></pre></div>\n<p>to go along with additions.</p>\n<p>If anything, perhaps we should <em>remove</em> <code>register_hint</code>s from the initial PR.</p>",
        "id": 402357783,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700097054
    },
    {
        "content": "<p>(Note <code>split_ifs</code> is already covered by <code>split</code>, which also splits match statements.)</p>",
        "id": 402358020,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700097167
    },
    {
        "content": "<p>I'll give a more thorough look later tonight if no one merges first.</p>",
        "id": 402358187,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1700097250
    },
    {
        "content": "<p>I am happy to see fewer tactics in <code>hint</code> and add them gradually, if/when needed!</p>",
        "id": 402360551,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1700098415
    },
    {
        "content": "<p>Okay, it has been merged! Please try out <code>hint</code> and request further tactics to be added.</p>",
        "id": 402369385,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700103080
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8435\">#8435</a> is the parallel version of <code>hint</code>.</p>",
        "id": 402369547,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700103148
    },
    {
        "content": "<p>I have just improved the parallel version of <code>hint</code> to include automatic cancellation of other tasks once one task succeeds!</p>",
        "id": 402945465,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700361797
    }
]