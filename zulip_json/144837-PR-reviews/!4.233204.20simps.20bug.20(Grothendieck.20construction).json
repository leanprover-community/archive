[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>, in <a href=\"https://github.com/leanprover-community/mathlib4/pull/3204\">!4#3204</a>, <code>@[simps]</code> is incorrectly producing lemmas for Prop-valued projections. I can't find the spot in the implementation of simp where it is meant to be discarding these, so I haven't fixed it. Would you be able to take a look at this?</p>",
        "id": 346709752,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1680571599
    },
    {
        "content": "<p>For fields that are sometimes propositions and sometimes not, <code>@[simps]</code> for now always generates this lemma. I can add a check that also checks whether the equality is propositional just before generating the simp lemma.<br>\n(the check for propositional fields is in the code for <code>initialize_simps_projections</code>)</p>",
        "id": 346822590,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1680608870
    },
    {
        "content": "<p>Seems nice to do, otherwise this is a weird cause of <code>simpNF</code> linting errors, which are a pain to diagnose/review.</p>",
        "id": 346989846,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1680651035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>, I guess a separate request about <code>simp</code>: could we have a way to say \"produce all projects <em>except</em> the following\", e.g. something like <code>@[simps -inverse_map_fiber_down_down]</code>. When there is just one to remove it is annoying to have to read through the output of <code>@[simps?]</code>, and collecting the complement! Also hard to understand afterwards.</p>",
        "id": 347000971,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1680656984
    }
]