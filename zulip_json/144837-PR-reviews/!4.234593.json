[
    {
        "content": "<p>Hello! I hope this is the correct place to post this - feel free to move somewhere else if needed.</p>\n<p>Together with <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> , <span class=\"user-mention\" data-user-id=\"456962\">@Leo Mayer</span> , <span class=\"user-mention\" data-user-id=\"110401\">@Brendan Seamas Murphy</span> , we started formalizing the beginning of my <a href=\"https://samvangool.net/assets/pdf/vangool-banff-2023.pdf\">talk</a> at Banff. I just made a PR of the adjunction between frames and topological spaces. We would very much appreciate comments. Some thoughts:</p>\n<ul>\n<li>A glitch that is probably not yet dealt with in the best possible way is the lemma <code>elim_exists_prop</code> (<a href=\"https://github.com/leanprover-community/mathlib4/blob/9dbf28a165ee7703265e5f2f68a1b3c9b1b21ba7/Mathlib/Topology/Order/FrameAdjunction.lean#L164\">here</a>)</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">elim_exists_prop</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">True</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">aesop</span>\n</code></pre></div>\n<p>which is used <a href=\"https://github.com/leanprover-community/mathlib4/blob/9dbf28a165ee7703265e5f2f68a1b3c9b1b21ba7/Mathlib/Topology/Order/FrameAdjunction.lean#L170\">one time</a> in the file, but seems (to me) like it should be a general principle somewhere in the library.</p>\n<ul>\n<li>It was suggested at Banff that we could map to <code>bool</code> instead of <code>Prop</code>. I personally don't have a strong opinion about this either way.</li>\n<li>It is very likely that I made some Mathlib4-beginner-mistakes in preparing this pull request, please feel free to point them out. </li>\n<li>I did not find a file with precise Mathlib4-from-scratch-contribution-instructions yet (like <a href=\"https://leanprover-community.github.io/contribute/index.html\">this one for Mathlib3</a>), I think?</li>\n</ul>\n<p>Thanks!</p>",
        "id": 363079547,
        "sender_full_name": "Sam van G",
        "timestamp": 1685718223
    },
    {
        "content": "<p>Also tagging <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> who previously expressed interest in formalizing the math that this PR begins to address (this PR is only a small step in the larger project of formalizing Stone-Priestley duality)</p>",
        "id": 363082328,
        "sender_full_name": "Sam van G",
        "timestamp": 1685718759
    },
    {
        "content": "<p>Cool! How far are you currently? I have Birkhoff duality on <a href=\"https://github.com/leanprover-community/mathlib/tree/stone_duality\">branch#stone_duality</a>, although I haven't yet packaged it up as an equivalence of categories.</p>",
        "id": 363137195,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1685731265
    },
    {
        "content": "<p>In the PR we only have the (contravariant) adjunction between frames and spaces.  <span class=\"user-mention\" data-user-id=\"110401\">@Brendan Seamas Murphy</span> has some more general work about restricting an adjunction to its fixpoints to get a category. We’re hoping to then use that to get the various dual equivalences, along the lines of what I outlined in my Banff slides. I think Birkhoff duality (for finite DLs and finite posets) will be the crucial non-abstract-nonsense component of that.</p>",
        "id": 363178962,
        "sender_full_name": "Sam van G",
        "timestamp": 1685745356
    },
    {
        "content": "<p>So it’s great that you’ve done that already!</p>",
        "id": 363179068,
        "sender_full_name": "Sam van G",
        "timestamp": 1685745388
    },
    {
        "content": "<p>Ah great! I was afraid we'd stepped on each other's toes. My code is still in Lean 3, but hopefully it can be ported easily once someone has taught me oneshot.</p>",
        "id": 363239475,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1685781210
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> did you see the recently updated instructions in the README of <a href=\"https://github.com/leanprover-community/mathport\">https://github.com/leanprover-community/mathport</a> ?</p>",
        "id": 363241252,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1685781684
    },
    {
        "content": "<p>Exams = no time <span aria-label=\"frowning\" class=\"emoji emoji-1f626\" role=\"img\" title=\"frowning\">:frowning:</span></p>",
        "id": 363242309,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1685781951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> No rush. We can perhaps organize a call after your exams are over to see how to sync. Best of luck with the exams!</p>",
        "id": 363313452,
        "sender_full_name": "Sam van G",
        "timestamp": 1685800757
    },
    {
        "content": "<p>Hi! I am hoping to revive and finish this PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/4593\">#4593</a>, on the adjunction between Top and Locales, that we started in June during Banff (and that I subsequently procrastinated on finishing, sorry...!) <br>\nI finally had time to look at <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> work on this. Thank you so much, I learned a lot from your golfing. <br>\nYaël wrote in the Github discussion that</p>\n<blockquote>\n<p>I haven't fixed the names. They are currently</p>\n<ol>\n<li>Not capitalised properly</li>\n<li>Dumped in the root namespace<br>\nNot sure which way to fix them, so please offer suggestions!</li>\n</ol>\n</blockquote>\n<p>I am not so familiar with the current requirements for merging into Mathlib4 so I am hoping I can ask for some help here. Apologies for the probably naive questions:</p>\n<ul>\n<li>Re (1), I'm not sure either what would be the correct capitalisation, how can I find out? </li>\n<li>Re (2), does this just mean I should encapsulate everything in a namespace?</li>\n<li>There is also a comment (l. 61) <code>-- TODO: Merging those variable breaks</code> , but I'm not sure what it means, or how to fix it.</li>\n<li>Finally, I also noticed a message \"leanprover-community-mathlib4-bot added the merge-conflict label 3 weeks ago\"... what can I do about that?<br>\nThanks!</li>\n</ul>",
        "id": 397527817,
        "sender_full_name": "Sam van G",
        "timestamp": 1697728669
    },
    {
        "content": "<p>Regarding your last point: the merge-conflict label means that there is a merge conflict with the current master. You need to merge master into your branch and resolve the conflicts manually to get rid of the label</p>",
        "id": 397528576,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1697728924
    },
    {
        "content": "<p>Sam, see <a href=\"https://leanprover-community.github.io/contribute/naming.html\">#naming</a> for guidelines on naming conventions.</p>",
        "id": 397530160,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697729402
    },
    {
        "content": "<p>Another quick note: after glancing at the PR, I notice there's a bunch of stuff going on with coercions (e.g., in <code>Order.Hom.Lattice</code>), including cleaning up porting notes, that can easily be split off into a separate PR. That should be merged quickly and will make this one shorter and easier to review.</p>",
        "id": 397530891,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697729637
    },
    {
        "content": "<p>As for a namespace, I think something like <code>CategoryTheory.Locale</code> might make sense, but I'm not terribly familiar with the category theory end of the library, so maybe that doesn't quite match conventions there</p>",
        "id": 397531332,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697729778
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/!4.234593/near/397530891\">said</a>:</p>\n<blockquote>\n<p>Another quick note: after glancing at the PR, I notice there's a bunch of stuff going on with coercions (e.g., in <code>Order.Hom.Lattice</code>), including cleaning up porting notes, that can easily be split off into a separate PR. That should be merged quickly and will make this one shorter and easier to review.</p>\n</blockquote>\n<p>I have tried to do this as a new PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/7796\">#7796</a>. I hope this is what you were after -- let me know if it looks OK or if anything needs to be changed there.</p>",
        "id": 397653827,
        "sender_full_name": "Sam van G",
        "timestamp": 1697789266
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/!4.234593/near/397531332\">said</a>:</p>\n<blockquote>\n<p>As for a namespace, I think something like <code>CategoryTheory.Locale</code> might make sense, but I'm not terribly familiar with the category theory end of the library, so maybe that doesn't quite match conventions there</p>\n</blockquote>\n<p>I have attempted to fix the naming conventions and namespaces in <a href=\"https://github.com/leanprover-community/mathlib4/pull/4593\">#4593</a>, the commit is <a href=\"https://github.com/leanprover-community/mathlib4/pull/4593/commits/a09688ab5d330224b5d44ef865a48228a27fef6a\">here</a>. If someone could have a look and tell me if this now indeed looks right, that would be helpful, as I wasn't 100% sure in all cases.</p>",
        "id": 397656667,
        "sender_full_name": "Sam van G",
        "timestamp": 1697790218
    },
    {
        "content": "<p>The split-off PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/7796\">#7796</a> was just merged (thanks for being so fast, <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> and <span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span>).</p>",
        "id": 397669665,
        "sender_full_name": "Sam van G",
        "timestamp": 1697794652
    },
    {
        "content": "<p>I believe <a href=\"https://github.com/leanprover-community/mathlib4/pull/4593\">#4593</a> (which contains the new file FrameTopAdjunction) should be in good shape now too (I also fixed the \"variable\" problem mentioned above).  Would someone be willing to give it a look to check it's all in order with naming conventions etc?</p>",
        "id": 397669717,
        "sender_full_name": "Sam van G",
        "timestamp": 1697794676
    },
    {
        "content": "<p>I have a busy morning but I'll take a look this afternoon if nobody else has reviewed it by then. Glancing now, it looks great, though I do see a lot of  <code>def</code>s with no API [this might be fine].</p>",
        "id": 397669999,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1697794786
    },
    {
        "content": "<p>I think a handful of the functions in that PR should be lowerCamel rather than UpperCamel case, but I'll leave that for someone else to review</p>",
        "id": 397673035,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697795844
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/!4.234593/near/397673035\">said</a>:</p>\n<blockquote>\n<p>I think a handful of the functions in that PR should be lowerCamel rather than UpperCamel case, but I'll leave that for someone else to review</p>\n</blockquote>\n<p>me too.. Thanks for having a look</p>",
        "id": 397673482,
        "sender_full_name": "Sam van G",
        "timestamp": 1697796000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"240862\">Oliver Nash</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/!4.234593/near/397669999\">said</a>:</p>\n<blockquote>\n<p>I have a busy morning but I'll take a look this afternoon if nobody else has reviewed it by then. Glancing now, it looks great, though I do see a lot of  <code>def</code>s with no API [this might be fine].</p>\n</blockquote>\n<p>Thanks Oliver. No rush at all.<br>\nRegarding your comment about <code>def</code>s, I was just able to remove three of these <code>def</code>s by inlining them instead (getting the <code>def</code> count down from 12 to 9). <br>\nWhen I try to remove more defs, I get in trouble with things that are no longer inferred. <br>\nFor example, the <code>unitCounit</code> def on l. 118 seems silly since it looks like it is just a pair, but when I try to inline it in l. 123, Lean complains that there are two missing fields (the triangle equalities), and adding <code>by infer_instance</code> won't solve it. <br>\nSimilar problems for the <code>def Counit</code> and <code>def Unit</code>.<br>\nI don't know how important it is to remove defs, I leave it for you to judge when you get around to reviewing it.</p>",
        "id": 397674314,
        "sender_full_name": "Sam van G",
        "timestamp": 1697796274
    },
    {
        "content": "<p>Thanks for your comment about <code>elim_exists_prop</code>, <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> .  It helped me realize that I could get rid of it by giving an existing lemma <code>Prop.exists_iff</code> to two <code>simp</code>s in my main file.</p>",
        "id": 397676751,
        "sender_full_name": "Sam van G",
        "timestamp": 1697797063
    }
]