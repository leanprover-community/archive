[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3389\">!4#3389</a> forward ports 4 mathlib3 commits</p>",
        "id": 348426997,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681211368
    },
    {
        "content": "<p>Not sure though if it should be <code>SimpleGraph.ConnectedComponent.inhabited</code> or <code>SimpleGraph.**c**onnectedComponent.inhabited</code>, though I lean towards the former</p>",
        "id": 348428029,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681211574
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3245\">!4#3245</a> is fixed and ready to merge (again)</p>",
        "id": 348642239,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681285589
    },
    {
        "content": "<p>Ready for review:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3063\">!4#3063</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3315\">!4#3315</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3437\">!4#3437</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3441\">!4#3441</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3405\">!4#3405</a></p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3439\">!4#3439</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3443\">!4#3443</a></p>",
        "id": 350107468,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681546073
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3444\">!4#3444</a> is ready for review – in true Riou style it begins a long chain of PRs</p>",
        "id": 350177735,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681571075
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3453\">!4#3453</a> is ready</p>",
        "id": 350235973,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681607899
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3386\">!4#3386</a></p>",
        "id": 350239914,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681611042
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3455\">!4#3455</a></p>",
        "id": 350248307,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681618595
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3401\">!4#3401</a></p>",
        "id": 350258124,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681625769
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3454\">!4#3454</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3456\">!4#3456</a></p>",
        "id": 350258843,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681626202
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3338\">!4#3338</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3343\">!4#3343</a></p>",
        "id": 350263378,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681628957
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3211\">!4#3211</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3458\">!4#3458</a></p>",
        "id": 350269282,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681632257
    },
    {
        "content": "<p>Note that it's not really necessary for you to post all of the ready PRs; we have <a href=\"https://bit.ly/3cKk3ld\">#queue4</a> which automatically sorts by the right thing</p>",
        "id": 350270643,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1681632958
    },
    {
        "content": "<p>You should probably make <a href=\"https://bit.ly/3cKk3ld\">#queue4</a> sort by \"Recently updated\" rather than \"Least recently updated\"?</p>",
        "id": 350270835,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681633029
    },
    {
        "content": "<p>The idea is to catch long-forgotten PRs.</p>",
        "id": 350271907,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1681633518
    },
    {
        "content": "<p>In practice though the order at <a href=\"https://leanprover-community.github.io/mathlib-port-status\">#port-dashboard</a> is probably more useful during porting</p>",
        "id": 350271930,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1681633531
    },
    {
        "content": "<p>The homology hype train continues:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3492\">!4#3492</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3493\">!4#3493</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3468\">!4#3468</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3491\">!4#3491</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3495\">!4#3495</a></p>",
        "id": 350701892,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681805380
    },
    {
        "content": "<p>Other stuff:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3494\">!4#3494</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3496\">!4#3496</a> -&gt; <a href=\"https://github.com/leanprover-community/mathlib4/pull/3498\">!4#3498</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3499\">!4#3499</a></p>",
        "id": 350702176,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681805472
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3471\">!4#3471</a> – tactic port, needed for <code>LinearAlgebra.FiniteDimensional</code></p>",
        "id": 350702417,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681805557
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3468\">!4#3468</a> is (again) ready to merge</p>",
        "id": 350751975,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681818102
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3357\">!4#3357</a> (<code>Topology.MetricSpace.Polish</code>)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3501\">!4#3501</a> (aesop bump)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3500\">!4#3500</a> (<code>AlgebraicTopology.CechNerve</code>)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3463\">!4#3463</a> (<code>CategoryTheory.Sites.Limits</code>)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3508\">!4#3508</a> (forward port)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3405\">!4#3405</a> (<code>Data.Seq.WSeq</code>)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3506\">!4#3506</a> (<code>Data.Complex.Cardinality</code>)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3513\">!4#3513</a> (<code>Analysis.NormedSpace.BallAction</code>)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3515\">!4#3515</a> (<code>Algebra.Category.ModuleCat.Products</code>)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3206\">!4#3206</a> (<code>Logic.Equiv.TransferInstance</code>) -&gt; <a href=\"https://github.com/leanprover-community/mathlib4/pull/3505\">!4#3505</a> (<code>CategoryTheory.Preadditive.Opposite</code>)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3514\">!4#3514</a> (<code>RingTheory.Localization.Submodule</code>)</p>",
        "id": 350960413,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681888887
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598052\">@Jeremy Tan</span> please carefully reread <a href=\"#narrow/stream/144837-PR-reviews/topic/newer.20ports/near/350270643\">https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/newer.20ports/near/350270643</a></p>",
        "id": 350962383,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1681889435
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3106\">!4#3106</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/3480\">!4#3480</a> were marked as ready to merge but bors has not actually merged them</p>",
        "id": 351486516,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1682039063
    },
    {
        "content": "<p>Other stuff ready for review:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/3662\">!4#3662</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/3657\">!4#3657</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/3510\">!4#3510</a></p>",
        "id": 353031330,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1682562027
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3793\">!4#3793</a> was prematurely sent to bors and the build failed. It has since been fixed and is ready again</p>",
        "id": 355816684,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683215037
    },
    {
        "content": "<p>Thanks for the reminder, I was waiting to confirm the build was happy.</p>",
        "id": 355819978,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683215877
    },
    {
        "content": "<p>Hmm, I unfortunately can't seem to leave any comments on github right now</p>",
        "id": 355821212,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683216159
    },
    {
        "content": "<p>Another sledgehammer style PR is ready for review, this one involving <code>by</code>: <a href=\"https://github.com/leanprover-community/mathlib4/pull/3825\">!4#3825</a></p>",
        "id": 356306454,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683380344
    },
    {
        "content": "<p>It's tempting to leave this type of style cleanup to an auto-formatter</p>",
        "id": 356308220,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683380972
    },
    {
        "content": "<p>We don't really have one yet, but developing one would in the long term be a better use of time than doing stuff manually</p>",
        "id": 356308320,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683381007
    },
    {
        "content": "<p>I actually have ready a small addition to the style linter that checks for such \"isolated <code>by</code>s\", but I'll wait for <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> to finish reviewing</p>",
        "id": 356315466,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683382967
    },
    {
        "content": "<p>yes, I definitely came out of this wanting an auto-formatter</p>",
        "id": 356323088,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1683385378
    },
    {
        "content": "<p>A linter change is certainly better than nothing</p>",
        "id": 356324441,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683385786
    },
    {
        "content": "<p>CI is now green for <a href=\"https://github.com/leanprover-community/mathlib4/pull/3825\">!4#3825</a></p>",
        "id": 356403691,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683431069
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3942\">!4#3942</a> failed at merging because of a lint error, I've fixed it, it can be merged again now</p>",
        "id": 358027339,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683945910
    },
    {
        "content": "<p>Same for <a href=\"https://github.com/leanprover-community/mathlib4/pull/3945\">!4#3945</a></p>",
        "id": 358027417,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1683945973
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3938\">!4#3938</a>, by its very nature of changing the naming convention around <code>sup</code>s and <code>inf</code>s, should probably be merged as soon as possible because new PRs are still coming in with the old names and they may cause <em>either</em> merge conflicts or new things that break</p>",
        "id": 358199918,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684037293
    },
    {
        "content": "<p>I don't know if we reached consensus on that rename yet</p>",
        "id": 358215877,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684051414
    },
    {
        "content": "<p>Ah, it's been merged anyway</p>",
        "id": 358215920,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684051443
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4014\">!4#4014</a> can be merged now</p>",
        "id": 358823804,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684263484
    },
    {
        "content": "<p>Our out of sync queue is getting very long… a lot of the forward porting PRs are ready for review.</p>\n<blockquote>\n<p>The following 31 files at 33c67ae6 have been modified in mathlib3 since the commit at which they were verified.</p>\n</blockquote>",
        "id": 359993738,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684645472
    },
    {
        "content": "<p>Also <a href=\"https://github.com/leanprover-community/mathlib4/pull/4018\">!4#4018</a> (MeasureTheory.Constructions.BorelSpace.Basic) has just been sitting there ready to review for some days now</p>",
        "id": 359993937,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684645649
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4007\">!4#4007</a> alone will get the queue down to 21</p>",
        "id": 359999718,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684650354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"464202\">@Felix Weilacher</span>, note that <a href=\"https://github.com/leanprover-community/mathlib/pull/18962\">#18962</a> added three items to this list; it would be great if you could make a PR to forward-port them!</p>",
        "id": 360008290,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684655535
    },
    {
        "content": "<p>Apologies, I have been traveling and may not be able to get to it for a day or two.</p>",
        "id": 360050641,
        "sender_full_name": "Felix Weilacher",
        "timestamp": 1684672978
    },
    {
        "content": "<p>Don't worry, it's not urgent! But it should probably be higher up your list than any further contributions to mathlib3.</p>",
        "id": 360099982,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684691847
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4156\">!4#4156</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/4186\">!4#4186</a> were marked ready to merge but have not actually been merged</p>",
        "id": 360238554,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1684754846
    },
    {
        "content": "<p>There are merge conflicts</p>",
        "id": 360239470,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1684755061
    },
    {
        "content": "<p>according to bors at least</p>",
        "id": 360239568,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1684755094
    },
    {
        "content": "<p>I'd like to get a review of <a href=\"https://github.com/leanprover-community/mathlib4/pull/4420\">!4#4420</a> (InnerProductSpace.PiL2), which is one of the target files in port progress.</p>\n<p>Also <a href=\"https://github.com/leanprover-community/mathlib4/pull/4441\">!4#4441</a> (Analysis.Calculus.Deriv.Pow) has not been reviewed or delegated</p>",
        "id": 361852257,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1685332490
    },
    {
        "content": "<p>I was going to look at that second one shortly</p>",
        "id": 361873322,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685345237
    },
    {
        "content": "<p>Now I'd like <a href=\"https://github.com/leanprover-community/mathlib4/pull/4422\">!4#4422</a> to be reviewed and merged, so that <a href=\"https://github.com/leanprover-community/mathlib4/pull/4431\">!4#4431</a> can be merged</p>\n<p>(for the same reason as <a href=\"#narrow/stream/144837-PR-reviews/topic/!4.234200.20SProd/near/361672817\">here</a>)</p>",
        "id": 362073131,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1685423337
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/4447\">!4#4447</a> (Analysis.Calculus.Deriv.ZPow) should be ready for review even though it doesn't have the tag</p>",
        "id": 362467358,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1685541811
    },
    {
        "content": "<p>We should wait for <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>  to confirm that it is actually ready for review</p>",
        "id": 362468843,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685542100
    },
    {
        "content": "<p>It doesn't look ready to me, I imagine the plan is to rebase the commits first</p>",
        "id": 362468910,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1685542115
    },
    {
        "content": "<p>In the meantime, what about reviewing/merging <a href=\"https://github.com/leanprover-community/mathlib4/pull/4508\">!4#4508</a></p>",
        "id": 362470419,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1685542416
    },
    {
        "content": "<p>(which is a prereq for MeanValue)</p>",
        "id": 362471139,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1685542552
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598052\">@Jeremy Tan</span> Thank you for pushing my PRs. I'll rebase <code>Deriv.ZPow</code> in ~30m.</p>",
        "id": 362506132,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685549725
    },
    {
        "content": "<p>I'm at a family vacation and may not be available as often as usual.</p>",
        "id": 362506221,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685549747
    },
    {
        "content": "<p>Rebased <code>ZPow</code>, marked as <code>awaiting-review</code>.</p>",
        "id": 362507197,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685549965
    },
    {
        "content": "<p>I'll fix <code>MeanValue</code> tonight. The next big roadblock in the <code>*deriv</code> branch of calculus is a timeout in <a href=\"https://github.com/leanprover-community/mathlib4/pull/4256\">!4#4256</a> (<code>ContDiffDef</code>). I tried to fix it several times and failed.</p>",
        "id": 362507545,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1685550048
    }
]