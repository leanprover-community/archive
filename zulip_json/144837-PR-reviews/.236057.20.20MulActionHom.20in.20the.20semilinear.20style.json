[
    {
        "content": "<p>The PR is not yet ready but strange side effects appear, and I'm in trouble.</p>\n<p>Everything starts in <a href=\"https://github.com/leanprover-community/mathlib4/blob/54ef8a5aa385656150f113688e7393e236178d5b/Mathlib/Algebra/Hom/GroupAction.lean#L138\">https://github.com/leanprover-community/mathlib4/blob/54ef8a5aa385656150f113688e7393e236178d5b/Mathlib/Algebra/Hom/GroupAction.lean#L138</a> with a definition of a “semilinear” map between sets with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SMul#doc\">docs#SMul</a>, in the spirit of what exists for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearMap#doc\">docs#LinearMap</a><br>\nThe field is called <code>map_smul'</code> as it will be called for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearMap#doc\">docs#LinearMap</a>, to cope with inheritance of field names. (The beginning of the file contains material related to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CompTriple#doc\">docs#CompTriple</a> which will certainly have to be unified.)</p>\n<p>Then <a href=\"https://github.com/leanprover-community/mathlib4/blob/54ef8a5aa385656150f113688e7393e236178d5b/Mathlib/Algebra/Module/LinearMap.lean#L84\">https://github.com/leanprover-community/mathlib4/blob/54ef8a5aa385656150f113688e7393e236178d5b/Mathlib/Algebra/Module/LinearMap.lean#L84</a> I could update the definition of a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearMap#doc\">docs#LinearMap</a> using this new definition.<br>\nIt was however not clear to me what to do for classes, since <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SemiLinearMapClass#doc\">docs#SemiLinearMapClass</a> uses an <code>_sl</code> notation.</p>\n<p>Many updates have been done, it doesn't go to the end because of a problem about <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearEquiv#doc\">docs#LinearEquiv</a> where I seem to be forced to enter <code>e.toLinearMap m</code> instead of <code>e m</code> where<code>e : LinearEquiv M N</code> and <code>m : M</code>. The problem seems to first appear about <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=PiTensorProduct#doc\">docs#PiTensorProduct</a>, <a href=\"https://github.com/leanprover-community/mathlib4/blob/54ef8a5aa385656150f113688e7393e236178d5b/Mathlib/LinearAlgebra/PiTensorProduct.lean#L420\">https://github.com/leanprover-community/mathlib4/blob/54ef8a5aa385656150f113688e7393e236178d5b/Mathlib/LinearAlgebra/PiTensorProduct.lean#L420</a> but may be due to a wrong (re)definition of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearEquiv#doc\">docs#LinearEquiv</a> at <a href=\"https://github.com/leanprover-community/mathlib4/blob/54ef8a5aa385656150f113688e7393e236178d5b/Mathlib/Algebra/Module/Equiv.lean#L48\">https://github.com/leanprover-community/mathlib4/blob/54ef8a5aa385656150f113688e7393e236178d5b/Mathlib/Algebra/Module/Equiv.lean#L48</a></p>",
        "id": 398528906,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1698253522
    },
    {
        "content": "<p>(I don't know how to link to files/lines of the PR, obviously…)</p>",
        "id": 398529488,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1698253757
    },
    {
        "content": "<p>(if you click on a line of the PR, then the URL will update to be to that line, then you can copy it)</p>",
        "id": 398543594,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698259816
    },
    {
        "content": "<p>So I would be definitely grateful if some of you could have a look and share some idea about what could happen here.<br>\nI'm definitely ready to start over if I started on the wrong foot, but having a more flexible version of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SmulHom#doc\">docs#SmulHom</a> is a necessity for my work on primitive actions, and I don't believe one could have equivariant maps in mathlib disjoint from the analogous work on linear maps.<br>\nMaybe <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> , <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> ,  <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> or <span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> ?</p>",
        "id": 398670003,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1698320359
    },
    {
        "content": "<p>I managed to fix the <code>toLinearMap</code> issue, <a href=\"https://github.com/leanprover-community/mathlib4/pull/6057#discussion_r1374774280\">by adding a shortcut <code>FunLike</code> instance</a>. The other major suggestion I have is to make <a href=\"https://github.com/leanprover-community/mathlib4/pull/6057#discussion_r1374744432\"><code>map_smul</code> take a <code>MulActionHomClass</code></a> instead of a <a href=\"https://github.com/leanprover-community/mathlib4/pull/6057#discussion_r1374751941\"><code>LinearMapClass</code></a>.</p>",
        "id": 398927507,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1698422831
    },
    {
        "content": "<p>That's all I have time for until the weekend, unfortunately.</p>",
        "id": 398927539,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1698422846
    }
]