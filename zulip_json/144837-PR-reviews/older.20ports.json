[
    {
        "content": "<p>I spent some time resurrecting some old port PRs, would be nice to get a review on them:</p>\n<ul>\n<li>Data.Finset.Sups <a href=\"https://github.com/leanprover-community/mathlib4/pull/1663\">!4#1663</a></li>\n<li>Data.Bitvec.Basic <a href=\"https://github.com/leanprover-community/mathlib4/pull/2179\">!4#2179</a></li>\n<li>Order.Height <a href=\"https://github.com/leanprover-community/mathlib4/pull/2186\">!4#2186</a></li>\n<li>Data.Array.Lemmas <a href=\"https://github.com/leanprover-community/mathlib4/pull/2194\">!4#2194</a></li>\n<li>Topology.LocalAtTarget <a href=\"https://github.com/leanprover-community/mathlib4/pull/2205\">!4#2205</a></li>\n</ul>",
        "id": 347797972,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680934471
    },
    {
        "content": "<p>I think we probably shouldn't be porting <code>Data.Array.Lemmas</code> at all. Is it used anywhere downstream? Arrays are all new and better in Lean 4.</p>",
        "id": 347857238,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1680956376
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">parclytaxel</span><span class=\"bp\">@</span><span class=\"n\">parclytaxel</span><span class=\"bp\">-</span><span class=\"n\">winterthur</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">Computing</span><span class=\"bp\">/</span><span class=\"n\">Repos</span><span class=\"bp\">/</span><span class=\"n\">mathlib3port</span><span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">grep</span> <span class=\"s2\">\"import Mathbin.Data.Array\"</span>\n<span class=\"n\">Mathbin</span><span class=\"bp\">/</span><span class=\"n\">All.lean</span><span class=\"o\">:</span><span class=\"kn\">import</span> <span class=\"n\">Mathbin.Data.Array.Lemmas</span>\n<span class=\"n\">Mathbin</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Buffer</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"kn\">import</span> <span class=\"n\">Mathbin.Data.Array.Lemmas</span>\n<span class=\"n\">Mathbin</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">HashMap.lean</span><span class=\"o\">:</span><span class=\"kn\">import</span> <span class=\"n\">Mathbin.Data.Array.Lemmas</span>\n</code></pre></div>",
        "id": 347857604,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680956519
    },
    {
        "content": "<p>so the file <em>is</em> used downstream</p>",
        "id": 347857697,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680956555
    },
    {
        "content": "<p>in turn mathlib3's <code>polyrith</code> tactic depends on <code>Data.Buffer.Basic</code></p>",
        "id": 347858314,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680956802
    },
    {
        "content": "<p>Yeah, it's used in a few places that arguably shouldn't be ported either, like Logic.Equiv.Array as well. polyrith already has been ported without it. We should mark them unportable in the wiki if that's the decision, though</p>",
        "id": 347864959,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680959343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>, would you mind marking as unportable? (Also for Data.HashMap and Data.Buffer.Basic)</p>",
        "id": 347921313,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1680990655
    },
    {
        "content": "<p>I've marked these as not needed at <a href=\"https://github.com/leanprover-community/mathlib4/wiki/port-comments\">https://github.com/leanprover-community/mathlib4/wiki/port-comments</a></p>",
        "id": 347971436,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681025176
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/older.20ports/near/347797972\">said</a>:</p>\n<blockquote>\n<p>I spent some time resurrecting some old port PRs, would be nice to get a review on them:</p>\n<ul>\n<li>Data.Finset.Sups <a href=\"https://github.com/leanprover-community/mathlib4/pull/1663\">!4#1663</a></li>\n<li>Data.Bitvec.Basic <a href=\"https://github.com/leanprover-community/mathlib4/pull/2179\">!4#2179</a></li>\n<li>Order.Height <a href=\"https://github.com/leanprover-community/mathlib4/pull/2186\">!4#2186</a></li>\n<li>Data.Array.Lemmas <a href=\"https://github.com/leanprover-community/mathlib4/pull/2194\">!4#2194</a></li>\n<li>Topology.LocalAtTarget <a href=\"https://github.com/leanprover-community/mathlib4/pull/2205\">!4#2205</a></li>\n</ul>\n</blockquote>\n<p>Data.Finset.Sups is done, Data.Array.Lemmas is dropped, Order.Height just needs a maintainer to put it on the queue and the others are up for review.</p>",
        "id": 348183485,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681123045
    },
    {
        "content": "<p>Just hit merge on <code>Order.Height</code>.</p>",
        "id": 348190759,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681125582
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3248\">!4#3248</a> needs review too</p>",
        "id": 348205784,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681130020
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3362\">!4#3362</a>, which fully forwardports three separate files, is ready for review too</p>",
        "id": 348205997,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681130070
    },
    {
        "content": "<p>I don't think either of those counts as old PRs :)</p>",
        "id": 348206265,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681130151
    },
    {
        "content": "<p>Well we need to get the queue down to 20</p>",
        "id": 348206502,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681130216
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3248\">!4#3248</a> has the highest import depth</p>",
        "id": 348206582,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681130245
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598052\">Jeremy Tan</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/older.20ports/near/348206502\">said</a>:</p>\n<blockquote>\n<p>Well we need to get the queue down to 20</p>\n</blockquote>\n<p>We don't urgently need to do that, it's just a target for people who want to continue modifying mathlib3</p>",
        "id": 348206779,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1681130302
    },
    {
        "content": "<p>The following are also ready for review:</p>\n<ul>\n<li>Computability.Encoding <a href=\"https://github.com/leanprover-community/mathlib4/pull/2799\">!4#2799</a></li>\n<li>LinearAlgebra.QuotientPi <a href=\"https://github.com/leanprover-community/mathlib4/pull/2378\">!4#2378</a></li>\n</ul>",
        "id": 348390916,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681201642
    },
    {
        "content": "<p>Next up:</p>\n<ul>\n<li>RingTheory.NonUnitalSubsemiring.Basic <a href=\"https://github.com/leanprover-community/mathlib4/pull/1774\">!4#1774</a></li>\n<li>NumberTheory.LucasLehmer <a href=\"https://github.com/leanprover-community/mathlib4/pull/2988\">!4#2988</a></li>\n</ul>",
        "id": 349385788,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681479414
    },
    {
        "content": "<p>And</p>\n<ul>\n<li>Analysis.BoxIntegral.Box.Basic <a href=\"https://github.com/leanprover-community/mathlib4/pull/2625\">!4#2625</a></li>\n</ul>",
        "id": 349401568,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1681482626
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 352698101,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1682489925
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3656\">!4#3656</a> is ready BTW</p>",
        "id": 352782787,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1682511723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 352835364,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1682521649
    },
    {
        "content": "<p>Data.Polynomial.Laurent <a href=\"https://github.com/leanprover-community/mathlib4/pull/2953\">!4#2953</a> is up for review</p>",
        "id": 358389444,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1684139133
    }
]