[
    {
        "content": "<p>The question: why is <code>peelQuantifier</code> in this PR so slow? It takes a solid minute or more to compile on my machine, which seems absolutely absurd for what seems to me like some fairly innocuous <code>MetaM</code> code that just matches expressions and builds some new ones and replaces goals accordingly. Note: it's faster if you remove some of the match branches, but even if you just leave one or two it still takes 20 seconds or so. Obviously I'm doing something really stupid, but I don't know what it is.</p>",
        "id": 398559827,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698267554
    },
    {
        "content": "<p>Hmm... it seems to be (at least in part) the use of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.logError#doc\">docs#Lean.logError</a>. Without those uses, it jumps down to about 10-12 seconds (which still seems like a long time).</p>",
        "id": 398563365,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698269519
    },
    {
        "content": "<p>okay, so it just seems like my use of <code>logError</code> on line 147 is the problem, the rest are fine. <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 398564223,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698270005
    },
    {
        "content": "<p>Why do you <code>log</code> the error instead of <code>throw</code>?  Logging them is a little strange, since Lean seems to give an error, but allows you to continue...</p>\n<p>I remember a similar discussion with Mario, let me dig it up.</p>",
        "id": 398564623,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698270260
    },
    {
        "content": "<p>because I'm a noob!</p>",
        "id": 398564649,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698270279
    },
    {
        "content": "<p><a href=\"#narrow/stream/270676-lean4/topic/Disconnected.20syntax/near/384546327\">Here</a> is the quote from Mario.</p>",
        "id": 398564708,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698270313
    },
    {
        "content": "<p>In the specific case in question, I was <code>log</code>ging at various places and would have thrown an error later on anyways.  Mario's point, if I understood correctly, is that although it is sometimes ok to just <code>log</code>, normally you should <code>throw</code>.</p>",
        "id": 398564823,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698270366
    },
    {
        "content": "<p>I do not know if this will affect in any way the speed, though -- consider this more of a stylistic remark!</p>",
        "id": 398564941,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698270440
    },
    {
        "content": "<p>Another advantage of <code>throwError</code> is that you no longer need to return junk values.</p>",
        "id": 398565206,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698270559
    },
    {
        "content": "<p>Yeah, unfortunately it has no effect on the speed. It's still that one bad catch-all match</p>",
        "id": 398565209,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698270560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.237685.20peel.20tactic/near/398565209\">said</a>:</p>\n<blockquote>\n<p>Yeah, unfortunately it has no effect on the speed. It's still that one bad catch-all match</p>\n</blockquote>\n<p>That's too bad, but I was not really expecting to impact performance anyway.</p>",
        "id": 398565257,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1698270601
    },
    {
        "content": "<p>aha, but <code>throwError</code> without the junk values gets it down to 22 seconds, which is still garbage, but not over a minute!</p>",
        "id": 398565734,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698270849
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> has made some very nice improvements to the tactic (so he probably shouldn't merge it himself), and I believe it's ready for review again if anyone feels the urge. I'm not in a rush though.</p>",
        "id": 399339736,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698684074
    }
]