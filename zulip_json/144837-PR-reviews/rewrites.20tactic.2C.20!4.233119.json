[
    {
        "content": "<p>It seems I didn't make a thread about this. </p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3119\">!4#3119</a> adds the <code>rewrites</code> tactic which is to <code>rw</code> what <code>library_search</code> is to <code>exact</code>/<code>refine</code> and <code>propose</code> is to <code>have</code>: it attempts to find lemmas which can rewrite the current expression. It uses a discrimination tree to index lemmas, so is not simply trying everything in the library.</p>\n<p>The PR is not actually that complicated. It is mostly just boilerplate copying the framework of <code>library_search</code>, beyond:</p>\n<ul>\n<li>adding <code>getSubexpressionMatches</code> in <code>Mathlib/Lean/Meta/DiscrTree.lean</code></li>\n<li><code>initialize rewriteLemmas</code> in <code>Mathlib/Tactic/Rewrites.lean</code> which collects the lemmas</li>\n<li><code>rewritesCore</code> in the same place, which decides what order to try them in.</li>\n</ul>\n<p>If we can merge this, I will do some cleanup work moving some of the goodies <code>library_search</code> has received lately over to <code>propose</code> and <code>rewrites</code>. (<a href=\"https://github.com/leanprover-community/mathlib4/pull/3771\">!4#3771</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/3743\">!4#3743</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/3725\">!4#3725</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/3720\">!4#3720</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/3404\">!4#3404</a>)</p>\n<p>Later I'd like to add <code>rewrites at h</code> functionality, and possibly with widgets, support for rewriting subexpressions by selecting them in the goal view.</p>",
        "id": 357128301,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683679735
    },
    {
        "content": "<p>Does this replace lean 3's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.rewrite_search\">docs#tactic.interactive.rewrite_search</a>?</p>",
        "id": 357235308,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1683714020
    },
    {
        "content": "<p>No. The <code>rewrite_search</code> in mathlib3 was a partial re-implementation of a nice but unmergeable <code>rewrite_search</code> that a student and I wrote a long time ago... <code>rewrites</code> in <a href=\"https://github.com/leanprover-community/mathlib4/pull/3119\">!4#3119</a> just does one rewrite. It's purpose is to hint to the user things they might do.</p>\n<p>That said, the plumbing underneath it (finding all possible rewrites at a point) would be helpful for writing a new <code>rewrite_search</code>, and I would like to see that happen sometime!</p>",
        "id": 357244004,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1683716085
    }
]