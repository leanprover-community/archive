[
    {
        "content": "<p>I see many commits in Mathlib about abstract homology but I have no idea where we stand when it comes to actual homological theories. Do we have singular (co)homology in Mathlib? Do we have any of the standard corollaries of existence of a (co)homology theory for topological spaces?</p>",
        "id": 402038376,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699984511
    },
    {
        "content": "<p>The word \"homology\" is often being used generally just to mean \"kernel of d quotiented by image of d for an arbitrary complex of abelian groups\" rather than an actual homology theory.</p>",
        "id": 402038727,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699984635
    },
    {
        "content": "<p>That's why I'm asking about singular homology.</p>",
        "id": 402038786,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699984658
    },
    {
        "content": "<p>I <del>think</del> vaguely recall that <a href=\"https://www.birs.ca/events/2023/5-day-workshops/23w5124/videos/watch/202305231030-Murphy.html\">Brendan Murphy's</a> <a href=\"#narrow/stream/116395-maths/topic/Completed.20proof.20of.20the.20Brouwer.20Fixed.20Point.20Theorem\">work</a> is still waiting for <span class=\"user-mention\" data-user-id=\"459699\">@Joël Riou</span>'s refactor: redefinition of homology + <a href=\"https://www.birs.ca/events/2023/5-day-workshops/23w5124/videos/watch/202305241110-Riou.html\">derived categories</a> <a href=\"https://github.com/leanprover-community/mathlib4/pull/4197\">#4197</a> to enter mathlib.</p>",
        "id": 402039009,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1699984729
    },
    {
        "content": "<p>More importantly, I'm asking about corollaries. It is well known from any textbook on algebraic topology that there is a list of standard corollaries that will follow from the existence of any reasonable theory for topological spaces. For instance if you know there are functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">H_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> from topological space to abelian groups for every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> that you can compute for Euclidean spaces and spheres then you get a bunch of corollaries.</p>",
        "id": 402039151,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699984790
    },
    {
        "content": "<p>Even better, the computations for Euclidean spaces and spheres follow from homotopy invariance and Mayer-Vietoris without any extra input.</p>",
        "id": 402039307,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699984832
    },
    {
        "content": "<p>I think the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">H_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> s are gonna be constructed as a derived functor ...</p>\n<p>(Hmm, is that the plan? <a href=\"https://mathoverflow.net/questions/66401/singular-homology-cohomology-as-a-derived-functor\">https://mathoverflow.net/questions/66401/singular-homology-cohomology-as-a-derived-functor</a> doesn't have a definitive answer apparently.)</p>",
        "id": 402039806,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1699984986
    },
    {
        "content": "<p>This is clearly the right point of view: \"Quillen thought of homology as \"derived abelianisation\"\"</p>",
        "id": 402041354,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1699985629
    },
    {
        "content": "<p>(from the last answer on that MO page)</p>",
        "id": 402041368,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1699985638
    },
    {
        "content": "<p>Does that make anything easier?</p>",
        "id": 402043987,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699986584
    },
    {
        "content": "<p>The painful points of singular homology are very clearly identified. Suffering comes from subdividing stuff. The main example is barycentric subdivisions, but there are also prism subdivisions. That that magically goes away with derived functors? If yes, where does pain migrate?</p>",
        "id": 402044597,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699986798
    },
    {
        "content": "<p>I guess you'd get the long exact sequence from the general machinery. Probably other Eilenberg-Steenrod axioms still require hard work. Brendan talked about the \"very very annoying\" barycentric subdivision around 22:44 in his <a href=\"https://www.birs.ca/events/2023/5-day-workshops/23w5124/videos/watch/202305231030-Murphy.html\">talk</a>. Not sure whether he proved all the axioms; he says he computed homology of spheres in an ad-hoc way. HOL Light apparently has all the axioms (<a href=\"https://github.com/alreadydone/contents/files/9996347/Harrison-John.pdf\">page 36</a>).</p>",
        "id": 402045379,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1699987057
    },
    {
        "content": "<p>What I had in mind as the painful points  is the content of page 37 in Harrison's talk.</p>",
        "id": 402046295,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699987356
    },
    {
        "content": "<p>Apparently Brendan got <a href=\"https://github.com/Shamrock-Frost/BrouwerFixedPoint/blob/1d45492496dfd034668ed90fd585de0b6a15f023/src/homotopy_invariance.lean#L19\">homotopy invariance</a> from the acyclic models theorem, circumventing prismatic subdivision. <a href=\"https://github.com/Shamrock-Frost/BrouwerFixedPoint/blob/1d45492496dfd034668ed90fd585de0b6a15f023/src/barycentric_subdivision.lean#L1777\">Excision</a> is from barycentric subdivision (this is about simplicial sets, right? Is it in mathlib yet?).</p>",
        "id": 402046743,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1699987509
    },
    {
        "content": "<p>FWIW I am thinking of formalising the chromatic number of the Kneser graph assuming Borsuk-Ulam as an axiom (or more precisely using a <code>[BorsukUlam]</code> assumption, where <code>class BorsukUlam</code> has a field containing the statement of Borsuk-Ulam).</p>",
        "id": 402047092,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699987625
    },
    {
        "content": "<p>Then I don't have to wait for homology computations to catch up.</p>",
        "id": 402047133,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699987641
    },
    {
        "content": "<p>About the homology refactor, it is mostly done (after about 60 PR). For example, we already have the <em>snake lemma</em> <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.ShortComplex.SnakeInput.snake_lemma#doc\">docs#CategoryTheory.ShortComplex.SnakeInput.snake_lemma</a> and the homology sequence attached to an exact sequence of homological complexes will soon follow (cc <span class=\"user-mention\" data-user-id=\"110401\">@Brendan Seamas Murphy</span>). An API is also developed for doing computations in categories of abelian groups or categories of modules, and it shall soon be used by <span class=\"user-mention\" data-user-id=\"118107\">@Amelia Livingston</span> in order to identify group cohomology in low degree.</p>\n<p>Then, there should no longer be any significant obstacle for the development of singular homology of topological spaces <code>X</code> in mathlib, by defining the simplicial set <code>Sing X</code>, applying the free abelian group functor, taking the alternating face map complex, and finally homology.</p>",
        "id": 402058994,
        "sender_full_name": "Joël Riou",
        "timestamp": 1699991882
    },
    {
        "content": "<p>The last significant PR of the homology refactor is <a href=\"https://github.com/leanprover-community/mathlib4/pull/8706\">#8706</a>. After that, it will be possible to remove the old homology API (after double-checking that all statements of the old API also exists in some form in the new API).</p>",
        "id": 405080167,
        "sender_full_name": "Joël Riou",
        "timestamp": 1701338413
    },
    {
        "content": "<p>This is a massive milestone! Awesome work!</p>",
        "id": 405087888,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1701340706
    },
    {
        "content": "<p>What I like about this PR is that the API got a lot larger, but the places where the API gets used, the proofs/defs/constructions mostly become shorter.</p>",
        "id": 405173899,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1701368250
    }
]