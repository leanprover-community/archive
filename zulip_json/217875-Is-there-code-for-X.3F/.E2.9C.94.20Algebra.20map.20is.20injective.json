[
    {
        "content": "<p>What's the best way to prove <code>function.injective (algebra_map ℤ ℂ)</code>? Judging by some old code I had lying around, it seems like <code>int.cast_injective</code> used to work, but now it looks like <code>algebra_map ℤ ℂ</code> is not defeq to <code>coe</code>.</p>",
        "id": 247141748,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1627242615
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">function.injective</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">ℤ</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">int.cast_injective</span>\n<span class=\"k\">#print</span> <span class=\"n\">hi</span>\n</code></pre></div>\n<p>works for me in the web editor</p>",
        "id": 247142901,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1627244233
    },
    {
        "content": "<p>There are multiple non-defeq z-algebra instances</p>",
        "id": 247143913,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627245990
    },
    {
        "content": "<p>Which one you get depends on your imports along with other things</p>",
        "id": 247143920,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627246005
    },
    {
        "content": "<p><code>by convert int.cast_injective</code> should work</p>",
        "id": 247143923,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627246030
    },
    {
        "content": "<p>I think adding <code>add_comm_monoid.of_nat</code> and <code>add_comm_group.of_int</code> would fix this.</p>",
        "id": 247143992,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627246177
    },
    {
        "content": "<p>(this is in the future work section of my FMM 2021 paper)</p>",
        "id": 247144480,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627246810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Algebra.20map.20is.20injective/near/247143923\">said</a>:</p>\n<blockquote>\n<p><code>by convert int.cast_injective</code> should work</p>\n</blockquote>\n<p>Unfortunately not. I must be using the wrong Z-algebra instance.</p>",
        "id": 247145907,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1627247615
    },
    {
        "content": "<p>This works though, and it's good enough for my purposes:<br>\n<code>have inj : function.injective (@algebra_map ℤ ℂ _ _ (algebra_int ℂ)) := int.cast_injective,</code></p>",
        "id": 247146077,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1627247812
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253861\">Thomas Browning</span> has marked this topic as resolved.</p>",
        "id": 247146086,
        "sender_full_name": "Notification Bot",
        "timestamp": 1627247822
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/.E2.9C.94.20Algebra.20map.20is.20injective/near/247144480\">said</a>:</p>\n<blockquote>\n<p>(this is in the future work section of my FMM 2021 paper)</p>\n</blockquote>\n<p>I didn't know you wrote something. Is it available somewhere? Do we have a public list of FMM 2021 papers?</p>",
        "id": 247146329,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1627248164
    },
    {
        "content": "<p><a href=\"https://cicm-conference.org/2021/cicm.php?event=fmm&amp;menu=general\">https://cicm-conference.org/2021/cicm.php?event=fmm&amp;menu=general</a></p>",
        "id": 247146342,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1627248204
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 247146344,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1627248218
    },
    {
        "content": "<p>Abstracts and full schedule at <a href=\"https://easychair.org/smart-program/CICM2021/\">https://easychair.org/smart-program/CICM2021/</a></p>",
        "id": 247149411,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627252960
    }
]