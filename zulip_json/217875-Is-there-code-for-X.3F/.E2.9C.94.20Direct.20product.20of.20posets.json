[
    {
        "content": "<p>As the title says</p>",
        "id": 263681246,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638589448
    },
    {
        "content": "<p>There's lexicographic ordering, which is the default, but I can't find the direct product</p>",
        "id": 263681254,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638589465
    },
    {
        "content": "<p>Just as recap: the direct product on <code>α × β</code> is such that <code>(a, b) ≤ (c, d)</code> iff <code>a ≤ c</code> and <code>b ≤ d</code></p>",
        "id": 263681271,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638589496
    },
    {
        "content": "<p>(in symbols, <code>λ a b : α × β, a.fst ≤ b.fst ∧ a.snd ≤ b.snd</code>)</p>",
        "id": 263681370,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638589640
    },
    {
        "content": "<p>I believe that's the default, actually. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/prod.partial_order\">docs#prod.partial_order</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/prod.mk_le_mk\">docs#prod.mk_le_mk</a></p>\n<p>If you want the lexicographic ordering, you have to use <code>lex α β</code> (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/lex\">docs#lex</a>)</p>",
        "id": 263682585,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1638591279
    },
    {
        "content": "<p>Oh, cool! Wasn't able to find it since it didn't explicitly refer to it as a direct product</p>",
        "id": 263682756,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638591540
    },
    {
        "content": "<p>My bad!</p>",
        "id": 263682758,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638591542
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459227\">Violeta Hernández</span> has marked this topic as resolved.</p>",
        "id": 263682760,
        "sender_full_name": "Notification Bot",
        "timestamp": 1638591545
    },
    {
        "content": "<p>It might be worth submitting a PR to add documentation to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/prod.has_le\">docs#prod.has_le</a> that it's the direct product of the <code>has_le</code> relations (and mention <code>lex</code> like in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/prod.partial_order\">docs#prod.partial_order</a>).  The module for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/lex\">docs#lex</a> could stand to more clearly mention <code>prod.has_le</code>.</p>",
        "id": 263683009,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1638591912
    }
]