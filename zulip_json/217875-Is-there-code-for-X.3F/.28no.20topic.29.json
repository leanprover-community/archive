[
    {
        "content": "<p>(deleted)</p>",
        "id": 214672035,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1603787719
    },
    {
        "content": "<p>I'm trying to define a board which has either of two states and I am not sure how to do it<br>\nThis is what I have written so far:<br>\nIs there a nicer way to do so? Because the Board structure asks me to pass in a state</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">State</span>\n<span class=\"bp\">|</span> <span class=\"n\">Alive</span>\n<span class=\"bp\">|</span> <span class=\"n\">Dead</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Point</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">State</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">mk</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">State</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">State</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Board</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">Point</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"n\">β</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>and this is what I get </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">Point</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">State</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n</code></pre></div>\n<p>Something I would do in haskell would be type Point = (int, int) and type Board =  [Point].</p>",
        "id": 224737524,
        "sender_full_name": "Mehul",
        "timestamp": 1612191682
    },
    {
        "content": "<p>This should be asked in <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> in a new thread with a name. This stream is for asking whether stuff already exists in mathlib...</p>",
        "id": 224737742,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612191753
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/(no.20topic)/near/224737742\">said</a>:</p>\n<blockquote>\n<p>This should be asked in <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> in a new thread with a name. This stream is for asking whether stuff already exists in mathlib...</p>\n</blockquote>\n<p>Oh I am sorry, I just got confused where to ask. Thanks!</p>",
        "id": 224737893,
        "sender_full_name": "Mehul",
        "timestamp": 1612191797
    },
    {
        "content": "<p>No worries!</p>",
        "id": 224738214,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612191906
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 252913281,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631370714
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 271681148,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644660159
    }
]