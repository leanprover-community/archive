[
    {
        "content": "<p>Can we add zulip linkifiers for the arxiv, nlab and stacks project? <br>\nSomething approximately like this?<br>\n<code> arxiv#(?P&lt;id&gt;[a-z0-9\\./]+)       https://arxiv.org/abs/%(id)s </code><br>\n<code> nlab#(?P&lt;id&gt;[^\\s]+)       https://ncatlab.org/nlab/show/%(id)s </code><br>\n<code> stacks#(?P&lt;id&gt;[0-9A-Z]+)       https://stacks.math.columbia.edu/tag/%(id)s </code><br>\nI don't really know how to use regex, so the above might require modification...</p>",
        "id": 240198157,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621953842
    },
    {
        "content": "<p><a href=\"https://arxiv.org/abs/1510.08836\">arxiv#1510.08836</a></p>",
        "id": 240261962,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1621984424
    },
    {
        "content": "<p><a href=\"https://ncatlab.org/nlab/show/stratified+space\">nlab#stratified+space</a></p>",
        "id": 240262051,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1621984481
    },
    {
        "content": "<p><a href=\"https://stacks.math.columbia.edu/tag/01II\">stacks#01II</a></p>",
        "id": 240262119,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1621984528
    },
    {
        "content": "<p><span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 240262230,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621984609
    },
    {
        "content": "<p>Just testing: <a href=\"https://arxiv.org/abs/math/0502016\">arxiv#math/0502016</a></p>",
        "id": 240264235,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621986334
    },
    {
        "content": "<p>Cool! It works with the old-school arxiv links too :)</p>",
        "id": 240264246,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621986349
    },
    {
        "content": "<p>I added a <code>-</code> to the regex pattern so you can even link to old gr-qc papers: <a href=\"https://arxiv.org/abs/gr-qc/9902017\">arxiv#gr-qc/9902017</a></p>",
        "id": 240264708,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1621986729
    },
    {
        "content": "<p>Seems like something broke <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>\n<p><a href=\"https://github.com/leanprover-community/arxiv/issues/2011\">arxiv#2011</a>.01620</p>",
        "id": 243011945,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623934222
    },
    {
        "content": "<p>It looks like there is an unescaped <code>/</code> in the regex expression for the arxiv linkifier.</p>",
        "id": 243071108,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1623958105
    },
    {
        "content": "<p>I think the issue is actually the escaped <code>.</code>. Testing: <a href=\"https://arxiv.org/abs/2011.01620\">arxiv#2011.01620</a></p>",
        "id": 243078859,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1623961394
    },
    {
        "content": "<p>Could we get <code>lake#issue</code> special cased to leanprover/lake? :)</p>",
        "id": 341311677,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678641438
    },
    {
        "content": "<p>testing: <a href=\"https://github.com/leanprover-community/lake/pull/124\">lake#124</a></p>",
        "id": 341372253,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678684828
    },
    {
        "content": "<p>sorry, I tried everything I could and the linkifier gods aren't in my favor</p>",
        "id": 341373616,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678685806
    },
    {
        "content": "<p>no defined linkifier order + no negative lookahead makes it really hard to do overlapping patterns effectively :(</p>",
        "id": 341373723,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678685888
    },
    {
        "content": "<p>no worries. ooc what is the reason to have the default linkifier?</p>",
        "id": 341374366,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678686238
    },
    {
        "content": "<p>what do you mean? We use leanprover-community as the default org if you don't give a full path like <a href=\"https://github.com/zulip/zulip/pull/123\">zulip/zulip#123</a></p>",
        "id": 341375612,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1678686808
    },
    {
        "content": "<p>... oh wow, there are far more leanprover-community repositories than i thought <span aria-label=\"face with spiral eyes\" class=\"emoji emoji-1f635-200d-1f4ab\" role=\"img\" title=\"face with spiral eyes\">:face_with_spiral_eyes:</span> I had assumed we could have a bunch of individual special cases and no default organization</p>",
        "id": 341375862,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1678686919
    },
    {
        "content": "<p>Testing mathlib3 linkifiers before switching over the \"unversioned\" ones to Lean 4: <a href=\"https://github.com/leanprover-community/mathlib/pull/19208\">!3#19208</a> <a href=\"https://tqft.net/mathlib/logic/equiv/array\">file3#logic/equiv/array</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/simple_graph\">docs3#simple_graph</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.pi/src\">src3#real.pi</a></p>",
        "id": 368095723,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687315748
    },
    {
        "content": "<p>Along this, I was wondering when we plan (if we plan...) to create a <code>lean3</code> or <code>mathlib3</code> stream and let the normal ones be automatically intended to be for Lean 4. Because now both <code>lean4</code> and <code>mathlib4</code> receive loads of messages that are somewhat unsorted.</p>",
        "id": 368191678,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1687344425
    },
    {
        "content": "<p>Very soon there will no longer be any discussion at all about Lean 3.</p>",
        "id": 368192138,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1687344530
    },
    {
        "content": "<p>Well, this might be a bit too much, given that there is material about Lean3 around... leaving some room for those who might have questions would look reasonable to me.</p>",
        "id": 368226203,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1687351739
    },
    {
        "content": "<p>It could be folded into a room about mathport too; optimistically all the remaining lean3 questions will be \"help me port my project\"</p>",
        "id": 368228689,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687352273
    },
    {
        "content": "<p>And it makes sense to keep those out of the main streams, since if we're lucky the next 100 users we on-board will have never touched lean3 at all</p>",
        "id": 368228894,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687352310
    },
    {
        "content": "<p>I think we could just leave the <code>mathlib4</code> stream in place: it's no longer mostly about porting, but all discussion around contributing to mathlib. Similarly we leave <code>lean4</code> in place: it's for all discussion about the language but where mathlib isn't relevant.</p>\n<p>We'd then add a presumably low-and-decreasing traffic <code>lean3</code> stream for stragglers, and possible a specific one for <code>mathport</code>, but I'm guessing we can just keep that in <code>lean3</code>.</p>",
        "id": 368376317,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687387596
    },
    {
        "content": "<p>Well, but isn't it a pity that the old (and sound, IMHO) streams \"general&amp;maths&amp;is_there_a_code_for_X&amp;new_members\" are now mostly used for lean3? Why don't reshaping the streams in a way that reflects more the way the community is working? We could have the above-mentioned ones (but dedicated to lean4) plus perhaps a <code>porting</code> one; and then two decreasing streams lean3&amp;mathlib3, whose existence would help newcomers (or oldcomers who are still interested in those things) to understand where to post their questions.</p>",
        "id": 368378526,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1687388768
    },
    {
        "content": "<p>I'm confused. <code>general</code>, <code>maths</code>, <code>is there code for X</code>, and <code>new members</code> can still exist just as they are, and quite naturally in a month or two there won't be much discussion of lean3?</p>",
        "id": 368409482,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687406383
    },
    {
        "content": "<p><code>mathlib4</code> and <code>lean4</code> are intended to be additions to, not replacing, those.</p>",
        "id": 368409581,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687406414
    },
    {
        "content": "<p>I see, my only point was that seeing these two streams I felt that the other were \"by default\" restricted to lean3. At any rate, I do not want to make  a fuss, things are most probably fine as they are.</p>",
        "id": 368445533,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1687418069
    },
    {
        "content": "<p>I think we can rename <code>mathlib4</code> to <code>mathlib</code> in 1-3 months (this does not change the topic of discussion)</p>",
        "id": 368501984,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1687429623
    },
    {
        "content": "<p>Or is it worth renaming it to <code>mathlib-porting</code>, since the majority of it is porting discussions?</p>",
        "id": 368513152,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687431887
    },
    {
        "content": "<p>Yes, this seems a very good idea to me.</p>",
        "id": 368513344,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1687431928
    },
    {
        "content": "<p>Does renaming a stream break existing links to it?</p>",
        "id": 368514323,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687432133
    },
    {
        "content": "<p>There are a lot of porting commits that link to Zulip threads, breaking all those links would be rather annoying</p>",
        "id": 368514422,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1687432153
    },
    {
        "content": "<p><a href=\"#narrow/stream/236604-the-stream-name-is-meaningless/topic/Linkifiers\">https://leanprover.zulipchat.com/#narrow/stream/236604-the-stream-name-is-meaningless/topic/Linkifiers</a></p>",
        "id": 368612298,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1687448878
    },
    {
        "content": "<p>Should we also update the <a href=\"https://github.com/leanprover-community/mathlib4/tree/blah\">branch#blah</a> linkifier?</p>",
        "id": 369435285,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1687705132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> I think it's already been updated?</p>",
        "id": 369544482,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687749041
    },
    {
        "content": "<p>Checking if <a href=\"https://app.bors.tech/repositories/24316\">#bors</a> was updated too (I think not?)</p>",
        "id": 369593330,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1687765408
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/Linkifiers/near/369544482\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> I think it's already been updated?</p>\n</blockquote>\n<p>Indeed, I was fooled by <a href=\"#narrow/stream/113488-general/topic/Geometric.20Group.20Theory.20coordination.20.3F/near/369432763\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Geometric.20Group.20Theory.20coordination.20.3F/near/369432763</a> which is a manual link masquerading as a linkifier..</p>",
        "id": 369597248,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1687766242
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span>, updated <a href=\"https://app.bors.tech/repositories/37904\">#bors</a> and <a href=\"https://app.bors.tech/repositories/24316\">#bors3</a>.</p>",
        "id": 369852487,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1687821592
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/Linkifiers/near/341373616\">said</a>:</p>\n<blockquote>\n<p>sorry, I tried everything I could and the linkifier gods aren't in my favor</p>\n</blockquote>\n<p>While not ideal, we could just add another special character to distinguish it (e.g., /lake#1) and do the same thing for e.g.  /lean4#1.</p>",
        "id": 372158818,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688434124
    },
    {
        "content": "<p>testing: <a href=\"https://github.com/leanprover-community/lake/pull/123\">lake#123</a> <a href=\"https://github.com/leanprover/lake/pull/123\">!lake#123</a></p>",
        "id": 372159785,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688434753
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/123\">lean4#123</a> doesn't seem to need it</p>",
        "id": 372159819,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688434794
    },
    {
        "content": "<p>(the issue here is that while a linkifier for lake#NNN exists, it is shadowed by a more general linkifier and the regex flavor supported by zulip is not powerful enough to prevent the overlap, nor to adjust the relative priority of linkifiers)</p>",
        "id": 372159983,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688434913
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is it possible that priority is determined by creation date?</p>",
        "id": 372160263,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688435065
    },
    {
        "content": "<p>or possibly the privileges/account date of the creator?</p>",
        "id": 372160309,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688435101
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> From an examination of the Zulip code, <a href=\"https://github.com/zulip/zulip/blob/1c8bf4f050475073d641f6f4b5f27b143e8b1dd6/zerver/models.py#L1360\">this line</a> suggests that custom linkifiers (realm filters) are sorted by their Django database <code>id</code> which afaik is just an auto-increasing integer. Thus, it suggests the linkifiers are essentially ordered by creation date.</p>",
        "id": 372161664,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688435949
    },
    {
        "content": "<p>From what I can tell, the ordering of regex matching is defined by <a href=\"https://github.com/zulip/zulip/blob/1c8bf4f050475073d641f6f4b5f27b143e8b1dd6/web/third/marked/lib/marked.js#L649-L664\">this loop</a>, which gets the regexes from <a href=\"https://github.com/zulip/zulip/blob/1c8bf4f050475073d641f6f4b5f27b143e8b1dd6/web/src/markdown.js#L488-L490\">here</a>, which uses the keys of a <a href=\"https://github.com/zulip/zulip/blob/1c8bf4f050475073d641f6f4b5f27b143e8b1dd6/web/src/linkifiers.ts#L5-L8\"><code>LinkifierMap</code></a>. In other words, it's random.</p>",
        "id": 372161819,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688436029
    },
    {
        "content": "<p>the linkifiers themselves are ordered in the database but they aren't walked in that order</p>",
        "id": 372161915,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688436078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  If I am not mistaken, a JS <code>Map</code> is ordered by insertion. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\"><code>keys()</code></a>.</p>",
        "id": 372162161,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688436221
    },
    {
        "content": "<p>Thus, it should retain the database order.</p>",
        "id": 372162247,
        "sender_full_name": "Mac Malone",
        "timestamp": 1688436250
    },
    {
        "content": "<p>testing: <a href=\"https://github.com/zulip/zulip/pull/123\">zulip/zulip#123</a> <a href=\"https://github.com/leanprover-community/lake/pull/124\">lake#124</a></p>",
        "id": 372162829,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688436579
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lake/pull/124\">lake#124</a></p>",
        "id": 372163007,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688436658
    },
    {
        "content": "<p>no luck, I tried deleting and re-adding both lake and the general linkifier and it didn't help</p>",
        "id": 372163085,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688436695
    },
    {
        "content": "<p>in any case this is clearly a feature suggestion</p>",
        "id": 372163257,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1688436765
    },
    {
        "content": "<p>testing <a href=\"https://github.com/leanprover-community/std/pull/123\">std#123</a> <a href=\"https://github.com/leanprover/std4/pull/123\">std4#123</a></p>",
        "id": 379334505,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690506278
    },
    {
        "content": "<p>I think <code>std#NNN</code> has the same issue as <code>lake#NNN</code></p>",
        "id": 379334549,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690506297
    },
    {
        "content": "<p>I've added <a href=\"https://github.com/leanprover/std4/pull/123\">!std#123</a> but I am not sure that's any better than <a href=\"https://github.com/leanprover/std4/pull/123\">std4#123</a></p>",
        "id": 379334709,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690506362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I wonder if the default <code>leanprover-community</code> linkifier is that necessary? Could we just make-do with the specific linkifiers for high-traffic repositories (e.g., <code>std</code>, <code>mathlib</code>, <code>lean-liquid</code>, etc.) and use the full-qualified linker (e.g.,  <a href=\"https://github.com/leanprover-community/leancrawler/pull/4\">leanprover-community/leancrawler#4</a>) for the rare cases. Or, if that is a bit too long to type, use a special character for the <code>lean-community</code> linkifier instead (e.g., <code>!leancrawler#4</code>).</p>",
        "id": 379658851,
        "sender_full_name": "Mac Malone",
        "timestamp": 1690588445
    },
    {
        "content": "<p>I'm still hoping that zulip can get this fixed</p>",
        "id": 379659104,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690588617
    },
    {
        "content": "<p>Hi <span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> and everyone--I'm from the Zulip core team. We're tracking the ordering of linkifiers <a href=\"https://github.com/zulip/zulip/issues/23716\">in this issue</a>; there's also a <a href=\"https://chat.zulip.org/#narrow/stream/9-issues/topic/linkifiers/near/1473796\">discussion on chat.zulip.org</a>. Admittedly there hasn't been much movement on this issue since late 2022, but if you'd like to post there, that might help catch some more attention on the matter.</p>",
        "id": 380350305,
        "sender_full_name": "Karl Stolley",
        "timestamp": 1690811280
    },
    {
        "content": "<p>Thanks for coming over <span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> to <a href=\"http://chat.zulip.org\">chat.zulip.org</a>! I believe that the direct fix would be removing the default <code>leanprover-community</code> linkifier and re-adding it, and leaving the more specific ones unchanged. However, I agree that it would be more helpful if the linkifiers can be explicitly reordered. Will see if I can open a PR for the fix soon.</p>",
        "id": 382748479,
        "sender_full_name": "PIG208",
        "timestamp": 1691439006
    },
    {
        "content": "<p>okay, refreshed the leanprover-community linkifier. Here goes nothing: <a href=\"https://github.com/leanprover-community/std/pull/123\">std#123</a> <a href=\"https://github.com/leanprover/lake/pull/123\">lake#123</a> <a href=\"https://github.com/leanprover/lake/pull/123\">!lake#123</a> <a href=\"https://github.com/leanprover-community/mathport/pull/123\">mathport#123</a> <a href=\"https://github.com/zulip/zulip/pull/123\">zulip/zulip#123</a> <a href=\"https://github.com/leanprover/std4/pull/123\">std4#123</a></p>",
        "id": 383026715,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691514640
    },
    {
        "content": "<p>almost: <a href=\"https://github.com/leanprover/std4/pull/123\">std#123</a> <a href=\"https://github.com/leanprover/lake/pull/123\">lake#123</a> <a href=\"https://github.com/leanprover/lake/pull/123\">!lake#123</a> <a href=\"https://github.com/leanprover-community/mathport/pull/123\">mathport#123</a> <a href=\"https://github.com/zulip/zulip/pull/123\">zulip/zulip#123</a> <a href=\"https://github.com/leanprover/std4/pull/123\">std4#123</a></p>",
        "id": 383027319,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691514797
    },
    {
        "content": "<p>yay, everything seems to be working <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 383027399,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691514817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/Linkifiers/near/372163085\">said</a>:</p>\n<blockquote>\n<p>no luck, I tried deleting and re-adding both lake and the general linkifier and it didn't help</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/Linkifiers/near/383026715\">said</a>:</p>\n<blockquote>\n<p>okay, refreshed the leanprover-community linkifier [...] yay, everything seems to be working <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n</blockquote>\n<p>Do you know what was difference between this time you refreshed the linkifier and last time? The <a href=\"https://github.com/zulip/zulip/pull/23715\">zulip/zulip#23715</a> PR which fixed the order seems to have land long before this, so that would not seem  to be the cause.</p>",
        "id": 383145927,
        "sender_full_name": "Mac Malone",
        "timestamp": 1691556339
    },
    {
        "content": "<p>I'm going to chalk it up to user error</p>",
        "id": 383155745,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1691560566
    }
]