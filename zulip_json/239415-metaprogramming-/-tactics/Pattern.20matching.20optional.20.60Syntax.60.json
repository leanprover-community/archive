[
    {
        "content": "<p>What am I doing wrong here?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span><span class=\"o\">:</span><span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">fin_eta</span><span class=\"o\">)</span> <span class=\"s2\">\"fin_eta% \"</span> <span class=\"n\">term</span><span class=\"o\">:</span><span class=\"n\">max</span> <span class=\"n\">term</span><span class=\"o\">:</span><span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">term</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n\n<span class=\"kd\">@[term_elab fin_eta]</span>\n<span class=\"kd\">def</span> <span class=\"n\">Elab</span> <span class=\"o\">:</span> <span class=\"n\">Lean.Elab.Term.TermElab</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">mStx</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">$</span><span class=\"n\">nStx</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">A</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">]</span><span class=\"bp\">?</span><span class=\"o\">),</span> <span class=\"n\">expectedType</span><span class=\"bp\">?</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The <code>$[$A:term]?</code> syntax is apparently wrong but I don't know how to search for the correct syntax</p>",
        "id": 374988941,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689265031
    },
    {
        "content": "<p>(As far as I can tell I can't use the simpler <code>elab</code> because then I don't get to make my own decision about postponing)</p>",
        "id": 374989133,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689265076
    },
    {
        "content": "<p>Can you avoid the match entirely, and just access the different parts by indexing?</p>",
        "id": 374990741,
        "sender_full_name": "Alex Keizer",
        "timestamp": 1689265426
    },
    {
        "content": "<p>Sure, but that's way uglier</p>",
        "id": 374992372,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689265763
    },
    {
        "content": "<p>In a PM we discovered it was that the pattern was missing <code>fin_eta%</code> at the beginning.</p>",
        "id": 374993961,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689266101
    }
]