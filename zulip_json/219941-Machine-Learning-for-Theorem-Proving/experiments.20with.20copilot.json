[
    {
        "content": "<p>I'm not sure how many (if any) of you are experimenting with turning GitHub copilot on while you work in VS Code (splurging $10/month), but I've had it suggest some very useful things (and also many, many completely useless things). In offline discussions, it was suggested that if others were also messing around with copilot, and if we all logged and collated said interactions (that is, collecting both what copilot suggested, as well as what was eventually written there, given the proof/goal state, etc), that might make for a very interesting dataset for future experimentation/training... Just a thought...?</p>",
        "id": 375437827,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1689391596
    },
    {
        "content": "<p>I've been using Copilot for about half a year and also find it really helpful. I don't explicitly adapt the way I code to help Copilot (e.g., writing detailed comments), but in many cases, it seems to be able to guess what I want to code. This experience is mostly for Python, but sometimes it can also produce sensible autocompletions for Lean.</p>",
        "id": 375586827,
        "sender_full_name": "Kaiyu Yang",
        "timestamp": 1689437843
    },
    {
        "content": "<p>I use copilot regularly with Lean 4 and it is helpful. It generates proofs and sometimes theorems as well correctly about half the time and nonsense the rest of the time (which I don't accept).</p>\n<p>By the way, it is free for teachers and for sudents, so covers most of us.</p>",
        "id": 375678078,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1689486995
    },
    {
        "content": "<blockquote>\n<p>if others were also messing around with copilot, and if we all logged and collated said interactions (that is, collecting both what copilot suggested, as well as what was eventually written there, given the proof/goal state, etc), that might make for a very interesting dataset for future experimentation/training... </p>\n</blockquote>\n<p>Christian Szegedy retweeted <a href=\"https://twitter.com/morph_labs/status/1689321673151979536\">this</a> which says:</p>\n<blockquote>\n<p>Introducing Rift 2.0 - the agentic IDE for working with your personal AI software engineer.</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://github.com/morph-labs/rift\">https://github.com/morph-labs/rift</a> [works with VSCode]</p>\n</blockquote>\n<blockquote>\n<p>With Rift 2.0, you can now:</p>\n</blockquote>\n<ul>\n<li>Request, review, and iterate on codebase-wide, multi-file edits</li>\n<li>Conversationally iterate on code edits which are streamed directly into your editor window</li>\n<li>Generate an entire workspace, or a module based on other parts of your codebase</li>\n</ul>\n<blockquote>\n<p>You can now define your own agents that can run in your IDE and:</p>\n</blockquote>\n<ul>\n<li>Provide a conversational Git interface</li>\n<li>Run tools like typecheckers and static analyzers in the background and implement fixes based on their output</li>\n<li>Automated code review in your IDE with context from GitHub</li>\n</ul>\n<blockquote>\n<p><strong>Rift will soon support locally recording and storing training data from your coding sessions so that you can build your own team of truly personalized AI software engineers.</strong></p>\n</blockquote>",
        "id": 383479921,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1691636694
    },
    {
        "content": "<p>Two crowd-sourcing data collection tools are <a href=\"https://github.com/nomic-ai/gpt4all-datalake\">gpt4all-datalake</a> and <a href=\"https://github.com/LAION-AI/Open-Assistant#running-the-development-setup-locally-without-chat\">Open-Assistant</a>, but these are not code specific and I'm not aware of a tool to log Copilot interaction data ...</p>",
        "id": 383480681,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1691637076
    },
    {
        "content": "<p>Rift is by <span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span></p>",
        "id": 383482402,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691637876
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/7307\">#7307</a> copilot managed to produce a 5-line totally correct proof of this theorem on the first try. It was longer than it had to be, but still impressive.</p>",
        "id": 392360189,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695315044
    }
]