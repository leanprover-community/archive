[
    {
        "content": "<p>I want to start a conversation about automatic theorem proving competitions, especially ones that neural-based AI can compete in.  I don't know much about this space, so I want to know more.  But at the same time I feel there is really nothing right now that fits anything like I have in mind.  First, I do know of a few competitions:</p>\n<ul>\n<li>(CASC) <a href=\"https://www.tptp.org/CASC/\">CADE ATP System Competition</a> I think is a big one and it focuses (if I'm not mistaken) on first order logic.</li>\n<li>The SAT conference seems to have a <a href=\"http://satisfiability.org/SAT23/pages/competitions.html\">few competitions every year</a> around SAT, Model checking, and QBF.</li>\n<li><a href=\"https://imo-grand-challenge.github.io/\">The IMO Grand Challenge</a> is less of a competition than an aspirational competition.</li>\n<li>There are of course numerous benchmarks out there like MiniF2F, and at least one for every ITP based on the main libraries of that ITP, but these aren't competitions.</li>\n<li>I think there are also human ITP competitions, like <a href=\"https://www21.in.tum.de/~wimmers/proofground/\">ProofGround</a>.  These are not intended for ATPs, but I don't see why one couldn't allow ATP entrants.</li>\n</ul>",
        "id": 383108618,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691541558
    },
    {
        "content": "<p>Overall, I find competitions intriguing.  I think in machine learning at least, benchmarks are more common and useful than competitions, because benchmarks can be worked on at any point.  But competitions do have a certain advantage.  For example, if the problems are new, one doesn't have to worry about the model cheating by seeing the problems already.  It can also be a bit more exciting especially if the models do well (like in AlphaFold2 winning CASP).</p>",
        "id": 383108746,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691541594
    },
    {
        "content": "<p>Do folks here know of more such competitions?  And if so, are there any that machine learning models can compete in, not just symbolic AI systems?</p>",
        "id": 383108771,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691541600
    },
    {
        "content": "<p>My understanding (possibly wrong) about CASC is that while it is not impossible for neural and other machine learning models to compete, there are a lot of onerous restrictions.  From the CASC website:</p>\n<blockquote>\n<p>All techniques used must be general purpose, and expected to extend usefully to new unseen problems. The precomputation and storage of information about individual problems that might appear in the competition, or their solutions, is not allowed. Strategies and strategy selection based on individual problems or their solutions are not allowed. If machine learning procedures are used to tune a system, the learning must ensure that sufficient generalization is obtained so that no there is no specialization to individual problems. The system description must explain any such tuning or training that has been done. The competition panel may disqualify any system that is deemed to be problem specific rather than general purpose. If you are in doubt, contact the competition organizer.</p>\n</blockquote>",
        "id": 383108902,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691541631
    },
    {
        "content": "<p>I think the fundamental problem, if I understand correctly, is that the same problems are used from year to year.  So any system which learns from those problems ahead of time is cheating.  I personally think this is really unfortunate (again if I understand correctly).  It prevents the building and testing of anything but purely symbolic AI where everything has to be directly programmed in.  I think the one exception is a category called Large Theory Batch Problems where the model is allowed to look at a range of problems and solve as many as it can in a long period of time, say 48 hours.  A model can look at all the problems in the batch and solve them in any order.  While one can't do any learning ahead of time, this does let the model apply its learnings from problems it solves early to solve later problems.  The MALARea model is a machine learning model which has won this category a few times, but it is not a neural model since you would need a fast learning algorithm for this to work.  Unfortunately I think this prohibits the newer FOL neural reinforcement based learning algorithms for which there are a few good ones now.</p>",
        "id": 383108931,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691541638
    },
    {
        "content": "<p>I do however appreciate that coming up with new problems is hard, but I still wonder if there is a way to have better theorem proving competitions where AI models can compete.</p>",
        "id": 383108949,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691541642
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"342408\">@Geoff Sutcliffe</span> Feel free to let me know if I'm mischaracterized CASC and its requirements on machine learning models.</p>",
        "id": 383110844,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691542167
    },
    {
        "content": "<p>Hi Jason, all,</p>\n<p>Here is some more about CASC wrt this suggestion ...</p>\n<blockquote>\n<p>I want to start a conversation about automatic theorem proving competitions, especially ones that neural-based AI can compete in.  I don't know much about this space, so I want to know more.  But at the same time I feel there is really nothing right now that fits anything like I have in mind.  </p>\n</blockquote>\n<p>Yep, there is nothing specifically for NN-based ATP. I would support you<br>\nstarting one. An appropriate conference to host it would be AITP.</p>\n<blockquote>\n<p>First, I do know of a few competitions:<br>\n* (CASC) <a href=\"https://www.tptp.org/CASC/\">CADE ATP System Competition</a> I think is a big one and it focuses (if I'm not mistaken) on first order logic.</p>\n</blockquote>\n<p>It uses first-order and higher-order classical logic (and non-classical<br>\nlogic is on its way!).</p>\n<blockquote>\n<p>Overall, I find competitions intriguing.  </p>\n</blockquote>\n<p>The certainly help stimulate progress. And it's fun.</p>\n<blockquote>\n<p>I think in machine learning at least, benchmarks are more common and useful than competitions, because benchmarks can be worked on at any point.  But competitions do have a certain advantage.  For example, if the problems are new, one doesn't have to worry about the model cheating by seeing the problems already.  It can also be a bit more exciting especially if the models do well (like in AlphaFold2 winning CASP).<br>\nMy understanding (possibly wrong) about CASC is that while it is not impossible for neural and other machine learning models to compete, there are a lot of onerous restrictions.  From the CASC website:</p>\n</blockquote>\n<p>NN-guided ATP systems do compete in CASC, and the LTB division is discussed<br>\nbelow was designed especially to support ML to learn search guidance for<br>\nlarge homogeneous problem sets.</p>\n<blockquote>\n<p>I think the fundamental problem, if I understand correctly, is that the same problems are used from year to year.  </p>\n</blockquote>\n<p>That's true to some extent, in that for many of the divisions the TPTP<br>\nproblem library is used. Note however that the TPTP grows each year, and<br>\nnew problems that the systems have not seen are selected in preference<br>\nto problems that were in the previous release. Additionally, the SLH and<br>\nLTB division use new non-TPTP problem sets each year.</p>\n<blockquote>\n<p>I think the one exception is a category called Large Theory Batch Problems where the model is allowed to look at a range of problems and solve as many as it can in a long period of time, say 48 hours.  A model can look at all the problems in the batch and solve them in any order.  </p>\n</blockquote>\n<p>Correct.</p>\n<blockquote>\n<p>While one can't do any learning ahead of time, </p>\n</blockquote>\n<p>Incorrect. For LTB a largish sample of problems and their proofs is released<br>\nahead of the competition to allow systems to be tuned (including ML trained)<br>\nready for the competition.</p>\n<blockquote>\n<p>this does let the model apply its learnings from problems it solves early to solve later problems.  </p>\n</blockquote>\n<p>Correct.</p>\n<blockquote>\n<p>The MALARea model is a machine learning model which has won this category a few times, but it is not a neural model since you would need a fast learning algorithm for this to work.  </p>\n</blockquote>\n<p>I believe you are wrong - MALARea did update its model as it progressed <br>\nthrough the problems. Read the papers, or chat withg Josef. But in a sense<br>\nyou are right, because MALARea was the only NN based system that enetered<br>\nthe LTB division, and non-NN adaptive strategies did better.</p>\n<blockquote>\n<blockquote>\n<p>I do however appreciate that coming up with new problems is hard, but I still wonder if there is a way to have better theorem proving competitions where AI models can compete.</p>\n</blockquote>\n</blockquote>\n<p>I have lots of problem sets you can play with.</p>\n<blockquote>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"342408\">Geoff Sutcliffe</span> Feel free to let me know if I'm mischaracterized CASC and its requirements on machine learning models.</p>\n</blockquote>\n</blockquote>\n<p>I hope my comments help. I'd be happy to help you set up a competition <br>\n(separate from CASC) if you decide to go ahead.</p>\n<p>Cheers,</p>\n<p>Geoff</p>",
        "id": 383275256,
        "sender_full_name": "Geoff Sutcliffe",
        "timestamp": 1691586289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"342408\">@Geoff Sutcliffe</span> Thanks for the thorough reply!</p>\n<blockquote>\n<p>Yep, there is nothing specifically for NN-based ATP. I would support you<br>\nstarting one. An appropriate conference to host it would be AITP.</p>\n</blockquote>\n<p>It would be a nice conversation for the upcoming AITP.  (Unfortunately it is at a bad time for me every year, so others would have to discuss it without me.)</p>",
        "id": 383310874,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691592122
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>While one can't do any learning ahead of time,</p>\n</blockquote>\n<p>Incorrect. For LTB a largish sample of problems and their proofs is released<br>\nahead of the competition to allow systems to be tuned (including ML trained)<br>\nready for the competition.</p>\n</blockquote>\n<p>So you are saying it is possible to train on this set of problems ahead of time?  How big is it?  (To be clear, most NN based systems I know use at least 2k problems for training.)  And can the neural network flat out memorize this set of problems (which frankly neural networks are prone to do)?  Also, to be clear, it is not possible to train the model on any other set of problems (like past LTB problem sets or the TPTP dataset), only this \"largish\" sample, right?</p>",
        "id": 383310975,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691592133
    },
    {
        "content": "<p>For SLH, is any pre-training allowed, and if so, on what set of problems?  Could you train on all previous TPTP problems?</p>",
        "id": 383311050,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691592144
    },
    {
        "content": "<blockquote>\n<p>NN-guided ATP systems do compete in CASC</p>\n</blockquote>\n<p>Are there any machine learning systems besides MALARea which compete in any of the categories?  (And to be clear, while MALARea uses machine learning, specifically naive Bayes and maybe k-nearest neighbors, I don't think it uses neural networks.)</p>",
        "id": 383311143,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691592163
    },
    {
        "content": "<blockquote>\n<p>hope my comments help. I'd be happy to help you set up a competition (separate from CASC) if you decide to go ahead.</p>\n</blockquote>\n<p>I personally am most interested not in FOL or HOL theorem proving in a pure form, but in theorem proving in practical ITP systems in the presence of large existing libraries of mathematics.  The idea that one would be given theorems in Isabelle, Coq, or Lean (or even Metamath, HOL-Light, or Mizar) to prove.  They could use and pre-train on the existing mathematics libraries, and use the tactics of the system.  Indeed, there are already a number of provers out there which do this (like Lean GPT-f, Thor, MagnusHammer, ASTactic, Tactician, and so on).  And there are already benchmarks, like MiniF2F or just reproving theorems in the library not used for training.  I wonder if this can/should be turned into a competition.</p>",
        "id": 383311257,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691592185
    },
    {
        "content": "<p>I guess there are also many practical concerns.  Neural network systems often need GPUs (although not all do, especially for inference), and they likely use a bit higher number of resources than traditional ATPs (but again, not all do as some can run on a few cores).  Also, it is hard to restrict what data one can pre-train on.  Many LLM based NN solutions pre-train on basically a large chunk of the Internet and Github.  While this could be banned, it also prevents evaluation of cutting edge approaches.  But if you allow the Internet as pre-training data, you really have to be careful to make sure your problems are brand new.</p>",
        "id": 383311295,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691592191
    },
    {
        "content": "<p>Most practically, I might be interested in competing so I should be careful if having too much input into a competition makes me ineligible to compete. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 383311349,
        "sender_full_name": "Jason Rute",
        "timestamp": 1691592200
    },
    {
        "content": "<p>Hey Jason, a competition like this would be something I'd want to see happen. </p>\n<p>I think one of the interesting challenges here is the relative scarcity of training data (formalized theorems + proofs) and the difficulty of manually producing more original data. This would present a requirement for competitors to be more creative with their models as they wouldn't be able to simply scale up (until we have reliable auto formalization, of course, but it is hard to know when that might be developed, and the implications of it would be huge). As a result, this might actually stimulate innovation more than other competitions. </p>\n<p>A recent addition to the space that brings this closer to reach is LeanDojo, which is an open-sourced set of tools, data, models and benchmarks that aims to remove the barriers of creating theorem proving LLMs. This is something that I think would allow more people to join a competition like this, increasing the impact created by it and fostering interest. </p>\n<p>It could also have knock-on effects for direct problem solution (ie the creation of a solution theorem by the model in response to a problem prompt), which happens to be something I'm far more interested in and that I'm building <code>mathlete.ai</code> to do. Still very much so in the early idea stages, but it's something I'm excited about.</p>",
        "id": 383350992,
        "sender_full_name": "Aren Güralp",
        "timestamp": 1691598981
    },
    {
        "content": "<p>Thanks for starting this thread Jason. I can think of a number of reasons such a competition would be good for the state of research in ML for theorem proving and for the deep learning community in general.</p>\n<ol>\n<li>The most important reason is that it would battle test infrastructure for interaction and data extraction. LeanDojo looks very promising, and iirc it's close to having full Lean 4 support. But it's hard to know what the limitations of these tools are until you put them in the hands of creative users. </li>\n<li>If designed correctly, such a competition would draw a lot of interest from the wider deep learning community. Right now, there is something of a crisis in LLM evaluation because the one-shot IID benchmarks we use to evaluate language models don't reflect the most useful abilities of something like chatgpt or copilot. I'm sure that OAI/Anthropic have great internal evaluations for open-ended/multi-step/context-heavy tasks but they aren't public and likely require human annotators to score outputs. The field is crying out for a benchmark that assesses long horizon, context-laden tasks and can also be scored automatically. A theorem proving competition structured like the natural number game (with sequentially dependent problems, as opposed to minif2f, where each theorem is independent) would fit this bill.</li>\n<li>If the competition were based on problems that were private until the date of the competition (which it really should be), then it would be a source of guaranteed clean test data, which can be hard to come by for LLMs. </li>\n</ol>\n<p>I wouldn't have a strong interest in competing myself, so I would be happy to help organize.</p>",
        "id": 383429694,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1691621005
    },
    {
        "content": "<p>Thanks Jason, Geoff, Aren and Zhangir.</p>\n<p>I've been thinking about organising a competition like this too.</p>\n<p>There are several challenges I could think of. Some of the thoughts below are directly influenced by chatting with <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> in person a few weeks ago and lurking on the Zulip chat and NOT from deep expertise in the subject. But here they are FWIW.</p>\n<ol>\n<li><strong>High quality formalisations</strong>. Formalising certain kinds of \"high school\" problems (e.g. geometry) is still relatively niche expertise. I think the key expertise lies with <span class=\"user-mention\" data-user-id=\"266253\">@Joseph Myers</span> and a few others, but to the best of my knowledge it's a very narrow group of people who have the expertise needed to do this well. The unfortunate downside is that a lot of problem statements in existing benchmarks are incorrect, and often trivially true or false. There are a lot of challenges here (e.g. what does it actually mean to \"find x\" -- is proof of existence enough, or does one have to actually construct the object? What if \"x\" follows from a simple decidable search?).</li>\n<li><strong>Previously unseen problems</strong>. Being able to come up with a good volume of previously unseen problems of the right kind of difficulty. In practice even a talented/motivated formaliser will struggle to produce more than a couple of examples a week. I think scaling that will require a larg-ish group of motivated folks.</li>\n<li><strong>Format</strong>. What kind of format would be most useful to the community of LLM researchers? Zhangir proposes long horizon, context-laden tasks, like a natural numbers game. How about \"machine translation\" from informal proofs in latex to formal proofs in lean? I remember reading a paper from facebook research about this -- perhaps this is more within reach than coming up with original reasoning.</li>\n</ol>\n<p>I don't think these challenges are insurmountable and I've got some ideas on how to work through them. Happy to chat with anybody interested.</p>",
        "id": 384037355,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1691772858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284997\">@Zhangir Azerbayev</span> -- I can see you're ahead of me here when it comes to <strong>3. Format</strong> -- I just became aware of your work on ProofNet -- looks really great! I'm reading through the paper just now...</p>",
        "id": 384043966,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1691774177
    },
    {
        "content": "<p>Hi Adam, it's great to see more people interested In this topic.<br>\nI've been doing some background reading on the subject for the past week or so. Here are some of my thoughts on the points you make.</p>\n<ol>\n<li>The specifics of what types of theorems are harder/easier to formalize in lean is beyond me, but I've been thinking a lot about how to formalize an actual problem- not just a theorem to be proved, but one where the answer must be known before a claim can be made. I think of this in the context of the IMO Challenge, where the competing model will have to produce the theorem itself. I've been experimenting a little with starting at a proof of existence and prompting ChatGPT to use that to find the solution step-by-step, with no success so far. I believe a competition like this should require the construction or at least provision of \"x\". My other idea for this is to somehow construct a \"dummy theorem\" that can stand in for any specific \"x\" of its type, then carrying out tactics on that theorem until the value of \"x\" can be verifiably solved for.</li>\n<li>I don't see why it wouldn't be possible at the smaller scale to model these problems off of real mathematics competitions like the IMO or Putnam that already have problems produced for them every year. Scaling up, it's always possible to tap into short- and long-lists for these competitions. The challenge of course lies in the actual formalization of these, which would take human expertise. The alternative would be autoformalization, which is not entirely reliable at the moment, and might require production of a dedicated model trained and finetuned for theorem/proof translating. </li>\n<li>I am most intrigued by a competition format similar to the IMO, where problems are given without solution and both proof and solution must be produced. I think this would be a much broader measure of LLM reasoning capability, as opposed to the single task of ATP or translation, and I believe it would be open to more avenues of attack, which would make for richer stimulation of the field. This is also the one element that is most open to variation, as it's possible to simply have a competition for each format that there is value to be found in.</li>\n</ol>",
        "id": 384067131,
        "sender_full_name": "Aren Güralp",
        "timestamp": 1691779997
    },
    {
        "content": "<p>If you go into the <a href=\"https://github.com/leanprover-community/lean-liquid\">repo</a> of the Liquid Tensor Experiment, and search the Git history (can't be done on GitHub though), you'd find lots of <code>sorry</code>s at every stage of development, which are later filled in. Could those not be used as training data / benchmark? There's even the <a href=\"https://leanprover-community.github.io/liquid/\">blueprint</a> that connects theorems and proofs with natural language references. To make a competition, could we just use some private repo under active development?</p>",
        "id": 384090118,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1691786930
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111040\">Adam Kurkiewicz</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Automatic.20Theorem.20Proving.20Competitions/near/384043966\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"284997\">Zhangir Azerbayev</span> -- I can see you're ahead of me here when it comes to <strong>3. Format</strong> -- I just became aware of your work on ProofNet -- looks really great! I'm reading through the paper just now...</p>\n</blockquote>\n<p>ProofNet more or less failed in its goal of encouraging interesting research because no new ideas will be required to solve it. All we'll have to do is wait for a few more iterations of GPT. I think something similar applies to domains like IMO or Putnam: there won't be much buy in from the deep learning community because GPT-n for not too high a value of n will one-shot these problems in natural language. </p>\n<p>The more interesting test would be one that points in the direction of a lifelong learning agent that can accumulate mathematical knowledge from experience. For example, we could create a test that forces the model to </p>\n<ol>\n<li>Accumulate a library of theorems during test time that it must use as deftly as those it saw during pretraining. </li>\n<li>Formalize some definition and be on the hook for the consequences of a poor one,  <br>\nand so forth. </li>\n</ol>\n<p>I like the approach of the natural number game, which is structured in terms of sequentially dependent worlds and levels. </p>\n<p>One good source of material might be constructing some object differently from how it is done in mathlib. For example, if the p-adic numbers in mathlib are defined algebraically (I haven't checked), we could create a \"p-adic number game\" that does the construction via the p-adic metric.</p>",
        "id": 384101986,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1691791616
    },
    {
        "content": "<p>If you search Eudoxus on Zulip you will see multiple construction of the real numbers ...</p>",
        "id": 384105705,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1691793392
    },
    {
        "content": "<p>Hmm, the insight about GPT-n seems a little pessimistic! Historically people tend to over-rate short-term AI progress due to hype, which later inevitably leads to deflated expectations (e.g. AI winter in the 80s, or neural networks winter in the 90s and the 00s).</p>\n<p>I wouldn't be surprised if the IMO grand challenge was still unbroken in 20 years with many more ideas needed to break it!</p>\n<p>If we start this competition now, we could still be running it in 20 years...</p>\n<p>And I would definitely give more credit to ProofNet. For example, LeanDojo used it as a benchmark of their ReProver -- now we have an open source baseline and two hand-made benchmarks (miniF2F, ProofNet), and a synthetic benchmark due to LeanDojo (mathlib split). The field seems to be going strong!</p>\n<p>\"p-adic number game\" is a good idea! There are some other exotic structures we could use, like the \"Arithmetree\" by <a href=\"https://www.sciencedirect.com/science/article/pii/S0021869302005100\">Jean-Louis Loday</a>. This could scale in principle -- we should be able to regularly come up with recreational maths examples that will be largely independent of what's been formalised out there. But I would still include the informal proofs at this stage for in-context learning.</p>\n<p>If the competition spurs the creation of a high-end autoformaliser within the next 20 years, I think we will have achieved a lot!</p>",
        "id": 384163835,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1691822131
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111040\">Adam Kurkiewicz</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Automatic.20Theorem.20Proving.20Competitions/near/384163835\">said</a>:</p>\n<blockquote>\n<p>Hmm, the insight about GPT-n seems a little pessimistic! Historically people tend to over-rate short-term AI progress due to hype, which later inevitably leads to deflated expectations (e.g. AI winter in the 80s, or neural networks winter in the 90s and the 00s).</p>\n<p>I wouldn't be surprised if the IMO grand challenge was still unbroken in 20 years with many more ideas needed to break it!</p>\n<p>If we start this competition now, we could still be running it in 20 years...</p>\n<p>And I would definitely give more credit to ProofNet. For example, LeanDojo used it as a benchmark of their ReProver -- now we have an open source baseline and two hand-made benchmarks (miniF2F, ProofNet), and a synthetic benchmark due to LeanDojo (mathlib split). The field seems to be going strong!</p>\n<p>\"p-adic number game\" is a good idea! There are some other exotic structures we could use, like the \"Arithmetree\" by <a href=\"https://www.sciencedirect.com/science/article/pii/S0021869302005100\">Jean-Louis Loday</a>. This could scale in principle -- we should be able to regularly come up with recreational maths examples that will be largely independent of what's been formalised out there. But I would still include the informal proofs at this stage for in-context learning.</p>\n<p>If the competition spurs the creation of a high-end autoformaliser within the next 20 years, I think we will have achieved a lot!</p>\n</blockquote>\n<p>I expect that even if there are zero new conceptual breakthroughs in machine learning the IMO grand challenge (in natural language) won't last very long. Already, GPT-4 + verifier scores <a href=\"https://arxiv.org/abs/2305.20050\">over 50% on the AMC competition</a>. The precise timeline is contingent, but I find it hard to imagine GPT is more than a few iterations of increased data+compute away from the IMO.</p>",
        "id": 384339611,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1691868791
    },
    {
        "content": "<p>I'm pretty skeptical here that \"just more data and compute\" will get GPT to IMO level. I don't think there's meaningful evidence that GPT-4 level models can do the exploratory working-out-what-to-prove step of IMO problems, even augmented by verifiers or agents. I would be happy to pointed to such evidence (performance on the AMC wouldn't count without a pretty careful account of the extent to which this exploratory work is necessary on the 50% that is currently within range). Without that, I think there is a qualitative gap between current technology and the IMO grand challenge, and just adding data+compute won't get us off the ground.</p>\n<p>That said, I don't particularly doubt that RL focused on math problems, with a good curriculum leading up to IMO level, could cross that gap in the next few years.</p>",
        "id": 384387953,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691896794
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> -- I think I'm on your side of the argument here -- could you share more thoughts about AMC and GPT-4's performance?</p>\n<p>In particular are questions multiple choice? I don't know much about those american competitions.</p>",
        "id": 384556308,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1691950161
    },
    {
        "content": "<p><a href=\"https://artofproblemsolving.com/wiki/index.php/2022_AMC_10A_Problems\">Here is a list of problems on a recent AMC10A</a><br>\n<a href=\"https://artofproblemsolving.com/wiki/index.php/2022_IMO_Problems\">Here is a list of problems on a recent IMO</a></p>",
        "id": 384589279,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1691963422
    },
    {
        "content": "<p>In particular, I feel skeptical that we are just need more data and compute to get an LLM to output something like, for example, <a href=\"https://artofproblemsolving.com/wiki/index.php/2022_IMO_Problems/Problem_5\">this solution</a> to <a href=\"https://artofproblemsolving.com/wiki/index.php/2022_IMO_Problems#Problem_5\">problem 5 here</a>. I encourage you all to try the problem for yourselves before looking at the solution, especially if you've never looked at the IMO before, just to make sure you have an accurate sense of the kind of reasoning you have to employ to solve an IMO problem. </p>\n<blockquote>\n<p>Find all triples $(a,b,p)$ of positive integers with $p$ prime and\\[a^p = b! + p\\]</p>\n</blockquote>\n<p>It seems to me that whatever AI system eventually wins the IMO, it will have to be able to do a lot of backtracking and case analysis. This strikes me as the kind of thing that is much better suited to a formal environment than LLM human-language reasoning, but if you are going use an LLM speaking human language to itself, I think there will definitely have to be a lot of structure in the prompts that are being fed to the LLM.</p>",
        "id": 384598960,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1691968120
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Automatic.20Theorem.20Proving.20Competitions/near/384387953\">said</a>:</p>\n<blockquote>\n<p>I'm pretty skeptical here that \"just more data and compute\" will get GPT to IMO level. I don't think there's meaningful evidence that GPT-4 level models can do the exploratory working-out-what-to-prove step of IMO problems, even augmented by verifiers or agents. I would be happy to pointed to such evidence (performance on the AMC wouldn't count without a pretty careful account of the extent to which this exploratory work is necessary on the 50% that is currently within range). Without that, I think there is a qualitative gap between current technology and the IMO grand challenge, and just adding data+compute won't get us off the ground.</p>\n<p>That said, I don't particularly doubt that RL focused on math problems, with a good curriculum leading up to IMO level, could cross that gap in the next few years.</p>\n</blockquote>\n<p>Isn't Sagredo an example of GPT doing exploratory work? We've seen a few examples of it fumbling around for a while before finding the correct tactic step.</p>",
        "id": 384601181,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1691969501
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Automatic.20Theorem.20Proving.20Competitions/near/384598960\">said</a>:</p>\n<blockquote>\n<p>It seems to me that whatever AI system eventually wins the IMO, it will have to be able to do a lot of backtracking and case analysis. This strikes me as the kind of thing that is much better suited to a formal environment than LLM human-language reasoning, but if you are going use an LLM speaking human language to itself, I think there will definitely have to be a lot of structure in the prompts that are being fed to the LLM.</p>\n</blockquote>\n<p>I don't think formal has a discernible advantage over NL at IMO level. For graduate/research level math, it might be very hard to train good verifiers, but for IMO it will be much more feasible.</p>",
        "id": 384602130,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1691970058
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284997\">Zhangir Azerbayev</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Automatic.20Theorem.20Proving.20Competitions/near/384602130\">said</a>:</p>\n<blockquote>\n<p>I don't think formal has a discernible advantage over NL at IMO level. For graduate/research level math, it might be very hard to train good verifiers, but for IMO it won't be terribly hard.</p>\n</blockquote>\n<p>The way I see it, it doesn't  just have to be good, it has to be essentially perfect. If I have to think through 100 different subproblems to solve an IMO question, and if a mistake verifying any one of them has the potential to make my proof wrong, then my natural language verifier needs an accuracy on the order of 99%.</p>",
        "id": 384603059,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1691970610
    },
    {
        "content": "<p>Also the \"graduate level math\" comment is always funny to me. I am a graduate student. I am not a mathematician, but I'm a computer scientist, and I do proofs in my research. I think of IMO problems as much more difficult than my research problems.</p>\n<p>A fair response to this might be that the math I do and the math that math grad students do is very different. But in some sense this is a point in favor of the difficulty of the task on its own. What we need is not just more training data but more training data of writing on the form of math that is used to make IMO problems. Even loading all of the Springer yellow books into the machine might not do it because even though they are math books, they are not necessarily the right kind of math book.</p>",
        "id": 384603843,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1691971134
    }
]