[
    {
        "content": "<p>To <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>'s point about LLM+ITP: I've been thinking about this a bit, and my thoughts can be summarized by watching this (hilarious) clip of ChatGPT playing Stockfish:<br>\n<a href=\"https://www.reddit.com/r/AnarchyChess/comments/10ydnbb/i_placed_stockfish_white_against_chatgpt_black/\">https://www.reddit.com/r/AnarchyChess/comments/10ydnbb/i_placed_stockfish_white_against_chatgpt_black/</a><br>\nThe \"opening\" seems rather normally played, which is amazing, as ChatGPT knowings <em>nothing</em> about the rules of chess; it seems to have successfully inferred how pieces move \"by osmosis\". But then we get to the middle, and its queen jumps over pieces, rooks move like knights, pawns randomly appear out of nowhere (and Stockfish dutifully replies as best it can, including a final, merciful capture of Chat's king). This is how it feels to me to interact with ChatGPT with math; you ask it to prove something from a first year graduate course, and it correctly states the definition, correctly identifies the key property to be checked, and correctly concludes the end of the proof. But it's that \"midgame\", where all the \"beef\" of the proof happens, that it just writes complete BS (not unlike some of our undergrads/beginning grad students!...).</p>\n<p>But we actually <em>do</em> know how to make amazing chess engines using NN, namely, AlphaZero. So my guess is that we would want LLM (maybe for the opening, to get to the beef) + (ITP+AZ : AlphaZero-type NN trained on the \"rules\" of math via an ITP) working in concert. Have the DeepMind people (who made AlphaZero) gotten into this business at all? (I have some contacts there; might check it out...) Needless to say, the \"space\" of possible \"moves\" in math seems unfathomably larger than that of chess; so maybe this approach is doomed to fail. But in many situations in practice, there are actually only a small handful of things that make sense to attempt in a given state of a proof, and perhaps those can be learned!..?</p>\n<p>About changing x^4+y^4=16 to 17, I'm reminded of the experiment where chess experts vs lay people are briefly shown positions, either from actual games or from random arrangements, and asked to reproduce them. Unsurprisingly, the chess experts seeing actual games are able to reproduce a lot of the structure, and if they're off, entire groups of pieces are off while preserving their relationships; meanwhile lay people are actually slightly better than experts at reproducing random arrangements (presumably because the experts waste their time looking for structure in the chaos?). So I agree, math is \"globally\" difficult, and we shouldn't expect too much from ML immediately; but I think there are lots of situations (e.g. lots of analytic number theory arguments which amount to finding the \"right\" place to apply Cauchy-Schwartz, followed by more-or-less standard techniques in estimating exponential sums) where it really has the potential to \"learn\" and be a big boost in the hands of someone capable of harnessing its power...</p>\n<p>Just my two cents... I would be happy to hear all the points where I'm revealing my ignorance...</p>",
        "id": 350524076,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1681740086
    },
    {
        "content": "<p>ITP+AZ has been tried: <a href=\"https://arxiv.org/abs/2205.11491\">https://arxiv.org/abs/2205.11491</a><br>\nand I guess the authors would agree that replacing the language model with a well-pretrained large language model would further increase performance<br>\n(of course there is an inference time - quality tradeoff for the choice of model size, and hierarchical methods like <a href=\"https://arxiv.org/abs/2210.12283\">https://arxiv.org/abs/2210.12283</a> will probably turn out best)</p>",
        "id": 350530399,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681741331
    },
    {
        "content": "<p>Is there a way for a \"mere mortal\" to play with this stuff? Or does one have to work at DeepMind/OpenAI/etc to actually mess around with the models and not just their outputs...?</p>",
        "id": 350532735,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1681741833
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252920\">Alex Kontorovich</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LLM.2BITP.28.2BAZ.29.3F/near/350532735\">said</a>:</p>\n<blockquote>\n<p>Is there a way for a \"mere mortal\" to play with this stuff? Or does one have to work at DeepMind/OpenAI/etc to actually mess around with the models and not just their outputs...?</p>\n</blockquote>\n<p>Currently \"mere mortals\" can only play with the VSCode plugin for HTPS, which works in an autocomplete style (does not have search) afaik. <span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> gave a good talk which covered widely available stuff <a href=\"https://youtu.be/P5ew0BrRm_I\">here</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"P5ew0BrRm_I\" href=\"https://youtu.be/P5ew0BrRm_I\"><img src=\"https://uploads.zulipusercontent.net/d8345cc9eb01cf374bb8439e8efa5e8f497cea84/68747470733a2f2f692e7974696d672e636f6d2f76692f50356577304272526d5f492f64656661756c742e6a7067\"></a></div><p>Also: stick around, we're going to have more and more tools open-sourced tools people can play with on their laptop!</p>",
        "id": 350555751,
        "sender_full_name": "Albert Jiang",
        "timestamp": 1681746471
    },
    {
        "content": "<p>Yes my talk covers the AlphaZero approach to theorem proving.  Also look at <a href=\"https://m.youtube.com/watch?v=_pqJYnQua58\">Tony’s talk</a> in the same IPAM meeting.  The Draft-Sketch-Prove approach is similar to what <span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span>  was saying by using LLMs to “jump start” opening moves of a formal proof by having the model give a natural language description of the proof which is converted into a formal proof sketch which is then filled in by another model.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"_pqJYnQua58\" href=\"https://m.youtube.com/watch?v=_pqJYnQua58\"><img src=\"https://uploads.zulipusercontent.net/4fa3166743227336d24a317566d44c11fb64d7ef/68747470733a2f2f692e7974696d672e636f6d2f76692f5f70714a596e51756135382f64656661756c742e6a7067\"></a></div>",
        "id": 350563723,
        "sender_full_name": "Jason Rute",
        "timestamp": 1681748586
    },
    {
        "content": "<p>And regarding action spaces: for some time it was very fashionable in Reinforcement Learning to put gigantic numbers about the size of the search space. but of course as <span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span> says, the question is actually how well-structured / \"learnable\" the data is (say, what the \"dimension\" of the \"data manifold\" is, not of the raw space into which we embed it)<br>\nAnd I think many mathematicians agree that the \"sensible action space\" is significantly smaller and can be learned (Timothy Gowers for instance: <a href=\"https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/\">https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/</a>)</p>\n<p>But Reinforcement Learning is very data inefficient, so one should use supervised data and pretraining as much as possible before turning to RL for the last bits.</p>",
        "id": 350577131,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681752258
    },
    {
        "content": "<p>Most of the time, the sensible action space is small. But at that point where you need the new idea which gets you further than current techniques seem to go, the action space is vast and not well-understood.</p>",
        "id": 350591100,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681756504
    },
    {
        "content": "<p>Of course. But I like to think of this as a continuum.</p>",
        "id": 350591803,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681756690
    },
    {
        "content": "<p>I don't really know what you mean by that. When I'm formalising proofs I really feel like there are times when I'm on autopilot and there are other times where I'm entering a genuine idea into the system, so for me the amount of \"cleverness\" needed to write the next line in a tactic proof feels quite discontinuous. But maybe I'm misunderstanding you.</p>",
        "id": 350592049,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681756779
    },
    {
        "content": "<p>I think there is anything from \"doing autopilot cleanup moves\" via \"applying standard techniques in standard ways\" and \"applying standard techniques in nonstandard ways\" to \"creating novel ideas which build on existing well-understood notions\" and \"creating novel ideas which build on novel notions\"</p>",
        "id": 350592407,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681756906
    },
    {
        "content": "<p>Aah I see. Yes, I agree with you that there's a continuum of ideas of that nature. But when you're actually proving a theorem, you are jumping around within that continuum. For example the proof that there's infinitely many primes contains one brilliant idea <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>+</mo><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">1 + \\prod_{i=1}^n p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.104em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and the rest is kind of mechanical.</p>",
        "id": 350592738,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681757032
    },
    {
        "content": "<p>More formally, you could measure the amount of surprise a certain mathematical agent has upon reading a sentence in a proof. An autopilot cleanup move has zero surprise / information content, and my claim is that while complexity may be exponentially distributed (information theory defines <code>surprise := -log probability</code>), it may still be the case that for every level of surprise there exsists a proof line with that surprise.</p>",
        "id": 350592929,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681757089
    },
    {
        "content": "<p>In the corpus of all proofs, I believe you!</p>",
        "id": 350593495,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681757272
    },
    {
        "content": "<p>FWIW Timothy's project is all about demystifying these \"rabbit out of the hat\" steps, doing boring mechanical search space reductions until there is no rabbit left.</p>",
        "id": 350593650,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681757316
    },
    {
        "content": "<p>Ridiculuously simple example:</p>\n<p>Let us say we are proving:<br>\n<code>forall m,n : Nat, exists x : Nat, x &gt; m and x &gt; n</code><br>\nThe rabbit would be <code>x := max(m, n) + 1</code>.</p>\n<p>If instead, we postpone the decision for <code>x</code> and focus on the first goal, we might retrieve <code>forall k : Nat, k + 1 &gt; k</code> and close the goal with <code>x := m+1</code>. Turning to the second goal, now <code>|- m+1 &gt; n</code>, applying transitivity with <code>m+1 &gt; m</code> gives <code>|- m \\geq n</code>, which cannot be proved.</p>\n<p>However, instead of giving up, we have found a case split that we can exploit: it remains to prove<br>\n<code>|- n &gt; m |- exists x : Nat, x &gt; m and x &gt; n</code>. The same as above fails in the case where we focus on the first goal first (<code>x := m+1</code>) but succeeds if we focus on the second goal first: <code>x := n+1</code> leads to <code>n &gt; m |- n+1 &gt; m</code>. In other words, we have implicitly been led to the definition of <code>max</code> and discovered a simple \"novel concept\".</p>\n<p>Arguably, this proof has a lower surprise level than the one that starts with \"take <code>x := max(m,n) + 1</code>\", and one could dream of such methods to lower the surprise level even in more complicated cases...</p>",
        "id": 350595954,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681758193
    },
    {
        "content": "<p>Right -- but the problem is that this doesn't scale to \"let's make the amazing obervation that proving that a deformation ring is isomorphic to a Hecke algebra might be the key observation which unlocks Fermat's Last Theorem\". This observation was made by a singular genius, and no amount of training on the internet will get you there -- I <em>think</em>.</p>",
        "id": 350605110,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1681761707
    },
    {
        "content": "<p>I like to think of \"genius\" as a concept expressible in standard physics (as opposed to something transcendental), and as a continuum ;) Clearly, predictive language modelling won't get you there, but that hasn't been claimed in this thread I think. Rather, everyone agrees that we have to add a component of reasoning that encompasses a certain amount of search but is not \"mere search\" (similar to what happened in my example). You are right that there is a difference between your example and mine, and that is that while in my example, the reasoning can be expressed in the object language (\"let's turn this proof goal which doesn't depend on <code>x</code> anymore into a <code>by_cases</code> split\"), in yours the reasoning takes place in an \"unsound but sufficiently sound\" quotient of mathematical logic, where human mathematicians have established new rules like \"every statement in this subtheory should easily be refutable or provable with a certain set of tools\" or \"this proof has generalization flexibility here and here, but seems to be a precise fit / seems to barely go through at this point\". And while it is not at all clear how to model such ways of reasoning right now in maths (and we are still very far from it), what makes me slightly optimistic is that it is not unheard of that machine learning models develop new intuitions and concepts or learn them on an ad-hoc basis.</p>",
        "id": 350613738,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681764998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I think you should also notice in your own post above that you reached for an extreme example of \"genius\". At present there is just so much low hanging fruit in terms of \"demystifying minor genius\" (as in <span class=\"user-mention\" data-user-id=\"210057\">@Fabian Glöckle</span>'s example about discovering <code>max</code>) that I feel we should try for a certain agnosticism  about major genius until we've done the work on minor genius that we're pretty sure is doable! I think we might just be surprised, either way, at the gap that remains.</p>",
        "id": 350616247,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681766065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LLM.2BITP.28.2BAZ.29.3F/near/350605110\">said</a>:</p>\n<blockquote>\n<p>Right -- but the problem is that this doesn't scale to \"let's make the amazing obervation that proving that a deformation ring is isomorphic to a Hecke algebra might be the key observation which unlocks Fermat's Last Theorem\". This observation was made by a singular genius, and no amount of training on the internet will get you there -- I <em>think</em>.</p>\n</blockquote>\n<p>I wouldn't confidently assert that <em>no</em> amount of training on the internet will get us to a singular genius. The intuition behind how it could is that if you have a model that's really good at generalizing to unseen data, it should be able to generalize to levels of \"insight\", \"cleverness\", or whatever else you want that are not in the training data. This possibility is discussed at length in the essay <a href=\"https://evjang.com/2021/10/23/generalization.html\">Just Ask for Generalization</a>. </p>\n<p>In practice, it's an open question whether we have enough mathematical text to train LMs that are good at math: a lot depends on how helpful non-math data is for improving at math.</p>",
        "id": 350685871,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1681800328
    },
    {
        "content": "<p>Re the topic of ITP+AZ, my prediction is that inspiration from alphazero will not be very helpful in designing mathematical AI. Reinforcement learning essentially consists of two steps:</p>\n<ol>\n<li>Try new stuff </li>\n<li>Keep doing the stuff that led to high reward. <br>\nThe problem is that while we have lots of wonderful and sophisticated ways of doing (2), we don't have any ideas for doing (1) except random guessing. So alphazero-style algorithms (more precisely, algorithms based on Monte Carlo Tree Search), work well in domains like Go where you can find the best move by guessing, but don't extend well to problems with large and combinatorial action spaces like next-tactic prediction. </li>\n</ol>\n<p>When we build an automatic mathematician, self-improvement will likely play an important part, but I expect it look more like a <a href=\"https://github.com/Significant-Gravitas/Auto-GPT\">autogpt</a>, a <a href=\"https://arxiv.org/abs/2207.10342\">language model cascade</a>, or a <a href=\"https://arxiv.org/abs/2006.08381\">wake-sleep algorithm</a> than like alphazero.</p>",
        "id": 350874980,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1681848164
    },
    {
        "content": "<p>Clearly you should not use a  random policy for exploration, but that is also not what RL methods or AlphaZero suggest (in AlphaZero and Online RL algorithms, you'd explore based on the current policy, possibly with some exploration bonus or entropy regularization). In the absence of finetuning data, RLHF is what makes predictive language models useful. That said, I fully agree that getting LLMs into a loop and abstraction finding a la DreamCoder are very promising ideas!</p>",
        "id": 350881102,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681850440
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210057\">Fabian Glöckle</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LLM.2BITP.28.2BAZ.29.3F/near/350881102\">said</a>:</p>\n<blockquote>\n<p>Clearly you should not use a  random policy for exploration, but that is also not what RL methods or AlphaZero suggest (in AlphaZero and Online RL algorithms, you'd explore based on the current policy, possibly with some exploration bonus or entropy regularization). In the absence of finetuning data, RLHF is what makes predictive language models useful. That said, I fully agree that getting LLMs into a loop and abstraction finding a la DreamCoder are very promising ideas!</p>\n</blockquote>\n<p>This is a point on which I was unclear: when I said \"do something random\" I meant randomly sampling from the current policy. </p>\n<p>RLHF has been very useful for alignment, but not tremendously useful for acquiring new capabilities. We can RLHF a model into not saying racist things or being better at following instructions, but (at least going off of publicly available information), we can't RLHF a model into being much better at problem solving. </p>\n<p>The reason RLHF works well for alignment is that the desired behavior is already assigned quite high probability by the base model. If there's an ingenious mathematical trick the base model thinks is low probability, RLHF won't find it except by luck, which becomes exponentially less probable as your action space becomes more complicated.</p>",
        "id": 350918793,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1681867669
    },
    {
        "content": "<p>My assumption would be that training on all math textbooks would give you enough \"base capabilities\" and the question is how to turn these into useful behavior instead of text prediction. And there, \"aligning\" models with the rules of sound mathematical reasoning would look like \"acquiring a new skill\" while in reality it just means slightly favoring  something that was already there, namely the \"soundness feature\" over other features in the model's activations.</p>",
        "id": 350980602,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681894223
    },
    {
        "content": "<p>But my answer to the question of creativity is also not that you should sample ideas from the model until the singular ingeniuous insight is sampled from the haystack, but rather that as described above, externally brilliant behavior might be the result of a long iteration of boring search space reductions and small-scale sampling.</p>",
        "id": 350981574,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1681894441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210057\">Fabian Glöckle</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LLM.2BITP.28.2BAZ.29.3F/near/350981574\">said</a>:</p>\n<blockquote>\n<p>But my answer to the question of creativity is also not that you should sample ideas from the model until the singular ingeniuous insight is sampled from the haystack, but rather that as described above, externally brilliant behavior might be the result of a long iteration of boring search space reductions and small-scale sampling.</p>\n</blockquote>\n<p>It sounds like we agree then. My point about AZ being the wrong tree to bark down was the narrow one that \"directly optimizing for reward by sampling from the policy saturates quickly in complex action spaces\". I am open to any exploration method more sophisticated than sampling from P(proof | conjecture). </p>\n<p>I agree that RLHF can be used to favor soundness.</p>",
        "id": 351109288,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1681924393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284997\">Zhangir Azerbayev</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LLM.2BITP.28.2BAZ.29.3F/near/350685871\">said</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">In</span> <span class=\"n\">practice</span><span class=\"o\">,</span> <span class=\"n\">it's</span> <span class=\"n\">an</span> <span class=\"kn\">open</span> <span class=\"n\">question</span> <span class=\"n\">whether</span> <span class=\"n\">we</span> <span class=\"k\">have</span> <span class=\"n\">enough</span> <span class=\"n\">mathematical</span> <span class=\"n\">text</span> <span class=\"n\">to</span> <span class=\"n\">train</span> <span class=\"n\">LMs</span> <span class=\"n\">that</span> <span class=\"n\">are</span> <span class=\"n\">good</span> <span class=\"n\">at</span> <span class=\"n\">math</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"n\">lot</span> <span class=\"n\">depends</span> <span class=\"n\">on</span> <span class=\"n\">how</span> <span class=\"n\">helpful</span> <span class=\"n\">non</span><span class=\"bp\">-</span><span class=\"n\">math</span> <span class=\"n\">data</span> <span class=\"n\">is</span> <span class=\"n\">for</span> <span class=\"n\">improving</span> <span class=\"n\">at</span> <span class=\"n\">math.</span>\n</code></pre></div>\n<p>Christian Szegedy has the radical idea of scanning whole textbooks so that the model can read the text and the diagrams. Some convolutional layer at the beginning will recognize the text and the diagrams and learn to read the formulas and interpret the diagrams and diagrams. No more processing and formatting text - just pixels!</p>",
        "id": 352132058,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1682292044
    },
    {
        "content": "<p>He stresses the reduction in engineering effort this would save</p>",
        "id": 352132104,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1682292075
    },
    {
        "content": "<p>This basically sounds crazy to me and absurdly inefficient but I guess if you're doing research on Creative mode it makes sense</p>",
        "id": 352132489,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1682292400
    },
    {
        "content": "<p>Less structure in the representation of data can be beneficial, for example <a href=\"https://openreview.net/forum?id=FkSp8VW8RjH\">in handling non-English scripts</a>.</p>",
        "id": 352132777,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1682292677
    },
    {
        "content": "<p>I don’t think it’s that crazy (from my naive mathematician’s understanding). Especially when it comes to diagrams. At least for humans it’s MUCH easier to understand diagrams (like commutative diagrams, for example) as opposed to, say, the latex source that produces them, or some other text-only encoding.</p>",
        "id": 352132788,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1682292696
    },
    {
        "content": "<p>GPT4 is already multimodal (graphical input), and although there's no ChatGPT or API access to this (?) I wouldn't be at all surprised if people are already trying this.</p>",
        "id": 352135028,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682294895
    },
    {
        "content": "<p>It seemed crazy to me years ago when Szegedy and the N2Formal team <a href=\"#narrow/stream/113488-general/topic/AI.20and.20theorem.20proving/near/177462760\">first suggested it almost 4 years ago</a>, but given what has happened since then, including the vast power of general and multimodal models, I wouldn't be shocked if I saw a model which had a GPT-3 level of ability from raw images of text (and GPT-4-level if appropriately instruction/RLHF tuned).  Indeed, <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> shared with me <a href=\"https://arxiv.org/abs/2104.08211\">this paper</a> and <a href=\"https://openreview.net/forum?id=FkSp8VW8RjH\">this paper</a> which purport to be able to process text from images.  I honestly don't think we are going to hit a local maximum with the learning-from-raw-data-on-the-internet paradigm until at least we have multimodal models which learn from e.g. YouTube videos and hence can processes speech, (closed caption) text, and images/video (including e.g. chalkboard written text/drawings from lecture videos and live coding tutorial videos).</p>",
        "id": 352145980,
        "sender_full_name": "Jason Rute",
        "timestamp": 1682302158
    },
    {
        "content": "<p>I think we have at least a good two years before we run out of internet data. I think it's eventually going to hit a limit, so maybe not incredibly useful for research level mathematics, where the data is scarce and dense. But to put any limit on the scaling approach at this point in history would be a big mistake.</p>",
        "id": 352314697,
        "sender_full_name": "Albert Jiang",
        "timestamp": 1682350654
    },
    {
        "content": "<p>My (totally unfounded) guess is that GPT4 already uses youtube.</p>",
        "id": 352314874,
        "sender_full_name": "Albert Jiang",
        "timestamp": 1682350685
    },
    {
        "content": "<p>I think an issue with internet data is that there is lots of high school / first year undergrad math and then research math, but (compared to print) very little expository / textbook-style intermediary content.</p>",
        "id": 352316537,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1682351044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"460251\">Patrick Nicodemus</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LLM.2BITP.28.2BAZ.29.3F/near/352132058\">said</a>:</p>\n<blockquote>\n<p>Christian Szegedy has the radical idea of scanning whole textbooks so that the model can read the text and the diagrams. Some convolutional layer at the beginning will recognize the text and the diagrams and learn to read the formulas and interpret the diagrams and diagrams. No more processing and formatting text - just pixels!</p>\n</blockquote>\n<p>All of arXiv + every math textbook ever published is still quite small by modern language modeling standards. I wouldn't be surprised if gpt-4 is already trained on a bunch of OCRed technical books. </p>\n<p>To me it sounds like training on raw pixels would be much more difficult than training a small transformer that maps pdfs to LaTeX. There are already <a href=\"https://github.com/lukas-blecher/LaTeX-OCR\">open source models that do this</a>. Although having an image encoder for diagrams is very useful.</p>",
        "id": 352661571,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1682468308
    },
    {
        "content": "<p>Given that GPT4 is multimodal and can read images, I would be rather surprised if they are not <em>already using it</em> to turn images of text into text for subsequent training data, at least at experimental scale.</p>",
        "id": 352663713,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682469454
    },
    {
        "content": "<p>I wouldn't expect GPT4 to be more efficient than existing OCR tools for turning images of text into text. It could be used to create embeddings of images though, which could capture text layout, diagrams and other information that would be discarded by OCR, and support cross-modality semantic search.</p>",
        "id": 352680857,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1682480793
    },
    {
        "content": "<p>Recently this multimodal model was published: <a href=\"https://huggingface.co/Vision-CAIR/MiniGPT-4\">https://huggingface.co/Vision-CAIR/MiniGPT-4</a> but I guess we shouldn't expect it to solve the ecole polytechnique problem as GPT4 did ...<br>\n(Addendum: <a href=\"https://llava-vl.github.io/\">https://llava-vl.github.io/</a> is another recent model, achieves SoTA on ScienceQA)<br>\n<a href=\"/user_uploads/3121/IEJhsqy0_BfG9MGoFdlOAvNV/Screenshot_20230425-234744.png\">Screenshot_20230425-234744.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/IEJhsqy0_BfG9MGoFdlOAvNV/Screenshot_20230425-234744.png\" title=\"Screenshot_20230425-234744.png\"><img src=\"/user_uploads/3121/IEJhsqy0_BfG9MGoFdlOAvNV/Screenshot_20230425-234744.png\"></a></div>",
        "id": 352681207,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1682481079
    },
    {
        "content": "<p>I'm surprised you say it wouldn't be more efficient! I would expect that with an sufficiently high accuracy required, there's nothing even to compare it to for efficiency. That is, GPT's background knowledge will make it a better OCR tool than anything else available (because with some careful prompting one could probably have it correct ambiguities in the visual data using contextual knowledge, without making too much stuff up).</p>",
        "id": 352681655,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1682481383
    },
    {
        "content": "<p>If the image quality is low and a lot of guessing is required then it may be necessary to use a language model, otherwise it just cost too much to run ... google translate app on your phone does decent OCR but LLMs hardly run on it.</p>",
        "id": 352682450,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1682481959
    },
    {
        "content": "<p>3 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"219941\" href=\"/#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Nougat.2C.20academic.20OCR.20model.20from.20Meta.20AI\">#Machine Learning for Theorem Proving &gt; Nougat, academic OCR model from Meta AI</a> by <span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span>.</p>",
        "id": 387776593,
        "sender_full_name": "Notification Bot",
        "timestamp": 1693267518
    }
]