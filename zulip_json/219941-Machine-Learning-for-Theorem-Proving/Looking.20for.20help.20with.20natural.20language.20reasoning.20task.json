[
    {
        "content": "<p>I'm looking for someone skilled with Lean to join me in a project involving natural language reasoning tasks. The idea is first use GPT-4 to translate natural language reasoning tasks like ProofWriter to Lean code and subsequently prompt GPT-4 for theorem proving, or possibly train a model for this task (an example can be found <a href=\"https://github.com/Some-random/lean-example/blob/main/src/example2.lean\">here</a>). Throughout the task, LeanDoJo is used to enforce restrictions on inference output. I'm hoping that we can utilize theorem-proving models and bring the rigidity of math into everyday reasoning this way.</p>\n<p>Given the complex nature of the project, it is crucial to engage someone well-versed in Lean. I particularly need help in two areas:<br>\n1  Finding more links between theorem proving and natural language reasoning<br>\n2  Figuring out the best way to train a model that can solve these reasoning tasks</p>\n<p>On a reciprocal note, I am keen on offering my experience in the field of deep learning. While my <a href=\"https://scholar.google.com/citations?hl=en&amp;user=sLHuGtUAAAAJ\">background</a> mainly focuses on speech, I am currently transitioning towards large language models.  By sharing our knowledge and skills, I think we can both learn more and potentially come up with new ideas.</p>",
        "id": 378187977,
        "sender_full_name": "Dongwei Jiang",
        "timestamp": 1690213007
    },
    {
        "content": "<p>Just a general thought: If you want to target datasets similar to ProofWriter, logic programming (Prolog, datalog, etc.) might be much more effective than Lean.</p>",
        "id": 378264051,
        "sender_full_name": "Kaiyu Yang",
        "timestamp": 1690231180
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"584504\">Kaiyu Yang</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Looking.20for.20help.20with.20natural.20language.20reasoning.20task/near/378264051\">said</a>:</p>\n<blockquote>\n<p>Just a general thought: If you want to target datasets similar to ProofWriter, logic programming (Prolog, datalog, etc.) might be much more effective than Lean.</p>\n</blockquote>\n<p>I appreciate your response! Indeed, recent projects such as <a href=\"https://arxiv.org/abs/2305.12295\">Logic-LM</a> have employed Prolog to formalize datasets akin to ProofWriter and FOL grammar to formalize datasets similar to FOLIO. My inclination towards Lean, which could be subject to correction, is based on:</p>\n<p>1  Its potent representational capability, enabling the encapsulation of most symbolic reasoning problems for a unified solution. Additionally, a vast amount of existing Lean code online has been incorporated into GPT-4's training data, which could enhance the accuracy of the formalization.<br>\n2  Lean has been frequently used in the field of Automated Theorem Proving (ATP). It has been applied to a wide range of theorem proving problems, generating a substantial amount of theorem proving/reasoning data. In addition, there are pre-existing studies and readily available pre-trained models for Lean that I intend to leverage.</p>",
        "id": 378300187,
        "sender_full_name": "Dongwei Jiang",
        "timestamp": 1690243985
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 378312611,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1690248499
    },
    {
        "content": "<blockquote>\n<p>Lean has been frequently used in the field of automated theorem proving</p>\n</blockquote>\n<p>Citation needed?</p>",
        "id": 378349223,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690265680
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Looking.20for.20help.20with.20natural.20language.20reasoning.20task/near/378349223\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Lean has been frequently used in the field of automated theorem proving</p>\n</blockquote>\n<p>Citation needed?</p>\n</blockquote>\n<p>Thank you for your inquiry. Based on my readings, there have been several initiatives including <a href=\"https://cdn.openai.com/papers/Formal_Mathematics_Statement_Curriculum_Learning__ICML_2022.pdf\">Curriculum Learning</a>, <a href=\"https://arxiv.org/abs/2102.06203\">PACT</a>, <a href=\"https://arxiv.org/abs/2205.11491\">HyperTreeProof</a>, <a href=\"https://arxiv.org/abs/2306.15626\">LeanDoJo</a> and others that have used Lean as their language for ATP.</p>\n<p>Moreover, the generous amount of Lean data that is readily accessible and the highly practical tool LeanDoJo, which enables smooth interaction with Lean, offer considerable assistance for the research question I am exploring</p>",
        "id": 378824211,
        "sender_full_name": "Dongwei Jiang",
        "timestamp": 1690381690
    },
    {
        "content": "<p>Thanks for taking the time to respond! I am not really up to date in this area.</p>",
        "id": 378876622,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690390250
    },
    {
        "content": "<p>I think what <span class=\"user-mention\" data-user-id=\"616750\">@Dongwei Jiang</span> means is that Lean has been used (in addition to Metamath, Isabelle, and Coq) for machine learning projects that try to get AI to solve theorems automatically.  Think the minif2f benchmark.  I don’t think there is any practical applications yet of ATP using lean,  and certainly not any of the above mentioned papers, which aren’t available to end users.  I think most practical ATP is still in the realm of FOL and SAT/SMT solvers.</p>",
        "id": 378912477,
        "sender_full_name": "Jason Rute",
        "timestamp": 1690397342
    },
    {
        "content": "<p>(I should back track a bit.  I think the tactics and automation built and used by the Lean community, like linarith, could be considered practical ATP, although practical for the purpose of writing Lean proofs.)</p>",
        "id": 378913177,
        "sender_full_name": "Jason Rute",
        "timestamp": 1690397479
    },
    {
        "content": "<p>I am new to Lean and I often find it hard to find what premises to use and whether they would lead to the proof. If a language model could help me find useful premises and explain their meaning to the proof goal, that would be very helpful!</p>",
        "id": 381636056,
        "sender_full_name": "Min-Hsien Weng",
        "timestamp": 1691108923
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"638383\">Min-Hsien Weng</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Looking.20for.20help.20with.20natural.20language.20reasoning.20task/near/381636056\">said</a>:</p>\n<blockquote>\n<p>I am new to Lean and I often find it hard to find what premises to use and whether they would lead to the proof. If a language model could help me find useful premises and explain their meaning to the proof goal, that would be very helpful!</p>\n</blockquote>\n<p>I'm also new to Lean and my personal recommendation is to try out <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/\">the number game</a>. My grasp of the tactics and premises has greatly improved since I started playing it. The game is expertly designed with progressively challenging levels, clear explanations, and a touch of witty humor that brought a smile to my face.</p>",
        "id": 382259930,
        "sender_full_name": "Dongwei Jiang",
        "timestamp": 1691288818
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"616750\">Dongwei Jiang</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Looking.20for.20help.20with.20natural.20language.20reasoning.20task/near/382259930\">said</a>:</p>\n<blockquote>\n<p>I'm also new to Lean and my personal recommendation is to try out <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/\">the number game</a>. </p>\n</blockquote>\n<p>I did enjoy the game and had a good time and learned a lot.  Highly recommend it  <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/\">the number game</a></p>",
        "id": 382450645,
        "sender_full_name": "Min-Hsien Weng",
        "timestamp": 1691362702
    }
]