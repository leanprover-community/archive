[
    {
        "content": "<p>There is a primitive REPL for Lean 4 available at <a href=\"https://github.com/leanprover-community/repl\">https://github.com/leanprover-community/repl</a>.</p>\n<p>From the README:</p>\n<h1>A read-eval-print-loop for Lean 4</h1>\n<p>Run using <code>./run</code>.<br>\nCommunicates via JSON on stdin and stdout.<br>\nCommands should be separated by blank lines.<br>\nCommands may be of the form</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"cmd\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"import Mathlib.Data.List.Basic\\ndef f := 2\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>or</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"cmd\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"example : f = 2 := rfl\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"env\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>The <code>env</code> field, if present,<br>\nmust contain a number received in the <code>env</code> field of a previous response,<br>\nand causes the command to be run in the existing environment.</p>\n<p>If there is no <code>env</code> field, a new environment is created.</p>\n<p>You can only use <code>import</code> commands when you do not specify the <code>env</code> field.</p>\n<p>You can backtrack simply by using earlier values for <code>env</code>.</p>\n<p>The results are of the form</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"nt\">\"sorries\"</span><span class=\"p\">:</span>\n<span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"nt\">\"pos\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"line\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"column\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"p\">},</span>\n<span class=\"w\">   </span><span class=\"nt\">\"endPos\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"line\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"column\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"p\">},</span>\n<span class=\"w\">   </span><span class=\"nt\">\"goal\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"‚ä¢ Nat\"</span><span class=\"p\">}],</span>\n<span class=\"w\"> </span><span class=\"nt\">\"messages\"</span><span class=\"p\">:</span>\n<span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"nt\">\"severity\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"error\"</span><span class=\"p\">,</span>\n<span class=\"w\">   </span><span class=\"nt\">\"pos\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"line\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"column\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"p\">},</span>\n<span class=\"w\">   </span><span class=\"nt\">\"endPos\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"line\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"column\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"p\">},</span>\n<span class=\"w\">   </span><span class=\"nt\">\"data\"</span><span class=\"p\">:</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type mismatch\\n  rfl\\nhas type\\n  f = f : Prop\\nbut is expected to have type\\n  f = 2 : Prop\"</span><span class=\"p\">}],</span>\n<span class=\"w\"> </span><span class=\"nt\">\"env\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">}</span>\n</code></pre></div>\n<p>showing any messages generated, or sorries with their goal states.</p>\n<p>Information is generated for tactic mode sorries,<br>\nbut currently not for term mode sorries.</p>",
        "id": 346992184,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1680652507
    },
    {
        "content": "<p>PRs (e.g. detecting term mode sorries as well, python bindings, etc) very welcome.</p>",
        "id": 346992237,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1680652549
    },
    {
        "content": "<p>I created a PR that allows you to interface with the repl via a python package <a href=\"https://github.com/leanprover-community/repl/pull/5\">PR #5</a></p>",
        "id": 347235630,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1680722100
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> and <span class=\"user-mention\" data-user-id=\"284997\">@Zhangir Azerbayev</span>, thanks for making this available!</p>\n<p>Could you help me get the mathlib4 dependency running? I got a core dump with the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">git</span><span class=\"bp\">@</span><span class=\"n\">github.com</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">repl.git</span>\n<span class=\"n\">Cloning</span> <span class=\"n\">into</span> <span class=\"bp\">'</span><span class=\"n\">repl'...</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Enumerating</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">42</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Counting</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">42</span><span class=\"bp\">/</span><span class=\"mi\">42</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Compressing</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">25</span><span class=\"bp\">/</span><span class=\"mi\">25</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Total</span> <span class=\"mi\">42</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">16</span><span class=\"o\">),</span> <span class=\"n\">reused</span> <span class=\"mi\">38</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">12</span><span class=\"o\">),</span> <span class=\"n\">pack</span><span class=\"bp\">-</span><span class=\"n\">reused</span> <span class=\"mi\">0</span>\n<span class=\"n\">Receiving</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">42</span><span class=\"bp\">/</span><span class=\"mi\">42</span><span class=\"o\">),</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">82</span> <span class=\"n\">KiB</span> <span class=\"bp\">|</span> <span class=\"mi\">902</span><span class=\"bp\">.</span><span class=\"mi\">00</span> <span class=\"n\">KiB</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">Resolving</span> <span class=\"n\">deltas</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">16</span><span class=\"bp\">/</span><span class=\"mi\">16</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"bp\">$</span> <span class=\"n\">cd</span> <span class=\"n\">repl</span><span class=\"bp\">/</span>\n<span class=\"bp\">$</span> <span class=\"n\">emacs</span> <span class=\"n\">lakefile.lean</span>\n<span class=\"bp\">$</span> <span class=\"n\">cat</span> <span class=\"n\">lakefile.lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"n\">REPL</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add package configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"n\">REPL</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- add library configuration options here</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n\n<span class=\"c1\">-- Unfortunately the compiled version doesn't work: `unknown package 'Init'`</span>\n<span class=\"kd\">@[default_target]</span>\n<span class=\"n\">lean_exe</span> <span class=\"n\">repl</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">REPL.Main</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4.git</span> <span class=\"n\">to</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">gebner</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">JLimperg</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Linking</span> <span class=\"n\">cache</span>\n<span class=\"n\">No</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">download</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">2289</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"n\">Building</span> <span class=\"n\">REPL.Frontend</span>\n<span class=\"n\">Building</span> <span class=\"n\">REPL.InfoTree</span>\n<span class=\"n\">Building</span> <span class=\"n\">REPL.JSON</span>\n<span class=\"n\">Compiling</span> <span class=\"n\">REPL.Frontend</span>\n<span class=\"n\">Compiling</span> <span class=\"n\">REPL.JSON</span>\n<span class=\"n\">Building</span> <span class=\"n\">REPL.Main</span>\n<span class=\"n\">Compiling</span> <span class=\"n\">REPL.InfoTree</span>\n<span class=\"n\">Compiling</span> <span class=\"n\">REPL.Main</span>\n<span class=\"n\">Linking</span> <span class=\"n\">repl</span>\n<span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">run</span>\n<span class=\"o\">{</span> <span class=\"s2\">\"cmd\"</span> <span class=\"o\">:</span> <span class=\"s2\">\"import Mathlib.Data.List.Basic</span><span class=\"se\">\\n</span><span class=\"s2\">def f := 2\"</span> <span class=\"o\">}</span>\n\n<span class=\"bp\">$</span> <span class=\"n\">du</span> <span class=\"bp\">-</span><span class=\"n\">h</span> <span class=\"n\">core</span>\n<span class=\"mi\">621</span><span class=\"n\">M</span>    <span class=\"n\">core</span>\n<span class=\"bp\">$</span> <span class=\"n\">elan</span> <span class=\"k\">show</span> <span class=\"bp\">|</span> <span class=\"n\">tail</span> <span class=\"bp\">-</span><span class=\"n\">n</span> <span class=\"mi\">6</span>\n<span class=\"n\">active</span> <span class=\"n\">toolchain</span>\n<span class=\"c1\">----------------</span>\n\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">03</span><span class=\"bp\">-</span><span class=\"mi\">17</span> <span class=\"o\">(</span><span class=\"n\">overridden</span> <span class=\"kd\">by</span> <span class=\"bp\">'/</span><span class=\"kn\">private</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">fgloeckle</span><span class=\"bp\">/</span><span class=\"n\">sandbox</span><span class=\"bp\">/</span><span class=\"n\">repl</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain'</span><span class=\"o\">)</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">03</span><span class=\"bp\">-</span><span class=\"mi\">17</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"mi\">8650804</span><span class=\"n\">b025c</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Thanks in advance!!</p>\n<p>(I am not really familiar with the Lean4/Lake build system if the problems stems from that..)</p>",
        "id": 355527825,
        "sender_full_name": "Fabian Gl√∂ckle",
        "timestamp": 1683126315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210057\">@Fabian Gl√∂ckle</span> Make sure you're using the same Lean toolchain as mathlib4. To do this, you can copy what's in <code>mathlib4/lean-toolchain</code> into your local <code>lean-toolchain</code> file at the root of your project. You're using 2023-03-17, but the newest mathlib is using 2023-04-20.</p>",
        "id": 355535152,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1683127742
    },
    {
        "content": "<p>oh great thank you <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>, problem solved!</p>",
        "id": 355537104,
        "sender_full_name": "Fabian Gl√∂ckle",
        "timestamp": 1683128131
    }
]