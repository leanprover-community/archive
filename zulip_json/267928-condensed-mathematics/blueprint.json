[
    {
        "content": "<p>What's the preferred workflow for editing the blueprint latex files locally? Seems that I must use xelatex to compile a pdf file?</p>",
        "id": 242253190,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623351077
    },
    {
        "content": "<p>There is no mystery here, invoke is simply doing <a href=\"https://github.com/leanprover-community/liquid/blob/master/tasks.py#L10-L18\">this</a></p>",
        "id": 242255048,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623351929
    },
    {
        "content": "<p>If you want to configure your machine similar to how the CI does it, you can look at <a href=\"https://github.com/leanprover-community/liquid/blob/master/.github/workflows/gh-pages.yml\">https://github.com/leanprover-community/liquid/blob/master/.github/workflows/gh-pages.yml</a></p>",
        "id": 242258378,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1623353473
    },
    {
        "content": "<p>Thanks. My main issue is that I have emacs set up to run <code>latexmk</code> and I don't know how to make this compatible with <code>xelatex</code></p>",
        "id": 242259046,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623353775
    },
    {
        "content": "<p>but it looks like editing my <code>.latexmkrc</code> file per <br>\n<a href=\"https://stackoverflow.com/questions/3124273/compile-xelatex-tex-file-with-latexmk\">https://stackoverflow.com/questions/3124273/compile-xelatex-tex-file-with-latexmk</a><br>\nshould do the trick</p>",
        "id": 242259462,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623354002
    },
    {
        "content": "<p><code>$pdf_mode = 5;</code> in <code>.latexmkrc</code> should do the trick</p>",
        "id": 242259899,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1623354236
    },
    {
        "content": "<p>I am trying to build the blueprint for this PR: <a href=\"https://github.com/leanprover-community/liquid/pull/8\">https://github.com/leanprover-community/liquid/pull/8</a><br>\nBut I get a segfault when trying to list the decls.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>lean --run src/list_decls.lean\nSegmentation fault <span class=\"o\">(</span>core dumped<span class=\"o\">)</span>\n</code></pre></div>\n<p>cc <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 292717229,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660122104
    },
    {
        "content": "<p>where is the <code>list_decls.lean</code> file? There are some environment listing functions that cause a stack overflow because of the creation of a <code>list declaration</code>, either directly or internally</p>",
        "id": 292722549,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660124472
    },
    {
        "content": "<p>It is generated by the blueprint software</p>",
        "id": 292724379,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660125328
    },
    {
        "content": "<p>I pushed a copy to the <code>list-decls</code> branch</p>",
        "id": 292724575,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660125417
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/liquid/tree/list-decls\">https://github.com/leanprover-community/liquid/tree/list-decls</a> ?</p>",
        "id": 292724671,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660125467
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean-liquid/tree/list-decls\">https://github.com/leanprover-community/lean-liquid/tree/list-decls</a></p>",
        "id": 292739066,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1660132064
    },
    {
        "content": "<p>Does this require stepping through Lean in gdb? I think Reid once showed me how to do that, but I forgot all about it. That was &gt; 2 yrs ago or so.</p>",
        "id": 292759393,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660139732
    },
    {
        "content": "<p>Looks like very deep but not infinite recursion, because it works if I do <code>ulimit -s unlimited</code> before running Lean. With a small stack (and therefore probably corrupted top frames), the backtrace is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"mi\">0</span>  <span class=\"mi\">0x0000000000f06caa</span> <span class=\"k\">in</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__uninitialized_copy</span><span class=\"bp\">&lt;</span><span class=\"n\">false</span><span class=\"bp\">&gt;</span><span class=\"o\">::</span><span class=\"n\">__uninit_copy</span><span class=\"bp\">&lt;</span><span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span> <span class=\"n\">const</span><span class=\"bp\">*</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span><span class=\"bp\">*&gt;</span> <span class=\"o\">(</span><span class=\"n\">__first</span><span class=\"bp\">=&lt;</span><span class=\"n\">error</span> <span class=\"n\">reading</span> <span class=\"kd\">variable</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">access</span> <span class=\"n\">memory</span> <span class=\"n\">at</span> <span class=\"n\">address</span> <span class=\"mi\">0x7fffff7fefe8</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">__last</span><span class=\"bp\">=&lt;</span><span class=\"n\">error</span> <span class=\"n\">reading</span> <span class=\"kd\">variable</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">access</span> <span class=\"n\">memory</span> <span class=\"n\">at</span> <span class=\"n\">address</span> <span class=\"mi\">0x7fffff7fefe0</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span>\n    <span class=\"n\">__result</span><span class=\"bp\">=&lt;</span><span class=\"n\">error</span> <span class=\"n\">reading</span> <span class=\"kd\">variable</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">access</span> <span class=\"n\">memory</span> <span class=\"n\">at</span> <span class=\"n\">address</span> <span class=\"mi\">0x7fffff7fefd8</span><span class=\"bp\">&gt;</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">dwnrcww53x9vay3w16pwbyy3g666736x</span><span class=\"bp\">-</span><span class=\"n\">gcc</span><span class=\"bp\">-</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"kn\">include</span><span class=\"bp\">/</span><span class=\"n\">c</span><span class=\"bp\">++/</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"n\">bits</span><span class=\"bp\">/</span><span class=\"n\">stl_uninitialized.h</span><span class=\"o\">:</span><span class=\"mi\">85</span>\n<span class=\"bp\">#</span><span class=\"mi\">1</span>  <span class=\"mi\">0x0000000000f01d2f</span> <span class=\"k\">in</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">uninitialized_copy</span><span class=\"bp\">&lt;</span><span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span> <span class=\"n\">const</span><span class=\"bp\">*</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span><span class=\"bp\">*&gt;</span> <span class=\"o\">(</span><span class=\"n\">__first</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffff7ff160</span><span class=\"o\">,</span> <span class=\"n\">__last</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffff7ff170</span><span class=\"o\">,</span> <span class=\"n\">__result</span><span class=\"bp\">=</span><span class=\"mi\">0xb0da9040</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">dwnrcww53x9vay3w16pwbyy3g666736x</span><span class=\"bp\">-</span><span class=\"n\">gcc</span><span class=\"bp\">-</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"kn\">include</span><span class=\"bp\">/</span><span class=\"n\">c</span><span class=\"bp\">++/</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"n\">bits</span><span class=\"bp\">/</span><span class=\"n\">stl_uninitialized.h</span><span class=\"o\">:</span><span class=\"mi\">151</span>\n<span class=\"bp\">#</span><span class=\"mi\">2</span>  <span class=\"mi\">0x0000000000ed5278</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_composite</span><span class=\"o\">::</span><span class=\"n\">vm_composite</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0xb0da9030</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">=</span><span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj_kind</span><span class=\"o\">::</span><span class=\"n\">Constructor</span><span class=\"o\">,</span> <span class=\"n\">idx</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">sz</span><span class=\"bp\">=</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">data</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffff7ff160</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">65</span>\n<span class=\"bp\">#</span><span class=\"mi\">3</span>  <span class=\"mi\">0x0000000000ed5339</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">mk_vm_composite</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">=</span><span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj_kind</span><span class=\"o\">::</span><span class=\"n\">Constructor</span><span class=\"o\">,</span> <span class=\"n\">idx</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">sz</span><span class=\"bp\">=</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">data</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffff7ff160</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">70</span>\n<span class=\"bp\">#</span><span class=\"mi\">4</span>  <span class=\"mi\">0x0000000000ed54a4</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">mk_vm_constructor</span> <span class=\"o\">(</span><span class=\"n\">cidx</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">sz</span><span class=\"bp\">=</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">data</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffff7ff160</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">87</span>\n<span class=\"bp\">#</span><span class=\"mi\">5</span>  <span class=\"mi\">0x0000000000f2dba1</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">string_to_list_core</span> <span class=\"o\">(</span><span class=\"n\">str</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">reverse</span><span class=\"bp\">=</span><span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm_string.cpp</span><span class=\"o\">:</span><span class=\"mi\">112</span>\n<span class=\"bp\">#</span><span class=\"mi\">6</span>  <span class=\"mi\">0x0000000000f2dd1d</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">string_to_list</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm_string.cpp</span><span class=\"o\">:</span><span class=\"mi\">118</span>\n<span class=\"bp\">#</span><span class=\"mi\">7</span>  <span class=\"mi\">0x0000000000edea5b</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke_fn</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">fn</span><span class=\"bp\">=</span><span class=\"mi\">0xf2dcda</span> <span class=\"bp\">&lt;</span><span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">string_to_list</span><span class=\"o\">(</span><span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">)</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">arity</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">1786</span>\n<span class=\"bp\">#</span><span class=\"mi\">8</span>  <span class=\"mi\">0x0000000000ef4047</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke_cfun</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">d</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">3032</span>\n<span class=\"bp\">#</span><span class=\"mi\">9</span>  <span class=\"mi\">0x0000000000ef6795</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">run</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">3566</span>\n<span class=\"bp\">#</span><span class=\"mi\">10</span> <span class=\"mi\">0x0000000000edffed</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke_closure</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">fn</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">nargs</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">1870</span>\n<span class=\"bp\">#</span><span class=\"mi\">11</span> <span class=\"mi\">0x0000000000ee360d</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">fn</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a1</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">1945</span>\n<span class=\"bp\">#</span><span class=\"mi\">12</span> <span class=\"mi\">0x0000000000ee5dda</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">fn</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a1</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a2</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">1987</span><span class=\"bp\">#</span><span class=\"mi\">22532</span> <span class=\"mi\">0x0000000000eee997</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">invoke</span> <span class=\"o\">(</span><span class=\"n\">fn</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a1</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a2</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">2439</span>\n<span class=\"bp\">...</span><span class=\"o\">[</span><span class=\"n\">omitted</span> <span class=\"n\">frames</span> <span class=\"n\">are</span> <span class=\"n\">just</span> <span class=\"n\">lots</span> <span class=\"n\">of</span> <span class=\"n\">copies</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">five</span> <span class=\"n\">frames</span> <span class=\"n\">below</span><span class=\"o\">]</span><span class=\"bp\">...</span>\n<span class=\"bp\">#</span><span class=\"mi\">22533</span> <span class=\"mi\">0x0000000000f38f53</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">io_bind</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm_io.cpp</span><span class=\"o\">:</span><span class=\"mi\">745</span>\n<span class=\"bp\">#</span><span class=\"mi\">22534</span> <span class=\"mi\">0x0000000000eef84b</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">native_invoke</span> <span class=\"o\">(</span><span class=\"n\">fn</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a1</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">2569</span>\n<span class=\"bp\">#</span><span class=\"mi\">22535</span> <span class=\"mi\">0x0000000000eee845</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">invoke</span> <span class=\"o\">(</span><span class=\"n\">fn</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a1</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">2427</span>\n<span class=\"bp\">#</span><span class=\"mi\">22536</span> <span class=\"mi\">0x0000000000ee5dfa</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">fn</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a1</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a2</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">1987</span>\n<span class=\"bp\">#</span><span class=\"mi\">22537</span> <span class=\"mi\">0x0000000000eee997</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">invoke</span> <span class=\"o\">(</span><span class=\"n\">fn</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a1</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">a2</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">2439</span>\n<span class=\"bp\">#</span><span class=\"mi\">22538</span> <span class=\"mi\">0x0000000000f38f53</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">io_bind</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">=...</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">=...</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm_io.cpp</span><span class=\"o\">:</span><span class=\"mi\">745</span>\n<span class=\"bp\">#</span><span class=\"mi\">22539</span> <span class=\"mi\">0x0000000000edefaf</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke_fn</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">fn</span><span class=\"bp\">=</span><span class=\"mi\">0xf38c99</span> <span class=\"bp\">&lt;</span><span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">io_bind</span><span class=\"o\">(</span><span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_obj</span> <span class=\"n\">const</span><span class=\"bp\">&amp;</span><span class=\"o\">)</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span> <span class=\"n\">arity</span><span class=\"bp\">=</span><span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">1810</span>\n<span class=\"bp\">#</span><span class=\"mi\">22540</span> <span class=\"mi\">0x0000000000ef6003</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">run</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">3464</span>\n<span class=\"bp\">#</span><span class=\"mi\">22541</span> <span class=\"mi\">0x0000000000ef71af</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">execute</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">code</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffff92e0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">3617</span>\n<span class=\"bp\">#</span><span class=\"mi\">22542</span> <span class=\"mi\">0x0000000000ef729c</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">n</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">3625</span>\n<span class=\"bp\">#</span><span class=\"mi\">22543</span> <span class=\"mi\">0x0000000000ee031f</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">fn_idx</span><span class=\"bp\">=</span><span class=\"mi\">45326</span><span class=\"o\">,</span> <span class=\"n\">nargs</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">as</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffabc0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">1901</span>\n<span class=\"bp\">#</span><span class=\"mi\">22544</span> <span class=\"mi\">0x0000000000ee0449</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">vm_state</span><span class=\"o\">::</span><span class=\"n\">invoke</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffac40</span><span class=\"o\">,</span> <span class=\"n\">fn</span><span class=\"bp\">='</span><span class=\"n\">main'</span><span class=\"o\">,</span> <span class=\"n\">nargs</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">as</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffabc0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">vm</span><span class=\"bp\">/</span><span class=\"n\">vm.cpp</span><span class=\"o\">:</span><span class=\"mi\">1910</span>\n<span class=\"bp\">#</span><span class=\"mi\">22545</span> <span class=\"mi\">0x0000000000e2bedb</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">eval_helper</span><span class=\"o\">::</span><span class=\"n\">invoke_fn</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffa6c0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">eval_helper.cpp</span><span class=\"o\">:</span><span class=\"mi\">38</span>\n<span class=\"bp\">#</span><span class=\"mi\">22546</span> <span class=\"mi\">0x0000000000e2c000</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">eval_helper</span><span class=\"o\">::</span><span class=\"n\">try_exec_io</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffa6c0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">eval_helper.cpp</span><span class=\"o\">:</span><span class=\"mi\">44</span>\n<span class=\"bp\">#</span><span class=\"mi\">22547</span> <span class=\"mi\">0x0000000000e2c52b</span> <span class=\"k\">in</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">eval_helper</span><span class=\"o\">::</span><span class=\"n\">try_exec</span> <span class=\"o\">(</span><span class=\"n\">this</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffa6c0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">eval_helper.cpp</span><span class=\"o\">:</span><span class=\"mi\">73</span>\n<span class=\"bp\">#</span><span class=\"mi\">22548</span> <span class=\"mi\">0x0000000000c6f9f4</span> <span class=\"k\">in</span> <span class=\"n\">main</span> <span class=\"o\">(</span><span class=\"n\">argc</span><span class=\"bp\">=</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">argv</span><span class=\"bp\">=</span><span class=\"mi\">0x7fffffffaf18</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">collares</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">shell</span><span class=\"bp\">/</span><span class=\"n\">lean.cpp</span><span class=\"o\">:</span><span class=\"mi\">674</span>\n</code></pre></div>",
        "id": 292789089,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1660148979
    },
    {
        "content": "<p>I guess the script uses a bunch of non-tail-recursive functions (list.{filter,split,mmap'}) on a large list (decls)</p>",
        "id": 292793218,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1660150400
    },
    {
        "content": "<p>Does this suggest a solution to the script? Or should we just do that <code>ulimit unlimited</code> thing in CI?</p>",
        "id": 292794539,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660150820
    },
    {
        "content": "<p>To be honest, I don't know. I tried replacing <code>main</code> by</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">io</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"k\">do</span> <span class=\"n\">curr_env</span> <span class=\"bp\">←</span> <span class=\"n\">run_tactic</span> <span class=\"n\">get_env</span><span class=\"o\">,</span>\n   <span class=\"n\">h</span> <span class=\"bp\">←</span> <span class=\"n\">mk_file_handle</span> <span class=\"s2\">\"decls.yaml\"</span> <span class=\"n\">mode.write</span><span class=\"o\">,</span>\n   <span class=\"k\">let</span> <span class=\"n\">decls</span> <span class=\"o\">:=</span> <span class=\"n\">curr_env.fold</span> <span class=\"o\">[]</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">not</span> <span class=\"o\">(</span><span class=\"n\">to_name</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">is_internal</span> <span class=\"k\">then</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">::</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"n\">l</span><span class=\"o\">),</span>\n   <span class=\"n\">decls.mfoldl</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">print_item_crawl</span> <span class=\"n\">curr_env</span> <span class=\"n\">h</span> <span class=\"n\">d</span><span class=\"o\">))</span> <span class=\"o\">(),</span>\n   <span class=\"n\">close</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>which seems to only use tail-recursive functions up to the binds inside mfoldl, but I still get a segfault (which goes away if I comment the next-to-last line). So I don't understand how Lean's runtime executes IO actions enough to fix the code.</p>",
        "id": 292802792,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1660153807
    },
    {
        "content": "<p>I'm a fan of Mauricio's <code>ulimit -s unlimited</code> \"solution\", noting that the problem will come back for real (process will run out of memory; no easy fixes then) at some point if the project gets bigger -- but I'd expect it to need to get quite a bit bigger before this happens and probably it never gets there. This assumes the stack size in linear in the number of definitions; if it's quadratic, this solution may not buy much time at all (but why would a <code>list-decls</code> script be doing something quadratic?) #fix-it-in-lean4</p>",
        "id": 292804615,
        "sender_full_name": "Ben Toner",
        "timestamp": 1660154495
    },
    {
        "content": "<p>The default stack size on Linux is pretty small (8MB), even <code>ulimit -s 1048576</code> to bump it to 1GB would be a gigantic increase</p>",
        "id": 292805532,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1660154802
    },
    {
        "content": "<p>I didn't know that -- well now I'm an even bigger fan of bumping the stack size, since the project would have to become ginormous for the stack to not fit in memory.</p>",
        "id": 292806993,
        "sender_full_name": "Ben Toner",
        "timestamp": 1660155319
    },
    {
        "content": "<p>Is it easy to change the <code>ulimit</code> in CI?</p>",
        "id": 292812301,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660157357
    },
    {
        "content": "<p>(If either of you needs access to the blueprint repo, just ping me.)</p>",
        "id": 292812348,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660157373
    },
    {
        "content": "<p>Let's see if the naive solution works: <a href=\"https://github.com/leanprover-community/liquid/pull/11\">https://github.com/leanprover-community/liquid/pull/11</a></p>",
        "id": 292814044,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1660157918
    },
    {
        "content": "<p>Thanks! Seems to have worked!</p>",
        "id": 292916280,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660219502
    },
    {
        "content": "<p>Can we also run deploys on PR branches somehow?</p>",
        "id": 292916363,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660219536
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/blueprint/near/292916363\">said</a>:</p>\n<blockquote>\n<p>Can we also run deploys on PR branches somehow?</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/liquid/pull/12\">https://github.com/leanprover-community/liquid/pull/12</a></p>\n<p>Let me know if this behaviour works for you.</p>",
        "id": 293008601,
        "sender_full_name": "Ben Toner",
        "timestamp": 1660251776
    },
    {
        "content": "<p>In the <a href=\"https://leanprover-community.github.io/liquid/sect0001.html\">Introduction</a> the main theorem is a <code>theoremx</code>rather than a <code>theorem</code>.  Since <code>theoremx</code>is in particular a <code>newtheorem*</code>, it does not get numbered and the reference at the end of the first paragraph below the Main Theorem sends to 0.0.2 (which is the definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span>). I hesitate to open a PR, because changing <code>theoremx</code>to <code>theorem</code> would probably insert it in the dependency graph.</p>",
        "id": 363464226,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1685874049
    },
    {
        "content": "<p>Sorry, I forgot about this one. I'll fix it tonight.</p>",
        "id": 364052535,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686068351
    },
    {
        "content": "<p>I pushed a fix, it should be live soon</p>",
        "id": 364057012,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686069397
    },
    {
        "content": "<p>CI isn't kicking in... does someone know why?</p>",
        "id": 364260861,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686140476
    },
    {
        "content": "<p>sometimes GitHub shuts down ci after 6mo (I think) of inactivity. Is this the issue?</p>",
        "id": 364261494,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686140630
    },
    {
        "content": "<p>possibly or even probably...<br>\ncan we reactivite it?</p>",
        "id": 364262156,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686140796
    },
    {
        "content": "<p>Can you run the ci manually? It may just work</p>",
        "id": 364262767,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1686140956
    },
    {
        "content": "<p>I just tried something... let's see if it helps</p>",
        "id": 364269161,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686142428
    },
    {
        "content": "<p>doesn't seem to have worked</p>",
        "id": 364438220,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1686197994
    },
    {
        "content": "<p>I want to PR some clean-ups to the <code>lean-liquid</code> repo. But that requires updating the blueprint, to keep it in sync.</p>",
        "id": 375136511,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689316129
    },
    {
        "content": "<p>However, CI on the blueprint repo seems to have died, and I have no idea how to revive it.</p>",
        "id": 375136564,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689316144
    },
    {
        "content": "<p>If someone wants to help with that, I would be very grateful.</p>",
        "id": 375136617,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689316159
    },
    {
        "content": "<p>For example, here is a PR that renames <code>exact_with_constant</code> to <code>strongly_exact</code>:<br>\n<a href=\"https://github.com/leanprover-community/lean-liquid/pull/130\">https://github.com/leanprover-community/lean-liquid/pull/130</a></p>",
        "id": 375138394,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689316756
    },
    {
        "content": "<p>And here is the companion PR to the blueprint repo:<br>\n<a href=\"https://github.com/leanprover-community/liquid/pull/16\">https://github.com/leanprover-community/liquid/pull/16</a></p>",
        "id": 375139026,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689316978
    },
    {
        "content": "<p>Restarting CI is very easy. You can go to the workflow page on the repo. If nobody beats me to it, I'll do so in an hour</p>",
        "id": 375160001,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1689321766
    },
    {
        "content": "<p>I already tried that</p>",
        "id": 375160196,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689321814
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> since I think <code>runs-on: liquid</code> means it relates to a Hoskinson runner</p>",
        "id": 375186490,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689327310
    },
    {
        "content": "<p>But this relates to the first PR only. The second PR is stalled just because <code>ubuntu-18.04</code> is deprecated: <a href=\"https://github.com/leanprover-community/liquid/pull/17\">https://github.com/leanprover-community/liquid/pull/17</a></p>",
        "id": 375188962,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689327815
    },
    {
        "content": "<p>Thanks, merged <img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\"></p>",
        "id": 375221841,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689334441
    },
    {
        "content": "<p>The current blueprint error (second PR listed above) is this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">This</span> <span class=\"n\">is</span> <span class=\"n\">pdfTeX</span><span class=\"o\">,</span> <span class=\"n\">Version</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">141592653</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">40</span><span class=\"bp\">.</span><span class=\"mi\">25</span> <span class=\"o\">(</span><span class=\"n\">TeX</span> <span class=\"n\">Live</span>\n<span class=\"bp\">|</span>    <span class=\"mi\">2023</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">preloaded</span> <span class=\"n\">format</span><span class=\"bp\">=</span><span class=\"n\">latex</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">restricted</span> <span class=\"bp\">\\</span><span class=\"n\">write18</span> <span class=\"n\">enabled.</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">entering</span> <span class=\"n\">extended</span> <span class=\"n\">mode</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">./</span><span class=\"n\">images</span><span class=\"bp\">-</span><span class=\"n\">ym2zcxxx.tex</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">LaTeX2e</span> <span class=\"bp\">&lt;</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">06</span><span class=\"bp\">-</span><span class=\"mi\">01</span><span class=\"bp\">&gt;</span> <span class=\"n\">patch</span> <span class=\"n\">level</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">L3</span> <span class=\"n\">programming</span> <span class=\"n\">layer</span> <span class=\"bp\">&lt;</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">06</span><span class=\"bp\">-</span><span class=\"mi\">16</span><span class=\"bp\">&gt;</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">texlive</span><span class=\"bp\">/</span><span class=\"n\">texdir</span><span class=\"bp\">/</span><span class=\"n\">texmf</span><span class=\"bp\">-</span><span class=\"n\">dist</span><span class=\"bp\">/</span><span class=\"n\">tex</span><span class=\"bp\">/</span><span class=\"n\">latex</span><span class=\"bp\">/</span><span class=\"n\">base</span><span class=\"bp\">/</span><span class=\"n\">article.cls</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">Document</span> <span class=\"n\">Class</span><span class=\"o\">:</span> <span class=\"n\">article</span> <span class=\"mi\">2023</span><span class=\"bp\">/</span><span class=\"mi\">05</span><span class=\"bp\">/</span><span class=\"mi\">17</span> <span class=\"n\">v1.4n</span> <span class=\"n\">Standard</span> <span class=\"n\">LaTeX</span>\n<span class=\"bp\">|</span>    <span class=\"n\">document</span> <span class=\"kd\">class</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">texlive</span><span class=\"bp\">/</span><span class=\"n\">texdir</span><span class=\"bp\">/</span><span class=\"n\">texmf</span><span class=\"bp\">-</span><span class=\"n\">dist</span><span class=\"bp\">/</span><span class=\"n\">tex</span><span class=\"bp\">/</span><span class=\"n\">latex</span><span class=\"bp\">/</span><span class=\"n\">base</span><span class=\"bp\">/</span><span class=\"n\">size10.clo</span><span class=\"o\">))</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"bp\">!</span> <span class=\"n\">LaTeX</span> <span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">File</span> <span class=\"bp\">`</span><span class=\"n\">blueprint.sty'</span> <span class=\"n\">not</span> <span class=\"n\">found.</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">X</span> <span class=\"n\">to</span> <span class=\"n\">quit</span> <span class=\"n\">or</span> <span class=\"bp\">&lt;</span><span class=\"n\">RETURN</span><span class=\"bp\">&gt;</span> <span class=\"n\">to</span> <span class=\"n\">proceed</span><span class=\"o\">,</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">or</span> <span class=\"n\">enter</span> <span class=\"n\">new</span> <span class=\"n\">name.</span> <span class=\"o\">(</span><span class=\"n\">Default</span> <span class=\"n\">extension</span><span class=\"o\">:</span> <span class=\"n\">sty</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">Enter</span> <span class=\"n\">file</span> <span class=\"n\">name</span><span class=\"o\">:</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"bp\">!</span> <span class=\"n\">Emergency</span> <span class=\"n\">stop.</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"bp\">&lt;</span><span class=\"n\">read</span> <span class=\"bp\">*&gt;</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">l.5</span> <span class=\"bp\">^^</span><span class=\"n\">M</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">pages</span> <span class=\"n\">of</span> <span class=\"n\">output.</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">imager</span><span class=\"o\">]</span> <span class=\"n\">INFO</span><span class=\"o\">:</span> <span class=\"n\">Transcript</span> <span class=\"n\">written</span> <span class=\"n\">on</span> <span class=\"n\">images</span><span class=\"bp\">-</span><span class=\"n\">ym2zcxxx.log.</span>\n<span class=\"bp\">|</span> <span class=\"n\">WARNING</span><span class=\"o\">:</span> <span class=\"n\">Failed</span> <span class=\"n\">to</span> <span class=\"n\">compile</span> <span class=\"n\">image</span><span class=\"o\">:</span> <span class=\"n\">Command</span> <span class=\"bp\">'</span><span class=\"n\">latex</span> <span class=\"n\">images</span><span class=\"bp\">-</span><span class=\"n\">ym2zcxxx.tex'</span>\n<span class=\"bp\">|</span>    <span class=\"n\">returned</span> <span class=\"n\">non</span><span class=\"bp\">-</span><span class=\"n\">zero</span> <span class=\"n\">exit</span> <span class=\"n\">status</span> <span class=\"mi\">1</span><span class=\"bp\">.</span>\n<span class=\"bp\">|</span> <span class=\"n\">WARNING</span><span class=\"o\">:</span> <span class=\"n\">Source</span> <span class=\"n\">files</span> <span class=\"n\">are</span> <span class=\"n\">saved</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">tmp6z1vkmf7.</span>\n</code></pre></div>",
        "id": 375384613,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689367268
    },
    {
        "content": "<p>This changed in plastex commit <a href=\"https://github.com/plastex/plastex/commit/ac0369937d8e011c8191484b26a1825f45481bdc\">https://github.com/plastex/plastex/commit/ac0369937d8e011c8191484b26a1825f45481bdc</a>. You can see the liquid blueprint logs before and after the plastex change in <a href=\"https://github.com/collares/liquid/actions/runs/5561140520/jobs/10158610045\">https://github.com/collares/liquid/actions/runs/5561140520/jobs/10158610045</a> and <a href=\"https://github.com/collares/liquid/actions/runs/5561141722/jobs/10158612139\">https://github.com/collares/liquid/actions/runs/5561141722/jobs/10158612139</a> respectively. cc <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span></p>",
        "id": 375384934,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689367370
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/blueprint/near/375186490\">said</a>:</p>\n<blockquote>\n<p>cc <span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> since I think <code>runs-on: liquid</code> means it relates to a Hoskinson runner</p>\n</blockquote>\n<p>It doesn't seem to be running on hoskinson, e.g. <a href=\"https://github.com/leanprover-community/liquid/actions/runs/5553646322/jobs/10142447907\">this run</a> was on a Github Actions-hosted machine. But in any case the error you saw here shouldn't vary per runner as it is an actual problem with building the blueprint.</p>",
        "id": 375394769,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1689370814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> where did you see the <code>runs-on: liquid?</code> Those jobs <em>should</em> run on CI runners labeled with <code>liquid</code>, except that there are no such runners.</p>",
        "id": 375395339,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1689371069
    },
    {
        "content": "<p>Oh I see, it was on the <code>lean-liquid/</code> repo rather than <code>liquid/</code>. I added the label to one runner so that <a href=\"https://github.com/leanprover-community/lean-liquid/pull/130\">lean-liquid#130</a> could run. GitHub automatically removes labels that hadn't been used for a while, and it looks like last CI activity with the <code>liquid</code> label was back in 2022.</p>",
        "id": 375395694,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1689371247
    },
    {
        "content": "<p>Thank you, and sorry for the confusing ping!</p>",
        "id": 375405778,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689375979
    },
    {
        "content": "<p><a href=\"https://github.com/plastex/plastex/pull/339\">https://github.com/plastex/plastex/pull/339</a> for the blueprint issue</p>",
        "id": 375472926,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689408821
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span></p>",
        "id": 375473020,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689408845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> thanks for digging into this!</p>",
        "id": 375473163,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689408901
    },
    {
        "content": "<p>I'll take a look. I'm curious, why is this blueprint moving now?</p>",
        "id": 375475306,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1689409532
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/blueprint/near/375136511\">said</a>:</p>\n<blockquote>\n<p>I want to PR some clean-ups to the <code>lean-liquid</code> repo. But that requires updating the blueprint, to keep it in sync.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 375475518,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689409587
    },
    {
        "content": "<p>Patrick managed to get CI working again!</p>",
        "id": 388947378,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1693820257
    },
    {
        "content": "<p>I just merged a little bit of polish into the blueprint repo</p>",
        "id": 388947490,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1693820290
    }
]