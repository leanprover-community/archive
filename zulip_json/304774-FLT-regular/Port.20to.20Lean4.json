[
    {
        "content": "<p>In half an hour <a href=\"https://github.com/leanprover-community/mathlib4/pull/5447\">#5447</a> will land in mathlib4. I <em>think</em> this is the last missing piece to be able to port the whole project to Lean4.</p>\n<p>I am going to Copenhagen tomorrow, so I think I will start the port next Monday. We will see how difficult it is :)</p>",
        "id": 369255881,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1687636425
    },
    {
        "content": "<p>I am starting the port. I think the easiest way is to create a github repo with the output of mathport and then fix everything. I will make it public as soon as it exists (hopefully today). Let me know if you want invitations to contribute :)</p>",
        "id": 372940529,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688657365
    },
    {
        "content": "<p><a href=\"https://github.com/riccardobrasca/flt-regular\">https://github.com/riccardobrasca/flt-regular</a></p>\n<p>It was surprisingly easy</p>",
        "id": 372945329,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688658235
    },
    {
        "content": "<p>Mathlib seems to work!</p>",
        "id": 372946430,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688658443
    },
    {
        "content": "<p>Nice! I'd ported the n=3 bits already, so you could c/p those parts</p>",
        "id": 372951153,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1688659428
    },
    {
        "content": "<p>That's good! Is it ok for you if we just copy/paste your repo to flt-regular?</p>",
        "id": 372951771,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688659504
    },
    {
        "content": "<p>Sure! <a href=\"https://github.com/Ruben-VandeVelde/flt4\">https://github.com/Ruben-VandeVelde/flt4</a></p>",
        "id": 372951976,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1688659552
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 372952110,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688659569
    },
    {
        "content": "<p>I cloned the repo to see how this works. infoview is currenty saying \"info: [538/1712] Building Mathlib.Algebra.Order.Sub.WithTop\" etc, is this normal?</p>",
        "id": 373128318,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1688720012
    },
    {
        "content": "<p>did you do the <code>lake exe cache</code> stuff? im not sure how it works on projects ngl</p>",
        "id": 373129002,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1688720140
    },
    {
        "content": "<p>Yes, it's a normal lean4 repo (I hope). So you need to get the cache.</p>",
        "id": 373129536,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688720252
    },
    {
        "content": "<p>ok let me try that</p>",
        "id": 373129647,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1688720282
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/Port.20to.20Lean4/near/373129002\">said</a>:</p>\n<blockquote>\n<p>did you do the <code>lake exe cache</code> stuff? im not sure how it works on projects ngl</p>\n</blockquote>\n<p>It works fine on projects ( and it's <code>lake exe cache get</code>)</p>",
        "id": 373130791,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1688720498
    },
    {
        "content": "<p>Ok so I ran <code>lake exe cache get</code> and restarted the server. It seemed to fix that. I now have lots of red in the infoview, but maybe this is because the port is in progress?</p>\n<p><code>`\n</code>c:\\Users\\chris\\.elan\\toolchains\\leanprover--lean4---nightly-2023-06-20\\bin\\lake.exe print-paths Init FltRegular.MayAssume.Lemmas FltRegular.NumberTheory.Cyclotomic.Factoring FltRegular.NumberTheory.Cyclotomic.UnitLemmas FltRegular.NumberTheory.Cyclotomic.CaseI` failed:</p>\n<p>stderr:<br>\ninfo: [1296/1712] Building FltRegular.FltThree.Primes<br>\ninfo: [1297/1712] Building FltRegular.FltThree.OddPrimeOrFour<br>\ninfo: [1350/1712] Building FltRegular.ReadyForMathlib.Homogenization<br>\ninfo: [1652/1712] Building FltRegular.Norm.NormPrime<br>\ninfo: [1658/1712] Building FltRegular.NumberTheory.Cyclotomic.CyclotomicUnits<br>\nerror: &gt; LEAN_PATH=.\\build\\lib;.\\lake-packages\\proofwidgets\\build\\lib;.\\lake-packages\\mathlib\\build\\lib;.\\lake-packages\\Qq\\build\\lib;.\\lake-packages\\aesop\\build\\lib;.\\lake-packages\\std\\build\\lib PATH c:\\Users\\chris\\.elan\\toolchains\\leanprover--lean4---nightly-2023-06-20\\bin\\lean.exe .\\.\\.\\FltRegular\\FltThree\\Primes.lean -R .\\.\\. -o .\\build\\lib\\FltRegular\\FltThree\\Primes.olean -i .\\build\\lib\\FltRegular\\FltThree\\Primes.ilean -c .\\build\\ir\\FltRegular\\FltThree\\Primes.c<br>\nerror: stdout:<br>\n.\\.\\.\\FltRegular\\FltThree\\Primes.lean:17:7: error: failed to infer 'let' declaration type<br>\n.\\.\\.\\FltRegular\\FltThree\\Primes.lean:17:39: error: don't know how to synthesize implicit argument<br>\n  @IsCoprime.pow R CommRing.toCommSemiring x y ?m.1527 ?m.1528 hxx<br>\ncontext:<br>\n``<br>\nor maybe something else is wrong</p>",
        "id": 373132960,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1688720900
    },
    {
        "content": "<p>Ok yes I think its because its trying to import files that have errors from porting</p>",
        "id": 373133667,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1688721031
    },
    {
        "content": "<p>Yes, I didn't fix anything yet</p>",
        "id": 373136148,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688721514
    },
    {
        "content": "<p>So it's not working at all, it's the standard output of mathport</p>",
        "id": 373136212,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688721528
    },
    {
        "content": "<p>Ok cool, thats what I thought. At least the FltThree bits should be working, but I guess you havent copy pasted it in yet?</p>",
        "id": 373136517,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1688721605
    },
    {
        "content": "<p>Yes, I didn't do it. I just invited you to the repo, so feel free to push whatever fix you did.</p>",
        "id": 373138058,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1688721960
    },
    {
        "content": "<p>I will report here the files I am working on, to avoid duplicating effort:</p>\n<ul>\n<li><code>FltRegular.Norm.NormPrime</code>: done.</li>\n<li><code>ReadyForMathlib.Homogenization</code>: done.</li>\n<li><code>NumberTheory.Cyclotomic.Factoring</code>: done.</li>\n<li><code>NumberTheory.Cyclotomic.CyclotomicUnits</code>: done.</li>\n<li><code>NumberTheory.Cyclotomic.GaloisActionOnCyclo</code>: done.</li>\n<li><code>NumberTheory.Cyclotomic.ZetaSubOnePrime</code>: done.</li>\n<li><code>NumberTheory.Cyclotomic.UnitLemmas</code>: done.</li>\n<li><code>NumberTheory.Cyclotomic.CyclRat</code>: done.</li>\n<li><code>NumberTheory.RegularPrimes</code>:  done.</li>\n<li><code>NumberTheory.KummersLemma</code>: done.</li>\n<li><code>MayAssume.Lemmas</code>:  done.</li>\n<li><code>CaseII.Statement</code>:  done.</li>\n<li><code>NumberTheory.Cyclotomic.CaseI</code>: done.</li>\n<li><code>CaseI.AuxLemmas</code>: done.</li>\n<li><code>CaseI.Statement</code>: done.</li>\n<li><code>FltRegular</code>: done.</li>\n</ul>",
        "id": 375981391,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1689592574
    },
    {
        "content": "<p>The project is fully ported!</p>",
        "id": 378133540,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1690203949
    },
    {
        "content": "<p>It is sometimes very slow, but we can live with it at the moment.</p>",
        "id": 378133903,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1690204013
    },
    {
        "content": "<p>Wow, that was fast!!</p>",
        "id": 378140999,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1690205145
    },
    {
        "content": "<p>bumping to current Std/Mathlib seems to build fine</p>",
        "id": 383941897,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691757058
    },
    {
        "content": "<p>should we move this to <code>leanprover-community</code> soon?</p>",
        "id": 383941959,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691757066
    },
    {
        "content": "<p>Yes, I think we can just use the old <code>flt-reguler</code> repo, I don't see any point in keeping the Lean3 version</p>",
        "id": 383956085,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1691759389
    },
    {
        "content": "<p>(we can clone it somewhere just for the record)</p>",
        "id": 383956231,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1691759409
    },
    {
        "content": "<p>We could rename the existing <code>master</code> branch to <code>lean3</code></p>",
        "id": 383958008,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1691759738
    },
    {
        "content": "<p>Meanwhile Kevin submitted a PR for the general case to mathlib4(*)</p>\n<p>(*) statement only</p>",
        "id": 383958730,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1691759871
    },
    {
        "content": "<p>What PR?</p>",
        "id": 383964356,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1691760791
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6508\">#6508</a> I think</p>",
        "id": 383964500,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1691760815
    },
    {
        "content": "<p>I am not sure I did all the <code>git</code> magic right, but we should now have:</p>\n<ul>\n<li>the <code>master</code> branch, with the latest mathlib3 (and all the blueprint, graph)</li>\n<li>a <code>mathlib3</code> branch, equal to master</li>\n<li>a <code>mathlib4</code> branch, that is a valid Lean4 repo, with a ported project (with a very recent mathlib4, it is even slower that one month ago)</li>\n</ul>",
        "id": 390048210,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1694276894
    },
    {
        "content": "<p><span aria-label=\"champagne\" class=\"emoji emoji-1f37e\" role=\"img\" title=\"champagne\">:champagne:</span></p>",
        "id": 390049342,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1694277943
    },
    {
        "content": "<p>Is the <code>ReadyForMathlib</code> ready for mathlib? I might look at creating a PR</p>",
        "id": 390049396,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1694277969
    },
    {
        "content": "<p>At the moment, it only contains stuff about homogeneous polynomial written by <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span></p>",
        "id": 390049477,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1694278082
    },
    {
        "content": "<p>It'd be really nice to have it in mathlib, maybe in the generality of weighted homogeneous polys</p>",
        "id": 390058473,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1694287031
    }
]