[
    {
        "content": "<p>How far are we from porting? :)</p>",
        "id": 319839824,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673030604
    },
    {
        "content": "<p>We are surely far. Note that (this is my fault) the definition of cyclotomic polynomials uses the complex numbers.</p>",
        "id": 319841260,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031054
    },
    {
        "content": "<p>In any case something I  will try to do is to move all unneeded results (to prove case 1) in the <code>unused</code> folder</p>",
        "id": 319841400,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031099
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/lean4/near/319841260\">said</a>:</p>\n<blockquote>\n<p>We are surely far. Note that (this is my fault) the definition of cyclotomic polynomials uses the complex numbers.</p>\n</blockquote>\n<p>More precisely, we need the existence of a complex primitive root of unity of any order. And this probably uses a lot of properties of the exponential function...</p>",
        "id": 319841948,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031280
    },
    {
        "content": "<p>And of course we need finiteness of the class group !</p>",
        "id": 319842118,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031347
    },
    {
        "content": "<p>Hmm... For the definition, why can you not use well-founded recursion?</p>",
        "id": 319842149,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673031358
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/lean4/near/319842149\">said</a>:</p>\n<blockquote>\n<p>Hmm... For the definition, why can you not use well-founded recursion?</p>\n</blockquote>\n<p>Yes. It was my first contribution to mathlib and I didn't chose the best definition, just the one I found on my head.</p>",
        "id": 319842333,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031419
    },
    {
        "content": "<p>Now to be honest I am too lazy to refactor everything</p>",
        "id": 319842394,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031439
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/lean4/near/319841400\">said</a>:</p>\n<blockquote>\n<p>In any case something I  will try to do is to move all unneeded results (to prove case 1) in the <code>unused</code> folder</p>\n</blockquote>\n<p>In <code>603b96ac8ae28c657f4c1847003c429e691bb835</code> I deleted a bunch of useless results that we wrote trying several approaches. If at some point someone doesn't find something they're sure was there at some point, they can have a look at this commit.</p>",
        "id": 320741743,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673453945
    },
    {
        "content": "<p>Is it worth just tagging that commit so we don't lose track of it? Or putting it on some branch?</p>",
        "id": 320742240,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1673454087
    },
    {
        "content": "<p>This is why I wrote my message. In any case almost all the results I deleted were trivial, and at worst they were easy, so it shouldn't be a big deal.</p>\n<p>My goal is to open maybe one last PR to mathlib, and be ready to port the project in a few months...</p>",
        "id": 320743970,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673454521
    },
    {
        "content": "<p>Could that last PR be homogenization? <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> We need it for the combinatorial Nullstellensatz.</p>",
        "id": 320752304,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673456732
    },
    {
        "content": "<p>I think it's a very good idea</p>",
        "id": 320754917,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673457472
    },
    {
        "content": "<p>You need to convince <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span></p>",
        "id": 320755028,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673457499
    },
    {
        "content": "<p>How far are we from porting? :)</p>",
        "id": 319839824,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673030604
    },
    {
        "content": "<p>We are surely far. Note that (this is my fault) the definition of cyclotomic polynomials uses the complex numbers.</p>",
        "id": 319841260,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031054
    },
    {
        "content": "<p>In any case something I  will try to do is to move all unneeded results (to prove case 1) in the <code>unused</code> folder</p>",
        "id": 319841400,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031099
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/lean4/near/319841260\">said</a>:</p>\n<blockquote>\n<p>We are surely far. Note that (this is my fault) the definition of cyclotomic polynomials uses the complex numbers.</p>\n</blockquote>\n<p>More precisely, we need the existence of a complex primitive root of unity of any order. And this probably uses a lot of properties of the exponential function...</p>",
        "id": 319841948,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031280
    },
    {
        "content": "<p>And of course we need finiteness of the class group !</p>",
        "id": 319842118,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031347
    },
    {
        "content": "<p>Hmm... For the definition, why can you not use well-founded recursion?</p>",
        "id": 319842149,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673031358
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/lean4/near/319842149\">said</a>:</p>\n<blockquote>\n<p>Hmm... For the definition, why can you not use well-founded recursion?</p>\n</blockquote>\n<p>Yes. It was my first contribution to mathlib and I didn't chose the best definition, just the one I found on my head.</p>",
        "id": 319842333,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031419
    },
    {
        "content": "<p>Now to be honest I am too lazy to refactor everything</p>",
        "id": 319842394,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673031439
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/lean4/near/319841400\">said</a>:</p>\n<blockquote>\n<p>In any case something I  will try to do is to move all unneeded results (to prove case 1) in the <code>unused</code> folder</p>\n</blockquote>\n<p>In <code>603b96ac8ae28c657f4c1847003c429e691bb835</code> I deleted a bunch of useless results that we wrote trying several approaches. If at some point someone doesn't find something they're sure was there at some point, they can have a look at this commit.</p>",
        "id": 320741743,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673453945
    },
    {
        "content": "<p>Is it worth just tagging that commit so we don't lose track of it? Or putting it on some branch?</p>",
        "id": 320742240,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1673454087
    },
    {
        "content": "<p>This is why I wrote my message. In any case almost all the results I deleted were trivial, and at worst they were easy, so it shouldn't be a big deal.</p>\n<p>My goal is to open maybe one last PR to mathlib, and be ready to port the project in a few months...</p>",
        "id": 320743970,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673454521
    },
    {
        "content": "<p>Could that last PR be homogenization? <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> We need it for the combinatorial Nullstellensatz.</p>",
        "id": 320752304,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673456732
    },
    {
        "content": "<p>I think it's a very good idea</p>",
        "id": 320754917,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673457472
    },
    {
        "content": "<p>You need to convince <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span></p>",
        "id": 320755028,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673457499
    },
    {
        "content": "<p>Fwiw, I ported n=3 at <a href=\"https://github.com/Ruben-VandeVelde/flt4\">https://github.com/Ruben-VandeVelde/flt4</a></p>",
        "id": 345651415,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680178070
    },
    {
        "content": "<p>With mathport and not by hand, I hope!</p>",
        "id": 345656382,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680179372
    },
    {
        "content": "<p>With mathport, though oneshot needed some hand holding - I'd hope we can improve the tooling before porting bigger projects</p>",
        "id": 345657472,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680179639
    },
    {
        "content": "<p>Nice!! I've played a little bit with oneshot, how do handle multiple files?</p>",
        "id": 345667889,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680181838
    },
    {
        "content": "<p>You copy and paste them one after the other into a single file. (Or if there's a better way, I didn't find it.) This was most of the hand holding I referred to</p>",
        "id": 345681069,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680184546
    },
    {
        "content": "<p>Ruben, any documentation you could write on using mathport on non-mathlib projects would be very useful, and the same with precise  issues reporting.</p>",
        "id": 345689070,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1680185987
    },
    {
        "content": "<p>I would imagine that probably there's a straightforward way of configuring mathport to run on a standalone project, and that probably we could derive it by comparing the mathlib3port, lean3port, and oneshot configurations</p>",
        "id": 345690273,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680186199
    },
    {
        "content": "<p>I certainly don't think building a workflow that invokes one-shot repeatedly is a good approach!</p>",
        "id": 345690398,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680186225
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/lean4/near/345681069\">said</a>:</p>\n<blockquote>\n<p>You copy and paste them one after the other into a single file. (Or if there's a better way, I didn't find it.) This was most of the hand holding I referred to</p>\n</blockquote>\n<p>I did the same <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 345706071,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680188991
    },
    {
        "content": "<p>I used it for a very small projet (only two files) and I did the align by hand, but it worked quite well.</p>",
        "id": 345706220,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680189018
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/lean4/near/345689070\">said</a>:</p>\n<blockquote>\n<p>Ruben, any documentation you could write on using mathport on non-mathlib projects would be very useful, and the same with precise  issues reporting.</p>\n</blockquote>\n<p>I can't really say more than \"concatenate the files and follow the instructions from <a href=\"https://github.com/leanprover-community/mathport/tree/master/Oneshot\">https://github.com/leanprover-community/mathport/tree/master/Oneshot</a>\" at this point. I'm guessing there's a better way, but I don't know when I'd have time to find it</p>",
        "id": 345718880,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680191584
    },
    {
        "content": "<p>Since you just did it, can you confirm that the sentence \"or just <code>./download_release</code> to get the latest one automatically\" is wrong? It seems there is no <code>./download_release</code> script (<code>./download-release.sh</code> worked for me).</p>",
        "id": 345719310,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680191680
    },
    {
        "content": "<p>(Note the underscore and the dash)</p>",
        "id": 345719447,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680191714
    },
    {
        "content": "<p>I'm afraid I can't  - it turns out I'm pretty bad at following instructions and I went back and forth a few times across the instructions :)</p>",
        "id": 345722210,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680192159
    },
    {
        "content": "<p>Does seem like I ran <code>./download-release.sh</code> at some point, though</p>",
        "id": 345722362,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680192184
    },
    {
        "content": "<p>Kevin fixed that, btw: <a href=\"https://github.com/leanprover-community/mathport/pull/233\">https://github.com/leanprover-community/mathport/pull/233</a></p>",
        "id": 346848023,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1680614308
    },
    {
        "content": "<p>Nice!</p>",
        "id": 346849128,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680614562
    }
]