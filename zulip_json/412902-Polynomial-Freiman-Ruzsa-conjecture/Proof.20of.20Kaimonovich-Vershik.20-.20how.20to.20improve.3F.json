[
    {
        "content": "<p>Hi everyone.  I just managed to complete a proof of the Kaimonovich-Vershik inequality <a href=\"https://teorth.github.io/pfr/blueprint/sect0003.html#kv\">https://teorth.github.io/pfr/blueprint/sect0003.html#kv</a> at <a href=\"https://github.com/teorth/pfr/blob/master/PFR/ruzsa_distance.lean\">https://github.com/teorth/pfr/blob/master/PFR/ruzsa_distance.lean</a> :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Obvious extension of Fin.forall_fin_two -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">Fin.forall_fin_three</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">p</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">p</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Fin.forall_fin_succ.trans</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">and_congr_right</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Fin.forall_fin_two</span>\n\n<span class=\"sd\">/-- H[X + Y + Z] - H[X + Y] \\leq H[Y+Z] - H[Y]. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">Kaimonovich_Vershik</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">iIndepFun</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">hG</span><span class=\"o\">)</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span><span class=\"n\">Y</span><span class=\"o\">,</span><span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"n\">μ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hX</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hY</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hZ</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">IsProbabilityMeasure</span> <span class=\"n\">μ</span><span class=\"o\">]:</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">-</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">≤</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">-</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span><span class=\"bp\">;</span> <span class=\"n\">μ</span> <span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Y</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">])</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">])</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">])</span>\n  <span class=\"bp\">.</span> <span class=\"n\">linarith</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span><span class=\"n\">Y</span><span class=\"o\">,</span><span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Fin.forall_fin_three</span><span class=\"o\">]</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"bp\">.</span> <span class=\"n\">dsimp</span>\n      <span class=\"n\">exact</span> <span class=\"n\">hX</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"bp\">.</span> <span class=\"n\">dsimp</span>\n      <span class=\"n\">exact</span> <span class=\"n\">hY</span>\n    <span class=\"n\">dsimp</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hZ</span>\n  <span class=\"n\">convert</span> <span class=\"n\">entropy_triple_add_entropy_le</span> <span class=\"n\">_</span> <span class=\"n\">hX</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"n\">Measurable.add'</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">Measurable.add'</span> <span class=\"n\">hY</span> <span class=\"n\">hZ</span><span class=\"o\">))</span> <span class=\"n\">using</span> <span class=\"mi\">2</span>\n  <span class=\"bp\">.</span> <span class=\"k\">calc</span>\n      <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Y</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">congr</span> <span class=\"mi\">1</span>\n        <span class=\"n\">symm</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hX</span> <span class=\"n\">hY</span>\n        <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">iIndepFun.indepFun</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n        <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n        <span class=\"n\">assumption</span>\n      <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"o\">⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"o\">⟩,</span> <span class=\"n\">Z</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">symm</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"o\">(</span><span class=\"n\">Measurable.prod_mk</span> <span class=\"n\">hX</span> <span class=\"n\">hY</span><span class=\"o\">)</span> <span class=\"n\">hZ</span>\n        <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.indepFun_prod</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n      <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"o\">⟨</span> <span class=\"n\">Z</span> <span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"bp\">+</span><span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">⟩</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">apply</span> <span class=\"n\">entropy_of_comp_eq_of_comp</span> <span class=\"n\">μ</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">x.1.1</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x.2</span><span class=\"o\">,</span> <span class=\"n\">x.1.1</span><span class=\"bp\">+</span><span class=\"n\">x.1.2</span><span class=\"bp\">+</span><span class=\"n\">x.2</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">y</span> <span class=\"bp\">↦</span> <span class=\"o\">((</span><span class=\"n\">y.1</span><span class=\"o\">,</span> <span class=\"n\">y.2.2</span><span class=\"bp\">-</span><span class=\"n\">y.1</span><span class=\"bp\">-</span><span class=\"n\">y.2.1</span><span class=\"o\">),</span> <span class=\"n\">y.2.1</span><span class=\"o\">))</span>\n        <span class=\"bp\">.</span> <span class=\"n\">unfold</span> <span class=\"n\">prod</span>\n          <span class=\"n\">funext</span> <span class=\"n\">ω</span>\n          <span class=\"n\">dsimp</span>\n          <span class=\"n\">congr</span> <span class=\"mi\">2</span>\n          <span class=\"n\">abel</span>\n        <span class=\"bp\">.</span> <span class=\"n\">unfold</span> <span class=\"n\">prod</span>\n          <span class=\"n\">funext</span> <span class=\"n\">ω</span>\n          <span class=\"n\">dsimp</span>\n          <span class=\"n\">congr</span> <span class=\"mi\">2</span>\n          <span class=\"n\">abel</span>\n        <span class=\"bp\">.</span> <span class=\"n\">exact</span> <span class=\"n\">Measurable.prod_mk</span> <span class=\"o\">(</span><span class=\"n\">Measurable.prod_mk</span> <span class=\"n\">hX</span> <span class=\"n\">hY</span><span class=\"o\">)</span> <span class=\"n\">hZ</span>\n        <span class=\"n\">apply</span> <span class=\"n\">Measurable.prod_mk</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">Measurable.prod_mk</span> <span class=\"n\">hZ</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n        <span class=\"n\">exact</span> <span class=\"n\">Measurable.add'</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">Measurable.add'</span> <span class=\"n\">hY</span> <span class=\"n\">hZ</span><span class=\"o\">)</span>\n  <span class=\"bp\">.</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_assoc</span><span class=\"o\">]</span>\n  <span class=\"bp\">.</span> <span class=\"n\">refine</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">hY.add</span> <span class=\"n\">hZ</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">symm.trans</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n    <span class=\"bp\">.</span> <span class=\"n\">apply</span> <span class=\"n\">IndepFun.symm</span>\n      <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.add</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n    <span class=\"n\">symm</span>\n    <span class=\"n\">exact</span> <span class=\"n\">entropy_of_shear_eq</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">hY.add</span> <span class=\"n\">hZ</span><span class=\"o\">)</span>\n  <span class=\"n\">refine</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"n\">hX.add</span> <span class=\"n\">hY</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">symm.trans</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"bp\">.</span> <span class=\"n\">apply</span> <span class=\"n\">IndepFun.symm</span>\n    <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.add</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Z</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"kd\">by</span> <span class=\"n\">abel</span><span class=\"o\">]</span>\n  <span class=\"n\">symm</span>\n  <span class=\"n\">exact</span> <span class=\"n\">entropy_of_shear_eq</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"n\">hX.add</span> <span class=\"n\">hY</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>As you can see, the proof is... not elegant.  I found myself surprisingly bogged down by minutae, firstly to show (see the first <code>have</code> statement) that every element of the vector <code>![X,Y,Z]</code> was measurable, and secondly to show that the random variables <code>⟨⟨X, Y⟩, Z⟩</code> and <code>⟨X, ⟨Z, X + (Y + Z)⟩⟩</code> were functions of each other, and hence had the same entropy.  I did introduce a new lemma <code>entropy_of_shear_eq</code> <a href=\"https://teorth.github.io/pfr/docs/PFR/ruzsa_distance.html#entropy_of_shear_eq\">https://teorth.github.io/pfr/docs/PFR/ruzsa_distance.html#entropy_of_shear_eq</a> which did help with some of the calculations, but it is still rather lengthy, and many of the other lemmas still to be proven in the project will face similar challenges.  Any suggestions on how to make life easier and the proofs shorter and more readable would be welcome.  For instance, could there be a <code>measurability</code> tactic to automate the verification of the measurability of variables such as <code>⟨X, ⟨Z, X + (Y + Z)⟩⟩</code>?  As one can see, this wasn't the most painful part of the proof (it's the part involving <code>Measurable.prod_mk</code> and <code>Measurable.add</code>, which is only three lines long), but every little bit would help.</p>",
        "id": 403230211,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700507601
    },
    {
        "content": "<p>This seems like an interesting test case. I should have some time to look at it later today, if others don't get there first.</p>",
        "id": 403230470,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1700507724
    },
    {
        "content": "<p>There already is a <code>measurability</code> tactic in mathlib with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Measurable.prod#doc\">docs#Measurable.prod</a> tagged as a lemma for it to use. Does that make things any easier?</p>",
        "id": 403231683,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700508204
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Proof.20of.20Kaimonovich-Vershik.20-.20how.20to.20improve.3F/near/403231683\">said</a>:</p>\n<blockquote>\n<p>There already is a <code>measurability</code> tactic in mathlib with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Measurable.prod#doc\">docs#Measurable.prod</a> tagged as a lemma for it to use. Does that make things any easier?</p>\n</blockquote>\n<p>Ooh, it works!  Okay, that's one less issue then.</p>",
        "id": 403232002,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700508332
    },
    {
        "content": "<p>And in case it helps, here's a trick to deal with the three cases: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">hX</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hY</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hZ</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span><span class=\"n\">Y</span><span class=\"o\">,</span><span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">i</span> <span class=\"bp\">;</span> <span class=\"n\">fin_cases</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">assumption</span>\n</code></pre></div>",
        "id": 403232543,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700508561
    },
    {
        "content": "<p>The <code>&lt;;&gt;</code> is a tactic combinator where <code>t &lt;;&gt; s</code> means \"apply the tactic <code>s</code> to all goals produced by <code>t</code>\".</p>",
        "id": 403232692,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700508617
    },
    {
        "content": "<p>These help, thanks!  Here is a slightly cleaned up version (now also using <code>all_goals</code> to reduce the clutter a little).</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- $$H[X + Y + Z] - H[X + Y] \\leq H[Y+Z] - H[Y].$$ -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">Kaimonovich_Vershik</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">iIndepFun</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">hG</span><span class=\"o\">)</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span><span class=\"n\">Y</span><span class=\"o\">,</span><span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"n\">μ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hX</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hY</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hZ</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">IsProbabilityMeasure</span> <span class=\"n\">μ</span><span class=\"o\">]:</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">-</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">≤</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">-</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span><span class=\"bp\">;</span> <span class=\"n\">μ</span> <span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Y</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">])</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">])</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">])</span>\n  <span class=\"bp\">.</span> <span class=\"n\">linarith</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span><span class=\"n\">Y</span><span class=\"o\">,</span><span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">intro</span> <span class=\"n\">i</span> <span class=\"bp\">;</span> <span class=\"n\">fin_cases</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">assumption</span>\n  <span class=\"n\">convert</span> <span class=\"n\">entropy_triple_add_entropy_le</span> <span class=\"n\">_</span> <span class=\"n\">hX</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"bp\">+</span><span class=\"n\">Z</span><span class=\"o\">))</span> <span class=\"kd\">by</span> <span class=\"n\">measurability</span><span class=\"o\">)</span> <span class=\"n\">using</span> <span class=\"mi\">2</span>\n  <span class=\"bp\">.</span> <span class=\"k\">calc</span>\n      <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Y</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">congr</span> <span class=\"mi\">1</span>\n        <span class=\"n\">symm</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hX</span> <span class=\"n\">hY</span>\n        <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">iIndepFun.indepFun</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n        <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n        <span class=\"n\">assumption</span>\n      <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"o\">⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"o\">⟩,</span> <span class=\"n\">Z</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">symm</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"o\">(</span><span class=\"n\">Measurable.prod_mk</span> <span class=\"n\">hX</span> <span class=\"n\">hY</span><span class=\"o\">)</span> <span class=\"n\">hZ</span>\n        <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.indepFun_prod</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n      <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"o\">⟨</span> <span class=\"n\">Z</span> <span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"bp\">+</span><span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">⟩</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">apply</span> <span class=\"n\">entropy_of_comp_eq_of_comp</span> <span class=\"n\">μ</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">measurability</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">measurability</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">x.1.1</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x.2</span><span class=\"o\">,</span> <span class=\"n\">x.1.1</span><span class=\"bp\">+</span><span class=\"n\">x.1.2</span><span class=\"bp\">+</span><span class=\"n\">x.2</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">y</span> <span class=\"bp\">↦</span> <span class=\"o\">((</span><span class=\"n\">y.1</span><span class=\"o\">,</span> <span class=\"n\">y.2.2</span><span class=\"bp\">-</span><span class=\"n\">y.1</span><span class=\"bp\">-</span><span class=\"n\">y.2.1</span><span class=\"o\">),</span> <span class=\"n\">y.2.1</span><span class=\"o\">))</span>\n        <span class=\"n\">all_goals</span> <span class=\"o\">{</span>\n          <span class=\"n\">unfold</span> <span class=\"n\">prod</span>\n          <span class=\"n\">funext</span> <span class=\"n\">ω</span>\n          <span class=\"n\">dsimp</span>\n          <span class=\"n\">congr</span> <span class=\"mi\">2</span>\n          <span class=\"n\">abel</span>\n        <span class=\"o\">}</span>\n  <span class=\"bp\">.</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_assoc</span><span class=\"o\">]</span>\n  <span class=\"bp\">.</span> <span class=\"n\">refine</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">hY.add</span> <span class=\"n\">hZ</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">symm.trans</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n    <span class=\"bp\">.</span> <span class=\"n\">apply</span> <span class=\"n\">IndepFun.symm</span>\n      <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.add</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n    <span class=\"n\">symm</span>\n    <span class=\"n\">exact</span> <span class=\"n\">entropy_of_shear_eq</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">hY.add</span> <span class=\"n\">hZ</span><span class=\"o\">)</span>\n  <span class=\"n\">refine</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"n\">hX.add</span> <span class=\"n\">hY</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">symm.trans</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"bp\">.</span> <span class=\"n\">apply</span> <span class=\"n\">IndepFun.symm</span>\n    <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.add</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Z</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"kd\">by</span> <span class=\"n\">abel</span><span class=\"o\">]</span>\n  <span class=\"n\">symm</span>\n  <span class=\"n\">exact</span> <span class=\"n\">entropy_of_shear_eq</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"n\">hX.add</span> <span class=\"n\">hY</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 403233725,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700509048
    },
    {
        "content": "<p>Having an <code>independence</code> tactic to deduce, for instance, independence of <code>X</code> and <code>Y+Z</code> from the joint independence of <code>![X Y Z]</code> wouuld be nice.</p>",
        "id": 403234700,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700509527
    },
    {
        "content": "<p>For defining functions out of products, there is an option to write things like <code>fun ((x,y),z) ↦ (x, (z, x+y+z)))</code> and avoid all the <code>.1.2</code> overload.</p>",
        "id": 403234921,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700509639
    },
    {
        "content": "<p>So for example the few lines in the middle of your proof could be written as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>        <span class=\"n\">apply</span> <span class=\"n\">entropy_of_comp_eq_of_comp</span> <span class=\"n\">μ</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n          <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">((</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">y</span><span class=\"o\">),</span><span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">+</span><span class=\"n\">y</span><span class=\"bp\">+</span><span class=\"n\">z</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">y</span><span class=\"o\">,</span><span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">↦</span> <span class=\"o\">((</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">z</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">),</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n        <span class=\"bp\">.</span> <span class=\"n\">funext</span> <span class=\"n\">ω</span> <span class=\"bp\">;</span> <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">prod</span><span class=\"o\">]</span> <span class=\"bp\">;</span> <span class=\"n\">ext</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">dsimp</span> <span class=\"bp\">;</span> <span class=\"n\">abel</span>\n        <span class=\"bp\">.</span> <span class=\"n\">funext</span> <span class=\"n\">ω</span> <span class=\"bp\">;</span> <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">prod</span><span class=\"o\">]</span> <span class=\"bp\">;</span> <span class=\"n\">ext</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">dsimp</span> <span class=\"bp\">;</span> <span class=\"n\">abel</span>\n        <span class=\"bp\">.</span> <span class=\"n\">measurability</span>\n        <span class=\"bp\">·</span> <span class=\"n\">measurability</span>\n</code></pre></div>",
        "id": 403235426,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700509898
    },
    {
        "content": "<p>(or you could inline <code>measurability</code> as in the most recent edit)</p>",
        "id": 403235558,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700509962
    },
    {
        "content": "<p>Nice!  That definitely enhances readability.  New version:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- $$H[X + Y + Z] - H[X + Y] \\leq H[Y+Z] - H[Y].$$ -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">Kaimonovich_Vershik</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">iIndepFun</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">hG</span><span class=\"o\">)</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span><span class=\"n\">Y</span><span class=\"o\">,</span><span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"n\">μ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hX</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hY</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hZ</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">IsProbabilityMeasure</span> <span class=\"n\">μ</span><span class=\"o\">]:</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">-</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">≤</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">-</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span><span class=\"bp\">;</span> <span class=\"n\">μ</span> <span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Y</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">])</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">])</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span> <span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">])</span>\n  <span class=\"bp\">.</span> <span class=\"n\">linarith</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span><span class=\"n\">Y</span><span class=\"o\">,</span><span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">intro</span> <span class=\"n\">i</span> <span class=\"bp\">;</span> <span class=\"n\">fin_cases</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">assumption</span>\n  <span class=\"n\">convert</span> <span class=\"n\">entropy_triple_add_entropy_le</span> <span class=\"n\">_</span> <span class=\"n\">hX</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"bp\">+</span><span class=\"n\">Z</span><span class=\"o\">))</span> <span class=\"kd\">by</span> <span class=\"n\">measurability</span><span class=\"o\">)</span> <span class=\"n\">using</span> <span class=\"mi\">2</span>\n  <span class=\"bp\">.</span> <span class=\"k\">calc</span>\n      <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Y</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">H</span><span class=\"o\">[</span><span class=\"n\">Z</span><span class=\"bp\">;</span><span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">congr</span> <span class=\"mi\">1</span>\n        <span class=\"n\">symm</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hX</span> <span class=\"n\">hY</span>\n        <span class=\"n\">convert</span> <span class=\"n\">iIndepFun.indepFun</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n      <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"o\">⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"o\">⟩,</span> <span class=\"n\">Z</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">symm</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"o\">(</span><span class=\"n\">Measurable.prod_mk</span> <span class=\"n\">hX</span> <span class=\"n\">hY</span><span class=\"o\">)</span> <span class=\"n\">hZ</span>\n        <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.indepFun_prod</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n      <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">H</span><span class=\"o\">[⟨</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"o\">⟨</span> <span class=\"n\">Z</span> <span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"bp\">+</span><span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">⟩</span> <span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">μ</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">apply</span> <span class=\"n\">entropy_of_comp_eq_of_comp</span> <span class=\"n\">μ</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">measurability</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">measurability</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">((</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">y</span><span class=\"o\">),</span><span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">+</span><span class=\"n\">y</span><span class=\"bp\">+</span><span class=\"n\">z</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,(</span><span class=\"n\">b</span><span class=\"o\">,</span><span class=\"n\">c</span><span class=\"o\">))</span> <span class=\"bp\">↦</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">),</span> <span class=\"n\">b</span><span class=\"o\">))</span>\n        <span class=\"n\">all_goals</span> <span class=\"o\">{</span> <span class=\"n\">funext</span> <span class=\"n\">ω</span><span class=\"bp\">;</span> <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">prod</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">ext</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">dsimp</span><span class=\"bp\">;</span> <span class=\"n\">abel</span> <span class=\"o\">}</span>\n  <span class=\"bp\">.</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_assoc</span><span class=\"o\">]</span>\n  <span class=\"bp\">.</span> <span class=\"n\">refine</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">hY.add</span> <span class=\"n\">hZ</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">symm.trans</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n    <span class=\"bp\">.</span> <span class=\"n\">apply</span> <span class=\"n\">IndepFun.symm</span>\n      <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.add</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n    <span class=\"n\">symm</span>\n    <span class=\"n\">exact</span> <span class=\"n\">entropy_of_shear_eq</span> <span class=\"n\">hX</span> <span class=\"o\">(</span><span class=\"n\">hY.add</span> <span class=\"n\">hZ</span><span class=\"o\">)</span>\n  <span class=\"n\">refine</span> <span class=\"n\">entropy_pair_eq_add'</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"n\">hX.add</span> <span class=\"n\">hY</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">symm.trans</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"bp\">.</span> <span class=\"n\">apply</span> <span class=\"n\">IndepFun.symm</span>\n    <span class=\"n\">exact</span> <span class=\"n\">iIndepFun.add</span> <span class=\"n\">h</span> <span class=\"n\">this</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"bp\">+</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Z</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"kd\">by</span> <span class=\"n\">abel</span><span class=\"o\">]</span>\n  <span class=\"n\">symm</span>\n  <span class=\"n\">exact</span> <span class=\"n\">entropy_of_shear_eq</span> <span class=\"n\">hZ</span> <span class=\"o\">(</span><span class=\"n\">hX.add</span> <span class=\"n\">hY</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 403235616,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700509995
    },
    {
        "content": "<p>If I make changes such as replacing <code>Measurable.prod_mk hX hY</code> by <code>by measurability</code> would that significantly reduce performance?  It's a minor improvement in readability so not sure if it is worth it.</p>",
        "id": 403236019,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700510198
    },
    {
        "content": "<p>I think it's fine. In fact, I think it might make sense to just use <code>by measurability</code> as the default value for the various measurability assumptions you have around.</p>",
        "id": 403236330,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700510364
    },
    {
        "content": "<p>OK.  I'm taking a break for now but can implement these later (or Heather can, if she wants to look at it).  It's all pushed to Github.</p>",
        "id": 403236466,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700510410
    },
    {
        "content": "<p>If we had a similar <code>independence</code> tactic to resolve all the independence hypotheses then actually this begins to track the human proof reasonably well.</p>",
        "id": 403236673,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700510488
    }
]