[
    {
        "content": "<p>In the proof of the <a href=\"https://teorth.github.io/pfr/blueprint/sect0006.html#total-dist\">Bound on distance increments</a>, one needs to show that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mo stretchy=\"false\">[</mo><msubsup><mi>X</mi><mn>2</mn><mn>0</mn></msubsup><mo separator=\"true\">;</mo><msup><mi>W</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>d</mi><mo stretchy=\"false\">[</mo><msubsup><mi>X</mi><mn>2</mn><mn>0</mn></msubsup><mo separator=\"true\">;</mo><msup><mi>W</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">d[X_2^0; W&#x27; | S] = d[X_2^0; W&#x27; | S]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msubsup><mi>X</mi><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup><mo>:</mo><mi mathvariant=\"normal\">Ω</mi><mo>→</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">X_i, X_i&#x27; : \\Omega \\to G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0106em;vertical-align:-0.2587em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-2.4413em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2587em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Ω</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> are random variables, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo>=</mo><msub><mi>X</mi><mn>1</mn></msub><mo>+</mo><msubsup><mi>X</mi><mn>1</mn><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">W = X_1 + X_1&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.2481em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>W</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><msub><mi>X</mi><mn>2</mn></msub><mo>+</mo><msubsup><mi>X</mi><mn>2</mn><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">W&#x27; = X_2 + X_2&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.2481em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><mi>W</mi><mo>+</mo><msup><mi>W</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">S = W + W&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>. </p>\n<p>Edit: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>X</mi><mn>2</mn><mn>0</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">X_2^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0622em;vertical-align:-0.2481em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span></span></span></span> is some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-valued random variable.</p>\n<p>The proof mentions this might require a helper lemma for Ruzsa distances, which I am guessing is something of the form </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">ruzsa_helper_lemma</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span>  <span class=\"bp\">Ω'</span>  <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hB</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hC</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">B</span> <span class=\"bp\">|</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>(with some extra  assumptions about e.g. measurability).</p>\n<p>My attempts at proving this so far have relied on using <code>cond_rdist'_eq_sum</code>, but I haven't been able to make much progress past that point. Would anyone have some suggestions on which parts of the API I should be working with?</p>",
        "id": 404708349,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1701201660
    },
    {
        "content": "<p>I think some variant of <a href=\"https://teorth.github.io/pfr/docs/find/?pattern=cond_rdist_of_inj_map#doc\">pfr#cond_rdist_of_inj_map</a> for <code>cond_rdist'</code>is what you're looking for. I think you can deduce the half-dependent version from the dependent version with <a href=\"https://teorth.github.io/pfr/docs/find/?pattern=cond_rdist_of_const#doc\">pfr#cond_rdist_of_const</a> (though that might come with a non-empty assumption)</p>",
        "id": 404719777,
        "sender_full_name": "Arend Mellendijk",
        "timestamp": 1701206372
    },
    {
        "content": "<p>Thanks for the advice, I'll have a go at that!</p>",
        "id": 404811266,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1701246680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"376152\">@Paul Lezeau</span> would an independence hypothesis be fine in your helper lemma? Also, would it be sufficient for your use case if X has the same type as A,B and C? If yes, here is an almost complete proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">ruzsa_helper_lemma'</span>\n    <span class=\"o\">[</span><span class=\"n\">IsProbabilityMeasure</span> <span class=\"o\">(</span><span class=\"n\">ℙ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"bp\">Ω</span><span class=\"o\">)]</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">hX</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hB</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hC</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h_indep</span> <span class=\"o\">:</span> <span class=\"n\">IndepFun</span> <span class=\"n\">X</span> <span class=\"o\">(⟨</span><span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"o\">⟩))</span> <span class=\"o\">:</span>\n    <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">B</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">let</span> <span class=\"n\">π</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">×</span> <span class=\"n\">G</span> <span class=\"bp\">→+</span> <span class=\"n\">G</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">toFun</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">x.2</span> <span class=\"bp\">-</span> <span class=\"n\">x.1</span>\n    <span class=\"n\">map_zero'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n    <span class=\"n\">map_add'</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">↦</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Prod.snd_add</span><span class=\"o\">,</span> <span class=\"n\">Prod.fst_add</span><span class=\"o\">,</span>\n      <span class=\"n\">ElementaryAddCommGroup.sub_eq_add</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">abel</span> <span class=\"o\">}</span>\n  <span class=\"k\">let</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">4</span> <span class=\"bp\">→</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"bp\">↦</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">hY_meas</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n  <span class=\"k\">calc</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">B</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n    <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">|</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">#</span> <span class=\"n\">B</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">cond_rdist_of_const</span> <span class=\"n\">hX</span><span class=\"o\">]</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">π</span> <span class=\"bp\">∘</span> <span class=\"o\">⟨</span><span class=\"bp\">-</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)⟩</span> <span class=\"bp\">|</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">#</span> <span class=\"n\">π</span> <span class=\"bp\">∘</span> <span class=\"o\">⟨</span><span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">⟩</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">congr</span>\n        <span class=\"bp\">·</span> <span class=\"n\">ext1</span> <span class=\"n\">ω</span><span class=\"bp\">;</span> <span class=\"n\">simp</span>\n        <span class=\"bp\">·</span> <span class=\"n\">ext1</span> <span class=\"n\">ω</span>\n          <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">AddMonoidHom.coe_mk</span><span class=\"o\">,</span> <span class=\"n\">ZeroHom.coe_mk</span><span class=\"o\">,</span> <span class=\"n\">Function.comp_apply</span><span class=\"o\">,</span> <span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">add_apply</span><span class=\"o\">]</span>\n          <span class=\"n\">abel</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">π</span> <span class=\"bp\">∘</span> <span class=\"o\">⟨</span><span class=\"n\">Y</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"mi\">2</span><span class=\"o\">⟩</span> <span class=\"bp\">|</span> <span class=\"n\">Y</span> <span class=\"mi\">2</span> <span class=\"bp\">#</span> <span class=\"n\">π</span> <span class=\"bp\">∘</span> <span class=\"o\">⟨</span><span class=\"n\">Y</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"mi\">3</span><span class=\"o\">⟩</span> <span class=\"bp\">|</span> <span class=\"n\">Y</span> <span class=\"mi\">3</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">congr</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">X</span> <span class=\"bp\">|</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">cond_rdist_of_inj_map'</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">hY_meas</span> <span class=\"n\">π</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">sub_right_injective</span><span class=\"o\">)]</span>\n        <span class=\"bp\">·</span> <span class=\"n\">congr</span>\n        <span class=\"bp\">·</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- ⊢ IndepFun (⟨Y 0, Y 2⟩) (⟨Y 1, Y 3⟩) -- deduce it from h_indep</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">cond_rdist_of_const</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hX.neg</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"c1\">-- because ElementaryAddCommGroup G 2</span>\n        <span class=\"n\">congr</span>\n        <span class=\"n\">simp</span>\n</code></pre></div>\n<p><code>cond_rdist_of_inj_map'</code> is the generalization of <code>cond_rdist_of_inj_map</code>  with <code>π : G × G →+ G'</code> for some other group <code>G'</code> instead of the special case <code>π : G × G →+ G × G</code> we have now (and in the code above <code>G' = G</code>). If the added assumptions are fine for the use you want to make of the lemma, I'll PR that.</p>",
        "id": 404962521,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1701297728
    },
    {
        "content": "<p>By the way I have no idea how to prove the measurability goal about <code>Y</code> because I don't know how to get to 4 goals corresponding to <code>i=0</code>, <code>i=1</code>,<code>i=2</code> and <code>i=3</code>. I never work with <code>Fin</code>. How would I do that?</p>",
        "id": 404965464,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1701299062
    },
    {
        "content": "<p>Does <code>fin_cases i</code> help?</p>",
        "id": 404965764,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1701299226
    },
    {
        "content": "<p>Yes, that's exactly what I was looking for. Thanks!</p>",
        "id": 404966163,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1701299411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"350992\">Rémy Degenne</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Helper.20lemma.20for.20.28conditional.29.20Ruzsa.20distance/near/404962521\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"376152\">Paul Lezeau</span> would an independence hypothesis be fine in your helper lemma? Also, would it be sufficient for your use case if X has the same type as A,B and C? If yes, here is an almost complete proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">ruzsa_helper_lemma'</span>\n    <span class=\"o\">[</span><span class=\"n\">IsProbabilityMeasure</span> <span class=\"o\">(</span><span class=\"n\">ℙ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"bp\">Ω</span><span class=\"o\">)]</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">hX</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hB</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hC</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h_indep</span> <span class=\"o\">:</span> <span class=\"n\">IndepFun</span> <span class=\"n\">X</span> <span class=\"o\">(⟨</span><span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"o\">⟩))</span> <span class=\"o\">:</span>\n    <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">B</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">let</span> <span class=\"n\">π</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">×</span> <span class=\"n\">G</span> <span class=\"bp\">→+</span> <span class=\"n\">G</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">toFun</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">x.2</span> <span class=\"bp\">-</span> <span class=\"n\">x.1</span>\n    <span class=\"n\">map_zero'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n    <span class=\"n\">map_add'</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">↦</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Prod.snd_add</span><span class=\"o\">,</span> <span class=\"n\">Prod.fst_add</span><span class=\"o\">,</span>\n      <span class=\"n\">ElementaryAddCommGroup.sub_eq_add</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">abel</span> <span class=\"o\">}</span>\n  <span class=\"k\">let</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">4</span> <span class=\"bp\">→</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"bp\">↦</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">hY_meas</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n  <span class=\"k\">calc</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">B</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n    <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">|</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">#</span> <span class=\"n\">B</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">cond_rdist_of_const</span> <span class=\"n\">hX</span><span class=\"o\">]</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">π</span> <span class=\"bp\">∘</span> <span class=\"o\">⟨</span><span class=\"bp\">-</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)⟩</span> <span class=\"bp\">|</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">#</span> <span class=\"n\">π</span> <span class=\"bp\">∘</span> <span class=\"o\">⟨</span><span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">⟩</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">congr</span>\n        <span class=\"bp\">·</span> <span class=\"n\">ext1</span> <span class=\"n\">ω</span><span class=\"bp\">;</span> <span class=\"n\">simp</span>\n        <span class=\"bp\">·</span> <span class=\"n\">ext1</span> <span class=\"n\">ω</span>\n          <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">AddMonoidHom.coe_mk</span><span class=\"o\">,</span> <span class=\"n\">ZeroHom.coe_mk</span><span class=\"o\">,</span> <span class=\"n\">Function.comp_apply</span><span class=\"o\">,</span> <span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">add_apply</span><span class=\"o\">]</span>\n          <span class=\"n\">abel</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">π</span> <span class=\"bp\">∘</span> <span class=\"o\">⟨</span><span class=\"n\">Y</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"mi\">2</span><span class=\"o\">⟩</span> <span class=\"bp\">|</span> <span class=\"n\">Y</span> <span class=\"mi\">2</span> <span class=\"bp\">#</span> <span class=\"n\">π</span> <span class=\"bp\">∘</span> <span class=\"o\">⟨</span><span class=\"n\">Y</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"mi\">3</span><span class=\"o\">⟩</span> <span class=\"bp\">|</span> <span class=\"n\">Y</span> <span class=\"mi\">3</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">congr</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">X</span> <span class=\"bp\">|</span> <span class=\"k\">fun</span> <span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">cond_rdist_of_inj_map'</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">hY_meas</span> <span class=\"n\">π</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">sub_right_injective</span><span class=\"o\">)]</span>\n        <span class=\"bp\">·</span> <span class=\"n\">congr</span>\n        <span class=\"bp\">·</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- ⊢ IndepFun (⟨Y 0, Y 2⟩) (⟨Y 1, Y 3⟩) -- deduce it from h_indep</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">cond_rdist_of_const</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hX.neg</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">[</span><span class=\"n\">X</span> <span class=\"bp\">#</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"c1\">-- because ElementaryAddCommGroup G 2</span>\n        <span class=\"n\">congr</span>\n        <span class=\"n\">simp</span>\n</code></pre></div>\n<p><code>cond_rdist_of_inj_map'</code> is the generalization of <code>cond_rdist_of_inj_map</code>  with <code>π : G × G →+ G'</code> for some other group <code>G'</code> instead of the special case <code>π : G × G →+ G × G</code> we have now (and in the code above <code>G' = G</code>). If the added assumptions are fine for the use you want to make of the lemma, I'll PR that.</p>\n</blockquote>\n<p>Oh wow that looks great! In my case assuming some independence should be fine. I would however need <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> to be defined on a different type - would that modification be troublesome?</p>",
        "id": 405058485,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1701330330
    },
    {
        "content": "<p>I just finished the adaptation to different spaces. I'll PR it now.</p>",
        "id": 405059917,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1701330949
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"350992\">Rémy Degenne</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Helper.20lemma.20for.20.28conditional.29.20Ruzsa.20distance/near/405059917\">said</a>:</p>\n<blockquote>\n<p>I just finished the adaptation to different spaces. I'll PR it now.</p>\n</blockquote>\n<p>Ah wonderful I think that's exactly what I need! Thanks so much!</p>",
        "id": 405060061,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1701331005
    },
    {
        "content": "<p><a href=\"https://github.com/teorth/pfr/pull/122\">https://github.com/teorth/pfr/pull/122</a></p>",
        "id": 405060288,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1701331104
    }
]