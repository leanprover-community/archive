[
    {
        "content": "<p>Time for another rollover!  The previous outstanding tasks thread can be found <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Outstanding.20tasks.2C.20version.207.2E0\">here</a>.</p>\n<p>Now that entropy and Ruzsa distance is refactored to handle <code>FiniteRange</code> random variables rather than random variables taking values in a <code>Fintype</code>, we can begin to make more substantial progress on Chapter 11 of the blueprint (<a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html\">Weak PFR over the integers</a>).  In particular there are two preliminary lemmas (B.1 and B.2) that I had neglected to notice in the new blueprint whose statements are now formalized, and should be particularly easy to fill in, I think.  For most of the remaining lemmas in the section (B.3-B.9), we need to first formalize the statements before proving them (tasks C.1-C.6, together with the two formalization tasks already claimed by <span class=\"user-mention\" data-user-id=\"376152\">@Paul Lezeau</span> ).</p>\n<p>A. Existing claims</p>\n<ol>\n<li><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> is gradually porting various stable PFR files over to Mathlib.  Expect <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump\">frequent Mathlib bumps</a> during this process.  It should be possible to work on extensions concurrently with this porting.</li>\n<li><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> and <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> claim the proof of <a href=\"https://teorth.github.io/pfr/blueprint/sect0009.html#bsg\">Balog-Szemeredi-Gowers</a></li>\n<li><span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> claims <a href=\"https://teorth.github.io/pfr/blueprint/sect0009.html#approx-hom-pfr\">Approximate homomorphism form of PFR</a>.</li>\n<li><span class=\"user-mention\" data-user-id=\"376152\">@Paul Lezeau</span>  claims the formalization of <a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#torsion-free-doubling\">Torsion-free doubling</a>  and <a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#torsion-dist-shrinking\">Torsion distance shrinking</a>.</li>\n<li><span class=\"user-mention\" data-user-id=\"376152\">@Paul Lezeau</span>  claims the API for <a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#dimension-def\">dimension</a>.</li>\n</ol>\n<p>B. Outstanding proof formalization tasks:</p>\n<ol>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0003.html#dist-zero\">Distance from zero</a>  This should be an easy application of existing Ruzsa distance inequality machinery.  <strong>Established by <span class=\"user-mention\" data-user-id=\"605003\">@Jonas Bayer</span> </strong></li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0005.html#fibring-ineq\">Fibring inequality</a> This should be an easy corollary of <a href=\"https://teorth.github.io/pfr/blueprint/sect0005.html#fibring-ident\">General fibring identity</a> and existing entropy machinery. <strong>Established by <span class=\"user-mention\" data-user-id=\"605003\">@Jonas Bayer</span> </strong></li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0003.html#dist-projection\">Projection entropy and distance</a> An easy application of existing entropy inequalities. </li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#torsion-free-doubling\">Torsion-free doubling</a>  This is similar to many other entropy inequalities already in PFR, though somewhat lengthy.  Awaits formalization.</li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#torsion-dist-shrinking\">Torsion distance shrinking</a> Easy corollary of B.4. Awaits formalization.</li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#app-ent-pfr\">Apply entropic PFR</a> Easy application of existing PFR lemmas. </li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#pfr-projection\">PFR projection</a> One tricky thing is to locate a maximal subgroup H obeying a certain property, and show that the quotient is still an elementary abelian 2-group. </li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#single-fibres\">Single fibres</a> Involves some manipulations of finite sums, but nothing too intimidating I think. </li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#weak-pfr-asymm\">Asymmetric weak PFR</a> Involves a strong induction, but should be doable. </li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#weak-pfr-symm\">Symmetric weak PFR</a> Easy corollary of B.9.</li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#weak-pfr-int\">Weak PFR over integers</a> Easy corollary of B.9. </li>\n</ol>\n<p>C. Outstanding documentation/blueprint/examples/statement formalization tasks:</p>\n<ol>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#app-ent-pfr\">Apply entropic PFR</a> Should be straightforward to formalize.  <strong>Completed by <span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> </strong></li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#pfr-projection\">PFR projection</a> Also straightforward.  <strong>Completed by <span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> </strong></li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#single-fibres\">Single fibres</a> A bit messy, but straightforward.  <strong>Completed by <span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> </strong></li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#weak-pfr-asymm\">Asymmetric weak PFR</a> Straightforward to formalize. <strong>Completed by <span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> </strong></li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#weak-pfr-symm\">Symmetric weak PFR</a> Also straightforward. <strong>Completed by <span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> </strong></li>\n<li><a href=\"https://teorth.github.io/pfr/blueprint/sect0011.html#weak-pfr-int\">Weak PFR over integers</a> Also straightforward.  <strong>Completed by <span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> </strong></li>\n</ol>\n<p>D. Outstanding administrative tasks:</p>\n<ol>\n<li>Add example showcasing weak PFR to examples.lean.  <strong>Completed by <span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> </strong></li>\n<li>Update <code>HomPFR</code>, <code>ApproxHomPFR</code>, <code>examples.lean</code> to accommodate the improvement of constants from 12 to 11. <strong>Completed by <span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> </strong></li>\n</ol>",
        "id": 408468266,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702837793
    },
    {
        "content": "<p>By the way, just to avoid duplication of work, I should mention I'm also currently working on some API for <code>dimension</code> (and filling out the sorries)</p>",
        "id": 408921944,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1702988214
    },
    {
        "content": "<p>I'd like to claim 1. Distance from zero unless anyone else has started working on that.</p>",
        "id": 408961859,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1703001232
    },
    {
        "content": "<p>The claim is formalized with the additional assumption <code>IsProbabilityMeasure μ'</code>. Do we need the version with <code>IsFiniteMeasure</code>? This would require some API changes: <code>entropy_const</code> in a <code>IsFiniteMeasure</code> version and also a new Mathlib lemma that connects <code>Measure.prod</code> and multiplication of a measure by a constant.</p>",
        "id": 408969038,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1703003487
    },
    {
        "content": "<p>The proof is in <a href=\"https://github.com/TBUGTB/pfr\">https://github.com/TBUGTB/pfr</a>, but before PRing I'd like to clean up some of the git history in my fork.</p>",
        "id": 408969776,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1703003741
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 408971135,
        "sender_full_name": "Terence Tao",
        "timestamp": 1703004208
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"605003\">Jonas Bayer</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Outstanding.20tasks.2C.20version.208.2E0/near/408969038\">said</a>:</p>\n<blockquote>\n<p>The claim is formalized with the additional assumption <code>IsProbabilityMeasure μ'</code>. Do we need the version with <code>IsFiniteMeasure</code>? This would require some API changes: <code>entropy_const</code> in a <code>IsFiniteMeasure</code> version and also a new Mathlib lemma that connects <code>Measure.prod</code> and multiplication of a measure by a constant.</p>\n</blockquote>\n<p><code>IsProbabilityMeasure</code> should suffice for all PFR applications I think.   If it can be cheaply extended to <code>IsFiniteMeasure</code>, that's great, but it's a somewhat low priority.</p>",
        "id": 408976623,
        "sender_full_name": "Terence Tao",
        "timestamp": 1703005003
    },
    {
        "content": "<p>It seems to me that the proof of B.3 (<a href=\"https://teorth.github.io/pfr/blueprint/sect0003.html#dist-projection\">Projection entropy and distance</a>) is a bit strange. For example, it wants to add up inequalitie<strong>s</strong> but there is only one. </p>\n<p>My idea would be to move the lemma to the fibring file and use the Fibring inequality. Then it's just applying <code>ent_of_indep_diff_lower</code> and using that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> is uniform on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>.</p>\n<p>I.e. I'd like to claim B.3 and could also update the proof in the blueprint if that is helpful.</p>",
        "id": 409131141,
        "sender_full_name": "Jonas Bayer",
        "timestamp": 1703065331
    }
]