[
    {
        "content": "<p>Just a note to apologize for creating a number of small build errors in the Lean code.  An unintended consequence of accepting a PR to update Mathlib was that my local copy decided that it had to rebuild all of Mathlib, a process that is still ongoing right now.  I thought somewhat naively that I could continue coding without the safety net of actually compiling the code but that was probably a mistake.  Anyway, hopefully it will all be straightened out soon (and I will be significantly more wary of accepting major update PRs in the future).  Thanks to everyone who already helped clean up the code!</p>",
        "id": 403028057,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700411212
    },
    {
        "content": "<p>If it is rebuilding from scratch, you should probably run <code>lake exe cache get</code></p>",
        "id": 403028291,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700411332
    },
    {
        "content": "<p>It will significantly speed up the process</p>",
        "id": 403028348,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700411371
    },
    {
        "content": "<p>Yeah, I tried that but I think I made the mistake of doing it while VScode was still running and it created some weird issues.  I'm currently at 1283 of 1644 and am inclined to just try to wait it out</p>",
        "id": 403028374,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700411386
    },
    {
        "content": "<p>Depending on your machine that is easily enough time to make some fresh coffee (in the range of 5-15 minutes)</p>",
        "id": 403028621,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700411539
    },
    {
        "content": "<p><code>open ProbabilityTheory</code> as well as replacing <code>U : Ω → H</code> by <code>U : Ω → G</code> in the two formulations of entropic_pfr fixes the build, but I don't know if <code>isUniform H U μ</code> is supposed to imply that the measure of the complement of H is zero. I can submit a PR if it is.</p>",
        "id": 403029891,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700412307
    },
    {
        "content": "<p>Thanks, you are right, the intention is for <code>U</code> to range in <code>G</code>, and for <code>isUniform</code> to check that the complement of <code>H</code> is almost surely not attained.</p>\n<p>It's somewhat eye-opening for me to realize how much I implicitly rely on the Lean infoview to check my work at every line; the moment that safety net is gone, all sorts of typos start creeping in...</p>",
        "id": 403030113,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700412477
    },
    {
        "content": "<p>You can always close VS Code, open a terminal inside the project folder and run <code>lake exe cache get</code> there.</p>",
        "id": 403030789,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1700412929
    },
    {
        "content": "<p>What you encountered earlier is that the Lean extension builds the files and <em>writes them to your disk</em>, meaning that any attempt of getting cache will fail because the freshly downloaded cache will have been overwritten by the extension.</p>",
        "id": 403030948,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1700413034
    },
    {
        "content": "<p>Yeah, but it's a risk-reward calculation at this point.  I'm at 1461/1644 right now and am wary that if I touch anything at this point I go back to 0/1644 (unlikely, I know, but it looks tantalisingly close right now).</p>",
        "id": 403031039,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700413090
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Build.20errors.20.28sorry.29/near/403030948\">said</a>:</p>\n<blockquote>\n<p>What you encountered earlier is that the Lean extension builds the files and <em>writes them to your disk</em>, meaning that any attempt of getting cache will fail because the freshly downloaded cache will have been overwritten by the extension.</p>\n</blockquote>\n<p>That's what I thought as well, but wouldn't this only lead to 8 (or however many cores you have) rebuilt files, since the downloaded cache and the locally-generated file will be the same? Or does <code>lake</code> check all hashes before building all files instead of doing it on-demand?</p>",
        "id": 403031792,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700413499
    },
    {
        "content": "<p>I understand it processes files \"top-down\" starting with <code>Mathlib.lean</code> and ends up building them bottom-up, but there still seems to be an opportunity for short-circuiting if the olean/hash is rechecked right before it actually gets built.</p>",
        "id": 403031955,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700413599
    },
    {
        "content": "<p>I'll take the liberty of pinging <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> (sorry for subscribing you here!)</p>",
        "id": 403032016,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700413629
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657719\">Terence Tao</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Build.20errors.20.28sorry.29/near/403031039\">said</a>:</p>\n<blockquote>\n<p>Yeah, but it's a risk-reward calculation at this point.  I'm at 1461/1644 right now and am wary that if I touch anything at this point I go back to 0/1644 (unlikely, I know, but it looks tantalisingly close right now).</p>\n</blockquote>\n<p>You never have to compile mathlib (unless you're editing mathlib itself), so in some sense there's 0 risk in aborting any attempt to compile mathlib. However it can sometimes be an art to get cache to work -- right now cache is failing to download 9 files for some reason (the experts are working on it). Right now my strategy is: (1) exit VS Code and fire up a command line (2) <code>lake exe cache get</code> (3) <code>lake build</code> (which will fix the \"9 files didn't work\" issue)  (4) safe to open VS Code again.</p>",
        "id": 403032716,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700414110
    },
    {
        "content": "<p>If <code>lake exe cache get</code> downloads all the files but fails to unpack them because Lean is still running (as a server for the editor), I've sometimes needed <code>lake exe cache unpack!</code> to fix the resulting mess.</p>",
        "id": 403033259,
        "sender_full_name": "Richard Copley",
        "timestamp": 1700414441
    },
    {
        "content": "<p>yeah, running <code>lake exe cache get</code> when there are some other Lean's running somewhere gives unpredictable results. Instead of closing VS Code I sometimes fire up a terminal and type <code>killall lean</code> and then <code>lake exe cache get</code>.</p>",
        "id": 403033748,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1700414758
    },
    {
        "content": "<p>Yay, it reached 1644/1644, and infoview is working again!  I'll add the lake suggestions to the troubleshooting section of my phrasebook, though, for future use.</p>",
        "id": 403035452,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700415763
    },
    {
        "content": "<p>Oh, wait.  <em>every</em> lean file wants to rebuild mathlib?  OK,  now I'm going to try the lake cache thing</p>",
        "id": 403035533,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700415825
    },
    {
        "content": "<p>Probably not necessary</p>",
        "id": 403035853,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700416041
    },
    {
        "content": "<p>Now that you built it once, it will be quicker</p>",
        "id": 403035888,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700416058
    },
    {
        "content": "<p>Hmm, <code>lake build</code> is actually building all of mathlib all over again, not just the 9 missing files.  (I'm currently at 609/1946).  A bit faster than before, though.</p>",
        "id": 403036539,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700416540
    },
    {
        "content": "<p>It should be done by now. lake should just be looking for  oleans + some other stuff and finding them at this point.</p>",
        "id": 403036853,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700416784
    },
    {
        "content": "<p>It seems to want do redo everything.</p>\n<p><a href=\"/user_uploads/3121/5efVVNVRa19dCn0N_sYm5Ijl/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/5efVVNVRa19dCn0N_sYm5Ijl/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/5efVVNVRa19dCn0N_sYm5Ijl/image.png\"></a></div>",
        "id": 403037025,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700416881
    },
    {
        "content": "<p>It is a strange feeling though to see multiple substantial PR contributions to the project occuring simultaneously right now while my own copy remains stalled.  This project has really started taking off...</p>",
        "id": 403037272,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700417002
    },
    {
        "content": "<p>Is the repository on github the latest version you are trying to build right now?</p>",
        "id": 403037359,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700417047
    },
    {
        "content": "<p>I believe so (plus or minus an hour or so)</p>",
        "id": 403037396,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700417075
    },
    {
        "content": "<p>What I do in those situations where the build is broken beyond my ability to fix it is delete the folder, clone again and <code>lake exe cache get</code>. Takes 2 minutes, does not require understanding lake, works every time. That's good only if you have no local changes you want to keep though.</p>",
        "id": 403038089,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1700417463
    },
    {
        "content": "<p>I just tried building it and it works for me.</p>",
        "id": 403038184,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700417523
    },
    {
        "content": "<p>Yeah, I did that once before for the symmetric project (ironically, again because I was trying to update mathlib).  I am close to taking that option right now, but I'll see if this most recent build fixes all issues first.  I wonder if there should just be a big button in the VSCode version control to do precisely this (i.e., nuke everything, clone from master, and retrieve cache).</p>",
        "id": 403038315,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700417594
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Build.20errors.20.28sorry.29/near/403038184\">said</a>:</p>\n<blockquote>\n<p>I just tried building it and it works for me.</p>\n</blockquote>\n<p>Well, it's good to know the problem is localized to my copy at least.  There were at least five different contributors to the project in the last few hours, so there doesn't seem to be any global issue.</p>",
        "id": 403038572,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700417761
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"350992\">Rémy Degenne</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Build.20errors.20.28sorry.29/near/403038089\">said</a>:</p>\n<blockquote>\n<p>What I do in those situations where the build is broken beyond my ability to fix it is delete the folder, clone again and <code>lake exe cache get</code>. Takes 2 minutes, does not require understanding lake, works every time. That's good only if you have no local changes you want to keep though.</p>\n</blockquote>\n<p>Though in the current situation with 9 missing files, one may still have to run <code>lake build</code>?  Not sure why it is deciding to build even the files that were successfully unpacked from cache though.</p>",
        "id": 403038737,
        "sender_full_name": "Terence Tao",
        "timestamp": 1700417866
    },
    {
        "content": "<p>Those 9 missing files don't cause a lot of building thankfully. If <code>lake exe cache get</code> was successful the build should be quick (either from <code>lake build</code> or from rebuilding the dependencies of a file of the project in vscode).</p>",
        "id": 403040651,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1700418953
    },
    {
        "content": "<p>Previously Lean wasn't fully killed when you closed VS Code and this led to problems when running <code>lake exe cache get</code> even on a terminal. Closing VS Code should be enough in the most recent version (which you just updated to) though.</p>",
        "id": 403044978,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700421621
    }
]