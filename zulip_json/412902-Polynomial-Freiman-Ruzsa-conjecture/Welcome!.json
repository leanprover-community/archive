[
    {
        "content": "<p>Hi everyone.  I am thinking of starting a project to formalize in Lean4 the recent proof of Timothy Gowers, Ben Green, Freddie Manners, and myself of the Polynomial Freiman-Ruzsa (PFR) conjecture (though, despite the name, it was actually first proposed by Katalin Marton).  The paper is at <a href=\"https://arxiv.org/abs/2311.05762\">https://arxiv.org/abs/2311.05762</a> .  I have done one formalization project already (an elementary twelve-page paper); this paper is longer (28 pages) but actually I think a large part of it will be quite routine to formalize; the most challenging part in my opinion is actually Appendix A, in which the Shannon entropy inequalities and some of their consequences in additive combinatorics are established.  In particular some thought may need to be given on how to formalize probability spaces and random variables for the purposes of establishing entropy inequalities; see the thread <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Should.20there.20be.20a.20ProbabilitySpace.20class.3F\">https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Should.20there.20be.20a.20ProbabilitySpace.20class.3F</a> for more discussion.</p>\n<p>I've started a rudimentary github on this project at <a href=\"https://github.com/teorth/pfr\">https://github.com/teorth/pfr</a> , though there is currently not much content there.</p>\n<p>I would be interested in opening up this project to be more collaborative than my previous project, which would require a bit more formal organization.  In particular I am interested in trying to set up a blueprint for this proof as an early step, which from what I gather from <a href=\"#narrow/stream/113488-general/topic/Lean.204.20project.20blueprint/near/398052467\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Lean.204.20project.20blueprint/near/398052467</a> is now available (at least in some beta form) for Lean4.  Will be happy to accept volunteers to contribute to this project in whatever capacity they feel able to.  In particular I would appreciate any advice on how to make a Lean collaboration work as smoothly and efficiently as possible.</p>\n<p>Anyway, I guess this thread in particular can be used for general questions and discussions about the project.  I don't have a particular timeframe in mind; the important thing for me is not so much to get the formalization done (we went over the paper pretty carefully, I'm quite confident it is correct already <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>) but to understand the formalization process better, particularly with regards to the collaborative aspect.  There is also the possibility that some of the lemmas and theorems formalized in this project could somehow get converted into something suitable for mathlib, but I will defer to the mathlib experts as to whether this is realistic (or even desirable).</p>",
        "id": 401840129,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699907511
    },
    {
        "content": "<p>Very happy to participate! I was actually going to ask Tim about whether he was interested in a formalisation, because this is exactly the kind of things I do.</p>",
        "id": 401858180,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699915739
    },
    {
        "content": "<p>The worst thing about you taking up Lean is that I don't get to formalise your breakthroughs anymore. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 401858410,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699915844
    },
    {
        "content": "<p>I can set the project up for you (mostly thinking about the blueprint), given that I very recently did it for <a href=\"https://github.com/YaelDillies/LeanAPAP\">LeanAPAP</a>.</p>",
        "id": 401858504,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699915895
    },
    {
        "content": "<p>A couple of comments about the Shannon entropy stuff. I formalised some of the cases of the standard conditional entropy lemmas over <em>finite</em> probability spaces, but I held off on PRing it because mathlib probably ought to have entropy defined on a general probability space instead. (This was to formalise <a href=\"https://arxiv.org/abs/2211.09055\">https://arxiv.org/abs/2211.09055</a> and the exponential ramsey project). I'm entirely ambivalent on which should be in this project. Doing it in a special case would be easier, but doing it in the general case would make moving to mathlib smoother.</p>",
        "id": 401860379,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1699916824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Welcome!/near/401860379\">said</a>:</p>\n<blockquote>\n<p>A couple of comments about the Shannon entropy stuff. I formalised some of the cases of the standard conditional entropy lemmas over <em>finite</em> probability spaces, but I held off on PRing it because mathlib probably ought to have entropy defined on a general probability space instead. (This was to formalise <a href=\"https://arxiv.org/abs/2211.09055\">https://arxiv.org/abs/2211.09055</a> and the exponential ramsey project). I'm entirely ambivalent on which should be in this project. Doing it in a special case would be easier, but doing it in the general case would make moving to mathlib smoother.</p>\n</blockquote>\n<p>The way I see it there is a hierarchy of generality for Shannon entropy stuff:</p>\n<ol>\n<li>Random variables on finite probability spaces, taking values in a finite set.</li>\n<li>Random variables on arbitrary probability spaces, taking values in a finite set.</li>\n<li>Random variables on arbitrary probability spaces, taking values in a finite subset of an infinite range.</li>\n<li>Random variables on arbitrary probability spaces, taking values in at most countable subset of an infinite range.</li>\n</ol>\n<p>(There is also the theory of continuous (or \"differential\") entropy, intended for random variables with an absolutely continuous probability distribution measure, but that's somewhat distinct from this more discrete theory.)</p>\n<p>For this particular project we could in fact get away with just 1., but it seems straightforward to formalize 2. and not much harder to do 3.  4. means a bit more fiddling around with infinite series and having to add assumptions all over the place that entropies are finite, but is certainly doable, if totally unnecessary for the current project.  Perhaps if we write all the methods in a sufficiently \"object oriented\" fashion it might be possible to port over from say 2. to 4. in a manner that won't seriously break any code that relies on 2?</p>",
        "id": 401860895,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699917136
    },
    {
        "content": "<p>That sounds reasonable to me (and by your hierarchy the stuff I have is all 1). But I'd like to hear from the probability experts of mathlib for the differences expected between 2, 3, and 4. <span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span>, perhaps?</p>",
        "id": 401861189,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1699917330
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Welcome!/near/401861189\">said</a>:</p>\n<blockquote>\n<p>That sounds reasonable to me (and by your hierarchy the stuff I have is all 1). But I'd like to hear from the probability experts of mathlib for the differences expected between 2, 3, and 4. <span class=\"user-mention silent\" data-user-id=\"350992\">Rémy Degenne</span>, perhaps?</p>\n</blockquote>\n<p>My main concerns are how to smoothly implement the following operations:</p>\n<ol>\n<li>\n<p>Deriving conditional entropy (or entropic sumset inequalities) from their unconditional counterparts, e.g., deriving the conditional Shannon inequality <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> {\\bf H}(X,Y|Z) \\leq {\\bf H}(X|Z) + {\\bf H}(Y|Z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span> from the unconditional version <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> {\\bf H}(X,Y) \\leq {\\bf H}(X) + {\\bf H}(Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span>.  I had in mind working with some sort of <code>ProbabilitySpace</code> class that supports a conditioning operation (and I think I now know how to handle conditioning to empty events, by allowing the probability measure to in fact be identically zero).  But the sentiment I got from others is that this may be unnecessarily complicated, and there may be other approaches.</p>\n</li>\n<li>\n<p>We will often need to take independent trials of one or two random variables, and at one place (Lemma A.1) we need to take conditionally independent trials.  Because everybody will have a finitely supported probability distribution function, one could build these trials by hand (with a custom sample space designed just to support those trials and no other variables), but in the interests of generality (particularly if working at hierarchy level 4) one may want to proceed using some of the measure theory machinery already in Mathlib.  (But the full Kolmogorov extension theorem will <em>not</em> be required in this project.)</p>\n</li>\n<li>\n<p>We will be dealing with moderately complicated entropic quantities such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">I</mi><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mn>1</mn></msub><mo>+</mo><msub><mi>Y</mi><mn>2</mn></msub><mo>:</mo><msub><mi>Y</mi><mn>1</mn></msub><mo>+</mo><msub><mi>Y</mi><mn>3</mn></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>Y</mi><mn>1</mn></msub><mo>+</mo><msub><mi>Y</mi><mn>2</mn></msub><mo>+</mo><msub><mi>Y</mi><mn>3</mn></msub><mo>+</mo><msub><mi>Y</mi><mn>4</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> {\\bf I} (Y_1 + Y_2 : Y_1 + Y_3 | Y_1 + Y_2 + Y_3 + Y_4 ) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">I</span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>, and I would like the notation to not get out of control (in particular I would like to hide the ambient probability measure as much as possible).  This will be a particular concern if we ever want to generalize to higher <code>p</code>, where for instance we will often need to consider entropic quantities of tuples of random variables (not just individual random variables), e.g., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> {\\bf H}(X_1,\\dots,X_p)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>.</p>\n</li>\n</ol>",
        "id": 401861891,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699917724
    },
    {
        "content": "<p>I would love to participate if I can be useful. Most of the paper itself (by which I mean I am taking the external citations on faith) doesn't seem to use math that I haven't learnt or encountered in theoretical CS. I cannot be 100% certain about it until I read enough to grasp the key arguments. I'd be grateful for any guidance in this matter.</p>",
        "id": 401863115,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699918421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Welcome!/near/401863115\">said</a>:</p>\n<blockquote>\n<p>I would love to participate if I can be useful. Most of the paper itself (by which I mean I am taking the external citations on faith) doesn't seem to use math that I haven't learnt or encountered in theoretical CS. I cannot be 100% certain about it until I read enough to grasp the key arguments. I'd be grateful for any guidance in this matter.</p>\n</blockquote>\n<p>It's almost entirely self-contained.  The Shannon inequalities make one or two appeals to Jensen's inequality but this can be taken as a black box and is almost formalized already both in the repo and in a couple other places.  There is one small lemma from a previous paper of mine that is needed (Lemma 2.2, characterizing random variables of zero doubling) but this is a relatively easy lemma (the main tool needed will be a converse to Jensen's inequality that indicates when equality holds in the Shannon inequalities).  The derivation of consequences of PFR, such as Theorem 1.3, are contained in other papers; one could imagine formalizing these applications as well as just the core Theorem 1.1 if we have enough capacity.</p>",
        "id": 401863662,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699918685
    },
    {
        "content": "<p>I am familiar with at least some forms of Jensen's inequality, shannon entropy etc. It came up in last semester's ML theory reading group I organized among other places.</p>",
        "id": 401864085,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699918939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Welcome!/near/401863115\">said</a>:</p>\n<blockquote>\n<p>I would love to participate if I can be useful. Most of the paper itself (by which I mean I am taking the external citations on faith) doesn't seem to use math that I haven't learnt or encountered in theoretical CS. I cannot be 100% certain about it until I read enough to grasp the key arguments. I'd be grateful for any guidance in this matter.</p>\n</blockquote>\n<p>In principle, a blueprint should help a huge amount, especially for people in your position. With a well-written blueprint, someone can contribute without needing to understand the key arguments (and this happened a fairly large amount in LTE and sphere eversion, in my understanding)</p>",
        "id": 401864088,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1699918941
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 401864174,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699919010
    },
    {
        "content": "<p>With LTE the blueprint kind of evolved at the same time as the formalisation. Really the key thing which made LTE parallelisable was the nice collection of sorrys in the repo at any given stage, which people could claim as their own and then they'd have a well-defined task to work on and wouldn't need to understand the entire argument.</p>",
        "id": 401864370,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699919114
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Welcome!/near/401864088\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Welcome!/near/401863115\">said</a>:</p>\n<blockquote>\n<p>I would love to participate if I can be useful. Most of the paper itself (by which I mean I am taking the external citations on faith) doesn't seem to use math that I haven't learnt or encountered in theoretical CS. I cannot be 100% certain about it until I read enough to grasp the key arguments. I'd be grateful for any guidance in this matter.</p>\n</blockquote>\n<p>In principle, a blueprint should help a huge amount, especially for people in your position. With a well-written blueprint, someone can contribute without needing to understand the key arguments (and this happened a fairly large amount in LTE and sphere eversion, in my understanding)</p>\n</blockquote>\n<p>This paper feels close enough to the kind of stuff we do in TCS.</p>",
        "id": 401864372,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699919116
    },
    {
        "content": "<p>I would even say much more elegant. It isn't something that I can't understand, at least at a high level with some blackboxes with reasonable effort.</p>",
        "id": 401864403,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699919136
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Welcome!/near/401864370\">said</a>:</p>\n<blockquote>\n<p>With LTE the blueprint kind of evolved at the same time as the formalisation. Really the key thing which made LTE parallelisable was the nice collection of sorrys in the repo at any given stage, which people could claim as their own and then they'd have a well-defined task to work on and wouldn't need to understand the entire argument.</p>\n</blockquote>\n<p>How early in the process of the LTE were the key definitions formalized, so that one could even <em>have</em> sorries in the first place?</p>",
        "id": 401864531,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699919200
    },
    {
        "content": "<p>Many <em>definitions</em> were either completely or partially made with <code>sorry</code> initially in LTE. The definitions that went into the first target were done very early on, but things like <code>Ext</code> and even the definition of condensed sets themselves didn't exist for a long time. In some sense you can write definitions using <code>sorry</code>, and state some lemmas that explain how the definitions should behave (also initially proved with <code>sorry</code>, for obvious reasons). But then you can use those lemmas without ever relying on any implementations.</p>",
        "id": 401864821,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1699919393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Welcome!/near/401864821\">said</a>:</p>\n<blockquote>\n<p>Many <em>definitions</em> were either completely or partially made with <code>sorry</code> initially in LTE. The definitions that went into the first target were done very early on, but things like <code>Ext</code> and even the definition of condensed sets themselves didn't exist for a long time. In some sense you can write definitions using <code>sorry</code>, and state some lemmas that explain how the definitions should behave (also initially proved with <code>sorry</code>, for obvious reasons). But then you can use those lemmas without ever relying on any implementations.</p>\n</blockquote>\n<p>That's good to know.  A large portion of the proof (pretty much everything outside the appendices, actually), could proceed in such a <code>sorry</code> fashion, once one fixes at least the <em>syntax</em> for the key concepts such as conditional Shannon entropy <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">[</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\"> {\\bf H}[X | Y]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">]</span></span></span></span>, conditional mutual information, and Ruzsa entropic distance (and its conditional versions), which are defined in terms of Shannon entropy and also independent trials.  There will be a dozen or more small lemmas about entropy (including \"obvious\" things like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">[</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi mathvariant=\"bold\">H</mi><mo stretchy=\"false\">[</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>X</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">{\\bf H}[X,Y] = {\\bf H}[Y,X]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">H</span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">]</span></span></span></span> that we often don't bother to state explicitly) but I could imagine an early stage of the formalization process identifying all these lemmas and adding them to a large pile of sorries for the portion of the project roughly corresponding to Appendix A of the paper, which I anticipate to be the hardest part actually (though the whole project doesn't look too scary to me, as formalization projects go).</p>",
        "id": 401865521,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699919785
    },
    {
        "content": "<p>One thing to keep in mind is that different random variables may be defined on different sample spaces (in which case the concept of independence makes no sense, but some other statistics, such as Ruzsa distance, are still well defined), and one will have to pay a bit of attention to this when formalizing even the statements of most of the steps in the paper.</p>",
        "id": 401865802,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699919929
    }
]