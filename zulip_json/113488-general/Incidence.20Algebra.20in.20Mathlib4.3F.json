[
    {
        "content": "<p>Is the notion of incidence algebra (and reduced incidence algebra) for a locally finite poset somewhere on Mathlib4? (I could not find it using mathlib4 docs, but it might be there and i might have missed it). And, if not on Mathlib4, is there a Lean4 formalization off Mathlib4?</p>",
        "id": 399928689,
        "sender_full_name": "Sina",
        "timestamp": 1698929438
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/11656\">!3#11656</a> apparently has some work in this direction</p>",
        "id": 399932563,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698930513
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span></p>",
        "id": 399936757,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698931878
    },
    {
        "content": "<p>Looks like Yaël has ported it here <a href=\"https://github.com/YaelDillies/LeanCamCombi/blob/mathport/LeanCamCombi/Incidence.lean\">https://github.com/YaelDillies/LeanCamCombi/blob/mathport/LeanCamCombi/Incidence.lean</a>, I haven't tried the lean 4 version but the lean 3 one was in write usable shape I think</p>",
        "id": 399938950,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698932595
    },
    {
        "content": "<p>Yes, I ported it two days ago and am currently fixing the errors. I will then move the prereqs to the correct place inside <code>LeanCamCombi.Mathlib</code> and PR the prereqs that have no other prereqs.</p>",
        "id": 399949304,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1698935208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"420917\">@Sina</span> do you know more specifically what sort of results you wanted about incidence algebras? We had some future plans but as you see this has been left dormant for a couple of years!</p>",
        "id": 399955980,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698936821
    },
    {
        "content": "<p>Nothing too deep, but I am mentoring two undergraduate students who would like to formalize inlcusion-exclusion principle in combinatorics using the incidence algebra and convolution with the Möbius function. Do you know if this is done somewhere with Lean4 or Lean3?</p>",
        "id": 399956770,
        "sender_full_name": "Sina",
        "timestamp": 1698936957
    },
    {
        "content": "<p>We are following the notes by P.Bartlett here: <a href=\"https://github.com/sinhp/Proofs-F23-Projects/blob/master/resources/math_116_s2015_lecture4.pdf\">https://github.com/sinhp/Proofs-F23-Projects/blob/master/resources/math_116_s2015_lecture4.pdf</a></p>",
        "id": 399957048,
        "sender_full_name": "Sina",
        "timestamp": 1698937009
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/Incidence.20Algebra.20in.20Mathlib4.3F/near/399949304\">said</a>:</p>\n<blockquote>\n<p>Yes, I ported it two days ago and am currently fixing the errors. I will then move the prereqs to the correct place inside <code>LeanCamCombi.Mathlib</code> and PR the prereqs that have no other prereqs.</p>\n</blockquote>\n<p>OK, I just found time to look at this! Lots of stuff in here are very useful for us! Looks great!</p>",
        "id": 399957803,
        "sender_full_name": "Sina",
        "timestamp": 1698937156
    },
    {
        "content": "<p>Also, the students I am mentoring are not math students so their background is limited. It is quite likely the formalization end up \"reinventing the wheel\" and not do it any the level of generality suitable for Mathlib4, but i still think it is very worthwhile for them to do so.</p>",
        "id": 399958865,
        "sender_full_name": "Sina",
        "timestamp": 1698937320
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> <br>\nI now see that you mention inclusion-exclusion type principles  in file you and <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> shared.</p>",
        "id": 399960257,
        "sender_full_name": "Sina",
        "timestamp": 1698937536
    },
    {
        "content": "<p>Yeah I think that was about as far as we got, proving moebius inversion. We were hoping to do some applications like PIE and classical mobius inversion but never got around to it</p>",
        "id": 399994717,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698947659
    },
    {
        "content": "<p>So sounds like a good project!</p>",
        "id": 399994730,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1698947668
    },
    {
        "content": "<p>Update: I've now finished fixing most of it, until the definition of <code>mu</code> actually, so I've pushed it to <code>main</code> and it will appear on <a href=\"https://yaeldillies.github.io/LeanCamCombi\">https://yaeldillies.github.io/LeanCamCombi</a> shortly.</p>",
        "id": 400385895,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699182571
    }
]