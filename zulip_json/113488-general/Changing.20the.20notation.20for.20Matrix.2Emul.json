[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/270676-lean4/topic/.2E.C2.B7.E2.AC.9D.20.5Brant.5D/near/383320363\">said</a>:</p>\n<blockquote>\n<p>Can't we just use <code>*</code> for matrix multiplication now? Have we tried it yet, or are we worried it's just going to cause elaboration hell?</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6487\">#6487</a>.</p>",
        "id": 383573657,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691663819
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/.2E.C2.B7.E2.AC.9D.20.5Brant.5D/near/383573657\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6487\">#6487</a>.</p>\n</blockquote>\n<p>After adding <code>@[default_instance]</code>, CI is happy with this!</p>",
        "id": 383866928,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691742519
    },
    {
        "content": "<p>A really trivial spin-off: <a href=\"https://github.com/leanprover-community/mathlib4/pull/6522\">#6522</a></p>",
        "id": 384037429,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691772872
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/Changing.20the.20notation.20for.20Matrix.2Emul/near/383573657\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/.2E.C2.B7.E2.AC.9D.20.5Brant.5D\">#lean4 &gt; .·⬝ [rant]</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 384090820,
        "sender_full_name": "Notification Bot",
        "timestamp": 1691787197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>, do you think it's possible/sensible to write a custom elaborator for matrix multiplication to help with some of the weirdness in that PR? In particular, something that says \"oh, you're multiplying <code>Matrix ?m ?n ?A</code> and <code>Matrix ?l ?o ?B</code>, let me unify ?A = ?B and <code>?n = ?l</code> for you before continuing\"</p>",
        "id": 384091464,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691787412
    },
    {
        "content": "<p>Isn't that the point of unification hints? Sorry if I'm speaking nonsense</p>",
        "id": 384091756,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1691787503
    }
]