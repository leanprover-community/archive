[
    {
        "content": "<p>Is it easy to have a linter for double declarations of the same variable? Like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>at the top of the file, and 600 lines below the same</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>shadowing the first one?</p>",
        "id": 393444103,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1695808431
    },
    {
        "content": "<p>Seems tricky, it could be that the second one is actually just resetting the implicitness from a third <code>variable (α : Type*)</code> somewhere in the middle.</p>",
        "id": 393479956,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695818712
    },
    {
        "content": "<p>Am I right about how that works? If I have <code>variable {α : Type*}</code> to start with, I can later do <code>variable (α : Type*)</code> if I want a section where it's explicit?</p>",
        "id": 393480126,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695818770
    },
    {
        "content": "<p>No, you do <code>variable (α)</code> instead.</p>",
        "id": 393480478,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1695818911
    },
    {
        "content": "<p>Either way, seems reasonable, I've added it to the <a href=\"https://github.com/leanprover-community/mathlib4/issues/7217\">wishlist</a>.</p>",
        "id": 393481135,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695819172
    },
    {
        "content": "<p>Frankly, it would be good to have a linter that catches any variable shadowing of any form, ever, period.</p>",
        "id": 393481413,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695819279
    },
    {
        "content": "<p>There are legitimate uses of variable shadowing, especially when programming.</p>",
        "id": 393492445,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1695822551
    },
    {
        "content": "<p>I'd argue that shadowing should only be allowed within a new section, like it is in C</p>",
        "id": 393512480,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695826780
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/linter.20for.20double.20variable.20declarations/near/393492445\">said</a>:</p>\n<blockquote>\n<p>There are legitimate uses of variable shadowing, especially when programming.</p>\n</blockquote>\n<p>Is there a particular example of such a legitimate use in mathlib that you could point out? I'd like to have a better sense of this.</p>",
        "id": 393535250,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1695834162
    }
]