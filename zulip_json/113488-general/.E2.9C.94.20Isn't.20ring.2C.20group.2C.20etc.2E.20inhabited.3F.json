[
    {
        "content": "<p>Suppose I have a ring <code>R</code>, a type <code>T</code>, and have a map <code>f : R -&gt; T</code>. To prove that <code>T</code> is inhabited I provide the default element to be <code>f default</code>. But this doesn't work since the ring seems not inhabited; I have to use <code>f 0</code> to provide the default element. What is the reason that ring does not implemented inhabited?</p>",
        "id": 377902269,
        "sender_full_name": "Jz Pan",
        "timestamp": 1690137327
    },
    {
        "content": "<p>I think this instance might exist? It is likely low priority though because it can lead to diamond issues</p>",
        "id": 377902772,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690137457
    },
    {
        "content": "<blockquote>\n<p>diamond issues</p>\n</blockquote>\n<p>Oh, you're right. It's natural to think <code>Zero</code> and <code>One</code> should implement inhabited. Since <code>Ring</code> extends <code>Zero</code> and <code>One</code>, it will get two different conflicted inhabited instances.</p>",
        "id": 377904382,
        "sender_full_name": "Jz Pan",
        "timestamp": 1690137888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"366779\">Jz Pan</span> has marked this topic as resolved.</p>",
        "id": 377904471,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690137914
    }
]