[
    {
        "content": "<p>Good evening everyone,<br>\nJust have a question for my proof. Below is a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>. <br>\nIn the end of the proof, I have my goal being <code>lean 0 ≤ a.re * x ^ 2</code>. Then I have <code>lean h₅:  0 ≤   a.re*x ^ 2 </code>.<br>\nWhen I apply this, I get the error </p>\n<div class=\"codehilite\" data-code-language=\"invalid\"><pre><span></span><code>    (@has_mul.mul real real.has_mul a.re (@has_pow.pow real nat (@monoid.has_pow real real.monoid) x 2))\nbut is expected to have type\n  @has_le.le real real.has_le 0    (@has_mul.mul real real.has_mul a.re\n       (@has_pow.pow real nat (@monoid.has_pow complex (@ring.to_monoid complex complex.ring)) x 2))\n</code></pre></div>\n<p>Furthermore, I have the subproblems <code>lean -(↑(a.re) ) * ↑x ^ 2 = ↑(-((a.re)* x ^ 2))</code> and <br>\n<code>lean ‖↑(exp (-(a.re * x ^ 2)))‖ = ‖exp (-(a.re * x ^ 2))‖</code>. I added some comments directly in my code. <br>\nKind regards,<br>\nSonia</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.complex.exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.normed_space.exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.basic</span>\n\n<span class=\"kn\">section</span>\n<span class=\"kn\">open</span> <span class=\"n\">complex</span>\n<span class=\"kn\">open</span> <span class=\"n\">real</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">real</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exp_a_neg_sq_le_one</span>   <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span>  <span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a.re</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span> <span class=\"o\">,</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₁</span><span class=\"o\">:=</span> <span class=\"n\">complex.eta</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₂</span><span class=\"o\">:</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)),</span>\n    <span class=\"o\">{</span><span class=\"k\">have</span> <span class=\"n\">h₂₁</span><span class=\"o\">:</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">complex.exp</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"n\">a.im</span> <span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">),</span>\n      <span class=\"n\">nth_rewrite</span> <span class=\"mi\">0</span> <span class=\"bp\">←</span> <span class=\"n\">h₁</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">complex.mk_eq_add_mul_I</span><span class=\"o\">,</span> <span class=\"n\">neg_add</span><span class=\"o\">,</span> <span class=\"n\">add_mul</span><span class=\"o\">,</span> <span class=\"n\">complex.exp_add</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">neg_mul</span><span class=\"o\">],</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂₂</span><span class=\"o\">:</span> <span class=\"bp\">-↑</span><span class=\"o\">(</span><span class=\"n\">a.im</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.im</span> <span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">neg_mul</span><span class=\"o\">],</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂₃</span><span class=\"o\">:</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.im</span> <span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span><span class=\"bp\">=</span><span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.im</span> <span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)),</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">complex.norm_eq_abs</span><span class=\"o\">,</span><span class=\"bp\">←</span> <span class=\"n\">complex.norm_eq_abs</span><span class=\"o\">,</span><span class=\"bp\">←</span> <span class=\"n\">complex.norm_eq_abs</span><span class=\"o\">,</span><span class=\"n\">norm_mul</span><span class=\"o\">],</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂₄</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">a.im</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">a.im</span><span class=\"o\">)</span><span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span><span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">neg_mul</span><span class=\"o\">,</span> <span class=\"n\">of_real_neg</span><span class=\"o\">,</span> <span class=\"n\">of_real_mul</span><span class=\"o\">,</span> <span class=\"n\">of_real_pow</span><span class=\"o\">,</span> <span class=\"n\">neg_inj</span><span class=\"o\">],</span>\n      <span class=\"n\">ring_nf</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h₂₁</span><span class=\"o\">,</span> <span class=\"n\">h₂₂</span><span class=\"o\">,</span> <span class=\"n\">h₂₃</span><span class=\"o\">,</span><span class=\"n\">h₂₄</span><span class=\"o\">,</span><span class=\"n\">complex.abs_exp_of_real_mul_I</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">],},</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span>  <span class=\"n\">h₂</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₃</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">a.re</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">a.re</span><span class=\"o\">)</span><span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)),</span> <span class=\"c1\">-- looking for a theorem like ↑a * ↑x = ↑(a * x)</span>\n      <span class=\"n\">norm_cast</span><span class=\"o\">,</span>\n      <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h₃</span><span class=\"o\">,</span><span class=\"bp\">←</span><span class=\"n\">complex.of_real_exp</span><span class=\"o\">,</span><span class=\"bp\">←</span> <span class=\"n\">complex.norm_eq_abs</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₄</span><span class=\"o\">:</span> <span class=\"bp\">‖↑</span><span class=\"o\">(</span><span class=\"n\">exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)))</span><span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"bp\">‖</span><span class=\"n\">exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span><span class=\"bp\">‖</span><span class=\"o\">,</span>\n    <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"c1\">-- if you have the complex.exp but inside it you only have real numbers, would this not be equal to the real exp?</span>\n    <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h₄</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">norm_eq_abs</span><span class=\"o\">,</span> <span class=\"n\">abs_exp</span><span class=\"o\">,</span> <span class=\"n\">exp_le_one_iff</span><span class=\"o\">,</span> <span class=\"n\">right.neg_nonpos_iff</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₅</span><span class=\"o\">:</span>  <span class=\"mi\">0</span> <span class=\"bp\">≤</span>   <span class=\"n\">a.re</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">zero_le_mul_left</span> <span class=\"n\">ha</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"o\">(</span><span class=\"n\">sq_nonneg</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h₅</span><span class=\"o\">,</span> <span class=\"c1\">-- here h₅ and my goal seem equal but I get the error mentioned above.</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 341335044,
        "sender_full_name": "rtertr (Sonia)",
        "timestamp": 1678654655
    },
    {
        "content": "<p>Do you notice that you have one goal before <code>have h₃</code> and 9 goals afterwards? Lean doesn't know where you're coercing to. Could be the reals, the complexes, the quaternions... . Probably you want <code>have h₃: -((a.re) : ℂ) * x ^ 2 = (-((a.re)* x ^ 2) : ℝ),</code>, but you should never hare to create this term anyway; it's the job of tactics like <code>norm_cast</code> to do all this dirty work for you.</p>",
        "id": 341346766,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678663712
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.complex.exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.normed_space.exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.basic</span>\n\n<span class=\"kn\">section</span>\n<span class=\"kn\">open</span> <span class=\"n\">complex</span>\n<span class=\"kn\">open</span> <span class=\"n\">real</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">real</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exp_a_neg_sq_le_one</span>   <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span>  <span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a.re</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span> <span class=\"o\">,</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₁</span><span class=\"o\">:=</span> <span class=\"n\">complex.eta</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₂</span><span class=\"o\">:</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)),</span>\n    <span class=\"o\">{</span><span class=\"k\">have</span> <span class=\"n\">h₂₁</span><span class=\"o\">:</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">complex.exp</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"n\">a.im</span> <span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">),</span>\n      <span class=\"n\">nth_rewrite</span> <span class=\"mi\">0</span> <span class=\"bp\">←</span> <span class=\"n\">h₁</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">complex.mk_eq_add_mul_I</span><span class=\"o\">,</span> <span class=\"n\">neg_add</span><span class=\"o\">,</span> <span class=\"n\">add_mul</span><span class=\"o\">,</span> <span class=\"n\">complex.exp_add</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">neg_mul</span><span class=\"o\">],</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂₂</span><span class=\"o\">:</span> <span class=\"bp\">-↑</span><span class=\"o\">(</span><span class=\"n\">a.im</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.im</span> <span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">neg_mul</span><span class=\"o\">],</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂₃</span><span class=\"o\">:</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.im</span> <span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span><span class=\"bp\">=</span><span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.im</span> <span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)),</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">complex.norm_eq_abs</span><span class=\"o\">,</span><span class=\"bp\">←</span> <span class=\"n\">complex.norm_eq_abs</span><span class=\"o\">,</span><span class=\"bp\">←</span> <span class=\"n\">complex.norm_eq_abs</span><span class=\"o\">,</span><span class=\"n\">norm_mul</span><span class=\"o\">],</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂₄</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">a.im</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">a.im</span><span class=\"o\">)</span><span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span><span class=\"bp\">*</span> <span class=\"n\">complex.I</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">neg_mul</span><span class=\"o\">,</span> <span class=\"n\">of_real_neg</span><span class=\"o\">,</span> <span class=\"n\">of_real_mul</span><span class=\"o\">,</span> <span class=\"n\">of_real_pow</span><span class=\"o\">,</span> <span class=\"n\">neg_inj</span><span class=\"o\">],</span>\n      <span class=\"n\">ring_nf</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h₂₁</span><span class=\"o\">,</span> <span class=\"n\">h₂₂</span><span class=\"o\">,</span> <span class=\"n\">h₂₃</span><span class=\"o\">,</span><span class=\"n\">h₂₄</span><span class=\"o\">,</span><span class=\"n\">complex.abs_exp_of_real_mul_I</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">],},</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span>  <span class=\"n\">h₂</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₃</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">a.re</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">a.re</span><span class=\"o\">)</span><span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"c1\">-- looking for a theorem like ↑a * ↑x = ↑(a * x)</span>\n      <span class=\"n\">norm_cast</span><span class=\"o\">,</span>\n      <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h₃</span><span class=\"o\">,</span><span class=\"bp\">←</span><span class=\"n\">complex.of_real_exp</span><span class=\"o\">,</span><span class=\"bp\">←</span> <span class=\"n\">complex.norm_eq_abs</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₄</span><span class=\"o\">:</span> <span class=\"bp\">‖</span><span class=\"o\">((</span><span class=\"n\">exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"bp\">‖</span><span class=\"n\">exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">a.re</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span><span class=\"bp\">‖</span><span class=\"o\">,</span>\n    <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"c1\">-- if you have the complex.exp but inside it you only have real numbers, would this not be equal to the real exp?</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h₄</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">norm_eq_abs</span><span class=\"o\">,</span> <span class=\"n\">abs_exp</span><span class=\"o\">,</span> <span class=\"n\">exp_le_one_iff</span><span class=\"o\">,</span> <span class=\"n\">right.neg_nonpos_iff</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₅</span><span class=\"o\">:</span>  <span class=\"mi\">0</span> <span class=\"bp\">≤</span>   <span class=\"n\">a.re</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">zero_le_mul_left</span> <span class=\"n\">ha</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"o\">(</span><span class=\"n\">sq_nonneg</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h₅</span><span class=\"o\">,</span> <span class=\"c1\">-- here h₅ and my goal seem equal but I get the error mentioned above.</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">real</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>This could be golfed but I need to sleep. You were essentially there though, all I did was changed the up-arrows to explicit coercions. If <code>a : \\R</code> then <code>(a : \\C)</code> is <code>\\u a</code> except that you're explicitly saying where to coerce to.</p>",
        "id": 341346962,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678663916
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"590693\">rtertr</span> has marked this topic as resolved.</p>",
        "id": 341454172,
        "sender_full_name": "Notification Bot",
        "timestamp": 1678712490
    },
    {
        "content": "<p>Wow, great! Thank you so much <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  :D</p>",
        "id": 341454260,
        "sender_full_name": "rtertr (Sonia)",
        "timestamp": 1678712521
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"590693\">@rtertr</span> thanks for the ping! Stuff like <code>have foo : ..., norm_cast</code> is often not needed. For example, after your <code>rw [h₃,←complex.of_real_exp,← complex.norm_eq_abs],</code> you can just finish the proof with <code>norm_cast, simp, nlinarith</code>, and probably high-powered tactics can take over even earlier.</p>",
        "id": 341455381,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1678712768
    }
]