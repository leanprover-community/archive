[
    {
        "content": "<p>Is there a reason why Lean defaults to the lowercase alpha with brachy ᾰ for variable names?</p>\n<p>The only thing I found online was <a href=\"https://leanprover-community.github.io/mathlib_docs/notes.html#likely%20generated%20binder%20names\">this note</a> in the mathlib docs confirming that it is indeed the name for anonymous binders, though \"ᾰ\" is somewhat difficult for search engines, so I might have missed something.</p>",
        "id": 344122540,
        "sender_full_name": "Aaron Bies",
        "timestamp": 1679614315
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/issues/437\">https://github.com/leanprover-community/lean/issues/437</a><br>\nEssentially there used to be an issue when the default name was \"a\", that caused all sorts of subtle tactic problems. So choosing something untypable was a way to encourage people to name their variables and avoid these problems.<br>\nLean 4 has a much better hygine system, so this should really be a thing of the past soon enough</p>",
        "id": 344122681,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1679614395
    },
    {
        "content": "<p>If you search \"the a bug\" here you can find a lot of the lore, like <a href=\"#narrow/stream/113488-general/topic/Replacing.20the.20.60a.60.20bug.20by.20the.20.60.E1.BE.B0.60.20bug/near/214734358\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Replacing.20the.20.60a.60.20bug.20by.20the.20.60.E1.BE.B0.60.20bug/near/214734358</a></p>",
        "id": 344123406,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1679614801
    },
    {
        "content": "<p>Does the ᾰ bug still exist? To me, it always looked like Lean does a good job adding numbers and more ᾰs to the end of variable names to make sure every auto-generated name is unique. I also just tried it locally and I can't reproduce it.</p>",
        "id": 344124948,
        "sender_full_name": "Aaron Bies",
        "timestamp": 1679615758
    },
    {
        "content": "<p>If you try the example from the issue it does still fail:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">ᾰ</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>  <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">ᾰ</span> <span class=\"bp\">≤</span> <span class=\"n\">ᾰ</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>its not that Lean always used <code>a</code> in every situation, the a bug was annoying but still somewhat rare.</p>",
        "id": 344125220,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1679615900
    },
    {
        "content": "<p>I see, thank you</p>",
        "id": 344125431,
        "sender_full_name": "Aaron Bies",
        "timestamp": 1679616022
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"373970\">Aaron Bies</span> has marked this topic as resolved.</p>",
        "id": 344125698,
        "sender_full_name": "Notification Bot",
        "timestamp": 1679616162
    }
]