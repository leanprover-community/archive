[
    {
        "content": "<p>Cool thanks :). While debugging, I noticed my tactic wouldn't update its behaviour in other files that import it, after I make a change. Once I restart the lean server, it updates. Is this expected behaviour, something wrong with my setup or a bug in Lean?</p>",
        "id": 204065842,
        "sender_full_name": "Billy Price",
        "timestamp": 1594894433
    },
    {
        "content": "<p>This isn't expected and I haven't seen it before. Are you using any custom flags for the Lean process?</p>",
        "id": 204074559,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594901529
    },
    {
        "content": "<p>I don't know what that is</p>",
        "id": 204074600,
        "sender_full_name": "Billy Price",
        "timestamp": 1594901553
    },
    {
        "content": "<p>Then probably not.</p>",
        "id": 204074624,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594901571
    },
    {
        "content": "<p>What if you change the type of a declaration that's used in an imported file, does it notice that?</p>",
        "id": 204074706,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594901637
    },
    {
        "content": "<p>It doesn't notice that, in fact it doesn't even recognise anything newly declared in the imported file until I restart the lean server</p>",
        "id": 204075047,
        "sender_full_name": "Billy Price",
        "timestamp": 1594901874
    },
    {
        "content": "<p>Is this in VSCode?</p>",
        "id": 204075134,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594901919
    },
    {
        "content": "<p>yes</p>",
        "id": 204075140,
        "sender_full_name": "Billy Price",
        "timestamp": 1594901924
    },
    {
        "content": "<p>I tried to recreate the error with two fresh files, and the error doesn't occur.</p>",
        "id": 204075279,
        "sender_full_name": "Billy Price",
        "timestamp": 1594902039
    },
    {
        "content": "<p>Is it because I use sorry in some places in the file?</p>",
        "id": 204075310,
        "sender_full_name": "Billy Price",
        "timestamp": 1594902071
    },
    {
        "content": "<p>I don't think so. I don't remember seeing this behavior before.</p>",
        "id": 204075396,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594902128
    },
    {
        "content": "<p>I need to go in a second. Maybe if you post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> someone can try to reproduce.</p>",
        "id": 204075414,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594902157
    },
    {
        "content": "<p>I've figured out the issue, part of it is a vs-code bug, but it could possibly be fixed on the lean side?</p>\n<p>Steps to reproduce</p>\n<ol>\n<li><code>leanproject new bugtest</code></li>\n<li>create <code>src/file1.Lean</code> and <code>src/file2.lean</code> within vs code (pay attention to capitalisation)</li>\n<li>in <code>file2.lean</code> put <code>import file1</code></li>\n<li>Rename <code>file1.Lean</code> to <code>file1.lean</code> (remove the capitalisation), either in vs-code's browser or elsewhere</li>\n<li>Observe vs-code does not detect this change in the opened tab-name (this can be fixed by reopening the tab, but regardless the following issues still occur)</li>\n<li>Put <code>def foo : ℕ := 3</code> in <code>file1.lean</code> in vs-code </li>\n<li>do <code>#check foo</code> in <code>file2.lean</code> and observe it doesn't recognise it.</li>\n<li>Restart the lean server and observe it now recognises it</li>\n<li>Make any change to <code>file1.lean</code> (like change the type of <code>foo</code> or just delete <code>foo</code>) and observe it doesn't update in <code>file2.lean</code> until the lean server or vs code is restarted (after which the problem still persists).</li>\n</ol>\n<p>There seems to be nothing you can do to fix this broken import relationship. I got it working again by changing the file name of <code>file1.lean</code> beyond capitalisation, say to <code>file0.lean</code>, in my normal non-vs-code file browser, after which vs-code recognises <code>file1.lean</code> has been deleted from the disk, and then the import relationship is fixed again, once the import is changed to <code>import file0</code></p>\n<p>This issue also occurs when capitalising or uncapitalising other parts of the filename, say <code>File1.lean</code> vs <code>file1.lean</code>, which is arguably more likely to occur.</p>\n<p>Can anyone else reproduce this, and is this something I should register as an issue on the vscode github or the vscode-lean<br>\ngithub?</p>",
        "id": 204089557,
        "sender_full_name": "Billy Price",
        "timestamp": 1594909178
    },
    {
        "content": "<p>I think this might be the lean extension, since I've just noticed at the top of the Lean Infoview, it never updates the filename from <code>file1.Lean</code>, even after restarting the lean server and restarting vs-code. Once the file name is changed beyond just uncapitalisation, it recognises the change and fixes the link.</p>",
        "id": 204090956,
        "sender_full_name": "Billy Price",
        "timestamp": 1594909764
    },
    {
        "content": "<p>The VSCode  Lean extension has changed a lot in the last few weeks (with great results!), so having a new bug in this area is rather plausible.</p>",
        "id": 204091451,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594909936
    },
    {
        "content": "<p>Is the lean extension responsible for the lean server? Because it's not just the info-view that fails to update the import.</p>",
        "id": 204092642,
        "sender_full_name": "Billy Price",
        "timestamp": 1594910437
    },
    {
        "content": "<p>No, the Lean extension is not responsible for the Lean server. However there were also changes on the Lean side to accommodate the new fancy widgets.</p>",
        "id": 204093859,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594910956
    },
    {
        "content": "<p>Where should I submit this as an issue? It’s not clear to me where the source of the problem is</p>",
        "id": 204094149,
        "sender_full_name": "Billy Price",
        "timestamp": 1594911057
    },
    {
        "content": "<p>If you can't reproduce the issue without VSCode I would put it in the vscode-lean repo. In any case you expect Gabriel to handle it, and he is currently unavailable.</p>",
        "id": 204094859,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594911323
    },
    {
        "content": "<p>I also think this conversation has drifted and should not be in that stream. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> could you move this to the general stream (since the first message of Billy mentioning this bug)?</p>",
        "id": 204095030,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594911380
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"238830\" href=\"/#narrow/stream/238830-Lean-for-the-curious-mathematician-2020/topic/Monday.20afternoon.3A.20metaprogramming.20session\">#Lean for the curious mathematician 2020 &gt; Monday afternoon: metaprogramming session</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span></p>",
        "id": 204097960,
        "sender_full_name": "Notification Bot",
        "timestamp": 1594912618
    },
    {
        "content": "<p>I haven't tried to reproduce it yet, but I suspect this is an issue in Lean, since as far as I know, vscode-lean doesn't modify the cases of file imports and relies on the Lean server to resolve / manage imports. </p>\n<p><span class=\"user-mention\" data-user-id=\"255481\">@Billy Price</span> Could you create an issue here: <a href=\"https://github.com/leanprover-community/lean\">https://github.com/leanprover-community/lean</a></p>",
        "id": 204100266,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1594913523
    },
    {
        "content": "<p>Done</p>",
        "id": 204102762,
        "sender_full_name": "Billy Price",
        "timestamp": 1594914522
    },
    {
        "content": "<p>Thanks! (link for future Zulip readers: <a href=\"https://github.com/leanprover-community/lean/issues/392\">lean#392</a>)</p>",
        "id": 204104571,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1594915265
    }
]