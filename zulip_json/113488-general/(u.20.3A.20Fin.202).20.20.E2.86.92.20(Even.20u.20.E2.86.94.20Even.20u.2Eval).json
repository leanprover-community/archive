[
    {
        "content": "<p>Hello, I'm trying to prove this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">aux28</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Even</span> <span class=\"n\">u</span> <span class=\"bp\">↔</span> <span class=\"n\">Even</span> <span class=\"n\">u.val</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Witch I think should also be valid for <code>Fin n</code>, but I'm not being able to prove it.<br>\nI was able to reduce it to having to prove this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">aux33</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">Even</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>But i'm not able to prove that neither<br>\nHow could I do?</p>",
        "id": 407107380,
        "sender_full_name": "Iván Renison",
        "timestamp": 1702242037
    },
    {
        "content": "<p>Not for odd <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬∀</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">5</span><span class=\"o\">),</span> <span class=\"n\">Even</span> <span class=\"n\">u</span> <span class=\"bp\">↔</span> <span class=\"n\">Even</span> <span class=\"n\">u.val</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">use</span> <span class=\"mi\">3</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">use</span> <span class=\"mi\">4</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 407108524,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1702242882
    },
    {
        "content": "<p><code>theorem aux33 : ¬Even (1 : Fin 2) := by unfold Even; decide</code> works. (I feel like <code>decide</code> should work without the <code>unfold</code>; presumably we just could do with another instance somewhere?)</p>",
        "id": 407108697,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1702243070
    },
    {
        "content": "<p>Thank you</p>",
        "id": 407108798,
        "sender_full_name": "Iván Renison",
        "timestamp": 1702243163
    },
    {
        "content": "<p>I'm working on</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">Fin.even_iff</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">Even</span> <span class=\"n\">k</span> <span class=\"bp\">↔</span> <span class=\"n\">Odd</span> <span class=\"n\">n</span> <span class=\"bp\">∨</span> <span class=\"n\">Even</span> <span class=\"n\">k.val</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>",
        "id": 407110509,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1702244720
    }
]