[
    {
        "content": "<p>Is there a way to prove that a predicate on lists or sets holds for the empty case by showing that when it holds for n elements it holds for n - 1 elements?</p>",
        "id": 340999649,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1678499252
    },
    {
        "content": "<p>If it is false for <em>every</em> list/set, then your hypothesis vacuously holds.</p>",
        "id": 341000274,
        "sender_full_name": "Pedro SÃ¡nchez Terraf",
        "timestamp": 1678499710
    },
    {
        "content": "<p>Hmm. I may have misinterpreted the proof I am trying to formalize.</p>",
        "id": 341000829,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1678500039
    },
    {
        "content": "<p>It is the proof of the completeness theorem for propositional logic, in which there is an algorithm to remove one by one each assumption <code>Bn</code> from <code>B1 ... Bn |- P</code> leaving <code>|- P</code>.</p>",
        "id": 341001262,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1678500330
    },
    {
        "content": "<p>Kayla, if you also know that it is true for some fixed list of positive length, then your approach works. There is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.decreasing_induction\">docs#nat.decreasing_induction</a>.</p>",
        "id": 341001526,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678500507
    },
    {
        "content": "<p>We know that <code>B1 ... Bn |- P</code> holds for some finite list <code>B1...Bn</code>, and can show from that that <code>B1 ... Bn-1 |- P</code> holds, and then <code>B1 ... Bn-2 |- P</code>, etc. We then argue that we can use this to show that <code>|- P </code> holds.</p>",
        "id": 341002120,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1678500896
    },
    {
        "content": "<p>Is there a way to use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.decreasing_induction\">docs#nat.decreasing_induction</a> for lists or finite sets?</p>",
        "id": 341002359,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1678500982
    },
    {
        "content": "<p>That is, I see, <code>induction e using r</code>, but I'm not sure how to use it.</p>",
        "id": 341002387,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1678501022
    },
    {
        "content": "<p>You could phrase it in terms of the length of an initial segment of the list and then do the nat version on that variable.</p>",
        "id": 341002639,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1678501273
    },
    {
        "content": "<p>Ok. Thank you.</p>",
        "id": 341002758,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1678501375
    }
]