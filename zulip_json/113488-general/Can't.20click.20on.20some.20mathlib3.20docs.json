[
    {
        "content": "<p>The web page <a href=\"https://leanprover-community.github.io/mathlib_docs/field_theory/galois.html\">https://leanprover-community.github.io/mathlib_docs/field_theory/galois.html</a> won't let me click on <code>fixed_field</code>. Is this expected?</p>\n<p><a href=\"/user_uploads/3121/5kuusrQ9vqgd_J_KxbHjVrEz/Screenshot-from-2023-06-16-08-40-50.png\">Screenshot-from-2023-06-16-08-40-50.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/5kuusrQ9vqgd_J_KxbHjVrEz/Screenshot-from-2023-06-16-08-40-50.png\" title=\"Screenshot-from-2023-06-16-08-40-50.png\"><img src=\"/user_uploads/3121/5kuusrQ9vqgd_J_KxbHjVrEz/Screenshot-from-2023-06-16-08-40-50.png\"></a></div>",
        "id": 366722388,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686901273
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/fixed_field\">docs#fixed_field</a> doesn't exist. Do you mean <a href=\"https://leanprover-community.github.io/mathlib_docs/find/intermediate_field.fixed_field\">docs#intermediate_field.fixed_field</a> ?</p>",
        "id": 366722639,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1686901331
    },
    {
        "content": "<p>I just mean \"something isn't working and I'm not sure what\". Mathematically yes, the claims are about the declaration you suggest.</p>",
        "id": 366722857,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686901379
    },
    {
        "content": "<p>I think it's because of the namespace? How does autolinking in mathlib3 work anyway?</p>",
        "id": 366723079,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686901424
    },
    {
        "content": "<p>Whoever wrote that docstring is referring to a declaration that doesn't exist. I don't know what that declaration is, but if it <code>intermediate_field.fixed_field</code> then you should simply replace <code>fixed_field</code> by <code>intermediate_field.fixed_field</code>.</p>",
        "id": 366723145,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1686901441
    },
    {
        "content": "<p>Got it. So this has been the case throughout the docs? That fully qualified names are needed? I'm somehow surprised that the docs are even readable if this is the case.</p>",
        "id": 366723431,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686901507
    },
    {
        "content": "<p>Yes, you need to fully qualify names everywhere.</p>",
        "id": 366723495,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1686901527
    },
    {
        "content": "<p>From what I can tell by poking around only fully qualified names are autolinked</p>",
        "id": 366723510,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686901532
    },
    {
        "content": "<p>TBH I'm in agreement with Kevin that this is terrible</p>",
        "id": 366723590,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686901558
    },
    {
        "content": "<p>and fully qualifying everything is not a solution, it would make things even worse</p>",
        "id": 366723736,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686901589
    },
    {
        "content": "<p>I mean, this was never particularly readable: <a href=\"/user_uploads/3121/-XQbRqe4P01u2KJaHCEVS77Y/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/-XQbRqe4P01u2KJaHCEVS77Y/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/-XQbRqe4P01u2KJaHCEVS77Y/image.png\"></a></div>",
        "id": 366724265,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686901712
    },
    {
        "content": "<p>when I see this kind of thing in the docs I just go to the source</p>",
        "id": 366724354,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686901731
    },
    {
        "content": "<p>So does <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fixing_subgroup\">docs#fixing_subgroup</a> exist? Huh, it does. So there is some asymmetry in namespace conventions here. In mathlib4 this declaration is also namespaced!</p>",
        "id": 366726235,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1686902161
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Can't.20click.20on.20some.20mathlib3.20docs/near/366723590\">said</a>:</p>\n<blockquote>\n<p>TBH I'm in agreement with Kevin that this is terrible</p>\n</blockquote>\n<p>The alternative of taking into account open namespaces doesn't work because we don't allow opening namespaces before module docstrings</p>",
        "id": 367014656,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1686954813
    },
    {
        "content": "<p>haha, we could open namespaces via time travel for the purposes of hyperlinking. (i.e. scan the whole file for <code>open</code> statements, and use future ones if you can't already resolve the name)</p>",
        "id": 367026635,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1686960959
    },
    {
        "content": "<p>...or just allow module docs do go anywhere?</p>",
        "id": 367027476,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1686961334
    }
]