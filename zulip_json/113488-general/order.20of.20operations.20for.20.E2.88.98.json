[
    {
        "content": "<p>(deleted)</p>",
        "id": 339220024,
        "sender_full_name": "Dean Young",
        "timestamp": 1677797540
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">universe</span> <span class=\"n\">u</span>\n<span class=\"kd\">universe</span> <span class=\"n\">v</span>\n\n\n<span class=\"c1\">-- Definition of a category</span>\n<span class=\"kd\">structure</span> <span class=\"n\">categories</span> <span class=\"n\">where</span>\n  <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n  <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span>\n  <span class=\"n\">identity</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">X</span>\n  <span class=\"n\">composition</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">),</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span>\n  <span class=\"n\">identity₁</span><span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),(</span><span class=\"n\">composition</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">identity</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">identity₂</span><span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),(</span><span class=\"n\">composition</span> <span class=\"n\">X</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">identity</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">f</span>\n  <span class=\"n\">associativity</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">W</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Y</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">Z</span><span class=\"o\">:</span><span class=\"n\">Obj</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">),</span><span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">),</span>\n  <span class=\"o\">(</span><span class=\"n\">composition</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">composition</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">composition</span> <span class=\"n\">W</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">(</span><span class=\"n\">composition</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">h</span>\n\n<span class=\"c1\">-- Obj notation which infers the category in which the hom Type resides</span>\n<span class=\"kd\">def</span> <span class=\"n\">Obj</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">categories</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.Obj</span>\n\n<span class=\"c1\">-- Hom notation which infers the category in which the hom Type resides</span>\n<span class=\"kd\">def</span> <span class=\"n\">Hom</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">categories</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span>\n\n<span class=\"c1\">-- Identity morphism notation which infers the category in which the identity morphism resides</span>\n<span class=\"kd\">def</span> <span class=\"n\">Idn</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">categories</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.identity</span> <span class=\"n\">X</span>\n\n<span class=\"c1\">-- Composition notation which infers the category, domains, and codomains involved</span>\n<span class=\"kd\">def</span> <span class=\"n\">composition</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">categories</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C.Obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">C.Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">C.composition</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n<span class=\"kd\">notation</span> <span class=\"n\">g</span> <span class=\"s2\">\"∘\"</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">composition</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n</code></pre></div>\n<p>I'm using the ∘ notation for my categories (see last line above).</p>\n<p>Unfortunately, I routinely need to add parenthesis especially when dealing with = (equality type). Can someone help me modify my composition notation so that I don't need parentheses when dealing with =?</p>\n<p>Here's the relevant line:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">notation</span> <span class=\"n\">g</span> <span class=\"s2\">\"∘\"</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">composition</span> <span class=\"n\">f</span> <span class=\"n\">g</span>\n</code></pre></div>",
        "id": 339220066,
        "sender_full_name": "Dean Young",
        "timestamp": 1677797564
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.comp\">docs#function.comp</a></p>",
        "id": 339221417,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677798179
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">infixr</span> <span class=\"bp\">`</span> <span class=\"bp\">∘</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">90</span>  <span class=\"o\">:=</span> <span class=\"n\">function.comp</span>\n</code></pre></div>\n<p>Try that -- it's what core Lean does (I just checked by following the above link and viewing source). The 90 is a bigger binding power than what you're using (I assume; I don't know what default binding power is).</p>",
        "id": 339221580,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677798249
    }
]