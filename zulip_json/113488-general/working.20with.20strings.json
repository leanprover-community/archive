[
    {
        "content": "<p>I need some help with String operations.</p>\n<p>a) given a <code>String</code> of unknown length, how do I get a slice of it, like python's <code>s[:7]</code>?<br>\nb) how do I join an <code>Array</code>/<code>List</code> of Strings (like python's <code>'-'.join(a)</code>)?</p>",
        "id": 403155953,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1700481972
    },
    {
        "content": "<p>for the second we do have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=String.intercalate#doc\">docs#String.intercalate</a></p>",
        "id": 403159951,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700483503
    },
    {
        "content": "<p>I don't know what python's join does, but I assume it's the same?</p>",
        "id": 403160021,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700483523
    },
    {
        "content": "<p>For the slice, I think we're meant to use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Substring#doc\">docs#Substring</a> but I don't know whether there is a nice slice notation</p>",
        "id": 403160132,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700483562
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113488-general/topic/working.20with.20strings/near/403160021\">said</a>:</p>\n<blockquote>\n<p>I don't know what python's join does, but I assume it's the same?</p>\n</blockquote>\n<p>Thanks, <code>intercalate</code> is exactly what I was looking for. For <code>Substring</code>, I figured that the indexes need to be <code>⟨7⟩</code> and not a plain <code>7</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"n\">s₂</span> <span class=\"o\">:</span> <span class=\"n\">Substring</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">7</span><span class=\"o\">⟩⟩</span>\n</code></pre></div>\n<p>I wonder if there should be an instance </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">OfNat</span> <span class=\"n\">String.Pos</span> <span class=\"n\">x</span> <span class=\"n\">where</span>\n  <span class=\"n\">ofNat</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n    <span class=\"n\">byteIdx</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n  <span class=\"o\">}</span>\n</code></pre></div>\n<p>so one could simply write <code>let s₂ : Substring := ⟨s, 0, 7⟩</code>. Or maybe it exists somewhere and I didn't import it.</p>",
        "id": 403164255,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1700485068
    },
    {
        "content": "<p>I would hope that we can introduce slice notation for substrings similar to how we can use slice notation for subarrays</p>",
        "id": 403190952,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1700493234
    }
]