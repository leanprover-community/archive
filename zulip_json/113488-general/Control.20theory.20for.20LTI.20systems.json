[
    {
        "content": "<p>How much work would it be to implement</p>\n<ul>\n<li>Laplace transform and inverse laplace transform for linear systems <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>˙</mo></mover><mo>=</mo><mi>A</mi><mo>∗</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>B</mi><mo>∗</mo><mi>u</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">;</mo></mrow><annotation encoding=\"application/x-tex\"> \\dot{x} = A*x(t) +B*u(t);</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6679em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1111em;\"><span class=\"mord\">˙</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mpunct\">;</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>C</mi><mo>∗</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>D</mi><mo>∗</mo><mi>u</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(t) = C*x(t) + D*u(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>closing feedback loops and connecting up such systems with linear or at worst affine functions</li>\n<li>sensitivity functions, frequency response curves, their approximation by piece wise linear functions</li>\n<li>characteristic polynomials</li>\n<li>solutions to the linear system: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>˙</mo></mover><mo>=</mo><mi>A</mi><mo>∗</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>B</mi><mo>∗</mo><mi>u</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">;</mo></mrow><annotation encoding=\"application/x-tex\"> \\dot{x} = A*x(t) +B*u(t);</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6679em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1111em;\"><span class=\"mord\">˙</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mpunct\">;</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>C</mi><mo>∗</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>D</mi><mo>∗</mo><mi>u</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(t) = C*x(t) + D*u(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>exponential stability, BIBO stability</li>\n<li>Hurwitz criteria</li>\n<li>step response,  bode and nyquist diagrams</li>\n<li>limits and lapace transform</li>\n<li>simple measure of robustness</li>\n<li>proving certain statements about feedback controllers</li>\n<li>delay differential equations (atleast in laplace space)</li>\n</ul>\n<p>Is see the 1D case (A has one algebraic eigen value whose geometric EV is the dimension of the matrix, u(t) and y(t) are scalar functions) as a bit simpler. It would require of solutions of complex solutions to real polynomials.<br>\nIn the multidimensional case Jordan decompositions, the matrix exponential would be needed and theorems about observability, contrability, reachability, stabilisability become interesting, so so state-estimaters, maybe even kalman filters.</p>\n<p>What of those is already being worked on?</p>",
        "id": 343697476,
        "sender_full_name": "Joh-Tob Schäg",
        "timestamp": 1679495948
    },
    {
        "content": "<p>Several person-years at least? And several more if you actually wanted to run the functions and get answers as opposed to just being able to prove theorems about them.</p>",
        "id": 343699967,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679496473
    },
    {
        "content": "<p>I guess that dampens my ambition a bit. <span aria-label=\"flushed\" class=\"emoji emoji-1f633\" role=\"img\" title=\"flushed\">:flushed:</span></p>",
        "id": 343701190,
        "sender_full_name": "Joh-Tob Schäg",
        "timestamp": 1679496740
    },
    {
        "content": "<p>This is something I'd be interested in, although probably won't have time to look at before my PhD concludes.</p>",
        "id": 343702411,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679496993
    },
    {
        "content": "<p>Is there an easy way for me to comprehend why that would be so hard?</p>",
        "id": 343702558,
        "sender_full_name": "Joh-Tob Schäg",
        "timestamp": 1679497029
    },
    {
        "content": "<blockquote>\n<p>In the multidimensional case Jordan decompositions</p>\n</blockquote>\n<p>This is definitely within reach. Assuming I've not muddled unrelated things, there are two threas about it here: <a class=\"stream-topic\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths/topic/jordan.20normal.20form\">#maths &gt; jordan normal form</a> and <a class=\"stream-topic\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths/topic/jordan-chevalley.20decomposition\">#maths &gt; jordan-chevalley decomposition</a> . The first was blocked by something that's now in mathlib.</p>\n<blockquote>\n<p>the matrix exponential would be needed</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.exp_add_of_commute\">docs#matrix.exp_add_of_commute</a> exists!</p>",
        "id": 343703065,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679497130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214000\">@Joh-Tob Schäg</span> This is quite far from my mathematical area of expertise. But how long would it take you to explain all of this to a student who only knows the most basic calculus and analysis?<br>\nNow imagine that this student makes you pause and explain in more detail whenever a step is not super-explicitly-obvious from previous lemmas...</p>",
        "id": 343703284,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1679497184
    },
    {
        "content": "<blockquote>\n<p>characteristic polynomials</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.aeval_self_charpoly\">docs#matrix.aeval_self_charpoly</a> is likely one of the statements you're looking for</p>",
        "id": 343704281,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679497382
    },
    {
        "content": "<p>(I talked very briefly about how mathlib had some of the prerequisites for control theory <a href=\"https://eric-wieser.github.io/divf-2022/#/mathlib-knows-cayley-hamilton/2\">in these slides</a>)</p>",
        "id": 343705358,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679497578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214000\">Joh-Tob Schäg</span> <a href=\"#narrow/stream/113488-general/topic/Control.20theory.20for.20LTI.20systems/near/343702558\">said</a>:</p>\n<blockquote>\n<p>Is there an easy way for me to comprehend why that would be so hard?</p>\n</blockquote>\n<p>One issue is finding the right person for the job. Another issue is that contour integration is still very much a work in progress.</p>",
        "id": 343705850,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1679497683
    },
    {
        "content": "<p>Multidimensional route:<br>\nWe define a thing called the matrix exponential. We show that it is absolutetly convergent. We introduce exp(tA) we show it's properties with regard to derivative using absolute convergence. We introduce the Jordan normal form and connect that to eigenvalues. We show that for matrixes in jordan form the jordan blocks and matrix exponential give us the solution (relies on  Cayley-Hamilton). We show that the solution to the jordan block system can be mapped to the originial solution (using exp(inv(T) X T) = inv(T)exp(J)T We can now solve linear homogenous time-invariant ODEs. <a href=\"https://en.wikipedia.org/wiki/Cauchy%E2%80%93Euler_equation\">https://en.wikipedia.org/wiki/Cauchy%E2%80%93Euler_equation</a> is relevant here. We give linearity results. We introduce intial conditions.  Using \"Variation of parameters\" (or something else) we proof the formula for affine differential equations we might need <a href=\"https://de.wikipedia.org/wiki/Picard-Iteration\">https://de.wikipedia.org/wiki/Picard-Iteration</a> for that. <br>\nWe define a  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>˙</mo></mover><mo>=</mo><mi>A</mi><mo>∗</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>B</mi><mo>∗</mo><mi>u</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">;</mo></mrow><annotation encoding=\"application/x-tex\"> \\dot{x} = A*x(t) +B*u(t);</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6679em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1111em;\"><span class=\"mord\">˙</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mpunct\">;</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>C</mi><mo>∗</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>D</mi><mo>∗</mo><mi>u</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(t) = C*x(t) + D*u(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span> with inputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> and outputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> as a system.<br>\nWe define the act of connecting systems using linear/affine transforms of $y$s into $u$s. We define the reduction rules which allow to do a (surjective?) mapping of networks of systems into one system while preserving the same dynamics. It might be good to do that without feedback first. Then we do that with feedback. We define exponential stability, BIBO stability, Hurwitz criteria. We can introduce observability, controlability, reachability, stabelisability and their subspace and we would need rank based arguements here.<br>\nThat's how far we get without laplace transforms of $$\\mathbb{R}^n \\mapsto \\mathbb{R}^m} functions.</p>\n<p>Laplace route (1D):<br>\nWe take a theory of rational functions in one variable. We define abstract integral transformations, Laplace transformation, inverve lapalace transformation.<br>\nWe do a 1 D solution theory for Cauchy-Euler equations. We define and proof the laplace transforms we need. We define and proof the rules we need which don't follow from integral transform.<br>\nWe define exponential stability, stability. We define define tying transfer functions together, properness, transfer functions with multi inputs which all share a common s, show some obvious properties, define a particular type of transfer functionnetwork called a standard control loop.  Define exponential stability, BIBO stability, (limits of lapace transform) show  Hurrwitz criteria. Show many simple algebraic properties in Laplace space.<br>\nShow some properties of a thing called step response. Define some computeable properties of transfer functions. We proof that some common rule of thumbs for particular forms of transfer functions aren't horrible. We define constraints on implementability. Define some non standard control loops.<br>\nCauchy's integral formula (no idea how to proof that). Define Nyquist-criteria. Define some define some properties of the nyquist plot. Define bode plot, proof limit on the badness of the piece wise linear approximation. Define some more common controller designs strategies and show that they work.</p>\n<p>Honestly the laplace route sounds like a lot more of a pain and note that those are a bit pedestrian paths. There might be some category theory level stuff to cut that down a lot.</p>\n<p>There is another approachable area for control theory of difference equations. You basically need the same linear algebra as in Multidimensional route but have less problems with difference equations. The Z transform sould be easier to deal with than the s transform if we have a good coverage of sequences and series. No matrix exponential to worry about.</p>\n<p>Which reminds me. All those are covered under systems theory. They have a nice abstraction called a state transition function that might cut off some properties for all of those.</p>",
        "id": 343723651,
        "sender_full_name": "Joh-Tob Schäg",
        "timestamp": 1679501545
    },
    {
        "content": "<blockquote>\n<p>using exp(inv(T) X T) = inv(T)exp(J)T</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.exp_conj'\">docs#matrix.exp_conj'</a> is this result</p>",
        "id": 343737700,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1679504944
    },
    {
        "content": "<p>are you folks aware of the work done by steven gray on the connection between hopf algebras and LTI? for example <a href=\"https://arxiv.org/pdf/1805.02954.pdf\">https://arxiv.org/pdf/1805.02954.pdf</a></p>",
        "id": 344729291,
        "sender_full_name": "Adam Nemecek",
        "timestamp": 1679875975
    }
]