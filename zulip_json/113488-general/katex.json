[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> could you comment on <a href=\"https://github.com/leanprover/vscode-lean/pull/225\">https://github.com/leanprover/vscode-lean/pull/225</a>? What do you want khatex for? And why not using mathjax instead, especially now that we have mathjax 3.0?</p>",
        "id": 208345157,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598622775
    },
    {
        "content": "<p>I guess I'm just more familiar with katex. I'm not married to it.</p>",
        "id": 208345248,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598622828
    },
    {
        "content": "<p>The plan is to try this out as a model for adding certain useful libraries to widgets.</p>",
        "id": 208345347,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598622861
    },
    {
        "content": "<p>The principled way would be to allow Lean to emit javascript that can run random libraries. But the thinking is that katex and D3 cover a lot of the use cases for having custom javascript libraries, so it makes sense to add them in directly to vscode-lean.</p>",
        "id": 208345605,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598622970
    },
    {
        "content": "<p>What do you have in mind using D3? This is a huge library (which very low-level and difficult to learn, but that's a different story).</p>",
        "id": 208345756,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598623033
    },
    {
        "content": "<p>If people don't like it (eg it bloats the vscode extension too much) then it is no problem to remove it.</p>",
        "id": 208345764,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598623036
    },
    {
        "content": "<p>There are some React wrappers for D3 that I was looking at</p>",
        "id": 208345811,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598623060
    },
    {
        "content": "<p>Even just being able to let Lean widgets render graphs would be really useful.</p>",
        "id": 208346122,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598623207
    },
    {
        "content": "<p>Wouldn't be easier to work on \"jump to definition\" in the info view?</p>",
        "id": 208346219,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598623252
    },
    {
        "content": "<p>well triaging is a different question...</p>",
        "id": 208346711,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598623446
    },
    {
        "content": "<p>Sure, you're free to work on anything you find most fun.</p>",
        "id": 208346777,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598623487
    },
    {
        "content": "<p>I would totally use <a href=\"https://github.com/Kha/\">Kha</a>tex</p>",
        "id": 208347051,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598623635
    },
    {
        "content": "<p>I didn't think of it that way</p>",
        "id": 208347109,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598623680
    },
    {
        "content": "<p>Is there some beef around katex vs mathjax? Afaict they seem to be exactly the same but I'm not really paying attention</p>",
        "id": 208347188,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598623699
    },
    {
        "content": "<p>This was also my impression.  I thought katex is the new, modern, cool, <em>in</em> rewrite of mathjax.</p>",
        "id": 208347608,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1598623936
    },
    {
        "content": "<p>No, that's the old new mathjax</p>",
        "id": 208347641,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598623955
    },
    {
        "content": "<p>The new new mathjax is mathjax 3.0</p>",
        "id": 208347649,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598623963
    },
    {
        "content": "<p>But I'm not a specialist here.</p>",
        "id": 208347682,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598623980
    },
    {
        "content": "<p><a href=\"https://pbelmans.ncag.info/blog/2015/12/21/on-towards-mathjax-3-0/\">https://pbelmans.ncag.info/blog/2015/12/21/on-towards-mathjax-3-0/</a> is 5 years old, but maybe still relevant</p>",
        "id": 208347909,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598624103
    },
    {
        "content": "<p>Written by the guy who does the frontend for Stacks Project and Kerodon</p>",
        "id": 208347941,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598624125
    },
    {
        "content": "<p>Does mathjax 3 support tikz?!</p>",
        "id": 208348098,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598624203
    },
    {
        "content": "<p>No. plastex uses server-side tikz rendering.</p>",
        "id": 208348176,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598624253
    },
    {
        "content": "<p>Ah ok</p>",
        "id": 208348260,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598624291
    },
    {
        "content": "<p>Looks like it's an open issue though: <a href=\"https://github.com/mathjax/MathJax/issues/41\">https://github.com/mathjax/MathJax/issues/41</a></p>",
        "id": 208348286,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598624299
    },
    {
        "content": "<p>That would be a game changer</p>",
        "id": 208348297,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598624307
    },
    {
        "content": "<p>This compiles tex to web assembly and then renders as an svg (!) <a href=\"https://github.com/kisonecat/tikzjax\">https://github.com/kisonecat/tikzjax</a></p>",
        "id": 208348414,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598624385
    },
    {
        "content": "<p>So assuming that library works we could actually do this in theory</p>",
        "id": 208348600,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598624454
    },
    {
        "content": "<p>It's probably pretty slow.</p>",
        "id": 208348882,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598624607
    },
    {
        "content": "<p>Hopefully this makes it easier to tackle <a href=\"https://github.com/leanprover/vscode-lean/issues/139\">leanprover/vscode-lean#139</a> (on rendering LaTeX in doc strings on hover).</p>",
        "id": 208356911,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1598628299
    },
    {
        "content": "<p>Speaking of slowness, did something happen in the last couple of days? The widget view sometimes lags like crazy.</p>",
        "id": 208358629,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598629049
    },
    {
        "content": "<p>I don't think so.</p>",
        "id": 208360872,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598630073
    },
    {
        "content": "<p>3.19 came out but idk what would have changed to cause it to be slow</p>",
        "id": 208360994,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598630140
    },
    {
        "content": "<p>Let's wait to see if anyone else noticed something, and if Gabriel has an idea. Maybe it's my computer.</p>",
        "id": 208361117,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598630182
    },
    {
        "content": "<p>mathlib master isn't on 3.19.0c yet anyways. Do you notice it happening on any specific files, or just all of them in general?</p>",
        "id": 208361422,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1598630321
    },
    {
        "content": "<p>I've been working both on linear algebra and integration.</p>",
        "id": 208361497,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598630356
    },
    {
        "content": "<p>When Scott shared his screen this afternoon, he also had trouble with the widget view</p>",
        "id": 208366891,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598633052
    },
    {
        "content": "<p>Yeah, it was lagging badly. It seemed like when my mouse passed over the rendered goal, nothing would happen for 2-10 seconds, and then there would be a sudden burst of different highlighting passing through the rendered goal, presumably following the path of my mouse.</p>",
        "id": 208406259,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598658661
    },
    {
        "content": "<p>The other things I would <strong>really</strong> like in the goal view are:</p>\n<ol>\n<li>whitespace and indenting matching the plain text view (I often turn off widgets because the expressions become unreadable without indenting)</li>\n<li>coloured parentheses to show matching pairs!</li>\n</ol>",
        "id": 208406326,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598658726
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> (or anyone else) could you share an example of a theorem with a goal that's very laggy?</p>",
        "id": 208422605,
        "sender_full_name": "Alex Peattie",
        "timestamp": 1598687807
    },
    {
        "content": "<p>e.g. if I put the cursor at line 107 of <code>src/topology/sheaves/sheaf_of_functions.lean</code> in <code>master</code>, go to the first goal, then shake the mouse up and down over the goal, I can quickly get it to lag many seconds behind.</p>",
        "id": 208426919,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598695885
    },
    {
        "content": "<p>For me shaking on the goal is fine, but if I start shaking over the entire local context then I get problems</p>",
        "id": 208447893,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598726606
    },
    {
        "content": "<p>Ah OK I see the problem (although not new as far as I can see). It's to do with how <code>handle_widget_event</code> handles multithreading/receiving requests faster than the Lean server can handle - which it looks like you flagged already <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> : <a href=\"https://github.com/leanprover-community/lean/blob/v3.19.0/src/shell/server.cpp#L630-L632\">https://github.com/leanprover-community/lean/blob/v3.19.0/src/shell/server.cpp#L630-L632</a> . It seems that for complicated tactic states, the <code>onMouseEnter</code>/<code>onMouseLeave</code> events start taking a while and they start \"stacking up\" quite quickly.</p>",
        "id": 208475238,
        "sender_full_name": "Alex Peattie",
        "timestamp": 1598776825
    },
    {
        "content": "<p>I guess there are a few ways to handle this - one would be changing the behaviour of <code>handle_widget_event</code> on the server-side. We could also have VSCode be smarter about how it dispatches widget events. E.g. if it's waiting for a widget rerender from the server, instead of dispatching another widget event request right away, enqueue it in memory. Then once the widget's rerendered, prune the queue to get rid of duplicate <code>onMouseEnter</code> events etc. <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 208475240,
        "sender_full_name": "Alex Peattie",
        "timestamp": 1598776838
    },
    {
        "content": "<p>I can't get this lagginess to happen on Scott's file. :/</p>",
        "id": 208475555,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598777532
    },
    {
        "content": "<p>I agree that indenting is a huge issue</p>",
        "id": 208475559,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598777574
    },
    {
        "content": "<p>But the lagging thing is certainly caused by a queue of events. So the fix is to have lean only keep the latest widget_event in the queue. Maybe <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> will know how difficult that is. But it still doesn't explain why the issues would have started over the last few days.</p>",
        "id": 208475665,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598777832
    },
    {
        "content": "<p>Not to complicate things further, but I was thinking about it and I actually wonder if  keeping only the latest widget_event will cause strange behaviour. Like if you hovered and quickly clicked an expression, Lean might throw away either the <code>onMouseEnter</code> or the <code>onClick</code> event, and so the UI only registers either the hover or the click (but not both)...</p>",
        "id": 208475808,
        "sender_full_name": "Alex Peattie",
        "timestamp": 1598778111
    },
    {
        "content": "<p>Ideally maybe Lean should keep only the latest of each kind of widget_event?</p>",
        "id": 208475848,
        "sender_full_name": "Alex Peattie",
        "timestamp": 1598778146
    },
    {
        "content": "<p>Yeah that's a good idea</p>",
        "id": 208475851,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598778164
    },
    {
        "content": "<p>Indenting fix is on the way thanks to CSS wizardry of <span class=\"user-mention\" data-user-id=\"235513\">@Daniel Fabian</span> and  <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>  <a href=\"https://github.com/leanprover-community/mathlib/issues/3764\">#3764</a></p>",
        "id": 208480637,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598786781
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/katex/near/208346219\">said</a>:</p>\n<blockquote>\n<p>Wouldn't be easier to work on \"jump to definition\" in the info view?</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3982\">#3982</a></p>",
        "id": 208482158,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598789227
    },
    {
        "content": "<p>As I've been using widgets more and more I've been realising I'm missing this.</p>",
        "id": 208482861,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598790384
    },
    {
        "content": "<p>I don't think it's (laggy highlighting) started in the last few days; I think I've had it all along.</p>",
        "id": 208484105,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598792221
    },
    {
        "content": "<p>I'd love to have this merged! I'll give a propaganda talk tomorrow morning, I could certainly use it.</p>",
        "id": 208488230,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598798748
    },
    {
        "content": "<p>Re: lagging and event queue.  Maybe it would help to handle some events directly in the info view instead of sending them back to Lean?  For example, we could offload the highlighting like here: <a href=\"https://gebner.github.io/mathlib_docs/geometry/euclidean/circumcenter.html#euclidean_geometry.exists_unique_dist_eq_of_insert\">https://gebner.github.io/mathlib_docs/geometry/euclidean/circumcenter.html#euclidean_geometry.exists_unique_dist_eq_of_insert</a></p>",
        "id": 208488872,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1598799644
    },
    {
        "content": "<p>Oh, is this new?</p>",
        "id": 208488957,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598799725
    },
    {
        "content": "<p>The flashy highlighting?  I've been toying around with the idea for a while, but this is not the official documentation page.</p>",
        "id": 208488993,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1598799841
    },
    {
        "content": "<p>Yes, the flashy highlighting. Maybe the color gradient is a bit too much, but some highlighting is nice.</p>",
        "id": 208489038,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598799880
    },
    {
        "content": "<p>I love the gradient</p>",
        "id": 208493005,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1598805486
    }
]