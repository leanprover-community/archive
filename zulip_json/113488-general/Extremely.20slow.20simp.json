[
    {
        "content": "<p>The following example takes more than one minute on my machine:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">all</span>\n<span class=\"kn\">set_option</span> <span class=\"n\">trace</span><span class=\"bp\">.</span><span class=\"n\">simplify</span> <span class=\"n\">true</span>\n<span class=\"kn\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">nnreal</span>\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">ha</span><span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simp</span>\n</pre></div>\n\n\n<p>The simplifier rewrites once.  However it seems to spend a huge time trying to match <code>add_con.coe_add</code> (20s), <code>con.coe_mul</code> (19s), <code>filter.filter_product.of_one</code> (9s), <code>filter.filter_product.of_neg</code> (4s), and <code>filter.filter_product.of_zero</code> (15s).  Does anybody have any idea what's going on here?</p>",
        "id": 189266974,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1582844528
    },
    {
        "content": "<p>What are the imports?</p>",
        "id": 189267136,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582844665
    },
    {
        "content": "<p><code>import all</code></p>",
        "id": 189267186,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1582844707
    },
    {
        "content": "<p>You should have used <code>squeeze_simp</code>, then you would only have to do it once</p>",
        "id": 189267844,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1582845299
    },
    {
        "content": "<p>Past my bedtime now, but the (or a) culprit seems to be an instance search for <code>example : has_mul {r : ℝ // 0 ≤ r} := by apply_instance</code>. <code>nnreal</code> gets unfolded somewhere it shouldn't.</p>",
        "id": 189269664,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582846930
    },
    {
        "content": "<p>Ah, <code>(⟨a, ha⟩ : ℝ≥0)</code> doesn't actually have type <code>nnreal</code>, it has type <code>{r : real // 0 &lt;= r}</code>. Nothing's getting unfolded, it isn't even folded to start with.</p>",
        "id": 189270031,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582847329
    }
]