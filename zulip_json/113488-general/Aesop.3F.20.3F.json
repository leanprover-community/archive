[
    {
        "content": "<p>A student was working on algebraic geometry in my office today and they were at that irritating \"every line takes 5 seconds to process\" stage. I then noticed that they'd solved three goals earlier with <code>aesop_cat</code> so we changed them to <code>sorry</code> and all of a sudden our lives were much better. When <code>tidy</code> used to pull this stunt I'd change it to <code>tidy?</code> and then just fill in the tactic proof it found instead. Can we pull off the same trick with <code>aesop_cat</code>? (and then of course have <code>aesop says ...</code> later on :-) )</p>",
        "id": 377347366,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689954701
    },
    {
        "content": "<p><code>aesop?</code> already works (most of the time). If <code>aesop_cat?</code> doesn't work yet, we just need another macro that passes along the <code>?</code>.</p>",
        "id": 377348630,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1689954948
    },
    {
        "content": "<p>Due to laziness, I ended up expanding <code>aesop_cat</code> to <code>aesop? [rules..]</code> but Jannis is correct that this should be fixed (easily) properly</p>",
        "id": 377349084,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1689955028
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6044\">#6044</a> with <code>aesop_cat?</code>, <code>aesop_graph?</code>, and <code>restrict_tac?</code>.</p>",
        "id": 377366175,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1689958462
    }
]