[
    {
        "content": "<p>This is from CI for <a href=\"https://github.com/leanprover-community/mathlib4/pull/6832\">#6832</a>: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Current</span> <span class=\"n\">runner</span> <span class=\"n\">version</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">308</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">'</span>\n<span class=\"n\">Runner</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">hoskinson1'</span>\n<span class=\"n\">Runner</span> <span class=\"n\">group</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">Default'</span>\n<span class=\"n\">Machine</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">b715c4209e97'</span>\n<span class=\"n\">GITHUB_TOKEN</span> <span class=\"n\">Permissions</span>\n<span class=\"n\">Secret</span> <span class=\"n\">source</span><span class=\"o\">:</span> <span class=\"n\">Actions</span>\n<span class=\"n\">Prepare</span> <span class=\"n\">workflow</span> <span class=\"n\">directory</span>\n<span class=\"n\">Prepare</span> <span class=\"n\">all</span> <span class=\"n\">required</span> <span class=\"n\">actions</span>\n<span class=\"n\">Getting</span> <span class=\"n\">action</span> <span class=\"n\">download</span> <span class=\"n\">info</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">space</span> <span class=\"n\">left</span> <span class=\"n\">on</span> <span class=\"n\">device</span> <span class=\"o\">:</span> <span class=\"bp\">'/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">actions</span><span class=\"bp\">-</span><span class=\"n\">runner</span><span class=\"bp\">/</span><span class=\"n\">_work</span><span class=\"bp\">/</span><span class=\"n\">_actions</span><span class=\"bp\">/</span><span class=\"n\">dcarbone</span><span class=\"bp\">/</span><span class=\"n\">install</span><span class=\"bp\">-</span><span class=\"n\">jq</span><span class=\"bp\">-</span><span class=\"n\">action</span><span class=\"bp\">/</span><span class=\"n\">v1.0.1'</span>\n</code></pre></div>\n<p>Is this something to be worried about?</p>",
        "id": 389172923,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1693915350
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span></p>",
        "id": 389173777,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1693915606
    },
    {
        "content": "<p>It probably means we need to delete the cache directory</p>",
        "id": 389173846,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1693915622
    },
    {
        "content": "<p>Can reproduce in all of my PRs <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>",
        "id": 389179454,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1693917443
    },
    {
        "content": "<p>I thought the CI script included <code>lake exe cache clean</code></p>",
        "id": 389181876,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1693918187
    },
    {
        "content": "<p>I think it's failing on a different step.</p>",
        "id": 389182290,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693918315
    },
    {
        "content": "<p>The <code>install-jq-action</code> is new (added by me ....), and I'm worried that it is installing multiple copies and filling up the drive.</p>",
        "id": 389182486,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693918348
    },
    {
        "content": "<p>I'm not sure if we can diagnose that until someone with shell access to the machines is available.</p>",
        "id": 389182566,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693918372
    },
    {
        "content": "<p>The faulty runner has been temporarily disabled, re-running jobs should now work <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 389196566,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1693922362
    },
    {
        "content": "<p>I've resent accepted PRs to bors.</p>",
        "id": 389197077,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1693922483
    },
    {
        "content": "<p>It's actually <code>.elan/toolchains</code> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 389220696,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1693928207
    },
    {
        "content": "<p>I cleaned up the toolchains and reenabled <code>hoskinson1</code>. Toolchain size will certainly come up again, but hopefully less so assuming that <code>rc</code> and stable release bumps are less frequent than nightly bumps.</p>",
        "id": 389221974,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1693928609
    },
    {
        "content": "<p>Doesn't this just mean we need garbage collection for toolchains within elan? E.g., a date- or storage-based system where elan automatically removes toolchains after the specified limit? Even if the default is \"never delete\", we probably want this option.</p>",
        "id": 389226453,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1693929889
    },
    {
        "content": "<p>Note we are still using every toolchain (possibly even more so than previously), because the <code>nightly-testing</code> branch now has automation to try out every nightly as soon as it arrives.</p>",
        "id": 389305749,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693959409
    },
    {
        "content": "<p>Fixing this in elan requires more care, because we wouldn't want to delete a toolchain that was still in use.</p>\n<p>In CI it is easy, because there is no danger to occasionally have to redownload.</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/6969\">#6969</a></p>",
        "id": 389308426,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1693960570
    },
    {
        "content": "<p>It's back. : (</p>",
        "id": 391002838,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1694718576
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span></p>",
        "id": 391003257,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694718737
    },
    {
        "content": "<p>I've disabled the runner <code>hoskinson3</code> while we wait for a fix so that it doesn't cause more issues.</p>",
        "id": 391006136,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694720125
    },
    {
        "content": "<p>Fixed. It was the same issue: <code>hoskinson3</code> had 15GiB of Lean toolchains stored on it. Even though <a href=\"https://github.com/leanprover-community/mathlib4/pull/6969\">#6969</a> was merged, this does not appear to suffice. My conjecture is that there are jobs that execute on all these runners that pull in some old toolchains. For example, on <code>hoskinson2</code> <code>2023-08-05</code> was pulled in <em>today</em>. So checking for toolchain folders older than two weeks does not correspond to checking for old Lean versions. The bruteforce solution would be to shorten the period to two days or even just one day.</p>",
        "id": 391014402,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1694723781
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 391014869,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694723993
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> <a href=\"#narrow/stream/113488-general/topic/No.20space.20left.20on.20device/near/391014402\">said</a>:</p>\n<blockquote>\n<p>Fixed. It was the same issue: <code>hoskinson3</code> had 15GiB of Lean toolchains stored on it. Even though <a href=\"https://github.com/leanprover-community/mathlib4/pull/6969\">#6969</a> was merged, this does not appear to suffice. My conjecture is that there are jobs that execute on all these runners that pull in some old toolchains. For example, on <code>hoskinson2</code> <code>2023-08-05</code> was pulled in <em>today</em>. So checking for toolchain folders older than two weeks does not correspond to checking for old Lean versions. The bruteforce solution would be to shorten the period to two days or even just one day.</p>\n</blockquote>\n<p>Looks like hoskinson3 is now failing at </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Run</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">clean</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">toolchain</span> <span class=\"bp\">'</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.0.0'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">installed</span>\n</code></pre></div>",
        "id": 391021737,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1694727377
    },
    {
        "content": "<p>Maybe it just pulls a random lean and adds it to the pile, then hopes it got the right one at some point in the past?</p>",
        "id": 391022458,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694727777
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/345428-mathlib-reviewers/topic/v4.2E0.2E0.20not.20found/near/391020404\">https://leanprover.zulipchat.com/#narrow/stream/345428-mathlib-reviewers/topic/v4.2E0.2E0.20not.20found/near/391020404</a></p>",
        "id": 391022511,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1694727821
    },
    {
        "content": "<p>I suspect the problem is that <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> deleted the toolchains in some way that left elan in a broken state, knowing the toolchain wasn't there but unwilling to install it.</p>",
        "id": 391028169,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731064
    },
    {
        "content": "<p>Indeed, I can reproduce locally.</p>\n<p>Deleting <code>~/.elan/toolchains</code> but not <code>~/.elan/update-hashes</code> leaves elan in exactly this broken state.</p>",
        "id": 391028365,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731182
    },
    {
        "content": "<p>So --- to fix, we need:</p>\n<ul>\n<li>Someone (<span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>?) with Hoskinson access to delete also the <code>update-hashes</code> directories</li>\n<li><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> to patch elan so it can cope with this sort of abuse from users :-)</li>\n</ul>",
        "id": 391028493,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, do you still have shell access to these machines?</p>",
        "id": 391028561,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731286
    },
    {
        "content": "<p>in theory</p>",
        "id": 391028582,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694731299
    },
    {
        "content": "<p>It looks like it may just be hoskinson3 affected, so we can just disable it again.</p>",
        "id": 391028708,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731351
    },
    {
        "content": "<p>I've disabled it, so hopefully we're good to go now.</p>",
        "id": 391028797,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731430
    },
    {
        "content": "<p>Ugh, hoskinson9 is having the same problems, I'm not sure how many this affected.</p>",
        "id": 391029115,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731670
    },
    {
        "content": "<p><code>hoskinson</code> too, looks like most of them have been broken. :-)</p>",
        "id": 391029267,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731773
    },
    {
        "content": "<p>maybe we need a script before downloading a toolchain which just ensures that there are fewer than N toolchains installed by removing old ones</p>",
        "id": 391029361,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694731820
    },
    {
        "content": "<p>Which problem, no space available or toolchain not installed ?</p>",
        "id": 391029429,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694731875
    },
    {
        "content": "<p>no space available</p>",
        "id": 391029437,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694731883
    },
    {
        "content": "<p>the toolchain not installed problem is the side effect of not having the space to install it IIUC</p>",
        "id": 391029462,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694731904
    },
    {
        "content": "<p>if we just have a hard limit on the number of toolchains installed instead of a time-based limit then we can avoid this</p>",
        "id": 391029538,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694731932
    },
    {
        "content": "<p>Also, the current scripts is only deleting from the <code>.elan/toolchains/</code> directory, leaving <code>.lean/update-hashes/</code> alone, so is borked anyway.</p>",
        "id": 391029577,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731972
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/No.20space.20left.20on.20device/near/391028169\">said</a>:</p>\n<blockquote>\n<p>I suspect the problem is that <span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> deleted the toolchains in some way that left elan in a broken state, knowing the toolchain wasn't there but unwilling to install it.</p>\n</blockquote>\n<p>So this isn’t the right diagnosis?</p>",
        "id": 391029578,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694731973
    },
    {
        "content": "<p>I think it is?</p>",
        "id": 391029595,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694731987
    },
    {
        "content": "<p>I thought Mario said it isn’t</p>",
        "id": 391029641,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694732026
    },
    {
        "content": "<p>no</p>",
        "id": 391029643,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694732029
    },
    {
        "content": "<p>fixing the messed up installation is good, but the root issue is that we are running out of space for toolchains</p>",
        "id": 391029721,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694732063
    },
    {
        "content": "<p>Here's the chain of events:</p>\n<ul>\n<li>we don't delete enough old toolchains</li>\n<li>so the runners still run out of space</li>\n<li>yesterday Wojciech cleaned up by deleting from the <code>.elan/toolchains/</code> directory</li>\n<li>but because <code>.elan/update-hashes</code> was still there, elan refuses to redownload the toolchains</li>\n</ul>",
        "id": 391029737,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732078
    },
    {
        "content": "<p>Right, sorry of the misunderstanding</p>",
        "id": 391029740,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1694732078
    },
    {
        "content": "<p>Why do we need a script at all? Shouldn’t the runs running on <code>hoskinson</code> et al all be running in a container with an ephemeral volume?</p>",
        "id": 391029745,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694732081
    },
    {
        "content": "<p>we want to cache toolchains</p>",
        "id": 391029756,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694732099
    },
    {
        "content": "<p>just not forever</p>",
        "id": 391029771,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694732105
    },
    {
        "content": "<p>Oh right ok</p>",
        "id": 391029776,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1694732109
    },
    {
        "content": "<p>Life would be simpler if we didn't!</p>",
        "id": 391029793,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732124
    },
    {
        "content": "<p>It seems the savings from caching the toolchains are:</p>\n<ul>\n<li>saving on network traffic (are we actually paying incrementally?)</li>\n<li>saving a little bit of time on each CI run</li>\n</ul>",
        "id": 391029903,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732196
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/No.20space.20left.20on.20device/near/391029538\">said</a>:</p>\n<blockquote>\n<p>if we just have a hard limit on the number of toolchains installed instead of a time-based limit then we can avoid this</p>\n</blockquote>\n<p>This is a good idea.</p>",
        "id": 391029913,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1694732205
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/No.20space.20left.20on.20device/near/391029267\">said</a>:</p>\n<blockquote>\n<p><code>hoskinson</code> too, looks like most of them have been broken. :-)</p>\n</blockquote>\n<p>Sorry about this oversight. Fixing them all now.</p>",
        "id": 391029937,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1694732224
    },
    {
        "content": "<p>No problem, I've done exactly the same thing locally multiple times.</p>",
        "id": 391029992,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732255
    },
    {
        "content": "<p>Plus written a CI script that does more of it. :-)</p>",
        "id": 391030008,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732267
    },
    {
        "content": "<p>You could have a hard limit of 1 :-)</p>",
        "id": 391030088,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1694732304
    },
    {
        "content": "<p>Okay, should be good again. It was <code>hoskinson[39]?</code>.</p>",
        "id": 391030660,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1694732598
    },
    {
        "content": "<p>Those were the ones I found so far!</p>",
        "id": 391030708,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732633
    },
    {
        "content": "<p>Does</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cd</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">ls</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"n\">td</span> <span class=\"bp\">*</span> <span class=\"bp\">|</span> <span class=\"n\">tail</span> <span class=\"bp\">-</span><span class=\"n\">n</span> <span class=\"bp\">+</span><span class=\"mi\">11</span> <span class=\"bp\">|</span> <span class=\"n\">xargs</span> <span class=\"bp\">-</span><span class=\"n\">I</span> <span class=\"o\">{}</span> <span class=\"n\">echo</span> <span class=\"s2\">\"rm -rf {} &amp;&amp; rm -rf ../update-hashes/{}\"</span>\n</code></pre></div>\n<p>look okay?</p>",
        "id": 391031012,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732821
    },
    {
        "content": "<p>(Notice the <code>echo</code>, this is a dry build that you can safely run on your own machine. :-)</p>",
        "id": 391031041,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732841
    },
    {
        "content": "<p>hopefully deletes all but the 10 most recent subdirectories in <code>~/.elan/toolchains</code>, and the corresponding files in <code>~/.elan/update-hashes</code></p>",
        "id": 391031141,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694732894
    },
    {
        "content": "<p>it's a bit wrong in the presence of <code>elan toolchain link</code> but I guess this isn't a problem for the CI machines</p>",
        "id": 391031216,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694732953
    },
    {
        "content": "<p>it also looks like it will delete the default toolchain, not sure if this has any impact</p>",
        "id": 391031251,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694732986
    },
    {
        "content": "<p>you don't need <code>-rf</code> for the second part, it's a file not a directory</p>",
        "id": 391031364,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694733041
    },
    {
        "content": "<p>oh and the <code>toolchain link</code>s don't even appear in <code>update-hashes</code> so that rm would fail</p>",
        "id": 391031418,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694733081
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cd</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">find</span> <span class=\"bp\">.</span> <span class=\"bp\">-</span><span class=\"n\">maxdepth</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span><span class=\"n\">type</span> <span class=\"n\">d</span> <span class=\"bp\">-</span><span class=\"n\">print0</span> <span class=\"bp\">|</span> <span class=\"n\">xargs</span> <span class=\"bp\">-</span><span class=\"mi\">0</span> <span class=\"n\">ls</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"n\">td</span> <span class=\"bp\">|</span> <span class=\"n\">grep</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"s2\">\"nightly$\"</span> <span class=\"bp\">|</span> <span class=\"n\">grep</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"s2\">\"stable$\"</span> <span class=\"bp\">|</span> <span class=\"n\">tail</span> <span class=\"bp\">-</span><span class=\"n\">n</span> <span class=\"bp\">+</span><span class=\"mi\">11</span> <span class=\"bp\">|</span> <span class=\"n\">xargs</span> <span class=\"bp\">-</span><span class=\"n\">I</span> <span class=\"o\">{}</span> <span class=\"n\">echo</span> <span class=\"s2\">\"rm -rf {} &amp;&amp; rm ../update-hashes/{}\"</span>\n</code></pre></div>",
        "id": 391031774,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694733299
    },
    {
        "content": "<p>Ignores symbolic links, skips nightly and stable.</p>",
        "id": 391031790,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694733313
    },
    {
        "content": "<p>I think the <code>$</code> needs escaping or single quotes</p>",
        "id": 391031835,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694733356
    },
    {
        "content": "<p>it's interpreted as a malformed shell variable in fish</p>",
        "id": 391031895,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694733376
    },
    {
        "content": "<p>the first line I get is <code>rm -rf . &amp;&amp; rm ../update-hashes/.</code> which looks bad</p>",
        "id": 391031981,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694733446
    },
    {
        "content": "<p>hehe :-)</p>",
        "id": 391032333,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694733705
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cd</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">find</span> <span class=\"bp\">.</span> <span class=\"bp\">-</span><span class=\"n\">maxdepth</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span><span class=\"n\">type</span> <span class=\"n\">d</span> <span class=\"bp\">!</span> <span class=\"bp\">-</span><span class=\"n\">name</span> <span class=\"bp\">.</span> <span class=\"bp\">-</span><span class=\"n\">print0</span> <span class=\"bp\">|</span> <span class=\"n\">xargs</span> <span class=\"bp\">-</span><span class=\"mi\">0</span> <span class=\"n\">ls</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"n\">td</span> <span class=\"bp\">|</span> <span class=\"n\">grep</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"bp\">'</span><span class=\"n\">nightly</span><span class=\"bp\">$'</span> <span class=\"bp\">|</span> <span class=\"n\">grep</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"bp\">'</span><span class=\"n\">stable</span><span class=\"bp\">$'</span> <span class=\"bp\">|</span> <span class=\"n\">tail</span> <span class=\"bp\">-</span><span class=\"n\">n</span> <span class=\"bp\">+</span><span class=\"mi\">2</span> <span class=\"bp\">|</span> <span class=\"n\">xargs</span> <span class=\"bp\">-</span><span class=\"n\">I</span> <span class=\"o\">{}</span> <span class=\"n\">sh</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">'</span><span class=\"n\">echo</span> <span class=\"o\">{}</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"s2\">\"{}\"</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">rm</span> <span class=\"s2\">\"../update-hashes/{}\"</span><span class=\"bp\">'</span>\n</code></pre></div>",
        "id": 391032426,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694733753
    },
    {
        "content": "<p>That one has a live <code>rm</code> in it.</p>",
        "id": 391032441,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694733774
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cd</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">find</span> <span class=\"bp\">.</span> <span class=\"bp\">-</span><span class=\"n\">maxdepth</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span><span class=\"n\">type</span> <span class=\"n\">d</span> <span class=\"bp\">!</span> <span class=\"bp\">-</span><span class=\"n\">name</span> <span class=\"bp\">.</span> <span class=\"bp\">-</span><span class=\"n\">print0</span> <span class=\"bp\">|</span> <span class=\"n\">xargs</span> <span class=\"bp\">-</span><span class=\"mi\">0</span> <span class=\"n\">ls</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"n\">td</span> <span class=\"bp\">|</span> <span class=\"n\">grep</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"bp\">'</span><span class=\"n\">nightly</span><span class=\"bp\">$'</span> <span class=\"bp\">|</span> <span class=\"n\">grep</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"bp\">'</span><span class=\"n\">stable</span><span class=\"bp\">$'</span> <span class=\"bp\">|</span> <span class=\"n\">tail</span> <span class=\"bp\">-</span><span class=\"n\">n</span> <span class=\"bp\">+</span><span class=\"mi\">2</span> <span class=\"bp\">|</span> <span class=\"n\">xargs</span> <span class=\"bp\">-</span><span class=\"n\">I</span> <span class=\"o\">{}</span> <span class=\"n\">sh</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">'</span><span class=\"n\">echo</span> <span class=\"o\">{}</span><span class=\"bp\">'</span>\n</code></pre></div>",
        "id": 391032464,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694733791
    },
    {
        "content": "<p>without the <code>rm</code></p>",
        "id": 391032470,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694733797
    },
    {
        "content": "<p>PR'd as <a href=\"https://github.com/leanprover-community/mathlib4/pull/7166\">#7166</a></p>",
        "id": 391033389,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694734442
    },
    {
        "content": "<p>Okay, between that and <a href=\"https://github.com/leanprover/elan/issues/107\">https://github.com/leanprover/elan/issues/107</a>, hopefully we should be set in future.</p>",
        "id": 391034287,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694734963
    },
    {
        "content": "<p>We should make sure someone besides Wojciech has shell access to the runners, in practice as well as theory. :-)</p>",
        "id": 391034314,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694734986
    },
    {
        "content": "<p>Goodness, I missed all the fun in 6 hours. <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 391063119,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1694746927
    },
    {
        "content": "<p>When mathlib starts tracking rc's and the toolchain only bumps ~1/week then this problem should also fade into a more relaxed state</p>",
        "id": 391065157,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1694747875
    },
    {
        "content": "<p>Or maybe it is already tracking rc's? I lost track....</p>",
        "id": 391065249,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1694747908
    },
    {
        "content": "<p>it's already tracking rc's</p>",
        "id": 391065447,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694748003
    },
    {
        "content": "<p>but the PRs are still on a variety of old nightlies</p>",
        "id": 391065536,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694748031
    },
    {
        "content": "<p>we have been on rc's for <a href=\"https://github.com/leanprover-community/mathlib4/commit/a80d330cac8f1d82b69767e1412893ac36ca6c00\">3 weeks</a></p>",
        "id": 391065733,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694748133
    },
    {
        "content": "<p>Hopefully that means that there's 3 weeks worth of PRs that are now using &lt;= 3 toolchains</p>",
        "id": 391065822,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1694748186
    },
    {
        "content": "<p>Yeah, but CI is still using every nightly, because of the semi-automated <code>nightly-testing</code> branch. :-)</p>",
        "id": 391070531,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694750222
    },
    {
        "content": "<p>Also a new toolchain for each Lean 4 PR. :-)</p>",
        "id": 391070579,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694750245
    },
    {
        "content": "<p>Don't get your hopes up!</p>",
        "id": 391070601,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1694750258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/No.20space.20left.20on.20device/near/391070531\">said</a>:</p>\n<blockquote>\n<p>Yeah, but CI is still using every nightly, because of the semi-automated <code>nightly-testing</code> branch. :-)</p>\n</blockquote>\n<p>True, but <code>nightly-testing</code> is a good citizen, it only tests today's nightly, once a day, and doesn't keep coming back to the PR after a month without a merge</p>",
        "id": 391071992,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1694750764
    },
    {
        "content": "<p>We're hitting this again: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6429072971/job/17457436332\">https://github.com/leanprover-community/mathlib4/actions/runs/6429072971/job/17457436332</a></p>",
        "id": 395248507,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696594994
    },
    {
        "content": "<p>Runner disabled for now</p>",
        "id": 395249568,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696595352
    },
    {
        "content": "<p>I think I've <code>bors retry</code>-ed all affected ready-to-merge PRs</p>",
        "id": 395251569,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1696596046
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 395251773,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1696596122
    },
    {
        "content": "<p>Would <a href=\"https://github.com/jlumbroso/free-disk-space\">https://github.com/jlumbroso/free-disk-space</a> be helpful for this too? It can clear up to 31 GB of disk space in about 3 minute, I have used it and it works as claimed.</p>",
        "id": 395481898,
        "sender_full_name": "Utensil Song",
        "timestamp": 1696734612
    },
    {
        "content": "<p>While I have shell access and can perhaps implement a fix if needed, I neither know why we are running out of space, nor even how to enter the environment the runners run in to have a look around! Someone else will need to fix one of these two problems. :-)</p>",
        "id": 395591682,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1696813163
    },
    {
        "content": "<p>It was just 10GiB of Lean toolchains again, combined with some other old files that had accumulated.</p>",
        "id": 395744103,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1696874435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>, sorry to be dumb, but could you tell me where I should have gone after ssh'ing into this machine in order to find those toolchains?</p>",
        "id": 395779728,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1696897650
    },
    {
        "content": "<p>Np, the easy way is to run <code>sudo ncdu /</code> and look at what takes up the most space on the drive. This will usually be some folder inside the docker image.</p>",
        "id": 395779855,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1696897711
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">ncdu</span>\n<span class=\"bp\">-</span><span class=\"n\">sh</span><span class=\"o\">:</span> <span class=\"mi\">9</span><span class=\"o\">:</span> <span class=\"n\">ncdu</span><span class=\"o\">:</span> <span class=\"n\">not</span> <span class=\"n\">found</span>\n</code></pre></div>",
        "id": 395779973,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1696897786
    },
    {
        "content": "<p>Which runner is this on? In general, for small utilities like these please feel free to <code>apt install</code>.</p>",
        "id": 395787572,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1696901507
    },
    {
        "content": "<p>That was on the \"unnumbered\" hoskinson.</p>",
        "id": 395789239,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1696902211
    },
    {
        "content": "<p>(I've installed ncdu everywhere.)</p>",
        "id": 395789620,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1696902380
    },
    {
        "content": "<p>It's happening again: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6754826458/job/18362702531\">https://github.com/leanprover-community/mathlib4/actions/runs/6754826458/job/18362702531</a></p>",
        "id": 400294871,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699101100
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2494\">@maintainers</span></p>",
        "id": 400294872,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699101106
    },
    {
        "content": "<p>Runner disabled</p>",
        "id": 400295101,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1699101318
    },
    {
        "content": "<p>Restarted</p>",
        "id": 400322603,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1699126871
    },
    {
        "content": "<p>Happening again: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6825189236/job/18562531775?pr=8202\">https://github.com/leanprover-community/mathlib4/actions/runs/6825189236/job/18562531775?pr=8202</a></p>",
        "id": 401376745,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699621787
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2494\">@maintainers</span></p>",
        "id": 401376772,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699621795
    },
    {
        "content": "<p>This is how the speedcenter solves this issue fwiw: <a href=\"https://github.com/Kha/mathlib4-bench/blob/c6be8420f6dcbf70716586abee3c8e05e6a26ef1/bench#L5\">https://github.com/Kha/mathlib4-bench/blob/c6be8420f6dcbf70716586abee3c8e05e6a26ef1/bench#L5</a></p>",
        "id": 401377895,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1699622100
    },
    {
        "content": "<p>Runner disabled</p>",
        "id": 401386726,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1699625211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113488-general/topic/No.20space.20left.20on.20device/near/401377895\">said</a>:</p>\n<blockquote>\n<p>This is how the speedcenter solves this issue fwiw: <a href=\"https://github.com/Kha/mathlib4-bench/blob/c6be8420f6dcbf70716586abee3c8e05e6a26ef1/bench#L5\">https://github.com/Kha/mathlib4-bench/blob/c6be8420f6dcbf70716586abee3c8e05e6a26ef1/bench#L5</a></p>\n</blockquote>\n<p>This is unfortunately not enough. In this case the culprit was 15GiB of mathport data.</p>",
        "id": 401439036,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1699651362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> could you elaborate? AFAIK mathport isn't doing anything that could cause a buildup of data over multiple runs, except maybe the <code>Outputs</code> directory?</p>",
        "id": 401440286,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699652338
    },
    {
        "content": "<p>Ah, sorry, I already deleted the folder! That was the size of the <code>mathport</code> directory. Your guess sounds very plausible: accumulation of many <code>Outputs/</code>. The GitHub runner does not clean directories up across runs by default.</p>",
        "id": 401442223,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1699653821
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4_docs/actions/runs/6852564004\">https://github.com/leanprover-community/mathlib4_docs/actions/runs/6852564004</a></p>\n<p>We seem to have a space issue @ mathlib4_docs as well</p>",
        "id": 401854648,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1699914052
    },
    {
        "content": "<p>It's been fixed!</p>",
        "id": 401867741,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1699920613
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> did you delete some additional stuff? <a href=\"https://github.com/leanprover-community/mathlib4_docs/actions/runs/6857390839/job/18646491207\">https://github.com/leanprover-community/mathlib4_docs/actions/runs/6857390839/job/18646491207</a> it's failing because there is no git config set up now</p>",
        "id": 401869344,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1699921438
    },
    {
        "content": "<p>Alternatively I can also teach the action to set up a git config? But idk if we want that?</p>",
        "id": 401869590,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1699921562
    },
    {
        "content": "<p>That's a bit strange, I reset the entire container so it should be the same setup it has always been.</p>",
        "id": 401870895,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1699922090
    },
    {
        "content": "<p>If there was any transient state on it that the job relied on, that would have been erased as well.</p>",
        "id": 401871004,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1699922144
    },
    {
        "content": "<p>It's also possible that one of the upstream GH actions changed in some way so that it no longer sets up a git config?</p>",
        "id": 401871413,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1699922294
    },
    {
        "content": "<p>Its getting evsn more interesting: <a href=\"https://github.com/leanprover-community/mathlib4_docs/actions/runs/6857431293\">https://github.com/leanprover-community/mathlib4_docs/actions/runs/6857431293</a> it works again</p>",
        "id": 401920951,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1699946310
    },
    {
        "content": "<p>hoskinson6 seems to be full again, I got another mathport failure on it. That last run you linked is on hoskinson5</p>",
        "id": 401921073,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699946381
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> could you link the failure? Looking at it now, there is space.</p>",
        "id": 402022179,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1699978934
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathport/actions/runs/6859657810/job/18652262231\">https://github.com/leanprover-community/mathport/actions/runs/6859657810/job/18652262231</a></p>",
        "id": 402022338,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699978995
    },
    {
        "content": "<p>It could be that something has changed upstream which is causing the mathport build to take a lot more space now. I am suspicious that we are seeing many space issues in a short time period now, when nothing in particular has changed recently in mathport</p>",
        "id": 402022558,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699979067
    },
    {
        "content": "<p>Oh, it could be the post-update hook</p>",
        "id": 402022759,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699979136
    },
    {
        "content": "<p>yeah this is probably making a mess because lean3port and mathlib3port have nonstandard setups, we are getting 3 mathlibs instead of just one</p>",
        "id": 402023192,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699979259
    },
    {
        "content": "<p>The <a href=\"http://speed.lean-fro.org/mathlib4/queue\">mathlib4 speedcenter</a> currently says \"no worker registered\". Is it maybe due to some disabled runners?</p>",
        "id": 402081345,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1700000760
    },
    {
        "content": "<p>Thanks, it's up again now</p>",
        "id": 402178385,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1700038472
    },
    {
        "content": "<p><code>hoskinson9</code> is out of disk space: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/6927605611/job/18841912762\">https://github.com/leanprover-community/mathlib4/actions/runs/6927605611/job/18841912762</a></p>",
        "id": 403122535,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700470431
    },
    {
        "content": "<p>Ugh, I'm not sure what to remove. I'd hoped <a href=\"https://github.com/leanprover-community/mathlib4/pull/8525\">#8525</a> would help. Maybe it hasn't had enough time. I've been running ncdu on these machines, and there's nothing conspicuously out of place.</p>",
        "id": 403129919,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1700473132
    },
    {
        "content": "<p>It probably would help if it got a chance to run, but the build fails earlier than that</p>",
        "id": 403130286,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700473253
    },
    {
        "content": "<p>I guess as more branches merge master the odds of accumulating 10 toolchains become vanishingly small</p>",
        "id": 403130458,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700473318
    },
    {
        "content": "<p>That being said, did you check if the mathlib cache directory is a problem?</p>",
        "id": 403130607,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700473363
    },
    {
        "content": "<p>I now see there is a <code>lake exe cache clean</code> step before <code>lake exe cache get</code>, so it shouldn't be a problem.</p>",
        "id": 403131182,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700473554
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4_docs/actions/runs/7097849825\">https://github.com/leanprover-community/mathlib4_docs/actions/runs/7097849825</a> we are closing in again /o\\</p>",
        "id": 406069332,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1701786883
    },
    {
        "content": "<p>This should be less of an issue moving forward as the CI runners now have 100GiB storage each thanks to <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> .</p>",
        "id": 407549041,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1702409232
    }
]