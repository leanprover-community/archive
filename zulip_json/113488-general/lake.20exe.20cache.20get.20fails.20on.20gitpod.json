[
    {
        "content": "<p>This seems to be due to the change to caching (<code>leantar</code>) that just landed:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">leantar</span> <span class=\"n\">is</span> <span class=\"n\">too</span> <span class=\"n\">old</span><span class=\"bp\">;</span> <span class=\"n\">downloading</span> <span class=\"n\">more</span> <span class=\"n\">recent</span> <span class=\"n\">version</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">tar</span> <span class=\"o\">(</span><span class=\"n\">child</span><span class=\"o\">):</span> <span class=\"n\">xz</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">exec</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n<span class=\"n\">tar</span> <span class=\"o\">(</span><span class=\"n\">child</span><span class=\"o\">):</span> <span class=\"n\">Error</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">recoverable</span><span class=\"o\">:</span> <span class=\"n\">exiting</span> <span class=\"n\">now</span>\n<span class=\"n\">tar</span><span class=\"o\">:</span> <span class=\"n\">Child</span> <span class=\"n\">returned</span> <span class=\"n\">status</span> <span class=\"mi\">2</span>\n<span class=\"n\">tar</span><span class=\"o\">:</span> <span class=\"n\">Error</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">recoverable</span><span class=\"o\">:</span> <span class=\"n\">exiting</span> <span class=\"n\">now</span>\n</code></pre></div>",
        "id": 374822825,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689231641
    },
    {
        "content": "<p><code>sudo apt-get install xz-utils</code> seems to fix it</p>",
        "id": 374822972,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689231693
    },
    {
        "content": "<p>Oof, that's worrying though. We may need to add this to all our installation instructions.</p>",
        "id": 374823697,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689231881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, there's not some cheap way to avoid this dependency?</p>",
        "id": 374823785,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689231903
    },
    {
        "content": "<p>On Windows, after running <code>lake exe cache get</code> on current <code>mathlib4</code> master and running <code>lake build</code> after that, Lean starts recompiling everything.<br>\nThis was the output of <code>lake exe cache get</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">downloading</span> <span class=\"n\">component</span> <span class=\"bp\">'</span><span class=\"n\">lean'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">installing</span> <span class=\"n\">component</span> <span class=\"bp\">'</span><span class=\"n\">lean'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"n\">dff883c55395438ae2a5c65ad5ddba084b600feb</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"n\">e6ca4e7e6b13ceee845e40a904c1a71ed9866574</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"n\">f04538ab6ad07642368cf11d2702acc0a9b4bcee</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">mhuisi</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli.git</span> <span class=\"n\">to</span> <span class=\"bp\">.\\</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Cli</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache.exe</span>\n<span class=\"n\">leantar</span> <span class=\"n\">is</span> <span class=\"n\">too</span> <span class=\"n\">old</span><span class=\"bp\">;</span> <span class=\"n\">downloading</span> <span class=\"n\">more</span> <span class=\"n\">recent</span> <span class=\"n\">version</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">3565</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">3565</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">3565</span><span class=\"bp\">/</span><span class=\"mi\">3565</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3565</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 374824123,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1689231998
    },
    {
        "content": "<p>Sorry, it seems merging was premature, and we needed to do more testing on other platforms.</p>",
        "id": 374825059,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689232288
    },
    {
        "content": "<p>I will make a revert PR now.</p>",
        "id": 374825098,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689232296
    },
    {
        "content": "<p>It's rather unfortunate that <code>uncaught exception: no such file or directory (error code: 2)</code> doesn't include the name of the thing that was missing!</p>",
        "id": 374825482,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689232411
    },
    {
        "content": "<p>(Though I assume it's also <code>xz</code>)</p>",
        "id": 374825509,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689232419
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/5853\">#5853</a></p>",
        "id": 374825711,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689232480
    },
    {
        "content": "<p>The leantar binary will probably need to be modified using <code>patchelf --set-interpreter</code> to run on NixOS:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">file</span> <span class=\"bp\">./</span><span class=\"n\">leantar</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"bp\">./</span><span class=\"n\">leantar</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">:</span> <span class=\"n\">ELF</span> <span class=\"mi\">64</span><span class=\"bp\">-</span><span class=\"n\">bit</span> <span class=\"n\">LSB</span> <span class=\"n\">pie</span> <span class=\"n\">executable</span><span class=\"o\">,</span> <span class=\"n\">x86</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"o\">,</span> <span class=\"n\">version</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">SYSV</span><span class=\"o\">),</span> <span class=\"n\">dynamically</span> <span class=\"n\">linked</span><span class=\"o\">,</span> <span class=\"n\">interpreter</span> <span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">x86</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">so.2</span><span class=\"o\">,</span> <span class=\"n\">BuildID</span><span class=\"o\">[</span><span class=\"n\">sha1</span><span class=\"o\">]</span><span class=\"bp\">=</span><span class=\"n\">ab923dc1f445c5df139831b216b95a18f2d5f0a5</span><span class=\"o\">,</span> <span class=\"n\">for</span> <span class=\"n\">GNU</span><span class=\"bp\">/</span><span class=\"n\">Linux</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">stripped</span>\n</code></pre></div>\n<p>Currently it errors out with <code>leantar-0.1.1: cannot execute: required file not found</code>. Can <code>leantar</code> be distributed via <code>elan</code> (as <code>rust-analyzer</code> is distributed via <code>rustup</code>, say) ? Then the NixOS <code>elan</code> package could handle the required patching.</p>",
        "id": 374837507,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1689235752
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/113488-general/topic/lake.20exe.20cache.20get.20fails.20on.20gitpod/near/374837507\">said</a>:</p>\n<blockquote>\n<p>Can <code>leantar</code> be distributed via <code>elan</code> (as <code>rust-analyzer</code> is distributed via <code>rustup</code>, say) ?</p>\n</blockquote>\n<p>There is no such functionality in <code>elan</code>. I would suggest building <code>leantar</code> locally or upstreaming a Nix derivation for it into leantar/Nixpkgs</p>",
        "id": 374849212,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689238357
    },
    {
        "content": "<p>Assuming it will not have as many breaking changes as Lean itself</p>",
        "id": 374849443,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689238414
    },
    {
        "content": "<p>Of course, if you want to add a conditional <code>patchelf</code> call into <code>Cache</code>, I don't think anyone would mind either</p>",
        "id": 374849813,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689238490
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/lake.20exe.20cache.20get.20fails.20on.20gitpod/near/374825482\">said</a>:</p>\n<blockquote>\n<p>It's rather unfortunate that <code>uncaught exception: no such file or directory (error code: 2)</code> doesn't include the name of the thing that was missing!</p>\n</blockquote>\n<p>It is probably from process creation: <a href=\"https://github.com/leanprover/lean4/blob/a3ebfe29ea516e45dba97dfd303cfc11cc47ff04/src/runtime/process.cpp#L433-L434\">https://github.com/leanprover/lean4/blob/a3ebfe29ea516e45dba97dfd303cfc11cc47ff04/src/runtime/process.cpp#L433-L434</a>. Which makes sense, <code>LEANTARBIN</code> seems to be missing a <code>.exe</code> file extension on Windows /cc <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 374850877,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689238716
    },
    {
        "content": "<p>Oof, yes the leantar PR was not ready for merge yet, I was planning on revisiting it once the lean4 bump PR landed</p>",
        "id": 374853875,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689239341
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/lake.20exe.20cache.20get.20fails.20on.20gitpod/near/374823785\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span>, there's not some cheap way to avoid this dependency?</p>\n</blockquote>\n<p>The <code>tar</code> use here is just for unpacking the <code>leantar</code> executable itself. It's using different file extensions depending on what is conventionally aviailable on the OS, but I guess <code>.xz</code> isn't available on linux?</p>",
        "id": 374862979,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689241276
    },
    {
        "content": "<p><code>tar.gz</code> should be fine I guess</p>",
        "id": 374863209,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689241326
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/lake.20exe.20cache.20get.20fails.20on.20gitpod/near/374825509\">said</a>:</p>\n<blockquote>\n<p>(Though I assume it's also <code>xz</code>)</p>\n</blockquote>\n<p>This is unlikely, <code>leantar</code> is a statically linked executable that comes with all its dependencies. The error message there looks like it is coming from lean</p>",
        "id": 374863731,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689241447
    },
    {
        "content": "<p>The <code>leantar</code> issues should be fixed now. It would be good for those who have reported errors (<span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> <span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span>) to try checking out the <code>leantar</code> branch and seeing if it works before we merge</p>",
        "id": 374977600,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689262929
    },
    {
        "content": "<p>seems to be working here at least!</p>",
        "id": 374996451,
        "sender_full_name": "Julian Berman",
        "timestamp": 1689266619
    },
    {
        "content": "<blockquote>\n<p>This is unlikely, <code>leantar</code> is a statically linked executable that comes with all its dependencies. The error message there looks like it is coming from lean</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> No it's not:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">ldd</span> <span class=\"n\">leantar</span><span class=\"bp\">-</span><span class=\"n\">v0.1.2</span><span class=\"bp\">-</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">unknown</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">leantar</span>\n        <span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">vdso.so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007ffd18946000</span><span class=\"o\">)</span>\n        <span class=\"n\">libgcc_s.so.1</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">ryvnrp5n6kqv3fl20qy2xgcgdsza7i0m</span><span class=\"bp\">-</span><span class=\"n\">xgcc</span><span class=\"bp\">-</span><span class=\"mi\">12</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">libgcc</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">libgcc_s.so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4d26cb5000</span><span class=\"o\">)</span>\n        <span class=\"n\">libm.so.6</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"n\">n58xw4373jp0ljirf06d8077j15pc4j</span><span class=\"bp\">-</span><span class=\"n\">glibc</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">37</span><span class=\"bp\">-</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">libm.so.6</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4d26920000</span><span class=\"o\">)</span>\n        <span class=\"n\">libc.so.6</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"n\">n58xw4373jp0ljirf06d8077j15pc4j</span><span class=\"bp\">-</span><span class=\"n\">glibc</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">37</span><span class=\"bp\">-</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">libc.so.6</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4d2673a000</span><span class=\"o\">)</span>\n        <span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">x86</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">so.2</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"n\">n58xw4373jp0ljirf06d8077j15pc4j</span><span class=\"bp\">-</span><span class=\"n\">glibc</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">37</span><span class=\"bp\">-</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">x86</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">so.2</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4d26cd8000</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 375020234,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1689271826
    },
    {
        "content": "<p>Mario already knows this, but <code>leantar</code> is now working on Windows!<br>\nHowever, there seem to be some performance issues. On the <code>leantar</code> branch the unpacking seems excessively slow:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">2341</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">2341</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">2341</span><span class=\"bp\">/</span><span class=\"mi\">2341</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3568</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">93668</span> <span class=\"n\">ms</span>\n</code></pre></div>\n<p>If I then immediately run the same command again:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">time</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">No</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">download</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3568</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">225</span> <span class=\"n\">ms</span>\n\n<span class=\"n\">real</span>    <span class=\"mi\">0</span><span class=\"n\">m20.483s</span>\n<span class=\"n\">user</span>    <span class=\"mi\">0</span><span class=\"n\">m0.000s</span>\n<span class=\"n\">sys</span>     <span class=\"mi\">0</span><span class=\"n\">m0.000s</span>\n</code></pre></div>\n<p>Something still took long here...</p>",
        "id": 375079837,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1689288745
    },
    {
        "content": "<p>Here is the comparison with the same commands on <code>master</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Floris</span><span class=\"bp\">@</span><span class=\"n\">Dell</span><span class=\"bp\">-</span><span class=\"n\">E</span> <span class=\"n\">MINGW64</span> <span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib4c</span> <span class=\"o\">((</span><span class=\"mi\">4</span><span class=\"n\">d8f5b5cb...</span><span class=\"o\">))</span>\n<span class=\"bp\">$</span> <span class=\"n\">time</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache.exe</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">43</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">43</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">43</span><span class=\"bp\">/</span><span class=\"mi\">43</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3569</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n\n<span class=\"n\">real</span>    <span class=\"mi\">1</span><span class=\"n\">m20.293s</span>\n<span class=\"n\">user</span>    <span class=\"mi\">0</span><span class=\"n\">m0.000s</span>\n<span class=\"n\">sys</span>     <span class=\"mi\">0</span><span class=\"n\">m0.000s</span>\n\n<span class=\"n\">Floris</span><span class=\"bp\">@</span><span class=\"n\">Dell</span><span class=\"bp\">-</span><span class=\"n\">E</span> <span class=\"n\">MINGW64</span> <span class=\"bp\">~/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib4c</span> <span class=\"o\">((</span><span class=\"mi\">4</span><span class=\"n\">d8f5b5cb...</span><span class=\"o\">))</span>\n<span class=\"bp\">$</span> <span class=\"n\">time</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">No</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">download</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">3569</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n\n<span class=\"n\">real</span>    <span class=\"mi\">0</span><span class=\"n\">m45.238s</span>\n<span class=\"n\">user</span>    <span class=\"mi\">0</span><span class=\"n\">m0.000s</span>\n<span class=\"n\">sys</span>     <span class=\"mi\">0</span><span class=\"n\">m0.000s</span>\n</code></pre></div>\n<p>So the first run of <code>lake exe cache get</code> is slower on the <code>leantar</code> branch (if  the printed 90s of unpacking is accurate and measuring real time), but the subsequent run is faster.</p>",
        "id": 375081159,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1689289047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113488-general/topic/lake.20exe.20cache.20get.20fails.20on.20gitpod/near/375020234\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>This is unlikely, <code>leantar</code> is a statically linked executable that comes with all its dependencies. The error message there looks like it is coming from lean</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> No it's not:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">ldd</span> <span class=\"n\">leantar</span><span class=\"bp\">-</span><span class=\"n\">v0.1.2</span><span class=\"bp\">-</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">unknown</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">leantar</span>\n        <span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">vdso.so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007ffd18946000</span><span class=\"o\">)</span>\n        <span class=\"n\">libgcc_s.so.1</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">ryvnrp5n6kqv3fl20qy2xgcgdsza7i0m</span><span class=\"bp\">-</span><span class=\"n\">xgcc</span><span class=\"bp\">-</span><span class=\"mi\">12</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">libgcc</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">libgcc_s.so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4d26cb5000</span><span class=\"o\">)</span>\n        <span class=\"n\">libm.so.6</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"n\">n58xw4373jp0ljirf06d8077j15pc4j</span><span class=\"bp\">-</span><span class=\"n\">glibc</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">37</span><span class=\"bp\">-</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">libm.so.6</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4d26920000</span><span class=\"o\">)</span>\n        <span class=\"n\">libc.so.6</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"n\">n58xw4373jp0ljirf06d8077j15pc4j</span><span class=\"bp\">-</span><span class=\"n\">glibc</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">37</span><span class=\"bp\">-</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">libc.so.6</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4d2673a000</span><span class=\"o\">)</span>\n        <span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">x86</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">so.2</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"n\">n58xw4373jp0ljirf06d8077j15pc4j</span><span class=\"bp\">-</span><span class=\"n\">glibc</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">37</span><span class=\"bp\">-</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">x86</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">so.2</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4d26cd8000</span><span class=\"o\">)</span>\n</code></pre></div>\n</blockquote>\n<p>Unclear if you are making this claim, but AFAICT those are all standard .so's. If I link a hello world rust program then I already get everything there except for <code>libm.so.6</code>, and I think zstd might be linking that in (but I don't know of any issues in asking for the &lt;math&gt; library).</p>",
        "id": 375150373,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689320076
    },
    {
        "content": "<p>For what it's worth, Linux elan is an actual static executable linked against musl, which avoids the NixOS issue from above (not relevant in elan's case) as well as libc compatibility issues</p>",
        "id": 375160874,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689321944
    },
    {
        "content": "<p><code>leantar-v0.1.2-x86_64-unknown-linux-gnu/leantar</code> uses glibc 2.34 symbols, this will definitely be an issue. Lean is built against 2.27, which is e.g. what Ubuntu 18.04 still uses.</p>",
        "id": 375162645,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689322288
    },
    {
        "content": "<p>There's a clear definition of what statically linked executable means; namely that it doesn't do dynamic linking.  Requiring only some shared libraries is still dynamically linking.</p>",
        "id": 375323620,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1689352135
    },
    {
        "content": "<p>Sebastian has made this work very nicely for elan.  You can check out the CI config here: <a href=\"https://github.com/leanprover/elan/blob/master/.github/workflows/ci.yml\">https://github.com/leanprover/elan/blob/master/.github/workflows/ci.yml</a></p>",
        "id": 375323970,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1689352206
    },
    {
        "content": "<p>I would appreciate it if you had some tips for <a href=\"https://github.com/digama0/leangz/actions/runs/5554223604\">https://github.com/digama0/leangz/actions/runs/5554223604</a>, it doesn't seem to be working and this is not my expertise</p>",
        "id": 375386755,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689367954
    },
    {
        "content": "<p>As I understand it, statically linking <em>everything</em> is a problem for most OSs, because the syscall interface is not stable. You would not statically link <code>kernel32.dll</code></p>",
        "id": 375386943,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689368031
    },
    {
        "content": "<p>I can take a look. The Linux kernel interface is famously stable (\"don't break userspace!\")</p>",
        "id": 375387708,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689368277
    },
    {
        "content": "<p>it seems like you are using <code>cross</code> for everything, not just the cross-compiles?</p>",
        "id": 375387961,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689368347
    },
    {
        "content": "<p>I modeled the original ci.yml on lean4's</p>",
        "id": 375387994,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689368363
    },
    {
        "content": "<p>Yes, cross does some black magic like I think setting up a Docker container with musl. Really dynamically linking against the same glibc as Lean does would be sufficient and save a bit of space, static musl linking is simply the approach that seemed simpler to set up for elan.</p>",
        "id": 375388392,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689368482
    },
    {
        "content": "<p>Perhaps the modern solution would be to use cargo zigbuild <a href=\"https://github.com/rust-cross/cargo-zigbuild#specify-glibc-version\">https://github.com/rust-cross/cargo-zigbuild#specify-glibc-version</a>... what a mess</p>",
        "id": 375388831,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689368625
    }
]