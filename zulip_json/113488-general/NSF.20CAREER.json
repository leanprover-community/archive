[
    {
        "content": "<p>I’m beyond excited to announce that my research group, the ATOMS Lab, got the NSF CAREER award! <br>\nWe aim to use Lean to formalize theories in science and engineering (computational chemistry and thermodynamics, in particular), and write bug-free scientific computing software. To do so, we’ll teach scientists and engineers to program and prove in Lean.</p>",
        "id": 354399318,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1682777152
    },
    {
        "content": "<p>Thanks to my research group, especially <span class=\"user-mention\" data-user-id=\"474115\">@Max Bobbin</span>, <span class=\"user-mention\" data-user-id=\"459354\">@Parivash</span>, and <span class=\"user-mention\" data-user-id=\"480695\">@Samiha Sharlin ⚛️</span> for putting together preliminary results for the proposal.<br>\nAlso, thanks to y’all in the Lean community for making this possible, and special thanks to <span class=\"user-mention\" data-user-id=\"112857\">@Leonardo de Moura</span> for his letter - I think this especially helped persuade the reviewers that our program had support from the Lean community.</p>",
        "id": 354400067,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1682777252
    },
    {
        "content": "<p>Read more about our grant <a href=\"https://www.nsf.gov/awardsearch/showAward?AWD_ID=2236769&amp;HistoricalAwards=false\">here</a></p>",
        "id": 354400239,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1682777276
    },
    {
        "content": "<p>I should add: if you’re an undergrad, or if you know an undergrad, who wants to do a 10-week, paid REU with <a href=\"https://atomslab.github.io\">my lab</a> this summer at UMBC, writing Lean proofs/code for science, send me a DM.</p>",
        "id": 354429638,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1682781236
    },
    {
        "content": "<p>Regarding LeanMD, how are you planning on dealing with details of numerical stability in floating point implementations? Or is the initial attempt just assuming infinite precision?</p>",
        "id": 354459107,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1682785778
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113488-general/topic/NSF.20CAREER/near/354459107\">said</a>:</p>\n<blockquote>\n<p>Regarding LeanMD, how are you planning on dealing with details of numerical stability in floating point implementations? Or is the initial attempt just assuming infinite precision?</p>\n</blockquote>\n<p>We’ll be assuming infinite precision / real numbers in our proofs and derivations - focusing on getting the high-level math and logic correct. Then, we’ll cast the final objects to floats for running computations on HPCs. We haven’t decided how - been closely watching real/float conversations here on Zulip, especially <span class=\"user-mention\" data-user-id=\"346070\">@Tomas Skrivan</span>’s SciLean implementations. (FWIW, <a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0927025616305171\">this paper</a> explores your question through interval arithmetic methods)</p>",
        "id": 354484294,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1682790162
    },
    {
        "content": "<p>We've done something like that here: <a href=\"https://github.com/verified-optimization/CvxLean/blob/main/CvxLean/Tactic/Solver/Float/RealToFloat.lean\">https://github.com/verified-optimization/CvxLean/blob/main/CvxLean/Tactic/Solver/Float/RealToFloat.lean</a> (cc <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span>  <span class=\"user-mention\" data-user-id=\"132858\">@Ramon Fernández Mir</span> )</p>\n<p>The mechanism allows us to register various expressions about the reals and their corresponding expression on floats, so that we can convert a complex real expression into an expression on floats and then evaluate it.</p>",
        "id": 354733939,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1682879262
    }
]