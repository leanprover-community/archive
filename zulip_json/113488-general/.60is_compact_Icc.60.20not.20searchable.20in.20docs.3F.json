[
    {
        "content": "<p>Is there a (good?) reason that <code>is_compact_Icc</code> is not searchable in the docs?</p>",
        "id": 359066640,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1684352092
    },
    {
        "content": "<p>Because it doesn't exist?</p>",
        "id": 359067188,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1684352309
    },
    {
        "content": "<p>Ah, you mean <code>compact_Icc_space.is_compact_Icc</code>. This is a bit fiddly because it's exported to the root namespace.</p>",
        "id": 359067399,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1684352391
    },
    {
        "content": "<p>Yes, why is it in the root namespace (making it difficult for one to find its existence)?...</p>",
        "id": 359068345,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1684352692
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/17fe3632366bfefa54c240db521ce21beeb7a28a/src/topology/algebra/order/compact.lean#L50\">There</a> is the line which does it.</p>",
        "id": 359069513,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1684353078
    },
    {
        "content": "<p>I agree it's annoying that exported declarations don't behave the same has all the other ones in the docs. <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>, is that fixable, you think?</p>",
        "id": 359069786,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1684353172
    },
    {
        "content": "<p>Hmm, I'm probably not the right person to ask as my experience with doc-gen is mostly limited to the front-end facing bits. Maybe <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> can help...</p>",
        "id": 359081453,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1684357295
    },
    {
        "content": "<p>I don't know if <code>export</code> information is available to lean metaprogramming</p>",
        "id": 359090504,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684361191
    },
    {
        "content": "<p>It might require a c++ change</p>",
        "id": 359090529,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1684361205
    }
]