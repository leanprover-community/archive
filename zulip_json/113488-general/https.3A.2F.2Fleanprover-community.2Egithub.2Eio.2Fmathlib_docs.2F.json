[
    {
        "content": "<p>Is <a href=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a> working for you? I tried on Firefox and Chrome but the pages are displayed like this<br>\n<a href=\"/user_uploads/3121/D-fTGQq90jn7VHeKD-6rgGyw/image.png\">image.png</a><br>\nThe links seem also to be broken... they give something like https://%244.github.io/$5/algebra/algebra/basic.html  <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/D-fTGQq90jn7VHeKD-6rgGyw/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/D-fTGQq90jn7VHeKD-6rgGyw/image.png\"></a></div>",
        "id": 226391689,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1613400061
    },
    {
        "content": "<p>Same issue for me.</p>",
        "id": 226391846,
        "sender_full_name": "RÃ©my Degenne",
        "timestamp": 1613400140
    },
    {
        "content": "<p>I also see it like this.</p>",
        "id": 226392033,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1613400259
    },
    {
        "content": "<p>There's a lot of changes in flight at the moment, <a href=\"https://github.com/leanprover-community/doc-gen/commits/master\">https://github.com/leanprover-community/doc-gen/commits/master</a></p>",
        "id": 226392894,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613400749
    },
    {
        "content": "<p>Same issue here -- looks like the CSS files are not being downloaded</p>",
        "id": 226393214,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1613400954
    },
    {
        "content": "<p>From the html source of <code>https://leanprover-community.github.io/mathlib_docs/</code>:</p>\n<div class=\"codehilite\" data-code-language=\"HTML\"><pre><span></span><code>    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"https://$4.github.io/$5/style.css\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"https://$4.github.io/$5/pygments.css\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"shortcut icon\"</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"https://$4.github.io/$5/favicon.ico\"</span><span class=\"p\">&gt;</span>\n</code></pre></div>",
        "id": 226393337,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1613401014
    },
    {
        "content": "<p>That doesn't look right, does it?</p>",
        "id": 226393349,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1613401020
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/doc-gen/pull/114\">https://github.com/leanprover-community/doc-gen/pull/114</a></p>",
        "id": 226395333,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1613402044
    },
    {
        "content": "<p>Context: Rob has been adding an amazing new CI feature to the doc-gen repo today.  You* can now comment <code>#deploy</code> on a doc-gen PR and it will automatically deploy the docs generated by the PR to <a href=\"https://leanprover-community.github.io/mathlib_docs_demo\">https://leanprover-community.github.io/mathlib_docs_demo</a> so you can try them out.<br>\n(* for very limited values of you.  For security reasons, we've limited access to admins.)</p>",
        "id": 226395565,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1613402177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> I think the problem in the demo repo is a <code>main</code>/<code>master</code> confusion?</p>",
        "id": 226397290,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613403043
    },
    {
        "content": "<p>I believe so... I think I've switched everything to <code>master</code> now, like we have on the other repos.</p>",
        "id": 226397356,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1613403082
    },
    {
        "content": "<p>Have a look at <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/\">https://leanprover-community.github.io/mathlib_docs_demo/</a> and see if you find any suspicious formatting, especially having to do with latex and especially if it's different from the main doc pages</p>",
        "id": 226405437,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613406751
    },
    {
        "content": "<p>There are a few fixes I've made which haven't been committed yet, so later tonight might be better.</p>",
        "id": 226405723,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613406885
    },
    {
        "content": "<p>I'm planning to change the LaTeX / markdown setup so that it's more consistent with how it works on <a href=\"http://math.stackexchange.com\">math.stackexchange.com</a> / <a href=\"http://mathoverflow.net\">mathoverflow.net</a>. See <a href=\"https://github.com/leanprover-community/doc-gen/pull/110#issuecomment-778849843\">this comment</a>. </p>\n<p>Any objections?</p>",
        "id": 226406175,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613407164
    },
    {
        "content": "<p>I've finished my changes, please check the demo now: <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/\">https://leanprover-community.github.io/mathlib_docs_demo/</a></p>\n<p>See <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/latex.html\">the secret LaTeX test page</a> (<a href=\"https://github.com/leanprover-community/doc-gen/blob/8441f6ce21a91f8b5e5f6b46bbebf0a080075870/test/latex.md\">source</a>) for a bunch of LaTeX + markdown examples which now work.</p>\n<p>Note that some of the LaTeX we currently have in the docs will break, since some of the workarounds we had to use before are no longer necessary.</p>\n<p>Here's the corresponding PR: <a href=\"https://github.com/leanprover-community/doc-gen/issues/110\">doc-gen#110</a></p>\n<p><strong>edit</strong>: I've also updated the <a href=\"https://tinyurl.com/ydeyffff/\">#docpreview</a> tool to follow more closely how the LaTeX and Markdown will work after this PR.</p>",
        "id": 226475301,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613455159
    },
    {
        "content": "<p>I've been spot checking and don't see much breakage at all!</p>",
        "id": 226508983,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613479915
    },
    {
        "content": "<p>Here's one: <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/analysis/analytic/basic.html#changing-origin-in-a-power-series\">https://leanprover-community.github.io/mathlib_docs_demo/analysis/analytic/basic.html#changing-origin-in-a-power-series</a></p>",
        "id": 226508986,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613479917
    },
    {
        "content": "<p>I guess it's the <code>\\\\sum</code></p>",
        "id": 226509056,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613479943
    },
    {
        "content": "<p><code>git grep '\\\\\\\\'</code> turns up a few more</p>",
        "id": 226509221,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613480070
    },
    {
        "content": "<p>(These are things to fix in mathlib after the doc changes are merged)</p>",
        "id": 226509556,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613480287
    },
    {
        "content": "<p>Yes, I had changed the <code>\\sum</code> to <code>\\\\sum</code> because of the <code>\\</code>-eating bug in <a href=\"https://github.com/leanprover-community/doc-gen/issues/62\">https://github.com/leanprover-community/doc-gen/issues/62</a>. It's great if it is fixed!</p>",
        "id": 226510245,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1613480714
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113488-general/topic/https.3A.2F.2Fleanprover-community.2Egithub.2Eio.2Fmathlib_docs.2F/near/226406175\">said</a>:</p>\n<blockquote>\n<p>I'm planning to change the LaTeX / markdown setup so that it's more consistent with how it works on <a href=\"http://math.stackexchange.com\">math.stackexchange.com</a> / <a href=\"http://mathoverflow.net\">mathoverflow.net</a>. See <a href=\"https://github.com/leanprover-community/doc-gen/pull/110#issuecomment-778849843\">this comment</a>. </p>\n<p>Any objections?</p>\n</blockquote>\n<p>I'm a little worried that <code>mistletoe</code> has become abandonware, but I guess if the actively developed markdown2 is broken, mistletoe is still the better choice.</p>",
        "id": 226538838,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613493590
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/doc-gen/issues/117\">doc-gen#117</a> is a PR that creates a \"references\" page so that the citations in mathlib doc strings are now finally links:</p>\n<p>Please check out the demo here and let me know if there are any obvious bugs:</p>\n<p><a href=\"http://leanprover-community.github.io/mathlib_docs_demo/references.html\">http://leanprover-community.github.io/mathlib_docs_demo/references.html</a></p>\n<p>Like I say in the PR, I didn't do much with the styling; I more or less just copied the code that generates the <a href=\"https://leanprover-community.github.io/papers.html\">\"papers about Lean\" page from the community website</a>, so I'm open to any suggestions.</p>",
        "id": 226893761,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613687539
    },
    {
        "content": "<p>The back references are great!</p>",
        "id": 226893919,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613687637
    },
    {
        "content": "<p>Can we get those for library notes too?</p>",
        "id": 226893981,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613687655
    },
    {
        "content": "<p>Ooh, good idea! Yes, I think that should be doable.</p>",
        "id": 226894438,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613687896
    },
    {
        "content": "<p>There's some css that makes the links move to the next line, like here: <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/topology/sheaves/sheaf_condition/opens_le_cover.html#references\">https://leanprover-community.github.io/mathlib_docs_demo/topology/sheaves/sheaf_condition/opens_le_cover.html#references</a></p>",
        "id": 226894441,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1613687904
    },
    {
        "content": "<p>(And \"Paul Halmos, Measure theory. 1950.\" is there twice, though that's not doc-gen's fault)</p>",
        "id": 226894840,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1613688153
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/https.3A.2F.2Fleanprover-community.2Egithub.2Eio.2Fmathlib_docs.2F/near/226894441\">said</a>:</p>\n<blockquote>\n<p>There's some css that makes the links move to the next line, like here: <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/topology/sheaves/sheaf_condition/opens_le_cover.html#references\">https://leanprover-community.github.io/mathlib_docs_demo/topology/sheaves/sheaf_condition/opens_le_cover.html#references</a></p>\n</blockquote>\n<p>Yeah, that's coming from a hack we were already using to make sure the link doesn't end up underneath the header when you click on the backreferences (see <a href=\"https://github.com/leanprover-community/doc-gen/pull/117/files#diff-b78be019f1dc6d57753ea900c3805b114cd53ab7c0db836cc081836df1b99b7a\">this part of the diff</a>). </p>\n<p>Hmm, but it seems the link is still hidden by the header if I navigate to <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/topology/sheaves/sheaf_condition/opens_le_cover.html#backref1\">https://leanprover-community.github.io/mathlib_docs_demo/topology/sheaves/sheaf_condition/opens_le_cover.html#backref1</a> <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>\n<p><strong>edit</strong>: Hmm... the header only seems to cover up the link in Firefox? I tested Safari and Chrome and the backref1 link was OK.</p>",
        "id": 226895038,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613688272
    },
    {
        "content": "<p>I've had problems with headers in Firefox from day one. Whenever I click on a link in Zulip i have to scroll down a bit</p>",
        "id": 226896366,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613689021
    },
    {
        "content": "<p>A few more updates: the extra line breaks and covered up link targets should be fixed now, at least in Firefox and Chrome. There will still be extra line breaks in Safari, until they release an update where <a href=\"https://bugs.webkit.org/show_bug.cgi?id=189265\">this bug</a> is fixed.</p>\n<p>I also added backrefs to the Library Notes page: <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/notes.html\">https://leanprover-community.github.io/mathlib_docs_demo/notes.html</a></p>\n<p>And turned raw URLs into links: <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/linear_algebra/quadratic_form.html\">https://leanprover-community.github.io/mathlib_docs_demo/linear_algebra/quadratic_form.html</a></p>",
        "id": 226920363,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613710256
    },
    {
        "content": "<p>This is really nice.  One suggestion, only if you are looking for more projects ... the reference tags at<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs_demo/references.html\">https://leanprover-community.github.io/mathlib_docs_demo/references.html</a><br>\ncurrently seem to follow the convention of the person who added them, producing both slight variations in the obvious style (<code>[ahrens2017]</code>, <code>[Vaisala_2003]</code>, <code>[ghys87:groupes]</code>, <code>[EinsiedlerWard2017]</code>, <code>[MM92]</code>) and some of radically different style (<code>[MR1237403]</code>, <code>[Elephant]</code>).  We could just leave out these tags?  Or we could fix a convention and have it auto-generated (I'm partial to <a href=\"https://www.bibtex.com/s/bibliography-style-base-alpha/\">alpha</a>).</p>",
        "id": 226920708,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1613710662
    },
    {
        "content": "<p>It's easy to hide the tags if they're too distracting. It seemed natural to me to leave them in so that we could put something in the space on the right.</p>\n<p>Autogenerating nice tags might be possible too, I'm not sure.</p>",
        "id": 226921097,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613711053
    },
    {
        "content": "<p>Showing the file name (eg <code>mathlib : data.list.basic</code>) in the hover text of backrefs would be a nice touch, assuming you haven't already done so</p>",
        "id": 226922185,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613712483
    },
    {
        "content": "<p>Yes, adding titles with the filenames should be doable. I think I found pybtex's functions to format the bibtex keys with the <code>alpha</code> style <a href=\"https://bitbucket.org/pybtex-devs/pybtex/src/master/pybtex/style/labels/alpha.py\">here</a> too.</p>\n<p>Keep the ideas coming!</p>",
        "id": 226922416,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613712831
    },
    {
        "content": "<p>I really like this: thanks Bryan!</p>\n<p>One thing that I used often and saw \"referenced\" is the Stacks project:</p>\n<p><a href=\"https://stacks.math.columbia.edu/\">https://stacks.math.columbia.edu/</a></p>\n<p>I think that it inspired many proofs, especially in the commutative algebra/algebraic geometry side of mathlib.  Is there a way of making it appear in the references?</p>",
        "id": 226922467,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1613712894
    },
    {
        "content": "<p>With an easy grep, it seems to be referenced 101 times at least in mathlib.</p>",
        "id": 226922582,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1613713070
    },
    {
        "content": "<p>If the Stacks project is being cited in a consistent and easy-to-parse way then it should be no problem.</p>",
        "id": 226922782,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613713257
    },
    {
        "content": "<p>Aha, it looks like most of the Stacks project citations are just raw URLs. I can definitely work with that. Though maybe the \"commutative algebra / algebraic geometry team\" should first decide whether that will be the convention going forward (and then add it to our style guide).</p>",
        "id": 226922903,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613713441
    },
    {
        "content": "<p>Ok, the Stacks project is an entirely online resource, so I think that it will be pretty easy to agree that it is always cited via URLs!  What should be decided?  To always include a citation to the \"front page\"?</p>\n<p>Maybe, every time the stacks project is cited, there should be the URL <a href=\"https://stacks.math.columbia.edu/\">https://stacks.math.columbia.edu/</a> and then the specific page/tag that is more appropriate.</p>\n<p>Would this work for you?</p>\n<p>Would this work for the people who cite the stacks project?</p>",
        "id": 226922983,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1613713524
    },
    {
        "content": "<p>Some time ago <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> suggested to make this a bit more structural. This might be a good time to push in that direction again. The idea was that we could have a new attribute</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[stacks \"01X6\"]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">foobar</span> <span class=\"n\">yadda</span> <span class=\"o\">:</span> <span class=\"n\">yadda</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 226923174,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613713798
    },
    {
        "content": "<p>Of course there will also be references to Stacks that aren't directly linking a mathlib result to a Stacks tag, but maybe we can agree that either</p>\n<ul>\n<li>those will all be full URLs to a tag, or</li>\n<li>those will all be of the form <code>[Stacks, 01X6]</code></li>\n</ul>",
        "id": 226923244,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613713878
    },
    {
        "content": "<p>The benefit of the attribute is that it will be easy to generate a json file that creates a partial dictionary between mathlib and Stacks</p>",
        "id": 226923258,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613713917
    },
    {
        "content": "<p>The people from Stacks (Johan de Jong, Pieter Belmans) have expressed interest in linking back to mathlib, as soon as we have a sizable dictionary (I think ~200 results)</p>",
        "id": 226923324,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613713960
    },
    {
        "content": "<p>Yep, basically any convention that is easy to detect via regex would be easy for me; that's basically how the references and notes links work now.</p>\n<p>Scott's idea of using attributes could work too; but it would require someone with metaprogramming ability to help...</p>\n<p>Once we have the data, it won't be difficult to add the tags to a special section of the references page, or even a separate Stacks project page, depending on what we want.</p>",
        "id": 226923349,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613714005
    },
    {
        "content": "<p>I could certainly have <code>doc-gen</code> export a <code>stacks.json</code> file from data collected via the regex approach, if we wanted that.</p>",
        "id": 226923406,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613714046
    },
    {
        "content": "<p>I personally am happy to go with either approach.  I like the attribute, but I also think that sometimes there will be sections that are inspired by the stacks project, even if then the implementation will not actually prove a specific result from it.  Would it be reasonable/desired to have a generic reference and then specific attribute tags?</p>",
        "id": 226923562,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1613714273
    },
    {
        "content": "<p>Yeah, we'll need a mix.</p>",
        "id": 226923745,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613714471
    },
    {
        "content": "<p>I think Rob actually did a stacks export script for us a while back when we first considered this.</p>",
        "id": 226924505,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1613715326
    },
    {
        "content": "<p>Perhaps there is a <code>stacks</code> branch?</p>",
        "id": 226924511,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1613715334
    },
    {
        "content": "<p>not on my copy <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 226924617,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613715459
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/stacks\">branch#stacks</a> has <code>scripts/stacks_tags.lean</code></p>",
        "id": 226925400,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1613716391
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/stacks/scripts/stacks_tags.lean\">https://github.com/leanprover-community/mathlib/blob/stacks/scripts/stacks_tags.lean</a></p>",
        "id": 226925421,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1613716408
    },
    {
        "content": "<p>There is a broken link at <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/notes.html#classical%20lemma\">https://leanprover-community.github.io/mathlib_docs_demo/notes.html#classical%20lemma</a></p>",
        "id": 226926349,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613717386
    },
    {
        "content": "<p>I don't know if it's related, but at <a href=\"https://leanprover-community.github.io/archive/stream/116395-maths/index.html\">https://leanprover-community.github.io/archive/stream/116395-maths/index.html</a> there is a broken link to the <code>âá¶  (x : Î±) in F, P x and âá¶  </code> thread (which was a shame yesterday because Jordan Ellenberg (of Ellenberg-Gijswijt) was asking about it on Twitter two days ago and I couldn't figure out how to link to the conversation).</p>",
        "id": 226931005,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613721930
    },
    {
        "content": "<p>I moved the stacks derail to a new topic: <a href=\"#narrow/stream/113488-general/topic/stacks.20tags\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/stacks.20tags</a></p>",
        "id": 226945979,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613731022
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/https.3A.2F.2Fleanprover-community.2Egithub.2Eio.2Fmathlib_docs.2F/near/226926349\">said</a>:</p>\n<blockquote>\n<p>There is a broken link at <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/notes.html#classical%20lemma\">https://leanprover-community.github.io/mathlib_docs_demo/notes.html#classical%20lemma</a></p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/issues/6321\">#6321</a> fixes that and another broken Zulip archive link in <code>data.tree</code>.</p>",
        "id": 227066786,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613797142
    },
    {
        "content": "<p>Another update on <a href=\"https://github.com/leanprover-community/doc-gen/issues/117\">doc-gen#117</a> (hopefully final, unless some bugs are discovered), which addresses the following two issues:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/https.3A.2F.2Fleanprover-community.2Egithub.2Eio.2Fmathlib_docs.2F/near/226922185\">said</a>:</p>\n<blockquote>\n<p>Showing the file name (eg <code>mathlib : data.list.basic</code>) in the hover text of backrefs would be a nice touch, assuming you haven't already done so</p>\n</blockquote>\n<p>You can now see filenames if you hover over the backrefs on the <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/notes.html\">demo notes</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/references.html\">demo references</a> pages.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113488-general/topic/https.3A.2F.2Fleanprover-community.2Egithub.2Eio.2Fmathlib_docs.2F/near/226920708\">said</a>:</p>\n<blockquote>\n<p>This is really nice.  One suggestion, only if you are looking for more projects ... the reference tags at<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs_demo/references.html\">https://leanprover-community.github.io/mathlib_docs_demo/references.html</a><br>\ncurrently seem to follow the convention of the person who added them, producing both slight variations in the obvious style (<code>[ahrens2017]</code>, <code>[Vaisala_2003]</code>, <code>[ghys87:groupes]</code>, <code>[EinsiedlerWard2017]</code>, <code>[MM92]</code>) and some of radically different style (<code>[MR1237403]</code>, <code>[Elephant]</code>).  We could just leave out these tags?  Or we could fix a convention and have it auto-generated (I'm partial to <a href=\"https://www.bibtex.com/s/bibliography-style-base-alpha/\">alpha</a>).</p>\n</blockquote>\n<p>The <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/references.html\">references</a> page now uses auto-generated \"alpha\"-style tags.</p>",
        "id": 227067043,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613797403
    },
    {
        "content": "<p>Very nice! :)</p>",
        "id": 227128125,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1613865140
    },
    {
        "content": "<p>Hi, I have no idea where to write this, but, could anyone help me? I've installed lean binaries and set the extension path in VS Code to the lean executable. I followed the instructon to install mathlibtools via pip and now I'm stuck. When I want to create a project and write <code>leanproject new my_project</code> in Git Bash it gives the error <code>[WinError 2]  The system cannot find the file specified</code>.</p>",
        "id": 227164926,
        "sender_full_name": "Stefan Sterea",
        "timestamp": 1613910849
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 227166338,
        "sender_full_name": "Stefan Sterea",
        "timestamp": 1613912468
    },
    {
        "content": "<p>Start a new thread in <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a> or <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a></p>",
        "id": 227169834,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613916369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>, I've noticed that there are links to items in the bibliography in a \"short format\", e.g. at <a href=\"https://leanprover-community.github.io/mathlib_docs/category_theory/abelian/basic.html#category_theory.abelian.epi_pullback_of_epi_f\">https://leanprover-community.github.io/mathlib_docs/category_theory/abelian/basic.html#category_theory.abelian.epi_pullback_of_epi_f</a>, which uses <code>Proof from [aluffi2016, IX.2.3], cf. [borceux-vol2, 1.7.6]</code></p>",
        "id": 227357680,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1614036693
    },
    {
        "content": "<p>These currently don't get linkified to <code>references.bib</code>. Can/should they?</p>",
        "id": 227357697,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1614036713
    },
    {
        "content": "<p>Ah, interesting. They certainly could. Do we want to allow this, and if so, how do we want to display it?  If we're not able to come up with some standard, easily-parsable format for chapter references, it might be easier just to change all those to something like <code>Proof from [Aluffi 2016 IX.2.3][aluffi2016], cf. [Borceux Vol 2 1.7.6][borceux-vol2]</code>.</p>",
        "id": 227358077,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1614036958
    },
    {
        "content": "<p>I think having a single standard way to link to <code>references.bib</code> is preferable, and probably these should be updated.</p>",
        "id": 227360654,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1614038467
    },
    {
        "content": "<p>I'm not entirely sure how one would grep for all of them.</p>",
        "id": 227360700,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1614038494
    },
    {
        "content": "<p>I agree, I think we should remove the short format links completely.</p>",
        "id": 227418596,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1614081409
    },
    {
        "content": "<p>We've already made up our own markdown syntax for the bib references, let's not get even crazier</p>",
        "id": 227418626,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1614081427
    },
    {
        "content": "<p>What is our made-up syntax?</p>",
        "id": 227421900,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1614083080
    },
    {
        "content": "<p><code>[Aluffi 2016 IX.2.3][aluffi2016]</code></p>",
        "id": 227421931,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1614083102
    },
    {
        "content": "<p>That's legal in CommonMark</p>",
        "id": 227421992,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1614083135
    },
    {
        "content": "<p><a href=\"https://spec.commonmark.org/0.29/#example-561\">example</a></p>",
        "id": 227422021,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1614083152
    },
    {
        "content": "<p>Zulip doesn't accept that example though.</p>",
        "id": 227422097,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1614083175
    },
    {
        "content": "<p>Hmm, less made up than I thought then. I remember lots of proposals when we set this standard a while back</p>",
        "id": 227422272,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1614083303
    },
    {
        "content": "<p><code>[aluffi2016][]</code> is legal in CommonMark too, from the same page</p>",
        "id": 227422278,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1614083307
    },
    {
        "content": "<p>I mean, who knows what mistletoe considers legal</p>",
        "id": 227422355,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1614083361
    },
    {
        "content": "<p>Mistletoe has a fairly comprehensive set of CommonMark tests, but it looks like theyâre pinned to CommonMark version 0.28 (CommonMark 0.29 is the current one).</p>",
        "id": 227436606,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1614089955
    },
    {
        "content": "<p>This looks to be the example that Eric linked: <a href=\"https://github.com/miyuchina/mistletoe/blob/master/test/commonmark/commonmark.json#L4282\">https://github.com/miyuchina/mistletoe/blob/master/test/commonmark/commonmark.json#L4282</a></p>",
        "id": 227436673,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1614089979
    },
    {
        "content": "<p>In the process of writing <a href=\"https://github.com/leanprover-community/doc-gen/pull/166\">https://github.com/leanprover-community/doc-gen/pull/166</a>, I found out that mistletoe is not re-entrant (and therefore not thread-safe, asyncio-safe, or I'll-just-cache-this-renderer-globally-safe).</p>\n<p>Did we ever look at <a href=\"https://github.com/executablebooks/markdown-it-py\">https://github.com/executablebooks/markdown-it-py</a>?<br>\nIt's developed by some people who forked mistletoe then gave up because its maintainer never responded.</p>",
        "id": 282138574,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652375043
    },
    {
        "content": "<p>Hmm, I've never looked at it. How compatible is it with mistletoe? i.e. will the hacky mathjax scripts I wrote have to be rewritten if we switch over?</p>",
        "id": 282140601,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1652375833
    },
    {
        "content": "<p>I guess I'll try it and see at some point; just wanted to check it hadn't already been dismissed</p>",
        "id": 282141614,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652376182
    },
    {
        "content": "<p>One argument in favor of markdown-it-py; it's a translation of javascript's markdown-it, which is what vscode uses internally.</p>\n<p>The math support is slightly different (it fails some of the latex tests), but I've filed a fix upstream at <a href=\"https://github.com/executablebooks/markdown-it-dollarmath/pull/6\">https://github.com/executablebooks/markdown-it-dollarmath/pull/6</a></p>",
        "id": 282399446,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652606173
    }
]