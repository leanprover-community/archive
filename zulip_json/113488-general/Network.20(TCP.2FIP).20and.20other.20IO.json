[
    {
        "content": "<p>Hi everyone!</p>\n<p>I know almost nothing about theorem proving, but just discovered Lean 4 and absolutely felt in love with it - just what I was looking for when departing from Scala and Haskell. I want to try it out on some pet projects, but it seems that Lean is still very lean (no pun intended) on usual general purpose programming ecosystem (IO, parsers, DB connectors). Is there a centralized place (Zulip stream, Github repo) where people interested in making Lean approachable for mere mortals can ask questions and collaborate?</p>\n<p>A more concrete question to the start the convo. Is it true that if I want to start writing TCP/IP API - I need to lean on (no pun intended) FFI (<code>IO.FS</code> and Socket.lean use FFI)? Is it possible to write FFI in Rust?</p>",
        "id": 407652619,
        "sender_full_name": "Anton Parkhomenko",
        "timestamp": 1702450201
    },
    {
        "content": "<p>You can ask questions in <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a> or <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a> as much as you want.</p>\n<p>And yes for any interaction with the operating system you do need FFI like in pretty much any language that is not C. That said I dont really understand what you mean by TCP/IP API? Sockets are the level of abstraction that an ordinary user is supposed to work with on basically any OS.</p>",
        "id": 407659724,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1702452539
    },
    {
        "content": "<p>To put it another way - if I want to write a connector to ZeroMQ (or Postgres or whatever or just do HTTP requests) - I need something to start with. And unlike Rust, Java, Haskell, where I can use a primitives like <code>java.net.Socket</code> - in Lean it has to be <code>extern</code> first. And from what I see these low-level primitives are missing or I was looking at the wrong places?</p>\n<p>From what I see in <code>IO.FS</code> - Lean's FFI forwards function calls not directly to system calls, but to C++ function which makes the behavior more <a href=\"https://github.com/leanprover/lean4/blob/2f216b52550e7b12b342d6b1717897ad3630ae63/src/runtime/io.cpp#L264\">Lean-friendly</a>.</p>",
        "id": 407662467,
        "sender_full_name": "Anton Parkhomenko",
        "timestamp": 1702453576
    },
    {
        "content": "<p>Right. But we already have a working socket API here: <a href=\"https://github.com/hargoniX/socket.lean\">https://github.com/hargoniX/socket.lean</a> that you can just use, there is not much need to bother with implementing that again.  That said HTTP is not implemented right now so one would have to start with that.</p>",
        "id": 407668519,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1702455827
    },
    {
        "content": "<p>Ok, cool. I haven't seen your socket.lean on reservoir (stumbled upon another implementation on Github, which is now deprecated). Also alloy looks very useful for the beginning.</p>",
        "id": 407676273,
        "sender_full_name": "Anton Parkhomenko",
        "timestamp": 1702458186
    }
]