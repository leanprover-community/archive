[
    {
        "content": "<p>Someone just privately asked me how to prove 1 &lt;= 2^k, and applying <code>one_le_pow_of_one_le</code> doesn't work because <code>nat.has_pow</code> is not definitionally <code>monoid.has_pow</code>. We were always told that nothing could be done about this because it was in core. Is this something which can now be changed though? Or would it just break a gazillion things and nobody can be bothered to fix them? The issue I'm concerned about is that the two functions have different conventions about the succ case: <code>nat.pow</code> is <code>b^n*b</code> and <code>monoid.pow</code> is <code>a*a^n</code> :-(</p>",
        "id": 196340778,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588700354
    },
    {
        "content": "<p>I think it mostly requires having someone with enough time and energy.</p>",
        "id": 196340955,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588700440
    },
    {
        "content": "<p>there is a theorem to rewrite one in terms of the other</p>",
        "id": 196341288,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588700629
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/pull/128#issuecomment-610281436\" title=\"https://github.com/leanprover-community/lean/pull/128#issuecomment-610281436\">https://github.com/leanprover-community/lean/pull/128#issuecomment-610281436</a></p>",
        "id": 196341459,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588700720
    }
]