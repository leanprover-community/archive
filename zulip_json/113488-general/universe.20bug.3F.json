[
    {
        "content": "<p>MWE:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">monoid</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span>\n<span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">monoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_monoid</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">irreducible</span><span class=\"o\">]</span> <span class=\"n\">continuous</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">pp</span><span class=\"bp\">.</span><span class=\"n\">all</span> <span class=\"n\">true</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"n\">mul&#39;</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">continuous</span> <span class=\"o\">(</span><span class=\"bp\">λ</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">continuous_mul</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"bp\">.</span><span class=\"n\">prod_mk</span> <span class=\"n\">hg</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>Error:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">rwbarton</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"n\">class</span> <span class=\"kn\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">,</span>\n<span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">topological_space</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_2</span> <span class=\"o\">:</span> <span class=\"n\">monoid</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_3</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">topological_monoid</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">α</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"bp\">_</span><span class=\"n\">inst_2</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"o\">:</span> <span class=\"n\">topological_space</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">β</span><span class=\"o\">,</span>\n<span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">v</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">β</span> <span class=\"n\">α</span> <span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n<span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">v</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">β</span> <span class=\"n\">α</span> <span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"n\">g</span>\n<span class=\"err\">⊢</span> <span class=\"n\">topological_space</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"err\">?</span><span class=\"n\">l_1</span><span class=\"o\">)}</span> <span class=\"o\">(</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"err\">?</span><span class=\"n\">l_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"err\">?</span><span class=\"n\">l_1</span><span class=\"o\">)}</span> <span class=\"n\">α</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">rwbarton</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">synthesized</span> <span class=\"n\">type</span> <span class=\"n\">class</span> <span class=\"kn\">instance</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">definitionally</span> <span class=\"n\">equal</span> <span class=\"n\">to</span> <span class=\"n\">expression</span> <span class=\"n\">inferred</span> <span class=\"k\">by</span> <span class=\"n\">typing</span> <span class=\"n\">rules</span><span class=\"o\">,</span> <span class=\"n\">synthesized</span>\n  <span class=\"err\">⁇</span>\n<span class=\"n\">inferred</span>\n  <span class=\"bp\">@</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">topological_space</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"err\">?</span><span class=\"n\">l_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"err\">?</span><span class=\"n\">l_1</span><span class=\"o\">)}</span> <span class=\"n\">α</span> <span class=\"n\">α</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span>\n</code></pre></div>",
        "id": 195854961,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588260002
    },
    {
        "content": "<p>There's more errors, which might also be relevant, but they are long.</p>",
        "id": 195855034,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588260012
    },
    {
        "content": "<p>It works without <code>attribute [irreducible] continuous</code> (I just copied the lemma and proof from mathlib).</p>",
        "id": 195855150,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588260056
    },
    {
        "content": "<p>I'm pretty confused--like <code>prod.{(max u ?l_1) (max u ?l_1)} α α</code> is already kind of bogus.</p>",
        "id": 195855407,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588260150
    },
    {
        "content": "<p>If you just want a workaround, <code>continuous_mul.comp  (hf.prod_mk hg : _)</code> works.</p>",
        "id": 195855712,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588260258
    },
    {
        "content": "<p>Oh nice, I bet I can use this to simplify a couple of my other changes too.</p>",
        "id": 195856097,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588260401
    },
    {
        "content": "<p>If you want to know more about why it works, with the words expected type/top-down/unifier, you will need someone else, though!</p>",
        "id": 195856283,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588260483
    },
    {
        "content": "<p>I think there is a lemma that has been proven for all universes of the form <code>max u v</code> for some <code>u,v</code> and this is confusing the elaborator</p>",
        "id": 195856705,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588260677
    },
    {
        "content": "<p>Well, <code>prod.topological_space</code> itself has a form like this</p>",
        "id": 195856948,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588260790
    },
    {
        "content": "<p><code>continuous.comp</code> has only two universe variables</p>",
        "id": 195856977,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588260806
    },
    {
        "content": "<p>it should have three</p>",
        "id": 195856987,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588260812
    },
    {
        "content": "<p>this causes this joint universe to get instanciated with a max and it gets messy after that</p>",
        "id": 195857091,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588260849
    },
    {
        "content": "<p>Wait, I see three?</p>",
        "id": 195857122,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588260862
    },
    {
        "content": "<p>no, false alarm</p>",
        "id": 195857218,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588260896
    },
    {
        "content": "<p>Lean has no problems proving <code>continuous ((λp:_×_, p.1 * p.2) ∘ λx, (f x, g x))</code> using that proof</p>",
        "id": 195857954,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588261199
    },
    {
        "content": "<p>but somewhere between backward elaboration and the definitional reduction here it gets confused</p>",
        "id": 195858081,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588261228
    },
    {
        "content": "<p>This demonstrates the problem somewhat:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"n\">mul&#39;</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">continuous_mul</span><span class=\"bp\">.</span><span class=\"n\">comp</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"n\">prod_mk</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">continuous_mul</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"n\">prod_mk</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">),</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 195859517,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588261824
    },
    {
        "content": "<p>It is unifying</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_9</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_10</span> <span class=\"err\">?</span><span class=\"n\">l_16</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_11</span> <span class=\"o\">(</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_10</span> <span class=\"err\">?</span><span class=\"n\">l_16</span><span class=\"o\">}</span> <span class=\"err\">?</span><span class=\"n\">m_12</span> <span class=\"err\">?</span><span class=\"n\">m_17</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">m_13</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">topological_space</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_10</span> <span class=\"err\">?</span><span class=\"n\">l_16</span><span class=\"o\">}</span> <span class=\"err\">?</span><span class=\"n\">m_12</span> <span class=\"err\">?</span><span class=\"n\">m_17</span> <span class=\"err\">?</span><span class=\"n\">m_14</span> <span class=\"err\">?</span><span class=\"n\">m_18</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"err\">?</span><span class=\"n\">m_11</span><span class=\"o\">),</span> <span class=\"bp\">@</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_10</span> <span class=\"err\">?</span><span class=\"n\">l_16</span><span class=\"o\">}</span> <span class=\"err\">?</span><span class=\"n\">m_12</span> <span class=\"err\">?</span><span class=\"n\">m_17</span> <span class=\"o\">(</span><span class=\"err\">?</span><span class=\"n\">m_15</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"err\">?</span><span class=\"n\">m_19</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n<span class=\"bp\">=</span><span class=\"err\">?</span><span class=\"bp\">=</span>\n<span class=\"bp\">@</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_1</span> <span class=\"err\">?</span><span class=\"n\">l_2</span><span class=\"o\">}</span> <span class=\"err\">?</span><span class=\"n\">m_3</span> <span class=\"o\">(</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_2</span> <span class=\"err\">?</span><span class=\"n\">l_2</span><span class=\"o\">}</span> <span class=\"err\">?</span><span class=\"n\">m_4</span> <span class=\"err\">?</span><span class=\"n\">m_4</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">m_5</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">topological_space</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_2</span> <span class=\"err\">?</span><span class=\"n\">l_2</span><span class=\"o\">}</span> <span class=\"err\">?</span><span class=\"n\">m_4</span> <span class=\"err\">?</span><span class=\"n\">m_4</span> <span class=\"err\">?</span><span class=\"n\">m_6</span> <span class=\"err\">?</span><span class=\"n\">m_6</span><span class=\"o\">)</span>\n    <span class=\"err\">?</span><span class=\"n\">m_7</span>\n</code></pre></div>\n\n\n<p>and the resulting term</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_20</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_23</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_25</span> <span class=\"err\">?</span><span class=\"n\">m_26</span> <span class=\"err\">?</span><span class=\"n\">m_27</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_20</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_23</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_25</span> <span class=\"err\">?</span><span class=\"n\">m_26</span> <span class=\"err\">?</span><span class=\"n\">m_28</span><span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">]),</span>\n    <span class=\"bp\">@</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_20</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_23</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_25</span> <span class=\"err\">?</span><span class=\"n\">m_26</span>\n      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">comp</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"err\">?</span><span class=\"n\">l_20</span><span class=\"bp\">+</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)</span><span class=\"bp\">+</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"err\">?</span><span class=\"n\">m_23</span>\n         <span class=\"o\">(</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_24</span><span class=\"o\">)</span>\n         <span class=\"err\">?</span><span class=\"n\">m_24</span>\n         <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_24</span><span class=\"o\">),</span>\n            <span class=\"bp\">@</span><span class=\"n\">has_mul</span><span class=\"bp\">.</span><span class=\"n\">mul</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_24</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semigroup</span><span class=\"bp\">.</span><span class=\"n\">to_has_mul</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_24</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">monoid</span><span class=\"bp\">.</span><span class=\"n\">to_semigroup</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_29</span><span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">]))</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"n\">p</span><span class=\"o\">))</span>\n         <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"err\">?</span><span class=\"n\">m_23</span><span class=\"o\">),</span> <span class=\"bp\">@</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"bp\">.</span><span class=\"o\">{(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"err\">?</span><span class=\"n\">l_21</span> <span class=\"err\">?</span><span class=\"n\">l_22</span><span class=\"o\">)}</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"err\">?</span><span class=\"n\">m_24</span> <span class=\"o\">(</span><span class=\"err\">?</span><span class=\"n\">m_27</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"err\">?</span><span class=\"n\">m_28</span><span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">]</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span>\n</code></pre></div>\n\n\n<p>contains only the universe <code>(max ?l_21 ?l_22)</code>, which should just be one meta universe</p>",
        "id": 195859854,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588261959
    }
]