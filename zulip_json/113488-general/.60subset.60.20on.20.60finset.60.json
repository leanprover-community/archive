[
    {
        "content": "<p>It seems that we can't use <code>finset.subset</code> with <code>calc</code>: I tried to add <code>@[trans]</code> and <code>@[refl]</code> attributes but some <code>set</code> proofs stop working. What do you think about switching to <code>â‰¤</code> and <code>&lt;</code> in <code>finset</code>?</p>",
        "id": 195302473,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1587847946
    },
    {
        "content": "<p>We already use it, e.g., for <code>submonoid</code>s.</p>",
        "id": 195302478,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1587847967
    },
    {
        "content": "<p>When Kenny told me to use <code>&lt;</code> and <code>\\le</code> for ideals I was kind of horrified -- but then when I realised that actually using the given lattice structure stuff was a good idea, I really came around to this way of thinking. The only issue of course is that it's confusing for newcomers. It's a bit like to_additive -- one could envisage an entirely new lattice class where \\subset and \\subseteq are used...and we <em>really</em> don't want to go there! If we had some sort of fix for this notational issue, where mathematicians use different notation to mean the same thing in different situations -- then you might not even be asking this question. But as far as I can see we don't have a good answer to this. I would definitely object if people told me to use * for every group, but using &lt; for every lattice, or at least most of them, sounds like a great idea. I would even be in favour of using it for sets, and also using map and comap instead of image and preimage.</p>",
        "id": 195302691,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587848359
    },
    {
        "content": "<p>Independent of that, I'm surprised that adding the attributes causes problems. What exactly broke?</p>",
        "id": 195302761,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587848425
    }
]