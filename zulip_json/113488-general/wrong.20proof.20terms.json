[
    {
        "content": "<p>I found that the proof terms are sometimes wrong as shown in the following example. Is there a way to get the correct proof term or fix the wrong proof term automatically?</p>\n<p>-- this one could work<br>\nlemma test : 0 ≤ 1:=<br>\nbegin<br>\n/-<br>\nTry this: exact 1.zero_le<br>\n-/<br>\n  show_term{exact nat.zero_le 1},<br>\nend</p>\n<p>-- we print the proof term which is the same as show_term<br>\n/-<br>\ntheorem hoare_logic.test : 0 ≤ 1 :=<br>\n1.zero_le<br>\n-/<br>\n#print test</p>\n<p>-- but the proof term doesn't work<br>\nlemma test1: 0 ≤ 1 := 1.zero_le<br>\n/-<br>\ninvalid field notation, type is not of the form (C ...) where C is a constant<br>\n  1<br>\nhas type<br>\n  ?m_1<br>\n-/</p>",
        "id": 355877447,
        "sender_full_name": "Mingzhe Wang",
        "timestamp": 1683231577
    },
    {
        "content": "<p>Lean doesn't know the type of 1 in your proof term. In fact from your test lemma it's not entirely clear that you know the type of 1 either. Did you know that lean has many different 1s? Say which one you mean with eg <code>(1 : Nat)</code> and the problem should go away.</p>",
        "id": 355880375,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1683232543
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I think the question is about the fact that <code>show_term</code> pretty prints terms that can't be pasted back in. They already have <code>nat.zero_le 1</code> for example</p>",
        "id": 355880709,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1683232674
    },
    {
        "content": "<p>Ok, yes, that is true. Round tripping is hard!</p>",
        "id": 355880853,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1683232718
    },
    {
        "content": "<p>In this case, I think it's <code>set_option pp.structure_projections false</code> that will turn off this \"dot notation\" and help <code>show_term</code> print something usable.</p>",
        "id": 355881389,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1683232923
    },
    {
        "content": "<p>You could also do <code>set_option pp.all true</code> to get it to print something closer to the full form of the proof term.</p>",
        "id": 355881514,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1683232969
    },
    {
        "content": "<p>Anyway, it's not the proof term that's wrong (thankfully), it's how the proof term is being pretty printed that's wrong.</p>",
        "id": 355881605,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1683233000
    },
    {
        "content": "<p>Thanks Kevin and Kyle! WIth set_option pp.all true, I got the correct proof term!</p>",
        "id": 355915484,
        "sender_full_name": "Mingzhe Wang",
        "timestamp": 1683249806
    },
    {
        "content": "<p>Yeah that's definitely a way to increase the chances of round tripping working :-)</p>",
        "id": 355960946,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1683269926
    }
]