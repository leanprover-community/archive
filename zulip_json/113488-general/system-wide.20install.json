[
    {
        "content": "<p>I am trying to install Lean4+mathlib in the jupyter server we use for teaching. <br>\nIt is a system where students access with their university credentials, and have a system user associated to them. </p>\n<p>Thanks to the vscode-server proxy extension, each student, once logged in, can start a web version of vscode. Now we need to install lean+mathlib in a way that is accessible to every user.</p>\n<p>From what i have seen, the elan approach is to install everything at user level. That is, each students should run the corresponding script, initialize a project and so on.</p>\n<p>Is there a way to do that steps on a system level, so that each user just has to log in and have a  working lean+mathlib environment?</p>",
        "id": 376045199,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689604104
    },
    {
        "content": "<p>To get <code>elan</code> working at a system level, you may be able to just install it as whatever system user is running the <code>vscode-server</code>. VSCode should then make use of that lean toolchain. This would get a Lean 4 environment for students to use, and VS Code's embedded terminal should allow them to make use of <code>elan</code> executables like <code>lake</code> and <code>lean</code>.</p>\n<p>As for mathlib, mathlib is a package, and current Lean package management unfortunately does not permit system wide package installs. You could have a preset package with mathlib already added to you have students open in VS Code. If you want students to create their own packages, you can have them use <code>lake new &lt;pkg&gt; math</code> to automatically add mathlib as a dependency, but they will still need to manually do the <code>lake exe cache get</code> dance to the get the oleans.</p>",
        "id": 376526083,
        "sender_full_name": "Mac Malone",
        "timestamp": 1689738543
    },
    {
        "content": "<p>Thanks for the answer. Sadly, that doesn't work for me, since each user runs its own instance of <code>vscode-server</code> (we need to do that, because we impose resource limitations at user level).</p>\n<p>I could hack something copying the <code>elan</code> toolchain and the 'lake-packages<code> of a project to </code>usr/local<code> and then linking them from each user directory (in the case of the </code>lake-packages` it is more tricky: i have a copy of the skeleton in each user dir, but the biggest subdirectories are symlinked). It works, but it is an ugly hack.</p>",
        "id": 376652855,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689770798
    },
    {
        "content": "<p>Yes, you can put copies of Lean and mathlib4 somewhere and then add them to <code>PATH</code> and <code>LEAN_PATH</code>, respectively. I would say this is one of the few scenarios where touching <code>LEAN_PATH</code> is warranted</p>",
        "id": 376656070,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689771401
    },
    {
        "content": "<p>what is exactly the role of <code>LEAN_PATH</code> variable?</p>",
        "id": 376675839,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689775039
    },
    {
        "content": "<p>It's the search path for <code>import</code>. Try running <code>lake env bash -c 'echo $LEAN_PATH'</code> in a Lake project</p>",
        "id": 376679053,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689775595
    },
    {
        "content": "<p>I see, if i have a global install, and have the proper <code>PATH</code> and <code>LEAN_PATH</code> variables, it should work without having anything specific in the user directory?</p>",
        "id": 376679832,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689775727
    },
    {
        "content": "<p>Yes, exactly. Just make sure it's the same Lean version that produced the mathlib4 build files</p>",
        "id": 376682725,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689776149
    },
    {
        "content": "<p>thanks!</p>",
        "id": 376683575,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689776295
    },
    {
        "content": "<p>I tried that and I get an error message about manifest being outdated <span aria-label=\"man shrugging\" class=\"emoji emoji-1f937-200d-2642\" role=\"img\" title=\"man shrugging\">:man_shrugging:</span></p>",
        "id": 376703664,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689779866
    },
    {
        "content": "<p>You should not use Lake at all in that case</p>",
        "id": 376704461,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689780006
    },
    {
        "content": "<p>If you want users to develop a whole project with multiple files on top of mathlib4... then that's a problem with this approach</p>",
        "id": 376704836,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689780079
    },
    {
        "content": "<p>I see, well i will further investigate the approach of having a local project, but symlinking most of the directories to save space</p>",
        "id": 376706073,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689780287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461731\">Miguel Marco</span> <a href=\"#narrow/stream/113488-general/topic/system-wide.20install/near/376652855\">said</a>:</p>\n<blockquote>\n<p>Thanks for the answer. Sadly, that doesn't work for me, since each user runs its own instance of <code>vscode-server</code> (we need to do that, because we impose resource limitations at user level).</p>\n</blockquote>\n<p>This confuses me a bit. If users run their own instance of <code>vscode-server</code>, why not have them run their own instance of <code>elan</code> as well?</p>",
        "id": 376716378,
        "sender_full_name": "Mac Malone",
        "timestamp": 1689782165
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span> <a href=\"#narrow/stream/113488-general/topic/system-wide.20install/near/376716378\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"461731\">Miguel Marco</span> <a href=\"#narrow/stream/113488-general/topic/system-wide.20install/near/376652855\">said</a>:</p>\n<blockquote>\n<p>Thanks for the answer. Sadly, that doesn't work for me, since each user runs its own instance of <code>vscode-server</code> (we need to do that, because we impose resource limitations at user level).</p>\n</blockquote>\n<p>This confuses me a bit. If users run their own instance of <code>vscode-server</code>, why not have them run their own instance of <code>elan</code> as well?</p>\n</blockquote>\n<p>Because that would imply having a copy of all the packages (about 4GB) per user. We have potentially hundreds of users, so we risk running out of disk space.</p>",
        "id": 376786022,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689799139
    },
    {
        "content": "<p><code>elan</code> is a very small program. It's mathlib that is huge.</p>",
        "id": 376787310,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689799587
    },
    {
        "content": "<p>yes, but if each user uses elan, it will install mathlib for each user.</p>",
        "id": 376788396,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689799974
    },
    {
        "content": "<p>the idea is to have averything set up so the students don't have to manage everything: they log in, and have a working environment to follow the course</p>",
        "id": 376788994,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689800190
    },
    {
        "content": "<p>Elan only manages lean, not mathlib</p>",
        "id": 376789128,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689800234
    },
    {
        "content": "<p>With only one lean version, I get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">du</span> <span class=\"bp\">-</span><span class=\"n\">d0</span> <span class=\"bp\">-</span><span class=\"n\">h</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span>\n<span class=\"mi\">895</span><span class=\"n\">M</span>    <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">gitpod</span><span class=\"bp\">/.</span><span class=\"n\">elan</span>\n</code></pre></div>",
        "id": 376789151,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689800243
    },
    {
        "content": "<p>Which is big enough that a global install is probably not a waste of time</p>",
        "id": 376789380,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689800307
    },
    {
        "content": "<p>Regarding mathlib; can't you use <code>require mathlib from /\"your\"/\"global\"/\"mathlib\"/\"install\"</code> in the lakefile?</p>",
        "id": 376789773,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689800438
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/system-wide.20install/near/376789773\">said</a>:</p>\n<blockquote>\n<p>Regarding mathlib; can't you use <code>require mathlib from /\"your\"/\"global\"/\"mathlib\"/\"install\"</code> in the lakefile?</p>\n</blockquote>\n<p>Maybe... but don't know how to do it. I am kind of lost about what lake does.</p>",
        "id": 376790120,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689800540
    },
    {
        "content": "<p>When working on a local project depending on mathlib, lake is the thing downloading 3.6G of packages including mathlib</p>",
        "id": 376790303,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689800598
    },
    {
        "content": "<p>and how can i tell it to use a global install instead?</p>",
        "id": 376791236,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689800910
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/system-wide.20install/near/376789773\">said</a>:</p>\n<blockquote>\n<p>Regarding mathlib; can't you use <code>require mathlib from /\"your\"/\"global\"/\"mathlib\"/\"install\"</code> in the lakefile?</p>\n</blockquote>\n<p>might do it</p>",
        "id": 376798877,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689803828
    },
    {
        "content": "<p>I get this error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">manifest</span> <span class=\"n\">out</span> <span class=\"n\">of</span> <span class=\"n\">date</span><span class=\"o\">:</span> <span class=\"n\">source</span> <span class=\"n\">kind</span> <span class=\"o\">(</span><span class=\"n\">git</span><span class=\"bp\">/</span><span class=\"n\">path</span><span class=\"o\">)</span> <span class=\"n\">of</span> <span class=\"n\">dependency</span> <span class=\"n\">mathlib</span> <span class=\"n\">changed</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">update</span><span class=\"bp\">`</span> <span class=\"n\">to</span> <span class=\"n\">update</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">URL</span> <span class=\"n\">has</span> <span class=\"n\">changed</span><span class=\"bp\">;</span> <span class=\"n\">deleting</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">and</span> <span class=\"n\">cloning</span> <span class=\"n\">again</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">permission</span> <span class=\"n\">denied</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">13</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">github</span><span class=\"bp\">/</span><span class=\"n\">workflows</span><span class=\"bp\">/</span><span class=\"n\">bors.yml</span>\n</code></pre></div>",
        "id": 376802868,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689805635
    },
    {
        "content": "<p>Is this while also having your symlink hacks?</p>",
        "id": 376803788,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689806059
    },
    {
        "content": "<p>yes. Will try a fresh approach</p>",
        "id": 376804071,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689806212
    },
    {
        "content": "<p>I don't know if lake makes a copy of local paths or makes a symlink</p>",
        "id": 376804865,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689806617
    },
    {
        "content": "<p>WIth a fresh project, it seems to work, but it still downloads proofwidgets Cli Qq aesop and std</p>\n<p>Is there a way to configure to use them from a system wide install too?</p>",
        "id": 376804874,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689806622
    },
    {
        "content": "<p>Did the above make a local copy of the <code>mathlib</code> folder?</p>",
        "id": 376805004,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689806672
    },
    {
        "content": "<p>No, just the five packages I mentioned</p>",
        "id": 376805096,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689806734
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/system-wide.20install/near/376789773\">said</a>:</p>\n<blockquote>\n<p>Regarding mathlib; can't you use <code>require mathlib from /\"your\"/\"global\"/\"mathlib\"/\"install\"</code> in the lakefile?</p>\n</blockquote>\n<p>Note that <code>FilePath</code> abuses the <code>Div</code> operator to interpret the <code>/</code> there. It's a binary operator so the initial <code>/</code> is not syntactically legal</p>",
        "id": 376805349,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689806880
    },
    {
        "content": "<p>Oh, I just used a string with the full path:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"s2\">\"/usr/local/share/lean/lake-packages/mathlib\"</span>\n</code></pre></div>",
        "id": 376805620,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1689807020
    },
    {
        "content": "<p>(the main purpose of using <code>\"foo\" / \"bar\"</code> style is that it uses the appropriate directory separator for the OS; this is obviously not a problem if you know the system.)</p>",
        "id": 376805732,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689807084
    },
    {
        "content": "<p>(not to mention that <code>\"/\"</code> works as a directory separator on every supported system anyway)</p>",
        "id": 376805848,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689807125
    },
    {
        "content": "<p>I got that leading slash from a docstring</p>",
        "id": 376806230,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689807315
    },
    {
        "content": "<p>double checked, it definitely doesn't work. which docstring?</p>",
        "id": 376809005,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689808933
    },
    {
        "content": "<p>I think your best bet is to petition <span class=\"user-mention\" data-user-id=\"315577\">@Mac</span> to allow Lake to inherit global <code>LEAN_PATH</code>s, perhaps as an opt-in. At least from my rough understanding of Lake that should be easier and more robust to do than supporting this kind of global, prebuilt dependency in Lake itself.</p>",
        "id": 376866688,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689836467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Lake should already inherit the global <code>LEAN_PATH</code>. If it does not, that is a bug.</p>",
        "id": 376867488,
        "sender_full_name": "Mac Malone",
        "timestamp": 1689836684
    },
    {
        "content": "<p>Oh! I briefly looked at the code yesterday and assumed it was by design to make the build more hermetic, but I didn't actually try</p>",
        "id": 376867957,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689836810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/system-wide.20install/near/376806230\">said</a>:</p>\n<blockquote>\n<p>I got that leading slash from a docstring</p>\n</blockquote>\n<p>Oh, did your eyes fall on the <code>/\"path\"/\"dir\"</code> part of the <code>require</code> syntax docstring and extrapolate from there? If so, sorry! The non-git require syntax does not have a leading slash (as the docstring demonstrates at the top).</p>",
        "id": 376868100,
        "sender_full_name": "Mac Malone",
        "timestamp": 1689836856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"461731\">@Miguel Marco</span> so if it doesn't work with mathlib4 in <code>LEAN_PATH</code> and <em>not</em> in the lakefile, please open an issue in the lean4 repo :)</p>",
        "id": 376868282,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689836901
    }
]