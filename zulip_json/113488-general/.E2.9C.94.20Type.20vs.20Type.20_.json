[
    {
        "content": "<p>Kind of a dumb question -- if I'm trying to parameterize a structure with a type argument, is there ever a scenario where I would do <code>structure x (a : Type) where ...</code> instead of <code>structure x (a : Type _) where ...</code> as i've been seeing in <a href=\"https://github.com/leanprover-community/mathlib4/blob/6533094a68393dbab56cfb3ff2bed55c6978a84d/Mathlib/Data/Finset/Basic.lean#L141-L145\">the source</a>? They both seem to parse fine for me, and writing out <code>x some_type</code> in a type declaration doesn't give me an error for either one, so i'm not entirely sure what the difference is.</p>",
        "id": 368357916,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1687380218
    },
    {
        "content": "<p>Do you know about universe levels etc?</p>",
        "id": 368358095,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1687380281
    },
    {
        "content": "<p>Like, do you know the difference between Type and Type _ ? And you want to know which to prefer, or do you alreayd not understand the difference (semantically)</p>",
        "id": 368358201,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1687380314
    },
    {
        "content": "<p>Yeah, briefly; my understanding is that the <code>_</code> just means any universe level. I don't actually know what saying just <code>Type</code> means</p>",
        "id": 368358253,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1687380335
    },
    {
        "content": "<p>saying just Type means that you support only <code>Type 0</code> as opposed to <code>Type u</code></p>",
        "id": 368358397,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1687380385
    },
    {
        "content": "<p>this can sometimes be necessary because certain constructs like for example the IO monad were not designed in a universe polymorphic way</p>",
        "id": 368358456,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1687380408
    },
    {
        "content": "<p>Oh that makes a lot of sense actually<br>\n(Aaand I just found it in the docs)<br>\nThank you!</p>",
        "id": 368358599,
        "sender_full_name": "Bhakti Shah",
        "timestamp": 1687380457
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"578936\">Bhakti Shah</span> has marked this topic as resolved.</p>",
        "id": 368358655,
        "sender_full_name": "Notification Bot",
        "timestamp": 1687380474
    }
]