[
    {
        "content": "<p>After my experiments documented over at:<br>\n<a href=\"#narrow/stream/113488-general/topic/moving.20algebra.20out.20of.20core\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/moving.20algebra.20out.20of.20core</a><br>\nI'm wondering: should we carve out a well-designed and stable stdlib that sits between core and mathlib?<br>\nI can imagine that for a lot of CS applications, you don't want to have all of mathlib as a dependency. On the other hand, having maths locked into core is really annoying.</p>\n<p>So maybe we can have some <code>gcd(CS, math)</code> in a stdlib, that involves <code>nat</code>, <code>int</code>, <code>list</code>, <code>rbtree</code>, and a bit more.</p>",
        "id": 197182732,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589220184
    },
    {
        "content": "<p>The benefit would be that it would still be relatively easy to change things, if necessary.</p>",
        "id": 197182802,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589220218
    },
    {
        "content": "<p>oh yeah that well-known mathematical object <code>rbtree</code></p>",
        "id": 197182819,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589220232
    },
    {
        "content": "<p>Ok, maybe I shouldn't have said <code>gcd(CS, math)</code></p>",
        "id": 197182945,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589220283
    },
    {
        "content": "<p>maybe you should have just told me it was a tree :-)</p>",
        "id": 197183007,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589220325
    }
]