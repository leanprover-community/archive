[
    {
        "content": "<p>I'm wondering, in Lean 4 is there a way to show a normal form of a type?</p>\n<p>For example, in mathlib, CategoryTheory.Arrow is defined using CategoryTheory.Comma. I'm trying to create an object of type <code>Arrow Type</code>, but in the display window the goal is just shown as <code>Arrow Type</code>, so I have no idea how to actually construct a thing?</p>\n<p>Is there a way to get the goal-display to unwrap the definitions? Or even just to get a hint as for how to proceed building a thing of the given type? In Agda I'd use \"C-u C-u C-c Cd\" to display the normalized goal, and I'd do \"C-c c\" or \"C-c r\" to refine or case-split the goal to tell how to actually build the thing. Is there an equivalent in Lean?</p>\n<p>I tried<code>#eval</code> to unroll the definitions but it gave an error about Type not implementing MetaEval.</p>",
        "id": 392399741,
        "sender_full_name": "Joey Eremondi",
        "timestamp": 1695332331
    },
    {
        "content": "<p>If you enter tactic mode, you could use <code>unfold Arrow</code></p>",
        "id": 392401166,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695333171
    },
    {
        "content": "<p>For splitting the goal, typing a <code>_</code> and clicking the lightbulb works (it has a key-shortcut but it might be platform dependent)</p>",
        "id": 392401231,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695333226
    },
    {
        "content": "<p>Ooh, that's nice to know about the _, thanks</p>",
        "id": 392402328,
        "sender_full_name": "Joey Eremondi",
        "timestamp": 1695333935
    },
    {
        "content": "<p>Though often a better strategy is to go to the definition of <code>Arrow</code> for examples of or API for constructing it</p>",
        "id": 392402990,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695334390
    },
    {
        "content": "<p>Right, so I guess what I'm asking is, is there an in-editor workflow for this? Or do you just always have the editor open in one window and the browser open in the other with the API docs?</p>",
        "id": 392403978,
        "sender_full_name": "Joey Eremondi",
        "timestamp": 1695334989
    },
    {
        "content": "<p>You can control-click on <code>Arrow</code> in the goal view to see its definition</p>",
        "id": 392404054,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695335039
    },
    {
        "content": "<p>Or in the source pane, or via whatever your keybinding is, etc</p>",
        "id": 392404135,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695335063
    },
    {
        "content": "<p>I use F12 (jump to definition) constantly. If you want to stay on the keyboard in tactic mode often typing <code>constructor</code> is helpful.</p>",
        "id": 392423307,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1695346412
    },
    {
        "content": "<p>Mathlib has <code>whnf</code> and <code>reduce</code> tactics that reduce terms. <code>whnf</code> will unfold definitions at the head of a term, and <code>reduce</code> will reduce everything recursively (it's what <code>#reduce</code> gives you). These likely go much too far.</p>",
        "id": 392436510,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1695355546
    }
]