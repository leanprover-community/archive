[
    {
        "content": "<p>What is the name of the program that evaluates tactic-based proofs? Is it a part of compilation? Can I say \"compiler accepts our proof\"?</p>",
        "id": 339218271,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677796738
    },
    {
        "content": "<p>I don't know exactly how it works in Lean 3, but in Lean 4 first you need to desugar macro-based tactics and elaborate what's left. \"Elaboration\" is the process of producing the final expression (a term of type <code>Expr</code>) that's sent to the kernel, which can accept or reject it</p>",
        "id": 339220815,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1677797918
    },
    {
        "content": "<p>Thanks! So there is elaborator and kernel. I suppose I cannot say \"elaborator accepts our proof\" because accepting is not a job for the elaborator. Nor can I say \"kernel accepts our proof\" because the kernel can only check proof terms. What can I say so that it is short and sweet?</p>",
        "id": 339221423,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677798182
    },
    {
        "content": "<p>The kernel accepts the (elaborated) proof.</p>",
        "id": 339221642,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1677798289
    },
    {
        "content": "<p>I guess I should go back to \"compiler accepts our proof\"? I suppose they are all subroutines of the compilation. Or is there something called \"builder\"? I mean the program that runs when I type <code>leanproject build</code> or <code>lake build</code> and hit Enter. Is compilator only a part of this builder or what it is called?</p>",
        "id": 339221856,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677798383
    },
    {
        "content": "<p>\"the compiler accepts our proof\" is correct, but it's a broader statement. If you're aiming to guide the reader towards trusting the system, talking about the kernel is preferable, since it's a much smaller piece of code. \"Compiler\" refers to a much bigger system that does parsing, IO routines to read oleans, runs metaprograms, processes helper commands, initializes things, writes oleans, talks to the kernel etc</p>",
        "id": 339222239,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1677798576
    },
    {
        "content": "<p>Oh yes! I don't want to use it in a technical-heavy text. I want to use it casually inside a text about theorem proving. Basically, I want to say \"our proof gets accepted\" but without the passive voice. Therefore, I needed to make sure what the noun is.</p>",
        "id": 339222824,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677798847
    },
    {
        "content": "<p>Maybe \"computer accepts our proof\" will be even better.</p>",
        "id": 339222924,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677798884
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/113488-general/topic/Terminology.20compilation/near/339221423\">said</a>:</p>\n<blockquote>\n<p>Thanks! So there is elaborator and kernel. I suppose I cannot say \"elaborator accepts our proof\" because accepting is not a job for the elaborator. Nor can I say \"kernel accepts our proof\" because the kernel can only check proof terms. What can I say so that it is short and sweet?</p>\n</blockquote>\n<p>Both the elaborator and the kenel (separately) accept the proof. Generally the error messages you see as a user are all coming from the elaborator, and the \"goals accomplished <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>\" message comes from the elaborator, so it really is the elaborator that accepts your proof. The kernel just checks the elaborator's work</p>",
        "id": 339237940,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677807055
    },
    {
        "content": "<p>\"Lean accepts our proof\"?</p>",
        "id": 339258662,
        "sender_full_name": "Reid Barton",
        "timestamp": 1677822938
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 339331509,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677846666
    }
]