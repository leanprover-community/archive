[
    {
        "content": "<p>When I am coding the lean code, if I want to prove something very long, lean may tell me (deterministic) timeout. But if I cancel some part of the  proof and replace it with the tactic \"sorry\", there is no problem with the code. So I may wonder how to deal with this problem, or how can I make the threshold time longer for lean?</p>",
        "id": 372826765,
        "sender_full_name": "Chenyi Li",
        "timestamp": 1688635689
    },
    {
        "content": "<p>You can increase the threshold, but in the long term, it will probably create more pain.<br>\nI rather suggest avoiding compute-heavy tactics outside of the situations where they happen to work fast.</p>\n<p>People will perhaps say that you should write shorter proofs (and have more lemmas).<br>\nI am not allowed to make this suggestions, as I sometimes write horribly long proofs.<br>\nOnce I wrote a monolithic proof of 800 lines (please don't do what I did) and guess what -- I didn't get a timeout!</p>",
        "id": 372856665,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1688641974
    },
    {
        "content": "<p>I am allowed to make this suggestion. :-) Proofs should be at most 10 lines. Show me a longer proof and I'll show you a missing lemma! (Not entirely true, but mostly.)</p>",
        "id": 372862965,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688643244
    },
    {
        "content": "<p>You can use <code>set_option maxHeartbeats XXX in ...</code> to raise the limit. But please please don't.</p>",
        "id": 372863146,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1688643287
    },
    {
        "content": "<p>Thank you! And I will first increase the threshold, and I will then decompose my proof into shorter ones.</p>",
        "id": 373069240,
        "sender_full_name": "Chenyi Li",
        "timestamp": 1688699985
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"614366\">@Chenyi Li</span> you might also find  the <code>save</code> tactic useful if your proof takes quite a long time, you can insert a <code>save</code> in the middle of it and it won't recompute that part after you edit something underneath it</p>",
        "id": 373099910,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1688713098
    }
]