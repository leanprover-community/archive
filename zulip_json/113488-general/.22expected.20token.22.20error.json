[
    {
        "content": "<p>Continuing with shockingly trivial questions. I'm trying to define the type of all (directed) graphs. From what I know from type theory, the type should be defined as <code>\\sum a : Type, Graph a</code> where <code>Graph a</code> could be defined as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Graph</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">edge</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"n\">x</span> <span class=\"n\">a</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span>\n</code></pre></div>\n<p>why is it that then</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">Graphs</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"bp\">\\</span><span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span> <span class=\"n\">Graph</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>gives me an error \"expected token\"?</p>\n<p>Am I doing something fundamentally wrong or what am I not understanding? Thanks a lot for any pointers!</p>",
        "id": 318578801,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1672404440
    },
    {
        "content": "<p>Because you either have to use the pure ASCII identifier of the Sigma type or the actual unicode:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Graph</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">edge</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">×</span> <span class=\"n\">a</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Graphs</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"bp\">Σ</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span> <span class=\"n\">Graph</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>or</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">Graphs</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">Sigma</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Graph</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>also note that there is no need to dive into type theory or anything here, you can also define it as a structure if you wish:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Graphs</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Graph</span> <span class=\"n\">a</span>\n</code></pre></div>",
        "id": 318580258,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672404920
    },
    {
        "content": "<p>Thanks for answering. Sorry for being sloppy, I did use unicode in the editor but not here. It turns out that I was using ∑ (i.e. <code>\\sum</code>) instead of Σ (i.e. <code>\\Sigma</code>) <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span> No idea how come I missed that there's a distinction between the two in Lean...</p>\n<p>(Although, it is a bit weird that <strong>sum</strong> types are not typeset with <code>\\sum</code>...)</p>",
        "id": 318589886,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1672408117
    },
    {
        "content": "<p>As a mathematician I would say the converse -- it would have been a bit weird if mathematical <strong>sum</strong>s of real numbers were not typeset with <code>\\sum</code>.</p>",
        "id": 318606451,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672413527
    },
    {
        "content": "<p>4 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/Beginner.20Questions\">#general &gt; Beginner Questions</a> by <span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span>.</p>",
        "id": 318927591,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672628164
    }
]