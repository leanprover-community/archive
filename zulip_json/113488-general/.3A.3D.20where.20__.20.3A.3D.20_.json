[
    {
        "content": "<p>If I have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">MyStructure</span> <span class=\"n\">where</span>\n  <span class=\"n\">__</span> <span class=\"o\">:=</span> <span class=\"n\">b</span>\n  <span class=\"n\">__</span> <span class=\"o\">:=</span> <span class=\"n\">c</span>\n</code></pre></div>\n<p>or</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">MyStructure</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"k\">with</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>then how does Lean choose which fields come from <code>a</code> and which fields come from <code>b</code>?</p>",
        "id": 382652216,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1691418627
    },
    {
        "content": "<p>I assume it tries them in (reverse?) order?</p>",
        "id": 382653188,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691418773
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=elabStructInst#doc\">docs#elabStructInst</a> ;)</p>",
        "id": 382653239,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691418780
    },
    {
        "content": "<p>(I realize that might not help much)</p>",
        "id": 382654036,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691418892
    },
    {
        "content": "<p>Experimentation would by my go to</p>",
        "id": 382654284,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691418923
    },
    {
        "content": "<p>I was going to poke at this in a bit anyway and can report back if no one beats me</p>",
        "id": 382655700,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691419166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/.3A.3D.20where.20__.20.3A.3D.20_/near/382653188\">said</a>:</p>\n<blockquote>\n<p>I assume it tries them in (reverse?) order?</p>\n</blockquote>\n<p>No, I tried reordering. Doesn't help.</p>",
        "id": 382711764,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1691429258
    },
    {
        "content": "<p>This <a href=\"https://github.com/leanprover/lean4/blob/master/tests/lean/structInst1.lean\">test</a> is instructive</p>",
        "id": 383018572,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1691512750
    }
]