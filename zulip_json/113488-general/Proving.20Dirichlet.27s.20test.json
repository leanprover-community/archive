[
    {
        "content": "<p>... continuing from <a href=\"#narrow/stream/113488-general/topic/.E2.9C.94.20.60cauchy_seq.2Econst_mul.60.20fails\">this thread</a></p>\n<p>I'm trying to prove <a href=\"https://en.wikipedia.org/wiki/Dirichlet%27s_test\">Dirichlet's test</a> to cross something off the undergrad list, so I need conditional convergence of infinite series, but <code>summable</code> is only absolute convergence. I was trying to avoid adding a formal definition of conditional convergence to Lean, since there seemed to be differing opinions on what it should look like. Instead I'm working with <code>cauchy_seq (\\lam n, \\sum range i in n, ...)</code>. Perhaps this is wrongheaded?</p>",
        "id": 271879040,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644868078
    },
    {
        "content": "<p>It seems to me that there would be no harm in instead using</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">‚àÉ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 271879247,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1644868186
    },
    {
        "content": "<p>The advantage is that there's a <em>lot</em> more in the library about convergent sequences than about Cauchy sequences.</p>",
        "id": 271879336,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1644868217
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113488-general/topic/.60cauchy_seq.2Econst_mul.60.20fails/near/271876949\">said</a>:</p>\n<blockquote>\n<p>The assumptions of <code>const_mul</code> also look unnecessarily strong.  It should be enough that <code>*</code> is uniformly continuous.</p>\n</blockquote>\n<p>Note that multiplication is <em>not</em> uniformly continuous on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi><mo>√ó</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R \\times \\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>.</p>",
        "id": 271879339,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644868218
    },
    {
        "content": "<p>I don't understand the point of proving things are Cauchy if you only do this only for real numbers.</p>",
        "id": 271879434,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644868270
    },
    {
        "content": "<p>My assumption was that the definition of conditional convergence would ultimately involve <code>cauchy_seq</code>, so it would be better to use that definition.</p>",
        "id": 271879759,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644868432
    },
    {
        "content": "<p>In which context?</p>",
        "id": 271879844,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644868461
    },
    {
        "content": "<p>I agree there's no point here, since Dirichlet's test only works with the product of a real sequence and a complex one AFAIK.</p>",
        "id": 271879894,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644868502
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/.60cauchy_seq.2Econst_mul.60.20fails/near/271879844\">said</a>:</p>\n<blockquote>\n<p>In which context?</p>\n</blockquote>\n<p>Sorry, I don't understand.</p>",
        "id": 271879983,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644868551
    },
    {
        "content": "<p>I just picked something off the list of missing undergrad materials. If I picked something dumb, just tell me, and I'll work on something else.</p>",
        "id": 271880085,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644868597
    },
    {
        "content": "<p>By context I meant the spaces where sequences live. But then you said they were in complex numbers.</p>",
        "id": 271880157,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644868644
    },
    {
        "content": "<p>Where did you see this Dirichlet thing on the undergrad list? I've never heard of this test.</p>",
        "id": 271880185,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644868663
    },
    {
        "content": "<p>It's a general form of the alternating series test, which can also be proved in a nicer way. Unlike the alternating series test, it might actually be useful down the line, since its used to <a href=\"https://www.ma.imperial.ac.uk/~bin06/M2PM3-Complex-Analysis/m2pm3abeldir.pdf\">prove convergence of Dirichlet series</a></p>",
        "id": 271880419,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644868791
    },
    {
        "content": "<p>Once again, I just picked this at random since it seemed like it was within my Zone of Proximal Development. If it's stupid, just tell me and I'll stop.</p>",
        "id": 271880593,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644868840
    },
    {
        "content": "<p>At least you have summation by parts now as a byproduct <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>.</p>",
        "id": 271880699,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644868910
    },
    {
        "content": "<p>I never wrote this is stupid. I'm trying to understand the context to figure out whether you want Cauchy sequences or convergent sequences</p>",
        "id": 271883141,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644870201
    },
    {
        "content": "<p>For some additional context, I've already <a href=\"https://github.com/leanprover-community/mathlib/commit/1370b7fea31e48869a860088f66e7d65f81de47e\">finished Dirichlet's test in ‚ÑÇ</a>. I would have put it in <code>analysis/specific_limits.lean</code>, but trying to import <code>analysis.complex.basic</code> results in an import cycle. Also, I think I'll have to make it generic over <code>is_R_or_C</code> to remove the casts from the statement of the alternating series test anyways.</p>\n<p>I could state it using <code>‚àÉ x, tendsto ...</code> instead. Perhaps you're saying it would be easier to prove this way? I chose <code>cauchy_seq</code> because the alternating series test and Dirichlet's test don't give any information about what the limit actually is, so I assumed you would have to through some analogue of <a href=\"https://leanprover-community.github.io/mathlib_docs/topology/algebra/infinite_sum.html#summable_iff_cauchy_seq_finset\"><code>summable_iff_cauchy_seq_finset</code></a> for conditionally convergent sums. Is this where I went awry?</p>",
        "id": 271898025,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644877278
    },
    {
        "content": "<p>I think Patrick is asking where you are seeing what you call Dirichlet's test on the UG todo list. Searching for Dirichlet on the UG web page gives nothing. Naming of results is not consistent between different countries.</p>",
        "id": 271898221,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644877369
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"457867\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/113488-general/topic/Proving.20Dirichlet's.20test/near/271880419\">said</a>:</p>\n<blockquote>\n<p>It's a general form of the alternating series test, which can also be proved in a nicer way. Unlike the alternating series test, it might actually be useful down the line, since its used to <a href=\"https://www.ma.imperial.ac.uk/~bin06/M2PM3-Complex-Analysis/m2pm3abeldir.pdf\">prove convergence of Dirichlet series</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I addressed that <a href=\"#narrow/stream/113488-general/topic/Proving.20Dirichlet's.20test/near/271880419\">here</a>. I found the proof for Dirichlet's test was a bit nicer than proving the alternating series test directly. It generated some useful intermediate results, like summation by parts. It's possible that I've made the wrong choice, of course.</p>",
        "id": 271898625,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644877591
    },
    {
        "content": "<p>This discussion <a href=\"#narrow/stream/113488-general/topic/.E2.9C.94.20.60cauchy_seq.2Econst_mul.60.20fails\">began</a> because I wanted a version of <a href=\"https://leanprover-community.github.io/mathlib_docs/topology/algebra/uniform_group.html#cauchy_seq.const_mul\"><code>cauchy_seq.const_mul</code></a> that works on the reals (and briefly forgot that <code>0</code> has no multiplicative inverse, because I am dumb).  Currently I have:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">private</span> <span class=\"kd\">lemma</span> <span class=\"n\">cauchy_seq.real_const_mul</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">cauchy_seq</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">cauchy_seq</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">uniform_continuous.comp_cauchy_seq</span> <span class=\"n\">real.uniform_continuous_mul_const</span> <span class=\"n\">hf</span>\n</code></pre></div>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> and <span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> suggested that I work around the problem by avoiding <code>cauchy_seq</code> entirely. This would be a bit of a bummer since I've already finished the proof, but if it leads to something shorter then it's fine.</p>",
        "id": 271900561,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1644878720
    }
]