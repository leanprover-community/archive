[
    {
        "content": "<p>I would like to copy-paste some Lean code snippets to a LaTeX file. It would be nice to keep the highlighting. Is there a LaTeX package for that?<br>\nA more general question: how does one get around the fact that LaTeX outputs a static document, while Lean is inherently interactive?</p>",
        "id": 405933961,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1701733690
    },
    {
        "content": "<p>For Q1, <a href=\"https://lean-lang.org/lean4/doc/syntax_highlight_in_latex.html\">https://lean-lang.org/lean4/doc/syntax_highlight_in_latex.html</a> provides 2 options.</p>",
        "id": 405935128,
        "sender_full_name": "Utensil Song",
        "timestamp": 1701734290
    },
    {
        "content": "<p>I saw this but it seems to want a whole file instead of a snippet.</p>",
        "id": 405935204,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1701734334
    },
    {
        "content": "<p>Er, no, I did not look closely enough</p>",
        "id": 405935262,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1701734363
    },
    {
        "content": "<p>For Q2, you can check <a href=\"https://leanprover-community.github.io/papers.html\">papers about Lean</a> for how to walk the reader through some goal states manually (most don't and focus on formalizing ideas, refering readers to the <a href=\"https://leanprover-community.github.io/teaching/resources.html\">books</a> and VSCode). Particularly, 2.1. Interactive proofs in <em>Diagram Chasing in Interactive Theorem Proving</em> did it for Lean 3, and I was very impressed by the way it presents Lean, and how it interweaves Math and Lean together.</p>\n<p>But if not limited to LaTeX, there's LeanInk which annotates Lean code with type information and goal states then renders it to an interactive web page. <a href=\"https://djvelleman.github.io/HTPIwL/Chap3.html\">How to prove it with Lean</a> presents goal states with Lean code, mimicking the interactive behavior in VSCode, is also very cool (manually crafted).</p>\n<p>There will be a new documentation tool which is introduced in 16. Documentation Authoring Tool in <a href=\"https://lean-fro.org/about/roadmap/\">Lean Fro Roadmap</a> and demonstrated in page 39 of <a href=\"https://lean-lang.org/talks/community-meeting-oct-2023.pdf\">this community meeting slide</a> . Hopefully it would output interactive  web page too.</p>",
        "id": 405938777,
        "sender_full_name": "Utensil Song",
        "timestamp": 1701735869
    },
    {
        "content": "<p>If you're comfortable with emacs, there is also a package called engrave-faces that exports LaTeX code for any code snippet keeping the (active theme) highligting. Since a good part of lean's syntax is dynamic and depends on the LSP server I find it an interesting option.</p>\n<p><a href=\"https://github.com/tecosaur/engrave-faces\">https://github.com/tecosaur/engrave-faces</a></p>",
        "id": 406042266,
        "sender_full_name": "Lucas Viana",
        "timestamp": 1701778080
    },
    {
        "content": "<p>Ah, it's also nice to have VSCode to support copying semantic highlighted Lean to LaTeX/Web.</p>",
        "id": 406057524,
        "sender_full_name": "Utensil Song",
        "timestamp": 1701783244
    }
]