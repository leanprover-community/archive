[
    {
        "content": "<p>why doesnt this work?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">LeanCourse.Common</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">C03S01</span>\n\n<span class=\"kn\">section</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">mf</span> <span class=\"o\">:</span> <span class=\"n\">Monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nnc</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Monotone</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:=</span><span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span>\n  <span class=\"n\">dsimp</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_le_mul</span>\n  <span class=\"n\">linarith</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mf</span>\n  <span class=\"n\">exact</span> <span class=\"n\">c</span>\n  <span class=\"n\">linarith</span>\n  <span class=\"n\">exact</span> <span class=\"n\">nnc</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 398940090,
        "sender_full_name": "Leni Greco",
        "timestamp": 1698427337
    },
    {
        "content": "<p>For me, it fails at</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">LeanCourse'</span>\n</code></pre></div>",
        "id": 398943170,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1698428682
    },
    {
        "content": "<p>Not sure if that answers your question</p>",
        "id": 398943210,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1698428695
    },
    {
        "content": "<p>Calling a proof <code>c</code> is not a great idea. Calling it <code>c</code> when you already have a variable called <code>c</code> is even worse. But I think that rather than answer your question (in case it's homework) I'd prefer to ask you one -- what is your regular maths proof of the result?</p>",
        "id": 398946729,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1698430170
    }
]