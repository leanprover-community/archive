[
    {
        "content": "<p>There is a <a href=\"https://leanprover-community.github.io/mathematics_in_lean/C08_Groups_and_Rings.html\">new chapter</a> in Mathematics in Lean. As usual we are interested in any corrections you could have, or any information about what is difficult to understand.</p>",
        "id": 398297076,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698156549
    },
    {
        "content": "<p>for typos and things like that, would you prefer a list or a PR?</p>",
        "id": 398335101,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698169772
    },
    {
        "content": "<p>A PR is better of course. The relevant repo is <a href=\"https://github.com/avigad/mathematics_in_lean_source\">https://github.com/avigad/mathematics_in_lean_source</a></p>",
        "id": 398335945,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698170158
    },
    {
        "content": "<p><a href=\"https://github.com/avigad/mathematics_in_lean_source/pull/142\">https://github.com/avigad/mathematics_in_lean_source/pull/142</a> for the PR about typos and style. It should be an easy review. Overall, this chapter flowed really well; I think it's great!</p>\n<p>Two things I noticed while reading:</p>\n<ol>\n<li>Early on when discussing morphisms, the proofs used <code>f.map_mul</code> or <code>f.map_inv</code> as opposed to <code>map_mul f</code> and <code>map_inv f</code>. Of course this is minor, but at the same time, it doesn't seem like these kinds of generic hom-class lemmas were discussed in the previous chapter (7.2: Hierarchies - Morphisms), so maybe the point to do it is here?</li>\n<li>Upon introducing the polynomial notation <code>R[X]</code>, I think that special emphasis should be placed on the fact that this is <em>only syntax</em>, the <code>X</code> has no meaning. It's not like <code>R[Y]</code> gives you polynomials in a different indeterminate. The same goes for <code>Polynomial.X</code> which gets abbreviated to <code>X</code> in the examples. On a cursory read, I can imagine a newcomer (especially students) being confused about the fact that <code>Y</code> doesn't work if you replace <code>X</code> everywhere.</li>\n</ol>",
        "id": 398351301,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698177112
    },
    {
        "content": "<p>Thank you very much for your patience correcting all those white space issues in particular. Your remarks are also useful. I don't have time to work on them now but I'll open an issue.</p>",
        "id": 398352328,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1698177537
    },
    {
        "content": "<p>As a slight aside, my takeaway from</p>\n<blockquote>\n<p>More generally, given an ring morphism <code>f : R →+* S</code> one can evaluate <code>P : R[X]</code> at a point<br>\nin <code>S</code> using <code>Polynomial.eval₂</code>. This one produces an actual function from <code>R[X]</code> to <code>S</code><br>\nsince it does not assume the existence of a <code>Algebra R S</code> instance, so dot notation works as<br>\nyou would expect.</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">Complex.ofReal</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→+*</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>is that we should remove <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Complex.ofReal#doc\">docs#Complex.ofReal</a> because it's just <code>algebraMap</code>!</p>",
        "id": 398354292,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698178374
    },
    {
        "content": "<p>Isn't the point that we need some <code>def</code> to apply the <code>@[coe]</code> attribute to though?</p>",
        "id": 398354782,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1698178580
    },
    {
        "content": "<p>That's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Complex.ofReal%27#doc\">docs#Complex.ofReal'</a></p>",
        "id": 398354922,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1698178645
    }
]