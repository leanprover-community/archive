[
    {
        "content": "<p>Is there a recommended font for Lean that distinguishes symbols that look alike? I've found myself getting confused between things like \\perp and \\bot or \\|| and \\parallel.</p>",
        "id": 374053037,
        "sender_full_name": "Ricardo Prado Cunha",
        "timestamp": 1689014274
    },
    {
        "content": "<p>In VSCode, you can hover over a symbol to see both what it means and how to type it</p>",
        "id": 374053929,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689014488
    },
    {
        "content": "<p>For those ambiguous cases, usually it's obvious from the context (and the other symbol would be a syntax error)</p>",
        "id": 374054005,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689014516
    },
    {
        "content": "<p>Yes, but I'd still prefer to be able to tell what a symbol is at -a-glance.</p>",
        "id": 374057305,
        "sender_full_name": "Ricardo Prado Cunha",
        "timestamp": 1689015316
    },
    {
        "content": "<p>I use JetBrains Mono. It is great for coding in general, but I have trouble distinguishing <code>vν∨</code> from each other in this font.</p>",
        "id": 374073023,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689019430
    },
    {
        "content": "<p>I think this comes up often. I recall bringing it up in my early lean days. There are many more ambiguous cases, with various dots, with the divisibility symbol etc. I don't immediately see how any fonts can help with those. Nevertheless there are intuitively obvious ASCII variants for some standard notations especially propositional stuff.</p>\n<p>In general, it appears that lean caters to mathematicians' notational needs as far as possible, even at the expense of clarity. The trade-off is that lean's extension will do what Eric says. It currently mitigates some of the confusion that is caused by the use of very similar looking symbols with its tooltips and syntax errors. This still doesn't help when one is reading the docs and trying to use notation from there. For example when starting out, the divisibility notation stumped me for a while (it is actually <code>\\|</code>).  Unfortunately, mathematical notation was not devised with the anticipation that it would have to be typed into a text editor some day. </p>\n<p>Maybe some day there will be a math specific font that renders unicode math like latex does. Or maybe there will be an additional rendering buffer in text editors that keeps track of which symbols are to be in text mode and which ones are to be in math mode, and then render everything in HTML with mathml where required: A more advanced version of  markdown editors that render their text in-place.</p>",
        "id": 374092316,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689026350
    },
    {
        "content": "<p>There is an easy solution to using notation from the docs; copy and paste it, then ask the editor how to type it.</p>",
        "id": 374093191,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689026672
    },
    {
        "content": "<p>(of course if the docs could show it directly that would be great too, but that doesn't help people using custom or outdated editor config)</p>",
        "id": 374093657,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689026865
    },
    {
        "content": "<p>After the port I think it would be good to review how many of these weird notations are needed with lean 4. I'm not an expert in this but I'd hope that maybe we have more expressivity now to not have to pick different symbols in a situation where the end user wouldn't be confused. Divisibility is a good example of this, but also for instance the <code>\\[-</code> strange brackets for commutators / lie theory.</p>",
        "id": 374094478,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1689027207
    },
    {
        "content": "<p>Some of those notations are common in mathematics right?</p>",
        "id": 374096035,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689027960
    },
    {
        "content": "<p>Yes, and we are happy to interpret what notation means from context (we sometimes even have the same letter representing two things and again just observe that it's clear which usage is intended)</p>",
        "id": 374153599,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689057814
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374092316\">said</a>:</p>\n<blockquote>\n<p>I don't immediately see how any fonts can help with those.</p>\n</blockquote>\n<p>I think it is worth giving it a try. Does anybody have a grant that could pay for a professional custom font designer?</p>\n<p>My suggestion would be to fork JetBrains Mono and fix those few problematic characters. I believe that, if we all start using this optimized font, our productivity will increase.</p>",
        "id": 374176113,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689063856
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374073023\">said</a>:</p>\n<blockquote>\n<p>I use JetBrains Mono. It is great for coding in general, but I have trouble distinguishing <code>vν∨</code> from each other in this font.</p>\n</blockquote>\n<p><a href=\"/user_uploads/3121/LFhndGiZZ1b38FJZx6QUfK6X/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/LFhndGiZZ1b38FJZx6QUfK6X/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/LFhndGiZZ1b38FJZx6QUfK6X/image.png\"></a></div>",
        "id": 374179701,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1689064719
    },
    {
        "content": "<p>I  spent a day or  two trying out random monospace fonts  once and I ended  up with JuliaMono, has served me  well so far^^</p>",
        "id": 374179783,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1689064743
    },
    {
        "content": "<p>We should continue to be using <code>∣</code> (U+2223 DIVIDES) for divide, right? If in doubt we should pick the appropriate character not just the one that's easy to type (ASCII <code>|</code>)</p>",
        "id": 374179976,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689064790
    },
    {
        "content": "<p>I think the main reason we aren't using ascii <code>|</code> is because it conflicts with various kinds of built in syntax</p>",
        "id": 374180508,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689064899
    },
    {
        "content": "<p>My suggestion for a custom Lean font would be to drop the requirement of <code>∧∨</code> being in the same height. If they are in the same height, we end up having trouble either distinguishing <code>∧^</code> or distinguishing <code>∨v</code> (most fonts I have seen had too much similarity in the latter).</p>",
        "id": 374188219,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689066515
    },
    {
        "content": "<p>In order to cause less confusion I'd rather there weren't similar but distinct characters cropping up in the source. So if a unicode character is too close to an ascii one like pipe, and can be avoided in Lean 4, I'd vote to switch to the simpler character even if it is the \"wrong\" one according to unicode (we really have a lot of symbols with the \"wrong\" meaning already so I don't see that as a regression)</p>",
        "id": 374190462,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1689067029
    },
    {
        "content": "<p>I think most of the places where we use symbols with the wrong meaning are places where there is no right symbol available (or the right symbol exists but is already used in other syntax).</p>",
        "id": 374194826,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689067835
    },
    {
        "content": "<p>I made two changes in the last few months to change things towards the right symbol; the previous use of <code>PARALLEL</code> for norm was really annoying on some platforms as the font chose a slightly slanted symbol (which is fairly reasonable for parallel, but looks very silly when used on both sides of a norm)</p>",
        "id": 374195129,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689067901
    },
    {
        "content": "<p>It would be great if syntax errors that appear on a non-word character could include a \"did you mean\" which suggests \"similar\" unicode characters (and any information available about the notation)</p>",
        "id": 374195530,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689067989
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374190462\">said</a>:</p>\n<blockquote>\n<p>In order to cause less confusion I'd rather there weren't similar but distinct characters cropping up in the source.</p>\n</blockquote>\n<p>Would you go as far as abandoning <code>∨</code> for or?</p>",
        "id": 374195762,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689068041
    },
    {
        "content": "<p>I suspect if  \"latex\" characters were rendered in bold font like some markdown editors do, this would alleviate a lot of problems</p>",
        "id": 374197589,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689068385
    },
    {
        "content": "<p>I wouldn't complain. Writing <code>∨</code> instead of <code>or</code> to save one character seems to be pure obfuscation.</p>",
        "id": 374197599,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1689068386
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 374197770,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689068416
    },
    {
        "content": "<p>Not only bold, but slightly larger font size. I have never had trouble with markdown inline math.</p>",
        "id": 374198193,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689068514
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374197599\">said</a>:</p>\n<blockquote>\n<p>I wouldn't complain. Writing <code>∨</code> instead of <code>or</code> to save one character seems to be pure obfuscation.</p>\n</blockquote>\n<p>Assuming you replace <code>∨</code> by <code>or</code> but nothing else changes, it would be weird to have <code>Or</code> as a prefix operator and <code>or</code> as an infix operator.</p>",
        "id": 374198527,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689068587
    },
    {
        "content": "<p>The comment above is about Lean 4. In Lean 3 <code>or</code> was the prefix operator, which I used sometimes.</p>",
        "id": 374198896,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689068675
    },
    {
        "content": "<p>My point is that, for the sake of readability, we should keep infix operators written in non-letter characters.</p>",
        "id": 374199865,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689068842
    },
    {
        "content": "<p>It seems unlikely to me that disjunctions will ever be anything other than <code>∨</code>, but Lean for sake of readability does give syntax highlighting:</p>\n<p><a href=\"/user_uploads/3121/FT91RyPw6CID8kjga6WgqL31/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/FT91RyPw6CID8kjga6WgqL31/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/FT91RyPw6CID8kjga6WgqL31/image.png\"></a></div><p>Python's <code>or</code> and <code>and</code> operators are readable to people who use Python, so I feel like we need a Wikipedia-style \"[whose?]\" tag on that \"for sake of readability\" <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>\n<p>One could also argue that having <code>Or</code> be the type itself and <code>or</code> be the operator has nicer parallelism than <code>Or</code> and <code>∨</code>.</p>",
        "id": 374201561,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1689069189
    },
    {
        "content": "<p>Parentheses work differently in Python. You wouldn't encounter</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">foo</span> <span class=\"n\">bar</span> <span class=\"n\">or</span> <span class=\"n\">foo</span> <span class=\"n\">baz</span>\n</code></pre></div>\n<p>in Python, but we want to write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">foo</span> <span class=\"n\">bar</span> <span class=\"bp\">∨</span> <span class=\"n\">foo</span> <span class=\"n\">baz</span>\n</code></pre></div>\n<p>in Lean.</p>\n<p>Therefore, we deal with infix operators differently than Pythoners.<br>\nMy point is that <code>∨</code> instead of <code>or</code> is not \"to save one character\" but to make the operator clearly non-alphanumeric.</p>",
        "id": 374202955,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689069486
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 374205341,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689069997
    },
    {
        "content": "<p>How feasible is it to change the way specific characters are rendered within the extension? That is, maintain a table of symbols that are math. If found, render the character  with a slightly different font style.</p>",
        "id": 374207132,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689070359
    },
    {
        "content": "<p>EDIT: the zulip android app seems to be double sending my messages while showing me a loading bar.</p>",
        "id": 374207256,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689070391
    },
    {
        "content": "<blockquote>\n<p>so I feel like we need a Wikipedia-style \"[whose?]\" tag on that \"for sake of readability</p>\n</blockquote>\n<p><a href=\"https://www.vidarholen.net/~vidar/An_Empirical_Investigation_into_Programming_Language_Syntax.pdf\">https://www.vidarholen.net/~vidar/An_Empirical_Investigation_into_Programming_Language_Syntax.pdf</a> FWIW is a nice paper which investigated some similar things, albeit for boolean <code>or</code> they did not compare <code>∨</code> which wasn't part of the alternatives there.</p>\n<p>The two groups were \"programmers\" and \"non-programmers\", and in particular not \"mathematicians\" of course, and also the paper is old, but it's cute at least to skim I think still, even if the results are probably not useful to answer this question (though hey maybe folks here who have undergraduate math students can torture them into repeating the experiment).</p>",
        "id": 374273081,
        "sender_full_name": "Julian Berman",
        "timestamp": 1689083224
    },
    {
        "content": "<p>On the terms of fonts, I think the still recommended one for most cases is \"DejaVu Sans Mono\", especially in the infoview</p>",
        "id": 374274068,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689083418
    },
    {
        "content": "<p>It doesn't have the clarity with all symbols but it is properly monospaced for the vast majority of them</p>",
        "id": 374274149,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689083433
    },
    {
        "content": "<p>I'm not sure if it's still an issue in Lean4, but due to how the widgets are drawn in Lean3, the lack of monospacing on some more rare characters can really cause ugly looking tactic states</p>",
        "id": 374274262,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689083459
    },
    {
        "content": "<p>stuff like this: <br>\n<a href=\"/user_uploads/3121/XGnlZeoMDdCFt1NEjgWs7V_6/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/XGnlZeoMDdCFt1NEjgWs7V_6/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/XGnlZeoMDdCFt1NEjgWs7V_6/image.png\"></a></div>",
        "id": 374274655,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1689083531
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374274068\">said</a>:</p>\n<blockquote>\n<p>On the terms of fonts, I think the still recommended one for most cases is \"DejaVu Sans Mono\", especially in the infoview</p>\n</blockquote>\n<p>This one also has the advantage of being easy to use in LaTeX</p>",
        "id": 374288056,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689085906
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374179783\">said</a>:</p>\n<blockquote>\n<p>I  spent a day or  two trying out random monospace fonts  once and I ended  up with JuliaMono, has served me  well so far^^</p>\n</blockquote>\n<p>I just tried their demo. My ability to distinguish between <code>∨</code> and <code>v</code> in JuliaMono is even worse than in other fonts.</p>",
        "id": 374334506,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689094675
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374274068\">said</a>:</p>\n<blockquote>\n<p>On the terms of fonts, I think the still recommended one for most cases is \"DejaVu Sans Mono\", especially in the infoview</p>\n</blockquote>\n<p>Their demo does not show me <code>∨</code> at all. Can you please send a screenshot snippet with <code>∨v</code> in DejaVu Sans Mono?</p>",
        "id": 374335120,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689094828
    },
    {
        "content": "<p>It's possible that Eric's editor is going for a fallback font if DejaVu Sans Mono doesn't have it, that's one of the main things I avoided with Julia because they actually have lots of unicdoe characters monospaced while lots of other fonts do fallbacks to non monospace stuff</p>",
        "id": 374335702,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1689094988
    },
    {
        "content": "<p>I think usually what happens is the font is just missing the characters altogether, and then the OS/application picks another font to fallback to</p>",
        "id": 374336127,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689095088
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374201561\">said</a>:</p>\n<blockquote>\n<p>It seems unlikely to me that disjunctions will ever be anything other than <code>∨</code></p>\n</blockquote>\n<p>I like <code>∨</code> for disjunctions. I had been heavily using <code>∨</code> and <code>∧</code> in pen-and-paper MathematiCS before I stumbled across Lean (even before Lean was created). However, the visual similarity between <code>∨</code> and <code>v</code> on computer screen drives me crazy. As for <code>ν</code> (i.e., \\nu), I don't care; I already decided that I will never use that character.</p>",
        "id": 374337001,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689095303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"417654\">@Martin Dvořák</span> You could always just use the ASCII art for disjunction and conjunction (i.e., <code>\\/</code> and <code>/\\</code>).</p>",
        "id": 374855728,
        "sender_full_name": "Mac Malone",
        "timestamp": 1689239726
    },
    {
        "content": "<p>Which, if a font supports ligatures, can look quite good (and clearly distinct from v or V due to their width).</p>",
        "id": 374856201,
        "sender_full_name": "Mac Malone",
        "timestamp": 1689239826
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374855728\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> You could always just use the ASCII art for disjunction and conjunction (i.e., <code>\\/</code> and <code>/\\</code>).</p>\n</blockquote>\n<p>For <code>\\/</code> and <code>/\\</code> to make sense, we all would have to switch to it, which won't happen.</p>",
        "id": 374862785,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689241229
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374862785\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/374855728\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> You could always just use the ASCII art for disjunction and conjunction (i.e., <code>\\/</code> and <code>/\\</code>).</p>\n</blockquote>\n<p>For <code>\\/</code> and <code>/\\</code> to make sense, we all would have to switch to it, which won't happen.</p>\n</blockquote>\n<p>It is annoying to type these in Coq, and gives em a headache when reading it. Typing is annoying because when typing fast it is very easy to mix up the order of <code>/</code> and <code>\\</code> and then you spend some time wondering where it all went wrong.<br>\n (I know coq has some editor support for unicode, but it is very patchy as far as coq-lsp goes).</p>",
        "id": 374916507,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1689251990
    },
    {
        "content": "<p>My position on this is still the same. I want to change font. I don't want to change Lean.</p>",
        "id": 375062499,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689282568
    },
    {
        "content": "<p>A trick that I did was to install some extension in VS Code that can change the colors of some characters. There are plenty of those extensions. Then I made <code>∨</code> green and <code>∧</code> red</p>",
        "id": 375063268,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1689282825
    },
    {
        "content": "<p>Is it even necessary to use a monospace font? This will not mess up the alignment if all alignments happen at the beginning of the row (with only spaces at the front). And differentiating different symbols is much easier with non-monospace fonts.</p>",
        "id": 378332475,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1690258839
    },
    {
        "content": "<p>Sometimes I think about inventing a language where each character is just one of the possible combinations of on and off black pixels in a m x n rectangle.<br>\n<a href=\"/user_uploads/3121/n4lPX4ysymQavU6D5x3rDnLj/Screenshot-from-2023-07-24-21-48-43.png\">Screenshot-from-2023-07-24-21-48-43.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/n4lPX4ysymQavU6D5x3rDnLj/Screenshot-from-2023-07-24-21-48-43.png\" title=\"Screenshot-from-2023-07-24-21-48-43.png\"><img src=\"/user_uploads/3121/n4lPX4ysymQavU6D5x3rDnLj/Screenshot-from-2023-07-24-21-48-43.png\"></a></div>",
        "id": 378336289,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1690260773
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 378336928,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1690261079
    },
    {
        "content": "<p>I find this an interesting topic because I spent many years trying to develop a simple font (not specifically for math though).</p>",
        "id": 378340536,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1690262409
    },
    {
        "content": "<p>it's called QR codes</p>",
        "id": 378341415,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690262691
    },
    {
        "content": "<p>oh, right.</p>",
        "id": 378341602,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1690262780
    },
    {
        "content": "<p>The font I was working on was not the block thing though, it was english ascii.</p>",
        "id": 378341732,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1690262833
    },
    {
        "content": "<p><a href=\"https://github.com/pthomas505/fonts\">https://github.com/pthomas505/fonts</a></p>",
        "id": 378341771,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1690262860
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20font/near/378341415\">said</a>:</p>\n<blockquote>\n<p>it's called QR codes</p>\n</blockquote>\n<p>In my defense, each character would be a \"QR code\", so not exactly the same.</p>",
        "id": 378383902,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1690274528
    },
    {
        "content": "<p>It's called Braille would be closer. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 378385737,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1690274903
    }
]