[
    {
        "content": "<p>Is it possible to make a linter or code formatter which enforces (some of) mathlib's style, for instance adding braces so that there's only one goal at a time in a completed proof?</p>",
        "id": 200823596,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592152593
    },
    {
        "content": "<p>I could add it to nng and force mathematicians to code properly :-)</p>",
        "id": 200823677,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592152764
    },
    {
        "content": "<p>Actually what I want is kind of the opposite of that - when I'm writing lean hastily I somehow avoid all indentation and braces, so it'd be great if there was some magical button I could press which auto-formats the code</p>",
        "id": 200823755,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592152887
    },
    {
        "content": "<p>Such things exist in other domains, see e.g. <a href=\"https://black.readthedocs.io/en/stable/\">black</a>, an auto-formatter for python. I don't know how hard they are to write.</p>",
        "id": 200824351,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592153890
    },
    {
        "content": "<p>See also <a href=\"https://github.com/tweag/ormolu\">ormolu</a> for Haskell</p>",
        "id": 200824384,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592153952
    },
    {
        "content": "<p>I remember some discussions about this (but not where they took place, sadly). My takeaway was that this would become much easier in Lean 4.</p>",
        "id": 200824558,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1592154173
    },
    {
        "content": "<p>It's very hard to write something that's aware of both Lean 3 semantics (e.g. number of goals at a given line) and input syntax. I think the closest things that exist right now are format_lean (or am I mixing names here?) that query a Lean server for information at each line. It would take a lot of work to turn this into what you're after, but I think it's the only approach, Lean 3 metaprograms can't really understand input syntax. As Bryan says, I understand the Lean 4 picture will be different.</p>",
        "id": 200824858,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592154630
    },
    {
        "content": "<p>It seems like there is a linter on GitHub, isn't it?</p>",
        "id": 263539887,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638512094
    },
    {
        "content": "<p>How can I download that script and run it on my side? I'm getting lots of errors but idk in what lines they are</p>",
        "id": 263539904,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638512114
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"459227\">@Violeta Hernández</span> There are two types of linters. If you have a copy of mathlib locally, then you can run them as follows:</p>\n<ul>\n<li>add <code>#lint</code> somewhere in a Lean file. It will lint all the declarations above it, finding things like unused arguments, missing docstrings, bad simp-lemmas, etc.</li>\n<li>run <code>./scripts/lint-style.sh</code></li>\n</ul>\n<p>About <code>#lint</code> there is one little catch. Some issues only show up once you look at multiple files together. That is why CI runs <code>#lint</code> in a new file that imports all of mathlib.</p>",
        "id": 263540683,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638513042
    },
    {
        "content": "<p>I'm talking about the second one</p>",
        "id": 263541125,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638513519
    },
    {
        "content": "<p>Oh, I hadn't realized mathlib came bundled with a <code>scripts</code> folder</p>",
        "id": 263541134,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638513542
    },
    {
        "content": "<p>I think that pretty much resolves it, thanks!</p>",
        "id": 263541157,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1638513596
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459227\">Violeta Hernández</span> has marked this topic as resolved.</p>",
        "id": 263541160,
        "sender_full_name": "Notification Bot",
        "timestamp": 1638513599
    }
]