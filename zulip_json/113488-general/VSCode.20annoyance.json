[
    {
        "content": "<p>I noticed when I press the keys <code>\\</code>, <code>r</code> and space, sometimes the space is inserted after the cursor, so I'm left with <code>→| </code> instead of <code>→ |</code>. This is getting annoying when I type fast. Is this a known problem? What might be the cause, and how can I fix it?</p>",
        "id": 327515914,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1676285027
    },
    {
        "content": "<p>Press tab if you want to type just the symbol.</p>",
        "id": 327516054,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676285057
    },
    {
        "content": "<p>Presumably Trebor also wants the space.</p>",
        "id": 327516438,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676285169
    },
    {
        "content": "<p>Then I cannot help. On my computer, the keypress sequence <code>\\r </code> always leaves me with <code>→ |</code> afair.</p>",
        "id": 327516792,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676285287
    },
    {
        "content": "<p>I can circumvent the problem if I type <code>\\</code> <code>r</code> <code>tab</code> and then space. It's just a little annoying, and certainly a bug.</p>",
        "id": 327517050,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1676285359
    },
    {
        "content": "<p>Yes, it sounds annoying.</p>",
        "id": 327517282,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1676285415
    },
    {
        "content": "<p>Could it be that your tab is set to print one or two spaces, depending on whether you are on an even/odd column?  Like Martin, I get pretty consistent results with typing <code>\\r </code>, in that the space seems to <em>always</em> be there, but seem to get a dependency on position with <code>tab</code> (that I usually do not use).<br>\nEDIT: sorry, I see that you use <code>space</code> already, I misunderstood.</p>",
        "id": 327519051,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1676286050
    },
    {
        "content": "<p>Is it possible some other input method is competing to process your input?</p>",
        "id": 327519392,
        "sender_full_name": "Reid Barton",
        "timestamp": 1676286151
    },
    {
        "content": "<p>I confirm this bug. This is a new bug. I've been experiencing it for the past 3 weeks or so</p>",
        "id": 327539666,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1676292663
    },
    {
        "content": "<p>Is this for lean 3 or lean 4?</p>",
        "id": 327540580,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1676292926
    },
    {
        "content": "<p>I've noticed it for Lean4 for various greek letters</p>",
        "id": 327541541,
        "sender_full_name": "Logan Murphy",
        "timestamp": 1676293208
    },
    {
        "content": "<p>I am not sure if this is what you are experiencing, but in remote setups this is a <a href=\"https://github.com/leanprover/vscode-lean4/issues/241\">known issue</a>. Latency on a local setup should not be bad enough to trigger it, but in general yes, the abbreviations provider could use a refactoring.</p>",
        "id": 327689152,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1676347916
    },
    {
        "content": "<p>I have an attempt for a fix: <a href=\"https://github.com/leanprover/vscode-lean/compare/master...ddrone:vscode-lean:replacement-fix\">https://github.com/leanprover/vscode-lean/compare/master...ddrone:vscode-lean:replacement-fix</a><br>\nThis unfortunately does not handle correctly the case of \"abbreviations\" like <code>\\-</code> that expand into strings that are shorter than the original character sequence. I don't really have enough context about VSCode plugin development in order to complete it; but if someone has more experience and will be willing to walk me through the existing code I can try to do another attempt.</p>",
        "id": 338007128,
        "sender_full_name": "Andrew Shulaev",
        "timestamp": 1677333853
    },
    {
        "content": "<p>I'm now running into this constantly as well.  From what I can tell, it appeared after a recent vscode upgrade.</p>",
        "id": 339461852,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1677885329
    },
    {
        "content": "<p>(I can repro the issue with both local and \"remote\" (container) connections.)</p>",
        "id": 339461980,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1677885384
    },
    {
        "content": "<p>Here's a cue: I use Patrick's trick and my escaping key is <code>,</code>. And I can reproduce the issue even without any unicode substitution taking place. Hitting <code>,</code> and then spacebar does this weird behavior of putting the cursor after the comma but also inputting an empty space after the caret:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>abcd|.\n    ^ caret here\n</code></pre></div>\n<p>After the bug:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>      v empty space here\nabcd,| .\n     ^ caret here\n</code></pre></div>",
        "id": 339462682,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1677885745
    },
    {
        "content": "<p>So I haven't been able to get a proper fix, but I did find a workaround that leads to less annoying experience: if you're used to type <code>\\lam</code> and then press Space to get annoyed at the fact that the space character is going to appear on the right side of the cursor, you can change the keyboard shortcut of <code>lean.input.convert</code> to Space. Now the Space input is going to be considered as triggering the explicit action of replacement, and the space character would not appear at all, and you'll have to press it twice. Still annoying, but IMO less annoying than the status quo.</p>",
        "id": 346669156,
        "sender_full_name": "Andrew Shulaev",
        "timestamp": 1680553109
    }
]