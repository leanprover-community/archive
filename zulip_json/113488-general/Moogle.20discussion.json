[
    {
        "content": "<p>It does ok on my go to example for this sort of thing:</p>\n<blockquote>\n<p>the min of a list is less than the max of a list</p>\n</blockquote>\n<p>I like this example since it isn’t exactly true as stated and the true version isn’t in the library but the relevant lemmas are.</p>",
        "id": 399588457,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698780232
    },
    {
        "content": "<p>Well it can’t find anything good for “the minimum of a list is in the list”.  Still not true without assumptions but is the true version not a theorem in mathlib or Std?</p>",
        "id": 399588914,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698780432
    },
    {
        "content": "<p>Hey y'all, we just <a href=\"#narrow/stream/113486-announce/topic/Moogle/near/399587531\">announced</a> Moogle (<a href=\"https://moogle.ai\">https://moogle.ai</a>), a semantic search engine for mathlib. It lets you find theorems using natural language, and was built with some of the same techniques we used to create Morph Prover v0 7B.  We hope this makes it easier for people with math knowledge but not mathlib knowledge to navigate mathlib.</p>\n<p>We're excited to improve it based on your feedback!</p>\n<p><a href=\"/user_uploads/3121/Jyj3gFCqGS1Ra--knej_Tme4/moogle-GIF.gif\">moogle-GIF.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Jyj3gFCqGS1Ra--knej_Tme4/moogle-GIF.gif\" title=\"moogle-GIF.gif\"><img src=\"/user_uploads/3121/Jyj3gFCqGS1Ra--knej_Tme4/moogle-GIF.gif\"></a></div>",
        "id": 399589180,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698780553
    },
    {
        "content": "<p>Oh, I found it.  It was the 5th suggestion.</p>",
        "id": 399589192,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698780561
    },
    {
        "content": "<p>make sure to give it a thumbs up! its rank will move up as we improve Moogle</p>",
        "id": 399589275,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698780603
    },
    {
        "content": "<p>4 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113486\" href=\"/#narrow/stream/113486-announce/topic/Moogle\">#announce &gt; Moogle</a> by <span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span>.</p>",
        "id": 399589356,
        "sender_full_name": "Notification Bot",
        "timestamp": 1698780629
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span> I saw you created this topic so moved discussion here -- I can try to undo it if that wasn't your intent!)</p>",
        "id": 399589492,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1698780708
    },
    {
        "content": "<p>all good <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 399589600,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698780755
    },
    {
        "content": "<p>You may also want to link to the docs# as well as the code.  The docs provide useful meta data like instances and they allow click through navigation.</p>",
        "id": 399590547,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698781151
    },
    {
        "content": "<p>Maybe you can even get the docs to have “search Moogle” along with “Search” and “Google site search” in the top right corner.</p>",
        "id": 399590740,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698781235
    },
    {
        "content": "<p>that would be great! i think a Zulip bot would be helpful as well, especially in new-members, where Moogle has already <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20cofactor.20expansion/near/399062128\">appeared in the wild</a>.</p>",
        "id": 399591721,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698781691
    },
    {
        "content": "<p>I’m not sure there is really value in showing the proofs of theorems and lemmas.  They sort of clutter the output.  Also in some cases the output is messed up and gets cut off.</p>",
        "id": 399595652,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698783489
    },
    {
        "content": "<p>For example the second result here: <a href=\"https://www.moogle.ai/search/raw?q=A%20compact%20set%20is%20closed\">https://www.moogle.ai/search/raw?q=A%20compact%20set%20is%20closed</a></p>",
        "id": 399595739,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698783538
    },
    {
        "content": "<p>No good results for “a + b = 0 -&gt; a = -b”.  I remember it is a theorem, but it might be stated for (multiplicative) groups in the code. I bet you are going to have a big problem with theorems that are stated more generally than the user is expecting.</p>",
        "id": 399597803,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698784421
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/Js-3pHQHGkodXHIhGyOvGymK/image.png\">image.png</a><br>\nlooks like a bug</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Js-3pHQHGkodXHIhGyOvGymK/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/Js-3pHQHGkodXHIhGyOvGymK/image.png\"></a></div>",
        "id": 399598588,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698784730
    },
    {
        "content": "<p>Declaration <code>mul_eq_one_iff_inv_eq</code> doesn't appear among the results.</p>",
        "id": 399598632,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698784749
    },
    {
        "content": "<p><code>mul_eq_one_iff_inv_eq₀</code> is the 2nd result but <code>add_eq_zero_iff_eq_neg</code> is the 8th.</p>",
        "id": 399599372,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698785032
    },
    {
        "content": "<p>thanks for flagging! we will investigate</p>",
        "id": 399599524,
        "sender_full_name": "Bentley Long",
        "timestamp": 1698785099
    },
    {
        "content": "<p>This one is probably too challenging but I'd expect a good semantic search engine to find <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=unitInterval.qRight#doc\">docs#unitInterval.qRight</a> by searching <a href=\"https://www.moogle.ai/search/raw?q=homotopy%20between%20two%20continuous%20maps%20from%20the%20unit%20interval%20to%20itself\">https://www.moogle.ai/search/raw?q=homotopy%20between%20two%20continuous%20maps%20from%20the%20unit%20interval%20to%20itself</a> even though the word \"homotopy\" doesn't appear in the docstring ... Would certainly requires some mathematical background knowledge.</p>",
        "id": 399599919,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698785281
    },
    {
        "content": "<p>feedback like this is exactly what we're looking for <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 399600707,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698785573
    },
    {
        "content": "<p>it can be a bit wording sensitive and this can be improved by continuous training over time - for example the definition you linked shows up in the results with most results being aboug homotopies if you rephrase the query slightly</p>\n<p><a href=\"https://www.moogle.ai/search/raw?q=space%20of%20homotopies%20between%20two%20continuous%20maps%20from%20the%20unit%20interval%20to%20itself\">https://www.moogle.ai/search/raw?q=space%20of%20homotopies%20between%20two%20continuous%20maps%20from%20the%20unit%20interval%20to%20itself</a></p>",
        "id": 399600807,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698785618
    },
    {
        "content": "<p>Technically it's a single homotopy though (a homotopy between two continuous maps from X to Y is a continuous map of the form <code>I x X -&gt; Y</code> where <code>I</code> is the unit interval, so if both <code>X</code> and <code>Y</code> are <code>I</code> then it's a map <code>I x I -&gt; I</code>. However <code>qRight</code> doesn't actually contain the proof of continuity, so it's good that Moogle finds continuous_qRight. Maybe \"space\" works better because the declaration is in the file HSpace? Also note <code>qRight</code> doesn't specify which two maps it's a homotopy between (unlike <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousMap.Homotopy#doc\">docs#ContinuousMap.Homotopy</a>), so maybe that's why it can't be called a homotopy proper.</p>",
        "id": 399601518,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698785921
    },
    {
        "content": "<p>Very impressive and very cool!</p>",
        "id": 399602636,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1698786326
    },
    {
        "content": "<p>Does Moogle have a current or planned API? And/or relatedly are there thoughts about what editor integration looks like?</p>",
        "id": 399608768,
        "sender_full_name": "Julian Berman",
        "timestamp": 1698788291
    },
    {
        "content": "<p>Can one just paste a goal in Moogle and expect it to find the relevant theorem (sort of like gptf could do especially if given the prompt “exact” or “apply”)?  So far I tried some simple goals and it wasn’t so good.</p>",
        "id": 399609966,
        "sender_full_name": "Jason Rute",
        "timestamp": 1698788935
    },
    {
        "content": "<p>Hmm, it failed on the first thing I tried: didn't find <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=intervalIntegral.integral_mul_deriv_eq_deriv_mul#doc\">docs#intervalIntegral.integral_mul_deriv_eq_deriv_mul</a> on a search for \"integration by parts\", although this appears in a section header right above it and the conclusion of the theorem is pretty close to the traditional paper version of the theorem.  (This example was suggested by <span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span> yesterday.)</p>",
        "id": 399610364,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1698789187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399609966\">said</a>:</p>\n<blockquote>\n<p>Can one just paste a goal in Moogle and expect it to find the relevant theorem (sort of like gptf could do especially if given the prompt “exact” or “apply”)?  So far I tried some simple goals and it wasn’t so good.</p>\n</blockquote>\n<p>i wouldn't expect it to do well at this moment,  but doing goal -&gt; premise retrieval is on the roadmap!</p>",
        "id": 399612478,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698790206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399608768\">said</a>:</p>\n<blockquote>\n<p>Does Moogle have a current or planned API? And/or relatedly are there thoughts about what editor integration looks like?</p>\n</blockquote>\n<p>we will soon make the search available in VSCode with search context informed by open editor windows</p>",
        "id": 399612697,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698790350
    },
    {
        "content": "<p>Very nice! Another case to have a look at for fine tuning: on \"Cauchy-Schwarz\" the first two hits are auxilliary lemmas, and the main result I would have expected (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=inner_mul_inner_self_le#doc\">docs#inner_mul_inner_self_le</a>, which is right below the first hit in the code) actually shows up pretty far down the list.</p>",
        "id": 399613039,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1698790558
    },
    {
        "content": "<p>(Admittedly this might be tricky to fix, since the auxilliary lemma actually has <code>cauchy_schwarz</code> in the lemma name whereas the main one doesn't.)</p>",
        "id": 399613165,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1698790630
    },
    {
        "content": "<p>please thumbs-up the correct hit! this will help us improve the model</p>",
        "id": 399613598,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698790867
    },
    {
        "content": "<p>Moogle seems to only search in Mathli, missing stuff in Lean core and Std, such as \"Addition on natural numbers is commutative\".</p>",
        "id": 399644242,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1698807344
    },
    {
        "content": "<p>Yes, including results from Std would be very very useful!</p>",
        "id": 399645886,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1698808152
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116045\">Jesse Michael Han</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399612697\">said</a>:</p>\n<blockquote>\n<p>we will soon make the search available in VSCode with search context informed by open editor windows</p>\n</blockquote>\n<p>I would expect that the local UI/UX considerations for such a search would be pretty much the same for searching using moogle and Loogle. Maybe there could be a single search tool that can query either service? Happy to adjust the Loogle API if it helps.</p>",
        "id": 399695032,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1698833692
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399695032\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116045\">Jesse Michael Han</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399612697\">said</a>:</p>\n<blockquote>\n<p>we will soon make the search available in VSCode with search context informed by open editor windows</p>\n</blockquote>\n<p>I would expect that the local UI/UX considerations for such a search would be pretty much the same for searching using moogle and Loogle. Maybe there could be a single search tool that can query either service? Happy to adjust the Loogle API if it helps.</p>\n</blockquote>\n<p>Up to a point yes. But most loogle searches are likely to be one-liners whereas moogle handles much larger queries and produces larger results.</p>",
        "id": 399698243,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698834706
    },
    {
        "content": "<p>Idea: Moogle could have an escaping key (such as <code>!</code>) to fallback to Loogle when the user has a clearer idea about what to search and is less reliant on mysterious inner mechanics of AI</p>\n<p>Idea2: Loogle could be used as a way to enhance the data that Moogle consumes</p>\n<p>In general, I agree with the idea of having a single, standard, search tool entry point. I think that's easier on the community (and also on the developers)</p>",
        "id": 399704550,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1698837156
    },
    {
        "content": "<p>I am writing the loogle part, but that's because I already have access to loogle's API. I don't see any easy integration of moogle other than as a side panel. Maybe a lean command #moogle is better than a separate GUI element for this.</p>",
        "id": 399705776,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1698837787
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399601518\">said</a>:</p>\n<blockquote>\n<p>Technically it's a single homotopy though (a homotopy between two continuous maps from X to Y is a continuous map of the form <code>I x X -&gt; Y</code> where <code>I</code> is the unit interval, so if both <code>X</code> and <code>Y</code> are <code>I</code> then it's a map <code>I x I -&gt; I</code>. However <code>qRight</code> doesn't actually contain the proof of continuity, so it's good that Moogle finds continuous_qRight. Maybe \"space\" works better because the declaration is in the file HSpace? Also note <code>qRight</code> doesn't specify which two maps it's a homotopy between (unlike <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousMap.Homotopy#doc\">docs#ContinuousMap.Homotopy</a>), so maybe that's why it can't be called a homotopy proper.</p>\n</blockquote>\n<p>Actually, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Path.Homotopy.reparam#doc\">docs#Path.Homotopy.reparam</a> is a better match that Moogle also doesn't find. It's an actual Homotopy, and even though a Path is a continuous map from <code>I</code> to an arbitrary space <code>X</code> that is not necessarily <code>I</code>, this particular definition is obtained by composing a homotopy between two continuous maps <code>I -&gt; I</code> with a path <code>I -&gt; X</code>, so it's surely quite relevant.</p>",
        "id": 399758148,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698855737
    },
    {
        "content": "<p>Probably also a bug: sometimes Moogle gets the namespace but sometimes not<br>\n<a href=\"/user_uploads/3121/mxf3Z4Kw90nxx2KH0LuYomtl/image.png\">image.png</a><br>\n<code>image_univ_equiv</code> is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.image_univ_equiv#doc\">docs#Finset.image_univ_equiv</a><br>\n<a href=\"https://www.moogle.ai/search/raw?q=Which%20lemmas%20could%20help%20me%20prove%3A%0A%60%60%60%0Atheorem%20bijective_iff_map_univ_eq_univ%20%7B%CE%B1%20%CE%B2%7D%20%5BFintype%20%CE%B1%5D%20%5BFintype%20%CE%B2%5D%20(f%20%3A%20%CE%B1%20%E2%86%92%20%CE%B2)%20%3A%0A%20%20%20%20Function.Bijective%20f%20%E2%86%94%20map%20f%20(Finset.univ%20%3A%20Finset%20%CE%B1).val%20%3D%20univ.val%20%3A%3D%20by%20sorry%0A%60%60%60\">query</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/mxf3Z4Kw90nxx2KH0LuYomtl/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/mxf3Z4Kw90nxx2KH0LuYomtl/image.png\"></a></div>",
        "id": 399763189,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1698857580
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399695032\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116045\">Jesse Michael Han</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399612697\">said</a>:</p>\n<blockquote>\n<p>we will soon make the search available in VSCode with search context informed by open editor windows</p>\n</blockquote>\n<p>I would expect that the local UI/UX considerations for such a search would be pretty much the same for searching using moogle and Loogle. Maybe there could be a single search tool that can query either service? Happy to adjust the Loogle API if it helps.</p>\n</blockquote>\n<p>yes, that would be great. one idea could be to use <code>#find</code> syntax as a structured query language on top of semantic search results returned by Moogle. so in this combined API, a list of allowed declaration ids are returned by Loogle in response to an exact substring or unification-based search query, and this is used to filter results from Moogle.</p>",
        "id": 399822941,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1698884164
    },
    {
        "content": "<p>Jump to definition for terms in the returned declarations would be nice.</p>",
        "id": 399975614,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1698941171
    },
    {
        "content": "<p>Building this now! Coming soon</p>",
        "id": 399995741,
        "sender_full_name": "John Yang",
        "timestamp": 1698948048
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span> : My loogle extension is out there (as a preview to see what is preferred UI-wise). Would it be possible to integrate moogle into it by API access?</p>",
        "id": 400402938,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699198186
    },
    {
        "content": "<p>I think this is not the highest priority. Rather than asking for custom work from the moogle people, how about we see if the loogle extension is viable and useful first?</p>",
        "id": 400423870,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1699219849
    },
    {
        "content": "<p>I am only asking if moogle allows api access already, and if I may personally experiment with it for integration. But yes, let's see if the extension is useful for now.</p>",
        "id": 400433780,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699230113
    },
    {
        "content": "<p>Great stuff. I definitely like the no-nonsense UI (no chatbot, no big paragraphs of human text). Besides, figuring out which theorem is where is always a chore, so I think this will be pretty helpful.</p>\n<p>How does this work? Are you doing some kind of similarity search on some vector representations?</p>",
        "id": 400549230,
        "sender_full_name": "Agnishom Chattopadhyay",
        "timestamp": 1699282810
    },
    {
        "content": "<p>Really cool! :D I noticed that if I searched for simply “Tensor product”, I got <code>TensorProduct.tensorTensorTensorComm</code>, <code>TensorProduct.tensorTensorTensorComm_symm</code>, and <code>TensorProduct.tensorTensorTensorApply</code> as the first results—presumably because of how <code>Tensor</code>-y they are.</p>\n<p>Are the thumbs up/down appropriate here? I don’t want to suggest that they’re not related to the tensor product, but I do want to indicate that they’re not what should show up if you <em>just</em> search “Tensor product”!</p>",
        "id": 400690448,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1699346467
    },
    {
        "content": "<p>absolutely, for a given query you should thumbs up a result if you think it should be higher ranked (resp. thumbs down, lower ranked)</p>",
        "id": 400808693,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1699387561
    },
    {
        "content": "<p>for example, for a basic query like \"tensor product\" it ought to pull up the fundamental definition instead of some API lemmas so feedback like that is definitely helpful!</p>",
        "id": 400808881,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1699387649
    },
    {
        "content": "<p>As I suggested last round, I do think part of Lean Core and Std should be covered. For example, try: \"Addition is commutative for natural numbers.\" (it cannot find <code>Nat.add_comm</code> which is in Lean core).</p>",
        "id": 400845377,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1699405988
    },
    {
        "content": "<p>This has been fixed, thank you for the feedback!</p>\n<p><a href=\"/user_uploads/3121/cezui3X_rjT_YnoC-dmB9UQX/image-8.png\">image-8.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/cezui3X_rjT_YnoC-dmB9UQX/image-8.png\" title=\"image-8.png\"><img src=\"/user_uploads/3121/cezui3X_rjT_YnoC-dmB9UQX/image-8.png\"></a></div>",
        "id": 401012810,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1699473051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116045\">Jesse Michael Han</span> <a href=\"#narrow/stream/113486-announce/topic/Moogle/near/401012810\">said</a>:</p>\n<blockquote>\n<p>This has been fixed, thank you for the feedback!</p>\n<p><a href=\"/user_uploads/3121/cezui3X_rjT_YnoC-dmB9UQX/image-8.png\">image-8.png</a></p>\n</blockquote>\n<p>Thanks. This is a great tool.</p>",
        "id": 401127711,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1699525651
    },
    {
        "content": "<p>3 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113486\" href=\"/#narrow/stream/113486-announce/topic/Moogle\">#announce &gt; Moogle</a> by <span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span>.</p>",
        "id": 401228229,
        "sender_full_name": "Notification Bot",
        "timestamp": 1699560455
    },
    {
        "content": "<p>I can't seem to select the search bar at <a href=\"https://moogle.ai\">https://moogle.ai</a> to type anything in. Is it just me?</p>",
        "id": 405012495,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1701316577
    },
    {
        "content": "<p>same here</p>",
        "id": 405015282,
        "sender_full_name": "David Renshaw",
        "timestamp": 1701317268
    },
    {
        "content": "<p>It's working for me. (Chrome on mac.)</p>",
        "id": 405023222,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1701319659
    },
    {
        "content": "<p>Firefox on Linux for me</p>",
        "id": 405023887,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1701319873
    },
    {
        "content": "<p>Chromium on my system does show a cursor. So I guess the site isn't working with Firefox</p>",
        "id": 405024509,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1701320067
    },
    {
        "content": "<p>investigating --- we'll get a fix turned around asap, thanks for flagging!</p>",
        "id": 405033225,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1701322983
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"500038\">Timo Carlin-Burns</span> <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/405012495\">said</a>:</p>\n<blockquote>\n<p>I can't seem to select the search bar at <a href=\"https://moogle.ai\">https://moogle.ai</a> to type anything in. Is it just me?</p>\n</blockquote>\n<p>OK this should now be fixed --- please give it a try and let me know if it's still not working</p>",
        "id": 405041113,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1701325282
    },
    {
        "content": "<p>It works for me now: firefox on linux!</p>",
        "id": 405041368,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1701325370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span> : Thanks, the moogle extension looks pretty good and works in a complementary fashion with the loogle extension. I do have one question: What does the \"Open Moogle\" command do? I tried it a couple of times and nothing seemed to happen.</p>",
        "id": 405086764,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701340336
    },
    {
        "content": "<p>Also, a feature request for a dark mode <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 405088160,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701340793
    }
]