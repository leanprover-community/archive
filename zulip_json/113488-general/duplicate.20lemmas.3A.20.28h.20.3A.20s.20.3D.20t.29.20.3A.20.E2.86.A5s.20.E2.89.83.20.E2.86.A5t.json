[
    {
        "content": "<p>/poll Which should we keep</p>\n<ul>\n<li>equiv.set.of_eq</li>\n<li>equiv.set_congr</li>\n</ul>",
        "id": 283172683,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653138171
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.set.of_eq\">docs#equiv.set.of_eq</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.set_congr\">docs#equiv.set_congr</a>. Both are <code>(h : s = t) : ↥s ≃ ↥t</code>.</p>\n<p>Not to be confused with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.set.congr\">docs#equiv.set.congr</a> which is <code>(e : α ≃ β) : set α ≃ set β</code> and matches <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.finset_congr\">docs#equiv.finset_congr</a>.</p>",
        "id": 283172689,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653138184
    },
    {
        "content": "<p>Note we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_equiv.of_eq\">docs#linear_equiv.of_eq</a> but <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_equiv.add_subgroup_congr\">docs#add_equiv.add_subgroup_congr</a>.</p>",
        "id": 283172763,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653138268
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span>, who ended up trying to PR a missing one of these in <a href=\"https://github.com/leanprover-community/mathlib/pull/14267\">#14267</a> because the two different naming styles led them astray.</p>",
        "id": 283172769,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653138286
    },
    {
        "content": "<p>Indeed <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 283172789,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1653138343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>, does your <code>set.coe_congr</code> suggestion indicate we should also rename the following?</p>\n<ul>\n<li><code>add_equiv.add_subgroup_congr</code> to <code>add_subgroup.coe_congr</code></li>\n<li><code>linear_equiv.of_eq</code> to <code>submodule.coe_congr</code></li>\n<li><a href=\"https://leanprover-community.github.io/mathlib_docs/find/subalgebra.equiv_of_eq\">docs#subalgebra.equiv_of_eq</a> to <code>subalgebra.coe_congr</code></li>\n</ul>",
        "id": 283173545,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653139421
    },
    {
        "content": "<p>Yes, I think so.</p>",
        "id": 283173603,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1653139452
    },
    {
        "content": "<p>or just <code>.congr</code> instead of <code>.coe_congr</code>. I'm just unsure whether <code>set.congr</code> would be a reasonable name.</p>",
        "id": 283173648,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1653139543
    },
    {
        "content": "<p>Or the longer <code>coe_sort_congr</code></p>",
        "id": 283173692,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653139566
    },
    {
        "content": "<p>That would clear up ambiguities.</p>",
        "id": 283173697,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1653139579
    },
    {
        "content": "<p>Is it a problem that the type of the equiv is no longer in the name?</p>",
        "id": 283173705,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653139602
    },
    {
        "content": "<p>Depends. Does it ever happen that we can decorate the equiv in different ways?</p>",
        "id": 283173722,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1653139636
    },
    {
        "content": "<p>The equivalence between equal add_subgroups could be int-linear, but really that's two steps</p>",
        "id": 283173728,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653139668
    },
    {
        "content": "<p>Ah, here's an answer; with the new <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_submonoid_class\">docs#add_submonoid_class</a> it's possible to get an add_equiv between submodules</p>",
        "id": 283173775,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653139693
    },
    {
        "content": "<p>Which you would not expect to have to look for in the <code>add_submonoid</code> namespace.</p>",
        "id": 283173785,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653139725
    }
]