[
    {
        "content": "<p>Hi all,</p>\n<p>I am thinking of starting a new project to formalize a recent paper of myself and coauthors <a href=\"https://arxiv.org/abs/2311.05762\">https://arxiv.org/abs/2311.05762</a> (I already have started a bare-bones github for this at <a href=\"https://github.com/teorth/pfr\">https://github.com/teorth/pfr</a> ), with aim to showcase more the collaborative aspect of formalization than I did in my previous project (which was primarily solo author).  On talking with Bhavik Mehta (who has kindly agreed to join the project), he suggested first developing a blueprint for the proof, but he mentioned that existing blueprint software might be geared more towards Lean3 rather than Lean4.  What is the current status of blueprint for Lean4, and what recommendations would people have for setting this up?</p>",
        "id": 401829617,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699902936
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/Lean.204.20project.20blueprint/near/398052467\">This thread</a> is relevant.</p>",
        "id": 401829956,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1699903089
    },
    {
        "content": "<p>A related question - would the Lean Zulip be an appropriate location to host a stream to publicly coordinate such a project?  I can also use e.g., my personal blog or the github comments for this, but there are some features on this zulip that make it convenient to discuss Lean code in particular.</p>",
        "id": 401831037,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699903509
    },
    {
        "content": "<p>My understanding is that the FLT-regular project <a href=\"https://leanprover-community.github.io/flt-regular/blueprint/\">here</a> is now using Lean 4's version of the blueprint software.</p>",
        "id": 401831121,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699903542
    },
    {
        "content": "<p>Re a stream: I should think that this Zulip would be a great place to host a stream for this project. We did this for the liquid tensor experiment and it worked very well. Another advantage of a stream is that you can have multiple threads to have many different conversations at once.</p>",
        "id": 401831362,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699903645
    },
    {
        "content": "<p>Yes, the <code>flt-regular</code> blueprint has been set up by <span class=\"user-mention\" data-user-id=\"389019\">@Chris Birkbeck</span>  and <span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span></p>",
        "id": 401831536,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1699903731
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657719\">Terence Tao</span> <a href=\"#narrow/stream/113488-general/topic/Blueprint.20for.20Lean.204/near/401831037\">said</a>:</p>\n<blockquote>\n<p>A related question - would the Lean Zulip be an appropriate location to host a stream to publicly coordinate such a project?  </p>\n</blockquote>\n<p>The sphere eversion project, liquid tensor experiment and FLT-regular project all have dedicated streams for them which in each case worked very well, so I think this would be a very useful thing to do.</p>",
        "id": 401833639,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1699904719
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> If you give us a name for the stream, a one-line description (optional), and indicate whether you want the stream to be private or public, then we can easily create the stream for you.</p>",
        "id": 401836442,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1699905817
    },
    {
        "content": "<p>OK.  If it doesn't disrupt the user experience for other Zulip users then I don't see any harm in creating a stream now, even if it might start off rather low volume as the project is only just now getting started.  For a title, one can write \"Polynomial Freiman-Ruzsa conjecture\", and a short description would be \"Project to formalize the Polynomial Freiman-Ruzsa conjecture (PFR) in Lean4\".</p>",
        "id": 401837752,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699906381
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113488-general/topic/Blueprint.20for.20Lean.204/near/401831536\">said</a>:</p>\n<blockquote>\n<p>Yes, the <code>flt-regular</code> blueprint has been set up by <span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span>  and <span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span></p>\n</blockquote>\n<p>I'm also happy to answer any questions about setting up the blueprint (although it really was <span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> that did the heavy lifting)</p>",
        "id": 401837756,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1699906382
    },
    {
        "content": "<p>The new stream is: <a class=\"stream\" data-stream-id=\"412902\" href=\"/#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture\">#Polynomial Freiman-Ruzsa conjecture</a></p>",
        "id": 401838369,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1699906676
    },
    {
        "content": "<p>OK, I guess any discussion about that project can move to that stream now.  Thanks!</p>",
        "id": 401841271,
        "sender_full_name": "Terence Tao",
        "timestamp": 1699907985
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span> <a href=\"#narrow/stream/113488-general/topic/Blueprint.20for.20Lean.204/near/401837756\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113488-general/topic/Blueprint.20for.20Lean.204/near/401831536\">said</a>:</p>\n<blockquote>\n<p>Yes, the <code>flt-regular</code> blueprint has been set up by <span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span>  and <span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span></p>\n</blockquote>\n<p>I'm also happy to answer any questions about setting up the blueprint (although it really was <span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> that did the heavy lifting)</p>\n</blockquote>\n<p>Me too. The heavy lifting is actually done by doc-gen4 and the original blueprint, the Lean 4 version of blueprint is a very lightweight solution.</p>\n<p>Some related info:</p>\n<ul>\n<li>code: <a href=\"https://github.com/utensil/leanblueprint/tree/lean4-only\">https://github.com/utensil/leanblueprint/tree/lean4-only</a></li>\n<li>PR: <a href=\"https://github.com/PatrickMassot/leanblueprint/pull/5\">PatrickMassot/leanblueprint#5</a> (status: could be merged anytime)</li>\n<li>Minimal example project (includes CI setup): <a href=\"https://github.com/utensil/LeanBlueprintExample\">https://github.com/utensil/LeanBlueprintExample</a></li>\n<li>Projects using the Lean 4 blueprint<ul>\n<li><a href=\"https://github.com/leanprover-community/flt-regular\">https://github.com/leanprover-community/flt-regular</a> (published to <a href=\"https://leanprover-community.github.io/flt-regular/blueprint/\">https://leanprover-community.github.io/flt-regular/blueprint/</a> )</li>\n<li><a href=\"https://github.com/YaelDillies/LeanAPAP\">https://github.com/YaelDillies/LeanAPAP</a> (published to <a href=\"https://yaeldillies.github.io/LeanAPAP/\">https://yaeldillies.github.io/LeanAPAP/</a> , see <a href=\"https://github.com/YaelDillies/LeanAPAP/pull/2\">YaelDillies/LeanAPAP#2</a> for comments on CI setup, it's the latest best practice)</li>\n</ul>\n</li>\n<li>Known caveats:<ul>\n<li>CI takes around 26+15min for the first time and every time the version of Mathlib is updated</li>\n<li>CI takes around 26min for subsequent commits without changing the version of Mathlib, which could be accelerated by <a href=\"#narrow/stream/113488-general/topic/Lean.204.20project.20blueprint/near/396040302\">improving LaTeX building setup</a> (I should have demonstrated it in setup example project, but haven't had time lately)</li>\n</ul>\n</li>\n</ul>",
        "id": 401886663,
        "sender_full_name": "Utensil Song",
        "timestamp": 1699927970
    },
    {
        "content": "<p>What is it so slow?</p>",
        "id": 401891969,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699929677
    },
    {
        "content": "<p>The most time consuming parts are installing TeXLive full (5 min) and building doc-gen4 for Mathlib and its deps</p>",
        "id": 401895573,
        "sender_full_name": "Utensil Song",
        "timestamp": 1699931429
    },
    {
        "content": "<p>See <a href=\"https://github.com/YaelDillies/LeanAPAP/actions/runs/6839921356/job/18598636544\">https://github.com/YaelDillies/LeanAPAP/actions/runs/6839921356/job/18598636544</a> for a breakdown</p>",
        "id": 401895863,
        "sender_full_name": "Utensil Song",
        "timestamp": 1699931595
    },
    {
        "content": "<p>Oh, that's doc-gen4 timing! I thought you were talking about plaTeX.</p>",
        "id": 401898674,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1699933045
    },
    {
        "content": "<p>Also with respect to doc-gen speed, if this speed is too slow we have a little issue. After the last round of improvements i did a bit of profiling again and it spends the vast majority of its time in compiler APIs now, then a bit of time initializing the Unicode library and lastly a small bit of time on its own.</p>\n<p>There is already some work happening on the Unicode one but unless we do some funky stuff in the compiler doc-gen is probably not going to make as large leaps in performance anymore as it used to. (We were in the multi hours back in the day, now its 15 min on the hoskinson machines)</p>",
        "id": 401922510,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1699947097
    },
    {
        "content": "<p>I am going to set up a blueprint for the project this afternoon.</p>",
        "id": 401932229,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1699950746
    },
    {
        "content": "<p>By the way, I plan to port <span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span>'s branch of leanblueprint to Lean itself, which would completely remove the only remaining python dependency in most Lean 4 projects. My goal is to just write my own TeX parser (for some limited subset of TeX that we actually use in blueprints), and do basically the same processing as in the python code.</p>",
        "id": 402231208,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700052897
    },
    {
        "content": "<p>I'll properly start writing the code after term's finished at the end of the month.</p>",
        "id": 402231429,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700052953
    },
    {
        "content": "<p>I think you are very much underestimating the difficulty of writing a TeX compiler.</p>",
        "id": 402235423,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700053916
    },
    {
        "content": "<p>I don't intend to support all of TeX, of course - just the idioms that we commonly use in blueprints. I'm going to use MathJax to display things like equations.</p>",
        "id": 402235601,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700053964
    },
    {
        "content": "<p>I am strongly in favour of keeping plasTeX as a dependency.</p>",
        "id": 402236734,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700054246
    },
    {
        "content": "<p>\"just the idioms that we commonly use in blueprints\" is not very well-defined.</p>",
        "id": 402236911,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1700054284
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"492774\">Sky Wilshaw</span> <a href=\"#narrow/stream/113488-general/topic/Blueprint.20for.20Lean.204/near/402231208\">said</a>:</p>\n<blockquote>\n<p>By the way, I plan to port <span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span>'s branch of leanblueprint to Lean itself, which would completely remove the only remaining python dependency in most Lean 4 projects. My goal is to just write my own TeX parser (for some limited subset of TeX that we actually use in blueprints), and do basically the same processing as in the python code.</p>\n</blockquote>\n<p>I think you should just leave it be as is right now. <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> has some stuff regarding documentation generation etc. coming up in Lean that will hopefully take care of this type of stuff.</p>",
        "id": 402238712,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1700054704
    },
    {
        "content": "<p>I will be reaching out when the system is a bit more complete to find out how to make sure we can serve these use cases - thanks for the ping!</p>",
        "id": 402241705,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1700055442
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"492774\">Sky Wilshaw</span> <a href=\"#narrow/stream/113488-general/topic/Blueprint.20for.20Lean.204/near/402235601\">said</a>:</p>\n<blockquote>\n<p>I don't intend to support all of TeX, of course - just the idioms that we commonly use in blueprints. I'm going to use MathJax to display things like equations.</p>\n</blockquote>\n<p>Ok, let me reformulate: I think you are very <em>very</em> much underestimating the difficulty of writing a TeX compiler that is good enough for the idioms we use in blueprints.</p>",
        "id": 402250928,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700057498
    },
    {
        "content": "<p>Would it be useful to write this  on top of <a href=\"https://pandoc.org/using-the-pandoc-api.html\">pandoc</a>?</p>",
        "id": 402253617,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700058181
    },
    {
        "content": "<p>What's the point? Why not just call TeX (or whatever variant is currently being used)?</p>",
        "id": 402254457,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1700058385
    },
    {
        "content": "<p>they give you an AST in a suitable algebraic data type?</p>",
        "id": 402254842,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700058490
    },
    {
        "content": "<p>plasTeX already gives you something like an AST (although it's closer to a parsed XML document).</p>",
        "id": 402255218,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700058600
    },
    {
        "content": "<p>The main issue with plasTeX is that it was started almost 25 years ago and the original author stopped maintaining it long ago. So a large part of the codebase is very obscure and very far away from modern python coding standards. But, to my knowledge, it is still the best option you have if you want to process TeX code and do something else than producing a pdf-like output.</p>",
        "id": 402255843,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700058759
    },
    {
        "content": "<p>If you want it in python see : <a href=\"https://boisgera.github.io/pandoc/\">https://boisgera.github.io/pandoc/</a></p>",
        "id": 402256189,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700058859
    },
    {
        "content": "<p>Rewriting it in fully modern python or a fancier programming language would be a <em>huge</em> task. And frankly I think it is not worth the trouble. I think it would be much better to work on a better input language and keep only the math mode of TeX.</p>",
        "id": 402256266,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700058885
    },
    {
        "content": "<p>you mean markdown with math?</p>",
        "id": 402256366,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700058905
    },
    {
        "content": "<p>Something like markdown with math, but markdown is clearly not powerful enough.</p>",
        "id": 402256427,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700058924
    },
    {
        "content": "<p>As far as I know pandoc is very far away from being able to parse a LaTeX file.</p>",
        "id": 402256511,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700058947
    },
    {
        "content": "<p>There's also <a href=\"https://typst.app/\">https://typst.app/</a>.</p>",
        "id": 402256537,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700058957
    },
    {
        "content": "<p>Although I don't think it really supports anything other than PDF export at the moment.</p>",
        "id": 402256649,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700058981
    },
    {
        "content": "<p>There various experiments like this. The thing is that LaTeX code should be at most an intermediate language between a better input language and the pdf output.</p>",
        "id": 402256833,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059034
    },
    {
        "content": "<p>So writing a LaTeX parser is not a good idea in my opinion.</p>",
        "id": 402256964,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059069
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Blueprint.20for.20Lean.204/near/402256833\">said</a>:</p>\n<blockquote>\n<p>There various experiments like this. The thing is that LaTeX code should be at most an intermediate language between a better input language and the pdf output.</p>\n</blockquote>\n<p>latex is not a very good IR. It is too complex.</p>",
        "id": 402257410,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700059189
    },
    {
        "content": "<p>We should have a good input language with a parser to a nice AST and then backends that turn this AST into either a LaTeX file to be compiled to pdf or a web page (or epub). The AST could also be used to manipulate the input, collect statistics, create graphs and all those things that plasTeX allows on top of rendering to whatever language you want (html is <em>not</em> baked into plasTeX, you can write renderers to other targets).</p>",
        "id": 402257445,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059197
    },
    {
        "content": "<p>Sure, it is an awful IR, that's why we need some nice AST.</p>",
        "id": 402257572,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059224
    },
    {
        "content": "<p>In my dream LaTeX would be an implementation detail of the AST to pdf pipeline.</p>",
        "id": 402257633,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059246
    },
    {
        "content": "<p>As far as I can tell, pandoc already does this (or something very similar).</p>",
        "id": 402257723,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700059269
    },
    {
        "content": "<p>Just like assembly code can be an intermediate between nice code and machine code.</p>",
        "id": 402257766,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059278
    },
    {
        "content": "<p>Yeah I agree <span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span> . Pandoc does a very good job with latex files. What features are you missing in pandoc @Patrick?</p>",
        "id": 402257775,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700059281
    },
    {
        "content": "<p>My knowledge of pandoc may be outdated. I know I tried it before plasTeX but that was in 2010.</p>",
        "id": 402257959,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059328
    },
    {
        "content": "<p>Pandoc is drastically better than it used to be.</p>",
        "id": 402258099,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700059368
    },
    {
        "content": "<p>Pandoc's first commit was only in 2006, so I think there's quite a lot you were missing out on!</p>",
        "id": 402258146,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700059379
    },
    {
        "content": "<p>And now I feel old.</p>",
        "id": 402258155,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059381
    },
    {
        "content": "<p>MathML is not a bad language for web output output as far as I know. Arxiv even has an experiment with this. Further if you really just want to convert latex to web output, using KaTeX as a server is an option these days, so you can skip the whole parsing bit and just run a katex server in the background.</p>",
        "id": 402258345,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700059437
    },
    {
        "content": "<p>For what it's worth, all of the various standards we've been discussing are intercompilable with modern pandoc.</p>",
        "id": 402258389,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700059443
    },
    {
        "content": "<p>Wait, I miscalculated. I tried pandoc in 2014.</p>",
        "id": 402258451,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059455
    },
    {
        "content": "<p>MathML is definitely not an human-input language.</p>",
        "id": 402258558,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059486
    },
    {
        "content": "<p>And I don't think KaTeX or MathJax can parse a full TeX file, they only do the math fragment. I'm not complaining about the math fragment of TeX.</p>",
        "id": 402258760,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059540
    },
    {
        "content": "<p>Then pandoc is your best bet</p>",
        "id": 402258795,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700059553
    },
    {
        "content": "<p>I don't have time for this but I would be interested if someone can run pandoc on the LTE or Sphere eversion blueprints.</p>",
        "id": 402258950,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059592
    },
    {
        "content": "<p>Before dreaming too much about getting rid of LaTeX, you should know that mathematicians have been badly trained at micromanaging their pdf output for 40 years, and you would have a very hard time convincing them to switch to a higher level input language where they can't control precisely the pdf output. That's the real obstacle.</p>",
        "id": 402259903,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059835
    },
    {
        "content": "<p>I'm not hoping to get rid of LaTeX by any means - but blueprints are to be displayed on the web, so it makes sense to me to design blueprints to be rendered in a web-first manner.</p>",
        "id": 402260327,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700059937
    },
    {
        "content": "<p>Blueprints are also rendered in pdf!</p>",
        "id": 402260485,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700059976
    },
    {
        "content": "<p>At least in my experience, the fact that blueprints also compile to TeX is a nice bonus, but not where I actually spend time.</p>",
        "id": 402260508,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700059981
    },
    {
        "content": "<p>You lose all interactivity when you do the compilation so it makes it less convenient to work with.</p>",
        "id": 402260587,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1700060004
    },
    {
        "content": "<p>If you work on a serious project then the pdf output is also useful.</p>",
        "id": 402260598,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700060008
    },
    {
        "content": "<p>By serious project I mean that you need to spend time to understand the mathematical content.</p>",
        "id": 402260658,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1700060027
    },
    {
        "content": "<p>If you want to get into specific details of the latex code at a high level, there's this : <a href=\"https://pypi.org/project/TexSoup/\">https://pypi.org/project/TexSoup/</a><br>\nBut like webscraping, I can't imagine latex scraping is truly reliable and not brittle to small changes.</p>",
        "id": 402272544,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700063054
    },
    {
        "content": "<p>With the coming upgrade of Lean documentation system using meta-programming envisioned by <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> , my understanding of the situation is that the investment into tools like blueprint is better kept to as lightweight as possible, in the hope that they will be <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396541402\">integrated into the new Lean documentation system</a>, as an interactive and drill-down-able super set of what's available in Isabelle (e.g. the proof outline and proof document generated for formal proofs on <a href=\"https://www.isa-afp.org/entries/Relational_Cardinality.html\">AFP</a> that mixes math and lean proof naturally).</p>\n<p>Typst is great on its own, but it's a completely separated ecosystem, and provides no native support for transition from LaTeX. As for an effort to rewrite the core engine of LaTeX parsing but reuse most other tools and packages in the LaTeX ecosystem, see <a href=\"https://tectonic-typesetting.github.io/\">Tectonic</a>. Although I use and like them both, I'm still skeptical about their long-term survival.</p>",
        "id": 402393876,
        "sender_full_name": "Utensil Song",
        "timestamp": 1700115484
    },
    {
        "content": "<p>Typst looks like a really nice typesetting language!</p>\n<p>The system that I'm working on (literally, as I take a break to answer this comment) is not a typesetting language like LaTeX, but rather a higher-level DSL built on top of Lean. The syntax is very close to Markdown, but not 100% compatible for various technical reasons (existing Markdown languages are also not 100% compatible with each other, so I think this is likely to be within the realm of the acceptable). There is an extension mechanism, similar to roles or directives in Sphinx, that allows the documentation language to get new features for specific applications like Blueprint - unlike LaTeX, where macros produce new source code strings, these extensions will work on the level of document ASTs.</p>\n<p>This means that Lean libraries can provide documentation features, with full access to the Lean metaprogramming API. This is a fairly general framework, and a key feature will be the ability to specify a \"genre\" for a document. A genre is a collection of documentation features (index, figures, equations, embedded Lean, etc) along with a way to render it to some output formats of interest, like HTML or TeX or EPUB or Typst or serialized Pandoc ASTs or whatever else the genre's author needs.</p>\n<p>After reading up on what people do with Lean and documentation today, and getting some great guidance from <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, I believe that this system will work for our needs here - I'll certainly revise it until it does!</p>\n<p>My goal right now is to get something useable in your hands ASAP - so I'll head back to that now :-)</p>",
        "id": 402394897,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1700116019
    },
    {
        "content": "<p>May not be relevant, but a reasonable enhanced markdown is <a href=\"https://github.com/Mathpix/mathpix-markdown-it\">https://github.com/Mathpix/mathpix-markdown-it</a>.<br>\nThis is the output format of <a href=\"https://github.com/facebookresearch/nougat\">Nougat</a> which is OCR for PDF files. Compiling LaTeX to pdf and then extracting may be roundabout but is an option.</p>",
        "id": 402410005,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1700122264
    }
]