[
    {
        "content": "<p>Say I have created a non-math project with <code>lake new project</code>.  Then I want to add <code>Std</code> as a dependency to <code>project</code>.  What is the correct way to do it?  <code>import Std</code> does not automatically install <code>Std</code> in the project directory, so I am assuming either</p>\n<ol>\n<li>\n<p>I have to invoke a <code>lake</code> command, or </p>\n</li>\n<li>\n<p>to manually create a <code>lake_packages</code> folder, clone <code>Std</code> in there, and somehow pin the downloaded version to the project?</p>\n</li>\n</ol>\n<p>Of course, I would hope for (1).</p>",
        "id": 394169874,
        "sender_full_name": "Ioannis Konstantoulas",
        "timestamp": 1696147188
    },
    {
        "content": "<p>You need to edit the lakefile.lean file of your project to add</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">std</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover/std4\"</span>\n</code></pre></div>\n<p>as explained here:  <a href=\"https://github.com/leanprover/lake#adding-dependencies\">https://github.com/leanprover/lake#adding-dependencies</a></p>",
        "id": 394170471,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1696147541
    },
    {
        "content": "<p>Mathlib has several lines like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">std</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/std4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n</code></pre></div>\n<p>in its <code>lakefile.lean</code>.  Does adding the above works?</p>",
        "id": 394170475,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696147546
    },
    {
        "content": "<p>I don't know if the <code>@  \"main\"</code> is required, but if mathlib uses it you probably should as well?</p>",
        "id": 394170643,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1696147639
    },
    {
        "content": "<p>I think that someone recently said that the default branch with git is <code>master</code> and lake does weird things if <code>main</code> is the \"main\" branch, like in Std.  But I am not really sure...</p>",
        "id": 394170761,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696147690
    },
    {
        "content": "<p>Here is the link to the comment: <a href=\"#narrow/stream/270676-lean4/topic/Updating.20using.20lake.20again/near/393881597\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Updating.20using.20lake.20again/near/393881597</a></p>",
        "id": 394170827,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1696147765
    },
    {
        "content": "<p>The above fails with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">admin</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly/bin/lake print-paths Init` failed:</span>\n\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">missing</span> <span class=\"n\">manifest</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"n\">lake</span> <span class=\"n\">update</span><span class=\"bp\">`</span> <span class=\"n\">to</span> <span class=\"n\">generate</span> <span class=\"n\">one</span>\n<span class=\"n\">Invalid</span> <span class=\"n\">Lake</span> <span class=\"n\">configuration.</span>  <span class=\"n\">Please</span> <span class=\"n\">restart</span> <span class=\"n\">the</span> <span class=\"n\">server</span> <span class=\"n\">after</span> <span class=\"n\">fixing</span> <span class=\"n\">the</span> <span class=\"n\">Lake</span> <span class=\"n\">configuration</span> <span class=\"n\">file.</span>\n</code></pre></div>\n<p>Performing <code>lake update</code> gave me the warning:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">mwe_bare</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">std'</span> <span class=\"n\">was</span> <span class=\"n\">required</span> <span class=\"n\">as</span> <span class=\"bp\">'</span><span class=\"n\">std4'</span>\n</code></pre></div>\n<p>I wonder what happens if <code>Std</code> is updated in github; do I keep getting the new versions?</p>",
        "id": 394171085,
        "sender_full_name": "Ioannis Konstantoulas",
        "timestamp": 1696147918
    },
    {
        "content": "<p>It looks like the correct name is std, not std4 as I incorrectly wrote in the code above (which I just edited to fix that)</p>",
        "id": 394171197,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1696147971
    },
    {
        "content": "<p>You don't get new versions automatically. To update your dependencies you need to run <code>lake update</code>.</p>",
        "id": 394171477,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1696148162
    },
    {
        "content": "<p>But be warned that if you run <code>lake update</code> and the lean version used by std got ahead of the lean version you have in your lean-toolchain file, it will break everything</p>",
        "id": 394171629,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1696148248
    },
    {
        "content": "<p>I recommend you always use the <code>@ branch</code> part in a <code>require</code>. The current lake behavior is subtly wrong and you don't want to have to think about that</p>",
        "id": 394172871,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696148956
    },
    {
        "content": "<p>This makes the updating process much harder though because then my students have to manually edit the lake file yet again to update the dependency</p>",
        "id": 394173127,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696149110
    },
    {
        "content": "<p>what do you mean?</p>",
        "id": 394173194,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696149133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"350992\">Rémy Degenne</span> <a href=\"#narrow/stream/113488-general/topic/Correct.20way.20to.20add.20package/near/394171629\">said</a>:</p>\n<blockquote>\n<p>But be warned that if you run <code>lake update</code> and the lean version used by std got ahead of the lean version you have in your lean-toolchain file, it will break everything</p>\n</blockquote>\n<p>Can we roll back updates?</p>",
        "id": 394173239,
        "sender_full_name": "Ioannis Konstantoulas",
        "timestamp": 1696149169
    },
    {
        "content": "<p>git...</p>",
        "id": 394173249,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696149177
    },
    {
        "content": "<p>If my students have a specific commit mentioned in a config file then they have to manually update the commit. If they just have \"master\" then they don't</p>",
        "id": 394173294,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696149209
    },
    {
        "content": "<p>I put all my projects on github and if I manage to break really everything, I just delete the folder and clone again</p>",
        "id": 394173313,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1696149225
    },
    {
        "content": "<p>the only permanent thing that <code>lake update</code> changes is <code>lake-manifest.json</code>. If you restore that and run <code>lake build</code> again you should be back to square one</p>",
        "id": 394173322,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696149231
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Correct.20way.20to.20add.20package/near/394173294\">said</a>:</p>\n<blockquote>\n<p>If my students have a specific commit mentioned in a config file then they have to manually update the commit. If they just have \"master\" then they don't</p>\n</blockquote>\n<p>I don't mean you should put a specific commit there, but you should put a branch name</p>",
        "id": 394173426,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696149266
    },
    {
        "content": "<p>don't just leave it default</p>",
        "id": 394173437,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696149276
    },
    {
        "content": "<p>because the default is <code>master</code> which does not match what github thinks the default is</p>",
        "id": 394173487,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1696149305
    }
]