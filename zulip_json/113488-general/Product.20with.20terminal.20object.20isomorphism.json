[
    {
        "content": "<p>I have a category <code>C</code> with limits, which has a terminal object <code>T</code>. Given an object <code>X</code>, I'd like to show that </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">X</span> <span class=\"bp\">⨯</span> <span class=\"n\">T</span> <span class=\"bp\">≅</span> <span class=\"n\">X</span>\n</code></pre></div>\n<p>(via the projection onto <code>X</code>). Is there some API I can take advantage of here, or will I need to prove this explicitly?</p>",
        "id": 399197542,
        "sender_full_name": "Jack McKoen",
        "timestamp": 1698625619
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Limits.prod.rightUnitor#doc\">docs#CategoryTheory.Limits.prod.rightUnitor</a></p>",
        "id": 399205377,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1698629571
    },
    {
        "content": "<p>The defn is tagged with <code>simps</code>, and is defined in one direction as the projection and in the other in terms of <code>lift</code>, so the usual approach to proving things about (co)limits in categories should work (possibly after a dsimp).</p>",
        "id": 399205563,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1698629666
    },
    {
        "content": "<p>This is exactly what I was looking for, thanks Adam.</p>",
        "id": 399222571,
        "sender_full_name": "Jack McKoen",
        "timestamp": 1698638921
    }
]