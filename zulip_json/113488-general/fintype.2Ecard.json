[
    {
        "content": "<p>This works if I comment out the first, unneeded import.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">fintype</span>\n\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">,</span> <span class=\"n\">priority</span> <span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">prop_decidable</span>\n\n<span class=\"c1\">-- set_option trace.class_instances true</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">â„•</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)}</span> <span class=\"o\">(</span><span class=\"n\">hH</span> <span class=\"o\">:</span> <span class=\"n\">fintype</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"n\">H</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">3</span><span class=\"o\">)</span>\n<span class=\"c1\">-- maximum class-instance resolution depth has been reached ...</span>\n</pre></div>",
        "id": 172337236,
        "sender_full_name": "Reid Barton",
        "timestamp": 1564775295
    },
    {
        "content": "<p>Anyone know what's going on? Or is there a better way to state the hypothesis?</p>",
        "id": 172337269,
        "sender_full_name": "Reid Barton",
        "timestamp": 1564775317
    },
    {
        "content": "<p>Is it <code>decidable_mem_of_fintype</code> and <code>subtype.fintype</code> cycling? That's a guess without Lean in front of me.</p>",
        "id": 172337645,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1564775645
    },
    {
        "content": "<p>Yeah it looks like it</p>",
        "id": 172337680,
        "sender_full_name": "Reid Barton",
        "timestamp": 1564775698
    },
    {
        "content": "<p>At least, <code>decidable_mem_of_fintype</code> is definitely involved</p>",
        "id": 172337780,
        "sender_full_name": "Reid Barton",
        "timestamp": 1564775779
    },
    {
        "content": "<p>Can I locally make it not an instance?</p>",
        "id": 172337831,
        "sender_full_name": "Reid Barton",
        "timestamp": 1564775831
    },
    {
        "content": "<p>Well I locally gave it priority 0 and that seems to have fixed it</p>",
        "id": 172337855,
        "sender_full_name": "Reid Barton",
        "timestamp": 1564775867
    }
]