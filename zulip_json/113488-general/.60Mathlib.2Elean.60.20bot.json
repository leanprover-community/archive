[
    {
        "content": "<p>I recently noticed that  github-actions started to suggest fix to <code>Mathlib.lean</code>, which is great. However the suggestion seems to be one line off?</p>",
        "id": 406327673,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1701875939
    },
    {
        "content": "<p>I have also observed this, but am not really sure why it happens, do you have a link to a specific example?</p>",
        "id": 406330056,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701876556
    },
    {
        "content": "<p>Ideally a simple one!</p>",
        "id": 406330143,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701876581
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8842\">#8842</a></p>",
        "id": 406330369,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1701876633
    },
    {
        "content": "<p><del>This comes out of lint-style.py, so probably there's an off-by-one error there</del></p>",
        "id": 406331485,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1701876950
    },
    {
        "content": "<p>I'm not sure, the way the bot and linter works is by creating the file as it should be in CI and then suggesting the diff as the diff between the \"fixed\" file and the original, so there isn't really a number that can be off by one in the script if you know what I mean</p>",
        "id": 406332126,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701877137
    },
    {
        "content": "<p>Also its not <code>lint-style.py</code> in this case but rather a one off shell script</p>",
        "id": 406332374,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701877204
    },
    {
        "content": "<p>Oh right, I'm confused, sorry</p>",
        "id": 406333299,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1701877468
    },
    {
        "content": "<p>I haven't found the culprit yet, but in <code>build.yml.in</code>, there are two different scripts that generates <code>Mathlib.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git<span class=\"w\"> </span>ls-files<span class=\"w\"> </span><span class=\"s1\">'Mathlib/*.lean'</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"nv\">LC_ALL</span><span class=\"o\">=</span>C<span class=\"w\"> </span>sort<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>sed<span class=\"w\"> </span><span class=\"s1\">'s/\\.lean//;s,/,.,g;s/^/import /'</span><span class=\"w\"> </span>&gt;<span class=\"w\"> </span>Mathlib.lean\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>find<span class=\"w\"> </span>Mathlib<span class=\"w\"> </span>-name<span class=\"w\"> </span><span class=\"s2\">\"*.lean\"</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"nv\">LC_ALL</span><span class=\"o\">=</span>C<span class=\"w\"> </span>sort<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>sed<span class=\"w\"> </span><span class=\"s1\">'s/\\.lean//;s,/,.,g;s/^/import /'</span><span class=\"w\"> </span>&gt;<span class=\"w\"> </span>Mathlib.lean\n</code></pre></div>\n<p>and they give different outputs on the current master branch on my machine. The first gives the current <code>Mathlib.lean</code>, but the second gives <code>import Mathlib.Data.Bitvec.*</code> instead of <code>import Mathlib.Data.BitVec.*</code>.</p>",
        "id": 406338322,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1701878887
    },
    {
        "content": "<p>Wait this is because my <code>BitVec</code> is called <code>Bitvec</code> here. I wonder why so...</p>",
        "id": 406338891,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1701879098
    },
    {
        "content": "<p>That certainly looks like something we should get to the bottom of, I'm not yet sure if it is related though</p>",
        "id": 406339297,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701879236
    },
    {
        "content": "<p>The <code>lint_and_suggest</code> script is what controls reviewdog</p>",
        "id": 406339374,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701879247
    },
    {
        "content": "<p>Yes. In the PR above, it correctly reports </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Mathlib.lean</span><span class=\"o\">:</span><span class=\"mi\">2891</span><span class=\"o\">:</span><span class=\"bp\">-</span><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.SuccPred.CompleteLinearOrderp</span>\n<span class=\"n\">Mathlib.lean</span><span class=\"o\">:</span><span class=\"mi\">2891</span><span class=\"o\">:</span><span class=\"bp\">+</span><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.SuccPred.CompleteLinearOrder</span>\n</code></pre></div>\n<p>in the reviewdog log so maybe the error is on reviewdog's side?</p>",
        "id": 406339629,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1701879330
    },
    {
        "content": "<p>Wait no. It should be on line <code>2890</code>.</p>",
        "id": 406340196,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1701879510
    },
    {
        "content": "<p>Weird I'm getting <code>2890</code> when trying to debug this</p>",
        "id": 406340689,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1701879687
    }
]