[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/bump.20to.20nightly-2023-08-17/near/385643167\">said</a>:</p>\n<blockquote>\n<p>so as per usual for me the git history is a complete mess.</p>\n</blockquote>\n<p>I'm very confused how you seem to end up with rebased copies of commits from master. What commands are you running?</p>",
        "id": 385644322,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692267880
    },
    {
        "content": "<p><code>git merge origin/master</code>, and <code>git push</code>. But somehow git sometimes starts a rebase all by itself, and I muddle through. :-(</p>",
        "id": 385644445,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692267945
    },
    {
        "content": "<p>Git should never do that...</p>",
        "id": 385644549,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692267971
    },
    {
        "content": "<p>Is a magic button in vscode secretly doing a rebase? Or do you only touch git from the command line?</p>",
        "id": 385644643,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692268014
    },
    {
        "content": "<p>No, command line.<br>\nBut I have just discovered that <code>git config -l</code> says <code>pull.rebase=true</code>.</p>",
        "id": 385644769,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268062
    },
    {
        "content": "<p>That must be it. I will work out how to turn it off.</p>",
        "id": 385644799,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268073
    },
    {
        "content": "<p>But you said you ran <code>merge</code> not <code>pull</code>!</p>",
        "id": 385644807,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692268076
    },
    {
        "content": "<p>That's true. I mean, I pull the branch itself.</p>",
        "id": 385644935,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268111
    },
    {
        "content": "<p>It seems like the mystery rebase is actually triggered by the push.</p>",
        "id": 385644984,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268135
    },
    {
        "content": "<p>i.e. I do <code>git merge origin/master</code>, fix all the conflicts, and then when I <code>git push</code> suddenly I'm in rebase land, and have to look at the conflicts over again.</p>",
        "id": 385645045,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268160
    },
    {
        "content": "<p>This doesn't happen on other repos??</p>",
        "id": 385645052,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268166
    },
    {
        "content": "<p>That doesn't sound like normal git behaviour.</p>",
        "id": 385645112,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1692268195
    },
    {
        "content": "<p>Feel free to split this thread so as not to distract from your bump, Scott</p>",
        "id": 385645217,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692268224
    },
    {
        "content": "<p>13 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/bump.20to.20nightly-2023-08-17\">#mathlib4 &gt; bump to nightly-2023-08-17</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span>.</p>",
        "id": 385645285,
        "sender_full_name": "Notification Bot",
        "timestamp": 1692268264
    },
    {
        "content": "<p>What does your <code>git config -l --local</code> for the repo look like?</p>",
        "id": 385645341,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1692268288
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/difficulties.20with.20git.20rebase/near/385645052\">said</a>:</p>\n<blockquote>\n<p>This doesn't happen on other repos??</p>\n</blockquote>\n<p>Do you have a pre-push hook in <code>.git/hooks</code>?</p>",
        "id": 385645347,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1692268292
    },
    {
        "content": "<p>I have run <code>git config pull.rebase false</code> and <code>git config --global pull.rebase false</code> and will hope it goes away?</p>",
        "id": 385645373,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268308
    },
    {
        "content": "<p>No hooks.</p>",
        "id": 385645386,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268314
    },
    {
        "content": "<p>Can you paste your <code>mathlib4/.git/config</code>?</p>",
        "id": 385645516,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692268352
    },
    {
        "content": "<p><a href=\"https://gist.github.com/semorrison/809376b8d0d64600aa89369f5af94306\"><code>git config -l --local</code></a></p>",
        "id": 385645557,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268376
    },
    {
        "content": "<p><a href=\"https://gist.github.com/semorrison/443d1be97491e1b233a6091792a6d29b\"><code>.git/config</code></a></p>",
        "id": 385645698,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268443
    },
    {
        "content": "<p>(The file actually lives elsewhere because <code>mathlib4</code> is a submodule of my home directory repo.)</p>",
        "id": 385645759,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268463
    },
    {
        "content": "<p>Here's one theory of how you end up in the previous mess:</p>\n<ul>\n<li><code>git checkout master</code></li>\n<li><code>git pull</code> (ok, should fast-forward)</li>\n<li><code>git pull --rebase your_branch</code> (big mistake, now you have copies of master on top of your branch</li>\n<li><code>git checkout your_branch</code></li>\n<li><code>git merge master</code> (the copies are now on your branch too)</li>\n</ul>",
        "id": 385645968,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692268561
    },
    {
        "content": "<p>Really the mistake her eis running <code>git pull your_branch</code> when you're not already on <code>your_branch</code></p>",
        "id": 385646359,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692268688
    },
    {
        "content": "<p>I'm pretty sure I've never done that.</p>",
        "id": 385646376,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268700
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/difficulties.20with.20git.20rebase/near/385645759\">said</a>:</p>\n<blockquote>\n<p>(The file actually lives elsewhere because <code>mathlib4</code> is a submodule of my home directory repo.)</p>\n</blockquote>\n<p>What does <code>git rev-parse --git-path hooks</code> say? I wonder if it's different because of the submodule set-up.</p>",
        "id": 385646399,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1692268712
    },
    {
        "content": "<p>I <code>git merge</code> another branch, but I admit I didn't even know that <code>git pull your_branch</code> was a thing.</p>",
        "id": 385646453,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268737
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">%</span> <span class=\"n\">git</span> <span class=\"n\">rev</span><span class=\"bp\">-</span><span class=\"n\">parse</span> <span class=\"c1\">--git-path hooks</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">scott</span><span class=\"bp\">/.</span><span class=\"n\">git</span><span class=\"bp\">/</span><span class=\"n\">modules</span><span class=\"bp\">/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"n\">hooks</span>\n</code></pre></div>",
        "id": 385646503,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268758
    },
    {
        "content": "<p>and everything in that directory is a <code>*.sample</code>.</p>",
        "id": 385646538,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692268779
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/difficulties.20with.20git.20rebase/near/385645759\">said</a>:</p>\n<blockquote>\n<p>(The file actually lives elsewhere because <code>mathlib4</code> is a submodule of my home directory repo.)</p>\n</blockquote>\n<p>How does that setup work? I don't think I've seen something like this before</p>",
        "id": 385648420,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1692269470
    },
    {
        "content": "<p>I just <code>git submodule add</code> rather than <code>git clone</code>. This makes it easy to keep my pool of local checkouts synchronized between machines. Although for the past few years I've been 99% on a single machine, so it is less useful to me than it used to be.</p>",
        "id": 385648807,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692269637
    },
    {
        "content": "<p>Scott, I get something like what you describe when I locally undo a commit that is already on the remote branch: could this be what is triggering the <code>rebase</code>?</p>",
        "id": 385649052,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1692269706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, would you be able to apply your fix to <a href=\"https://github.com/leanprover/std4/pull/190\">https://github.com/leanprover/std4/pull/190</a>?</p>",
        "id": 385649497,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692269846
    },
    {
        "content": "<p>I don't have permission to push</p>",
        "id": 385649707,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692269930
    },
    {
        "content": "<p><code>git merge origin/main</code> seems to have fixed it, in any case. :-)</p>",
        "id": 385649795,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692269964
    },
    {
        "content": "<p>Did you maybe run <code>git pull origin/main</code> instead of/before <code>git merge origin/main</code>? That could explain the pattern of rebased commits, I think.</p>",
        "id": 385650009,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1692270035
    },
    {
        "content": "<p>To clean up the history  (and therefore coauthors) of <a href=\"https://github.com/leanprover/std4/pull/190\">std4#190</a>, I think you can do:</p>\n<ul>\n<li><code>git rebase -i --rebase-merges upstream/master</code></li>\n<li>Delete the four std4 PRs from the resulting file</li>\n<li>Hope the rebase succeeds (if not, <code>git rebase --abort</code>)</li>\n<li><code>git push --force-with-lease</code></li>\n</ul>",
        "id": 385650051,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692270057
    },
    {
        "content": "<p>I promise I never ever manually type <code>git pull X</code>. Only ever <code>git pull</code>. :-(</p>",
        "id": 385650116,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692270088
    },
    {
        "content": "<p>(edited the above: i guess it's upstream/master not origin/master for you)</p>",
        "id": 385650348,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692270162
    },
    {
        "content": "<p>Do you remember how you created commit 030d2b5053bf14063b23b6c9a69fb25d4bf19c30? It seems to come before merge commit 900c26ff71ff56b72c65495b93ee8320de1a50ef with the same commit message (<code>.</code>) and the tip of a weird rebase.</p>",
        "id": 385650354,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1692270165
    },
    {
        "content": "<p>There is also commit 6536408b64ae3db1f5d89e5e181fd4fe3ab16269, which also came after a weird rebase and has commit message <code>.</code> as well. When do you usually use that commit message?</p>",
        "id": 385650627,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1692270266
    },
    {
        "content": "<blockquote>\n<p>Delete the four std4 PRs from the resulting file</p>\n</blockquote>\n<p>In fact, <code>git rebase --rebase-merges -i</code> deletes these for you!</p>",
        "id": 385651431,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692270595
    },
    {
        "content": "<p>Thank you all for the help diagnosing, but I think the best solution here is to assume for now that turning off <code>pull.rebase</code> is going to make this problem go away. If it doesn't, I'll ask for help again.</p>",
        "id": 385651685,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692270691
    },
    {
        "content": "<p>Can you run <code>git rebase --rebase-merges -i $whatever_the_upstream_master_main_branch_is</code> on the two messy PRs to fix up the co-authors?</p>",
        "id": 385651740,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692270718
    },
    {
        "content": "<p>Which ones are you concerned about? The latest bump, and another? If you want to do them I don't mind. :-)</p>",
        "id": 385652185,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692270888
    },
    {
        "content": "<p>I don't have push permissions for std4, but I guess I can do that on mathlib</p>",
        "id": 385652217,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692270902
    },
    {
        "content": "<p>I'd prefer not to push anything on <a href=\"https://github.com/leanprover-community/mathlib4/pull/6019\">#6019</a>, as I want to see successful CI before I go to bed.</p>",
        "id": 385652276,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692270934
    },
    {
        "content": "<p>but it works better if you do it so that you don't end up with the old copy locally to merge back into the fixed one</p>",
        "id": 385652277,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692270935
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/difficulties.20with.20git.20rebase/near/385652276\">said</a>:</p>\n<blockquote>\n<p>I'd prefer not to push anything on <a href=\"https://github.com/leanprover-community/mathlib4/pull/6019\">#6019</a>, as I want to see successful CI before I go to bed.</p>\n</blockquote>\n<p>The following shouldn't impact that much:</p>\n<ul>\n<li>cancel CI to get a partial cache</li>\n<li>clean up history</li>\n<li>Push and resume from the previous cache</li>\n</ul>",
        "id": 385652414,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692270981
    },
    {
        "content": "<p>I ran <code>git rebase --rebase-merges -i main</code> for <a href=\"https://github.com/leanprover/std4/pull/190\">https://github.com/leanprover/std4/pull/190</a>, but it seems to have had no effect.</p>",
        "id": 385652573,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692271061
    },
    {
        "content": "<p>You probably need <code>upstream/main</code></p>",
        "id": 385652596,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692271074
    },
    {
        "content": "<p><code>main</code> is likely some ancient copy of <code>upstream/main</code> in your fork</p>",
        "id": 385652719,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692271112
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">%</span> <span class=\"n\">git</span> <span class=\"n\">rebase</span> <span class=\"c1\">--rebase-merges -i origin/main</span>\n<span class=\"n\">Successfully</span> <span class=\"n\">rebased</span> <span class=\"n\">and</span> <span class=\"n\">updated</span> <span class=\"n\">refs</span><span class=\"bp\">/</span><span class=\"n\">heads</span><span class=\"bp\">/</span><span class=\"n\">simp_failIfUnchanged.</span>\n<span class=\"bp\">%</span> <span class=\"n\">git</span> <span class=\"n\">push</span>\n<span class=\"n\">Everything</span> <span class=\"n\">up</span><span class=\"bp\">-</span><span class=\"n\">to</span><span class=\"bp\">-</span><span class=\"n\">date</span>\n</code></pre></div>",
        "id": 385652749,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692271128
    },
    {
        "content": "<p><code>origin/main</code> is 294 commits out of date</p>",
        "id": 385652811,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692271158
    },
    {
        "content": "<p>Assuming its <a href=\"https://github.com/semorrison/std4\">https://github.com/semorrison/std4</a></p>",
        "id": 385652829,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692271167
    },
    {
        "content": "<p>No, origin is the leanprover repository.</p>",
        "id": 385652882,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692271187
    },
    {
        "content": "<p>fork is my fork.</p>",
        "id": 385652888,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692271191
    },
    {
        "content": "<p>Works on my machine...</p>",
        "id": 385653031,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692271242
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"c1\">--version</span>\n<span class=\"n\">git</span> <span class=\"n\">version</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">41</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 385653078,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692271272
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">%</span> <span class=\"n\">git</span> <span class=\"c1\">--version</span>\n<span class=\"n\">git</span> <span class=\"n\">version</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">32</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">Apple</span> <span class=\"n\">Git</span><span class=\"bp\">-</span><span class=\"mi\">132</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 385653673,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692271525
    },
    {
        "content": "<p>That could plausibly be it</p>",
        "id": 385653911,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692271620
    },
    {
        "content": "<p>That is two years old</p>",
        "id": 385653943,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692271635
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">%</span> <span class=\"n\">git</span> <span class=\"c1\">--version</span>\n<span class=\"n\">git</span> <span class=\"n\">version</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">41</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"bp\">%</span> <span class=\"n\">git</span> <span class=\"n\">rebase</span> <span class=\"c1\">--rebase-merges -i origin/main</span>\n<span class=\"n\">Successfully</span> <span class=\"n\">rebased</span> <span class=\"n\">and</span> <span class=\"n\">updated</span> <span class=\"n\">refs</span><span class=\"bp\">/</span><span class=\"n\">heads</span><span class=\"bp\">/</span><span class=\"n\">simp_failIfUnchanged.</span>\n<span class=\"bp\">%</span> <span class=\"n\">git</span> <span class=\"n\">push</span>\n<span class=\"n\">Everything</span> <span class=\"n\">up</span><span class=\"bp\">-</span><span class=\"n\">to</span><span class=\"bp\">-</span><span class=\"n\">date</span>\n</code></pre></div>\n<p><span aria-label=\"woman shrugging\" class=\"emoji emoji-1f937-200d-2640\" role=\"img\" title=\"woman shrugging\">:woman_shrugging:</span></p>",
        "id": 385654799,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692271965
    },
    {
        "content": "<p>Oh, it's because of your last merge!</p>",
        "id": 385655108,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692272086
    },
    {
        "content": "<p>I ran that command just before you merged master</p>",
        "id": 385655129,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692272097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/difficulties.20with.20git.20rebase/near/385651431\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Delete the four std4 PRs from the resulting file (the ones with #XYZ)</p>\n</blockquote>\n<p>In fact, <code>git rebase --rebase-merges -i</code> deletes these for you!</p>\n</blockquote>\n<p>So this claim was false, you have to do it manually</p>",
        "id": 385655195,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692272125
    },
    {
        "content": "<p>I squash merged <a href=\"https://github.com/leanprover/std4/pull/190\">std4#190</a> and manually cleaned up the coauthors list</p>",
        "id": 385707531,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1692288295
    },
    {
        "content": "<p>I gave up on trying to clean the history of <a href=\"https://github.com/leanprover-community/mathlib4/pull/6019\">#6019</a>, I think we should just squash it before merging</p>",
        "id": 385717530,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1692291809
    },
    {
        "content": "<p>I squashed it.</p>",
        "id": 385789613,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1692322682
    }
]