[
    {
        "content": "<p>I propose certain improvements to <code>Polynomial.rootMultiplicity</code>, let's make a list:</p>\n<ul>\n<li><code>Polynomial.rootMultiplicity</code> should be closely related to <code>Polynomial.trailingDegree</code>, namely <code>p.rootMultiplicity t = (aeval (X + C t) p).natTrailingDegree</code></li>\n<li>Therefore <code>rootMultiplicity_mul</code> should have stronger version similar to <code>le_natTrailingDegree_mul</code>, <code>natTrailingDegree_mul'</code>.</li>\n</ul>",
        "id": 401827990,
        "sender_full_name": "Jz Pan",
        "timestamp": 1699902217
    },
    {
        "content": "<p>Secondly,</p>\n<ul>\n<li><code>rootMultiplicity_sub_one_le_derivative_rootMultiplicity</code> should have a stronger version which doesn't requiring characteristic zero, but only requiring derivative not zero (let's discuss it later after I finish its proof).</li>\n</ul>",
        "id": 401828489,
        "sender_full_name": "Jz Pan",
        "timestamp": 1699902435
    },
    {
        "content": "<ul>\n<li><code>rootMultiplicity_X_sub_C_pow</code> should not need <code>[IsDomain R]</code> (but still need <code>[Nontrivial R]</code>); I believe that there are other lemmas which should not need that either.</li>\n</ul>",
        "id": 401858848,
        "sender_full_name": "Jz Pan",
        "timestamp": 1699916061
    },
    {
        "content": "<p>This is my attempt:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Polynomial.RingDivision</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Polynomial.Derivative</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Classical</span> <span class=\"n\">Polynomial</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Polynomial</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">rootMultiplicity_eq_rootMultiplicity</span> <span class=\"o\">:</span>\n    <span class=\"n\">p.rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">rootMultiplicity</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">hdvd</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">refine</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n    <span class=\"bp\">·</span> <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">map_dvd</span> <span class=\"n\">h</span>\n      <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">AlgHom.toRingHom_eq_coe</span><span class=\"o\">,</span> <span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"n\">map_sub</span><span class=\"o\">,</span> <span class=\"n\">RingHom.coe_coe</span><span class=\"o\">,</span> <span class=\"n\">aeval_X</span><span class=\"o\">,</span> <span class=\"n\">aeval_C</span><span class=\"o\">,</span>\n        <span class=\"bp\">←</span> <span class=\"n\">C_eq_algebraMap</span><span class=\"o\">,</span> <span class=\"n\">add_sub_cancel</span><span class=\"o\">,</span> <span class=\"n\">map_zero</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">h</span>\n    <span class=\"bp\">·</span> <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">map_dvd</span> <span class=\"n\">h</span>\n      <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">AlgHom.toRingHom_eq_coe</span><span class=\"o\">,</span> <span class=\"n\">map_zero</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">,</span> <span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"n\">RingHom.coe_coe</span><span class=\"o\">,</span>\n        <span class=\"n\">aeval_X</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">AlgHom.comp_apply</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">aeval_algHom</span><span class=\"o\">,</span> <span class=\"n\">map_add</span><span class=\"o\">,</span> <span class=\"n\">aeval_C</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">C_eq_algebraMap</span><span class=\"o\">,</span>\n        <span class=\"n\">sub_add_cancel</span><span class=\"o\">,</span> <span class=\"n\">aeval_X_left</span><span class=\"o\">,</span> <span class=\"n\">AlgHom.coe_id</span><span class=\"o\">,</span> <span class=\"n\">id_eq</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">h</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">map_zero</span><span class=\"o\">,</span> <span class=\"n\">dite_true</span><span class=\"o\">,</span> <span class=\"n\">rootMultiplicity_zero</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">h'</span> <span class=\"o\">:</span> <span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">h'</span> <span class=\"bp\">↦</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;|</span> <span class=\"kd\">by</span>\n    <span class=\"n\">apply_fun</span> <span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">h'</span>\n    <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">map_zero</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">AlgHom.comp_apply</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">aeval_algHom</span><span class=\"o\">,</span> <span class=\"n\">map_add</span><span class=\"o\">,</span> <span class=\"n\">aeval_X</span><span class=\"o\">,</span> <span class=\"n\">aeval_C</span><span class=\"o\">,</span>\n      <span class=\"bp\">←</span> <span class=\"n\">C_eq_algebraMap</span><span class=\"o\">,</span> <span class=\"n\">sub_add_cancel</span><span class=\"o\">,</span> <span class=\"n\">aeval_X_left</span><span class=\"o\">,</span> <span class=\"n\">AlgHom.coe_id</span><span class=\"o\">,</span> <span class=\"n\">id_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h'</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">rootMultiplicity_eq_nat_find_of_nonzero</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">rootMultiplicity_eq_nat_find_of_nonzero</span> <span class=\"n\">h'</span><span class=\"o\">]</span>\n  <span class=\"n\">letI</span> <span class=\"o\">:</span> <span class=\"n\">DecidablePred</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span>\n    <span class=\"bp\">@</span><span class=\"n\">Not.decidable</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">decidableDvdMonic</span> <span class=\"n\">p</span> <span class=\"o\">((</span><span class=\"n\">monic_X_sub_C</span> <span class=\"n\">t</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">pow</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)))</span>\n  <span class=\"n\">letI</span> <span class=\"o\">:</span> <span class=\"n\">DecidablePred</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">∣</span> <span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span>\n    <span class=\"bp\">@</span><span class=\"n\">Not.decidable</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">decidableDvdMonic</span> <span class=\"o\">(</span><span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">monic_X_sub_C</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">pow</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)))</span>\n  <span class=\"n\">set</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.find</span> <span class=\"o\">(</span><span class=\"n\">multiplicity_X_sub_C_finite</span> <span class=\"mi\">0</span> <span class=\"n\">h'</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"bp\">←</span> <span class=\"n\">hm</span><span class=\"bp\">;</span> <span class=\"n\">clear_value</span> <span class=\"n\">m</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.find_eq_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hm</span> <span class=\"bp\">⊢</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">hm</span><span class=\"o\">,</span> <span class=\"n\">hm2</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hm</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"n\">hn</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">hdvd</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hdvd</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">hm2</span> <span class=\"n\">n</span> <span class=\"n\">hn</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">rootMultiplicity_zero_eq_natTrailingDegree</span> <span class=\"o\">:</span>\n    <span class=\"n\">p.rootMultiplicity</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">p.natTrailingDegree</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">rootMultiplicity_zero</span><span class=\"o\">,</span> <span class=\"n\">natTrailingDegree_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">rootMultiplicity_eq_nat_find_of_nonzero</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"n\">letI</span> <span class=\"o\">:</span> <span class=\"n\">DecidablePred</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span>\n    <span class=\"bp\">@</span><span class=\"n\">Not.decidable</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">decidableDvdMonic</span> <span class=\"n\">p</span> <span class=\"o\">((</span><span class=\"n\">monic_X_sub_C</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">pow</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)))</span>\n  <span class=\"n\">set</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.find</span> <span class=\"o\">(</span><span class=\"n\">multiplicity_X_sub_C_finite</span> <span class=\"mi\">0</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"bp\">←</span> <span class=\"n\">hm</span><span class=\"bp\">;</span> <span class=\"n\">clear_value</span> <span class=\"n\">m</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.find_eq_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hm</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">hm</span><span class=\"o\">,</span> <span class=\"n\">hm2</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hm</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hm0</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_zero</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">,</span> <span class=\"n\">hm0</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">,</span> <span class=\"n\">pow_one</span><span class=\"o\">,</span> <span class=\"n\">X_dvd_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hm</span>\n    <span class=\"n\">linarith</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hm0</span><span class=\"o\">,</span> <span class=\"n\">natTrailingDegree_le_of_ne_zero</span> <span class=\"n\">hm</span><span class=\"o\">]</span>\n  <span class=\"n\">replace</span> <span class=\"n\">hm0</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.sub_add_cancel</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Nat.pos_of_ne_zero</span> <span class=\"n\">hm0</span>\n  <span class=\"n\">replace</span> <span class=\"n\">hm2</span> <span class=\"o\">:=</span> <span class=\"n\">hm2</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Nat.le_of_eq</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">hm0</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_zero</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">,</span> <span class=\"n\">hm0</span><span class=\"o\">,</span> <span class=\"n\">not_not</span><span class=\"o\">,</span> <span class=\"n\">X_pow_dvd_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hm</span> <span class=\"n\">hm2</span>\n  <span class=\"n\">replace</span> <span class=\"n\">hm</span> <span class=\"o\">:</span> <span class=\"n\">p.coeff</span> <span class=\"n\">m</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">↦</span> <span class=\"n\">hm</span> <span class=\"bp\">&lt;|</span> <span class=\"k\">fun</span> <span class=\"n\">d</span> <span class=\"n\">hd</span> <span class=\"bp\">↦</span> <span class=\"kd\">by</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">hd'</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">hm2</span> <span class=\"n\">d</span> <span class=\"n\">hd'</span>\n    <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">Nat.eq_of_lt_succ_of_not_lt</span> <span class=\"n\">hd</span> <span class=\"n\">hd'</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">le_antisymm</span> <span class=\"o\">(</span><span class=\"n\">le_natTrailingDegree</span> <span class=\"n\">h</span> <span class=\"n\">hm2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">natTrailingDegree_le_of_ne_zero</span> <span class=\"n\">hm</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">rootMultiplicity_eq_natTrailingDegree</span> <span class=\"o\">:</span>\n    <span class=\"n\">p.rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">natTrailingDegree</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">rootMultiplicity_eq_rootMultiplicity</span><span class=\"o\">,</span> <span class=\"n\">rootMultiplicity_zero_eq_natTrailingDegree</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">rootMultiplicity_mul_X_sub_C_pow'</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">p.rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h'</span> <span class=\"o\">:</span> <span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">h'</span> <span class=\"bp\">↦</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;|</span> <span class=\"kd\">by</span>\n    <span class=\"n\">apply_fun</span> <span class=\"n\">aeval</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">h'</span>\n    <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">map_zero</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">AlgHom.comp_apply</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">aeval_algHom</span><span class=\"o\">,</span> <span class=\"n\">map_add</span><span class=\"o\">,</span> <span class=\"n\">aeval_X</span><span class=\"o\">,</span> <span class=\"n\">aeval_C</span><span class=\"o\">,</span>\n      <span class=\"bp\">←</span> <span class=\"n\">C_eq_algebraMap</span><span class=\"o\">,</span> <span class=\"n\">sub_add_cancel</span><span class=\"o\">,</span> <span class=\"n\">aeval_X_left</span><span class=\"o\">,</span> <span class=\"n\">AlgHom.coe_id</span><span class=\"o\">,</span> <span class=\"n\">id_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h'</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">rootMultiplicity_eq_natTrailingDegree</span><span class=\"o\">,</span> <span class=\"n\">map_mul</span><span class=\"o\">,</span> <span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"n\">map_sub</span><span class=\"o\">,</span> <span class=\"n\">aeval_X</span><span class=\"o\">,</span>\n    <span class=\"n\">aeval_C</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">C_eq_algebraMap</span><span class=\"o\">,</span> <span class=\"n\">add_sub_cancel</span><span class=\"o\">,</span> <span class=\"n\">natTrailingDegree_mul_X_pow</span> <span class=\"n\">h'</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">rootMultiplicity_mul_X_sub_C_pow''</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">p.rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n  <span class=\"n\">rootMultiplicity_mul_X_sub_C_pow'</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"n\">left_ne_zero_of_mul</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">rootMultiplicity_X_sub_C_pow'</span> <span class=\"o\">[</span><span class=\"n\">Nontrivial</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"o\">((</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">rootMultiplicity_mul_X_sub_C_pow'</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">RingHom.map_one_ne_zero</span> <span class=\"n\">C</span>\n  <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">rootMultiplicity_C</span><span class=\"o\">,</span> <span class=\"n\">map_one</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">rootMultiplicity_sub_one_le_derivative_rootMultiplicity_of_ne_zero</span>\n    <span class=\"o\">(</span><span class=\"n\">hnezero</span> <span class=\"o\">:</span> <span class=\"n\">derivative</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">p.rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">derivative</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">rootMultiplicity</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">hp</span> <span class=\"o\">:=</span> <span class=\"n\">divByMonic_mul_pow_rootMultiplicity_eq</span> <span class=\"n\">p</span> <span class=\"n\">t</span>\n  <span class=\"n\">set</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"n\">p.rootMultiplicity</span> <span class=\"n\">t</span>\n  <span class=\"n\">set</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"n\">p</span> <span class=\"bp\">/ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">m</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">derivative</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">derivative</span> <span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"n\">derivative_mul</span><span class=\"o\">,</span> <span class=\"n\">derivative_pow</span><span class=\"o\">,</span> <span class=\"n\">map_sub</span><span class=\"o\">,</span> <span class=\"n\">derivative_X</span><span class=\"o\">,</span> <span class=\"n\">derivative_C</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">derivative</span> <span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">this.symm</span> <span class=\"bp\">▸</span> <span class=\"n\">rootMultiplicity_mul_X_sub_C_pow''</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"n\">this</span> <span class=\"bp\">▸</span> <span class=\"n\">hnezero</span><span class=\"o\">)</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.le_add_left</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">this.symm</span> <span class=\"bp\">▸</span> <span class=\"n\">rootMultiplicity_mul_X_sub_C_pow''</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"n\">this</span> <span class=\"bp\">▸</span> <span class=\"n\">hnezero</span><span class=\"o\">)</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">m.sub_le</span> <span class=\"mi\">1</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">trans</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Nat.le_add_left</span> <span class=\"n\">m</span> <span class=\"n\">_</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">this.symm</span> <span class=\"bp\">▸</span> <span class=\"n\">rootMultiplicity_add</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"n\">this</span> <span class=\"bp\">▸</span> <span class=\"n\">hnezero</span><span class=\"o\">)</span>\n  <span class=\"n\">refine</span> <span class=\"n\">le_min</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">trans</span> <span class=\"n\">this</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">rootMultiplicity_mul_X_sub_C_pow''</span> <span class=\"n\">t</span> <span class=\"n\">h1</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">m.sub_le</span> <span class=\"mi\">1</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">trans</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Nat.le_add_left</span> <span class=\"n\">m</span> <span class=\"n\">_</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">rootMultiplicity_mul_X_sub_C_pow''</span> <span class=\"n\">t</span> <span class=\"n\">h2</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.le_add_left</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">t</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">isRoot_iterate_derivative_of_lt_rootMultiplicity</span>\n    <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">p.rootMultiplicity</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">derivative</span><span class=\"bp\">^</span><span class=\"o\">[</span><span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">IsRoot</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">revert</span> <span class=\"n\">p</span>\n  <span class=\"n\">induction'</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">ih</span>\n  <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">p</span> <span class=\"n\">h</span>\n    <span class=\"n\">exact</span> <span class=\"n\">rootMultiplicity_pos'.1</span> <span class=\"n\">h</span> <span class=\"bp\">|&gt;.</span><span class=\"mi\">2</span>\n  <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">p</span> <span class=\"n\">h</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Function.iterate_succ</span><span class=\"o\">,</span> <span class=\"n\">Function.comp_apply</span><span class=\"o\">]</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">hzero</span> <span class=\"o\">:</span> <span class=\"n\">derivative</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n    <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hzero</span><span class=\"o\">,</span> <span class=\"n\">iterate_derivative_zero</span><span class=\"o\">,</span> <span class=\"n\">IsRoot.def</span><span class=\"o\">,</span> <span class=\"n\">eval_zero</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">ih</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Nat.lt_of_lt_of_le</span> <span class=\"o\">(</span><span class=\"n\">Nat.lt_pred_of_succ_lt</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">rootMultiplicity_sub_one_le_derivative_rootMultiplicity_of_ne_zero</span> <span class=\"n\">t</span> <span class=\"n\">hzero</span><span class=\"o\">)</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">Polynomial</span>\n</code></pre></div>",
        "id": 401872934,
        "sender_full_name": "Jz Pan",
        "timestamp": 1699922925
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"366779\">Jz Pan</span> <a href=\"#narrow/stream/113488-general/topic/possible.20improvements.20to.20.60Polynomial.2ErootMultiplicity.60/near/401827990\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Therefore <code>rootMultiplicity_mul</code> should have stronger version similar to <code>le_natTrailingDegree_mul</code>, <code>natTrailingDegree_mul'</code>.</li>\n</ul>\n</blockquote>\n<p>However, the condition is very hard to describe <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>. So far the only useful one is <code>rootMultiplicity_mul_X_sub_C_pow''</code>.</p>",
        "id": 401873748,
        "sender_full_name": "Jz Pan",
        "timestamp": 1699923234
    },
    {
        "content": "<p>I opened a draft pull request <a href=\"https://github.com/leanprover-community/mathlib4/pull/8563\">#8563</a>. Comments welcome.</p>",
        "id": 403494174,
        "sender_full_name": "Jz Pan",
        "timestamp": 1700616201
    }
]