[
    {
        "content": "<p>How can I create a Free Group of a custom inductive datatype in lean4? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">AB</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span>\n  <span class=\"bp\">|</span> <span class=\"n\">b</span>\n</code></pre></div>",
        "id": 392656457,
        "sender_full_name": "Christian K",
        "timestamp": 1695453998
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FreeGroup#doc\">docs#FreeGroup</a>, as <code>FreeGroup AB</code></p>",
        "id": 392657162,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695454631
    },
    {
        "content": "<p>If you search the <a href=\"https://leanprover-community.github.io/mathlib4_docs/\">docs</a> for free group (click \"google site search\") then you'll get led to <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/FreeGroup.html\">this page</a> from which you can deduce that the import is <code>import Mathlib.GroupTheory.FreeGroup</code> and you can then make the free group with <code>FreeGroup AB</code>.</p>",
        "id": 392657166,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1695454635
    },
    {
        "content": "<p>OK thanks, i tried using this Mathlib package before but i just got errors along the lines of \"couldn*t construct instance of....\" but now it works.<br>\nI looked into the FreeGroup.lean source file but i don't understand how i would prove, that a certain variable is an Element of this Free Group:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.FreeGroup</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">AB</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span>\n  <span class=\"bp\">|</span> <span class=\"n\">b</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">freegroup</span><span class=\"o\">:</span> <span class=\"n\">Freegroup</span> <span class=\"n\">AB</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">a_in_freegroup</span><span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">AB</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">freegroup</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>But, more importantly, I want to prove that if i Take away the First Element of all Words that start with a, that I would get all the words that <br>\nstart with a^-1, b and b^-1. How would a formulate this proof?</p>",
        "id": 392659889,
        "sender_full_name": "Christian K",
        "timestamp": 1695456763
    },
    {
        "content": "<p><code>Freegroup AB</code> is the <em>type</em> of all (reduced) words in <code>AB</code>. So when you write <code>freegroup: Freegroup AB</code>, then <code>freegroup</code> isn’t <em>the</em> free group, but an arbitrary element of it.</p>",
        "id": 392660564,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1695457311
    },
    {
        "content": "<p>The canonical injection from the carrier type into the free group is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FreeGroup.of#doc\">docs#FreeGroup.of</a></p>",
        "id": 392660698,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1695457391
    },
    {
        "content": "<p>I am not sure how well the <code>FreeGroup API</code> is set up to talk about removing elements etc. You can use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FreeGroup.toWord#doc\">docs#FreeGroup.toWord</a> to drop to a list of single elements.</p>",
        "id": 392660921,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1695457545
    }
]