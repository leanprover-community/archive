[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> pointed out that a good way to deal with characters that are hard to distinguish from each other is to change their color in VS Code. I could start developing a custom color scheme from scratch; however, before I do so, I would like to ask if somebody has already done the job.</p>\n<p>Do you have a good color scheme for Lean in VS Code you would like to share?</p>",
        "id": 375170741,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689323916
    },
    {
        "content": "<p>This would add extra steps to the Lean 4 setup: download extension X; download color scheme Y; set color scheme Y</p>\n<p>If this is to become a community thing, it would be better if it were implemented in the <code>lean4</code> VS Code extension, with a default color scheme coming out of the box.</p>\n<p>Not to put your good intentions down <span class=\"user-mention\" data-user-id=\"417654\">@Martin Dvořák</span>. I'm just coming up with an explanation as to why ppl might not have engaged with your proposal.</p>",
        "id": 375500147,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1689416151
    },
    {
        "content": "<p>I have no specific color palette in mind, but some of the ones that are designed with colorblindness in mind look really good (imo better than more standard color schemes)</p>",
        "id": 375507593,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1689417994
    },
    {
        "content": "<p>I believe that a middle ground exists. Somebody can share their color scheme. Then a few Lean users (who care a lot about visual discernibility of characters, like I do) use it. I didn't expect the color scheme to go into the official installation instructions.</p>",
        "id": 375926853,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689581600
    },
    {
        "content": "<p>Let me use this occasion to shill my <a href=\"https://github.com/leanprover/lean4/issues/2305\">improved semantic highlighting RFC</a> :).</p>",
        "id": 375955946,
        "sender_full_name": "Max Nowak 🐉",
        "timestamp": 1689587477
    },
    {
        "content": "<p>I created a simple color settings for Lean 4 in VS Code:<br>\n<a href=\"https://github.com/madvorak/vscode-lean4-colors/blob/main/settings.json\">https://github.com/madvorak/vscode-lean4-colors/blob/main/settings.json</a><br>\nIt requires this extension:<br>\n<a href=\"https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-highlight\">https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-highlight</a><br>\nIt is supposed to look nice only with dark color themes such as Monokai.</p>\n<p>It works for me; however, it is very messy (horribly written).<br>\nUsing it is not recommended, but improvements are welcome!</p>",
        "id": 376724216,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689783718
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/OMVpgt31sxnPkapTeRoVm2Eb/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/OMVpgt31sxnPkapTeRoVm2Eb/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/OMVpgt31sxnPkapTeRoVm2Eb/image.png\"></a></div>",
        "id": 376729464,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689784820
    },
    {
        "content": "<p>It seems like there is less semantic distinction with this theme than with the default VS Code theme. Is there a reason?</p>",
        "id": 376736083,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1689786226
    },
    {
        "content": "<p>I can tell you that <a href=\"https://github.com/madvorak/vscode-lean4-colors/blob/7ec558e75ba5adf74e91370be99c34bca04b2b23/settings.json#L7-L12\">these lines</a> make that happen, but I can't tell you why that's useful</p>",
        "id": 376738317,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689786761
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20colors/near/376736083\">said</a>:</p>\n<blockquote>\n<p>It seems like there is less semantic distinction with this theme than with the default VS Code theme. Is there a reason?</p>\n</blockquote>\n<p>I didn't like it colorful.</p>",
        "id": 376762378,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689792592
    },
    {
        "content": "<p>It would be cool if the semantic highlighter could attach scopes to notation based on the head symbol</p>",
        "id": 376785394,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689798919
    },
    {
        "content": "<p>That way you wouldn't have to resort to regex to do what you did there</p>",
        "id": 376785424,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689798932
    },
    {
        "content": "<p>I'm not sure if this is what you are saying, but you can get e.g. a red sorry with the following in your settings.json</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"s2\">\"editor.semanticTokenColorCustomizations\"</span><span class=\"o\">:</span> <span class=\"o\">{</span>\n        <span class=\"s2\">\"enabled\"</span><span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">,</span>\n        <span class=\"s2\">\"rules\"</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"s2\">\"leanSorryLike\"</span><span class=\"o\">:</span> <span class=\"s2\">\"#FF0000\"</span><span class=\"o\">},</span>\n    <span class=\"o\">},</span>\n</code></pre></div>",
        "id": 376788474,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1689800007
    },
    {
        "content": "<p>That's exactly what I meant; and I was suggesting that you could have some generated <code>leanNotation.{headSymbolname}</code> tokens to do things like highlight ands/ors/iffs as Martin does above</p>",
        "id": 376790116,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689800538
    },
    {
        "content": "<p>While people are thinking about colours, does anyone know the quickest route to having VSCode render<br>\n<code>X says Y</code> with <code>Y</code> in a faint grey? Semantic highlighting is not something I've learnt about yet!</p>",
        "id": 376816361,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689813086
    },
    {
        "content": "<p>I find it pretty interesting how our deeply our preferences about code coloring differ.<br>\n(1) Some people (like me) want lexical highlighting only.<br>\n(2) Most people use syntactic highlighting.<br>\n(3) Some people want semantic highlighting (I totally support you; I just want it simple).</p>",
        "id": 376864677,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689835901
    },
    {
        "content": "<p>I feel like I'm missing out somehow because I have no idea what any of these options even mean and I suspect I pay no attention to what colour things are.</p>",
        "id": 376867579,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689836706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20colors/near/376867579\">said</a>:</p>\n<blockquote>\n<p>I feel like I'm missing out somehow because I have no idea what any of these options even mean and I suspect I pay no attention to what colour things are.</p>\n</blockquote>\n<p>Would you feel more comfortable with no coloring at all? I forgot to add option (0).</p>",
        "id": 376867874,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689836784
    },
    {
        "content": "<p>I don't care what the colours are</p>",
        "id": 376872685,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689838182
    },
    {
        "content": "<p>All I'm observing is that the fact that I'm not looking at the colours might mean I'm missing out on something, but I don't know what</p>",
        "id": 376872915,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689838248
    },
    {
        "content": "<p>This question is more technical:<br>\nDoes the lean4 extension in VS Code distinguish between keywords and tactics?<br>\nIf I understand what I am looking at, both keywords and tactics have <code>keyword.other</code> as their semantic token type.</p>",
        "id": 376873359,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689838385
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20colors/near/376872915\">said</a>:</p>\n<blockquote>\n<p>All I'm observing is that the fact that I'm not looking at the colours might mean I'm missing out on something, but I don't know what</p>\n</blockquote>\n<p>I wouldn't worry about it.</p>",
        "id": 376873398,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689838400
    },
    {
        "content": "<p>The colours definitely help me, since I find typing code in comments much harder than outside of comments, but I would not really know what kind of colouring I prefer.  I am fairly happy with the status quo, but would likely also be happy with a different one!</p>",
        "id": 376873450,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1689838419
    },
    {
        "content": "<p>BTW, I have just learnt that displaying variables in italics is a bad idea because <code>a</code> and <code>α</code> look almost identical in italics [I am using JetBrains Mono; if you have a different experience with a different font, I might change my mind].</p>",
        "id": 376874601,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689838727
    },
    {
        "content": "<p>There is a paper I saw somewhere where they investigated how coloring affected readability but I can't seem to find it in searching again.</p>\n<p>But I think it boils down to \"do you like looking at a screen that seems to have 4-6 colors going on, or one where there are &gt;10 and barely any of the 10 colors is dominant\"</p>",
        "id": 376874756,
        "sender_full_name": "Julian Berman",
        "timestamp": 1689838785
    },
    {
        "content": "<p>(The former being more like traditional syntax highlighting, and the latter is semantic highlighting giving lots more ability to differentiate between what kind of element a thing is and then people love making those super colorful)</p>",
        "id": 376874928,
        "sender_full_name": "Julian Berman",
        "timestamp": 1689838833
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20colors/near/376874756\">said</a>:</p>\n<blockquote>\n<p>do you like looking at a screen that seems to have 4-6 colors</p>\n</blockquote>\n<p>I am definitely here.</p>",
        "id": 376874995,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689838855
    },
    {
        "content": "<p>I actually also prefer the first and yet have semantic highlighting enabled because you can then tweak your own color scheme so that the 10+ colors are quite close to each other, such that they don't distract you, but if you have doubts, they're indeed slightly differing so you can then stare closely when needed</p>",
        "id": 376875062,
        "sender_full_name": "Julian Berman",
        "timestamp": 1689838878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20colors/near/376816361\">said</a>:</p>\n<blockquote>\n<p>While people are thinking about colours, does anyone know the quickest route to having VSCode render<br>\n<code>X says Y</code> with <code>Y</code> in a faint grey? Semantic highlighting is not something I've learnt about yet!</p>\n</blockquote>\n<p>Yes, if you use the same semantic highlight used for \"unused variables\" then it will gray the text (and this works even if the text has other colors, it dims whatever it is)</p>",
        "id": 376877391,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689839481
    },
    {
        "content": "<p>I don't even know which repository I would be looking at to start making <code>says Y</code> highlight differently...</p>",
        "id": 376882084,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689840552
    },
    {
        "content": "<p>unfortunately semantic highlighting is not user-extensible right now, so in order to do what I said you would have to emit a message data to which <code>MessageData.isUnusedVariableWarning</code> returns true (i.e. faking an output of the <code>unusedVariables</code> linter), and even if you do you will have to put a diagnostic over the span, so you get your choice of a red, yellow, or blue/green squiggle in addition to the faded text</p>",
        "id": 376883187,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689840788
    },
    {
        "content": "<p>to do this properly you would need to PR to lean4 core</p>",
        "id": 376883329,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689840824
    },
    {
        "content": "<p>Okay. In that case I think it can be safely left until after we start using <code>says</code>!</p>",
        "id": 376885885,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1689841355
    },
    {
        "content": "<p>How hard would it be to add the choice of \"no squiggle\"?</p>",
        "id": 376887104,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1689841632
    },
    {
        "content": "<p>the hard part would be making it sufficiently extensible that you don't need to define <code>says</code> in core to get any highlighting at all</p>",
        "id": 376889912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1689842269
    },
    {
        "content": "<p>I wasn’t aware of a “says” tactic. I’m guessing it’s supposed to simply repeat the type of a variable in order to make tactic scripts more legible. In that case, just be aware we could go with inlay type hints similar to how rust-analyzer does it. This would come with problems though, such as those type hints not being in the actual code, so they wouldn’t show up on GitHub. But users could customize which hints they want to show. I haven’t looked into this.</p>",
        "id": 376899275,
        "sender_full_name": "Max Nowak 🐉",
        "timestamp": 1689844061
    },
    {
        "content": "<p>neovim recently got support for inlay hints (and emacs has them too IIRC). But yeah that would be quite nice to start taking advantage of for some sort of use</p>",
        "id": 376900237,
        "sender_full_name": "Julian Berman",
        "timestamp": 1689844252
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"416280\">Max Nowak 🐺</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20colors/near/376899275\">said</a>:</p>\n<blockquote>\n<p>I’m guessing it’s supposed to simply repeat the type of a variable in order to make tactic scripts more legible</p>\n</blockquote>\n<p>No, the intention is to run the fast, verbose version while keeping the original version around for re-generation. See <a href=\"https://github.com/leanprover-community/mathlib4/pull/5980\">#5980</a> for details.</p>",
        "id": 376905279,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1689845159
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Recommended.20colors/near/376889912\">said</a>:</p>\n<blockquote>\n<p>the hard part would be making it sufficiently extensible that you don't need to define <code>says</code> in core to get any highlighting at all</p>\n</blockquote>\n<p>Presumably we could have some kind of <code>generated</code> syntax marker (that core knows about) that the <code>says </code>notation attaches to the RHS?</p>",
        "id": 376913502,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689846829
    },
    {
        "content": "<p>Level up!<br>\n<a href=\"/user_uploads/3121/ZjbTcTmEnw7mEDtKF6NZBZ7H/image.png\">image.png</a><br>\nI am pretty sure some of the lines in<br>\n<a href=\"https://github.com/madvorak/vscode-lean4-colors/blob/main/settings.json\">https://github.com/madvorak/vscode-lean4-colors/blob/main/settings.json</a><br>\nare redundant; however, I am loo lazy to refactor it.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ZjbTcTmEnw7mEDtKF6NZBZ7H/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/ZjbTcTmEnw7mEDtKF6NZBZ7H/image.png\"></a></div>",
        "id": 376930459,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1689850215
    },
    {
        "content": "<p>FYI, I updated my color settings:<br>\n<a href=\"https://github.com/madvorak/vscode-lean4-colors\">https://github.com/madvorak/vscode-lean4-colors</a></p>\n<p>Even if you don't like my esthetic preferences, you might find it useful because it shows how to override the defaults.</p>",
        "id": 386870352,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1692797703
    }
]