[
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/6042\">#6042</a> the <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/5626841496/job/15248409473?pr=6042\">CI run 15248409473</a> fails at the simpNF linter and produces the following output. I thought it could have been the simp lemmas I added (similar to <a href=\"#narrow/stream/287929-mathlib4/topic/changing.20algebra.20instance.20priorities\">this zulip thread</a> interfering with something so I disabled all simp lemmas in the PR. Still the same thing!</p>\n<p>I also looked at zulip discussion <a href=\"#narrow/stream/287929-mathlib4/topic/!4.234852.20heartbeats.20of.20the.20linter\">here</a> and <a href=\"#narrow/stream/287929-mathlib4/topic/changing.20algebra.20instance.20priorities\">here</a> and searching for <code>simpNF</code> but could not find something applicable.</p>\n<p>Note again the PR does not touch these files <code>Mathlib/Data/Fin/Basic.lean</code> and  <code>Mathlib/Topology/ContinuousFunction/Bounded.lean</code> where the linter is reporting errors</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>/- The `simpNF` linter reports:\nSOME SIMP LEMMAS ARE NOT IN SIMP-NORMAL FORM.\nsee note [simp-normal form] for tips how to debug this.\nhttps://leanprover-community.github.io/mathlib_docs/notes.html#simp-normal%20form -/\n-- Mathlib.Data.Fin.Basic\nError: ./Mathlib/Data/Fin/Basic.lean:959:1: error: Fin.add_one_lt_iff LINTER FAILED:\nsimplify fails on left-hand side:\nfailed to synthesize\n  CovariantClass (Fin (n + 2)) (Fin (n + 2)) (fun x x_1 =&gt; x + x_1) fun x x_1 =&gt; x &lt; x_1\n(deterministic) timeout at 'typeclass', maximum number of heartbeats (20000) has been reached (use 'set_option synthInstance.maxHeartbeats &lt;num&gt;' to set the limit)\nError: ./Mathlib/Data/Fin/Basic.lean:987:1: error: Fin.lt_add_one_iff LINTER FAILED:\nsimplify fails on left-hand side:\nfailed to synthesize\n  CovariantClass (Fin (n + 1)) (Fin (n + 1)) (fun x x_1 =&gt; x + x_1) fun x x_1 =&gt; x &lt; x_1\n(deterministic) timeout at 'typeclass', maximum number of heartbeats (20000) has been reached (use 'set_option synthInstance.maxHeartbeats &lt;num&gt;' to set the limit)\nError: ./Mathlib/Data/Fin/Basic.lean:2039:1: error: Fin.sub_one_lt_iff LINTER FAILED:\nsimplify fails on left-hand side:\nfailed to synthesize\n  CovariantClass (Fin (n + 1)) (Fin (n + 1)) (fun x x_1 =&gt; x + x_1) fun x x_1 =&gt; x &lt; x_1\n(deterministic) timeout at 'typeclass', maximum number of heartbeats (20000) has been reached (use 'set_option synthInstance.maxHeartbeats &lt;num&gt;' to set the limit)\n\n-- Mathlib.Topology.ContinuousFunction.Bounded\nError: ./Mathlib/Topology/ContinuousFunction/Bounded.lean:917:1: error: BoundedContinuousFunction.norm_normComp.{u, v} LINTER FAILED:\nsimplify fails on left-hand side:\nfailed to synthesize\n  Nontrivial (BoundedContinuousFunction α ℝ)\n(deterministic) timeout at 'typeclass', maximum number of heartbeats (20000) has been reached (use 'set_option synthInstance.maxHeartbeats &lt;num&gt;' to set the limit)\nmake: *** [GNUmakefile:16: lint] Error 1\nError: The process '/usr/bin/env' failed with exit code 2\nRemove matcher: gcc\n</code></pre></div>",
        "id": 377439790,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1689977965
    },
    {
        "content": "<p>Any thoughts as to what could be the source of these problems in the linter in CI</p>",
        "id": 377439964,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1689978013
    },
    {
        "content": "<p>I had the same issue with exactly those three <code>Fin</code> simp lemmas in <a href=\"https://github.com/leanprover-community/mathlib4/pull/5959\">#5959</a>. Same error. Note that the instance which it's failing to synthesize doesn't exist because the class is not covariant with respect to those operations.</p>\n<p>I fixed the issue with the rather brutal approach of just removing <code>@[simp]</code> from the lemmas in question; mathlib still compiled, so I think the lemmas are somehow bad in some way but we're never using them anyway (perhaps because they never fire).</p>\n<p>I can't comment on the <code>Mathlib.Topology.ContinuousFunction.Bounded</code> lemma. I was messing around with instance priorities in some low-level file so weird failures were perhaps not surprising for me. I'm a little more surprised that your work is causing this issue. It might be worthwhile tracking down what the heck is going on with these failures.</p>\n<p>By the way, on a pretty much unrelated issue, your PR is essentially unmergeable because it is so large. We recommend PRs of &lt;= 300 lines, and for newcomers we prefer &lt;= 150 lines of changes because we're fussy about code style. I conjecture that your PR will just sit going stale for a long time in its current state. Can you break off e.g. just one file and PR that instead?</p>",
        "id": 377442796,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1689979340
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/simpNF.20linter/near/377442796\">said</a>:</p>\n<blockquote>\n<p>I can't comment on the <code>Mathlib.Topology.ContinuousFunction.Bounded</code> lemma. I was messing around with instance priorities in some low-level file so weird failures were perhaps not surprising for me. I'm a little more surprised that your work is causing this issue. It might be worthwhile tracking down what the heck is going on with these failures.<br>\n</p>\n</blockquote>\n<p>Any suggestions on how to do this tracking down? Is there some verbose mode for the linters to emit more information ? </p>\n<p>By the way I notice the simps in these locations are just simps, i.e. not squeezed simps or (lean 4 <code>simp?</code>). Is there any thought behind putting them as <code>simp</code> without the concrete lemmas? Is there a problem with me doing <code>simp?</code> and replacing with <code>simp only</code> [... relevant lemmas]</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/simpNF.20linter/near/377442796\">said</a>:</p>\n<blockquote>\n<p>By the way, on a pretty much unrelated issue, your PR is essentially unmergeable because it is so large. We recommend PRs of &lt;= 300 lines, and for newcomers we prefer &lt;= 150 lines of changes because we're fussy about code style. I conjecture that your PR will just sit going stale for a long time in its current state. Can you break off e.g. just one file and PR that instead?</p>\n</blockquote>\n<p>Ouch. That is going to be a psychologically draining process! <br>\nOn that note are there any contribution guidelines and style guides somewhere? They might help me (and others) avoid some annoying painful mistakes</p>",
        "id": 377445110,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1689980505
    },
    {
        "content": "<p>Do <a href=\"https://leanprover-community.github.io/contribute/style.html\">the style guides for mathlib3</a> still apply?</p>",
        "id": 377445508,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1689980714
    },
    {
        "content": "<p>Not the ones about whitespace, at least not without modification</p>",
        "id": 377445736,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1689980819
    },
    {
        "content": "<p>Well just looking at your project it seems some of the files make sense individually and PRing those one by one would be a good start.<br>\nThe style guide for mathlib3 is mostly still in effect, but with some changes of course. The spacing around arguments and in terms looks a bit strange in your code, if you look at the code in mathlib4 you can find many examples of how it should be. Maybe if you open one file as a PR first we can give you some good line by line feedback (like <code>RankMulIsUnit.lean</code> does that really depend on <code>IsROrCStarOrderedRing</code>?)</p>",
        "id": 377446199,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1689981051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/simpNF.20linter/near/377446199\">said</a>:</p>\n<blockquote>\n<p>Well just looking at your project it seems some of the files make sense individually and PRing those one by one would be a good start.<br>\nThe style guide for mathlib3 is mostly still in effect, but with some changes of course. The spacing around arguments and in terms looks a bit strange in your code, if you look at the code in mathlib4 you can find many examples of how it should be. Maybe if you open one file as a PR first we can give you some good line by line feedback (like <code>RankMulIsUnit.lean</code> does that really depend on <code>IsROrCStarOrderedRing</code>?)</p>\n</blockquote>\n<p>OK on that last point here is <a href=\"https://github.com/leanprover-community/mathlib4/pull/6051\">#6051</a>. You are right it does not depend on <code>IsROrCStarOrderedRing</code>.</p>",
        "id": 377452579,
        "sender_full_name": "MohanadAhmed",
        "timestamp": 1689984394
    },
    {
        "content": "<p>A few of us have now left comments on that first PR. Please make sure to also apply the suggestions to your later files, where they generalise.</p>",
        "id": 377712663,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1690075745
    },
    {
        "content": "<p>Another couple of things to add about this process:</p>\n<blockquote>\n<p>Ouch. That is going to be a psychologically draining process!</p>\n</blockquote>\n<p>Don't think like that! The work is a useful addition to mathlib (you convinced me of this in Leiden!) and will get there; it's just that the process of getting it there isn't \"dump it all in one PR\", it's \"write it all\" (which you did) \"and then make several PRs\" (which you're now doing). In fact the process you went through (writing a bunch of code in one batch and then PRing it in chunks) is normal for projects of this size.</p>\n<blockquote>\n<p>On that note are there any contribution guidelines and style guides somewhere? They might help me (and others) avoid some annoying painful mistakes</p>\n</blockquote>\n<p>I would \"learn on the job\", given where we are now. Make the PRs, small chunks at first, and you'll get feedback from the community which will just show you by example the kind of guidelines which have been figured out by the community.</p>",
        "id": 377748274,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690094666
    }
]