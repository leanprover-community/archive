[
    {
        "content": "<p>Hi, I'm new here and have a simple question. I just installed Lean with mathlib following <a href=\"https://leanprover-community.github.io/install/project.html\">https://leanprover-community.github.io/install/project.html</a> in Lean 4. I imported \"import Mathlib.Data.Nat.Log\" and am trying to use expressions like \"log 2 8\" but getting the error \"function expected at log, term has type ?m.15\". I'm not sure what this means. Could someone please advise?</p>",
        "id": 387390837,
        "sender_full_name": "J Li",
        "timestamp": 1693030350
    },
    {
        "content": "<p>Another question: say I am looking for a logarithm function in mathlib, what's the easiest way to search for it?</p>",
        "id": 387391367,
        "sender_full_name": "J Li",
        "timestamp": 1693030851
    },
    {
        "content": "<p>You need to either <code>open Nat</code> or write <code>Nat.log 2 8</code></p>",
        "id": 387391889,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1693031383
    },
    {
        "content": "<p>Thanks, is there any way to do it for real numbers?</p>",
        "id": 387391958,
        "sender_full_name": "J Li",
        "timestamp": 1693031409
    },
    {
        "content": "<p>yes, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Real.log#doc\">docs#Real.log</a></p>",
        "id": 387391993,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1693031454
    },
    {
        "content": "<p>so to use this I would need to do import Mathlib.Analysis.SpecialFunctions.Log.Basic, and then how do I call the log function?</p>",
        "id": 387392169,
        "sender_full_name": "J Li",
        "timestamp": 1693031617
    },
    {
        "content": "<p>any reason Basic.Real.log doesn't work?</p>",
        "id": 387392179,
        "sender_full_name": "J Li",
        "timestamp": 1693031630
    },
    {
        "content": "<p>i'm getting this error <code>failed to compile definition, consider marking it as 'noncomputable' because it depends on 'Real.instDivisionRingReal', and it does not have executable code</code></p>",
        "id": 387392358,
        "sender_full_name": "J Li",
        "timestamp": 1693031765
    },
    {
        "content": "<p>yes, you need to import the corresponding file and the real logarithm is called <code>Real.log</code> not <code>Basic.Real.log</code>. Note also that you cannot evaluate the logarithm, but you can prove things about it.</p>",
        "id": 387392596,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1693031999
    },
    {
        "content": "<p>sorry, why can't I evaluate the logarithm?</p>",
        "id": 387392683,
        "sender_full_name": "J Li",
        "timestamp": 1693032066
    },
    {
        "content": "<p>The real numbers are implemented in mathlib in a way that doesn't support direct evaluation, but you could use <code>#norm_num Real.log 1</code> if I'm getting the syntax right</p>",
        "id": 387394100,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1693033371
    },
    {
        "content": "<p>norm_num does not know logarithms, although that particular example can be solved by simp</p>",
        "id": 387394392,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693033640
    },
    {
        "content": "<p>Well, if anything is going to work here in some generality, it's <code>norm_num</code>. That doesn't mean it already works, though</p>",
        "id": 387406295,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1693041055
    },
    {
        "content": "<p>well, there is the fundamental issue that it's not clear what you would want <code>Real.log 2</code> to \"evaluate\" to</p>",
        "id": 387406588,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693041259
    },
    {
        "content": "<p>keeping in mind that norm_num is not an approximation tactic, it proves equalities</p>",
        "id": 387406620,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1693041300
    }
]