[
    {
        "content": "<p>We had endless conversation about lemmas which don't have names in maths and need a name in a proof assistant. But what about theorems that do have a name? Now in mathlib we have the squeeze theorem, that some mathematicians call the sandwich theorem and French mathematicians call the \"théorème des gendarmes\" (gendarme is a military version of policeman) but <a href=\"https://github.com/leanprover/mathlib/blob/fe0f2a34b2bc71d480c5fc7766d889e0a4de3ccd/analysis/topology/topological_structures.lean#L346\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/fe0f2a34b2bc71d480c5fc7766d889e0a4de3ccd/analysis/topology/topological_structures.lean#L346\">mathlib</a> calls it: <code>tendsto_of_tendsto_of_tendsto_of_le_of_le</code> and we have Lagrange's theorem on the order of subgroups called <a href=\"https://github.com/leanprover/mathlib/blob/b97b7c38416d4f6f258882f807458d4f980976ef/group_theory/subgroup.lean#L88\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/b97b7c38416d4f6f258882f807458d4f980976ef/group_theory/subgroup.lean#L88\">in mathlib</a> <code>group_equiv_cosets_times_subgroup</code>. Isn't it slightly problematic?</p>",
        "id": 123598899,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520842645
    },
    {
        "content": "<p>At least the squeeze theorem can be found by docstring grep</p>",
        "id": 123598900,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520842659
    },
    {
        "content": "<p>I always thought that those names made it harder to learn a subject. For instance, I came across Abelian groups multiple times not remembering what it was about while  if it was referred to as a commutative group, I wouldn't even pause</p>",
        "id": 123599118,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1520843117
    },
    {
        "content": "<p>Now I need to go to work (need do to stuff before that Gowers colloquium this afternoon)</p>",
        "id": 123599119,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520843123
    },
    {
        "content": "<p>Personally, I prefer to relax the name-by-symbols approach for really famous or already named theorems. I would not have called it that tendsto tendsto tendsto thing, maybe some hybrid like <code>tendsto_squeeze</code>. For the second one, we could call it <code>lagrange_theorem</code> but the bigger issue is which of the possible slight variants on that theorem are to be <em>the</em> lagrange theorem</p>",
        "id": 123599221,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1520843296
    },
    {
        "content": "<p>I think I've mentioned this before, but I dislike theorems whose name has more than around 30 characters</p>",
        "id": 123599234,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1520843367
    },
    {
        "content": "<p>i foresee for mathlib search by function name is going to become a big problem sooner rather than later</p>",
        "id": 123599292,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1520843490
    },
    {
        "content": "<p>To locate a result in mathlib, it is more effective to just go to the place where similar theorems are defined and look around. And topic organization is the relevant criterion for making this work, it is a much easier problem than good naming of all the theorems</p>",
        "id": 123599406,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1520843700
    },
    {
        "content": "<p>I prefer to stay with the current system, as long as there is no proper search available. I also don't mind long theorem names as long as they are not used to often. For example the sandwich theorem is only used 15x in Isabelle's analysis. And usually at the beginning of a proof.</p>",
        "id": 123600532,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1520846234
    },
    {
        "content": "<p>Once you've disambiguated a theorem from all other theorems in the database, there's no further need to extend the name though. I honestly cannot imagine actually looking up the squeeze/sandwich theorem according to the symbols in its statement, especially since there is possible variation in that statement and a more high level description that indicates which variables are less than which is necessary for indicating the meaning anyway. In such a situation the conventional name is far more effective. (Plus, the whole reason for these naming conventions is because mathematicians never stepped up and named them themselves. When they do, I think it's better to defer to them.)</p>",
        "id": 123601262,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1520847748
    },
    {
        "content": "<p>Maybe the simplest solution is just good docstrings, which mention all of the common names of a theorem. The fact that different cultures use the same ideas has always resulted in different naming conventions. I noticed when I lived in Paris that many results had some generic name in English but were called &lt;French person&gt;'s Theorem in French, for example (e.g. Bezout's Lemma, I had never heard it called that in the UK in the 90s).</p>",
        "id": 123601823,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520848870
    },
    {
        "content": "<p>Could we establish a convention that \"named theorems\" for instance \"Bézout's lemma\" be distinguished by bolding the name in the theorem/lemma doc string, that is \"<strong>Bézout's lemma</strong>\" or \"<strong>triangle inequality</strong>\"?</p>",
        "id": 244759723,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1625261427
    },
    {
        "content": "<p>I like that idea!</p>",
        "id": 244759831,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1625261517
    },
    {
        "content": "<p>Can we do better semantically? <code>@[known_as \"triangle inequality\"]</code>?</p>",
        "id": 244760671,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625262142
    },
    {
        "content": "<p>I mean I guess doc-gen can parse out the bold anyway</p>",
        "id": 244760702,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625262169
    },
    {
        "content": "<p>Certainly it'd be nice if <code>doc-gen</code> could collect a list of named results from Lean code. In the meantime I think bolding names in doc strings will be simple and helpful.</p>",
        "id": 244761117,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1625262533
    },
    {
        "content": "<p>(PR at <a href=\"https://github.com/leanprover-community/mathlib/issues/8182\">#8182</a>).</p>",
        "id": 244766400,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1625267209
    },
    {
        "content": "<p>regarding bezout's lemma specifically, I have failed to find it more than once because I always forget the symbol reading name of the lemma (which btw is <code>gcd_eq_gcd_ab</code>), and grep fails because there are no text hits for \"bezout\" in mathlib (because of the accent)</p>",
        "id": 244766631,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1625267433
    },
    {
        "content": "<p>I would really like the name to be just <code>nat.bezout</code> or <code>nat.bezout_lemma</code></p>",
        "id": 244766659,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1625267470
    },
    {
        "content": "<p>Is it worth having a special type of alias here such that the linter warns if the aliased name is actually used?</p>",
        "id": 244766764,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625267601
    },
    {
        "content": "<p>That way we can have aliases for finding lemmas, but can elect one as the canonical spelling</p>",
        "id": 244766788,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625267639
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Named.20Theorems/near/244766659\">said</a>:</p>\n<blockquote>\n<p>I would really like the name to be just <code>nat.bezout</code> or <code>nat.bezout_lemma</code></p>\n</blockquote>\n<p>Wow! I've always heard you arguing <em>for</em> the naming convention, and <em>against</em> ad hoc \"wellknown theorem names named after random mathematician\".</p>\n<p>This remark was a surprise to me <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span> <span aria-label=\"crazy\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"crazy\">:crazy:</span></p>",
        "id": 244779628,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625286590
    },
    {
        "content": "<p>Scroll up in this thread, I say something similar earlier</p>",
        "id": 244780325,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1625287676
    },
    {
        "content": "<p>Wow, that was from before I even joined zulip...</p>",
        "id": 244781538,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625289514
    },
    {
        "content": "<p>I really like the semantic idea of Eric. Maybe doc-gen could even automatically add them to the tags of the file to make finding them easier</p>",
        "id": 244790809,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1625300934
    },
    {
        "content": "<p>Johan, I had no idea that there was a time when you were not on Zulip!  I've learned so much today!  <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 244791712,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1625301964
    },
    {
        "content": "<p>Johan is a newbie, he didn't experience the gitter chat.</p>",
        "id": 244796926,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1625308477
    },
    {
        "content": "<p>OK, the PR for bolding named theorems was accepted into mathlib (my first!). Do we need to do the same for definitions, which would allow the creation of an index of standard math concepts using their normal names?</p>",
        "id": 245208559,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1625676081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"397140\">@Hunter Monroe</span> I guess that most mathlib definitions already use \"normal names\" quite closely. (E.g., a ring is a <code>ring</code> and a topological space is a <code>topological_space</code>.) So probably there is less direct benefit there. Do you have particular definitions in mind where you would want to apply this?</p>",
        "id": 245210342,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625676881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> there is a need for a far more comprehensive auto-generated index of definitions and theorems covered in mathlib, with their conventional names not the mathlib names, than provided on the <a href=\"https://leanprover-community.github.io/mathlib-overview.html\">overview page</a>, which would: (1) be more thorough, for instance, by including probability concepts (present in the <a href=\"https://leanprover-community.github.io/undergrad.html\">undergrad page</a> but not the overview page), and (2) by being thorough, would make it obvious from a glance what is not covered, for instance, random variables, expected value, central limit theorem). Mathlib has outgrown the manually maintained overview and undergrad pages. The documentation does not fill this need, for instance, see the search results for <a href=\"https://www.google.com/search?sitesearch=https%3A%2F%2Fleanprover-community.github.io%2Fmathlib_docs&amp;q=probability\">probability</a>.</p>",
        "id": 245562858,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1625939120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"397140\">@Hunter Monroe</span> The fact that probability concepts are missing on the overview is because nobody added them! Please make a PR!</p>",
        "id": 245562907,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625939167
    },
    {
        "content": "<p>I think manually maintained lists will be probably stay around for a while.</p>",
        "id": 245562916,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625939189
    },
    {
        "content": "<p>It's usually a human judgment to decide what deserves to be on a list or not.</p>",
        "id": 245562921,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625939216
    },
    {
        "content": "<p>Although it might be possible to decentralize this. We could have an attribute <code>@[overview \"Human readable thm name\"]</code> before definitions/theorems that we want to include in the list.</p>",
        "id": 245562947,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625939273
    },
    {
        "content": "<p>OK but the same shortcoming applies to graph theory, where it takes a good deal of work to determine that simple graphs are covered but not subgraphs and homomorphisms, and likewise for every other field of mathematics. Just as with theorems, bolding the name within the docstring could flag these for inclusion in auto-generated index--providing the human judgment.</p>",
        "id": 245563011,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1625939379
    },
    {
        "content": "<p>I think we should use a custom attribute to detect the human generated names; just searching for bolded strings won't be reliable.</p>",
        "id": 245563080,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1625939437
    },
    {
        "content": "<p>If you do a search of mathlib in VS code for \" **\", there is hardly any extraneous stuff that would have to be excluded.</p>",
        "id": 245563183,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1625939596
    },
    {
        "content": "<p>That may be true at the moment, but I don't think we want to keep people from using bold in docstrings for a reason like this. Also, from the doc-gen point of view, I think it'll be easier to work with a list of declarations that have been tagged by an attribute than trying to parse bold text out of docstrings.</p>",
        "id": 245563261,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1625939760
    },
    {
        "content": "<p>What about creating an attribute <code>well_known \"The name\"</code> which would allow to give statements/defs a name and would automatically index it on a dedicated webpage? To avoid manual interventions, it could classify the results automatically according to the folder structure.</p>",
        "id": 245563406,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1625939970
    },
    {
        "content": "<p>It might be worth considering now whether we want more metadata attached to notable theorems than just a name. We could maybe follow the current tactic doc functionality and have a user command which allows us to also include URLs, DOIs, etc.</p>",
        "id": 245563573,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1625940169
    },
    {
        "content": "<p>Yes, that sounds like a great idea!</p>",
        "id": 245564904,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1625942089
    },
    {
        "content": "<p>Stacks project tags...</p>",
        "id": 245565409,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1625942914
    },
    {
        "content": "<p>I have a branch of doc-gen in progress locally which is supposed to consume URLs to the stacks project and put them on their own page. If there's a strong desire for it now I can move it up my Lean todo list, though we should probably discuss it <a href=\"#narrow/stream/113488-general/topic/stacks.20tags\">back in this thread</a>.</p>",
        "id": 245565743,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1625943409
    },
    {
        "content": "<p>For tagging definitions in mathlib, I prefer the bold (double asterisks) approach--it is user friendly to tag a definition for indexing with no new tags to learn, inline tagging avoids repeating the concept name, and doc_gen can easily extract what is between the double asterisks pair with a regular expression. URL/DOIs would be great not just for stacks but across multiple resources such as Wikipedia/MathWorld pages. I would like to see a free standing database of definitions/theorems that spans Lean, Isabelle, Coq, etc.</p>",
        "id": 245566145,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1625943965
    },
    {
        "content": "<p>If we're looking at attribute-based tagging, perhaps overview.yml should be generated from attributes, which also has the advantage that moving a lemma doesn't break the yaml file</p>",
        "id": 245566937,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625945263
    },
    {
        "content": "<p>I guess the downside of that approach is that it's harder to bulk recategorize things</p>",
        "id": 245566997,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625945326
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"397140\">Hunter Monroe</span> <a href=\"#narrow/stream/113488-general/topic/Named.20Theorems/near/245562858\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> there is a need for a far more comprehensive auto-generated index of definitions and theorems covered in mathlib, with their conventional names not the mathlib names, than provided on the <a href=\"https://leanprover-community.github.io/mathlib-overview.html\">overview page</a>, which would: (1) be more thorough, for instance, by including probability concepts (present in the <a href=\"https://leanprover-community.github.io/undergrad.html\">undergrad page</a> but not the overview page), and (2) by being thorough, would make it obvious from a glance what is not covered, for instance, random variables, expected value, central limit theorem). Mathlib has outgrown the manually maintained overview and undergrad pages. The documentation does not fill this need, for instance, see the search results for <a href=\"https://www.google.com/search?sitesearch=https%3A%2F%2Fleanprover-community.github.io%2Fmathlib_docs&amp;q=probability\">probability</a>.</p>\n</blockquote>\n<p>I'm not convinced at all, especially by the idea of collecting things based on visual markup (<code>**</code> tags). I think we're pretty far from having exhausted the capacity of manual overview pages. We simply need more PRs adding stuff to the overview.</p>",
        "id": 245570425,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1625950389
    }
]