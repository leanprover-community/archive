[
    {
        "content": "<p>For the dimension (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.rank\">docs#module.rank</a>) of a product space (over modules satisfying <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.free\">docs#module.free</a>) we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/dim_prod\">docs#dim_prod</a>.</p>\n<p>For the <em>finite</em> dimension (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/finite_dimensional.finrank\">docs#finite_dimensional.finrank</a>) of a product space (over modules additionally satisfying <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.finite\">docs#module.finite</a>), we have... <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.free.finrank_prod\">docs#module.free.finrank_prod</a>, which is in neither namespace!</p>",
        "id": 346700349,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680566358
    },
    {
        "content": "<p>What names should we pick up clean this up?</p>",
        "id": 346700371,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680566371
    },
    {
        "content": "<p>I'm aware that <code>dim</code> was the old name of <code>module.rank</code>, and that changing the name is annoying</p>",
        "id": 346700598,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680566496
    },
    {
        "content": "<p>But even ignoring that, it would be good to pick a namespace to put the finrank lemmas in</p>",
        "id": 346700675,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680566525
    },
    {
        "content": "<p>/poll Where do the finrank lemmas belong?</p>\n<ul>\n<li>In the finite_dimensional namespace</li>\n<li>In the <a href=\"http://module.free\">module.free</a> namespace</li>\n<li>In the module.finite namespace</li>\n<li>In the namespace of the type they are describing the dimension of</li>\n</ul>",
        "id": 346701602,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680567082
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/finrank.20namespace.20naming.20convention/near/273362182\">said</a>:</p>\n<blockquote>\n<p>A couple of years ago I did a twitch livestream where I formalised an example sheet question (if $A$,$B$ are two 5-dimensional subspaces of a 9-dimensional vector space then $A\\cap B\\not=0$). I just tried this again and noticed a couple of things; firstly [...] and secondly (perhaps when <code>findim</code> got refactored to <code>finrank</code>?) namespaces are all over the place. If you import <code>linear_algebra.finite_dimensional</code> then you get <code>finite_dimensional.finrank</code> (the nat-valued dimension of a f.d. vector space) and then lemmas like <code>finrank_bot</code> (in the root namespace) and also lemmas like <code>submodule.finrank_le</code> (in the <code>submodule</code> namespace).</p>\n<p>[...] I don't quite know whether all this inconsistency is somehow expected (i.e. it's a consequence of our conventions) or whether everything should just be in the <code>finite_dimensional</code> namespace really. </p>\n<p>Note also that <code>dim_sup_add_dim_inf_eq</code> is a statement about <code>module.rank</code> but <code>submodule.dim_sup_add_dim_inf_eq</code> is a statement about <code>finrank</code>s. Should we expect the naming convention (whatever it is) to do better here? Why are either of these things called <code>dim</code> anyway if the convention now is to call things <code>rank</code> or <code>finrank</code>? Is this just an oversight?</p>\n</blockquote>",
        "id": 346701937,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680567286
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span>, since you put some of these lemmas in the <code>module.free</code> namespace</p>",
        "id": 346782382,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680599859
    },
    {
        "content": "<p>Sorry for that, I think that all results involving any notion of dimension should not live in the <code>module.free</code> namespace (since it's clear that they hold for free modules).</p>",
        "id": 346785324,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680600540
    },
    {
        "content": "<p>No worries, lots of these things make sense at the time then seem silly after 6 months of extra refactors elsewhere have landed</p>",
        "id": 346785776,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680600644
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/18733\">#18733</a> does the easy rename from <code>module.free</code> to <code>finite_dimensional</code>, we can revisit the fourth option in the poll another time.</p>",
        "id": 346785810,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680600654
    },
    {
        "content": "<p>I suspect there's a lot of overlap between <a href=\"https://tqft.net/mathlib/linear_algebra/finrank\">file#linear_algebra/finrank</a>, <a href=\"https://tqft.net/mathlib/linear_algebra/free_module/finite/rank\">file#linear_algebra/free_module/finite/rank</a>, and <a href=\"https://tqft.net/mathlib/linear_algebra/finite_dimensional\">file#linear_algebra/finite_dimensional</a> (which import each other in a chain with <code>finite_dimensional</code> as the leaf)</p>",
        "id": 346787365,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680600987
    },
    {
        "content": "<p>Yes, my plan was to clean this up at some point.  Everything should be done for <code>module.free</code>, but because of the import structure the easiest thing was to duplicate stuff and then start cleaning. I guess that now it's possible to deduplicate.</p>",
        "id": 346788224,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680601169
    },
    {
        "content": "<p>On a similar note to the above; what should <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.free.rank_finsupp'\">docs#module.free.rank_finsupp'</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.dim_eq\">docs#finsupp.dim_eq</a> be merged to?</p>",
        "id": 346788473,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680601230
    },
    {
        "content": "<p><code>dim_finsupp</code> in the root namespace? Or <code>module.rank_finsupp</code>?</p>",
        "id": 346788607,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680601268
    },
    {
        "content": "<p>I would certainly prefer <code>rank</code> over <code>dim</code> in any new lemmas, since <code>dim</code> doesn't exist anymore.</p>",
        "id": 346790030,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1680601577
    },
    {
        "content": "<p>Maybe it's time to do this properly, before the tide arrives. I think there should be only one file between <code>linear_algebra.dimension</code> and <code>linear_algebra.free_module.rank</code>, and similarly for <code>finrank</code>.</p>",
        "id": 346790440,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680601685
    },
    {
        "content": "<p>My current plan was to generalize everything in finrank first, then merge the files once the lemmas are less likely to complain about being relocated</p>",
        "id": 346790590,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680601726
    },
    {
        "content": "<p>BTW <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.dim_eq\">docs#finsupp.dim_eq</a> is more general than <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.free.rank_finsupp'\">docs#module.free.rank_finsupp'</a>, so we should keep it.</p>",
        "id": 346790718,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680601761
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113488-general/topic/naming.3A.20finrank.20and.20rank.20lemmas/near/346790030\">said</a>:</p>\n<blockquote>\n<p>I would certainly prefer <code>rank</code> over <code>dim</code> in any new lemmas, since <code>dim</code> doesn't exist anymore.</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/rank\">docs#rank</a> already exists though and is something else! (fixed in <a href=\"https://github.com/leanprover-community/mathlib/pull/18734\">#18734</a>)</p>",
        "id": 346791689,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680601988
    },
    {
        "content": "<p>Why not <code>linear_map.rank</code>? Writing <code>f.rank</code> seems reasonable.</p>",
        "id": 346792915,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680602256
    },
    {
        "content": "<p>That's what I renamed it to :)</p>",
        "id": 346793023,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680602279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113488-general/topic/naming.3A.20finrank.20and.20rank.20lemmas/near/346790030\">said</a>:</p>\n<blockquote>\n<p>I would certainly prefer <code>rank</code> over <code>dim</code> in any new lemmas, since <code>dim</code> doesn't exist anymore.</p>\n</blockquote>\n<p>I've started renaming them in <a href=\"https://github.com/leanprover-community/mathlib/pull/18735\">#18735</a></p>",
        "id": 346842388,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680613133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113488-general/topic/naming.3A.20finrank.20and.20rank.20lemmas/near/346792915\">said</a>:</p>\n<blockquote>\n<p>Why not <code>linear_map.rank</code>? Writing <code>f.rank</code> seems reasonable.</p>\n</blockquote>\n<p>I've just realized I made this same suggestion <a href=\"#narrow/stream/116395-maths/topic/finite_dimensional.20and.20finite/near/258509882\">over a year ago</a></p>",
        "id": 346843972,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680613448
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/naming.3A.20finrank.20and.20rank.20lemmas/near/346842388\">said</a>:</p>\n<blockquote>\n<p>I've started renaming them in <a href=\"https://github.com/leanprover-community/mathlib/pull/18735\">#18735</a></p>\n</blockquote>\n<p>Apparently I caught all of them in my first try, this is now green</p>",
        "id": 346906202,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680624713
    },
    {
        "content": "<p>Bors seems to be confused about this PR</p>",
        "id": 347045736,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680680080
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113488-general/topic/naming.3A.20finrank.20and.20rank.20lemmas/near/346790718\">said</a>:</p>\n<blockquote>\n<p>BTW <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.dim_eq\">docs#finsupp.dim_eq</a> is more general than <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.free.rank_finsupp'\">docs#module.free.rank_finsupp'</a>, so we should keep it.</p>\n</blockquote>\n<p>I've tidied up the names of these in <a href=\"https://github.com/leanprover-community/mathlib/pull/18743\">#18743</a></p>",
        "id": 347278901,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680742534
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/finrank.20namespace.20naming.20convention/near/273362182\">said</a>:</p>\n<blockquote>\n<p>Note also that <code>dim_sup_add_dim_inf_eq</code> is a statement about <code>module.rank</code> but <code>submodule.dim_sup_add_dim_inf_eq</code> is a statement about <code>finrank</code>s. Should we expect the naming convention (whatever it is) to do better here? Why are either of these things called <code>dim</code> anyway if the convention now is to call things <code>rank</code> or <code>finrank</code>? Is this just an oversight?</p>\n</blockquote>\n<p>This is fixed in <a href=\"https://github.com/leanprover-community/mathlib/pull/18747\">#18747</a></p>",
        "id": 347376431,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680780071
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 347388754,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1680783179
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/naming.3A.20finrank.20and.20rank.20lemmas/near/346790590\">said</a>:</p>\n<blockquote>\n<p>My current plan was to generalize everything in finrank first, then merge the files once the lemmas are less likely to complain about being relocated</p>\n</blockquote>\n<p>Up next, <a href=\"https://github.com/leanprover-community/mathlib/pull/18716\">#18716</a></p>",
        "id": 347390401,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680783558
    },
    {
        "content": "<p>I will have a look in about one hour and half.</p>",
        "id": 347408840,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680787616
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 347409101,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680787676
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/18748\">#18748</a> is I think my final PR in this direction; I'll pass the baton to someone else for any future rounds of cleanup</p>",
        "id": 347531305,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680821219
    },
    {
        "content": "<p>What's the status of this refactor?</p>",
        "id": 347699833,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680884012
    },
    {
        "content": "<p>Why, has <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/linear_algebra/dimension\">port-status#linear_algebra/dimension</a> met the tide?</p>",
        "id": 347712017,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680888356
    },
    {
        "content": "<p>Yes, it has no unported dependencies</p>",
        "id": 347714102,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1680888977
    },
    {
        "content": "<p>I've just noticed I made a mess of the docstring when doing some of the refactor above; I'll make a quick PR from mobile</p>",
        "id": 347714563,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680889098
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/18759\">#18759</a></p>",
        "id": 347715931,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680889487
    },
    {
        "content": "<p>I am merging the two remaining PRs.</p>",
        "id": 347810561,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1680940441
    },
    {
        "content": "<p>There's now another one, <a href=\"https://github.com/leanprover-community/mathlib/pull/18770\">#18770</a>. It turns out that we had a proof that the space of linear maps is finite dimensional in three places. This tidies up the import graph in a way that <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/linear_algebra/dimension\">port-status#linear_algebra/dimension</a> should become lower priority; it's no longer needed for <a href=\"https://leanprover-community.github.io/mathlib-port-status/file/linear_algebra/matrix/to_lin\">port-status#linear_algebra/matrix/to_lin</a></p>",
        "id": 347918580,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1680988185
    },
    {
        "content": "<p>Okay, with these all merged, I'm going to declare that <code>linear_algebra.dimension</code> has now got its feet wet. No more refactors please on the mathlib3 file, and whenever mathport is ready (already?) someone can try to port it. :-)</p>",
        "id": 348006566,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681038301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/naming.3A.20finrank.20and.20rank.20lemmas/near/348006566\">said</a>:</p>\n<blockquote>\n<p>No more refactors please on the mathlib3 file, and whenever mathport is ready (already?) someone can try to port it. :-)</p>\n</blockquote>\n<p>there's still the forwardports: <a href=\"#narrow/stream/144837-PR-reviews/topic/!4.233247\">https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/!4.233247</a></p>",
        "id": 348006814,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681038365
    },
    {
        "content": "<p>I had a look through the file this morning and concluded there was no remaining low-hanging refactor-fruit; so do not intend to make more PRs to it.</p>",
        "id": 348017092,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1681042049
    },
    {
        "content": "<p>The forward ports are now all in the merge queue. When mathport next runs, someone can have a go at <code>linear_algebra.dimension</code>. :-)</p>",
        "id": 348018876,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1681042717
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/naming.3A.20finrank.20and.20rank.20lemmas/near/348018876\">said</a>:</p>\n<blockquote>\n<p>The forward ports are now all in the merge queue. When mathport next runs, someone can have a go at <code>linear_algebra.dimension</code>. :-)</p>\n</blockquote>\n<p>mathport has already included the latest changes to <code>LinearAlgebra.Dimension</code>.</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/3354\">!4#3354</a> is the mathlib4 port; I haven't done comment renaming yet, and there is a universe problem at <code>cardinal_le_rank_of_linearIndependent</code> I don't know how to solve</p>",
        "id": 348071435,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681062220
    },
    {
        "content": "<p>OK, done the comment naming</p>",
        "id": 348073313,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1681063070
    }
]