[
    {
        "content": "<p>Hi LEAN Community,<br>\nI am a computer science student at university who has been asked to install LEAN 3 (not 4) to use with VSCode.<br>\nHowever, I have an M1 Mac, and LEAN 3 does not have an ARM64/Aarch64 compatible release for macOS.<br>\nI've read on the LEAN3 wiki about downloading the x86 versions of brew, elan-init and then lean, but I would rather not have to download 3 x86 programs to get a package that I will likely only be using for a single semester (but I will if there is no other way). <br>\nInstead I have been trying to compile the package from the source code on GitHub however post-compilation I cannot seem to find the bin, include, and lib folders needed for the LEAN3 toolchain. Could someone give me an indication of where/how I might go about obtaining these for an ARM64 architecture? (I am comfortable with a manual installation procedure to the /opt/ folder and adding to PATH afterwards)</p>",
        "id": 395292744,
        "sender_full_name": "CW",
        "timestamp": 1696609175
    },
    {
        "content": "<blockquote>\n<p>LEAN 3 does not have an ARM64/Aarch64 compatible release for macOS</p>\n</blockquote>\n<p>What makes you say that?</p>",
        "id": 395293281,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696609344
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/Compilation.20for.20ARM64/near/395293281\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>LEAN 3 does not have an ARM64/Aarch64 compatible release for macOS</p>\n</blockquote>\n<p>What makes you say that?</p>\n</blockquote>\n<p>This page certainly seems to think so<br>\n<a href=\"https://leanprover-community.github.io/lean3/install/macos.html#m1-macs--apple-silicon\">https://leanprover-community.github.io/lean3/install/macos.html#m1-macs--apple-silicon</a><br>\nplus the latest release of LEAN3 does not feature an M1 version of the package<br>\n<a href=\"https://github.com/leanprover-community/lean/releases/tag/v3.51.1\">https://github.com/leanprover-community/lean/releases/tag/v3.51.1</a></p>",
        "id": 395293926,
        "sender_full_name": "CW",
        "timestamp": 1696609585
    },
    {
        "content": "<p>Okay great! It's just that there's a specific error people get often and your description was somewhat fitting it.</p>",
        "id": 395294049,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1696609645
    },
    {
        "content": "<p>It is quite easy to get it working with x86 packages, however if you want I've posted a script somewhere in the past that attempts to be a local build</p>",
        "id": 395294240,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1696609711
    },
    {
        "content": "<p>Sorry, I can't dig it up at the moment</p>",
        "id": 395294260,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1696609720
    },
    {
        "content": "<p>I think I've managed to get it working by compiling for ARM64, then using the include and lib files from the regular release and combining them all together into a package</p>",
        "id": 395294698,
        "sender_full_name": "CW",
        "timestamp": 1696609898
    },
    {
        "content": "<p>It appears to be working at least</p>",
        "id": 395294711,
        "sender_full_name": "CW",
        "timestamp": 1696609905
    },
    {
        "content": "<p>Nevermind getting this error message when I attempt to use it with VSCode</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kn\">import</span><span class=\"o\">:</span> <span class=\"n\">init</span>\n<span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">mk_dec_eq_instance.lean</span><span class=\"o\">:</span><span class=\"mi\">21</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">token</span>\n</code></pre></div>",
        "id": 395294949,
        "sender_full_name": "CW",
        "timestamp": 1696610000
    },
    {
        "content": "<p>Dare I ask why you are attempting to install obsolete software?</p>",
        "id": 395303680,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1696613860
    },
    {
        "content": "<p>Kevin, he answered already: he attends a university course using Lean 3. I don' t who is doing that to students but I think it's a pretty bad idea.</p>",
        "id": 395305695,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1696614833
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"657029\">@CW</span> it should be pretty straightforward to compile yourself -- what did you run to compile it and then what did you run to install it in <code>/opt</code>?</p>",
        "id": 395320882,
        "sender_full_name": "Julian Berman",
        "timestamp": 1696622266
    },
    {
        "content": "<p><code>rm -rf build; mkdir -p build/release; cd build/release; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/opt/homebrew/ -DCMAKE_INSTALL_PREFIX=/Users/julian/.local/share/lean/lean-\"$(git name-rev HEAD --tags | sed 's;.*/v;;')\"-darwin/ ../../src -DCMAKE_EXPORT_COMPILE_COMMANDS=1 &amp;&amp; make -j4 &amp;&amp; make install</code> is the command I used to run -- which may need some tweaking depending on your preferences, but yeah that should work for you with minimal tweaking.</p>",
        "id": 395321148,
        "sender_full_name": "Julian Berman",
        "timestamp": 1696622400
    },
    {
        "content": "<p>Right, a compilation using CMake and fetching the lib and include files from an actual release created a useable package that I can use with VSCode, thanks for your help everyone!</p>",
        "id": 395355105,
        "sender_full_name": "CW",
        "timestamp": 1696643308
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113488-general/topic/Compilation.20for.20ARM64/near/395320882\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"657029\">CW</span> it should be pretty straightforward to compile yourself -- what did you run to compile it and then what did you run to install it in <code>/opt</code>?</p>\n</blockquote>\n<p>I used these instructions to compile the source<br>\n<a href=\"https://github.com/leanprover-community/lean/blob/master/doc/make/index.md\">https://github.com/leanprover-community/lean/blob/master/doc/make/index.md</a><br>\nThen I took the lib and include files from the latest release to create a usable package <br>\n<a href=\"https://github.com/leanprover/lean3/releases/tag/v3.4.2\">https://github.com/leanprover/lean3/releases/tag/v3.4.2</a></p>",
        "id": 395355930,
        "sender_full_name": "CW",
        "timestamp": 1696643878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657029\">CW</span> has marked this topic as resolved.</p>",
        "id": 395355989,
        "sender_full_name": "Notification Bot",
        "timestamp": 1696643893
    },
    {
        "content": "<p>You should look at the version of lean3 in leanprover-community at least. Lean 3 is old, but lean 3.4.2 is very very old!</p>",
        "id": 395444498,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1696704700
    },
    {
        "content": "<p>Yesterday I was trying out mathport on ARM64 which requires a Lean 3, inspired by this thread, I manually built Lean 3 and adjusted mathport's makefile to accept the built Lean 3  (<code>Lean (version 3.51.1, commit 21d264a66d53, Release)</code> to be exact) instead of using leanpkg which always stuck at failing to get the binary. Then I have succeeded running one-shot porting.</p>",
        "id": 395480595,
        "sender_full_name": "Utensil Song",
        "timestamp": 1696733787
    }
]