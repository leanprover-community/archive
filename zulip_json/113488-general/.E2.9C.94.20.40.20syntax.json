[
    {
        "content": "<p>I don't understand how @ is used here:</p>\n<div class=\"codehilite\" data-code-language=\"example\"><pre><span></span><code>  a ⊔ (b ⊓ c) = (a ⊔ b) ⊓ (a ⊔ c) :=\nby rw [h, @inf_comm _ _ (a ⊔ b), absorb1, @inf_comm _ _ (a ⊔ b), h,\n    ←sup_assoc, @inf_comm _ _ c a, absorb2, inf_comm]\n</code></pre></div>\n<p>what do the underscores refer to ?</p>",
        "id": 340059544,
        "sender_full_name": "Mohamed BEN EL MOSTAPHA",
        "timestamp": 1678182019
    },
    {
        "content": "<p>By <code>@</code> arguments denoted with <code>{}</code> and <code>[]</code> behave as if they were <code>()</code> explicit arguments.</p>",
        "id": 340059760,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678182099
    },
    {
        "content": "<p>BTW use <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> please.</p>",
        "id": 340059834,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678182123
    },
    {
        "content": "<p>By <code>_</code> you say that the argument at the given position should be inferred automatically.</p>",
        "id": 340060361,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678182272
    },
    {
        "content": "<p>Hence <code>_</code> kinda undoes <code>@</code> but only for one argument, whereäs <code>@</code> makes all arguments explicit.</p>",
        "id": 340060790,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1678182390
    },
    {
        "content": "<p>Okay that makes sense.<br>\nThank you</p>",
        "id": 340064015,
        "sender_full_name": "Mohamed BEN EL MOSTAPHA",
        "timestamp": 1678183299
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 340085494,
        "sender_full_name": "Notification Bot",
        "timestamp": 1678189195
    }
]