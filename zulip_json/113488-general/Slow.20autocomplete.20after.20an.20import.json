[
    {
        "content": "<p>If I import files from Mathlib and start using autocomplete, the results often take seconds to load, which is much slower compared to Lean 3. For example, if I type</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.CategoryTheory.Category.Basic</span>\n<span class=\"kn\">open</span> <span class=\"n\">CategoryTheory</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Cat</span>\n</code></pre></div>\n<p>I will have to wait for seconds before <code>Category</code> shows up in the popup. In contrast, the suggestions show up instantly without any imports. I made sure I ran <code>lake exe cache get</code>, and the imports are resolved without delay but not the LSP suggestions. Is this behavior normal?</p>",
        "id": 406856397,
        "sender_full_name": "gldanoob",
        "timestamp": 1702079147
    },
    {
        "content": "<p>This happens to me too. I'm not an expert but I know other programming languages don't suffer from this problem, e.g. clangd for C++ even when importing the entire standard library (which is huge) is pretty instant. I suspect instances are the reason this can't be super-fast?</p>",
        "id": 406867742,
        "sender_full_name": "Yongyi Chen",
        "timestamp": 1702085400
    },
    {
        "content": "<p>No, I don't think there is any irreducible reason for this not to be fast</p>",
        "id": 406892182,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702099830
    },
    {
        "content": "<p>Oh, is this being worked on then? A fast autocomplete would be a very large QOL.</p>",
        "id": 406894011,
        "sender_full_name": "Yongyi Chen",
        "timestamp": 1702101154
    },
    {
        "content": "<p>I don't know, it depends on a diagnosis of exactly what the time is being spent on. Maybe <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> might be interested to look into this?</p>",
        "id": 406907375,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702110093
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> do you know how best to benchmark or profile something like this?</p>",
        "id": 406907511,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1702110160
    },
    {
        "content": "<p>Just running <code>perf top</code> in the background is great for a first impression. But it's most likely the fuzzy matching code.</p>",
        "id": 406908769,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1702110780
    },
    {
        "content": "<p>I think this is the first user complaint I have seen since it was introduced</p>",
        "id": 406908906,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1702110855
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113488-general/topic/Slow.20autocomplete.20after.20an.20import/near/406908906\">said</a>:</p>\n<blockquote>\n<p>I think this is the first user complaint I have seen since it was introduced</p>\n</blockquote>\n<p>Well, here's a second one – I also find that the auto-complete in lean4 is much, much slower than it was in lean3, to the point of being almost unusable.</p>",
        "id": 406914631,
        "sender_full_name": "David Loeffler",
        "timestamp": 1702114650
    },
    {
        "content": "<p>Yeah, I think the lack of complaints was due to everyone understanding that this (in particular, the vscode extension) is still preliminary work in progress.</p>",
        "id": 406946552,
        "sender_full_name": "Yongyi Chen",
        "timestamp": 1702133718
    },
    {
        "content": "<p>Unfortunately that assumption is dead-wrong in this case so it's better to complain (or even better, open an issue) than to assume</p>",
        "id": 406958515,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1702143885
    }
]