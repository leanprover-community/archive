[
    {
        "content": "<p>How do I download a specific version of mathlib (and Lean)?</p>",
        "id": 197414333,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589377497
    },
    {
        "content": "<p>currently I just created a new project using <code>leanproject new</code>and then changed the <code>leanpkg.toml</code>manually (by copying from another repo and changing the commit to what I need) and then using <code>leanproject get-mathlib-cache</code></p>",
        "id": 197417910,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589379033
    },
    {
        "content": "<p>do I need to do this every time?</p>",
        "id": 197417941,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589379043
    },
    {
        "content": "<p>what would you want to see in terms of workflow?</p>",
        "id": 197851544,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589725172
    },
    {
        "content": "<p>it could be possible I guess to have leanproject new --leanversion XXX, but for mathlib, I don't know if there's any proper tagging or versioning beyond the commit SHA256</p>",
        "id": 197851588,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589725206
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>kc_ke@LAPTOP-DBUNR5U5 MINGW64 /c/mathlib <span class=\"o\">(</span>master<span class=\"o\">)</span>\n$ leanproject get-cache\n ** On entry to DGEBAL parameter number  <span class=\"m\">3</span> had an illegal value\n ** On entry to DGEHRD  parameter number  <span class=\"m\">2</span> had an illegal value\n ** On entry to DORGHR DORGQR parameter number  <span class=\"m\">2</span> had an illegal value\n ** On entry to DHSEQR parameter number  <span class=\"m\">4</span> had an illegal value\n ** On entry to DGEBAL parameter number  <span class=\"m\">3</span> had an illegal value\n ** On entry to DGEHRD  parameter number  <span class=\"m\">2</span> had an illegal value\n ** On entry to DORGHR DORGQR parameter number  <span class=\"m\">2</span> had an illegal value\n ** On entry to DHSEQR parameter number  <span class=\"m\">4</span> had an illegal value\nTraceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>:\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\runpy.py\"</span>, line <span class=\"m\">197</span>, in _run_module_as_main\n    <span class=\"k\">return</span> _run_code<span class=\"o\">(</span>code, main_globals, None,\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\runpy.py\"</span>, line <span class=\"m\">87</span>, in _run_code\n    exec<span class=\"o\">(</span>code, run_globals<span class=\"o\">)</span>\n  File <span class=\"s2\">\"C:\\Users\\kc_ke\\AppData\\Local\\Programs\\Python\\Python39\\Scripts\\leanproject.exe\\__main__.py\"</span>, line <span class=\"m\">4</span>, in &lt;module&gt;\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\mathlibtools\\leanproject.py\"</span>, line <span class=\"m\">11</span>, in &lt;module&gt;\n    from mathlibtools.lib import <span class=\"o\">(</span>LeanProject, log, LeanDirtyRepo,\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\mathlibtools\\lib.py\"</span>, line <span class=\"m\">17</span>, in &lt;module&gt;\n    import networkx as nx <span class=\"c1\"># type: ignore</span>\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\networkx\\__init__.py\"</span>, line <span class=\"m\">64</span>, in &lt;module&gt;\n    import networkx.readwrite\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\networkx\\readwrite\\__init__.py\"</span>, line <span class=\"m\">16</span>, in &lt;module&gt;\n    from networkx.readwrite.gexf import *\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\networkx\\readwrite\\gexf.py\"</span>, line <span class=\"m\">173</span>, in &lt;module&gt;\n    class GEXF:\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\networkx\\readwrite\\gexf.py\"</span>, line <span class=\"m\">211</span>, in GEXF\n    import numpy as np\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\numpy\\__init__.py\"</span>, line <span class=\"m\">305</span>, in &lt;module&gt;\n    _win_os_check<span class=\"o\">()</span>\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\numpy\\__init__.py\"</span>, line <span class=\"m\">302</span>, in _win_os_check\n    raise RuntimeError<span class=\"o\">(</span>msg.format<span class=\"o\">(</span>__file__<span class=\"o\">))</span> from None\nRuntimeError: The current Numpy installation <span class=\"o\">(</span><span class=\"s1\">'c:\\\\users\\\\kc_ke\\\\appdata\\\\local\\\\programs\\\\python\\\\python39\\\\lib\\\\site-packages\\\\numpy\\\\__init__.py'</span><span class=\"o\">)</span> fails to pass a sanity check due to a bug in the windows runtime. See this issue <span class=\"k\">for</span> more information: https://tinyurl.com/y3dm3h86\n</code></pre></div>",
        "id": 221511733,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1609758477
    },
    {
        "content": "<p><a href=\"https://github.com/twintproject/twint/issues/1030\">https://github.com/twintproject/twint/issues/1030</a> ?</p>",
        "id": 221511839,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1609758545
    },
    {
        "content": "<p>Don't forget to add a \"Thanks a lot!\" message at the bottom.</p>",
        "id": 221511951,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609758602
    },
    {
        "content": "<p>Thanks, that worked</p>",
        "id": 221511997,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1609758642
    },
    {
        "content": "<p>I think this came up elsewhere - leanproject should not even attempt to import numpy /networkx until asked for the import graph</p>",
        "id": 221512072,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609758712
    },
    {
        "content": "<p>Doing so just makes leanproject slow and fragile</p>",
        "id": 221512120,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609758728
    },
    {
        "content": "<p>which Lean3 binary does <code>leanproject</code> make my terminal session point at when I call <code>leanproject build</code> inside a project that uses Lean 3? what is going on?</p>",
        "id": 259042656,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635213190
    },
    {
        "content": "<p>It looks at your <code>leanpkg.toml</code> file, and uses the lean binary requested there.</p>",
        "id": 259042766,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635213296
    },
    {
        "content": "<p>This is managed by <code>elan</code>: it will automatically download missing lean binaries if you haven't previously used the requested version before.</p>",
        "id": 259042795,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635213324
    },
    {
        "content": "<p>if I type <code>which lean</code> it says <code>/home/arthur/.elan/bin/lean</code><br>\nthen if I type <code>lean --version</code> it says <code>Lean (version 3.34.0, commit ad324bbc96bf, Release)</code></p>\n<p>but if I open another terminal and do the same things, it will point at the same lean binary, but the version will be <code>Lean (version 4.0.0-nightly-2021-10-20, commit 68469c248759, Release)</code></p>",
        "id": 259043128,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635213608
    },
    {
        "content": "<p>The \"lean binary\" you get from <code>which lean</code> is actually <code>elan</code>. If you type <code>elan which lean</code> it will show you the path to the actual lean binary that will be used in that directory.</p>",
        "id": 259043328,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1635213789
    },
    {
        "content": "<p><code>lean --version</code> should always say the same thing if you stay in the same directory.</p>",
        "id": 259043343,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635213816
    },
    {
        "content": "<p>In different directories you should expect different results.</p>",
        "id": 259043345,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635213826
    },
    {
        "content": "<p><code>/home/arthur/.elan/bin/lean</code> is a wrapper that looks at your <code>leanpkg.toml</code>, downloads and starts the requested version of Lean.</p>",
        "id": 259043477,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635213959
    },
    {
        "content": "<p>Depending on the content of <code>leanpkg.toml</code>, it will start different actual Lean binaries, and they will report different versions.</p>",
        "id": 259043553,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635214016
    },
    {
        "content": "<p>Wow, my mind froze for a bit but now I think I got it<br>\nThanks for the info!</p>",
        "id": 259043657,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635214107
    },
    {
        "content": "<p>So if I'm not inside a lean project, calling <code>lean</code> will access the binary I added to my <code>PATH</code> manually. But if I'm inside a lean project, <code>lean</code> will call the right lean binary version for that project</p>",
        "id": 259043837,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635214314
    },
    {
        "content": "<p>If you have <code>lean</code> in the path before <code>/home/arthur/.elan/bin/lean</code>, then your shell will never call the elan version.</p>",
        "id": 259043907,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635214366
    },
    {
        "content": "<p>If you have it after elan, then it will always call elan version.</p>",
        "id": 259043920,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635214390
    },
    {
        "content": "<p>Elan has a notion of \"the default lean version\" that it calls if there is no <code>leanpkg.toml</code>. I don't remember the details.</p>",
        "id": 259043941,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635214422
    },
    {
        "content": "<p>Hopefully you didn't add anything to your <code>PATH</code> manually: that would be contrary to the instructions! Instead, when you installed <code>elan</code> it will have done its thing.</p>",
        "id": 259044125,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635214575
    },
    {
        "content": "<p>I've just downloaded mathlib from git. I shouldn't need to build it, right?<br>\ndoes it come with built sources?</p>",
        "id": 259044145,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635214605
    },
    {
        "content": "<p>You can set the default toolchain in elan using <code>elan default</code>.</p>",
        "id": 259044153,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635214615
    },
    {
        "content": "<p>It does not come with built sources.</p>",
        "id": 259044158,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635214625
    },
    {
        "content": "<p><code>leanproject get-cache</code> downloads olean cache.</p>",
        "id": 259044169,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635214631
    },
    {
        "content": "<p>But <code>leanproject get-cache</code> will obtain them.</p>",
        "id": 259044172,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635214633
    },
    {
        "content": "<p>nice, that was a lot faster than my core i5 <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 259044257,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635214710
    },
    {
        "content": "<p>It's running smoothly. thanks everyone!<br>\nI had added lean4 to my path manually and it caused me some confusion</p>",
        "id": 259044391,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635214817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> has marked this topic as resolved.</p>",
        "id": 259044471,
        "sender_full_name": "Notification Bot",
        "timestamp": 1635214911
    }
]