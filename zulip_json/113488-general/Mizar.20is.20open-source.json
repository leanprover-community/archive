[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"456794\">Patrick Johnson</span> <a href=\"#narrow/stream/113488-general/topic/Opaque.20junk.20values.20for.20partial.20functions/near/321913271\">said</a>:</p>\n<blockquote>\n<p>Unfortunately, metamath lacks automation and mizar is no longer actively developed (and more importantly not open source). I'm wondering what could be the reason there are no good set-theoretic theorem provers out there.</p>\n</blockquote>\n<p>Mizar is open-sourced: <a href=\"http://mizar.uwb.edu.pl/forum/archive/2302/msg00001.html\">http://mizar.uwb.edu.pl/forum/archive/2302/msg00001.html</a><br>\n(83.3k lines of Pascal)</p>",
        "id": 338213246,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1677452389
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/113488-general/topic/Opaque.20junk.20values.20for.20partial.20functions/near/338213246\">said</a>:</p>\n<blockquote>\n<p>Mizar is open-sourced: <a href=\"http://mizar.uwb.edu.pl/forum/archive/2302/msg00001.html\">http://mizar.uwb.edu.pl/forum/archive/2302/msg00001.html</a><br>\n(83.3k lines of Delphi(?) (GitHub says Pascal 100%))</p>\n</blockquote>\n<p>Wow!<br>\nI just saw like 20 times more virtual methods in Pascal than I had seen over those years I programmed in Pascal.</p>",
        "id": 338216233,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677455144
    },
    {
        "content": "<p>If you don't want to read those 80k lines of Pascal, then I have good news: I've been reimplementing Mizar in Rust: <a href=\"https://github.com/digama0/mizar-rs\">https://github.com/digama0/mizar-rs</a> ! The details are in a just-submitted ITP paper which I will share here shortly, and it turned out to be just the right pressure to finally get Mizar to go full GPL.</p>",
        "id": 338223996,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677461349
    },
    {
        "content": "<p>Isabelle is nice. <a href=\"https://isabelle.zulipchat.com\">https://isabelle.zulipchat.com</a></p>",
        "id": 338224254,
        "sender_full_name": "Dean Young",
        "timestamp": 1677461561
    },
    {
        "content": "<p>4 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/Opaque.20junk.20values.20for.20partial.20functions\">#general &gt; Opaque junk values for partial functions</a> by <span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span>.</p>",
        "id": 338225889,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677462970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Mizar.20is.20open-source/near/338223996\">said</a>:</p>\n<blockquote>\n<p>If you don't want to read those 80k lines of Pascal, then I have good news: I've been reimplementing Mizar in Rust: <a href=\"https://github.com/digama0/mizar-rs\">https://github.com/digama0/mizar-rs</a> ! The details are in a just-submitted ITP paper which I will share here shortly, and it turned out to be just the right pressure to finally get Mizar to go full GPL.</p>\n</blockquote>\n<p>Wow! You do so many projects! How long did it take you to reïmplement Mizar in Rust?</p>",
        "id": 338254620,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1677482704
    },
    {
        "content": "<p>Mario, could you comment on why you did that? Is the paper publicly available?</p>",
        "id": 338277529,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1677490818
    },
    {
        "content": "<blockquote>\n<p>The details are in a just-submitted ITP paper which I will share here shortly</p>\n</blockquote>\n<p>(Only meant to answer your 2nd question. I'm quite interested in an answer to Q1 as well.)</p>",
        "id": 338277639,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1677490861
    },
    {
        "content": "<p>This project is many years in the making, dating back even before I learned about lean. It finally got off the ground when I visited Josef Urban last summer and got the ball rolling on getting access to the source code. The project itself has been under active development for about four months. The main target is proof export from Mizar; I hinted at getting a crazy proof of the jordan curve theorem a while back and this is it</p>",
        "id": 338375625,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677515688
    },
    {
        "content": "<p>Since Mizar is not a \"small trusted core\" style system, to get proofs from Mizar you basically have to do everything Mizar does, hence \"reimplementation\"</p>",
        "id": 338375792,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677515738
    },
    {
        "content": "<p>This sounds like a nice hacker news post</p>",
        "id": 338459940,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1677535749
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Mizar.20is.20open-source/near/338375625\">said</a>:</p>\n<blockquote>\n<p>The main target is proof export from Mizar; I hinted at getting a crazy proof of the jordan curve theorem a while back and this is it</p>\n</blockquote>\n<p>Are you suggesting you want to get a proof of the Jordan curve theorem in Lean by exporting a proof from Mizar? Surely I'm missing something, or else this is black magic.</p>",
        "id": 338462899,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1677537015
    },
    {
        "content": "<p>how so? I already did something like that for metamath</p>",
        "id": 338462948,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677537035
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/Prime.20number.20theorem.20in.20lean\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Prime.20number.20theorem.20in.20lean</a></p>",
        "id": 338463079,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677537098
    },
    {
        "content": "<p>I thought it would be harder for Mizar → Lean because of foundational clashes, or is this a \"deep embedding\" version of the Jordan curve theorem? I don't know much about these things, so I'm probably misunderstanding.</p>",
        "id": 338473812,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1677541944
    },
    {
        "content": "<p>foundational clashes are usually the least of your worries for this kind of thing</p>",
        "id": 338476699,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677543526
    },
    {
        "content": "<p>like, worst case scenario you can add an axiom for the existence of some inaccessible cardinals</p>",
        "id": 338476748,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1677543562
    },
    {
        "content": "<p>\"foundational\" was not the right word. I meant more, \"how mathematical structures are represented in the system\"</p>",
        "id": 338480174,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1677545343
    }
]