[
    {
        "content": "<p>While reviewing <a href=\"https://github.com/leanprover-community/mathlib/pull/4087/files#r486900904\">4087</a>, I noticed a proof is repeated for both <code>(∀ a ∈ range f, p a)</code> and <code>(∀ i, p (f i))</code>. Is one of these considered more canonical? If its the latter, should <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.forall_range_iff\">docs#set.forall_range_iff</a> be tagged <code>@[simp]</code>?</p>",
        "id": 209758088,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1599816324
    },
    {
        "content": "<p>I prefer the second variant. And I think <code>set.forall_range_iff</code> would be a reasonable simp lemma.</p>",
        "id": 209758218,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1599816396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> Btw, thanks for reviewing!</p>",
        "id": 209758236,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1599816418
    },
    {
        "content": "<p>No worries, seems like if I'm going to get something useful with geometric algebra in lean, I should look at how euclidean geometry is done</p>",
        "id": 209758391,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1599816528
    },
    {
        "content": "<p>Shall I make a PR that tags it simp and see what blows up?</p>",
        "id": 209758407,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1599816544
    },
    {
        "content": "<p>You can always try (-;</p>",
        "id": 209758490,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1599816602
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/4109\">#4109</a></p>",
        "id": 209759688,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1599817288
    },
    {
        "content": "<p>Seems not to cause any issues</p>",
        "id": 209766462,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1599822069
    },
    {
        "content": "<p>On a vaguely related note, is this a sane <code>simp</code> lemma?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">forall_imp_swap</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">q</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">q</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">forall_swap</span>\n</code></pre></div>",
        "id": 209790784,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1599836081
    },
    {
        "content": "<p>What effect does it have? I'm generally in favour or more simp lemmas. Typically I explore adding <code>@[simp]</code> whenever I get grumpy that <code>simp</code> didn't do something I thought it should have --- do you have an example where this helps?</p>",
        "id": 209846547,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599866583
    },
    {
        "content": "<p>A contrived one in an editor buffer I don't have access to right now. Essentially it transformed things into a form where <a href=\"https://github.com/leanprover-community/mathlib/issues/4109\">#4109</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/4117\">#4117</a> can kick in; and pushing binders to a smaller scope feels like a simplification to me</p>",
        "id": 209869752,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1599897018
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/leanprover-community/mathlib/issues/4143\">#4143</a> to try out that lemma</p>",
        "id": 209980427,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1600074680
    }
]