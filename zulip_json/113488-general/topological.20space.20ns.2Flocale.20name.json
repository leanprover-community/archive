[
    {
        "content": "<p>I have several loosely related suggestions.</p>\n<ul>\n<li>Rename <code>topological_space</code> locale to <code>topology</code> <a href=\"https://github.com/leanprover-community/mathlib/pull/18293\">#18293</a> or drop it and make <code>nhds</code>/<code>nhds_within</code> a global notation.</li>\n<li>BTW, do we need the <code>uniformity</code> locale?</li>\n<li>Move <code>second_countable_topology</code> etc to the root namespace. These classes have \"topology\" in their names, so no chances for collisions.</li>\n<li>Move <code>inducing</code>, <code>embedding</code> etc to a NS (either <code>topological_space</code> or <code>topology</code>).</li>\n<li>Possibly, <a href=\"https://github.com/leanprover-community/mathlib/pull/18293#issuecomment-1404944364\">rename</a> the class <code>topological_space</code> to <code>topology</code>.</li>\n</ul>",
        "id": 323763783,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674750760
    },
    {
        "content": "<p>/poll Locale names<br>\nLeave as is (topological_space and uniformity)<br>\nRename (topology and uniformity)<br>\nMake notations (nhds, nhds_within, uniformity) global</p>",
        "id": 323764961,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674751009
    },
    {
        "content": "<p>/poll NS for first/second countable topology<br>\nLeave inside topological_space<br>\nMove to the root NS</p>",
        "id": 323765069,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674751039
    },
    {
        "content": "<p>/poll NS for inducing, embedding<br>\nLeave in the root NS<br>\nMove to the <code>topological_space</code> NS<br>\nMove to the <code>topology</code> NS</p>",
        "id": 323765318,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674751097
    },
    {
        "content": "<p>/poll Name for the <code>topological_space</code> typeclass<br>\ntopological_space<br>\ntopology</p>",
        "id": 323765525,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674751145
    },
    {
        "content": "<p>I don't think we want the neighborhood and uniformity notations to be global. There are single letters notation, this is too tempting to reuse for completely different purposes.</p>",
        "id": 323765563,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674751156
    },
    {
        "content": "<p>I already wrote several times that <code>embedding</code> should be in a namespace, this is a very generic word, and same for inducing.</p>",
        "id": 323765748,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674751203
    },
    {
        "content": "<p>Please don't forget to vote.</p>",
        "id": 323765847,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674751222
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> and <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> commented on the original PR. Please vote here.</p>",
        "id": 323766051,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674751280
    },
    {
        "content": "<p>About the name <code>topological_space</code>, I think he key thing is consistency. If we keep <code>metric_space</code> and <code>measure_space</code> then we should keep <code>topological_space</code>.</p>",
        "id": 323766104,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674751293
    },
    {
        "content": "<p>If we rename the locale <code>topological_space</code>, do we want to also rename the namespace <code>topological_space</code> (even if we don't rename the class)?</p>",
        "id": 323770743,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674752396
    },
    {
        "content": "<p>Can we not be making such foundational name changes at this point in the port?</p>",
        "id": 323771517,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674752561
    },
    {
        "content": "<p>We haven't started porting topological spaces yet.</p>",
        "id": 323772081,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674752686
    },
    {
        "content": "<p>(OK, we have 1 file)</p>",
        "id": 323772144,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674752701
    },
    {
        "content": "<p>perhaps, but by the time this PR makes it through review and is merged we will be halfway into it</p>",
        "id": 323775655,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674752903
    },
    {
        "content": "<p>No, I don't think so. We'll need 1 more PR because of some roadblocks I hit in <code>topology.order</code> anyway.</p>",
        "id": 323775998,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674752988
    },
    {
        "content": "<p>I can make any subset of these changes in &lt;1h, then someone can quickly review them.</p>",
        "id": 323776540,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674753132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> I added 1 more answer to the first poll. With this approach, <code>open_locale topology</code> means \"I want to use notation about topology, no matter I deal with topological spaces or uniform spaces\".</p>",
        "id": 323777199,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674753305
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/topological.20space.20ns.2Flocale.20name/near/323766104\">said</a>:</p>\n<blockquote>\n<p>About the name <code>topological_space</code>, I think he key thing is consistency. If we keep <code>metric_space</code> and <code>measure_space</code> then we should keep <code>topological_space</code>.</p>\n</blockquote>\n<p>We have the namespace <code>measure_theory</code>, though. The <code>measure_space</code> namespace is for material that is specifically about <code>measure_space</code>. In contrario, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/topological_space.opens\">docs#topological_space.opens</a> is not specifically about <code>topological_space</code>.</p>",
        "id": 323810486,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1674758337
    },
    {
        "content": "<p>That part of the discussion was not the namespace. And I don't see how <a href=\"https://leanprover-community.github.io/mathlib_docs/find/topological_space.opens\">docs#topological_space.opens</a>  isn't about <code>topological_space</code>...</p>",
        "id": 323810863,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674758452
    },
    {
        "content": "<p>There's a difference between material about topological/measurable spaces and material about <code>topological_space</code>/<code>measurable_space</code>. Once you reach <code>topological_space.opens</code>, the fact that we get the topology from <code>topological_space</code> is an implementation detail. In contrast, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measurable_space.comap\">docs#measurable_space.comap</a> is very <code>measurable_space</code>-specific.</p>",
        "id": 323811340,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1674758586
    },
    {
        "content": "<p>We need to break ties in 2 polls.</p>",
        "id": 323932985,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674777506
    },
    {
        "content": "<p>A very loosely related PR: <a href=\"https://github.com/leanprover-community/mathlib/pull/18312\">#18312</a>.</p>",
        "id": 323935316,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674778966
    },
    {
        "content": "<p>I just want to mention that imo the setup we have for metric spaces is nice, where the class is <code>metric_space</code> but all the lemmas are in the <code>metric</code> namespace (and, if there were any notation associated to metric spaces, putting them in locale <code>metric</code> would be fine too)</p>",
        "id": 324031202,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1674820884
    },
    {
        "content": "<p>Oh good point, we already have different class names and namespace names for <code>metric_space</code>/<code>metric</code>. I suggest we also do that for <code>topological_space</code>/<code>topology</code></p>",
        "id": 324034423,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674821821
    },
    {
        "content": "<p>/poll Should we rename the namespace <code>topological_space</code> to <code>topology</code> (keeping the class name as <code>topological_space</code>)?<br>\nyes<br>\nno</p>",
        "id": 324034554,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674821867
    },
    {
        "content": "<p>For people that prefer <code>topology.first_countable</code> over having <code>first_countable</code> in the root namespace: are there other uses of \"first countable\" or \"second countable\" in math?</p>",
        "id": 324035358,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674822097
    },
    {
        "content": "<p>I assumed it would be <code>first_countable_topology</code> in the root NS.</p>",
        "id": 324057082,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674827875
    },
    {
        "content": "<p>Now it is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/topological_space.first_countable_topology\">docs#topological_space.first_countable_topology</a>.</p>",
        "id": 324057295,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674827914
    },
    {
        "content": "<p>oh, that's true.</p>",
        "id": 324060319,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674828664
    },
    {
        "content": "<p>I got confused by the last option (which is also fine by me).</p>",
        "id": 324060467,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1674828704
    },
    {
        "content": "<p>It turns out that there are 3 notations in the <code>uniformity</code> locale:</p>\n<ul>\n<li><code>uniformity</code></li>\n<li><code>separation_rel</code></li>\n<li><code>rel_comp</code></li>\n</ul>\n<p>I'm no longer sure that we need to merge this locale with <code>topology</code>.</p>",
        "id": 324094091,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674835988
    },
    {
        "content": "<p>I suggest that we merge <a href=\"https://github.com/leanprover-community/mathlib/pull/18293\">#18293</a> before it rots, then discuss what to do with the <code>uniformity</code> locale.</p>",
        "id": 324094631,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674836124
    },
    {
        "content": "<p><code>separation_rel</code> will go away either this week-end (if I find time for this), or soon after porting. It is equal (but not defeq) to <code>inseparable</code>.</p>",
        "id": 324099898,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674837360
    },
    {
        "content": "<p>Indeed this is again a historical accident. It was there long before <code>inseparable</code>.</p>",
        "id": 324101025,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674837662
    }
]