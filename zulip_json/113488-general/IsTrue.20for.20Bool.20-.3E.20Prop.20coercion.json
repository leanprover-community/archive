[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Prop.20-.3E.20Bool.20regression/near/321996465\">said</a>:</p>\n<blockquote>\n<p>another thing that was floated earlier was to have a <code>IsTrue b</code> function which would be used instead of the current <code>b = true</code> for <code>Bool -&gt; Prop</code> coercion. That would make the expression a bit less \"active\" since a lot of other stuff keys on equality. For example Chris proposed a simp lemma <code>a = b &lt;-&gt; (a = true &lt;-&gt; b = true)</code> which doesn't really work because it would apply to itself, but it would work if it were spelled using <code>IsTrue</code></p>\n</blockquote>\n<p>Is there a consensus on this idea? I'm interested in helping move this forward and cleaning up the <code>List</code> API. Is this something that would make sense to experiment with in Mathlib or is the next step here a refactor in std?</p>",
        "id": 400225526,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1699058883
    },
    {
        "content": "<p>It requires core changes</p>",
        "id": 400225898,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1699059112
    },
    {
        "content": "<p>Ah <code>boolToProp : Coe Bool Prop</code> is from core. So the next step would be an RFC?</p>",
        "id": 400229632,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1699060938
    },
    {
        "content": "<p>Ah there is already an RFC and PR from January. <a href=\"https://github.com/leanprover/lean4/pull/2043\">lean4#2043</a> <a href=\"https://github.com/leanprover/lean4/pull/2060\">lean4#2060</a></p>",
        "id": 400256151,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1699076034
    }
]