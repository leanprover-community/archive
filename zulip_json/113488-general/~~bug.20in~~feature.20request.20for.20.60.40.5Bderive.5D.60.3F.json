[
    {
        "content": "<p>Lean 3 (yeah I know Lean 3 is so early 2022, but I'm trying to get some PRs off the review queue before a possible flag day):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.instances.real</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">topological_ring</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">topological_space</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">@[derive topological_ring]</span>\n<span class=\"kd\">def</span> <span class=\"n\">my_reals</span> <span class=\"o\">:=</span> <span class=\"n\">ℝ</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">failed to synthesize type class instance for</span>\n<span class=\"cm\">⊢ topological_space my_reals</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>Should that not be happening?</p>",
        "id": 316328433,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671213848
    },
    {
        "content": "<p>Oh lol</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[derive [non_unital_non_assoc_ring, topological_space, topological_ring]</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">my_reals</span> <span class=\"o\">:=</span> <span class=\"n\">ℝ</span>\n</code></pre></div>\n<p>works. Doesn't work in my use case though -- will investigate further.</p>",
        "id": 316328638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671213915
    },
    {
        "content": "<p>haha found my error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[derive [non_unital_non_assoc_ring, topological_space, topological_ring]</span><span class=\"o\">]</span><span class=\"c1\">-- this comment breaks it!</span>\n<span class=\"kd\">def</span> <span class=\"n\">my_reals</span> <span class=\"o\">:=</span> <span class=\"n\">ℝ</span>\n</code></pre></div>\n<p>OK, all working now :-) . It would be nice if I could just <code>@[derive topological_ring]</code> though.</p>",
        "id": 316330588,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671214471
    },
    {
        "content": "<p>Just to check because I'm on mobile and have to scroll horizontally; the only difference is really that comment?</p>",
        "id": 316382252,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671235198
    },
    {
        "content": "<p>Yeah, <code>]--</code> fails to be parsed as <code>]</code> followed by a comment</p>",
        "id": 316385888,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671237672
    }
]