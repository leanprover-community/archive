[
    {
        "content": "<p>If I want to use a definition in a theorem, I find that I frequently have to prove a lemma stating that the defined variable is equal to its definition.  For example, if I have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"mi\">2</span>\n</code></pre></div>\n<p>and I want to rewrite an instance of y as x^2, I will have to prove</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">y_eq</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>Is there an easier way to do this?</p>",
        "id": 397769602,
        "sender_full_name": "Teddy Baker",
        "timestamp": 1697832355
    },
    {
        "content": "<p>You can drop the <code>by exact</code>, but otherwise, this seems like the way to do it</p>",
        "id": 397771764,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697833517
    },
    {
        "content": "<p>Another option is to make it an <code>abbrev</code> instead of a <code>def</code>, which makes it have reducible transparency instead of the default. Yet another option is to make <code>y_eq</code> a <code>simp</code> lemma. I'm not necessarily saying either of these are the things you should do, because it depends on context, but they are both ways of making the translation from <code>y</code> easier.</p>",
        "id": 397772009,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697833653
    },
    {
        "content": "<p>Do you think writing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y_eq</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>is easier?</p>",
        "id": 397772593,
        "sender_full_name": "Teddy Baker",
        "timestamp": 1697833984
    },
    {
        "content": "<p>At that point, you might just write <code>x ^ 2</code> where you need it, I think</p>",
        "id": 397772628,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697834014
    },
    {
        "content": "<p>You don't need <code>y_eq</code>, in the proof you can just use <code>rw [y]</code></p>",
        "id": 397772922,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697834174
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Using.20a.20.22def.22/near/397772922\">said</a>:</p>\n<blockquote>\n<p>You don't need <code>y_eq</code>, in the proof you can just use <code>rw [y]</code></p>\n</blockquote>\n<p>Are you talking about the def case? If I have <code>def y := x^2</code> and I try <code>rw [y]</code> for an instance of y inside of a lemma, it doesn't work for me</p>",
        "id": 397773658,
        "sender_full_name": "Teddy Baker",
        "timestamp": 1697834590
    },
    {
        "content": "<p>We need an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> to help you more.</p>",
        "id": 397773746,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697834640
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">ex</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">y</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>I get <br>\nfailed to rewrite using equation theorems for 'y'</p>",
        "id": 397773971,
        "sender_full_name": "Teddy Baker",
        "timestamp": 1697834740
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/Using.20a.20.22def.22/near/397772628\">said</a>:</p>\n<blockquote>\n<p>At that point, you might just write <code>x ^ 2</code> where you need it, I think</p>\n</blockquote>\n<p>This is meant to be applied to more complicated examples where x^2 could be a complicated expression</p>",
        "id": 397774096,
        "sender_full_name": "Teddy Baker",
        "timestamp": 1697834799
    },
    {
        "content": "<p>I think you've oversimplified to the point where it isn't clear what approach might be best :)</p>",
        "id": 397774370,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697834952
    },
    {
        "content": "<p>Fair enough, so I guess just figuring out if there is a way to do the previous mwe (rw [y]) without error would help me understand which way is best.  If it is just using abbrev or a simp lemma, I'm not sure if that is better than <code>variable (y : ℝ) (y_eq : y = x^2)</code> for me</p>",
        "id": 397774983,
        "sender_full_name": "Teddy Baker",
        "timestamp": 1697835287
    },
    {
        "content": "<p>Your example above doesn't work because <code>x : ℝ</code> and <code>y : ℝ → ℝ</code>.</p>",
        "id": 397775269,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697835472
    },
    {
        "content": "<p>so the equality doesn't even type check</p>",
        "id": 397775287,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697835481
    },
    {
        "content": "<p>this works just fine:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">ex</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">y</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 397775369,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697835505
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 397775425,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697835548
    },
    {
        "content": "<p>If you can <code>rfl</code>, you <code>rfl</code></p>",
        "id": 397775730,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697835712
    },
    {
        "content": "<p>Ok, yeah I think you're right that does work.  Thanks!</p>",
        "id": 397776084,
        "sender_full_name": "Teddy Baker",
        "timestamp": 1697835878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"648334\">Teddy Baker</span> has marked this topic as resolved.</p>",
        "id": 397782940,
        "sender_full_name": "Notification Bot",
        "timestamp": 1697840452
    }
]