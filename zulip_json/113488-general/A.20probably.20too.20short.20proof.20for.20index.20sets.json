[
    {
        "content": "<p>Hi everybody<br>\nI would like to prove that if I have one index set contained in another, then the union (and below the intersection) of sets over the two index sets are also contained in another. I managed to do this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span> <span class=\"c1\">--This may not be used.</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n  <span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n  <span class=\"c1\">--exercise 1.2.</span>\n  <span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">≠</span> <span class=\"bp\">∅</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">⊆</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⋃</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"o\">(</span><span class=\"bp\">⋃</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span>\n  <span class=\"n\">done</span>\n\n  <span class=\"c1\">--exercise 1.3.</span>\n  <span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">≠</span> <span class=\"bp\">∅</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">⊆</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⋂</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"o\">(</span><span class=\"bp\">⋂</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span>\n  <span class=\"n\">done</span>\n</code></pre></div>\n<p>Now strangely, the proof does not use the hypotheses h1 and h2 and Lean also gives me a warning, that they are unused. But why does the proof still work when I don’t use h1 and h2. This proof shouldn’t even work.<br>\nDid I make a mistake with the definitions of index sets in Lean?<br>\nThank you all in advance.<br>\nAll the best<br>\nMatt</p>",
        "id": 397238024,
        "sender_full_name": "Mattia Bottoni",
        "timestamp": 1697609482
    },
    {
        "content": "<p>I agree that h2 is necessary but why do you think that h1 is necessary?</p>",
        "id": 397238322,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697609627
    },
    {
        "content": "<p>Do you have a good intuition for what <code>⋃₀ ∅</code> and <code>⋂₀ ∅</code> are?</p>",
        "id": 397238627,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697609781
    },
    {
        "content": "<p>As for why the proof works, it's because your union is not over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">i\\in I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6986em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>∈</mo><mi>J</mi></mrow><annotation encoding=\"application/x-tex\">j\\in J</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span></span></span>, I and J are never mentioned in the statement of your theorems other than as hypotheses which are not used. You presumably mean <code>(⋃ j ∈ J, A j) ⊆ (⋃ i ∈ I, A i)</code>?</p>",
        "id": 397250182,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697614411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/A.20probably.20too.20short.20proof.20for.20index.20sets/near/397238322\">said</a>:</p>\n<blockquote>\n<p>I agree that h2 is necessary but why do you think that h1 is necessary?</p>\n</blockquote>\n<p>h1 is not necessary for exercise 1.3., but in the exercise on paper, h1 is given (which is why I added it in Lean too).</p>",
        "id": 397250567,
        "sender_full_name": "Mattia Bottoni",
        "timestamp": 1697614532
    },
    {
        "content": "<p>So you've answered your own question about why Lean is complaining that h1 isn't used :-) It's also not needed for 1.2.</p>",
        "id": 397250872,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697614642
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/A.20probably.20too.20short.20proof.20for.20index.20sets/near/397250872\">said</a>:</p>\n<blockquote>\n<p>So you've answered your own question about why Lean is complaining that h1 isn't used :-) It's also not needed for 1.2.</p>\n</blockquote>\n<p>That is true <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> , but I should have formulated my question better:<br>\nWhy was Lean still able to \"prove\" the statement without using h2. And you answered that with your other reply :)</p>",
        "id": 397251251,
        "sender_full_name": "Mattia Bottoni",
        "timestamp": 1697614782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/A.20probably.20too.20short.20proof.20for.20index.20sets/near/397250182\">said</a>:</p>\n<blockquote>\n<p>As for why the proof works, it's because your union is not over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">i\\in I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6986em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>∈</mo><mi>J</mi></mrow><annotation encoding=\"application/x-tex\">j\\in J</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span></span></span>, I and J are never mentioned in the statement of your theorems other than as hypotheses which are not used. You presumably mean <code>(⋃ j ∈ J, A j) ⊆ (⋃ i ∈ I, A i)</code>?</p>\n</blockquote>\n<p>Yes, that is the \"typo\" I did. So now I just have to figure out how to combine my hypothesis h with h2 in order to prove the statement.</p>\n<p>Thank you :)</p>",
        "id": 397251449,
        "sender_full_name": "Mattia Bottoni",
        "timestamp": 1697614849
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/A.20probably.20too.20short.20proof.20for.20index.20sets/near/397238627\">said</a>:</p>\n<blockquote>\n<p>Do you have a good intuition for what <code>⋃₀ ∅</code> and <code>⋂₀ ∅</code> are?</p>\n</blockquote>\n<p>I do. If I understand your notations right, they should be: <code>⋃₀ ∅ = ∅ </code> and <code>⋂₀ ∅ = \\alpha (the universal set)</code></p>",
        "id": 397252155,
        "sender_full_name": "Mattia Bottoni",
        "timestamp": 1697615095
    },
    {
        "content": "<p>Right, so both are true without the hypothesis.</p>",
        "id": 397254695,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697615861
    },
    {
        "content": "<p>By the way you observed the first part of one of the great laws of Lean: sometimes it's easy to prove a theorem because it is not stating what you mean. (The second part is that you can essentially only discover that afterwards, when you try to apply it.)</p>",
        "id": 397260493,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1697618042
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"612514\">Mattia Bottoni</span> <a href=\"#narrow/stream/113488-general/topic/A.20probably.20too.20short.20proof.20for.20index.20sets/near/397252155\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/A.20probably.20too.20short.20proof.20for.20index.20sets/near/397238627\">said</a>:</p>\n<blockquote>\n<p>Do you have a good intuition for what <code>⋃₀ ∅</code> and <code>⋂₀ ∅</code> are?</p>\n</blockquote>\n<p>I do. If I understand your notations right, they should be: <code>⋃₀ ∅ = ∅ </code> and <code>⋂₀ ∅ = \\alpha (the universal set)</code></p>\n</blockquote>\n<p><code>⋂₀ ∅ = (univ : Set \\alpha)</code></p>",
        "id": 397307369,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697633937
    },
    {
        "content": "<p>Lean distinguishes between the type <code>\\alpha</code> and the subset <code>univ</code>. This was a bit of a shock to me at first, but now it's clear to me that this is necesary, because types are types, and subsets are terms.</p>",
        "id": 397307633,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697634009
    }
]