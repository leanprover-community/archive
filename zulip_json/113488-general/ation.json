[
    {
        "content": "<p>I prepared a demo for mathematicians recently and in the process of trying to make it look more readable I noticed that there are many negations of relations that show up that we display using the not symbol. For many of these there exists a unicode symbol for the negation that we do not make use of.<br>\nFor example we often talk of congruence using the symbol <code>≡</code> so that non-congruence is written as <code>¬ a ≡ b</code>, I'd propose we add something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">local</span> <span class=\"n\">notation3</span> <span class=\"n\">a</span> <span class=\"s2\">\" ≢ \"</span> <span class=\"n\">b</span> <span class=\"s2\">\"[ZMOD \"</span> <span class=\"n\">p</span> <span class=\"s2\">\"]\"</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">¬</span> <span class=\"n\">a</span> <span class=\"bp\">≡</span> <span class=\"n\">b</span> <span class=\"o\">[</span><span class=\"n\">ZMOD</span> <span class=\"n\">p</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>so we may use <code>a ≢ b</code> instead. In many cases these notations are already in the vscode extension.<br>\nif we do this I would be happy to investigate the correct way of adding this notation so that it has good properties (e.g. such as using binop if needed).</p>\n<p>I propose we add some of these notations to mathlib, to make statements and goal states look closer to mathematics, and therefore clearer to new lean users but also ideally closer to our thought processes even if we are already used to using not everywhere (and easier to type!)<br>\nNote that I propose we add these as notations, not as defs like <code>Ne</code>, as its unclear if there are any practical advantages to having separate defs or notation typeclasses (such as like using namespaced lemmas in these situations), and adding defs seems an additional complication.<br>\nThe disadvantage of these notations would likely be the lack of clarity for the end user about what the term the noation denotes actually is (this is the case with most notations of course), I would hope that a clear docstring that shows up on hover mitigates this.</p>\n<p>In the below poll I've listed 3 options for how many of these we want to add based somewhat on how common they are in paper maths, I'd of course be happy if discussion took place before people start voting. Note that its hard to be precise about the difference between the two \"add them\" options, but it would be good to have some sense of whether people support this in limited situations or more widely.<br>\nI encourage you to look at these symbols also in vscode to get a feel for how they look with your font.</p>\n<p>p.s. the thread title is an attempt at a joke, not a typo <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 379853021,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1690650493
    },
    {
        "content": "<p>/poll to what extent should we add notations for negations of existing notation to mathlib?<br>\ndo not introduce any of these notations<br>\nintroduce those most commonly seen in mathematics, e.g.  <code>a ≢ b [ZMOD p ]</code>, <code>∤</code> (this looks odd in my zulip but fine in vscode), <code>∉</code> <code>≇</code> <code>≄``⊈</code><br>\nintroduce all possible notations allowed in unicode where we already make use of the unnegated symbol e.g. including the above but also things like <code>∄ ≰ ≮ ↛ ⋪ ↮ ↚</code></p>",
        "id": 379853048,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1690650504
    },
    {
        "content": "<p>I'm very pro this idea.</p>",
        "id": 379853521,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1690650650
    },
    {
        "content": "<p>We already have <code>∉</code> afaik.</p>",
        "id": 379853788,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1690650741
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/ation/near/379853048\">said</a>:</p>\n<blockquote>\n<p>/poll to what extent should we add notations for negations of existing notation to mathlib?<br>\ndo not introduce any of these notations<br>\nintroduce those most commonly seen in mathematics, e.g.  <code>a ≢ b [ZMOD p ]</code>, <code>∤</code> (this looks odd in my zulip but fine in vscode), <code>∉</code> <code>≇</code> <code>≄``⊈</code><br>\nintroduce all possible notations allowed in unicode where we already make use of the unnegated symbol e.g. including the above but also things like <code>∄ ≰ ≮ ↛ ⋪ ↮ ↚</code></p>\n</blockquote>\n<p>I've voted for the more consistent one, but I would like it <strong>restricted to relations</strong> and not for quantifiers/binders.<br>\nEDIT: I was completely careless with my reading, and only realized about negated implications after reading <a href=\"#narrow/stream/113488-general/topic/ation/near/379887902\">Mario's message</a> below.</p>",
        "id": 379854840,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1690651088
    },
    {
        "content": "<p>I asked for this with <code>Exists</code> before, but it had some font issues</p>",
        "id": 379871223,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690656774
    },
    {
        "content": "<p>I don't think there is a problem with <em>defining</em> these notations, but I would be against pretty printing and/or using many of them</p>",
        "id": 379887655,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690663464
    },
    {
        "content": "<p>having every occurrence of <code>¬(a → b)</code> get pretty printed as <code>a ↛ b</code> would be cool for about 5 minutes and would be a readability hazard thereafter</p>",
        "id": 379887902,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690663586
    },
    {
        "content": "<p>Could we have a <code>math</code> locale where these are in scope?</p>",
        "id": 379888059,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1690663666
    },
    {
        "content": "<p>I would prefer a recommendation along the lines \"never pretty print using them, and use them 'tastefully' in code (when the usage is especially common in a sequence of theorems, or in a theorem intended mainly for presentation)\"</p>",
        "id": 379888215,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690663744
    },
    {
        "content": "<p>With respect to negation, I am now used to the symbol, but I had to \"refresh\" it, when I first used Lean.  Same for ∧ and ∨, btw.</p>",
        "id": 379888220,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1690663746
    },
    {
        "content": "<p>In any case, while all these logic symbols are a hindrance to using Lean for mathematicians, they are definitely the least difficult of the problems, when faced with formalization!  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 379888548,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1690663923
    },
    {
        "content": "<p>on the subject of \"things we could do but probably shouldn't\", it's also possible to just use unicode combining slash as an alternative to <code>¬</code> for anything! Viva la n̷egation</p>",
        "id": 379888953,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690664135
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113488-general/topic/ation/near/379888548\">said</a>:</p>\n<blockquote>\n<p>In any case, while all these logic symbols are a hindrance to using Lean for mathematicians, they are definitely the least difficult of the problems, when faced with formalization!  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>It's interesting that you say this, because mathematicians are usually the ones pushing the extensive use of unicode</p>",
        "id": 379889158,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690664256
    },
    {
        "content": "<p>I really like unicode, but all the logic symbols are completely unfamiliar, or at least were to me.</p>",
        "id": 379889268,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1690664299
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/ation/near/379887902\">said</a>:</p>\n<blockquote>\n<p>having every occurrence of <code>¬(a → b)</code> get pretty printed as <code>a ↛ b</code> would be cool for about 5 minutes and would be a readability hazard thereafter</p>\n</blockquote>\n<p>Right, this is essentially what I was thinking of when I added the second option in the poll, I would agree myself that in the case of implies it is not particularly helpful to display the not implies symbol in the goal state. Adding the notations but not the delaborators in this case is a good suggestion though.</p>",
        "id": 379889403,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1690664396
    },
    {
        "content": "<p>I had to dig up several mnemonics to remember what ¬, ∧ and ∨ meant.  The implication arrows were ok, since they are fairly similar to the more familiar notation.</p>",
        "id": 379889404,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1690664397
    },
    {
        "content": "<p>Like I said, I really think we should try to use unicode 'tastefully'. The more entropy you put in each character, the higher the cognitive load when scanning text and also the better eyesight you need to have to distinguish characters. This is a serious issue, especially with stuff like <code>|</code> vs <code>\\|</code> or <code>-&gt;</code> vs <code>--&gt;</code></p>",
        "id": 379889459,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690664405
    },
    {
        "content": "<p>most of the rest of the programming world (even the parts that have embraced unicode) has already cottoned on to this issue with unicode 'confusables', and I'm pretty sure we have to disable some warnings that vscode would normally give for lean text because we blatantly violate recommendations in this area</p>",
        "id": 379889792,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690664545
    },
    {
        "content": "<p>now, negated symbols are not really the worst offenders here, but for example I would have difficulty differentiating <code>↛</code> and <code>⇝</code> at a comfortable viewing distance</p>",
        "id": 379890332,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690664831
    },
    {
        "content": "<p>(actually, on zulip it's hard to even notice that the second arrow is squiggled)</p>",
        "id": 379890401,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1690664872
    },
    {
        "content": "<p>Let's not forget that how these things render on GitHub is also important; we have to care about fonts in vscode, zulip, and GitHub, many of which are presumably platform-dependent.</p>",
        "id": 379895283,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690667707
    },
    {
        "content": "<p>(Unfortunately android still seems to be a lost cause... Maybe I need to find some strings to pull...)</p>",
        "id": 379895299,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1690667734
    },
    {
        "content": "<p>Yeah, the lack of Unicode support on Zulip for Android is <em>painful</em></p>",
        "id": 379896393,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1690668321
    },
    {
        "content": "<p>I edited my message below and retracted my vote. My updated opinion is something like the second option but <strong>excluding</strong> all logical connectives and quantifiers: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi></mrow><annotation encoding=\"application/x-tex\">\\forall</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span></span></span></span> , <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi></mrow><annotation encoding=\"application/x-tex\">\\exists</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∃</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span></span></span></span>, etc.<br>\nI'm making a new option, but perhaps this is just noise.</p>",
        "id": 379896875,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1690668714
    },
    {
        "content": "<p>I think thats actually quite close to what I had in mind for the second one to begin with, which is why I put exists and rightarrow as examples for the last option. As far as I know there isn't a unicode not for all symbol either.</p>",
        "id": 379902748,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1690672991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113488-general/topic/ation/near/379888548\">said</a>:</p>\n<blockquote>\n<p>In any case, while all these logic symbols are a hindrance to using Lean for mathematicians, they are definitely the least difficult of the problems, when faced with formalization!  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>I wouldn't underestimate this hindrance. Consider, e.g., Appendix C.3 of <a href=\"https://cr.yp.to/papers/lprrr-20230317.pdf\">https://cr.yp.to/papers/lprrr-20230317.pdf</a> presenting a formalization of that paper's main theorem and comparing it line by line to the original statement of the theorem. In this context, unfamiliar notation generally requires explanation (e.g., the appendix says <code>/\\ is conjunction</code>; there are a few corners of mathematics where this is standard notation modulo typography, but most mathematicians don't use it) and imposes a translation load on the reader that would have been avoided by familiar notation (e.g., <code>and</code>). Writing this comparison didn't add much to the time spent writing proofs, but for the _reader_ the proof-reading time is unimportant while the theorem-reading time is important.</p>",
        "id": 379952090,
        "sender_full_name": "D. J. Bernstein",
        "timestamp": 1690701491
    },
    {
        "content": "<p>For the specific question at hand, I think that a pretty-printer replacing ¬(... relation symbol ...) with a slashed relation symbol is an improvement in readability for most mathematicians, whether or not the relation symbol was familiar in the first place.</p>",
        "id": 379998775,
        "sender_full_name": "D. J. Bernstein",
        "timestamp": 1690715184
    }
]