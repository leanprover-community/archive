[
    {
        "content": "<p>This causes a timeout unless you tell <code>simp only</code> not to decide:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.LocallyFinite</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Int.Interval</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kd\">def</span> <span class=\"n\">square</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">ℤ</span> <span class=\"bp\">×</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">((</span><span class=\"n\">Finset.Icc</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">Finset.Icc</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">max</span> <span class=\"n\">x.1.natAbs</span> <span class=\"n\">x.2.natAbs</span> <span class=\"bp\">=</span> <span class=\"n\">m</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">square_eq</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">square</span> <span class=\"n\">n.succ</span> <span class=\"bp\">=</span>\n    <span class=\"n\">Finset.Icc</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"n\">n.succ</span><span class=\"o\">,</span><span class=\"bp\">-</span><span class=\"n\">n.succ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span> <span class=\"bp\">×</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n.succ</span><span class=\"o\">,</span><span class=\"n\">n.succ</span><span class=\"o\">)</span> <span class=\"bp\">\\</span>\n    <span class=\"n\">Finset.Icc</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">),</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">,</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"c1\">-- times out</span>\n    <span class=\"c1\">-- need `simp (config := {decide := false}) only`</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">n</span> <span class=\"n\">ih</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>It's not clear to me what makes this hard to decide; <code>rfl</code> closes the goal instantly.</p>",
        "id": 383710075,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1691689008
    },
    {
        "content": "<p>There have been several aborted attempts at changing the default in <code>simp</code> to <code>decide := false</code>. Maybe it's time for someone to try again.</p>",
        "id": 383827497,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1691730877
    }
]