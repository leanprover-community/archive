[
    {
        "content": "<p>As some of you might know, the WebAssembly language has been co-developed with <a href=\"https://webassembly.github.io/spec/core/\">its formal spec</a>, and this subsequently has been mechanized in Isabelle and then Coq. So far, the three artifacts (formal prose spec, formal math spec, Isabelle, Coq) have to be kept in sync manually. To improve this the people behind WebAssembly started to build a tool that generates these artifacts from a common source of truths.</p>\n<p>Over the Easter holidays, I had fun targetting, as the _first_ theorem prover backend of this tool, Lean4, and it is now “essentially complete” with regard to the current (incomplete) input spec of this (still very WIP) tool. This is the current output:</p>\n<p><a href=\"https://github.com/Wasm-DSL/spectec/blob/joachim/spectec/test-lean4/SpecTec.lean\">https://github.com/Wasm-DSL/spectec/blob/joachim/spectec/test-lean4/SpecTec.lean</a></p>\n<p>(This is still on a branch, see &lt;<a href=\"https://github.com/Wasm-DSL/spectec/pull/2\">https://github.com/Wasm-DSL/spectec/pull/2</a>&gt; for status on its merge progress.)</p>\n<p>Posting this here in case someone wants to play around with it.</p>\n<p>And, thinking a bit bigger, maybe some people want to get behind a community effort making the Lean4 formalization of the WebAssembly spec at least as good as <a href=\"https://github.com/WasmCert/WasmCert-Isabelle\">the Isabelle one</a> (maintained basically by one very talented person, Conrad Watt) and <a href=\"https://github.com/WasmCert/WasmCert-Coq\">the Coq one</a> (maintained by a research group around Philippa Gardner).</p>",
        "id": 348778976,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1681316621
    }
]