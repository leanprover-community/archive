[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">equiv</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ring_aut</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">g</span> <span class=\"n\">x</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">function expected at</span>\n<span class=\"cm\">  g</span>\n<span class=\"cm\">term has type</span>\n<span class=\"cm\">  α ≃+* α</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 195688445,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588156086
    },
    {
        "content": "<p>what's the canonical workaround?</p>",
        "id": 195688465,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588156098
    },
    {
        "content": "<p>g.to_equiv</p>",
        "id": 195688671,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1588156239
    },
    {
        "content": "<p>For some reason they decided that a coercion to a function was not a good idea?</p>",
        "id": 195688724,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588156279
    },
    {
        "content": "<p>well that wouldn't be structually equivalent</p>",
        "id": 195688737,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588156283
    },
    {
        "content": "<p>Why not?</p>",
        "id": 195688748,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588156294
    },
    {
        "content": "<p>I've found that this works:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">has_coe_to_fun</span><span class=\"bp\">.</span><span class=\"n\">coe</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"err\">≃</span><span class=\"bp\">+*</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x</span>\n</code></pre></div>",
        "id": 195688755,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588156300
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/ring_aut.20coerce.20to.20function/near/195688748\" title=\"#narrow/stream/113488-general/topic/ring_aut.20coerce.20to.20function/near/195688748\">said</a>:</p>\n<blockquote>\n<p>Why not?</p>\n</blockquote>\n<p>because it doesn't use <code>has_coe_to_fun.coe</code></p>",
        "id": 195688767,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588156315
    },
    {
        "content": "<p>Oh so there _is_ a coercion to fun?</p>",
        "id": 195688831,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588156330
    },
    {
        "content": "<p>yeah</p>",
        "id": 195688837,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588156335
    },
    {
        "content": "<p>So just coercing g to \\a -&gt; \\a directly doesn't work?</p>",
        "id": 195692217,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588158327
    },
    {
        "content": "<p>Is this something to do with coe_t or has_lift or whatever? I've never understood the details of that stuff</p>",
        "id": 195692291,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588158379
    }
]