[
    {
        "content": "<p>In the following program, only the first line fails. The last 3 seems to \"type-check\". Is it a bug, or am I misunderstanding either the type <code>Fin</code> or the interaction with <code>#check</code>? This is from (version 4.0.0-nightly-2023-04-20, commit f9da1d8b55ca):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"mi\">42</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"o\">(⟨</span><span class=\"mi\">42</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"mi\">42</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"o\">(⟨</span><span class=\"mi\">42</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 354637289,
        "sender_full_name": "Phil Nguyen",
        "timestamp": 1682845299
    },
    {
        "content": "<p>For examples 2 and 4, this is expected, it prints the result including metavariables and of course those holes might not be solvable</p>",
        "id": 354638003,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682845500
    },
    {
        "content": "<p>although it would be better if there was also an error over the hole itself, similar to what you get with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:=</span> <span class=\"o\">(⟨</span><span class=\"mi\">42</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 354638245,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682845552
    },
    {
        "content": "<p>for example 3, this is also expected but for a different reason: <code>Fin n</code> has all numerals when <code>n &gt; 0</code>, the interpretation of <code>m : Fin n</code> is as <code>m % n</code> so <code>42 : Fin 1</code> is actually 0</p>",
        "id": 354638469,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682845629
    },
    {
        "content": "<p>you can demonstrate this by replacing all the <code>#check</code>s with <code>#eval</code></p>",
        "id": 354638743,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1682845725
    },
    {
        "content": "<p>Oh I see. Thanks!!</p>",
        "id": 354639338,
        "sender_full_name": "Phil Nguyen",
        "timestamp": 1682845902
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"476925\">Phil Nguyen</span> has marked this topic as resolved.</p>",
        "id": 354639342,
        "sender_full_name": "Notification Bot",
        "timestamp": 1682845905
    },
    {
        "content": "<p>Maybe to make the metavariable situation in the second example slightly more clear, it's also fine if that placeholder is a local variable:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">42</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"o\">(⟨</span><span class=\"mi\">42</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 354640316,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1682846200
    }
]