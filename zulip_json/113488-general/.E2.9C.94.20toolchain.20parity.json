[
    {
        "content": "<p>Is it permissible for a lean 4 project to import other lean projects that use different lean toolchains? Are there problems that can arise if the toolchains are different?</p>",
        "id": 360595940,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1684862685
    },
    {
        "content": "<p>I don't really understand what a toolchain is, but I was trying to get a project to work, and they suggested I had to update their toolchain. But the project itself imports many other projects, so I am trying to figure out if I need to update those toolchains as well.</p>",
        "id": 360596676,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1684862900
    },
    {
        "content": "<p>What is lake manifest? Is it something I'm not supposed to touch?</p>",
        "id": 360608580,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1684866036
    },
    {
        "content": "<p>It keeps getting overwritten by <code>lake update</code></p>",
        "id": 360608649,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1684866058
    },
    {
        "content": "<p>There is no mention of <a href=\"https://leanprover.github.io/lean4/doc/setup.html?search=manifest\">\"manifest\" in the lean manual.</a></p>",
        "id": 360608960,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1684866132
    },
    {
        "content": "<p>If <code>lake-manifest.json</code> is something I'm not supposed to touch I'd appreciate a note at the top of the file telling me so.</p>",
        "id": 360610277,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1684866482
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> has marked this topic as resolved.</p>",
        "id": 360611147,
        "sender_full_name": "Notification Bot",
        "timestamp": 1684866689
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> <a href=\"#narrow/stream/113488-general/topic/.E2.9C.94.20toolchain.20parity/near/360610277\">said</a>:</p>\n<blockquote>\n<p>What is lake manifest? Is it something I'm not supposed to touch?<br>\n...<br>\nIf <code>lake-manifest.json</code> is something I'm not supposed to touch I'd appreciate a note at the top of the file telling me so.</p>\n</blockquote>\n<p>The manifest file is defined in the <a href=\"https://github.com/leanprover/lake#layout\">lake readme</a>. Lake and Lean are separate programs.  Json doesn't support comments by default, so that might cause some issues with the warning strategy.</p>",
        "id": 360618084,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1684868671
    },
    {
        "content": "<p>The toolchain is the version of lean you are using in the project. When importing a package, it is built with the project's version of lean. This might just work fine, but might also break, if the package's code does not run under the used lean version. (e.g. if a command you use has been renamed/deleted in the version of lean your project uses)</p>\n<p>In practise I found that most (smaller) packages work fine under different (recent) toolchains, and if not then it's probably time for the maintainer to update that package. However, <code>mathlib</code> works really bad in a project with the wrong toolchain because then it can't use the cache and would have to rebuild everything against this different lean version, which takes hours and will probably fail somewhere.</p>\n<p>As far as I know the files <code>lake-packages/xy/lean-toolchain</code> are not relevant for your project and aren't used at all. They just tell you against which version of lean this package is guaranteed to compile.</p>",
        "id": 360654362,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1684883267
    }
]