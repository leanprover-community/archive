[
    {
        "content": "<p>I'm again mathlib-blind. Who can help me find maximal elements of a poset, and their API?</p>",
        "id": 160676241,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552491089
    },
    {
        "content": "<p>I don't think we have anything for that. Usually we just write out the condition, e.g. <code>zorn</code></p>",
        "id": 160677023,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552491573
    },
    {
        "content": "<p>I can't believe Johannes missed an opportunity to write a general order API</p>",
        "id": 160677134,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552491620
    },
    {
        "content": "<p>I was surprised I had to add several lemmas on orders and unions for #PR816. It seems there is no end to what will be ever needed about this.</p>",
        "id": 160678230,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552492294
    },
    {
        "content": "<p>What a subtle way to advertise a new PR!</p>",
        "id": 160678359,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552492368
    },
    {
        "content": "<p>Almost half of the PR is about orders and general lemmas, in fact!</p>",
        "id": 160678432,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552492417
    },
    {
        "content": "<p>And yes, very nice PR indeed :)</p>",
        "id": 160678456,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552492433
    },
    {
        "content": "<p>It may have helped to cut the PR in two pieces. The order stuff could be reviewed completely independently</p>",
        "id": 160678864,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552492642
    },
    {
        "content": "<p>This is is still an amazing PR</p>",
        "id": 160678879,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552492651
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/issues/816\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/816\">#816</a></p>",
        "id": 160678913,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552492677
    },
    {
        "content": "<p>seemed like the easiest way to get my browser to go to it</p>",
        "id": 160678975,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552492698
    },
    {
        "content": "<p>So we're on the way to the open mapping theorem?</p>",
        "id": 160679245,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552492835
    },
    {
        "content": "<p>Yes, that's the next PR :)</p>",
        "id": 160679263,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552492855
    },
    {
        "content": "<p>Especially, the last lemma of <a href=\"https://github.com/leanprover/mathlib/issues/816\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/816\">#816</a> is written directly for this.</p>",
        "id": 160679357,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552492920
    },
    {
        "content": "<p>I'm a bit lost in all your work. What happened to the Gromov-Hausdorff distance, is it merged in mathlib?</p>",
        "id": 160679445,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552492958
    },
    {
        "content": "<p>Not submitted to mathlib yet, because it builds on not-yet merged PRs (<a href=\"https://github.com/leanprover/mathlib/issues/743\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/743\">#743</a> completion of metric spaces, <a href=\"https://github.com/leanprover/mathlib/issues/732\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/732\">#732</a> inductive limit of metric spaces).</p>",
        "id": 160679601,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552493061
    },
    {
        "content": "<p>Ok, this is what I thought. So you began another thread of PR to keep you busy?</p>",
        "id": 160679651,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552493100
    },
    {
        "content": "<p>You know the power of procrastination: I had to refer a paper, so I decided to do the open mapping theorem instead.</p>",
        "id": 160679713,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552493145
    },
    {
        "content": "<p><a href=\"http://www.structuredprocrastination.com/\" target=\"_blank\" title=\"http://www.structuredprocrastination.com/\">http://www.structuredprocrastination.com/</a></p>",
        "id": 160679811,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552493196
    },
    {
        "content": "<p>heh, this article definitely resonates with me</p>",
        "id": 160706523,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552498290
    },
    {
        "content": "<p>It turns out that the open mapping theorem requires the base field to have an element with norm different from 1 (exercise: construct a counter-example over F_2 with the trivial norm). There are three options:</p>\n<ul>\n<li>add this as an assumption to the theorem</li>\n<li>add a typeclass about this, and check that R, C and p-adics are instances of this typeclass</li>\n<li>add this to the very definition of normed_field, since it makes no sense anyway to use a normed field with all elements of norm 1.</li>\n</ul>\n<p>My preferred option is clearly the third one, but I would like to have your opinion on this (especially, maybe I am missing some applications of stupid normed fields). </p>\n<p>By the way, In Bourbaki, they call this \"corps valué non-discret\", which collides nicely with the definition of \"discrete field\" in Lean.</p>",
        "id": 160889373,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552666634
    },
    {
        "content": "<p>Does Bourbaki say anything about \"corps valué discret\" and why they might be interesting?</p>",
        "id": 160890151,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552667234
    },
    {
        "content": "<p>No, in nontrivial theorems they always use \"corps valué non-discret\" and I did not find anything about \"corps valué discret\"</p>",
        "id": 160893015,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552669292
    },
    {
        "content": "<p>I think the trivial norm is as much a norm as the discrete metric is a metric</p>",
        "id": 160896269,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552671512
    },
    {
        "content": "<p>Sure. We could have a typeclass <code>normed_field</code> and a typeclass <code>nondiscrete_normed_field</code> extending it. But if there are absolutely no applications of <code>normed_field</code>, then what is the point of complicating uselessly the typeclass graph, which is already complicated enough? This is really different from metric spaces, where one uses routinely finite metric spaces.</p>",
        "id": 160897881,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552672537
    },
    {
        "content": "<p>there are finite fields?</p>",
        "id": 160899998,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552673943
    },
    {
        "content": "<blockquote>\n<p>I think the trivial norm is as much a norm as the discrete metric is a metric</p>\n</blockquote>\n<p>Actually the theory becomes quite different for non-trivial norms. The book \"non-archimedean analysis\" by Bosch, Guentzer and Remmert, which I read from cover to cover as a post-doc, starts with the words \"let k be a field complete with respect to a non-trivial non-archimedean norm\", and this non-triviality hypothesis is never dropped. I was skeptical (like Mario is now) -- surely the results are going to be true in the case where the norm is trivial, but just uninteresting. But actually the non-triviality really plays an important role -- it enables one to scale vectors so they have norm at most 1. A fundamental result about Banach spaces is that a map between them is continuous if and only if it is bounded. The proof crucially needs an element of non-trivial norm, and indeed turns out to be false for vector spaces over fields with trivial norm, because there is no topology so everything is continuous, but things are not in general bounded. Because a huge amount of the theory depends on this foundational result, I suspect that this is why the non-triviality of the norm is introduced right from the outset in BGR.</p>",
        "id": 160902978,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552676010
    },
    {
        "content": "<blockquote>\n<p>there are finite fields?</p>\n</blockquote>\n<p>Yes, there are finite fields, but you will never use them as normed fields.</p>",
        "id": 160905805,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552678015
    },
    {
        "content": "<p>Every single example I've seen of a trivial norm on a field is to say \"oh look, this lemma works even if the norm is trivial, and it turns into a standard algebraic fact which we all knew, and which we probably assumed in the middle of the proof of the lemma\"</p>",
        "id": 160905855,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552678071
    },
    {
        "content": "<p>However in the perfectoid project it is essential that we allow trivial valuations.</p>",
        "id": 160905916,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552678092
    },
    {
        "content": "<p>The difference is that we are doing ring theory not field theory perhaps</p>",
        "id": 160905996,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552678155
    },
    {
        "content": "<p>Ha, that's an argument in favor of keeping the current <code>normed_field</code>. Then I will go for the solution <code>nondiscrete_normed_field</code> as a typeclass.</p>",
        "id": 160906049,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552678198
    },
    {
        "content": "<p>Oooh, but given one of those valuations, you still can't build a <code>normed_field</code>... they are too general.</p>",
        "id": 160906167,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552678251
    },
    {
        "content": "<p>Our valuations take values in some arbitrary lin.order.comm.group</p>",
        "id": 160906194,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552678267
    },
    {
        "content": "<p>Yes, we have already written a 1000 line valuation API where a valuation goes from a general commutative ring into a fairly general linearly ordered monoid (for example the nonnegative reals under multiplication)</p>",
        "id": 160908842,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552680177
    },
    {
        "content": "<p>I ran into the issue that I needed a normed_field to be non-discrete in showing that derivatives are unique <a href=\"https://github.com/leanprover-community/mathlib/issues/830\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/830\">#830</a> as well.</p>",
        "id": 160996410,
        "sender_full_name": "Jan-David Salchow",
        "timestamp": 1552824814
    },
    {
        "content": "<p>So I'm wondering, should we really have normed_field and nondiscrete_normed_field, or would potentially_discrete_normed_field and normed_field be better?</p>",
        "id": 160996452,
        "sender_full_name": "Jan-David Salchow",
        "timestamp": 1552824872
    },
    {
        "content": "<p>The standard math terminology is really nondiscrete normed field, so I would rather keep it is at is now to avoid surprises to users. But I don't have a very strong opinion on this.</p>",
        "id": 160996990,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1552825888
    }
]