[
    {
        "content": "<p>Paperproof was announced here: <a href=\"#narrow/stream/113486-announce/topic/Announcing.20Paperproof\">https://leanprover.zulipchat.com/#narrow/stream/113486-announce/topic/Announcing.20Paperproof</a></p>\n<p>This is a thread for questions and discussions related to the announcement.</p>",
        "id": 397708647,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697808071
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"480079\">@Evgenia Karunus</span> Thanks for creating paperproof! This looks like a nice mode for beginners. I have some UI/UX questions:</p>\n<ul>\n<li>Looking at the screencasts, it feels to me like the boxes take up quite a bit of space. Have you considered a \"compact mode\" with smaller padding for the boxes?</li>\n<li>Are you considering input options for paperproof? Or is it meant as an output/display mode only? I'm thinking of point-and-click / drag-n-drop UIs for certain tactics.</li>\n</ul>\n<p>Maybe this should be orthogonal to paperproof, so that the regular infoview can also benefit from it... I have no idea if that would be possible from a design point of view.</p>",
        "id": 397709459,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1697808323
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, re:more compact version - highly desired, but we first plan to switch from tldraw.js to vanilla react - making these changes within the confines of tldraw is surprisingly hard. Another trick for making the proof look compact is subgoal collapsing - also would be straightforward with vanilla react.</p>\n<p>Same goes for point&amp;clicking/drag&amp;dropping - also will be straightforward with vanilla react, and is also a desired functionality - this one we need because we want intergration with ReProver where the user creates a node with a new hypothesis/goal type, and ReProver suggests a tactic. In fact <span class=\"user-mention\" data-user-id=\"584504\">@Kaiyu Yang</span> &amp; <span class=\"user-mention\" data-user-id=\"599399\">@Anton Kovsharov</span>  <a href=\"https://github.com/lean-dojo/ReProver/pull/17\">already trained</a> a custom ReProver model for us that returns a tactic based on [current tactic state, desired after state with the nodes we added], works pretty great locally.</p>",
        "id": 397767011,
        "sender_full_name": "Evgenia Karunus",
        "timestamp": 1697831037
    },
    {
        "content": "<p>I was curious to try it in mathlib, but it seems like it needs a bunch of code changes to the project to work. Are there ideas on avoiding that?</p>",
        "id": 397771901,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697833578
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>, nope, you don't need any code changes to make it work (only <code>require Paperproof ...</code> in lakefile.lean and <code>import Paperproof</code> in a file you're working on), it should work as is. Are you stumbling upon some issue during the installation?</p>",
        "id": 397779993,
        "sender_full_name": "Evgenia Karunus",
        "timestamp": 1697838571
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"480079\">@Evgenia Karunus</span> Thank you for this interesting development!  Some first impressions from the<br>\n<a href=\"/user_uploads/3121/Yb7E0hWhlj_AxuID-dbNX3pt/Screen-Shot-2023-10-21-at-1.00.52-AM.png\">following (artificial) example:</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Yb7E0hWhlj_AxuID-dbNX3pt/Screen-Shot-2023-10-21-at-1.00.52-AM.png\" title=\"following (artificial) example:\"><img src=\"/user_uploads/3121/Yb7E0hWhlj_AxuID-dbNX3pt/Screen-Shot-2023-10-21-at-1.00.52-AM.png\"></a></div><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Linarith</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.GCongr</span>\n<span class=\"kn\">import</span> <span class=\"n\">Paperproof</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">gcongr</span>\n    <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"mi\">5</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">gcongr</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"mi\">9</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span>\n  <span class=\"n\">clear</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n  <span class=\"n\">linarith</span>\n</code></pre></div>\n<ol>\n<li>Would it be possible to notice when a tactic invokes a hypothesis without naming it.  E.g. in this example the first <code>gcongr</code> uses <code>h1</code>, the second uses <code>h2</code>, and the <code>linarith</code> uses <code>h3</code>, but there is no little arrow to the box like there is if I change to respectively <code>rel [h1]</code>, <code>rel [h2]</code>, <code>linarith only [h3]</code></li>\n<li>The <code>calc</code> is presented out of order in the above example, how hard would it be to enforce that the <code>calc</code> appears in the same (transitive) order as in the code?</li>\n</ol>",
        "id": 397816033,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1697864847
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113488-general/topic/paperproof.20discussion/near/397816033\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"480079\">Evgenia Karunus</span> Thank you for this interesting development!  Some first impressions from the<br>\n<a href=\"/user_uploads/3121/Yb7E0hWhlj_AxuID-dbNX3pt/Screen-Shot-2023-10-21-at-1.00.52-AM.png\">following (artificial) example:</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Linarith</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.GCongr</span>\n<span class=\"kn\">import</span> <span class=\"n\">Paperproof</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">gcongr</span>\n    <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"mi\">5</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">gcongr</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"mi\">9</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span>\n  <span class=\"n\">clear</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n  <span class=\"n\">linarith</span>\n</code></pre></div>\n<ol>\n<li>Would it be possible to notice when a tactic invokes a hypothesis without naming it.  E.g. in this example the first <code>gcongr</code> uses <code>h1</code>, the second uses <code>h2</code>, and the <code>linarith</code> uses <code>h3</code>, but there is no little arrow to the box like there is if I change to respectively <code>rel [h1]</code>, <code>rel [h2]</code>, <code>linarith only [h3]</code></li>\n<li>The <code>calc</code> is presented out of order in the above example, how hard would it be to enforce that the <code>calc</code> appears in the same (transitive) order as in the code?</li>\n</ol>\n</blockquote>\n<p>Hi Heather,<br>\nthanks for the great example</p>\n<p>Regarding <a href=\"https://github.com/leanprover-community/mathlib4/pull/2\">#2</a>, unfortunately our Lean InfoTree parser doesn't support it yet, you'll need to annotate <code>have h3</code> with the type and also use <code>by calc</code> for now<br>\n<a href=\"/user_uploads/3121/Aqrr45BozukliVp0vBJj_Nhd/Screenshot-2023-10-22-at-22.48.49.png\">Screenshot-2023-10-22-at-22.48.49.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Aqrr45BozukliVp0vBJj_Nhd/Screenshot-2023-10-22-at-22.48.49.png\" title=\"Screenshot-2023-10-22-at-22.48.49.png\"><img src=\"/user_uploads/3121/Aqrr45BozukliVp0vBJj_Nhd/Screenshot-2023-10-22-at-22.48.49.png\"></a></div><p>To fix it we'll need to close a couple of TODO's in our parser:<br>\n1) Support multi-subproof tactics <a href=\"https://github.com/Paper-Proof/paperproof/blob/dff701770efeb9c9225095c3499acc4a4369ae46/lean/BetterParser.lean#L147\">https://github.com/Paper-Proof/paperproof/blob/dff701770efeb9c9225095c3499acc4a4369ae46/lean/BetterParser.lean#L147</a><br>\n2) Support <code>have</code>'s without type annotation<br>\n3) Support term based have definition</p>\n<p>hopefully we will be able to resolve all of it soon<br>\n--<br>\nRegarding <a href=\"https://github.com/leanprover-community/mathlib4/pull/1\">#1</a> ideally we would like to show the hypothesis used in the term assigned to the metavariable constructed by tactic (e.g. like show_term command from Lean 3). So that <code>linarith</code>,<code>simp</code>, etc show the hypothesis actually used. I was looking into that however struggled to connect dots with my mental model and used simple command syntax parsing for the first version.<br>\nI'm going to revisit it too, as the behaviour you mentioned is the desirable one. </p>\n<p>I'm going to track work on this issue here <a href=\"https://github.com/Paper-Proof/paperproof/issues/27\">https://github.com/Paper-Proof/paperproof/issues/27</a></p>",
        "id": 397974685,
        "sender_full_name": "Anton Kovsharov",
        "timestamp": 1698012023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599399\">@Anton Kovsharov</span> Thanks, I'm glad this is a useful example!</p>\n<p>By the way, do you know why the <code>calc</code> is still presented out of order in the screenshot you just posted with the type-annotated, tactic-mode <code>have ... calc ...</code>?</p>",
        "id": 397975171,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1698012644
    },
    {
        "content": "<p>(that is, I'd expect the three steps to appear left-to-right as<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>+</mo><mn>3</mn><mo>≤</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>5</mn><mo>−</mo><mn>1</mn><mo>=</mo><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">m+3\\le 2n-1\\le 2\\cdot 5-1=9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span></span></span></span>,<br>\ni.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>+</mo><mn>3</mn><mo>≤</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">m+3\\le 2n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>5</mn><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2n-1\\le 2\\cdot 5-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>⋅</mo><mn>5</mn><mo>−</mo><mn>1</mn><mo>=</mo><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">2\\cdot 5 - 1=9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span></span></span></span>)</p>",
        "id": 397975465,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1698013043
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/shAHBXOKERgu8LY4jb1UwLhH/Screenshot-2023-10-22-at-23.24.53.png\">Screenshot-2023-10-22-at-23.24.53.png</a><br>\nthat's because we didn't sort goals :D Fixed and pushed, please reload vscode</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/shAHBXOKERgu8LY4jb1UwLhH/Screenshot-2023-10-22-at-23.24.53.png\" title=\"Screenshot-2023-10-22-at-23.24.53.png\"><img src=\"/user_uploads/3121/shAHBXOKERgu8LY4jb1UwLhH/Screenshot-2023-10-22-at-23.24.53.png\"></a></div>",
        "id": 397975965,
        "sender_full_name": "Anton Kovsharov",
        "timestamp": 1698013672
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113488-general/topic/paperproof.20discussion/near/397975465\">said</a>:</p>\n<blockquote>\n<p>(that is, I'd expect the three steps to appear left-to-right as<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>+</mo><mn>3</mn><mo>≤</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>5</mn><mo>−</mo><mn>1</mn><mo>=</mo><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">m+3\\le 2n-1\\le 2\\cdot 5-1=9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span></span></span></span>,<br>\ni.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>+</mo><mn>3</mn><mo>≤</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">m+3\\le 2n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>5</mn><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2n-1\\le 2\\cdot 5-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>⋅</mo><mn>5</mn><mo>−</mo><mn>1</mn><mo>=</mo><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">2\\cdot 5 - 1=9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span></span></span></span>)</p>\n</blockquote>\n<p>I fixed all the problems mentioned above, now the example looks like:<br>\n<a href=\"/user_uploads/3121/K2VQzruAD7g69J5C-19bxO1g/Screenshot-2023-10-28-at-15.42.44.png\">Screenshot-2023-10-28-at-15.42.44.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/K2VQzruAD7g69J5C-19bxO1g/Screenshot-2023-10-28-at-15.42.44.png\" title=\"Screenshot-2023-10-28-at-15.42.44.png\"><img src=\"/user_uploads/3121/K2VQzruAD7g69J5C-19bxO1g/Screenshot-2023-10-28-at-15.42.44.png\"></a></div><p>also removing/adding <code>clear h1 h2</code> changes what linarith uses to prove final goal (h1 + h2 or h3) and you can see paperproof changing accordingly <br>\n<a href=\"/user_uploads/3121/iP7Y6BHMdN2_Pd14AGzOaLOL/Screen-Recording-2023-10-27-at-18.22.59.mov\">Screen-Recording-2023-10-27-at-18.22.59.mov</a></p>\n<p>Now as the hypothesis used by tactic are parsed from actual term assignment instead of syntax parsing, some other interesting examples are:</p>\n<ul>\n<li>\n<p>what <code>assumption</code> used<br>\n<a href=\"/user_uploads/3121/ebaD5elvghSIAaHp3HYqhfhz/Screenshot-2023-10-28-at-15.40.45.png\">Screenshot-2023-10-28-at-15.40.45.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ebaD5elvghSIAaHp3HYqhfhz/Screenshot-2023-10-28-at-15.40.45.png\" title=\"Screenshot-2023-10-28-at-15.40.45.png\"><img src=\"/user_uploads/3121/ebaD5elvghSIAaHp3HYqhfhz/Screenshot-2023-10-28-at-15.40.45.png\"></a></div></li>\n<li>\n<p>or what <code>simp [...]</code> used<br>\n<a href=\"/user_uploads/3121/QXsyqswO7h-0pR0PZJJMzGWH/Screenshot-2023-10-28-at-15.46.10.png\">Screenshot-2023-10-28-at-15.46.10.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/QXsyqswO7h-0pR0PZJJMzGWH/Screenshot-2023-10-28-at-15.46.10.png\" title=\"Screenshot-2023-10-28-at-15.46.10.png\"><img src=\"/user_uploads/3121/QXsyqswO7h-0pR0PZJJMzGWH/Screenshot-2023-10-28-at-15.46.10.png\"></a></div></li>\n</ul>",
        "id": 399019256,
        "sender_full_name": "Anton Kovsharov",
        "timestamp": 1698475580
    },
    {
        "content": "<p>You'll need to reload VS code to get a new version and call <code>lake update Paperproof</code> this time since parser also updated. We will add some reminder from extension when there is a new version of lean library and <code>lake update Paperproof</code> should be called.</p>",
        "id": 399019396,
        "sender_full_name": "Anton Kovsharov",
        "timestamp": 1698475690
    },
    {
        "content": "<p>I tried paper proof on some semantics stuff. Paper proof tried to fit to screenwidth which resulted in very small font output. Is there a setting I need to change so that it appears in normal size with scroll bars?<br>\n<a href=\"/user_uploads/3121/-tV1rm_Q-dz40Mv74XZDFytg/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/-tV1rm_Q-dz40Mv74XZDFytg/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/-tV1rm_Q-dz40Mv74XZDFytg/image.png\"></a></div>",
        "id": 400715160,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699354605
    },
    {
        "content": "<p>One suggestion is to change your VS code set up so that the paperproof window is on the bottom half of the screen, not the right half</p>",
        "id": 400718813,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1699355954
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/paperproof.20discussion/near/400718813\">said</a>:</p>\n<blockquote>\n<p>One suggestion is to change your VS code set up so that the paperproof window is on the bottom half of the screen, not the right half</p>\n</blockquote>\n<p>It doesn't help much. <br>\n<a href=\"/user_uploads/3121/XDNvFtqCgieqWon50EgrV5y7/paperproof_vertical_no_improvement.png\">paperproof_vertical_no_improvement.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/XDNvFtqCgieqWon50EgrV5y7/paperproof_vertical_no_improvement.png\" title=\"paperproof_vertical_no_improvement.png\"><img src=\"/user_uploads/3121/XDNvFtqCgieqWon50EgrV5y7/paperproof_vertical_no_improvement.png\"></a></div>",
        "id": 400734435,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699361973
    },
    {
        "content": "<p>is there an option to split the paper proof by only showing the tree upto a certain depth and linking to other \"pages\" for each subtree?</p>",
        "id": 400734670,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699362049
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/xfWI9_fnrSiW3QzeFmBvVF8A/Screen-Recording-2023-11-07-at-22.04.25.mov\">Screen Recording 2023-11-07 at 22.04.25.mov</a> you should be able to zoom in/out by clicking on the subproof rectangle and out of it</p>",
        "id": 400735770,
        "sender_full_name": "Anton Kovsharov",
        "timestamp": 1699362385
    },
    {
        "content": "<p>Ah yes, zoom and scroll works with my trackpad as soon as I click on a box (although this also shows me a blue box around the selected box which is bigger in size than the other box and cuts into neighbouring boxes)</p>",
        "id": 400737208,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699362871
    },
    {
        "content": "<p>At the moment the overlap is not a big deal. Thanks :)</p>",
        "id": 400737509,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699362972
    },
    {
        "content": "<blockquote>\n<p>although this also shows me a blue box around the selected box</p>\n</blockquote>\n<p>I haven't stumbled upon this, but this sounds like a focus ring - try pressing ESC.</p>",
        "id": 400740244,
        "sender_full_name": "Evgenia Karunus",
        "timestamp": 1699363872
    },
    {
        "content": "<p>Hitting esc makes the ring disappear while still permitting zooming and out. This does mean two steps before zooming+scrolling becomes possible, but I don't mind it. I like this way of reading proofs, especially for this topic.</p>",
        "id": 400742763,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699364709
    },
    {
        "content": "<p>I'm surprised you're stumbling upon the focus-ring issue, vscode is supposed to come with the same browser version for everyone. I suspect you somehow went into non-read-only mode, try CMD+SHIFT+P <code>Developer: Reload Webviews</code>, it's possible you won't need to ESC after that refresh.</p>",
        "id": 400743676,
        "sender_full_name": "Evgenia Karunus",
        "timestamp": 1699364989
    },
    {
        "content": "<p>Still get it</p>",
        "id": 400743852,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699365037
    },
    {
        "content": "<p>I also see blue ring (using <a href=\"http://cursor.so\">cursor.so</a>) - there is also vscode-insiders</p>",
        "id": 400744992,
        "sender_full_name": "Anton Kovsharov",
        "timestamp": 1699365389
    }
]