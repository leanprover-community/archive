[
    {
        "content": "<p>The loogle website is nice, and the bot a real gimmick, but it seems clear that the best UX is one where you don’t have to leave the editor while proving things.</p>\n<p>My vague vision for this could be a key combo or button that adds a new panel to the side or bottom, with a search field highlighted. You type your query, it shows results as you type, and once you are happy you press Enter or so (maybe ↓ first a few times if it’s not the first hit) and the name is inserted into the document (or copied to the clipboard for convenient insertion). Especially a keyboard-only flow could be quite efficient and pleasant here!</p>\n<p>I don’t think I’m the right person to do VS Code extensions (or extend existing extensions), so this is a call for help: Anyone here keen on implementing this feature? Happy to assist, advise and (I guess mostly) cheer!</p>\n<p>Initially it might be easiest to use the JSON-API on <a href=\"http://loogle.lean-lang.org\">loogle.lean-lang.org</a> directly, eventually though it should use the <code>#find</code> command and cache that comes with your local mathlib installation (once that’s the case); maybe some of the code from the loogle CLI tool needs to move to mathlib (or std? or a mathlib dependency?). But that can follow later.</p>",
        "id": 396650032,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697289161
    },
    {
        "content": "<p>I can try</p>",
        "id": 396650452,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697289558
    },
    {
        "content": "<p>The second part could be hard. Could we add a #loogle command?</p>",
        "id": 396650476,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697289589
    },
    {
        "content": "<p>Then it might be easier</p>",
        "id": 396650678,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697289726
    },
    {
        "content": "<p>Do I get a feed of all the things people looked for in their vscode? <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 396651318,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1697290236
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113488-general/topic/Call.20for.20help.3A.20Loogle.20in.20VS.20Code/near/396650476\">said</a>:</p>\n<blockquote>\n<p>The second part could be hard. Could we add a #loogle command?</p>\n</blockquote>\n<p>We are hoping to get it with the #find command when that is merged</p>",
        "id": 396651397,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1697290322
    },
    {
        "content": "<p>Where's the documentation for the loogle JSON API?</p>",
        "id": 396651973,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697290815
    },
    {
        "content": "<p>Loogle is just a wrapper around <code>#find</code> (as proposed in <a href=\"https://github.com/leanprover-community/mathlib4/pull/6363\">https://github.com/leanprover-community/mathlib4/pull/6363</a>), so that would be there. Feel free to experiment with that branch!</p>",
        "id": 396652301,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697291122
    },
    {
        "content": "<p>The JSON “API” is a GET to <a href=\"https://loogle.lean-lang.org/json?q=Real.sin,tsum\">https://loogle.lean-lang.org/json?q=Real.sin,tsum</a> and you get JSON back. Happy to adjust if you need something else of course.</p>",
        "id": 396652438,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697291261
    },
    {
        "content": "<p>Ah, I even mention this in the README at <a href=\"https://github.com/nomeata/loogle#web-service\">https://github.com/nomeata/loogle#web-service</a>, so guess that counts as documentation :-D</p>",
        "id": 396652540,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697291301
    },
    {
        "content": "<p>A follow up:<br>\nIs the output always like this: <a href=\"https://loogle.lean-lang.org/json?q=List+a+-%3E+List+a\">https://loogle.lean-lang.org/json?q=List+a+-%3E+List+a</a> <br>\nAre there other fields?</p>\n<p>Developing something that simply fetches results from loogle is  _relatively_  simple. Accessing the cache when one is created might require knowing how the cache stores its information and where.</p>",
        "id": 396652556,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697291326
    },
    {
        "content": "<p>In the long run you probably want it to be integrated with autocomplete, so you get suggestions on the spot.</p>",
        "id": 396652596,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697291388
    },
    {
        "content": "<p>It's either error and suggestions, or it's hits, header and count</p>",
        "id": 396652889,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697291561
    },
    {
        "content": "<p>All the cache handling would be handled by <code>#find</code> (via <code>lake cache get</code>), I'd expect a VS Code GUI that uses the local command to not worry about that.</p>",
        "id": 396652944,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697291620
    },
    {
        "content": "<p>Does #find return a json? If not it would be much simpler to just query the online API.</p>",
        "id": 396655088,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697293586
    },
    {
        "content": "<p>That's what I think too: start with the online API, and think about integration with a local installation (using a CLI tool, or a command and the LSP, or a local server) later.</p>",
        "id": 396655987,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697294409
    },
    {
        "content": "<p><code>#find</code> the command logs stuff to the info view, so that's obviously not great. The <code>loogle</code> CLI tool can return JSON.</p>",
        "id": 396656046,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697294474
    },
    {
        "content": "<p>Joachim, are you familiar with how this interface works in Coq and Isabelle? I'm pretty sure I saw a search panel for Coq.</p>",
        "id": 396658158,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697296503
    },
    {
        "content": "<p>Where in coq? Which ide/extension?</p>",
        "id": 396658809,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697297031
    },
    {
        "content": "<p>I'm not sure, this was in 2017 during the two weeks I spent trying Coq before giving up and installing Lean.</p>",
        "id": 396658888,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697297074
    },
    {
        "content": "<p>It was either in CoqIDE that I tried myself of in emacs if it was when I looked at Assia using Coq.</p>",
        "id": 396658942,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697297116
    },
    {
        "content": "<p>No, I'm rather ignorant here, hence the call for help.</p>",
        "id": 396659260,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697297291
    },
    {
        "content": "<p>With Isabelle I remember that I found the GUI less useful than typing the command and using the info view, so I hope we can build something better :-)</p>",
        "id": 396659340,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697297336
    },
    {
        "content": "<p>I would guess you can have a command that opens a panel in the same style as <code>Ctrl+P</code> with the options populated by loogle</p>",
        "id": 396661699,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697299429
    },
    {
        "content": "<p>(By which I mean, <a href=\"https://code.visualstudio.com/api/ux-guidelines/quick-picks\">https://code.visualstudio.com/api/ux-guidelines/quick-picks</a>)</p>",
        "id": 396662009,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697299558
    },
    {
        "content": "<p>Though maybe a custom search sidebar makes more sense</p>",
        "id": 396662246,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697299726
    },
    {
        "content": "<p>Quick pick might work well, although a sidebar would allow more interaction with the results, such as jump-to-definition.  I'll let Shreyas surprise us</p>",
        "id": 396662505,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697299970
    },
    {
        "content": "<p>One advantage of a plain text editor is that presumably vscode can autocomplete the definition names</p>",
        "id": 396662746,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697300278
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/113488-general/topic/Call.20for.20help.3A.20Loogle.20in.20VS.20Code/near/396662505\">said</a>:</p>\n<blockquote>\n<p>Quick pick might work well, although a sidebar would allow more interaction with the results, such as jump-to-definition.  I'll let Shreyas surprise us</p>\n</blockquote>\n<p>The disadvantage of sidebars is that you must switch away from your currently selected sidebar to use them. This is also why the <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22/near/396524372\">future command menu</a> is a title bar menu entry and not a sidebar. I'd personally prefer not using a sidebar for this.</p>",
        "id": 396662826,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697300377
    },
    {
        "content": "<p>I could imagine a sidebar being useful for  having separate \"name\" and \"identifier\" search fields, so that users don't have to know the syntax</p>",
        "id": 396662923,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697300472
    },
    {
        "content": "<p>The use case “I roughly know what I am looking for and want to insert it” might benefit from a quick pick, while “I need to do some serious sleuthing, and will look at types and docstrings of results and may have to refine my search a lot” more by a sidebar. Or both from the same somehow.</p>\n<p>A structured query entry is also a good idea! (Ideally as long as it doesn't slow down the experienced user)</p>",
        "id": 396664817,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1697302219
    },
    {
        "content": "<p>You need both. </p>\n<ol>\n<li>I am using quick pick because adding too many sidebars makes life painful, especially if someone wants to open documentation sidebars (or other windows with PDFs for example).</li>\n<li>I think the solution to your second requirement is to add a link to loogle from the documentation viewer. It would naturally include the search bar on the loogle webpage</li>\n</ol>",
        "id": 396665365,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697302821
    },
    {
        "content": "<p>I realized that this might be the better thread to post it. \"Loogle Lean\" is now available on the marketplace. Please check it out and let me know if you like the UI. The shortcut is <code>Ctrl+Shift+L</code>. </p>\n<p>By default selecting a hit will insert it at your cursor position if you are working in an editor. If not, it will copy the definition to your clipboard.</p>",
        "id": 400376819,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699175975
    },
    {
        "content": "<p>I'm on the road this weekend, so i can't play with it yet, but sounds great already! Please all test it and give Shreyas good feedback.</p>",
        "id": 400378189,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699176695
    },
    {
        "content": "<p>Just to make sure I'm not going to duplicate work: has someone here already started implementing this as a neovim telescope plugin?</p>",
        "id": 400383171,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1699180206
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> : I only put this up 12 hours ago.  I am not sure loogle returns enough information yet for the previewer to be useful.</p>",
        "id": 400388819,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699185230
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/113488-general/topic/Call.20for.20help.3A.20Loogle.20in.20VS.20Code/near/400383171\">said</a>:</p>\n<blockquote>\n<p>Just to make sure I'm not going to duplicate work: has someone here already started implementing this as a neovim telescope plugin?</p>\n</blockquote>\n<p>I have not yet though I certainly intended to both for Loogle and Moogle.</p>",
        "id": 400395406,
        "sender_full_name": "Julian Berman",
        "timestamp": 1699191567
    },
    {
        "content": "<p>If moogle has an API with docs, and they give permission, I can add moogle to my extension. Whom should I ask?</p>",
        "id": 400395940,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699192057
    },
    {
        "content": "<p>In the Moogle thread I believe Jesse Michael Han <a href=\"#narrow/stream/113488-general/topic/Moogle.20discussion/near/399612697\">mentioned</a> there is (internal) efforts already to bring Moogle to VSCode. But Jesse I presume would be the one to talk to if you wanted to inquire about helping!</p>",
        "id": 400396874,
        "sender_full_name": "Julian Berman",
        "timestamp": 1699192890
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466334\">@Shreyas Srinivas</span>  , could you add a nice <code>User-agent</code> to the request, possibly even with version information? It will be informative to see with which tools people use the loogle api. (Right now I think it is <code>node-fetch</code>.)</p>",
        "id": 400503313,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699266757
    },
    {
        "content": "<p>I'll try to do it in the evening. At work right now.</p>",
        "id": 400503873,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699266956
    },
    {
        "content": "<p>No rush!</p>",
        "id": 400504056,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699267011
    },
    {
        "content": "<p>Just upgraded VS Code to give it a try. Very cool already!</p>\n<p>I noticed that after issuing a search, it’s not possible (or not obvious how) to go back to the query and refine it. This might be the more relevant use case than filtering the results locally? Or somehow both ought to be possible. Maybe ↑ should go back to the query? <br>\nRelated, I’d expect Shift-Ctrl-L and then ↑ to cycle through previous queries. I’m sure you thought about this before, so just supporting that feature request :)</p>",
        "id": 400509992,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699269149
    },
    {
        "content": "<p>There is a back button</p>",
        "id": 400512204,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699270167
    },
    {
        "content": "<p>But query history is a good idea. I'll try to incorporate it</p>",
        "id": 400512269,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699270197
    },
    {
        "content": "<p>Also if you get suggestions and choose a suggestion the results for that suggestion show up</p>",
        "id": 400512421,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699270251
    },
    {
        "content": "<p>Indeed, the back button goes back to “Loogle Search”, but with an empty search field.</p>",
        "id": 400512517,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699270303
    },
    {
        "content": "<p>Okay I see what you mean</p>",
        "id": 400513095,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699270538
    },
    {
        "content": "<p>Whenever I press enter, nothing seems to happen - where should I be seeing the output?</p>",
        "id": 400513635,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1699270751
    },
    {
        "content": "<p>Also, it'd be nice to have support for the same keyboard shortcuts that Lean4 has (eg \\N -&gt; blackboard bold N)</p>",
        "id": 400513662,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1699270771
    },
    {
        "content": "<p>Did you press enter in the filter hits input?</p>",
        "id": 400513783,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699270805
    },
    {
        "content": "<p>Oh, I think first one is just from me being impatient. PEBCAK :)</p>",
        "id": 400514007,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1699270906
    },
    {
        "content": "<p>Okay, i'll add Unicode support to the list of TODOs</p>",
        "id": 400514188,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699270983
    },
    {
        "content": "<p>Does the API support this? I never tried it on the loogle webpage.</p>",
        "id": 400514467,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699271100
    },
    {
        "content": "<p>Loogle is just a wrapper around a native Lean command so I'd be surprised if it didn't</p>",
        "id": 400515103,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1699271374
    },
    {
        "content": "<p>That's not my worry. I hope the unicode stuff isn't garbled by URL encoding of requests</p>",
        "id": 400517646,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699272273
    },
    {
        "content": "<p>Should work fine, and if not we can fix it :-)</p>",
        "id": 400518292,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699272539
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/Call.20for.20help.3A.20Loogle.20in.20VS.20Code/near/400514007\">said</a>:</p>\n<blockquote>\n<p>Oh, I think first one is just from me being impatient. PEBCAK :)</p>\n</blockquote>\n<p>I think this issue is worth fixing. Users should know that the search is happening until the results arrive. The search bar shouldn't just disappear.</p>",
        "id": 400520801,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699273656
    },
    {
        "content": "<p>it'd also be nice if there'd be some way to keep results persistently! i'd be happy to help, been meaning to learn VSCode extensions for a bit - how could I contribute?</p>",
        "id": 400548813,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1699282684
    },
    {
        "content": "<p>For storage of key value pairs there is a vscode api class called Memento: <a href=\"https://code.visualstudio.com/api/references/vscode-api#Memento\">https://code.visualstudio.com/api/references/vscode-api#Memento</a></p>\n<p>Inside an extension a memento object is provided by the extension context. By configuring it and using the memento object it provides, you can add storage to the workspace. </p>\n<p>The easiest way to get into vscode extension development is the <a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\">Getting Started</a> page. Following this you can play with the examples in the <a href=\"https://github.com/microsoft/vscode-extension-samples\">repository linked here</a>. In the extension API docs, each UI item and contribution point links to an example in this repository.</p>\n<p>I need to check if I have enabled PRs on the repository. I'll do this later in the evening and get back.</p>",
        "id": 400555430,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699284428
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span> and <span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> : Version 0.06 has landed. </p>\n<ol>\n<li>Queries are now carried around and editable as requested. </li>\n<li>User agent added : <code>vscode &lt;version&gt; loogle-lean &lt;version&gt;</code></li>\n<li>I should have mentioned this before, <code>Alt + ←</code> triggers the back button</li>\n</ol>",
        "id": 400620297,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699309004
    },
    {
        "content": "<p>For the next version I want to add histories and reorganize the code a bit, before it gets too big.</p>",
        "id": 400620401,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699309043
    },
    {
        "content": "<p>I also fixed the issue where the search bar disappears too soon and well before the results arrive.</p>",
        "id": 400621665,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699309623
    },
    {
        "content": "<p>Released 0.0.7 with some polishing:</p>\n<ol>\n<li>In 0.0.6, retaining the term for filtering often filtered out all results giving the appearance of 0 hits even though there were some. So now if you want to modify the query, it shows up only in the query input.</li>\n<li>Added better place holders. Shows number of hits. </li>\n<li>Added a loading icon to reassure users that loogle is doing its thing when there are 200 hits (for example on the term <code>Nat</code>).</li>\n</ol>",
        "id": 400637136,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699318574
    },
    {
        "content": "<p>I  have been giving these updates here so that people who give me feedback are on the right version and know what's up. The changelog is also up to date, so from this point I will  only post about serious updates, or updates in response to specific requests or feedback.</p>",
        "id": 400637486,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699318762
    },
    {
        "content": "<p>Also a word about unicode: Copying and pasting in unicode actually works. It is the ability to modify inputs like <code>\\N</code> in-place  that is missing. I have to learn how the extension handles this in the first place. I'd be grateful for any help.</p>",
        "id": 400639328,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699319664
    },
    {
        "content": "<p>I'd encourage you to keep posting here what's happening. It's a good way to advertise the extension, also to new users. And people can mute a topic.</p>",
        "id": 400705014,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1699351126
    },
    {
        "content": "<p>Okay. In that case I'll keep posting here. I was afraid the messages were reaching spam proportions.</p>",
        "id": 400705381,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699351225
    },
    {
        "content": "<p>Fwiw, I think the extension may be ready for trial use by a broader audience than I initially suggested.  I welcome volunteers.</p>",
        "id": 400705814,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699351340
    },
    {
        "content": "<p>Here's the link for all new volunteers : <a href=\"https://marketplace.visualstudio.com/items?itemName=ShreyasSrinivas.loogle-lean\">https://marketplace.visualstudio.com/items?itemName=ShreyasSrinivas.loogle-lean</a></p>",
        "id": 400711816,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699353442
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> : Are there plans to bring mathlib4_docs into the doc view of the extension. Currently I am redirecting users to the webpage on an external browser. I'd like to open the docs within vscode, but it makes no sense for me to implement it separately if there are plans to have it in the extension already. (related: Is it just a webview opening a URL?)</p>",
        "id": 401031297,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1699481172
    },
    {
        "content": "<p>Version 0.08:</p>\n<ul>\n<li>Fixes a few code inconsistencies. </li>\n<li>The documentation link now takes you directly to the definition on the mathlib4_docs page, as originally intended.</li>\n</ul>\n<p>Credits to <span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span>for this version.</p>",
        "id": 403253485,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1700518138
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113488-general/topic/Call.20for.20help.3A.20Loogle.20in.20VS.20Code/near/401031297\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> : Are there plans to bring mathlib4_docs into the doc view of the extension. Currently I am redirecting users to the webpage on an external browser. I'd like to open the docs within vscode, but it makes no sense for me to implement it separately if there are plans to have it in the extension already. (related: Is it just a webview opening a URL?)</p>\n</blockquote>\n<p>I looked into this. The DocView doesn't seem to be able to render mathlib4_docs, but VS Code's own SimpleBrowser does. In the future, I'd like to refactor the DocView entirely to use SimpleBrowser, which is when I'll also add the Mathlib docs to the DocView.</p>",
        "id": 404603083,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1701168802
    },
    {
        "content": "<p>If this very far in the future, then it probably makes sense for me to try to open mathlib4_docs in SimpleBrowser from the loogle extension for now.</p>",
        "id": 404658510,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701184934
    },
    {
        "content": "<p>If it is a couple of weeks in the future, then maybe it doesn't</p>",
        "id": 404658566,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1701184948
    },
    {
        "content": "<p>I think it's OK to use SimpleBrowser for now. Since this is what I intend to refactor it for eventually anyways, you can then just change the command it calls and it should be exactly the same.</p>",
        "id": 404658814,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1701185023
    }
]